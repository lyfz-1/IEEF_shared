updated SocketAppender initialization to set remote host and port to ensure proper configuration of socket connections
refactor BasicAuthPlugin to use a dedicated method for setting prompt headers based on ajax request status to improve code readability and maintainability by reducing
replaced ` RecordDescriptor . msgLengthOffset ` with ` msgLength ` in ` ManyToOneRingBuffer . java ` to ensure correct retrieval of message length
cloudstack - 1771 : fix npe in case vmdetailcpu and vmdetailram be null
added an ` flags ` field and updated the ` getFlags ` method in ` ShadowPaint ` , along with corresponding tests in ` PaintTest ` to
updated the title of the MassSetFieldsDialog to use a localized string to improve user experience by providing a more descriptive title for field management
do n ' t fail detector test if eclipse be not use
realm . getnonce ( ) now also check for empty string
added a RemoteInput interface to handle remote connection events to improve the handling of remote input connections
added braces around conditional statements in OrcEncodedDataReader . java to improve code readability and maintainability
added a check for enabled handlers in HomeConnectBridgeHandler to ensure that only enabled handlers are processed further
added null checks before removing and adding policies to prevent potential NullPointerExceptions during execution
refactor assertions in tests to use ` matches ` instead of ` isEqualTo ` for date formatting to improve readability and maintainability of date
added JSON serialization and logging for DAG information in TezTask . java to improve debugging and traceability of DAG information retrieval
updated time retrieval logic in ComputedSummary . java and added a new method getHeapTime in HprofHeap . java to improve accuracy of heap time
updated ContributionsActivity to use CommonsApplication for upload count retrieval and removed RxJava2Tasks class to improve code maintainability and
mvtable : remove redundant check for mvstore lock mode
[ rip - 10 ] [ rip - 10 ] fix offset check in commitlog .
added a check to ensure the folder is open before marking it as open in the launcher to avoid unintended behavior when the folder is not open
added a test method to verify the sorting of PGProperty names to ensure that PGProperty names are sorted in ascending order to improve test coverage and ensure correct
removed the constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN from Common . java to streamline code by eliminating
updated the parameter type of ` supportsDrop ` and ` getUninstallTarget ` methods to use ` ItemInfo ` instead of ` Object ` to improve type
updated assertions in RequestBuilderTest to use assertThat for message validation to improve readability and clarity of error messages
replaced hardcoded fragment names with constants from NearbyListFragment and NearbyMapFragment to improve code readability and maintainability by using
[ java ] fix typo in the constructor of flatprofilecontainerfree .
added a new configuration option to send zero - anomalies in EmailConfiguration to allow users to choose whether to send email notifications
[ hotfix ] [ kafka ] [ connector / kafka ] fix flinkkafkaproducer incompatibility
remove getuser and getgeofences from datamanager
added a constructor to BlockingResponseListener that accepts a length of 2MB to improve flexibility in handling large response sizes
[ java ] remove unnecessary thread name from member broadcast event .
replaced ` System . out . println ( snapshotPaths ) ` with ` logger . info ( snapshotPaths ) ` and added a finally block to ensure resources
updated endpoint URLs in LoginSAMLAuthenticationFailureHandlerTest to correct the endpoint URL format for clarity
[ hotfix ] fix checkstyle violation in configmetadataprovidertest
updated import statements in ListFragment . java and SnoozeActivity . java to improve code clarity and maintainability by using more specific imports
added a private static class AcceptAllFilter to streamline directory stream filtering to improve code readability and maintainability by consolidating filter logic
refactor JdbcTestDataSet class to improve code readability and maintainability
do n ' t throw noclassdeffounderror when call finduniqueConcretemethod
added validation for Docker image tags in GenericContainer . java and created corresponding tests in DockerImageNameTest . java to ensure Docker image tags are correctly
updated error dialog messages in LoginActivity to provide clearer context for authentication failures
fix issue with autofocus in some form
added a test method to verify the behavior of SAML properties in the identity zone configuration to ensure proper handling of SAML properties in the identity zone configuration
added checks to ensure non - empty lists are not empty in ComparableVersion . java and a new test in ComparableVersionTest . java
updated Sheet . java to use bottomRightMode instead of topLeftMode and modified return statements to use Math . min for width and height calculations to ensure
updated package structure and imports for ParallelUniverse and ParallelUniverseTest classes to improve organization and clarity of the codebase
refactor method handle assignments in LocalCacheFactory and NodeFactory to simplify constructor usage and improve code readability
change fill pattern from FILL to FOREGROUND in FrillsAndFills . java to improve visual consistency in rendering
added functionality to draw self - loops in the processing preview to enhance visual representation of self - loops in the graph
updated configuration values and method names related to TVM solidity from " ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _
fix typo in dropwizardapprule
added a call to setTranslationY in the drag handle indicator to reset the drag handle indicator ' s position to zero to ensure the drag handle indicator starts
updated logging statements in CollectionViewer , CommunityViewer , ItemViewer , and ItemViewer to include null checks for collection ID , community ID , and handle
added documentation for query optimization in Hive configuration to clarify that filters are left in the operator tree when optimization is enabled
added an assumption to skip tests on OS X in ScanningAppProviderRuntimeUpdatesTest . java to address build server issues
added Maven bundles for " jetty - alpn - java - client " and " jetty - alpn - java - client "
act - 1771 : fix bug in executeasynclistener to not retry async job
refactor Transaction class to improve code readability and maintainability
replaced @ CustomFieldBehavior with @ ExcludeFromRuleKey in GenruleBuildable . java to exclude genrule execution from artifact caching
simonstewart : allow firefox to run on non - windows platform
added a check to ensure the existence of the ` colFamToDynamicColumnsMapping ` map before adding it to the ` colFamToDynamic
[ hotfix ] remove rawtypes from hadoopoutputcollector and hadictupleunwrappingiterator
added a check for client version below MIN _ SPLITTABLE _ SYSTEM _ CATALOG and modified table handling in MetaDataEndpointImpl . java to ensure
update student with googleid if they do n ' t exist
updated import statement for TestCellReference in AllXSSFTests . java to ensure compatibility with the latest testing framework
fix mob - > mob - > mob - > mob - > mob - > mob - > mob - > mob - > mob - > mob -
added a new file LongPointerPressTest3049 . java to implement long pointer press functionality in the Codename One sample application
truffle : do not inline method that do not resolve to constant
refactor code to streamline null checks for alias and type handling to enhance code readability and reduce redundancy
simplified the indentation check in ListBlockParser and added a new test for deeply indented lists in SpecialInputTest to improve code readability and ensure
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it to improve code organization and maintainability
added @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests related to issue 1070
[ wasm ] make test case logger more flexible
updated formatting in RouteStartupOrderLastTest . java to improve code readability
added a condition to check if the format is a video before retrieving web subscriptions to ensure that web subscriptions are only retrieved for video formats
added Security . setProperty ( " jdk . tls . disabledAlgorithms " , " " ) in ComHostnameVerifier . java and JavaxHostnameVerifier
server : do n ' t start storage pool if it ' s a local storage
updated logging statements in Driver . java and QueryResultsCache . java for improved clarity and consistency to enhance the logging output format to include the
added an option to skip updating the dependency model after managing dependencies to improve efficiency by avoiding unnecessary updates to the dependency model
added a test for sending a request with a request code in ShadowActivityTest . java and implemented the send method in ShadowActivity . java to
updated GLJPanel initialization and added FBO settings in RocketFigure3d . java to enhance rendering performance by disabling FBO and
added synchronization to the controller listeners in HydrawiseAccountHandler to ensure thread safety when modifying listener lists
added a ` @ BeforeClass ` method to disable EasyMock in Java 9 due to compatibility issues
updated the year retrieval logic in TimestampUtils and added a new DateTimeFormatter in SetObject310Test to improve accuracy of year handling and enhance date formatting
fix possible npe in jabber protocol provider .
updated the column name from " cur . ws _ commit _ id " to " cur _ ws _ commit _ id " in TxnHandler . java
refactor BufferedInputFilter to use ByteBuffer instead of ByteChunk to improve performance and reduce memory usage
added a method ` toSync ` to convert a ` CompletableFuture < T > > ` to a ` CompletableFuture < T > ` in ` AsyncUtils `
added ActionGraphBuilder to multiple compiler factories and updated method signatures accordingly to enhance action graph management and improve code clarity
danielwagnerhall : add test for upload with hidden file input and wait for it to be visible
removed redundant try - catch block for creating tables to streamline error handling for better readability
added a check to ensure the file exists before retrieving the local Maven directory to avoid potential errors when the file does not exist
[ web ] hide algebra label for hidden prefix
refactor : fix npe in ctelementimpl . getmetadata ( ) ( # 2451 )
change buffer flag from set to add .
do n ' t reorder entity entity if they be sort by id
improve error message when verify ( mock ) be not specify
added a null check for backupFolder before logging expiration messages to avoid potential NullPointerExceptions when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` that contains a test method for creating an array with a void to demonstrate the use of
added @ AddToRuleKey annotation to toolType in ClangCompiler . java and GccCompiler . java to ensure toolType is included in the rule key
added a constant for the PINCODE _ TIMEOUT variable to improve code readability and maintainability
fix flaky prometheusmeterregistrytest and prometheusexemplarssample
removed @ Ignore annotations from multiple test classes to streamline test code by eliminating unnecessary dependencies
( chore ) camel - test - infra - core : fix compile error
updated the condition to check if the table is not artifical before proceeding to ensure that non - artifical tables are processed correctly
replace fileStatus . isFile ( ) with fileStatus . isDir ( ) in FileOutputCommitterContainer . java and LaunchMapper . java to
refactor session attribute handling logic in MongoSessionManager . java to improve null and empty checks to enhance code clarity and ensure proper session management
use setsizefromlayout ( ) instead of setsize ( ) to avoid call setsize ( ) twice .
refactor stopping handling in AbstractConnector to use a local variable for stopping state to improve code readability and reduce repetitive variable assignments
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 16400 : camel - core - optimize to reduce object allocation .
( chore ) camel - test : cleanup duplicated code
replace assertTrue with a conditional failure check for WebSocketHandshakeException to improve error handling clarity
refactor AllAppsTransitionController to use View . OnLayoutChangeListener instead of a custom View . OnLayoutChangeListener to improve code readability and maintainability
refactor variable names from ` theHandler ` to ` handler ` in ` PolicyBasedAuthenticationManager . java ` to improve code readability and
int - 1114 added support for ' default - output - channel ' attribute on xpath - router
updated cacheSeconds from an integer to a String and added a @ DurationCapable annotation to enhance flexibility in cache expiration configuration
updated the version string from " 3.0 . 0 - rc1 " to " 3.0 . 0 " in multiple test files to
removed the append method call in ByteBufferPool . java to simplify buffer handling logic
added a check for the presence of the " alt - rt . jar " class in the boot class path to skip tests that are excluded from execution
updated user deletion queries in JdbcScimUserProvisioningTests to use uppercase values for userName to ensure consistency and correctness in user identification across different
updated FlightRecorderProfiler to use a dynamic list of options instead of an array to enhance flexibility in handling different Java versions
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified video handling in ` WebCamInputDialog ` to ensure
added a check for content type in HttpParser and implemented a chunked put test in ProxyServletTest to ensure proper handling of chunked PUT requests and
refactor AtmosEndpoint class to improve code readability and maintainability
added " printf " and " print " methods to conditional checks in Java2TypeScriptAdapter . java to enhance functionality to support additional target method names
added a new test class ` TestCapacityUntilGCWrapAround ` and a native method ` incMetaspaceCapacityUntilGC ` in ` WhiteBox
updated package - info . java files for mmm and ppp packages
mondrian : do n ' t increment the end time if it ' s alreadyStamped at start .
added unit test base on user forum issue
tmi - jpeg : add test for invalid icc single chunk
fix tornado rod and terra rod not be reequipable .
added a check to ignore specific entry types in JoobyModule and SpringModule to improve flexibility in handling configuration and provider registration
fix classloading issue with webapploader
add support for nameupdater . properties to nameupdatertest
added a flag to track if the ellipsoid region selection has started to ensure proper initialization of the ellipsoid region selection process
replaced instances of " http " with " https " in multiple JavaSEPort . java files to enhance security by using a secure URL for
[ geos - 10641 ] add validation for sortby in getfeature
updated null check for grantor assignment to improve clarity and avoid potential null pointer exceptions
added imports for GraphicsConfiguration and GraphicsEnvironment , and modified image rendering logic in DiagramGenerationTest . java to ensure compatibility with the specified screen device and
fix npe in fmlcommonhandler . getminecraftlogger ( )
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization to enhance maintainability and readability
fix flakiness in locktest . testlockislocked ( ) ( # 1892 )
added utility methods ` wholeWordTokenize ` and ` joinTokens ` in ` StringUtil . java ` to enhance tokenization functionality to support
do n ' t log access request if host be not available
refactor command handling in SystemHighlighter to use a dedicated commandIndex variable to improve code readability and maintainability by reducing repetitive
updated version string to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING " to prepare for upcoming release
updated buffer position calculation to use dimensionSize instead of idx to ensure correct handling of buffer dimensions
added support for handling drag and drop states in multiple classes to enhance drag - and - drop functionality and improve user interaction
[ java ] disable socketappender on java 7 .
added support for PSK - AES256 - GCM - SHA384 and TLSv1.2 encryption in TestCipher . java to enhance security
update description text to use getLongDescription ( ) instead of getDescription ( ) to ensure accurate description representation
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the value field
added support for schema singing in HQL queries to enhance query functionality to support schema singing in SQL queries
( chore ) camel - core : fix typo in subscriptionhelper
refactor Parser class to improve code readability and maintainability
updated the ` offsetStreamIndex ` method to accept an additional parameter ` indexStartsAtOne ` and adjusted track selection logic to enhance flexibility in
tika - 697 -- fix mime type detection for tika - 697
[ hotfix ] remove unused flinksqloperatortable # getmonotonicity
added ` EqualsBuilder ` and ` hashCode ` methods to ` OneTimeTokenAccount ` , ` OneTimeToken ` , and ` OneTime
added a condition to check if the assistant is not launched before fling in AssistantTouchConsumer . java to ensure proper handling of fling when
added a new file SolarisShortDSA . java that implements a DSA key pair generation and verification using Solaris to address compatibility issues with Solaris
added a method to toggle the search label in ListFragment to improve user experience by allowing search functionality
cloudstack - 1771 : lock volume when create snapshot on secondary storage
refactor FileDetailActivity to encapsulate service connection handling to improve code readability and maintainability by separating connection management
replaced direct failure handling with an AtomicReference for request failure to improve clarity and ensure proper exception assertion to enhance code readability and maintainability by
removed the equals method from ConjunctionScorer to simplify the code and improve readability
added null check for item in bindItems method to avoid potential NullPointerExceptions during item binding
wait for metadata group to be ready before wait for leader election
updated cache size checks to use a variable for better readability to improve code clarity and maintainability
updated API endpoint path from v2 to v3 across multiple files to align the API with the latest API specifications
added an ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check if there are no items to process
drill - 8023 : fix nullpointerexception when read empty dictionary page
updated method signatures and argument handling in SerumStreamingService . java to improve input validation and error handling to enhance code robustness and ensure
add a config option to disable the charge animation when an item be charge on top of a mana pool .
[ java ] make clusternoderestarttest more robust against timeout .
updated catch block to log exceptions instead of ignored ones to improve error handling clarity
updated test assertions in DefaultServletTest . java to use assumeTrue for directory creation to enhance test reliability by ensuring question directories support
added duplicate calls to StyleInjector for dialog and open screen styles to ensure consistent styling across the application
changed the type of ` changeLogFile ` and ` outputFile ` from ` String ` to ` FileResource ` and updated related methods to use `
fix a bug in blockvector . equals ( ) , which be break in previous commit
refactor LongConcurrentLRUMap to use final modifiers for key and value variables to improve code readability and maintainability by enforcing immutability
added regex support for resource configuration to enhance flexibility in handling resource configuration
updated KRB5CCNAME environment variable handling and improved argument handling in EmptyCC . java to enhance cache management and provide clearer error messages
updated the database path for the ValidateMultiSignContractTest class to reflect the correct output directory for testing
improve peer requirement for ibft and eth ( # 1103 )
danielwagnerhall : do n ' t call attachtocurrentsession twice in webdriverservlet
do n ' t expand equal _ boolean expression in expressionnode
added a condition to clear pending rendering operations when the current implementation is minimized to optimize rendering performance by avoiding unnecessary operations
fix flakiness in hazelcasttestsupport . sleepmillis ( ) .
fix : coalescewritebehindqueue do n ' t store entry in the queue if the key be already in the queue .
added a line to save some space in GroupTreeCellRenderer . java to clear the icon of a JLabel to ensure that the JLabel is no
updated test method names in TestBlacklistAwareRedirectResolver to improve clarity and consistency in test behavior
added imports and modified test methods in ShutdownMonitor and ShutdownMonitorTest classes to enhance resource management and ensure proper shutdown functionality
updated the calculation of ` moveSize ` and ` chunksFillRate ` in ` RandomAccessStore . java ` for improved readability to enhance
refactor field retrieval and error handling in Json . java for improved clarity and structure to enhance code readability and maintainability by
[ hotfix ] [ runtime ] move componentclosingutil to coordination module
server : destroy volume when vm be in error state
cloudstack - 1771 : do n ' t try to get ipv6 range if it ' s null
updated variable names from ` userDetailsBeanNames ` to ` beanNames ` in ` InitializeAuthenticationProviderBeanManagerConfigurer ` and ` initializeAuthenticationProvider
increased the retry factor for the getLeaderRetry method in CollectionsAPIDistributedZkTest from 15000 to 30000 to allow more time for leader
removed the ' input ' parameter from the ` errorMessage ` method signatures across multiple classes to simplify error messages by eliminating unnecessary input handling
updated drawing parameters in URLImage . java to correct positioning of images to ensure images are rendered in the correct position based on their intended positioning
updated field comparison from ` solrDocument1 . getFieldNames ( ) ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java
fix : do n ' t throw indexoutofboundsexception
[ hotfix ] [ runtime ] add cause to streamtaskexception in streamconfig
refactor tag processing in Preprocess . java to improve clarity and efficiency to enhance readability and maintainability of the code
reformatted the read method in MessagePack . java for consistency to enhance code readability and maintainability
added a new annotation ` Mapper . java ` in the ` org . apache . ibatis . annotations ` package to provide a placeholder implementation for
do n ' t encode empty extension list
updated string splitting logic and improved null checks in LibraryManager . java to enhance robustness and prevent potential NullPointerExceptions
added an alias for the " node _ popup _ scripting " menu entry in ScriptingMenuEntryVisitor to enhance clarity by explicitly indicating the
updated constants for HIDDEN _ FOCUSED _ SCROLL , HIDDEN _ SPLIT _ SCREEN , and added alpha animation logic in Recent
( chore ) camel - jms : fix compile error
updated formatting in multiple Java files to improve code readability and maintainability
deleted deprecated classes AbstractDelegatedVerb and FailureContext to remove unused code to streamline the codebase
updated ` content ` and ` contentETag ` variables to be ` final ` and modified their usage in ` GzipHandlerTest . java `
replaced ` consumerCapacity . getAndAdd ( n ) ` with ` BackpressureUtils . getAndAddRequest ( consumerCapacity , n ) ` in ` On
added logging capabilities to the SpeedmentImpl class to improve debugging and monitoring of component installation status
[ ds - 3952 ] load dspace - oai - config from dspace - config . properties , if available
added null checks and adjusted row handling in StoreScanner and TestWideScanner to improve robustness and performance of key matching logic
( chore ) camel - test : disable jmx by default
replaced hardcoded path separators with a constant CANONICAL _ PACKAGE _ SEPARATOR to improve code readability and maintainability
added methods to find and retrieve YARN binary path and application information in HiveConf . java and RemoteSparkJobMonitor . java to enhance
added support for additional database types in DbConnectionManager to enhance compatibility with additional database configurations
[ hotfix ] [ log4j2 - core ] fix code style issue in splitlogmanager
added a new file ` ExecuteAndReturnStringTest . java ` to implement a test for networking errors in the UI components
added a new file ` InvokespecialInterface . java ` that implements a custom interface method to demonstrate the invocation of a method on a
refactor EvictingBoundedList class to improve code readability and maintainability
enable turn cost by default
added a check to prevent negative selection values in the SelectBox class to ensure that non - negative selection values are handled correctly
added a null check for the method name in RpcServer . java to ensure that the method name is not null to prevent runtime exceptions
updated the calculation of hotseatIconCenter in TaskbarViewController . java to include border spacing to improve layout consistency and spacing between hotseat elements
updated string concatenation to use a dynamic retrieval of partition column values instead of a hardcoded value to improve flexibility and maintainability of the code
update name and delegate to v4.1 . 1 in taskdecorator ( # 1892 )
updated the index directory reference from getIndexDir ( ) to getNewIndexDir ( ) to ensure the correct directory is used for replication operations
updated the ` equals ` method in ` DisplayModeTest . java ` to set the ` equal ` variable to true to ensure that the comparison logic correctly
fix handling of high code point in latex
added handling for null values in OAIDCCrosswalk and Item classes to ensure proper formatting of input values and prevent potential null pointer exceptions
danielwagnerhall : do n ' t select the last frame in the selenium - backed selenium emulation emulation
added a clear button to the DataBrowser and updated related logic in StringSearchPanel and BookmarksPanel to enhance user interface by allowing users
replaced port handling in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for constructing the base URL to improve code readability and maintainability by utilizing
updated assertions in SoftAssertionsTest to use a dynamic date parsing method to improve flexibility and accuracy in date assertions
updated adaptOrders method to include a boolean parameter for order direction to enhance order adaptation flexibility based on user preferences
delombok now print ` ` var ' ' , not just ` ` var ' '
danielwagnerhall : fix a compile error in firefox
updated Configuration initialization and removed unnecessary conditional logging to simplify configuration handling and improve code clarity
replaced ` drawChildren ` method with ` draw ` method in ` WidgetGroup ` to ensure proper rendering of child elements
added unit test base on user forum issue
refactored code to use context . getcatalinabase ( ) instead of system . getProperty ( )
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` to ensure correct handling of JMM format across different locales
add miss color code to plotsquared , fix # 489
added ZuulProperties to the TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration classes to enable integration with ZuulProperties for enhanced
tika - 1181 -- fix test failure in fontparserstest due to timezone difference
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to include ` getBuildTime ( ) ` to
updated the calculation of the xDist variable in PagedView . java to use the absolute value of mScroller ' s final X distance to ensure the
remove unused file guirwtester . java
removed @ NullableDecl annotations from method parameters in ` LazyMessage ` , ` StandardSubjectBuilder ` , and ` CustomFailureMessageTest ` classes to simplify
updated error message formatting in TestStream . java to improve clarity of error messages for better debugging
rename thymeleaf . templateparser to thymeleaf . templateparser . markup for good clarity
added XPathTest for XPath string handling to ensure correct evaluation of XPath strings in the context
added @ Nullable annotation to FutureUtils class to indicate that the class can be null
add warn if invokedynamic be not resolve during call - graph construction
update test to use example email
updated HTTP encoding handling in HttpConnectionTest . java and modified URIUtil ' s decodePath method to return false to improve accuracy in URI encoding verification
added ` getColumnDataType ` method implementations in ` ResultSet ` , ` ResultTableResultSet ` , and ` ResultTableResultSet ` classes to provide a default implementation
throw unsupportedoperationexception instead of unsupportedoperationexception
fix javadoc for hssfpicturedata
changed the type of ` startTime ` from ` long ` to ` Instant ` and updated related logging to use ` Duration ` instead of ` long ` to
added version handling in LibMediaInfoParser to support media library versioning based on user preference
added methods to handle idea dependency proxying in ProjectReader . java to improve dependency management and enhance code clarity
added a new class SerialHeap and updated Universe to use it to facilitate the use of a serial heap for garbage collection
added multiple @ SuppressWarnings ( " serial " ) annotations in Gson $ Types . java to suppress serialization warnings for improved code clarity
updated mouse wheel event handling to use the mouse ' s position instead of the mouse ' s position to improve clarity and consistency in mouse event
datamongo - 1608 - fix nullpointerexception in findbyfirstnameignoringcase
[ hotfix ] [ core ] add multistageinfo to maptypeinfo
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` for retrieving identity providers based on issuer to enhance error handling for
pdfbox - 4892 : fix nasty cmap parser to handle delimiter properly
refactor ContactsBackupJob to use OperationsServiceConnection for managing operations to improve service connection handling and ensure proper resource management
refactored type constraints in mmm Attr . java and added new classes T6938454a . java and T6938454b
added is _ account _ config _ hidden flag to accountlist and protocolprovider
added a check to ensure the number of supported bounds does not match the number of supported bounds in DisplayController to prevent runtime errors related to display state changes
replaced ` getSchemaKey ( ) ` with ` getSchemaKey ( ) ` in ` PMetaDataImpl . java ` and added a test for schema
mow - 1010 add passive login listener to prevent infinite loop
added a new file ` Box2DTest . java ` and updated ` GDXTester . java ` and ` Box2DTest .
add more debug log for cassandra - 1114
[ hotfix ] [ test ] increase default buffer request timeout
doc : generate sample code in the java microgenerator
add help button to openoffice integration page
[ java ] add tcp _ nodelay option for tcp _ nodelay to netty acceptor .
updated method signatures to use wildcard generics for type safety to enhance type safety and prevent potential runtime errors
refactor class loading logic to use a transient class reference to improve performance by avoiding repeated class loading
refactor code to streamline connection handling and improve error logging to enhance code readability and maintainability by reducing redundancy
added a method to convert NullHandling to NullsFirst and NullsLast in Querydsl . java and created QuerydslIntegrationTests . java
added a null check for the actor variable in the ParallelAction and SequenceAction classes to prevent potential NullPointerExceptions during action execution
refactor : fix checkstyle violation in cttypetest
added synchronization to the HDFSEventSink class to ensure thread safety when accessing shared writers
added a new Java interface ` Issue888 _ JavaI ` and its subclasses ` JJ ` , ` JK ` , and ` K _ `
added a new command for revoking an existing agent certificate in CertificateManager . java and created a corresponding test in CertGenerationTest . java
added a check for responses with no body responses in AbstractHttpTest . java and implemented a corresponding test in HttpServerTestBase . java to ensure
improve error message when script engine can not be load
added support for additional connection pooling types in Hive configuration to enhance flexibility in database connection management
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to standardize home
added file lock and unlock functionality to the FileMenuFilter and OCFileListFragment classes to enhance user experience by allowing file locking and unlocking
refactor Version class to improve code readability and maintainability
clear endpoint cache after update keyspace
refactor thread waiting logic to use a dedicated method to improve code readability and maintainability by reducing duplication
updated methods in Skylark and related classes to use SkylarkRuleContextAttr instead of SkylarkRuleAttribute for attribute value retrieval to improve
refactoring localstorage and sessionstorage interface to extend storage
fix : do n ' t overwrite view if it already exist
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling clarity
updated the way the query parameters are retrieved in SpellCheckComponent to ensure a default value is used when the query parameters are not provided
added validation for header values with illegal characters and whitespace to ensure that header values do not contain invalid characters or whitespace
replace instanceSize with arrayBaseOffset in HybridLayout and HostedInstanceClass classes to improve clarity and accuracy of offset calculations for array elements
[ java ] fix compile error in apex
hhh - 15675 log eager loading of eager fetch mode
updated NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implement SwaggerSpecFilter to ensure
added assertions to compare database name and tablename in TxnHandler to ensure consistency in database and tablename handling
added unit test base on user forum issue
added a check to ensure traces are only added if the block is not processed to prevent duplicate trace additions
replaced ` contains ( null ) ` with ` contains ( iterator ( ) ) ` in ` ProviderManager ` and added tests for ` ProviderManager ` to
simplify database type check in InsertOrUpdateGeneratorPostgres . java to improve code readability and maintainability
added tests for local index limit handling in LocalIndexIT . java and modified scan filtering logic in BaseScannerRegionObserver . java to enhance
added a check for incompatible collection types in AlterTableStatement . java to prevent invalid request exceptions due to incompatible collection types
updated cursor handling in VDUBuffer . java and modified window base calculations in vt320 . java to improve cursor positioning and ensure proper window management
removed the useRetries constant from HttpShardHandlerFactory . java to streamline the code by eliminating unused constants
update javaversion . parse to support java 11
[ hotfix ] [ runtime ] skip stream task if there be no input gate
( chore ) camel - test - infra - core : fix checkstyle issue
added a null check for properties before accessing it to prevent potential NullPointerExceptions when accessing properties
refactor IOException handling to store the original exception cause to improve error handling by preserving the original exception context
updated error message from " rolling upgrade " to " stack upgrade " in multiple Java files to improve clarity and consistency in error reporting
txid : do n ' t update tx confidence if it change .
[ netbeans - 662 ] add support for ` ` g1 perm gen ' ' in jmx
updated import statements and refactored distance calculation logic in NearbyController . java to streamline code and improve readability to enhance maintainability
pdfbox - 4892 : avoid unchecked cast , a suggest by valerybokov
updated activity type checks in BaseSwipeUpHandlerV2 . java to include a check for home activity type to ensure that home activities are not processed during
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update related references to improve clarity and consistency in naming conventions
updated method names and logic in ` ShadowTelephonyManagerTest ` , ` ShadowTelephonyManager ` , and ` ShadowTelephonyManagerTest ` to
removed the call to setUnfreezeAmount in UnfreezeBalanceV2Actuator . java to streamline the handling of unfreeze amounts
fix typo in play excel file
simonstewart : use fileutils . copydirectory instead of guava . copy
refactor multiple assertion classes to improve code organization and maintainability
2 . x : improve javadoc of observable . delay ( )
datamongo - 1108 - update . pushall ( ) should support multiple pushall operation
added a null check for ` randomUUID ` before setting it in ` mockChangeLog ` to ensure ` randomUUID ` is always initialized to avoid potential
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve user interaction with hover events
updated configuration handling in CoreContainer . java to include a sleep delay to ensure proper synchronization of the bootstrap process based on server availability
camel - 16400 : camel - netty - http should use max header size instead of max header size for consumer
increased the number of client retries from 5 to 35 in HBase testing cluster auto - starter to improve stability by allowing longer client attempts
updated the way the template file is constructed by using the absolute path instead of the relative path to improve compatibility with the current directory structure
improve error message for invalidation test node .
updated query command from " customer _ count " to " all _ tables " and modified SQL query to use INFORMATION _ SCHEMA . SYSTEM _ TABLE
added functionality to adapt and store Kraken assets to their corresponding currency metadata
added a ` toString ( ) ` method to the ` AnyOf ` class and created a corresponding test class ` AnyOf _ toString _ Test ` to
updated the handling of email subjects in AlertTaskRunnerV2 . java to ensure email subjects are only included when the corresponding dimensions are provided
[ influxdb ] add check for blank measurement
renamed the ` doTransform ` method to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming
added a method to check for unique local addresses in NetUtils . java to improve filtering logic to ensure only valid local addresses are processed
added a method to quote column names in DataTextFormatter to ensure that column names are properly formatted for display
added property management methods to WrapSystem , StrUtils , and CompileMethodEntity classes to enhance property handling capabilities in the code
added a constructor to UpdateRequest that accepts a String URL to enable the creation of UpdateRequest objects with a specified URL to enhance flexibility in handling
changed the enum ` EnumSerialization ` to ` EnumSerialization ` in multiple files to improve clarity and consistency in naming conventions
added a new method ` addExperimentalFormatWarning ` to ` RequestHandlerUtils ` and removed it from ` ReplicationHandler ` to provide a warning for
updated moduleNames logging to use a formatted string to improve readability of module names for better debugging
bugfix : use label . font instead of default label font
http : / / issues . apache . org / jira / browse / amq - 4237 - fix npe in defaultbroker
[ hotfix ] fix npe in cqlinputformat
simplified the condition for identifying JUnit4 class names to improve code readability and maintainability
[ drools - 1010 ] add equal ( ) and hashcode ( ) to ruleterminalnodelist
added stage ID rearranger functionality in TezCompiler . java to ensure proper handling of stage IDs during execution
rename org . apache . cassandra . concurrent to org . apache . cassandra . net
added memory consumption logging to LotsOfOutput . java to improve visibility into memory usage during execution
added imports for ` org . apache . lucene . document . Document ` and ` org . apache . lucene . document .
updated LdapAutoConfiguration and LdapProperties to use anonymousReadOnly and made baseEnvironment final to enhance configuration flexibility by allowing anonymous read - only
refactor DatabaseMetaData class to improve code readability and maintainability
( chore ) camel - example - echo : fix compile error
added a ` finishMocking ` method in ` DefaultMockitoSession ` , ` DefaultMockitoSession ` , and ` StubbingWarningsTest ` classes
removed extra dependencies from parameters in GoTestDescription . java and added new test methods in GoTestIntegrationTest . java and GoTestIntegrationTest . java
http : / / issues . apache . org / jira / browse / amq - 4237 - fix npe in spdy
fix blockliquidwrapper to use flowingblock instead of staticblock
updated intent extra handling in AndroidLocationPlayServiceManager and modified data retrieval in BackgroundLocationHandler to improve clarity and ensure proper URI parsing for background location
improve javadoc for apr endpoint
[ hotfix ] [ table - planner - blink ] fix compile error
fix incorrect item count calculation in craftingmanager
flume - 2088 : fix flaky testfilechannelrestart test
removed unnecessary whitespace checks in TabsAndIndentsVisitor . java to simplify conditional logic for whitespace handling
added a regex pattern matching " pg _ temp _ . * " in NeuteredLinesFilter . java to enhance pattern matching functionality to improve matching
feat ( regen ) : update java microgenerator to 1.0 . 2 add license header
added handling for NCLOB data type in DataTypeFactory and updated related conditions in UnknownType and ColumnSnapshotGenerator to improve type handling for NCLOB data types
add ispublishinghistogram ( ) method to wavefrontdistributionsummary ( # 2441 )
updated ` ShenyuClientRegisterSpringCloudServiceImpl ` and ` DivideUpstreamUtils ` to set ` springCloudSelectorHandle ` as a `
added a new method ` registerListener ` to ` ShadowSensorManager ` to enable registration of sensor events with specified parameters
added exception handling for SocketException in SelectChannelServerSslTest . java to ensure proper logging for HTTP / 2 requests with a 400 response
camel - 16400 : camel - ignite should n ' t close it own ignite component if it be null
improve error message for empty set .
pdfbox - 4892 : catch exception , a suggest by valerybokov
added unit tests for the ` setDisplayHdrCapabilities ` method in ` ShadowDisplayTest . java ` to ensure correct handling of display headers and
added a finally block to ensure classLoader is null to prevent potential memory leaks
improved error messages in SemanticAnalyzer to include source and column name details to enhance debugging by providing more context for exceptions related to bloom filter entries
added a default constructor to the Message class to ensure a default instance of the Message class
do n ' t report a bug if serializable idiom be not serializable
updated PhoenixDecimalObjectInspector and PhoenixDecimalObjectInspectorFactory to use PrimitiveTypeInfo for improved handling of decimal types to en
replaced GZIPOutputStream with OutputStream and modified response handling logic to ensure correct output stream is used when the response is committed
updated method parameter names from WWWAuthenticate to authenticateHeader to improve clarity and consistency in parameter handling
added a condition to check if the directory name starts with " EJS " , " _ " , and " org \ Omg " to ensure proper
added a new method ` getThreadGroupName ` to retrieve the thread group name to improve code readability and handle null thread groups gracefully
added logging functionality to MethodInvocationPrivilegeEvaluator to enhance debugging capabilities by including authorization checks
changed package of D mozParser from crawl to tools
removed lombok . ToString import from ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to streamline code by eliminating unnecessary imports
server : add iso path for user vm vm migration ( # 4529 )
updated SigInt and SigIntTest classes to improve signal handling logic and error reporting to enhance reliability and clarity of signal interactions to ensure
replaced the static import of ArrayUtils with a direct call to ArrayUtils . isEmpty in NodeTool . java to improve code readability and maintainability by
add miss spring boot test for axonautoconfigurationwithspringcloudtest
added overrides and modified comment formatting in ColorRGBA . java to improve code clarity and maintainability
remove deprecate planningentityselector . resetinitializedplanningentities ( )
added build time information to ArtifactInfo and related classes to track build time more effectively
updated field access methods in GroupByOperator . java to use declared fields instead of aggregated fields to improve clarity and accuracy in handling field types
add null check for block before adding block appearance to prevent potential NullPointerException when the block is null
added new currency pairs CNC _ BTC and CNC _ BTC to support trading functionality in the trading service
updated skewAllowance from 5 to 15 and refactored related classes to utilize CasConfigurationProperties for skew allowance handling to en
updated sorting logic in SongListActivity and Utils classes to use ItemSortBy . SortName instead of ItemFields . SortName to ensure consistent sorting behavior
removed unused imports and added a method to read request bodies to streamline the code and enhance functionality for handling HTTP requests
deprecate baseblock in favor of legacybaseblockwrapper
refactor snapshot retrieval logic to handle tag names more robustly to improve error handling for missing tags in Iceberg branch operations
replaced ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` for setting external groups whitelist to improve code
photon map demo : improve performance of photon map demo
added validation for requirePasswwordChangeRequired property in IdentityProviderEndpoints to ensure that requirePasswordChange is set to true to prevent incorrect password change behavior
remove non - reflective field from unaccounted field list
refactor error handling in JdbcExecutor to differentiate connection status from closed connections to improve clarity in error reporting for SQL execution errors
added a new method ` testRequiredBody ` to handle user data requests in SpringmvcClient . java to ensure that user data is validated and validated correctly
updated regex patterns for user and password passwords in CredentialInjector . java and corresponding tests in CredentialInjectorTest . java to improve security by allowing both user and
added a new menu item " Item4 " and a key binding for the Enter key in ActionListenerCalledTwiceTest . java to enhance user
updated print statements in TestCoreParser . java to include the canonical name of the query and its result to improve clarity in test output for better debugging
improve performance of simplenode comparison
removed the public modifier from the PopulatorContextStackItem class to allow access to the class from other packages
updated the method of retrieving the number of documents in MoreLikeThis . java and added a new test case in TestMoreLikeThis . java
refactor event triggering logic in QuestManager . java to improve code readability and maintainability
[ hotfix ] [ network ] let networkbufferpooltest extend from testlogger
updated query construction syntax in MongoSessionDataStore . java to improve code readability and maintainability
add miss macro for unsafegetlong
replace " ARAST " with " EET " for " Asia / Amman " across multiple language files to standardize time zone representation
updated the deprecation ID from 90000010 to 90000011 in DeprecationLogger . java to reflect the correct version of deprecation tracking
hhh - 16913 - sessionimpl should not throw jdbrexception when transaction be roll back
do n ' t show external file link if there be no extension
set apple . laf . usescreenmenubar to false for macosx
[ web ] add piecewise integration test
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods in ` BaseSwipeUpHandler
added a new test method ` testConfigWhiteList ` in ` TestJdbcWithSQLAuthorization ` and updated ` HiveConf ` to util
remove duplicate code in EntryLoader . java to improve code clarity and maintainability
updated the method call to use player . team ( ) instead of team . sharded ( ) instead of team . sharded ( ) to ensure the
updated the cookie domain from " comp1 " to " domainHelper . getHostName ( ) " in CookieImplementationTest . java to ensure the cookie domain
added nullable validation logic in multiple classes to ensure that nullable columns are not validated based on search criteria
refactor multiple security token - related classes to improve code organization and maintainability
added document deletion and query assertions in CustomCollectionTest . java and changed separator variable to static final in CompositeIdRouter . java to enhance
added snapshot handling in ` ExecutablePreparedStatementBase ` and refactored ` PostgreSQLIntegrationTest ` to use ` Map ` for scratch data
updated condition checks for cache and cache sizes in DefaultServlet . java to ensure proper handling of cache and file sizes to enhance robustness and prevent potential
improve drag & drop for jabref ( # 9441 )
updated ` ExecutionUnitRunner ` and ` CucumberTest ` to use ` Description . createTestDescription ` instead of ` createDescription `
added a check for non - empty strings before checking for version and build time to improve code robustness by avoiding potential NullPointerExceptions
removed ` public ` access modifier from method declarations in ` TimeUtils . java ` to enforce encapsulation
remove ` ` jdk . reflect . usedirectmethodhandle ' ' from system property
updated file extension check from " jpg " to " . jpg " in PreviewImageFragment . java to ensure compatibility with additional file types
[ gr - 27886 ] fix debug info for host method .
added ` getIcon ( ) ` method to ` Data ` class and updated ` ClassDisplayed ` from ` NONE ` to ` NODE ` in
added a conditional check before retrieving the substring of the request name in CounterRequestAggregation . java to ensure that the substring is only returned if it does not
updated the replacement logic in FindAndReplace . java and added a new test case in FindAndReplaceTest . java to ensure proper handling of dollar
fix npe in jabber server when jabber connection be null .
refactor SchemaExtractionProcessor to improve code readability and maintainability
added a new method ` copyDir ` to copy files from a specified directory to enhance functionality for copying files from a specified directory
added exception handling for unknown datum classes in JacksonUtils . java to improve error reporting for unknown datum classes
replaced direct calls to ` buildAbiFromClasses ( ) ` and ` buildAbiFromSource ( ) ` with ` HasJavaAbi .
simplified height calculations in SelectBox . java to improve code readability and maintainability
added normalization of database and table names to ensure consistent identifier formatting across the application
updated schema handling in DbSqlSession . java to ensure a default schema is used when the database type is " postgres " or " oracle "
removed the call to Logout in HomeFragment . java to simplify the code by directly finishing the activity when the activity is no longer needed
[ hotfix ] [ test ] fix flaky test
added null check for candidates before retrieving them to avoid potential NullPointerExceptions during element retrieval
updated conditional checks in ContainerLifeCycle . java and modified assertions in ContainerLifeCycleTest . java to improve clarity and correctness of lifecycle state verification
rename iexecutionattributesdialect to iexecutionattributedialect for good clarity
added clearUnsafe ( ) method call in AlterTest . java to ensure metadata is cleared before processing new data
fix nullpointerexception in gettime
added null check for measurement in TabletInsertionDataContainer and refactored DisruptorQueueExceptionHandler to use a dedicated exception handler to improve
deleted the Session2Token . java file to remove unused or redundant code from the project
cloudstack - 1771 : when volume creation fail , destroy the volume instead of delete it
added a new Install class to handle app installations in the launcher to enable support for instant apps in the launcher
added a ` NullAuthoritiesPopulator ` class and updated ` LdapAuthenticationProvider ` to utilize it to enhance role management by allowing null authority
fix for http : / / github . com / codenameone / codenameone / issues / 2058 - fallback to net . orf
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify method call to improve code readability
updated the ` sortLiveDocs ` method to utilize ` Bits ` instead of ` FixedBitSet ` to improve handling of live document sorting logic
added a method to handle null results in JMESPathExtractor to improve error handling for null results
updated import statements and added a check for null or empty authorities in AuthorizeTag . java to ensure proper handling of user authorities
updated logout URL assertions and date handling in tests to improve clarity and consistency in logout handling logic
cloudstack - 6892 : fix error message for unsupported vm snapshot on vcenter
refactor configuration handling in RobolectricTestRunner and Config classes to improve clarity and maintainability of the code
replaced SelectChannelConnector with SocketConnector in JettySolrRunner to use a more appropriate connector implementation
refactor partition key comparison logic in HiveAlterHandler . java to improve clarity and maintainability of partition key checks
added a new debug flag ` ENABLE _ ICON _ IN _ TEXT _ HEADER ` in ` FeatureFlags . java ` to control whether the icon is
reformatted conditional statement in SimulationStatus . java to improve code readability and maintainability
replaced ` SharedBlockingCallback . Blocker ` with ` Callback . Completable ` in multiple files to simplify code and improve readability by using
added workspace listener to PreviewControllerImpl to manage workspace updates effectively
added a check for VMANONYmous classes in ReflectionFactory . java and modified the class name verification logic in ReflectUtil . java to ensure proper
refactor TransportHelper class to improve code readability and maintainability
updated the import statement for ResourceLoader in CatalinaAcegiUserRealm . java to correct the file path format to ensure compatibility with the latest Spring
updated logging statements in AmbariServer . java to improve clarity of server and agent startup events
added null checks for initialization and modify before processing to ensure robustness by preventing potential NullPointerExceptions during JSON processing
updated HDFS configuration handling in SliderAppsViewControllerImpl . java for improved clarity and consistency to enhance code readability and ensure proper
added a check to ensure the backgroundManager is not attached before attaching it to the activity to prevent potential null pointer exceptions
set the current tab to 1 in AllAppsTabbed , Launcher , and mHomeCustomizationDrawer , and adjusted child width calculations in PagedView
added null check for the URL in BaseDataSource and a corresponding test in SimpleDataSourceTest to ensure robust error handling for invalid URL inputs
added JUnit 5 Jupiter annotations and refactored the instantiation of PebbleTemplateEngine in PebbleModuleTest . java to ensure compatibility with
added EditNameDialog functionality to handle directory creation in FileDisplayActivity to enhance user experience by providing a direct dialog for creating directories
added functionality to toggle bar borders in various chart activities to enhance user interaction by allowing dynamic adjustment of bar borders based on data sets
updated the SSL URI from " https : / / www . okcoin . com " to " https : / / www . okex . com "
jbrules - 2214 : make acceptforagertest more resilient against negative score
replaced ` FileChannel ` with ` ByteChannel ` and updated input stream handling in ` Files ` and ` BytesAndLines ` to improve performance to en
refactor ` getFlattenFieldTransferPair ` method to accept ` FieldReference ` as a parameter to improve code clarity and maintainability by
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
reordered conditional checks for serialization types in SerializationConfigurationParser . java to improve readability to enhance code clarity and maintainability
added heap limit functionality to QuickstepProcessInitializer to optimize resource usage for debugging purposes
refactor code to improve readability and maintainability of the code
log4j2 - 1349 log4j2 - 1349 : do n ' t rethrow exception in abstractloadbundletest for now
[ hotfix ] fix checkstyle violation in precompactedrow
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes , and added a new test class InvalidRenderIntentTest to ensure correct
ensure meterregistry lifecycle be available in the auto - configuration ( fixes # 2178 )
change log level from warn to info when config center be not find
added tests to generate certificates with invalid byte values to ensure that the CertificateFactory correctly handles invalid byte values during certificate generation
camel - 16400 : fix issue with simple predicate with ambiguous operator .
removed unnecessary null checks from onTabUnselected method in EditorActivity and added focus change handling in IDEEditor to improve code clarity and ensure windows are
add user . name to accesslogvalve error message
updated file paths and scaling factor in SkeletonModelGpuSkinningTest . java and modified submesh name retrieval in OgreXmlLoader . java to
removed ` throws InterruptedException ` from the ` createOrThrow ` method signature to simplify the method signature for better readability
add deprecation notice to upgraderesponse
added functionality to generate generated d . ts files based on user - defined declaration options to enhance the transpilation process by allowing users to
added a test for Kinesis fetch timeout in StreamConfigTest . java and modified Kinesis fetch timeout handling in StreamConfig . java to ensure
add ` ` . html ' ' extension to ` ` timestamp ' ' in streamingdataflowworker
increased the maximum number of metastore server threads from 100 , 000 to 1000 to optimize memory usage for the metastore server
changed the return type of onTaskSnapshotChanged from void to boolean to indicate success or failure of the snapshot change operation
replaced mMaxShadowRadius with shadowRadius in SwipeUpAnimationLogic . java to ensure correct shadow radius is used for swipe up animations
added a new test method ` chainNestingAndAggregation ` to the ` ChainParserTests ` class to validate the handling of nested aggregation in the message processing
updated loop condition in MarketSellAssetActuatorTest . java to use ' end ' instead of ' limit ' and added a failure message to improve
do n ' t use isinternal ( ) for interactive source to avoid npe
updated condition to check for null before comparing cached file paths to improve code readability and prevent potential NullPointerExceptions
added DisplayController import and modified WindowManagerProxy initialization to enhance functionality by integrating DisplayController functionality
updated toolTipText assignment for root directories in MetalFileChooserUI and SynthFileChooserUI to ensure correct file view retrieval for root directories
updated the method to retrieve the default screen size to ensure compatibility with the current toolkit requirements
change parameter type of recognise method from recognisedObject to CaptionObject to improve type specificity for better compatibility
added unit tests for fetching results with factory expressions in JPASQLBase . java to ensure correct functionality of fetch results with factory expressions
removed a conditional check for drag index in FreeformFinSetConfig . java to simplify the drag handling logic for better performance
update moe version to 1.2 . 0 ( # 289 )
improve error message for constant canot set call value .
updated error message formatting to use angle brackets instead of angle brackets to improve readability and consistency in error reporting
marked a method as deprecated to indicate that the method should no longer be used in favor of an alternative implementation
use platform - specific unsafe plugins for jdk . internal . misc . unsafe
added @ Hint ( isDep = false ) annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and created new classes
changed mCenterPagesVertically from true to false to disable vertical scrolling to improve user interface responsiveness
updated migration handling logic in MigrationRequestOperation . java to ensure proper processing of migration requests
updated KonnectedBindingConstants and related classes to use BASE _ URL instead of module IP address to improve clarity and consistency in handling
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy . java `
updated test table creation and processing logic to support different database contexts to enhance flexibility and ensure compatibility with different database configurations
added a new test case ` caseInsideBrackets ` in ` CaseExpressionTest . java ` to validate SQL parsing for case expressions inside brackets to ensure correct
refactor event handling in ConsoleActivity . java to improve code readability and maintainability by encapsulating copy mode logic
refactor ` writeXmlOutput ` method to use ` DocumentBuilderFactory ` and ` DocumentBuilder ` for XML document creation to improve XML output
added unit test base on user forum issue
( chore ) camel - core : remove dependency on exchangehelper
move basicconfigurators from logback to logback . classic
do n ' t assert phi _ node flag if phi _ node be not present
pdfbox - 4892 : remove unused import , a suggest by valerybokov
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class that accepts an ` Environment ` , ` TraceInfo ` , and `
refactor multiple dataset classes to improve code organization and maintainability
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
changed the ` NormUpdate ` class to ` static ` and updated field comparison methods to improve performance and clarity in field comparison logic
changed access modifier of IndexFileNameFilter from public to private to restrict instantiation to enhance encapsulation
fix bug in ifstatementtest . testplugindefinition ( )
replaced ` getPutOnlyTableHeaderRow ( ) ` with ` getTableHeaderRow ( ) ` in ` ConnectionlessQueryServicesImpl . java ` to
updated Gson registration methods in TypeAdapter . java and StreamingTypeAdaptersTest . java to simplify null handling to improve code readability and maintainability by
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of entries in the distribution
added a new class EXIFReader to handle Exif IFD0 , EXIF SubIFD , and Exif Thumbnail metadata to
return standardunit . none instead of unknown _ to _ sdk _ version when unit be unknown
[ drools - 759 ] fix applypmmlmodelcommand to work with parameterinfo
improve error message to be more clear
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing
[ gr - 279463 ] do n ' t emit invalid label on aarch64
added a try - finally block to ensure ` initPending ` is set to false after initializing ` JDKLogManager ` to prevent potential ` NullPointerException `
added a find method to TicketCatalog and updated logging format in DefaultTicketCatalog and HazelcastTicketRegistry to enhance ticket definition
refactor SSL connection handling and SSL trust store initialization to improve code readability and maintainability
[ hotfix ] [ runtime ] fix npe in sort merge result partition
( chore ) camel - jms : remove unused read / write method
added a new parameter ` type ` to the ` queryAllPluginHandlesByPluginId ` and ` queryAllPluginHandlesByPluginType `
added a call to ` start ( ) ` on the ` nextSpan ( ) ` method in ` DefaultSpanCreator ` and ` SleuthAd
added configuration options for color format , depth , and stencil formats in IOSApplicationConfiguration and IOSGraphics to enhance flexibility by allowing
refactor login logic to use a dedicated method for user authentication to improve code readability and maintainability by reducing duplication
refactor ` PtNDArray ` creation to use a handle variable to improve code clarity and prevent unsupported operations
removed the check for ` Interrupted ( ) ` status in a loop and replaced multiple calls to ` getLockName ( ) ` with a loop that
refactor Implements and ShadowPicker classes to improve code readability and maintainability
refactor HttpClientOptions creation to use a dedicated method to improve code readability and maintainability by reducing duplication
added support for dynamic array types in ` DynamicStruct . java ` and refactored parameter handling in ` SolidityFunctionWrapper . java ` to improve
updated text alignment and size properties to include a boolean parameter to enhance flexibility in CSS property retrieval
added constructors to CopyStep for recursive path handling to enable the creation of CopyStep instances based on source and destination paths
fixed - rsemaphore . addpermits ( ) and rsemaphore . publish ( ) method do n ' t work after rsemaphore . acquire
camel - 16400 : fix camel - core - dsl to work on window .
added FlavorParser class and updated BuildTargetParser to use it for parsing flavor strings to improve code organization and maintainability by centralizing flavor parsing
changed List < String > to List < ByteString > for witnesses and witnessesAddressList in WitnessScheduleStore . java to
added a check for non - empty resultsMeta before printing results to avoid printing unnecessary output when resultsMeta is empty
refactor ConcurrentLinkedQueue to improve null checks and add a new test class for removal to enhance code reliability and ensure proper handling of
added ` addSpecialTokens ` parameter to multiple ` encode ` , ` batchEncode ` , and ` decode ` methods in ` Hugging
[ hotfix ] [ runtime ] use collections . nCopies for copying resource profile
refactor data handling in LoadSingleTsFileNode to store aligned chunk data to improve clarity and maintainability of chunk data management
added session storage context handling in BrowserSessionStorage and DuoSecurityUniversalPromptSessionStorage to improve session management and state management in the web flow configuration
added a new test method ` testSchemaValidation ` to the ` TestJspDocumentParser ` class to verify XML schema validation to ensure that
added a default constructor to ` TypeAdapter ` and updated comments in ` Java17RecordTest ` and ` ReflectionAccessTest ` to address deprecation warnings
improve handling of suspendedevent in the debugger .
refactor AntPathRequestMatcher class to improve code readability and maintainability
refactor createresourcepolicy to remove unused parameter
added a null check before releasing the deflaterEntry in GzipHttpOutputInterceptor . java to avoid potential NullPointerExceptions when the deflaterEntry is
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to enable test execution after each test case
updated the MD5 computation to normalize Unicode characters in the checksum to ensure consistent handling of known Unicode characters in the checksum
refactor command handling to check for null completers before adding them to avoid potential NullPointerExceptions during command execution
made the keyListener variable final in BasicProfilerState . java and added multiple overrides in BaseAppState . java to ensure that keyListener cannot be re
replaced ` objectToSave ` with ` dbDoc ` in MongoTemplate . java and added a new test for saving JSON strings to ensure correct handling of JSON
added a check for multiple remote addresses in RequestUtils and implemented a corresponding test in RequestUtilsTest to ensure that multiple remote addresses are handled correctly to improve
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` in ` JsLibrary . java ` and updated method signatures
updated ` CookieManagerTest ` and ` UnmodifiableMaps ` to use ` getAddr ( ) ` instead of ` getHost ( ) `
refactor glyph handling logic in GlyphLayout . java and add a new test case in BitmapFontTest . java to improve code clarity and ensure proper
added pauseOrResumeSplits method implementations in PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to manage paused and resumed splits to
added configuration for HIVE _ SCRIPT _ OPERATOR _ ID environment variable in HiveConf and ScriptOperator to enable dynamic assignment of script operator ID based on
refactor ` getListedTermCounts ` method to utilize ` SimpleImmutableEntry ` for sorting and counting terms based on facet parameters to improve
added a new file ` UseSeparateStepSizeAction . java ` to handle the use of a separate step size feature in the application
updated FileMenuFilter to use final fields and improved unlock handling logic to enhance code clarity and ensure immutability of fields
updated import statements and modified region server handling logic in RoundRobinTableInputFormat . java and TestTableSplit . java to improve code cl
change default value of PARENT _ SPAN _ ID from " false " to " 0 " in HttpClientRequestAdapter and HttpClientRequestAdapterTest to
pdfbox - 4892 : use ioutils . closequietly to avoid npe
added fullscreen handling in GwtGraphics and updated fullscreen methods in GwtApplication to improve user experience by ensuring proper fullscreen functionality
updated WebfingerIssuerService to use URI instead of String for issuers and modified parameter name from " login " to " identifier " to improve
added unit tests for SoulApacheDubboClientConfiguration in the new file SoulApacheDubboClientConfigurationTest .
replaced ` Gdx . files . internal ( fileName ) . pathWithoutExtension ( ) + " . png ` with ` resolve ( fileName ) . pathWithoutExtension
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and changed log level from warn to info in OidcDefaultJsonWebKey
replaced ` lock ( ) ` method calls with ` lockInterruptibly ( ) ` in multiple classes to improve concurrency handling for better performance
updated package declaration in Compiler . java to ensure consistency in package structure
improve handling of redundant exception branch .
use defaulthttpdatasource for single manifest error
added a configuration property for the maximum number of prepared statements per database connection in the execution scheduler to limit the maximum number of statements cached per database connection
change return type of the set method from WritableConfig to Configuration in multiple configuration classes to improve type specificity for configuration handling
added error handling for command payload validation in AutoScalingHandler to ensure proper error reporting for bad requests
refactor CombinedDataset class to improve code readability and maintainability
replaced byte array initialization with a variable for clarity to improve code readability and maintainability
added methods to manage cryptography restrictions in the Utilities class to enhance security by allowing users to remove cryptographic restrictions effectively
fix nether teleport on cancel
added a new test method ` testPageMarginsLongTextTransform ` in ` TextVisualRegressionTest . java ` to verify the behavior of long text transformations
added a null check for the vectorization context before setting the file key and setting the file key in Vectorizer . java to avoid potential NullPointerExceptions
updated the speed calculation in WialonProtocolDecoder to allow for a value of 0.539957 to set the position accurately
hbase - 25819 disable user - enabled by default in hbase - client
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if the JsonObject
removed redundant variables and added a condition to check if the receiver is attached before unregistering it to simplify the receiver management logic to ensure that the receiver is
refactor multiple HTTP request and response classes to improve code organization to enhance maintainability and readability of the codebase
added params to the zadd method call in PipelineBase . java to allow for additional parameters during the zadd operation
[ ds - 3474 ] fix checkstyle error in test
rename testasyncmessages to testasyncmessagesperformancetest
added a method ` getNodeOptional ` to ` VersionedTargetGraphBuilder ` and updated its usage in ` VersionedTargetGraphBuilderTest `
updated epoch seconds range to allow for a broader range of epoch values
updated the return value in ` EscherBlipRecord . java ` and added a new test class ` TestOLE2Embeding . java ` to
removed duplicate initialization of row and column variables in JSONParser . java to streamline the code by eliminating redundancy
replaced the use of ` JavaType . ShallowClass . build ( ) ` with ` Pattern . compile ( ) ` for type matching to
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added functionality to playback with multiple trailer counts to enhance user experience
added a native method ` removeGlyphInfoFromCache ` in ` CStrike . java ` and invoked it in ` CStrikeDisposer . java
act - 1247 : terminate process lifecycle event after terminate process
camel - 16462 : camel - xml - dsl - allow to specify a custom name for the xml type
updated the endpoint from " http : / / scotb . html " to " https : / / www . abc 1234 . org " in the
added option to reset all preference to default value
hbase - 27875 thriftmetrics should be protect instead of private
removed deprecated channel references for manual fan speed in DanfossAirUnitHandler . java to streamline code by removing obsolete functionality
use hamcrest assertion instead of junit in testsuite
removed duplicate code for stopping expansionHelper to improve code readability and maintainability
added equals and hashCode methods to PartitionFactory and PartitionPanel to ensure proper comparison and hashing functionality for instances of PartitionImpl
server : fix root disk size when vm be expunge ( # 6303 )
updated visibility logic in PredictionRowView to conditionally display suggested apps based on user preferences
[ geos - 7674 ] api bbox parser should handle invalid cr
added validation methods for value and position parameters in LibrustzcashParam . java to ensure that values and positions are non - negative to prevent runtime
mark ithrowableentity a deprecate since it should not be use in fml
added random number generation for x and y in NodeDataImpl . java to enhance the randomness of nodes by incorporating variability
added a new test method ` validateRefreshToken _ happycase ` and a new test method ` validateRefreshToken _ shouldFail _ when _ missing _ scopes `
refactor the handling of compilation output and error streams in JavacStep . java to improve clarity and structure to enhance code readability and maintain
updated version string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new release version
added a check for DEEP _ SHORTCUT item type in LoaderCursor . java to support deep shortcuts in the loading process
added hashCode method to TimeGranularitySpec class to ensure proper hash code generation for instances of TimeGranularitySpec
changed access modifiers of classes and fields in BooleanQuery and DisjunctionMaxQuery classes to enhance encapsulation and improve code clarity
added a boolean flag to control proxy response code handling in HttpURLConnection to ensure proper handling of NTLM proxy behavior based on user preferences
[ gr - 23748 ] aarch64 : fix aarch64move to use spill instruction .
server : fix vm memory calculation when host be not in use
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and updated the query in ` TestDistributedSearch .
updated audio recorder configuration from 22050 to 44100 to ensure compatibility with the latest audio recording standards
updated the calculation of ` newOriginX ` in ` RocketFigure . java ` to incorporate scaling factors based on ` subjectBounds _ m
druidquerybasedinputformat : fix npe in case of empty data source
added ` ORIGINAL _ TYPE ( " Original Type " ) ` and ` ORIGINAL _ ID ( " Original ID " ) `
added a static method ` create ` to create a ` Index ` instance using a parent and data map to facilitate the creation of ` Index `
simplified the return statement in the Dates class to improve code readability and maintainability
updated schema compatibility handling in SchemaCompatibility . java and added a new test for reader compatibility in TestSchemaCompatibility . java and TestSchemaCompatibilityTest . java
added handling for EntityPath relationships in QueryUtils . java to improve entity path management and ensure correct join operations
added synchronization to span retrieval and iteration methods in TestSpanHandler . java to ensure thread safety during concurrent access to span lists
updated method signatures in multiple classes to use wildcard generics instead of Object to enhance type safety and improve code clarity
updated exception handling in ViewContextImpl . java to use InvocationTargetException instead of Exception to improve logging clarity and provide more specific error messages
refactor OAuth2AccessTokenEntity class to improve code readability and maintainability
update status messages in SCBEngine , SCBEngine , TestInvocationFactory , TestInvokerUtils , and HighwayServerInvoke to clarify
added iOS data and moe resource files in GdxSetup . java to enhance project structure for iOS integration
updated import statements in TestSearcherManager . java to use ConcurrentMergeScheduler and set it for the TEST _ VERSION _ CURRENT to improve merge scheduling to en
updated session state check and improved list handling in GenericUDTFInline . java to enhance null safety and ensure safe iteration over list elements
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and readability
simonstewart : prevent double click on the spreadsheet in the tablet
hhh - 15664 - fix osgi test to work with osgisessionfactoryservice
use connectiontimeout instead of elapsedtime for timeout calculation
move component . xml to non - packaged - resources directory
updated file name handling in Compat . java and FileOpener . java to use File . separatorChar instead of File . getFile ( ) to ensure
changed return type of row ( ) method from Cell < T > to void to allow method chaining for better usability
improve error message when p2p - port be specify multiple times ( # 3441 )
added a null mask property and its getter / setter methods in WebSocketClient . java to allow for customizable WebSocket masking behavior
updated the ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of a ` RelNode ` to
added node selection statistics to track selected nodes in the node selection process to improve tracking and management of node selection counts
added a new class Person with a name field to facilitate the creation of Person objects with a specified name
added a boolean flag ` hasOwnerPtr ` and modified its execution logic in ` CPlatformWindow . java ` to track the presence of the owner pointer
replaced ` setupLogoFade ( ) ` with ` setupFade ( ) ` and introduced ` mClock ` and ` mClockLoop ` for
remove redundant call to markdirty ( ) in some place .
updated the ` IMPL ` variable and improved exception handling in ` SegmentReader . java ` to use ` Class . forName ` for loading Segment
refactor cell event firing to run on the Event Dispatch Thread to ensure thread safety during event processing
replaced instances of ` DefaultInetAddressAdapter ` and ` CollectionTypeAdapter ` with ` CollectionTypeAdapter ` and updated their usage in ` Gson
added methods to handle double , boolean , and string values in the Series class to improve error handling for null values in the series
removed " -- no - audio - time - stretch " option from options in VideoManager . java to simplify command - line options for audio timing
updated conditions in GeoRelationUtils and modified GeoRect return values in GeoUtils and TestGeoPointQuery to improve accuracy of GeoRect calculations and
server : fix npe while start vm due to miss disk offering
added cleanup method to HazelcastTest to ensure proper resource management during tests
added multiple instances of ` Cipher . getInstance ( ) ` for different cipher modes in ` BlockCipherTest . java ` to ensure proper error handling for cases
added filters for operations logs in QFileClient . java to enhance logging visibility for better debugging
fix : add type argument for aop injection ( # 6231 )
fix nullpointerexception in sip provider when proxy address be null .
replaced manual addition of demand with MathUtils ' cappedAdd method to simplify code and improve readability by using a dedicated method
refactor image output stream handling to use try - with - resources for better resource management to ensure proper cleanup of temporary files to prevent memory leaks
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with ` startActivity ( searchActivity . class )
refactor ` SchemaCrawlerCommandLine ` and ` GrepOptions ` to streamline object initialization and enhance readability to improve code clarity
http : / / issues . apache . org / jira / browse / amq - 4237 - add support for osgi service
added @ Autowired annotation for PersonRepository in RepositoryIndexCreationIntegrationTests . java to ensure proper dependency injection for the PersonRepository class
changed the exception type from ` Exception ` to ` InterruptedException ` and updated log message formatting in ` TestVertxUIManual . java ` to improve error
fix switch / cases indentation .
refactor mouse event handling into a separate ` handleMouse ` method for better code organization to improve readability and maintainability of the code
[ java ] add miss padding to abstractminmulticastflowcontrol .
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enhance the user interface by providing
improve error message when tokenization model be not specify
added a condition to exclude distinct queries in the group column handling logic to ensure that distinct queries are not processed in the query generation process
[ gr - 27875 ] make native - image - library compatible with graal .
no functional change
added a null check for the children list in PartitionPruner . java to prevent potential NullPointerException when accessing children
added tokenPosition and currentPosition fields to MessagePackParser and modified return logic in MessagePackParser . java to improve parsing context handling and ensure
added locale management after tests in AbstractSolrMorphlineTestBase to ensure consistent locale handling after tests to maintain the original locale settings
removed conditional checks for launcher status bar size in LauncherFragment . java to simplify code for better readability and maintainability
added unit tests for the MetricsReporter class to ensure proper functionality and error handling of metric registration and registration
( chore ) camel - osgi : remove unused field
added equals and hashCode methods to the Rectangle class to ensure proper object comparison and hashing functionality
[ hotfix ] [ test ] fix test instability in streamkafkaptest
updated DSAParameterGenerator to handle different strength values and improved error message formatting to ensure proper handling of strength values and enhance clarity of
added configuration for FQDN usage in LLAP daemon tasks and refactored address handling in Llap classes to enhance flexibility in
fix flaky test clientoutofmemoryhandlertest
added a method to get the object ID from a shapeId and updated setObjectId calls across multiple shape classes to ensure correct identification of shape objects
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the behavior of distinct scalar queries in the
refactor multiple classes related to search functionality to improve code organization and maintainability
added binding and unbinding methods for the ExtensionAdapter in ManagedKubernetesClient . java to improve the management of extension adapters in the Kubernetes client
updated subtitle text formatting to use a utility method for generating the info row to improve code readability and maintainability by centralizing media stream information
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot . java and TestRSAProviderTokenManager . java to
added error handling for generating summary HTML in BugCollectionBugReporter and XMLBugReporter to improve robustness by logging errors when generating summary HTML
lucene - 4892 : do n ' t reset termpool in termshash . reset ( )
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
updated the handling of the ` WindowSessionDelegate ` in ` ShadowWindowManagerGlobal . java ` to utilize a new ` WindowSessionDelegateU ` class
fix urlhelper . forceaddschemehostandport to handle non - standard port
added support for MSSQLDatabase in foreign key constraint generation to enhance compatibility with MSSQL database behavior
hbase - 27875 fix checkstyle error in hbase - replication
remove console output and add event handler for pipe event .
make htmlidentifier log more flexible
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] fix typo in hivelookuptablesource and hive
improve error message when use wrong thread
updated schema name formatting in SequenceSnapshotGenerator . java to use CatalogAndSchema to ensure compatibility with the latest liquibase API changes
updated color calculation in SpriteBatch , SpriteCache , LwjglDebugStarter , and AlphaTest classes to use AlphaTest instead of ProgressiveJPEG
fixed - redissonconnection . join ( ) method should return a batcharraylist # join ( ) .
added base URL and URL normalization in SolrLoggerServiceImpl . java to ensure proper handling of HTTP and HTTPS base statistics
renamed the method ` launchTask ` to ` launchTaskFromView ` and updated its usage across multiple files to improve method clarity and
updated MorfologikFilter to use Dictionary instead of Dictionary and added a method to load dictionary resources to enhance the flexibility of
updated sorting options in GridFragment . java to use " CommunityRating " and " CriticRating " instead of " Stars " and "
added imports for ViewKt and ListRow , and modified visibility logic for ListRow in CustomListRowPresenter . java to enhance the user interface by
refactor switch - case structure in StressAction . java to improve readability and maintainability of the code
refactor HttpClient class to improve code readability and maintainability
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof ` for better clarity to enhance code readability and maintainability by using a more
add support for jsr310 serialization ( thymeleaf / thymeleaf )
replaced org . apache . log4j . MDC with org . slf4j . MDC in LogUtils . java to utilize
replaced ` TypeBearer ` with ` Type ` in ` PhiTypeResolver . java ` to improve type handling to ensure compatibility with updated API specifications
reformatted code for better readability in CoinbaseTransaction . java to improve code maintainability and clarity
added a method ` getBuildTargetList ` to ` BuckConfig ` and updated ` ProjectCommand ` to conditionally force build targets based on
updated idle strategy initialization in Ping . java to ensure proper garbage collection and resource management
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and updated references to use ` OCFile ` instead of ` Content
removed unnecessary conditional checks before processing events in ReportPanel . java to streamline code for better readability and maintainability
[ hotfix ] [ test ] add precondition check for slot owner in testinglogicalslot
added a new recipe class ` RemoveCallsToSystemGc ` to remove system garbage collection invocations to ensure that system garbage collection is invoked regardless of
removed redundant call to super ( ) across multiple exception classes to streamline exception handling by eliminating unnecessary super ( ) calls
added a method to set the icon in ScaleImageLabel to ensure the correct icon is set for the UI component
updated variable names from foundEntry to update in FeedUpdateService . java to improve clarity and consistency to enhance code readability and maintainability
updated argument handling to support both - classpath and - cp options to enhance flexibility in argument parsing
avutil : use compiler option instead of options
set the initialized variable to true to ensure the service is initialized before use
updated Test7196045 . java file to improve test coverage and functionality
updated the density and decay values in ShaderParametersLightShaft . java to optimize the shader parameters for better performance
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and updated their respective getters and setters in ` Oidc
# 212 - generate unique constraint for non - null column
added functionality to check for file sharing federated share permissions in UsersAndGroupsSearchProvider and EditShareFragment to ensure proper handling of shared files based
added a method ` needsDocValues ( ) ` that always returns true in the ` TestBBoxStrategy ` class to ensure that document values are handled correctly
refactor BufferAlignmentAgent and BufferAlignmentInterceptor for improved clarity and consistency in error messages to enhance readability and maintainability of the code
added a method ` intForEach ` to ` Int2ObjectHashMap ` for processing ` IntObjConsumer < V > ` to enhance functionality
fix the global scoreboard not be share in worldeserver . close # 1221
changed return type of count ( Predicate predicate ) from Long to long across multiple classes to allow for more precise count ( ) method in QueryDslMongo
updated conditional checks for MTree snapshot creation in MManager . java to improve clarity and consistency in logging output
refactor dotProductScore calculation in VectorUtil and improve test cases in TestVectorUtil to improve clarity and accuracy of score calculations to enhance accuracy
added IRREVERSIBLE _ THRESHOLD constant and methods to track and update the latest block number in the dynamic properties store
replaced the ` setLocale ( ) ` method with a call to ` Systems . setLocale ( getBaseContext ( ) , getBaseContext ( )
added a check for new database creation status in LauncherClings . java and implemented it in LauncherProvider . java to ensure that the database is
refactor collection handling in BasicAclEntryAfterInvocationCollectionFilteringProvider to improve readability and maintainability of the code
added a null check for datamodel before assigning is64Bit to ensure is64Bit is set only when datamodel is not null to prevent
added a thread check in TestIndexWriterDelete . java to ensure that the current thread is the correct thread before proceeding
changed the access modifier of the closeDatabase method from private to protected to allow subclass access to the closeDatabase method
updated imports in FullDetailsActivity and BaseRowItem classes to use ModelCompat . asSdk instead of ApiicClient to ensure compatibility with the
added attribute handling for SVG elements in BatikSVGDrawer . java to ensure proper attribute assignment for SVG elements
added a try - finally block to handle potential exceptions when parsing user configuration to improve error handling and logging clarity
added a mechanism to conditionally set waitingForResult based on the " WaitForResult " flag in the intent extras to ensure it is not set to false
modified constructors in various queue classes to use a Supplier for sentinel objects to enhance flexibility in handling sentinel objects during queue initialization
added widget description handling in WidgetCell . java to improve user interface feedback when widget information is present
added a maximum attribute count limit check in the attribute registration process to prevent runtime errors caused by exceeding the number of registered attributes
move predicatestest to correct package
camel - 16400 : camel - core - defaultheaderfilterstrategy now allow to configure header name to be case insensitive .
updated InlineLayout and Breaker classes to simplify inline handling and improve boundary condition checks to enhance code clarity and maintainability
added null checks and improved error handling in the ShareUserListAdapter class to enhance code robustness and prevent potential NullPointerExceptions
refactor the setup method to streamline the instrumentation logic to improve code readability and maintainability by reducing redundancy
added a check for insert destination before source in BrowserContentPane . java to ensure the correct number of columns are returned for insert operations
updated memory limit handling in CmdModifierTest . java to use a dedicated method for retrieving memory limits to improve code clarity and maintainability by centralizing
replaced usage of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` and introduced a constant for empty dependencies
added a null check for the rule object and updated related assignments in JavaTestRule . java to improve error handling by providing a clearer exception message when
add support for 1.10 and 1.10 . 2 for proxying .
added a check to set atIndex to zero if it is less than or equal to zero to ensure atIndex is non - negative to prevent potential errors
increased timeout duration in BuckBlockJUnit4ClassRunner from 100 milliseconds to 500 milliseconds to improve test stability by allowing longer execution time
added a content requester to the TaskOverlayFactoryGo class to enhance the handling of assist content requests
encode witness address before use it in votewitnessprocessor .
updated test cases in DefaultMethodRegressionTests . java to improve test coverage for method regression scenarios
refactor WorkloadManagerMxBean class to improve code readability and maintainability
updated the import statement for KafkaException from KafkaProducerException to KafkaException to ensure compatibility with the latest Kafka API changes
added a call to close the container loader to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and enhanced fault tolerance tests in FaultTolerantExceptionClassesTests to ensure proper
improve error message when config be not find
added ` extraProperties ` parameter to multiple ` applyTunerConfigs ` method calls across multiple classes to enhance configuration flexibility by allowing additional
added logic to check for in - progress instances of realtime segments in PinotRealtimeSegmentsManager to prevent duplicate segment names from being generated during processing
added a condition to return null if the touchable field is disabled to prevent further processing when the touchable field is not enabled
added a new test method ` testPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure that the build process
throw retryablehazelcastexception instead of nullpointerexception when cache config do not exist
refactor JSweetTranspiler to simplify module installation checks and add a method to check if a node package is installed to improve code cl
added @ ManagedObject and @ ManagedOperation annotations to MBeanContainer and Destroyable classes to facilitate management of beans as MBeans in the application
added a conditional statement to check if the settings . inAppBrowser is false in LongClickableSpan . java to ensure that the application does not run
updated string comparisons to use ` . equals ( ) ` instead of ` equals ( ) ` for ` remoteGroupID ` and ` bulb
updated type safety in ` mmm Types . java ` and added new classes ` T6558559a ` and ` T6558559b `
updated player messages in WorldEditListener to include position information to improve clarity of player feedback for better debugging
camel - 16400 : camel - kafka - make it easy to shutdown kafka consumer thread pool
added a default method for examples in Schema . java to improve flexibility in handling examples
refactor thread termination logic in AgentRunner . java for improved clarity and flow control to enhance readability and maintainability of the code
remove time column from result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure data integrity by removing unused dimensions
updated conditional logic in FacetComponent . java to enhance readability and maintainability of the code
replaced LinkerProvider retrieval with CxxPlatforms . getParseTimeDeps in RustBinaryDescription . java and RustLibraryDescription . java to improve
added a ` name ` property with getter and setter methods in ` JaasAuthenticationProperties ` , ` JdbcAuthenticationProperties ` , and ` N
added debug print statements to CFGPrinterObserver and updated printer handling in IdealGraphPrinterDumpHandler to improve logging clarity and ensure printer is set to
refactor scan range handling and add small scan threshold configuration in BaseQueryPlan . java and QueryServicesOptions . java to improve clarity and
( chore ) camel - aws2 - retry - gateway : add routeid to retry filter
replaced calls to ` redisplay ( ) ` with calls to ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java ` to improve
replaced ` onOverviewShown ` method with ` showForOverviewIfNeeded ` in ` ActivityControlHelper ` and ` WindowTransformSwipeHandler ` to
added null and size checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex . java and implemented a test for deleting point documents
updated the parameter in the publish method from ` true ` to ` updateLastState ` in ZkController . java to ensure the latest state is updated
updated string escaping in MetastoreDirectSqlUtils . java to ensure proper formatting of string values in SQL queries
added a null entry to the exp list to prevent null pointer exceptions during collision detection
simonstewart : make the webelement . text ( ) case insensitive .
refactor loop structure in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
# 1043 - ormqueryengine . forwardonlyfetchsize ( ) ... fix # 1043
improve handling of closedchannelexception in httpservermultiplexchannelhandler
pdfbox - 2852 : set initial arraylist size to avoid arrayindexoutofboundsexception
updated the calculation of window radius in QuickstepAppTransitionManagerImpl . java to use support for rounded corners to enhance visual consistency by adjusting the
replaced ` ShapeDrawable ` with ` View ` for background and icon handling in ` DesktopTaskView . java ` to improve code clarity and
updated UpstreamCheckServiceTest to initialize UpstreamCheckService with a new instance of UpstreamCheckService to ensure proper initialization of UpstreamCheckService
refactor logging statements in AbstractSession . java and AbstractSessionManager . java to improve readability and maintainability of session management logging
removed error logging for ZooKeeper children and directly returned locks to simplify error handling and improve code clarity
[ hotfix ] [ doc ] fix typo in javadoc
added a check for custom data before generating mipmaps in FileTextureArrayData to ensure mipmap generation to avoid unnecessary mipmaps when using custom data
updated password handling in tests to use single quotes instead of double quotes to ensure consistency in password formatting across different scenarios
added support for selectable items in the List class to improve user interaction by allowing items to be marked as selected
added a check for empty field values in LlapArrowBatchRecordReader to ensure proper handling of cases where no values are present
added file separator handling in PolicyContext . java and updated test cases in TestPolicyContext . java to ensure consistent file path handling across different operating systems
replaced HashSet with ArrayList for flatQueries and expandQueries to improve performance and reduce memory usage
refactor TLSRestrictions class to improve code readability and maintainability
refactor KafkaManager to use a daemon task for closing the producer to improve thread safety and prevent potential null pointer exceptions
updated assertNodeStateProvider method to include a string parameter for ignorableNodeValues and modified its usage to enhance functionality to allow for more flexible
added a lock file to manage concurrency in RocksdbMavenPomCache to ensure thread safety by preventing concurrent access to the lock file
[ hotfix ] [ test ] fix client port issue in minizookeepercluster
added error handling for IO exceptions in RestClient to improve resource management and logging clarity
updated the way segment tar URIs are passed to the push job spec to ensure the correct conversion of segment tar URIs to an array before passing it to the
updated the loginStudent method to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure the
added equality check for last deleted item ID in EnhancedBrowseFragment and StdBrowseFragment to ensure proper handling of deleted items in the UI
reduced the number of strings from 500 to 100 to optimize memory usage for better performance
simplify wkbattributeio to not use custom bytearrayinstream
corrected the method name from ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity and consistency in method naming
added a method to check if a transition is direct substates in AbstractStateMachine . java and updated corresponding tests in ShowcaseTests . java to ensure correct
added equality checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure
added JoinOperation interface to the PostJoinOperation class to enable handling of join operations in the PostJoinOperation implementation
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to ensure proper handling of PostgreSQL test execution and validate
http : / / issues . apache . org / jira / browse / amq - 5035 - make sure we do n ' t destroy
refactor AvaticaDatabaseMetaData class to improve code readability and maintainability
updated MongoDbConnectionPoolProperties and MongoDbConnectionFactory to use @ DurationCapable and String representations of lifeTime and idleTime to improve type safety to
do n ' t try to create a medium format if there be no medium service .
refactor ` handleFilters ` and ` handleDomainChanges ` methods to return a boolean indicating whether filters were applied to improve clarity and functionality to en
added option to disable timeouts .
replaced hardcoded value for mQuickStepStartingRotation with a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code readability to enhance maintain
camel - 16400 : camel - xpath - deprecate xpathfactory in favor of xpathfactory
improve documentation and clarify usage
[ cpd ] add test case for edge case
added a check for the presence of the " atlas " property in the map before processing texture atlas files to ensure that the required " atlas " property is
camel - 16400 : camel - core - optimize component to support property placeholder .
added a call to close the database connection in BlockchainTest . java to ensure proper resource management and avoid potential memory leaks
refactor line splitting logic in CoreMarkdownNodeRenderer and add a new method getLines in SpecMarkdownRendererTest to improve code readability and maintainability
fix checkstyle issue in util / webserviceinboundgatewayparsertests . java
updated SQLBindings to use List < Object > instead of ImmutableList to enhance flexibility in handling null -Friendly bindings
added support for OpenJDK in the VirtualMachine class to enhance compatibility with additional Java environments
added keepAlive configuration in ReactorClient . java to ensure proper connection management and prevent connection leaks
replaced hardcoded " a _ Position " and " a _ TextureCoordinates " with ShaderProgram . POSITION _ ATTRIBUTE in MD5Renderer and Obj
camel - 16400 : camel - core - optimize to avoid unnecessary component lookup
updated the account retrieval logic in UnfreezeBalanceActuator . java to improve clarity and handle potential null values gracefully
update version number to 3.8 . 1 . alpha .
replaced calls to ` t ` with ` t . unannotatedType ( ) ` for unannotatedType ( ) ` in multiple locations to ensure
updated assertions and streamlined flush manager initialization in StorageGroupProcessorTest . java to improve code readability and maintainability by reducing redundancy
updated ClassLoaderDump to include a DumpableCollection for environment - specific data to enhance debugging capabilities by providing a clear indication of environment - specific
added a waitbeforestart parameter to FFMpegVideo . java to optimize video processing timing
removed the ` skipCorrupt ` parameter from ` OrcEncodedDataConsumer ` and its usage to simplify the constructor of ` OrcEncodedDataConsumer `
add miss unit test for listindex
add framemap to graalcompiler so that it can be use to run phase plan .
updated JUnit imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and RunningContinuousIntegrationCondition to
fix boat not be able to place item with water ( # 1897 )
updated the toString ( ) method in mmm Directory . java and added a getLockID ( ) method in RAMDirectory . java to improve clarity
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the conditional logic for stability checks
added methods to handle path assertions in BDDAssertions . java to enhance assertion capabilities for path validation in tests
updated HostPort handling in ForwardedRequestCustomizer to use hostField instead of hp to improve clarity and accuracy in port assignment logic
[ hotfix ] [ k8s ] change log level from debug to warn for k8s config
added upload status handling and cancellation logic in FileUploadService and UploadListActivity to improve file upload management and user feedback during uploads
added a new ` ProviderLoader ` class and updated ` TerminalManager ` and ` TerminalManager ` to utilize it to streamline provider installation
replaced ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and its tests to standardize header usage across the codebase
updated SelectFromDatabaseChangeLogStatement to use a computed column instead of indexed fields to improve performance by reducing the number of columns returned
hhh - 15464 - fix test failure on oracle
ignore non - positive partition size in test .
updated ` ExecutionScheduler ` and ` ExecutionSchedulerImpl ` to check if the scheduler is already started before starting it to improve error handling and ensure
updated InlineBox initialization and conditional check for blockParent to simplify code and improve readability
updated error messages in StatisticMap . java to improve clarity of error messages for better debugging
updated the return value of getStagedRectSlideEnd ( ) from 383 to 500 to adjust the slide end time for better user experience
updated button names in WaveInfoDialog and PlacementFragment to use " waves . random " instead of " Random " to improve clarity and consistency
updated conditional logic in BukkitMain . java to include a check for owned plots to ensure that road items are only killed when the plot area
added touch exploration state change listener functionality in ShadowAccessibilityManagerTest and ShadowAccessibilityManager to ensure proper behavior of touch explor
pdfbox - 5328 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
refactor to avoid use of property object
updated POIFSFileSystem initialization to use POIFSFileSystem . create ( big ) instead of NPOIFSFileSystem . create ( big ) to improve code cl
updated Move . java to use PlotArea for plot area retrieval to enhance functionality by ensuring correct plot area handling
updated regex pattern for version matching in TestWebHCatE2e . java to ensure accurate matching of version strings
updated the condition to check for ` count ` instead of ` count ` to ensure proper validation of the ` count ` parameter
add kafka client id to kafka consumer processor ( fix # 1078 )
updated import statements and added error handling in JavacCompiler . java to improve error reporting for compiler execution failures
g3d - 1010 : repaint the view only if necessary
( chore ) camel - spring - batch : fix checkstyle issue
added a method ` isAnimationFinished ` to check if the animation has finished accurately
updated imports in LoginMockMvcTests . java and added a new test for custom favicon images with line breaks to improve code clarity and ensure proper
added null check for otherUrl in TimeLineCursorAdapter and modified string formatting in HomeFragment to enhance robustness by preventing potential NullPointerExceptions
simonstewart : do n ' t remove space from input box when the user click on it
refactor Object class to improve code readability and maintainability
refactor equality checks and simplify null handling in DataUtilities . java to improve code readability and maintainability by using ` Arrays . equals `
fix npe when delete enchanted book ( mc - 12770 )
add unit test for asyncresource
rename target - flat - headers . hmap to target - user - headers . hmap and update related methods accordingly to improve clarity and
added debug logging for send failures in MailService . java to improve error handling and provide clearer insights during message sending failures
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` and introduced a new method ` resetToEmptyUi ( ) `
added unit tests for ` getPartitionsByNames ` method with varying batch sizes in ` HiveMetaStoreClientApiArgumentsChecker . java ` to ensure correct
refactor FileListListAdapter to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile . java ` and ` OCFileListAdapter . java
updated the index used in the getChildAt method from ` getChildCount ( ) ` to ` getChildCount ( ) + 2 ` to ensure the correct child
removed " org . eclipse . jetty . websocket . util . server . internal " from JavaxWebSocketConfiguration and JettyWebSocketConfiguration
( chore ) camel - s3 : disable s3 policy by default
update jfxradiobuttonskin when timeline be null
updated condition in DeweyNumber to check for a valid Dewey number before processing to improve error handling for invalid Dewey number input
replaced direct string return with a protected static variable categorySetString to improve code readability and maintainability by eliminating repetitive logic
corrected the spelling of " close code " in the assertion to ensure accurate validation of the close code in the WebSocket client tests
added a null check for classLoader in WebappLoader and updated test assertions in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to ensure
removed duplicate code for collecting persistent fields in PersistentAttributeTransformer . java to streamline the code by eliminating redundancy
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to test the ` PorterStemFilter ` functionality in a zip file to ensure
added a success parameter to the postBatchMutate method to ensure that index updates are only attempted if successfully written
updated package declarations for multiple test classes to ensure consistency in package structure for better organization of test classes
fix concurrentmodificationexception in chatwindowmanager
fix : do n ' t call Sys . touch on window
added " - mardu " to the list of tracked files in HgCmdLineInterface and updated test assertions in HgCmdLineInterfaceIntegration
camel - 14284 : camel - netty - add miss timer to camel - netty
updated variable declarations in DirectionalLight , PointLight , SpotLight , and SpotLight classes to use ' range ' instead of ' intensity '
added width and height calculations for X11GraphicsConfig and WGLGraphicsConfig to ensure minimum dimensions for graphics rendering
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` , ` DelegatingSecurityContextRunnable ` , and ` DelegatingSecurityContextRunnable ` classes
added ` AnnoFilterTreeSet ` and ` findAnnotatedClasses ` methods in ` ClassFinder . java ` and ` findAnnotatedClasses `
refactor length adjustment logic in BytesColumnVector . java to improve clarity and ensure correct handling of negative and non - positive lengths to enhance error
make test more reliable
updated method signature of ` uninstallListeners ` from ` JScrollPane ` to ` JComponent ` in both ` MotifScrollPaneUI ` and ` XTextArea
make sure polyfunction . isequal ( ) do n ' t throw npe
added a null check for the table before retrieving column class to avoid potential NullPointerException when accessing column class
added error handling for ClassCastException in CustomChangeWrapper . java to ensure compatibility with Ant when attempting to instantiate CustomChange
updated DistBuildConfig to replace ConfigPathGetter with DistBuildConfig and added methods to manage a whitelist of paths to improve code clarity and
[ gnucoin ] do n ' t show export warning for double entry
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable the test due to a known issue
refactor ` doJoin ` method to return a boolean indicating success or failure instead of void across multiple classes to improve method usability and ensure
removed the getAutodeps ( ) method from JavaLibraryDescription . java to streamline the code by eliminating unused functionality
updated intent flags in LauncherTimelineCursorAdapter . java to include FLAG _ ACTIVITY _ CLEAR _ WHEN _ TASK _ RESET to ensure proper handling
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance pagination control based on page order
updated assertions in RepositoryConventionPluginTests to use the correct index from the repository list to ensure the correct MavenArtifactRepository is used for URL assertions
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue
improve error message when uri be invalid
changed the access modifier of the ` buildUserProfileByClassCompleteName ` method from private to public to allow access to the method from other classes
refactor CacheKey class to improve array handling and update logic to enhance performance and correctness of object updates
updated file type detector implementations across multiple filesystem provider classes to improve compatibility with Unix - like file systems
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
refactor ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to use ` VirtualSensorCallback ` instead of ` VirtualDevice
added a condition to check if the context is not removed from the session in HttpSessionSecurityContextRepository to ensure that the context is not removed from the session
updated the logic for retrieving loopback and link local addresses in NetUtil . java to improve clarity and correctness of loopback and link local addresses
renamed ` BUF _ SIZE ` to ` DEFAULT _ BUF _ SIZE ` and updated related variable assignments to improve clarity and consistency in buffer
updated KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem classes to enhance security validation and improve exception handling
added a check to prevent adding and removing the icon change listener to ensure that the icon listener is only added when the component is properly initialized
added support for Russian language in the application
hhh - 16936 - fix wrong conversion of second to nanosecond to sql
disable frame state verification during graph building .
added system property handling in Robolectric tests to ensure proper cleanup and state management during tests
added a system class " org . slf4j . " to the web application context and created a test for loading the LoggerFactory in ViewClassLoader
updated conditional checks in ChangePackaging . java and added a new test for removing the default packaging in ChangePackagingTest . java to enhance
fix flaky test due to file extension change
fix ( demo ) : clear nukkit buffer
updated unit handling in JogService and related services to use preferred units instead of abbreviation to improve clarity and consistency in unit management
updated the expected string to use UTC time zone and adjusted date formatting in test cases to ensure consistent date formatting across different locales
reformatted the return statement in Terminator . java to improve code readability and maintainability
improve error message when hdfs namenode host ca n ' t be resolve
use a timer task for show tracking notification in jabref
fix intermittent test failure on slow ci server
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties ` to improve concurrency handling to enhance performance by using a more
log4j2 - 1349 add log . ignore ( throwable ignored ) to log4j api
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during execution
removed unnecessary type casting for item damage to simplify code and improve readability
removed the image cleanup process in the panel manager
added new files MMapDirectoryFactory . java and SimpleFSDirectoryFactory . java to implement MMapDirectory functionality to facilitate unmapping
fix nullpointerexception in pdfcleanupprocessor
updated the variable used in the assertQueryEquals method from ' field1 ' to ' field1 _ s ' in QueryEqualityTest . java to ensure
refactor ExtendedOperatingSystemMXBeanImpl to improve code readability and maintainability
added a method to install left commands in SideMenuBar to enhance the user interface by providing quick access to command buttons
added a ` advanceWindowed ` flag and conditional logic in ` TweetActivity ` , ` UserProfileActivity ` , and ` TweetActivity `
added support for Sybase in the primary key generation logic to ensure compatibility with additional database types
refactor Client class to improve code readability and maintainability
[ java ] wait for the leader to be ready before send a heartbeat .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java ` and added ` should
added a return statement in NearCachedClientMapProxy . java to ensure proper termination of the method execution flow
updated package - info . java files for mmm and ppp packages
added error handling for server shutdown to ensure graceful shutdown of the HTTP server before proceeding
camel - 15836 - camel - aws2 - stream : fix camel - aws2 - upload - add support for multipart upload
[ hotfix ] [ runtime ] fix typo in webmonitor
bug 10617 : fix for 2.2 . 7 : do n ' t delete unique key in 2.2 . 7
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to handle password validation to ensure password is not
added maxEnergyLimit variable to VMActuator class and updated energy limit logic to ensure energy limits are accurately represented based on dynamic properties
added maxInMemorySize property and its getter / setter methods in HttpClientProperties . java , and updated WebClientPlugin method in HttpClientPluginConfiguration . java to
refactor caching logic in Cache . java to improve performance and maintainability of caching operations
added two new Cucumber test files , RunCucumberTest . java and StepDefinitions . java , in the package com . example package to
added error handling for parsing JSON values in TypeJsonUtils . java and updated test cases in TestArrayOperators . java to improve robustness by handling potential
removed duplicate byte arrays for hex strings in Utf8StringBuilderTest . java to streamline test cases by eliminating redundancy
updated parameter handling to check if parameters are set before encoding them to enhance security by ensuring only valid parameters are processed
camel - 16400 : fixed circuit breaker with max number of output
updated document frequency assertions in TestIndexWriterExceptions . java to ensure consistent behavior with maximum buffered documents configuration
replaced ` String ` with ` Sha1HashCode ` for resource APK and string assets hashing to improve performance and reduce unnecessary encoding overhead
removed duplicate enumValue and longValue methods from AsmRuntime . java to streamline code by eliminating redundancy
add miss tag for biome tag ( # 8619 )
papplet : replace asyncimageloader with a fixed thread pool
changed private fields to protected and refactored segment preloading methods in BaseTableUpsertMetadataManager to enhance encapsulation and improve code clarity
replaced occurrences of " \ u0646 " with " \ u0623 " in multiple Java files to improve clarity and consistency in naming conventions
replaced calls to ` vid . getImage ( ) ` with ` hasImageEqualTo ( vid ) ` in ` AbstractSunSecureRule . java ` to improve
camel - 17481 : camel - jbang - run command should support multiple repository
added handling for NaN scores in CrawlDbReader . java to improve robustness by preventing processing of NaN scores
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure the target file is deleted after each test execution
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor ` and refactored focus handling in `
[ hotfix ] make checkpointcleaner thread safe
added a new file XPathWhiteSpaceTest . java that tests XML schema validation with XPath validation to ensure correct handling of whitespace characters in XML schema files
added a check to avoid overriding the trie log layer in BonsaiPersistedWorldState . java to ensure that changes do not override
updated FilledNewArrayInstruction . java file to improve code clarity and maintainability
added a timeout of 60 seconds to multiple test cases in SimpleNetworkTest . java to ensure tests do not hang indefinitely during execution
update return statement to use ` parentPath . endsWith ( " / " ) ` instead of ` substring ( 0 , length ( ) ) ` for
added a print statement to display the skin file loading failure to improve debugging by providing feedback when skin file loading fails
added dirty tracking and validation methods in LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to improve the handling of accumulator state during batch
added a new constant UNDEFINED in Result . java and updated TestStep . java to use it to improve clarity and consistency in Result handling
changed exception type from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure proper handling of null values in database operations
do n ' t throw exception if jet service be n ' t available .
do n ' t fail recovery if there be no data to recover
bugfix : do n ' t ignore child node when create summary level
replaced ` pos ` with ` sizeMask ` and modified the ` ensureAvail ` method in ` DataOutput2 ` to improve memory allocation logic to en
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to mark tests as ignored due to
use sublist instead of arraylist to avoid arrayindexoutofboundsexception
[ hotfix ] fix checkstyle violation in filemanager
updated TransformFunctionType and TransformFunctionFactory to use " plus " , " division " , and " times " instead of " plus " , " plus "
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` , ` getEnclosingElement ( ) `
updated multiple Java classes related to certificate handling to improve consistency and clarity in the codebase
fix : fix npe in searchannotationvisitor for 2.17 . 4
replaced ` LruCache ` with ` SparseBooleanArray ` for item selection in ` NoteAdapter ` to improve memory management by using a more
reformatted conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener and added a new test in ConfigFileApplicationListenerTests to improve path validation and ensure correct file path formatting
updated ` TaskViewSimulator ` and ` TaskThumbnailView ` to initialize ` mPositionHelper ` with a ` Context ` parameter and adjusted offset calculations based
[ java ] : do n ' t publish new leadershipterm when there be no leadership .
danielwagnerhall : improve error reporting in pmd coverage test
refactor byte skipping logic in ByteArrayInputStream . java and add a new Skip class in ppp Skip . java to improve clarity and functionality of skipping
reordered conditional checks in UpdaterTask . java to improve readability and maintainability of the code
make max _ headers public
add ` ` rt . jar ' ' to the list of library that need to be load
refactored connection handling logic in AbstractHandshakeHandler . java to improve clarity and structure to enhance readability and maintainability of the
updated method signatures in RasterLayerResponse , RasterManager , and GTDataStoreGranuleCatalog classes to use configuration properties instead of hardcoded values to
added a check for committed responses before sending a 500 error response to avoid sending a 500 error response when the response is already committed
updated condition checks in HttpSession . java to ensure proper handling of pending elements and connection queue size to improve robustness of session management
updated ` fadeOutFakeTaskView ` to use ` false ` instead of ` true ` in ` HomeGestureTutorialController . java `
fix : prefabserializer / prefabformat do n ' t warn about unknown component name
replaced the initialization of ScimGroupExternalMembershipManager and added " internal . superuser " to the external group set in LdapMockMvcTests . java
updated the initialization of ` thirtyDays ` in ` FreezeBalanceActuator ` and added a validation check in ` TransferActuator ` to ensure
updated the method of finding the last index of the file separator in FileResolverTestBase . java to ensure compatibility with different file separator scenarios
ggb - 2175 : undo / redo : do n ' t lose focus after error
updated GpsMainActivity to use session description instead of an empty string to enhance user experience by providing context - specific descriptions
updated assertions in JsoupNonVisualRegressionTest to handle cases where the number of pages is not 3 to ensure the test accurately reflects the
* deprecate ` androidbufferallocator ` in favor of ` androidnativebufferallocator `
added checks for flag names that start with " ! " in multiple files to ensure correct handling of flags with special characters
added a NOPMD comment in JDBCHistoryCache . java to improve code readability and maintainability
changed the condition for ITEM _ USE _ GRANT _ SELECT _ REWARD in BattlePassManager . java to correct the logic for handling reward operations
updated QueuePriorityTest to use a list of PriorityElement instances instead of a fixed task count and added a toString method to enhance test clarity and
refactor affinity unit test to use @ inject instead of @ init
added error handling for null command and help command in Main . java to improve user experience by providing clear help output
increased the initial capacity of LightOutputStream from 7 to 4 in multiple classes to optimize memory usage by reducing memory allocation
changed the visibility of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a boolean flag ` showBlank ` and modified conditional logic in ` ClassWriter . java ` , and created a new class ` T80
removed assertion for length in Person class to streamline code by eliminating unnecessary length validation
added a null check for the file extension before checking its presence to prevent potential NullPointerExceptions when checking file extensions
changed return statement from ` return ` to ` continue ` in ` ContactRightButtonMenu . java ` to ensure proper flow control in the loop execution
[ hotfix ] [ runtime ] do n ' t throw illegalargumentexception during slot sharing
refactor loop structure in InstallShortcutReceiver . java to simplify logic and improve readability
refactor connection handling in PlainSocketImpl to ensure proper resource management and prevent potential memory leaks
added functionality to manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to ensure that removed items are properly removed from the pager
updated log message to point to the element ' s in - view center point to improve clarity of log output regarding action offsets
added a new file ` bug4865918 . java ` that tests the scrollbar ' s increment behavior to ensure that the scrollbar block increment behaves
replaced ` VelocityEngine ` with a direct call to ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code and
replaced specific imports with a wildcard import and added a case for " grouptriggers " in QuestCommand . java to streamline import statements and enhance command
fix file chooser to select gnu account file
added Lombok ' s ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to enhance string representation capabilities for better readability
updated the description URI in CloudService to use a constant for configuration URI to improve code readability and maintainability
removed duplicate calls to setViewportComponent and setJScrollPane in BrowserPanel . java to improve code efficiency by eliminating redundancy
updated key mappings for DEL and FORWARD _ DEL in LwjglInput . java and modified event handling in ParticleEditor . java to improve
added a conditional check for the " indexMimeTypeParts " property before retrieving parts in MoreIndexingFilter to enable conditional indexing based on configuration to enhance flex
added author pattern matching in JSDoc . java to improve the handling of comments with author information
updated metric constants in MetricsConstant . java and TestMetaStoreMetrics . java to use create _ total _ tables and delete _ total _ tables
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig to enhance schema management by integrating
updated oauth2LoginLinks method to accept MultiValueMap of query parameters to enhance flexibility in handling OAuth2 login links
updated Hijrah - umalqura to " Islamic Umm al - Qura " in TckChronology . java and
added a check for the browser type in WebAudioWrapper . java to ensure compatibility with different browser behaviors
added an ` appendInterceptor ` method to ` GrpcServerBuilder ` and removed the ` InterceptorConstants ` class from ` InterceptorConstants ` to
updated database table creation to use the " default " SQL statement to ensure compatibility with the latest database schema
reformatted code in WriterRecordBatch and StreamingAggTemplate for improved readability to enhance code maintainability and clarity
[ hotfix ] [ runtime ] fix typo in executiongraph
added hasFrom property and related getter / setter methods in Delete . java and updated DeleteDeParser . java to conditionally handle FROM statements to enhance
replaced the method ` isSuccess ` with ` isMultiStatus ` and updated related error handling in ` SynchronizeFolderOperation . java ` to
refactor recipe test applicability checks to use a new utility method ` applicableListTests ` to improve code readability and maintainability by centralizing
updated regex pattern for log line parsing in LogAnalyser . java to improve accuracy in regex matching to enhance the accuracy of log line recognition
( chore ) camel - google - cloud : disable integration test that require application credential
fixed - ` ` min ' ' and ` ` max ' ' parameter do n ' t apply to search criterion . # 5593
refactor license handling in CCLicenseStep . java for improved type safety and clarity to enhance code readability and maintainability
added a null check for the global ID before adding it to the index to avoid potential NullPointerExceptions when accessing global ID values
replace ` equals ` method with ` areEqual ` method in ` OptionalAssert ` to improve comparison accuracy based on comparison strategy
updated memory management logic in NoNewLineParagraphCssApplier , ParagraphCssApplier , and ParaGraph classes to ensure consistent handling of font size and
added a new file TestArrayCopyToFromObject . java to test array copying functionality to ensure that ArrayStoreException is thrown when the destination is not an array
updated path handling in BuckPythonProgram . java to use Escaper ' s escapeAsPythonString method to improve code readability and maintain
do n ' t set async state to prevent race condition
deprecate craftinghelper # findfiles ( modcontainer modcontainer , boolean visitunfoundroot , boolean visitunfoundroot ) , fix #
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable due to unstable test cases
added a null check before asserting the response 400 status in TestInternalInputBuffer . java to avoid potential null pointer exceptions when the request fails
added a ` lowerName ` parameter and modified the ` autoloadCall ` method to include it in the ` autoloadLocks ` set to enhance
updated the ` getServerVersionEqualOrGreater ` method in ` PlaybackController ` and modified user preferences in ` PlaybackController ` to
updated localhost handling in KDC and OneKDC classes to ensure proper resolution of the canonical host name to avoid potential hostname resolution issues
updated Jsr250Voter to conditionally return ACCESS _ DENIED based on jsr250AttributeFound status to enhance access control
updated import statements in MP4Parser . java to use specific boxes instead of wildcard imports to improve code readability and maintainability by reducing
added a constant for the HS2 _ PROXY _ USER and modified session parameter handling to improve clarity and maintainability of session parameter management
camel - 16400 : camel - hdfs - add support for snappy compression to hdfs component
added a sleep of 1000 milliseconds in HttpClientTest . java to ensure proper timing in the test execution
fix for bug # 5782 - xssfsheet . setcelltype ( cell . CELL _ TYPE _ BLANK )
updated glyph position calculations in GlyphLayout . java and modified text in BitmapFontTest . java to enhance glyph layout accuracy and address issue with AGWl
updated references to ` ISTIO _ VERSION ` and ` LOCAL _ ISTIO _ BIN _ PATH ` in ` Fabric8I
replaced calls to ` reportPlaybackStartAsync ` with calls to ` reportPlaybackProgress ` in ` PlaybackController . java ` and ` Utils . java
fix memory leak in simpleauthority
fix maploader hitting eviction on initial load ( # 18709 )
updated the return statement to include ERROR _ BIT in ResponseFlag . java to ensure proper handling of error responses
added check for read policy to fix default policy
refactor FontUtilities to use ConcurrentHashMap for CompositeFont instances to improve thread safety and avoid potential memory leaks
changed the initialization of prefHeight from ` getHeight ( ) ` to ` 0 ` and modified the calculation of ` prefHeight ` in the Tree class to
[ drools - 7481 ] dmn feel : improve error message for unknown variable
removed unused import statements from multiple Java files to improve code clarity and maintainability
changed the access modifier of ` finishRunningRecentsAnimation ` method from private to public and replaced direct execution with ` MAIN _ EXECUTOR `
added null checks for node ID and edge type in ` ElementFactoryImpl ` , ` ImportContainerImpl ` , and ` ImporterGDF
[ beam - 8470 ] add warn log for unknown state and instruction
nifi - 2892 : fix bug where flowfiles exceed the bin limit
refactor tile retrieval logic to use a loop for determining the closest core to improve clarity and maintainability of the code
camel - 16400 : camel - resttemplate - do not copy the content length header if it be already present .
updated Java2TypeScriptTranslator , SyntaxTests , and Literals classes to enhance TypeScript translation capabilities and improve testing assertions
updated filter parameters in FilterFactory , ChannelizerViewer , OneChannelOutputProcessor , and PolyphaseChannelManager classes to improve channel bandwidth handling and
hbase - 27875 add - allregions option to regionserver to enable all region on regionserver
remove ` ` node . environment ' ' from cassandraconnectorfactory and remove it from testcassandraconnector
added resetCursorPosition ( ) method call in KahaDBStore . java to ensure cursor position is reset during database operations
added minimum size constraints for frame sizes in CallDialog and adjusted new frame dimensions in OneToOneCallPanel to ensure frames do not exceed defined minimum sizes to
fix block fall state not be store in the statemap . close # 8782
updated TestHTTPSamplersAgainstHttpMirrorServer to use JUnit 4 annotations and refactored setUp and tearDown methods to be static to improve test
added a dependency injection for KerberosPrincipalHostDAO and modified entity removal logic to ensure proper cleanup of Kerberos principal entities when entities are removed
removed the boolean parameter from the getTableSnapshot method call to simplify the method signature for better readability
improve error handling in apr endpoint to log error .
updated error message to include " Monetization setup " and paste the Base64 - encoded RSA public key in the build hint to improve clarity and
updated ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and removed ` isInsideTranscode
[ drools - 748 ] allow boot - inf . classes to be pass to kiecontainer to avoid package name collision
added an assumption to the CheckIndexTest class to skip tests when the runtime version is 19 to ensure compatibility with the latest feature requirements
removed the mContext parameter from the assignTargetsForSplitScreen method and updated its implementation in AbsSwipeUpHandler and RemoteTargetGluer to simplify
refactor LeaderLatch class to improve code readability and maintainability
added methods to initialize ZN - SNARK parameters in SolidityNodeHttpApiService to enhance the functionality of ZN - SNARK
transaction . getdepthinblocks ( ) should not throw illegalstateexception
added a new method ` createMediaRecorder ` in ` CodenameOneImplementation ` and refactored ` getCoordFromPosition ` in `
set default value of platformName to " ios " in JavaSEPort . java to ensure platformName defaults to " ios " to reflect the current platform
pdfbox - 4892 : fix typo find by codespell on fossies . org
reformatted conditional statements in Graphics2D . java to improve code readability and maintainability
pdfbox - 4892 : fix typo find by codespell on fossies . org
added a try - catch block around the ` nextOutgoingFrame ` method call to handle potential exceptions during frame processing to improve error handling and logging clarity
replaced the try - catch block with AccessController . doPrivileged for obtaining the caller class in ContextHandler . java to improve security handling to enhance
added logic to set parent categories to null for child categories in CategoryREST . java to ensure that parent categories are reset to their default values
added ` ` update ' ' and ` ` library ' ' dialog
added a ` vwap ` field to the ` Ticker ` class and updated related methods to include it in the ` Ticker ` class to en
added a new TextView variable ` mNoWidgetsView ` and updated related methods in ` SearchAndRecommendationsScrollController ` and ` Widgets
add gsoc api for gsoc node tinting .
set the color of the NCFirebaseMessagingService to the primary theme to enhance visual consistency by applying the primary color
updated ShadowUsbManagerTest . java file to improve test coverage forUsbManager functionality
add some logging to help debug problem
added a call to update the selected configuration to ensure the configuration reflects the latest settings
updated width and height calculations in AndroidGraphics . java to ensure they are non - negative to prevent potential division by zero errors
use linkedhashmap instead of hashmap to maintain order
replaced direct usage of ` nativeClosureManager ` with a ` ClosurePool ` to improve flexibility and maintainability of the closure management code
( chore ) migrate camel - example - spring - xml to junit5
added two new files , WebsocketIngressIntegrationatedBootstrap . java and WebsocketPluginTest . java , and modified WebsocketPluginTest .
[ ds - 3442 ] remove generic type set from abstractimportsourceservice . getservicename ( ) .
replaced direct principal comparison with a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability
added a condition to check for the " jnr . ffi . compile . x86asm " system property to ensure proper handling of X86asm compilation
refactor method calls to use a local variable ` callNodeType ` instead of repeatedly calling ` callNode . getType ( ) ` to improve code
added an ` @ Insecure ` annotation and refactored the ` MessageBuffer ` constructor to use it to enhance security by preventing the use
added new Hive configuration variables to HiveConf . java to enhance configuration options for Hive integration
initialized ` scopes ` and ` policies ` as ` HashSet ` in ` ResourceSet . java ` and added a null check for ` rs . getPolicies
refactor MultiReader class to use a consolidated setter for decrefOnClose and readerFinishedListeners to improve code readability and maintainability by red
refactor multiple socket channel implementations to improve code organization and maintainability
danielwagnerhall : fix flakiness in inputfieldtest
refactor ` getFirstTypeArgument ` method calls to use ` getFirstTypeArgument ` consistently across multiple classes to improve code clarity and
changed return types of keySet ( ) and values ( ) methods from Set to KeySet to improve type specificity for better performance
added a duration parameter to the FlipTransition class to allow customizable transition animations
removed conditional logging for subsAreValidForStreaming in DLNAResource . java to improve code clarity and reduce unnecessary trace logging
bump version to 9.10 . 10 for release
replaced ` System . err . println ` with ` LowLevelLogUtil . log ` for warning messages related to ` sun . reflect . Reflection . get
update javaparser to support java 16
adjusted padding for replies in ExpansionViewHelper . java to improve layout consistency and alignment of the status view
do n ' t invoke partition backup replica if there be no callback
added metadata handling in SeedUrl and SeedResource classes to enable storage and retrieval of seed metadata in the application
added a null check for the declaration before creating the pattern in PatternBuilder . java to prevent potential NullPointerExceptions when the declaration is not initialized
[ hotfix ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
ww - 4892 add package name to annotation action validation
updated assertions in ` IterableTest . java ` to use ` Arrays . asList ( ( Object ) null ) ` instead of ` asList ( (
added default stream methods for MapIterable , PrimitiveObjectMap , and CharAdapter classes , and implemented a parallelStream method in MapIterableTestCase to en
replace return statement to clone notifInfo to ensure that notifInfo is not modified unintentionally
apps - 4071 : fix indexoutofboundsexception when search for command
refactor AEADBlockCipher class implementation to improve code readability and maintainability
added ` isVariableLocal ` method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap ` classes
added a null check for the ID in PackageResourceTable and updated the default resource mode in RobolectricTestRunner from best to legacy to ensure proper
added a conditional check for ulSize and ulPos before retrieving table elements in TrueTypeFont . java to ensure proper handling of table elements when ulSize
refactor SignPlugin to accept a ServerCodecConfigurer parameter to enhance flexibility in handling HTTP message readers
refactor Int2ObjectCache class to improve performance to optimize object caching efficiency
added validation for Maven deployers in StandardMavenAuthenticationProvider . java to ensure proper handling of repository dependencies
refactor AudioNode class to improve code readability and maintainability
added SSL context initialization and updated error handling in LinkyHandlerFactory . java and EnedisHttpApi . java to improve SSL handling and enhance error
updated HiveFunctionRegistry to implement PluggableFunctionRegistry and added imports for OracleSqlOperatorTable and SqlStdOperatorTable to enhance functionality
resolve intermittent test failure in ci
renamed the method ` getBuildTargetForAlias ` to ` getBuildTargetForAlias ` and updated its usage to handle ` possiblyFlavoredAlias `
camel - olingo2 : fix olingo2 consumer to not return empty feed
updated Hive version handling in MetaStoreSchemaInfo . java to utilize a map for available Hive versions to improve flexibility and ensure compatibility with different Hive
server : do n ' t try to expunge vm that do n ' t have expunge it in case of vm explosion
mark multiple methods in AbstractDateAssert as deprecated to indicate that these methods should no longer be used and may be removed in future versions
updated methods in ONDashClockExtension and AlarmReceiver to use TextHelper for title and notification handling to improve code readability and maintainability by
renamed GoogleAuthUserConfigTable to GoogleAuthUserConfigTableTest and updated test cases to improve clarity and consistency to enhance test coverage and
replaced ` commit ( ) ` with ` apply ( ) ` in multiple classes to standardize method calls and improve code clarity
updated Session instantiation to use TestIdleListener to ensure proper handling of idle states
add test id to the bigqueryio integration test
added background resource and reset functionality in HotseatPredictionController and BubbleTextView to enhance visual feedback by ensuring the icon displays correctly
mondrian : fix typo find by codespell on fossies . org
add test for native system query
fix npe in explain
added a new parameter ` args ` to the ` LaunchBehavior ` and updated related methods in ` InstallCommand ` and ` AppleSimulatorController `
refactor line selection logic to improve readability and maintainability of the code
added checks to ensure the pipeline state is available before proceeding with lifecycle operations to prevent potential NullPointerExceptions when the pipeline state is not available
added clipping to the background in QsbWidgetHostView to improve visual appearance of the QSB widget
added flag processing logic in SQLManager and enhanced string processing in BlockTypeListFlag and PlotArea to track the number of flags processed and improve
replaced specific OpenGL imports with a wildcard import and added conditional checks for floating text rendering to simplify import statements and enhance performance by reducing unnecessary dependencies
[ gr - 37886 ] fix class cast exception in libffi context .
add getter and setter for propagationbehavior
[ geot - 6231 ] use regularization from l1 / l2 regularization to avoid npe
added error handling for reading / writing data in AbstractChecker . java to improve robustness by logging exceptions during data reading operations
changed the access modifier of colorStack from static to instance variable to allow multiple instances of GlyphLayout to access shared resources
updated method calls to use ` true ` instead of ` false ` for mapped statements to ensure compatibility with the latest API changes
convert currency to lowercase in BTCEDepth retrieval to ensure consistency in currency handling across the application
updated MQTT publish values from " 0.312716 " and " 0.32000 " to " 0.328000 " and " 0
remove versionedhashes parameter from enginenewpayload ( # 4104 )
reset trigger price when trigger price change
[ # 10641 ] studentfeedbacksubmissioneditsaveaction : improve redirect logic ( # 10641 )
removed debug print statements in I18NPageController . java to clean up the code and improve readability
hbase - 20513 hbase - 20513 addendum fix checkstyle error in hbase - server
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 662 : bean
added a boolean field ` alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control the always saving of the URI
added two static methods , nSetLayerType and nSetLayerPaint , to ShadowRenderNode for setting layer type and paint to enhance functionality by
replaced specific imports with wildcard imports and added visibility logic for popup menu in LWChoicePeer . java to improve code readability and ensure popup menu visibility
removed duplicate code for handling null values in StressProfile . java to streamline the code by eliminating redundancy
replace usage of ` scala . collection . asScalaIterable ` with ` collectionAsScalaIterable ` in multiple Java test wrapper classes to improve
added null check for ` requests ` in ` MockServerEventLog . java ` and improved logging in ` HttpForwardObjectCallbackActionHandler .
log warn when property file can not be load
use try - with - resources to prevent resource leak
added checks for multicast support in the conditional statement to ensure that only valid network interfaces are processed
updated sqlCommand initialization to include the length parameter to ensure proper parsing of commands with specified length
updated method calls in UnDelegateResourceActuator , UndelegateResource , BandwidthProcessor , and EnergyProcessor to set latest consumption time for energy
added an ` invalidSessionStrategy ` method to ` SessionManagementConfigurer ` to allow configuration of an invalid session strategy to enhance flexibility in session
improve error message when annotation serialization fails
added a new test class ` MapAssert _ containsKeys _ Test ` to the ` MapAssert ` class to ensure that the ` containsKeys ` method
refactor JdbcProxyGenerator to use a temporary interface for temporary statement handling to improve code maintainability and reduce code duplication
added a ` ensure ` method to ` ServerWebSocketContainer ` and modified the ` start ` method in ` DirectUpgradeTest ` to improve WebSocket
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to use ImmutableList instead of ` ImmutableMultimap `
pdfbox - 4892 : avoid npe if curvetoreplicateinitialpoint be false
replaced the initialization of ` MethodHook [ 0 ] ` with a constant ` EMPTY ` in ` Method . java ` to improve code readability and maintain
added a ` grantAccess ` flag and modified the authentication return logic in ` MockAuthenticationManager ` to allow conditional access based on the ` grantAccess `
updated the afterJob method to accept a JobExecution parameter across multiple job listener classes to enhance flexibility by allowing the afterJob method to accept a
added a check to ensure files are writable before proceeding to avoid potential errors when writing to files
added hasTimeSeriesQueryLanguage ( ) method to TimeSeriesQuery and TimeSeriesQueryOrBuilder classes to enhance query language support in the application
use event object instead of generic result
added constants for BATTERY _ LEVEL , ANNOTATION , and TIME _ WITH _ OFFSET in BundleConstants . java and updated CustomUrlManager
fix npe in searchexpression
g3d - 23 : use absolutescreenLocateable instead of geowidget
updated method calls and texture filtering in JoglGraphics and ProjectiveTextureTest classes to improve texture handling and ensure compatibility with new texture formats
updated the method ` setResourceToDelegate ` to return a ` File ` object instead of void and changed the return type of ` setResourceToDelegate
camel - 16400 : fixed property component intercept from property placeholder . thanks to jens kleine - herzbruch for
updated the condition in ActionScheduler to check if the last attempt time is greater than the last attempt time in the stage ' s last attempt time to ensure
updated dbg _ zip initialization to include a null check for debug _ log to ensure debug _ log is not null before replacing it
[ gestalt ] expose debug config in renderdebugconfig .
pipe . resetgate ( ) now reset the pipe ' s gate properly
replaced direct instantiation of TestSupplementary with a try - finally block to ensure Locale is reset after each test execution to improve resource management and ensure consistent locale
updated team creation parameters in Team . java to adjust color parameters for better visual representation
changed the type of ` activeMatchedStates ` from ` Set ` to ` ArrayList ` and added logging statements for matching states to improve performance and
updated the condition to check for null annotations in SoftAsserts . java to ensure that the method correctly handles cases where the annotation is null
updated error handling in StorageResources and added specific exception handling in StoragePluginRegistryImpl to improve clarity of error messages and enhance error management
refactor call tree printing to use a new utility method to improve code readability and maintainability by reducing duplication
added null checks for note and mActivity in DetailFragment . java to ensure safe access and prevent potential NullPointerExceptions
added a peakTasks variable and modified loading calculations in AssetManager . java to track the number of loaded tasks more accurately
simonstewart : make the firefox driver work on window .
added constants for nutch score and fetch interval , and updated CrawlDatum initialization to use these constants to improve code readability and maintain
updated import paths for ListUtils and HashedMap to ensure compatibility with the latest version of Apache Commons Collections
added a method ` isShareSchema ( ) ` to check if ` zkController ` is null and implemented the method ` isShareSchema ( ) `
updated sizeInBytes method calls to accept a boolean parameter in multiple classes to enhance flexibility in size calculation for segment sizes
added null assertion for version1 _ 2 in VersioningTest . java to ensure that version1 _ 2 is correctly initialized before use
updated SQL query to include a null check for the domain column to ensure proper handling of non - null values in database metadata
[ java ] do n ' t send new leadership term event if it be not need .
removed the method ` buildMediaType ` from ` WebClientPlugin ` to simplify the code by eliminating an unnecessary method
replaced instances of ` fillUsingLengthPrefix ` with ` fillSlice ` across multiple files to improve clarity and consistency in method naming for better
updated the logic for handling compaction in AcidUtils . java and added a test for cleanup after IOW and major table compaction in TestClean
updated PTableImpl to handle null storageScheme and qualifierEncodingScheme to ensure proper initialization of immutableStorageScheme and qualifierEncodingScheme to improve robustness by
added two new Java files for PojoProducersCustomized and RestProducersCutomized to the servicecomb demo package to facilitate the
updated configuration keys to use CACHE _ SECTION _ NAME instead of " cache " to improve clarity and consistency in accessing configuration values
replaced the registration of AesGcmSivProtoSerialization to ensure proper registration of AesGcmSivProtoSerialization
fix oredictionary . add wooden slab to oredictionary .
refactor multiple Java classes related to session management to improve code organization and maintainability
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from ` UndefinedSymbolsLinkerScript ` to simplify
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 16921 fix test failure on mysql
update spriteBatch drawing position in HelloWorld . java to correct the positioning of the texture during rendering
refactor PlayerFunctions to improve x - coordinate handling and add toString method in PlotId and WorldGuardListener classes to enhance readability and ensure proper
added a deprecated static final version constant for Lucene version 8.5 . 0 to indicate that this version should no longer be used
reformatted the closeSocket method call for improved readability to enhance code clarity and maintainability
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to validate SQL parsing and deparsing of signed integers to
refactor dependency handling to use a switch statement instead of a switch statement to improve code readability and maintainability by simplifying the dependency type
refactor target resolution methods to use ParseContext for better clarity to improve code maintainability and reduce redundancy in error handling
replaced ` testFromMain ( ) ` with ` test ( ) ` in ` MyChild ` initialization to simplify the test execution process
reduced the size of the configBlocks array and adjusted the loop index for improved performance to optimize memory usage by reducing the number of blocks
updated logging statements to use ` System . out . println ` instead of ` PlotSquared . log ` and modified version checks in ` Buk
updated SQL statement escaping logic in AbstractSQLChange . java and added a test for escaping Postgres questionmarks in AbstractSQLChangeTest . java
added methods ` ofAll ( Iterable < ? extends T > items ) ` and ` withAll ( Iterable < ? extends T > items )
added HTML escape handling for " . adoc " and " . permalink " files in BuildNavAndPDFBody . java to ensure proper file
ncolemqttconnection2 : do n ' t create mqtt broker if not need
updated ChangeSet retrieval logic to ensure correct retrieval of change sets from the root change log
[ type : refactor ] fix prometheus - plugin - netty / rocketmq - plugin - prometheus / prometheus - plugin ( #
added database drop functionality and logging in TestHiveMetaStorePartitionSpecs and TestObjectStore to enhance database management and improve traceability of database operations
added " order _ currency " parameter to BithumbAuthenticated and BithumbAccountServiceRaw methods to enhance currency handling capabilities in the API
remove thymeleafwebconfig since it be no longer need
updated method calls to use ` getReturns ( ) . isVoid ( ) ` instead of ` getReturnType ( ) . getFullyQualifiedName (
updated YamlResource to replace YAML _ READER with YAML and added a new GET endpoint for listing YAML YAML configurations to improve code clarity and
removed public access modifier from equals and hashCode methods in Marker . java to allow access to these methods from other classes
refactor thread factory implementation to use a lambda expression for thread creation to improve code readability and reduce redundancy
added unit tests for adding a list to a MongoDB entity and created a new PersonWithAList class to enhance testing coverage for the
g3d - 1010 : do n ' t sync applet panel width / height if need
replaced toolbar visibility code with a delayed execution to improve user experience by allowing immediate toolbar visibility updates
refactor ` initFirstPageReader ( ) ` and ` unpackFirstPageReader ( ) ` methods into separate ` unpackFirstPageReader (
bug cs - 16171 : do n ' t save vm password if vr be down
initialize output and writer states in Response . java to ensure proper resource management during response processing
added a check for assignment side effects in GroupDialog to ensure that assignments do not interfere with side effects
refactor JSON and JSONObjectConvertor classes to improve code organization and maintainability
updated icon height check from maxHeightWithMargin to maxWidthWithMargin to ensure icon dimensions do not exceed maximum limits
refactor methods in ` RegisteredServiceProperty ` , ` JwtTokenCipherSigningPublicKeyEndpoint ` , and ` JwtTokenCipherSigning
added content type checks for UNIX and Windows systems in Basic . java to ensure proper handling of MIME types across different operating systems
improve performance of nettyconnection . iscompression ( )
added a new method ` doesClassLoaderDescendFrom ` in ` Util . java ` and removed it from ` MethodHandles . java ` to streamline
removed unused imports and simplified connection method signature to improve code clarity and maintainability
added a new test for handling empty final columns in CSV generation to ensure proper functionality and error handling for empty final columns in CSV queries
added compass gravity and margins to NearbyMapFragment to enhance user interface by providing smoother navigation experience
added a new test method ` testInterpolation ` to ` GeoPathTest . java ` for distance calculations to ensure correct distance computations for different
updated error handling in ` LeafFilterFactory ` and ` ParquetFilterPredicateConverter ` to throw ` HiveException ` to improve robustness by
added language handling for video streams in LibMediaInfoParser to ensure proper language support for video tracks
added a warning log for schema versions that are less than the old version to notify users about compatibility issues
replaced manual array copying and resizing logic with a dedicated ` addAll ` method across multiple arrays to improve code readability and reduce redundancy
added braces around try - catch blocks in DataSourceProxy . java to improve code readability and maintainability
refactor InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a map of client registrations to improve flexibility in handling
added a method to reset the UI state in SchemaUpgradeHelper to ensure the UI state reflects the starting state of the cluster state
[ junit ] add strict mode for pending exception .
fix playerselector not match entity .
implement Closeable interface in Selector class to ensure proper resource management and prevent potential memory leaks
added a MultiplexConnectionPool for managing concurrent connections in MaxConcurrentStreamsTest . java to improve connection management and performance
added multiple calls to stringType ( ) method in CoreOptions . java to ensure proper handling of string types in the code
added checks for character and parameter values in HQL query rendering and updated the context reference in EclipseLink user repository finder tests to ensure compatibility with the
updated status checks to use constants instead of magic numbers to improve code readability and maintainability
pdfbox - 4892 : simplify code , a suggest by valerybokov
[ zeppelin - 1892 ] fix test failure in hikaricpcollectortest
updated ParquetFormatPlugin and ParquetGroupScan to enhance file selection handling to improve compatibility with Parquet table metadata management
initialized ` isSuccess ` to ` true ` and refactored compilation task execution logic in ` Jsr199Javac . java ` to improve compilation
added a listener to handle table changes in DefaultSortedTableModel to enable dynamic updates to the model based on the table changes
updated the number comparison from 49152 to 65535 in ServerConfig . java to allow for greater flexibility in server configuration limits
added document provider support in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to ensure compatibility with Android KitKat and above
removed the call to startLogging in MainApp . java to streamline logging process
added error handling for RequestRejectedException in FilterChainProxy to ensure that wrapped RequestRejectedExceptions are properly handled and handled
updated array copy logic in StringBuilder . java to improve clarity and consistency in handling character arrays
pdfbox - 4892 : throw exception if filterlist be empty
add ` ` tbstopwatch ' ' class to help debug flaky test
set the initialization state of the PListStore class to ensure the class is properly initialized before use
marked several classes as deprecated to signal that these classes should no longer be used and may be removed in future versions
[ zeppelin - 1892 ] set the current thread context classloader for remote interpreter
fix entity check for commandsourcestack .
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility with the latest
updated variable names in DeadlineTimerWheel . java for consistency to improve code readability and maintainability
# 167 - enh : add beanpropertyassocmany and beanpropertyassocmany . getelementdescriptor ( ) to get the simple name
updated JavaScript and CSS resource URLs in BasePage . java and added WroSassProvider class to enhance resource processing capabilities to improve resource management and
added a new test method ` showLatestTimeseriesTest ` to the ` IoTDBMetadataFetchIT ` class to verify the functionality of
rename ` ` appcontextlocation ' ' to ` ` contextconfiglocation ' ' in security enforcement filter
replaced direct exception handling with a conditional check for ` e ` before throwing ` CertPathValidatorException ` to improve error handling flexibility
problembenchmark : disable write output solution by default
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` for testing slice size reopening in the ` SortedTableMap ` implementation to ensure correct behavior of
add a botania botania botania botania botania botania botania recipe for pipe waterproof .
mahout - 1181 : fix arrayindexoutofboundsexception in sequentialaccess sparse vector .
added handling for shulker entities and updated entity management in BukkitMain and EntitySpawnListener to improve entity management and ensure proper cleanup
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the debug
check if the destination name do n ' t exceed the system property ' maximum filename length '
refactor UpToTagChangeSetFilter initialization and add isSeenTag method to improve error handling to ensure a warning is logged if no tag is found
fix checkstyle issue in util / translator / groupby / doffnfunction . java
refactor BrokerRoutingManager class to improve code readability and maintainability
change volumePaint and upPaint from gray to GREEN in CandlestickRenderer . java to improve visual representation of the candlestick data
refactor layout parameter handling in InsettableFrameLayout to use a separate variable for layout parameters to improve code readability and maintainability by
added a duration parameter to the ` BuildTargetDurationListener ` class and updated related test cases to enhance the functionality of ` BuildTargetDurationListener `
updated database migration test classes to use ` assumeTrue ` for profile checks to ensure tests are only executed if the database profile is active
added a null check for the user object before processing claims in OAuthConfirmationController . java to avoid potential NullPointerException when the user object is null
camel - 16400 : camel - test - infra - add method to replace route from endpoint .
use non - blocking hashset instead of concurrenthashmap in cassandraconnection
api : add networkid parameter to listpublicipaddrescmd to list public ip by source network id
added functionality to ignore battery optimizations in ShadowPowerManager to ensure proper behavior ofBatteryOptimizations based on API level
updated the method to retrieve the Jetty version from __ buildProperties instead of a hardcoded value to ensure compatibility with the latest Jetty version
added unit tests for verifying invocation order in ` NumberOfInvocationsInOrderVerifierTest . java ` to ensure that the verifier correctly handles cases with
tregex : do n ' t force evaluate when no match instance
added a new parameter " - foreground " to the startProfile method call in NewProfileExtensionConnection . java to enable foreground mode for profile execution
replaced instances of ` executor ` with ` executorLauncher ` and ` executorCloser ` to improve clarity and consistency in thread management
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related code to improve
updated logging to include file name in CodeEditorView and ensured proper cleanup of actions list in EditorTextActionWindow
include exception message in skipped entry warning
added LinkStorage support and updated document storage in Fetcher , FetcherMain , and FetcherTask classes to enhance document storage functionality and
updated the ` populateBubble ` method to accept an additional parameter for existing bubbles to enhance functionality by allowing the population of multiple bubbles
improve error message when schedule job can not be execute
updated method signatures in MotanServiceBeanPostProcessor , MotanRpcExt , TarsServiceBeanPostProcessor , and Tars
[ java ] use nak _ multICAST _ delay generator for delay generation .
updated Gson initialization in ClientInformationResponseView . java to include client _ id , client _ secret , and expiration properties to enhance JSON serialization to
added a check to ensure the field amount is non - zero before setting the average price to avoid potential errors when the field amount is zero
removed the ` rawExecutionReports ( ) ` method from the ` BinanceStreamingMarketDataService ` class to streamline the subscription process for execution reports
added a ` fail ` method to ` LdapTimeoutTest ` and modified the failure handling in ` fail ( ) ` method to include an exception parameter to
fix for ticket : 1 : if user dictionary file do not exist , log it .
updated password file handling logic in AmbariServerConfigurationHandler and modified test assertions in RootServiceComponentConfigurationResourceProviderTest to improve clarity and correctness
added a check for already parsed segments in ParseSegment . java to avoid processing segments that are already parsed
[ hotfix ] [ yarn ] add yarn . application - attempt - attempts - validity - interval configuration option
do n ' t unload h2 driver if h2 driver be not include
hbase - 27875 tablesnapshotinputformat should use default readtype for scan
added fixed height and width parameters to the LoginInstanceRequest class to allow dynamic adjustment of image size based on instance login options
added a cornerRadius parameter to the update method across multiple classes to enhance functionality by allowing the update method to include a corner radius parameter
updated COMMANDS _ TO _ REMOVE array to include additional commands and added filtering for job tracker addresses to enhance command handling and improve job tracker address
refactor connection handling in TxnHandler to include retry logic to improve connection management by allowing multiple attempts for connections to the database pool
change method name from ` txnEnsureReserve ` to ` txnCheckReserve ` and add ` pollOperation ` parameter in ` txnEnsureReserve ` and `
added a new field ` strings ` with a value of ` char [ ] [ ] [ ] ` to the ` FirstOfStringsMatcher ` class to
updated DELETE statements to use " CLIENT SELECT " instead of " ROWS " in multiple files and added a new ExplainPlanTextTest class
updated exception handling logic to check for retryable exceptions to improve reliability of exception handling related to socket data issues
added an ` ImmutableList < String > rapidInstallTypes ` parameter to multiple classes for managing rapid install types to enhance flexibility
updated the regex pattern for generating a seed pattern in SortTest . java to ensure proper handling of negative values in the SeedPattern logic
refactor MultimapSubject to use factory methods for ` valuesForKey ` and ` iterableEntries ` to improve code clarity and maintainability by
updated the calculation of the y - coordinate in the launcher to simplify the return statement for better readability and performance
added transmux property and related methods to Transformer and TransformerInternal classes to enable audio transcoding based on media item count
added localization support for strings in the Picker class to enhance user experience by ensuring strings are localized
camel - 16400 fixed the unit test error of camel - cxf
hhh - 14501 handle deadequate lock acquisition in postgresql dialect
added assertions and modified query handling in TestJdbcDriver2 . java and HiveStatement . java to improve test reliability and ensure proper query execution
[ beam - 8470 ] enable parddoretest . testwithunboundedpcollections by default
updated HTML string construction in GpsSimpleViewFragment to use Strings . getFormattedFileName ( ) instead of getFormattedFileName ( ) to simplify the code
[ java ] remove unused parameter leadershiptermid from log replay .
replaced direct access to ` getHttpExchange ( ) ` with a local ` exchange ` variable in ` HttpSender . java ` to improve code readability
[ hotfix ] [ test ] migrate failovercoordinatortest to junit5
updated the method name from ` getToken ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity
added null checks and improved marker handling in multiple classes to enhance code robustness and prevent potential NullPointerExceptions
pdfbox - 4892 : use double instead of float for font size
change the return type of the matchSingleDocoMoPrefixedField method from String to String [ ] to ensure proper handling of multiple email instances
added handling for null exclusions in RawMavenResolver to ensure proper extraction of group artifacts from dependencies
added DSXExchangeInfo initialization and improved currency pair handling in DSXAdapters and DSXBaseService classes to enhance error handling and
refactor multiple test classes to improve code organization and readability
[ drools - 90 ] use default release id when incremental compilation
updated the initialization of ` copy ` and added a conditional check for ` sobj . has ( k ) ` before setting the ` copy ` property to
camel - 16400 : fix javadoc warning in camel - jackson module
[ gr - 27875 ] fix hostfielddesc to not throw illegalaccessexception when field be not find .
added a method parameter annotation for CompletableFuture in DefaultNullnessAnnotations . java to enhance null safety checks for concurrent operations
updated the time threshold for mFreezeCheckPoint from 9000 ms to 10000 ms in PlaybackController . java to allow for a longer duration based on
added imports for ` java . lang . annotation ` and ` java . lang . annotation ` , and removed unused imports in ` PowerMockRunner . java
replaced ` typeCode ` with ` realType ( ) ` in ` unmarshalIn ` method to ensure the correct type is used for unmarshalling
refactor indentation logic in TabsAndIndentsVisitor . java for improved clarity to enhance readability and maintainability of the code
updated TestSingleTokenTokenFilter to extend TestCase instead of LuceneTestCase to ensure compatibility with the latest testing framework standards
updated the write method in HtmlProcessInformationsReport . java to use a wrappedText tag to improve the presentation of text in the report
refactor ` JdbcStepExecutionDao ` , ` MapStepExecutionDao ` , and ` SimpleJobRepository ` to streamline execution context
added a conditional check for the new media folder before adding it to the root folder to ensure that the child folder is only added if the configuration allows it
added null checks for the actor variable before calling setFirstWidget and setSecondWidget methods in SplitPane . java to ensure proper handling of widget states to
added support for handling Parameterized Java types in RemoveUnusedImports . java to enhance type handling and maintain consistency in package management
fix npe in uniquemodlistbuilder when there be no mod file
changed LOG variable from instance to static final in TicketGrantingTicketImpl . java to ensure proper logging context for better resource management
updated SQL string for creating timeseries with SNAPPY tags to ensure compatibility with the latest software requirements
added a method to check if a string can be interpreted as a value in AttrData and updated error handling in Converter to improve code clarity and ensure
added support for US International PC keyboard layout in CPlatformResponder . java and introduced utility methods in LWCToolkit . java to enhance compatibility with
[ java ] set aeron _ pubation _ connection _ timeout for test medium driver .
added a check for specific request URIs in GTVGFilter . java to prevent processing of specific request URIs
added an assertion to verify that the installation process fails in TestUtil . java to ensure that the installation process correctly verifies if the device is rooted
# 212 - remove oracle ansi sql limiter ( # 212 )
updated test cases in TestSimpleBodyHandler and TestVertxTLSBuilder to reflect the correct number of enabled secure transport protocols to ensure tests reflect
updated Java test file paths in DiffRuleKeysScriptIntegrationTest . java to ensure compatibility with the latest Java library files
added a check for ` mIsDismissHapticRunning ` before executing ` goingUp ` in ` TaskViewTouchController . java ` to ensure that
bump common for world explosion fix .
removed unused imports and implemented getItemId method in SymbolInputAdapter to streamline code by eliminating unnecessary dependencies
updated API endpoint from ` @ Path ` to ` @ QueryParam ` and adjusted limit values in ` BitfinexPollingMarketDataService ` to improve API
camel - 16400 : fix staxconvertertest to work on window
added toString ( ) method to KubernetesLeaderElectionDriver and ZooKeeperLeaderElectionDriver classes to include the ConfigMap name in
refactor SqlSessionFactoryBean to improve code readability and maintainability
fix : do n ' t call reflectutils . getdesc ( ) in tripleinvoker ( # 1892 )
replaced error logging with a RuntimeException in PolygonRegionLoader . java to improve error handling by throwing a specific exception instead of a generic error
added a method to check if the Deadline is started and implemented timer initialization logic in RawStoreProxy to enhance thread safety and ensure proper timer management
added handling for ClosedChannelException in NettyRequestExecutor to improve error messaging for closed channels to provide clearer context for debugging purposes
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerExceptions when genres is null
[ hotfix ] [ checkpoint ] do n ' t reset master hook in region recovery
feat : add support for map container in entitydatajsonformat
added a null check for oldestUnpinnedMemTableInfo before retrieving its first file version in WALNode . java to avoid potential NullPointerExceptions when accessing
added a test for retrying same host on callback failure in HttpTest . java to ensure proper handling of callback failures in the HTTP client
truffle - tutorial : update package - info . java to reflect the new package structure
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server escape character handling to ensure proper functionality and correctness of SQL Server escape character
fix npe in joobybeanrepository when route be null .
replaced synchronized block with a while loop to improve readability and maintainability of the code
updated package imports for ParameterFlags to reflect the new provider structure to ensure compatibility with the latest Jaffl provider architecture
refactor cropperutils to be more generic
removed the appName parameter from configure method signatures across multiple classes to simplify method signatures and improve usability
add test for ignore and ignore dependency during installation
danielwagnerhall : use -- headless = chrome instead of -- headless = false
updated value assignment in VersionedValue . java to use intern ( ) method to ensure value is properly encoded to prevent data corruption
added a check for " MOVE " status in the condition to ensure proper handling of MOVE commands in the response
updated time zone specification for US _ MONTH _ DAY _ YEAR2 _ TIME and ISO8601 _ PERIOD _ MICROS in FixedDateFormat
updated import statements from ` org . apache . curator . shaded ` to ` com . google . common . collect . Lists ` in multiple
[ hotfix ] [ runtime ] fix race condition in hsbuffercontext # startspilling
updated permission checks to include admin _ visit _ untrusted permission to enhance security by restricting access to untrusted plots
make sure we do n ' t create a jabberconnection if we be already register .
updated character checks in BasicURLNormalizer and added a new test for curlyBraces in TestBasicURLNormalizer to improve URL normalization logic to enhance URL
changed access modifier of methods in QuickstepTransitionManager from protected to private to restrict access to methods for better encapsulation
added a check to assign a default value if the clock rate is zero to ensure consistent behavior when comparing clock rates
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and modified ` generateProjects ( ) ` method to return ` ImmutableSet
updated zero digit setting logic in HostLocaleProviderAdapterImpl . java to ensure proper validation of calendar ID to prevent potential ArrayIndexOutOfBoundsException
added a new file MSwingUtilities . java to implement MSwing UI components to enhance the application ' s ability to display error messages and
camel - 16400 : mailproducer now support async processing . thanks to franz for the patch .
added ` @ RefreshScope ` annotation to ` CasCoreWebConfiguration ` and ` PasswordlessAuthenticationConfiguration ` classes to enhance resource management by allowing
added unit test base on user forum issue
added Main . java and ScriptRenderer . java files to implement a scripting framework for rendering templates in the application
added a condition to check if the input state is __ NONE and implemented a test for query handling after reading to ensure proper handling of form encoding
added checks for glyph dimensions and updated touch focus handling in various classes to ensure proper touch focus management and prevent potential null pointer exceptions
replaced direct failure reporting with context - based close hooks in DeploymentManager . java and added a new test for context shutdown hook in DeploymentTest . java to
fix a bug in lexiconrecipemappings . stacktostring ( ) that could cause an npe
increased sleep duration in ConstantTimeBackoffTest from 100ms to 500ms to allow more time for thread interruptions to complete before proceeding
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4832 : display name
use classloader . getresource ( ) instead of class . getclasspath ( )
added a new file ` FieldUtils . java ` to provide utility methods for field access and manipulation to improve code organization and facilitate
removed the check for speculative type specifications in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to simplify assertion
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added custom content padding to ` customContent ` to
fix xmpp account not be able to load correctly .
added a method ` setvar ` to ` Commands . java ` to handle command - line variable settings to provide a flexible way to set command line
fix bug where animal tame would not be render if the item be in the wrong place . close # 788
improve error message for invalid window value
pdfbox - 2852 , pdfbox - 2852 , pdfbox - 2852 , pdfbox - 2852 , pdfbox - 2852 :
added app mode setting in PageListController to ensure the app displays correctly based on the current mode
added methods to handle build arguments and Docker file paths in ImageFromDockerfile . java and created corresponding tests in DockerfileBuildTest . java
added a null check before adding thread information to ensure thread information is only instantiated if it does not already exist to avoid unnecessary object creation
updated the condition to check against a floating - point value of ` Utils . FLOAT _ EPSILON ` instead of ` 0.0001 f ` to ensure
[ hotfix ] [ runtime ] improve log in singleinputgate and singlecheckpointbarrierhandler
added new tables to the Schema class to enhance schema management capabilities in the application
added a minimumSimilarity parameter to FuzzyQuery and updated related classes to allow for configurable similarity calculations in fuzzy queries
renamed the method ` addActionsView ` to ` setActionsView ` to improve clarity and consistency in method naming
logback - 1349 : move immediateflush property to the enclosing appender .
added multiple AutoConfigureAfter annotations to ZipkinAutoConfiguration to support multiple auto - configuration sources
modified component removal logic in JLayer . java and added a new test case for bug6875716 . java to handle null component case to ensure proper
updated import statements from ` avro . shaded ` to ` com . google . common . base ` in multiple Java files to ensure compatibility with the
update bciblockmapping to correctly handle unwind block
reordered conditional checks and added legacyRenderer property to Label class to improve readability and maintainability of the code
replaced ` intToFourBytes ` method with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and ` AbstractJ
added null check for mObserver before calling isHomeAndOverviewSame to avoid potential NullPointerException when mObserver is null
updated the ` thenComparing ` method signature in ` mmm Comparator . java ` and added a new ` Department ` class and corresponding test in
refactor DocIdSet class to improve code readability and maintainability
updated the end time UTC setting in UserRuleAnomalyFunction . java to use currentKey bucketMillis instead of null to ensure the correct time zone is
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure robust parsing of input values to avoid runtime exceptions
added a line break before setting the class loader in MockFactory . java to improve code readability and maintainability
added a new ` OriginalFormat ` class to handle string formatting for ` Object ` objects in ` ConverterWithEnumFormat . java ` to enhance object
updated SimpleDateFormat to use a constant for year format to improve code readability and maintainability by avoiding magic strings
refactor JAWTRenderer class to improve code readability and maintainability
camel - 15836 - camel - aws2 - * : enable autowire on the client , regen doc
server : generate a default mac address if the network do not support it
added a check for " Authorization " header in ProxyServlet . java to ensure proper handling of authorization headers
change method call from submit to execute in TraceableExecutorService to ensure proper execution of context - related commands
added ` getDetails ( ) ` and ` setDetails ( String details ) ` methods to various authentication classes to provide detailed information about authentication processes
updated the initialization of ` randUsePoints ` to use a random value of ` 80 ! = nextInt ( 5 ) ` to improve variability
[ web ] use end - of - sentence instead of dot
updated TimeFormat methods to include Locale parameter for better locale handling to ensure consistent behavior across different locales in time formatting implementations
updated imports in GroovyParserVisitor . java and GroovyPrinter . java to use wildcard imports and modified argument handling logic to improve code readability and
added bounds checking for bottom and left inset values to ensure proper inset boundaries for UI elements
refactor gesture state handling in TouchInteractionService to improve clarity and maintainability of gesture state management
replaced Joda - Time with Instant and BASIC _ ISO _ DATE in LlapServiceDriver . java to improve date formatting consistency and compatibility
update openblas . java and openblas _ nolapack . java files for consistency to improve code clarity and maintainability
do n ' t use ioutil . closequietly in torrent storage
added synchronized keyword to initTxnMgr method to ensure thread safety during transaction management
increased wait time for recovery from 120 second to 480 second in ` waitForRecoveriesToFinish ` method and increased socket timeout from 15000 to 4
added a new class ` SearchResults ` to handle search results to provide a structured way to retrieve search results from Lucene
refactor thread CPU refresh logic to use a single refresher instance to improve code readability and maintainability by reducing redundancy
initialize primitive array only if necessary
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " and " 8.10 . 0
updated feature flags for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified text filtering logic in AppIcon
added a new API endpoint to retrieve tenant pools for a specific instance to provide functionality for managing tenant pool configurations in the application
added methods to early terminate search fields on document ID and prefix in TopFieldCollector . java to improve the handling of early termination conditions based on
added support for ` isToString ( ) ` method in ` InlineBytecodeGenerator ` and updated imports in ` InlineByteddyMockMakerTest ` to
added logging statements in CxxCompileStep and CxxPreprocessStep to improve error handling and logging for compilation and preprocessing processes
add stringutil . remoatcharacter ( string , char ) to remove a character from a string .
[ 3.0 ] fix metadata service protocol parameter not be set ( # 3546 )
[ drools - 7 ] add a datatransformer interface to facilitate kie - api - runtime - api - kie - api - runtime
change data type of ` objval ` and ` num ` from ` Collection < ? > ` to ` Number [ ] [ ] ` in ` Distribution
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated the declaration of the core variable in ElectionContext . java to ensure proper initialization of SolrCore to avoid potential null reference issues
refactor ITestDbTxnManager class to improve code readability and maintainability
refactor database connection handling to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added unit tests for MapModel handling in CodeFirstPojoClient and CodeFirstPojo to ensure correct functionality of map model tests in the
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
updated item listener handling in ScaleDialog . java to improve null safety and ensure correct selection state management
fix npe when update player step status
updated AppearanceGeneratorHelper to log warnings when no appearance stream is created to improve error handling and avoid unnecessary exceptions
replaced TreeSet with LinkedHashSet for keys in ExecuteSqlCommandStep . java to maintain insertion order of keys
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 and modified its value in CancelEventTimer . java , added
updated preload values in dc1394 . java from " libdc1394 - 22 " to " libdc1394 - 25 " to " lib
added a conditional check for agentSupport before setting all constructors to public in MainMockTransformer and created new test classes for static methods with private constructors to ensure
pdfbox - 4892 : do n ' t try to decrypt the same object multiple time , a suggest by valerybokov
bug 60725 - add awt / jmeter title to the main window
modify depth calculation based on pixel size to ensure correct depth representation for different pixel sizes
added error handling for unsuccessful HTTP responses to improve robustness by providing more informative error messages
added a static method ` exit ` to ` TopLogging ` and refactored stack trace printing in ` TopThreadGroup ` to improve error handling and
updated the logic for determining the start index in NativeRegExp . java to ensure correct initialization of the start index based on regex conditions
ignore test until optaplanner - 468 be fix
[ hotfix ] [ runtime ] fix arrayindexoutofboundsexception in defaultallocator
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO , and implemented deleteEntriesWithoutFeeds method in AdminREST to ensure
changed the return type of the appendToLabel method from void to AtomicCounter to allow method chaining for better usability
[ java ] add noop idle strategy for low latency medium driver .
added handling for NOT _ MODIFIED HTTP status in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure headers are not modified when the response
truffle / instrumentation : add a tool eval node to the test framework
removed the paintTabArea method from SynthTabbedPaneUI to streamline the method by eliminating unused code
refactor ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept a variable number of arguments instead of
camel - 16400 : fixed the unit test error of camel - ftp
added a new method ` build ` to ` JavaProvenance ` and removed unused imports in ` MavenProjectParser ` to streamline the
added logging for registered Hive UDFs and non - deterministic types in HiveFunctionRegistry . java to improve traceability and debugging of UDF registration processes
increased loop iterations from 100 to 200 in CloudStateUpdateTest . java to improve test coverage and reduce execution time
throw unknown cfid instead of unserializable cfid when delete cf
added a check for writable output files in NativeErrors . java to ensure that the output file is not writable to avoid errors during tests
added package information checks in LauncherModel . java to ensure that the application info is enabled before proceeding to prevent PackageNotFoundException when the package is not
cloudstack - 4892 : do n ' t try to delete the ntwk _ offering _ map if the db upgrade fails
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a new test for non - skippable exceptions to
replaced ` startsWith ( completed ) ` with ` regionMatches ( ) ` in ` LineReaderImpl . java ` for case - insensitive matching to improve
added imports for SourcesFileErrors and SourcesFileErrors , and modified data table retrieval logic to include GLOBAL _ DATA _ TABLES to enhance error handling
added import for Overview and implemented task dismissal logic in TaplTestsTaskbar to enhance user experience by ensuring tasks are dismissed when
server : update systemvm template after db upgrade
removed unnecessary null checks in LdapClient . java to improve code readability and maintainability
refactor index access logic in SequenceAction . java to use a variable for the current index to improve code readability and maintainability
do n ' t fail startup if keyspace do n ' t exist
added a check for synthetic fields in ReflectUtils . java to ensure that only synthetic fields are processed to avoid processing errors
added LoggerProvider to manage application - wide logging to enhance logging capabilities for better debugging and monitoring
changed the data type of ` builder ` and ` port ` from ` ImmutableMap < String , String > ` to ` ImmutableMap < String , Object > `
added deprecation warning for multiple glue classes in SpringFactory . java and improved error handling in SpringFactoryTest . java to inform users
added a method ` deepStart ` to the ` Startables ` class that calls ` Arrays . stream ( startables ) ` to facilitate the
removed the deprecated method ` reservePrimitiveExtensionArray ( ) ` from ` Shape ` and its implementation in ` ShapeImpl ` to streamline the codebase
fix laser table not work with block .
refactor the condition for checking object names in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
log4j2 - 1349 fix memorylimittest failure
updated conditional checks in RequestHandlers . java to simplify null and empty handling logic to improve code readability and maintainability
updated logger name handling in ProxyServlet to ensure consistent logging format for servlet names
updated Python environment handling in ProjectBuildFileParser to improve filtering of Python modules to ensure only relevant Python modules are processed
updated audio frame size calculations and improved error handling in DirectAudioDevice . java and Toolkit . java to ensure proper handling of audio data
fix npe in elasticsearchstringlookupservice when enums be null
improve error message for unexpected end of segment
added assignment of the WebSocket session policy to the container scope
simplified static field initialization logic in Java2TypeScriptTranslator . java to improve code clarity by removing unnecessary static field checks
added a webroot argument to the StaticHandler constructor to allow configuration of the web root for the server context
( chore ) camel - spring - boot : migrate to junit 5
bugfix # 207 , use editorregistry to check if vm be attachable
replaced the method ` printHeaderObject ` with ` createHeader ` across multiple formatter classes to improve clarity and consistency in header creation functionality
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and prepare for future
added multiple calls to reset the buffer in ReduceRecordProcessor . java to ensure the buffer is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mOriginalForeground or mOriginalBackground are null
updated conditional checks for decimal explicitely in FloatingDecimal . java and added a new ToString . java file to ensure correct handling of decimal explic
modified the property type check in PropertyDescriptor and added a new test class Test7189112 to ensure proper handling of property types and validate the property setter
removed maxVersion parameter from version retrieval in RealTimeGetComponent . java to simplify version retrieval logic
set the origin header only if it do n ' t already exist
updated task visibility and animation logic in RecentsView and TaskView classes to enhance user experience by providing visual feedback during task transitions
enhanced error messages in ORCRecordReader to include the field name to improve clarity of error messages for better debugging
added " Clear HLS : Tears of Steel " and " Clear HLS : Basic 4x3 " MIME types in DemoUtil .
updated import statements and constants for HIBERNATE _ ENTITY _ MANAGER _ INTERFACE and HIBERNATE _ J
updated log paths for ExecRPCInvoker and WritableRpcEngine from " execRPCInvoker " to " org . apache . hadoop . ipc . RPC
added diagnostic logging for union types and fixed fields in TestSpecificCompiler . java to improve error handling and debugging capabilities during compilation
added a return statement for session creation in WebSocketEndpoint . java and implemented a test for session closure in WebSocketIT . java to improve session management
updated delay calculations in multiple services and changed method names in DaoStateNetworkService to optimize delays and enhance logging clarity during batch
ww - 3850 add xwork - 1.0 . dtd and xwork - 1.1 . 1 / en to xwork
modified the stream stop logic in WebCamInputPanel . java to ensure proper handling of video tracks when the stream is stopped
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
[ geot - 6892 ] fix geot - 6892 and geot - 6893 build failure
updated the method call from ` collections . substream ( 200 ) ` to ` collections . skip ( 200 ) ` in ` TargetType58 . java `
hhh - 10956 - improve error message when identifier be miss
rename findfulltextaction to downloadfulltextaction to avoid confusion
refactor URI registration logic in URIRegisterExecutorSubscriber and ShenyuClientRegisterDefaultServiceImpl to include host and port details to enhance
refactor WebSocket mapping and upgrade handling classes to improve code readability and maintainability
added a check for non - blank osdbHash before retrieving information from the OS DB to avoid potential NullPointerExceptions when the hash is blank
added token transfer functionality in RuntimeImpl . java and integrated it in MUtil . java to enhance contract handling for smart contracts
camel - 16400 : camel - ftp - allow to set the current working directory in stepwise mode .
updated method call from ` getSearchBindDN ( ) ` to ` getSearchBindPassword ( ) ` in ` JacksonLDAPConfiguration . java
added checks for empty result sets in MapJoinOperator and modified join condition logic in HybridHashJoinContainer to ensure proper handling of join results
updated the constructor of ` HTTPSPDYAsyncEndPoint ` to accept a ` AsyncEndPoint ` as a parameter to enhance flexibility by allowing
added ` tweetId ` to the intent extra in multiple adapter classes to ensure that the correct tweet ID is set for each adapter implementation
refactor disconnection logic in HttpURLConnection to use a dedicated disconnectWeb method to improve clarity and maintainability of the code
replaced ` int _ numChildren ` with ` AtomicInteger _ numChildren ` and updated the return statement to use ` _ numChildren ` to ensure thread
[ type : refactor ] fix checkstyle issue in plugin / plugindata and plugin / websocketdata ( # 4892 )
disabled the test method in ValueTypeTests . java to temporarily disable the test due to known issues
resolve split - packages : move everything from kie - api under org . kie . api : move resourcefactoryserviceimpl to kieresources
change predicate type from IN to NOT _ IN across multiple predicate classes to improve clarity and consistency in predicate handling
updated exception handling to catch a broader range of exceptions and modified account preference title to include the host name to improve error handling clarity and
added a null check for witnessService before validating permission to prevent potential NullPointerException when witnessService is null
updated the construction of taggedCol to use getExprString ( ) for expression string retrieval to improve clarity and consistency in expression handling
added a check to ensure the Javadoc is not present before setting it to avoid potential null pointer exceptions
replaced occurrences of ` holderMethod ` with ` holderMetadata ` in ` CompiledICHolder . java ` and added a new class ` Redefine
removed condition for slideToDestMotion and replaced revalidate ( ) with revalidateWithAnimationSafety ( ) and revalidateWithAnimationSafety ( ) to
[ hotfix ] [ connector / kafka ] use unregisteredmetricsgroup in deserialization schema adapter
updated the calculation of the y - coordinate in the Polygon class to correctly account for the original x and y coordinates
updated cache creation to accept a Configuration parameter to enhance flexibility in cache configuration management
added a length check for stringConstant in InheritanceUnsafeGetResource . java and created a new Bug2974855 . java file with a test method
updated ShadowCookieManager class to improve cookie management functionality
added a new configuration for external table permission checks in Hive to ensure proper authorization checks are enforced for external tables
added a closing brace to the conditional statement in ` mmm Stage . java ` and modified the drawing position calculation in ` ProgressBar . java ` to
truffle : use native byte order if available
updated the property name for the PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout
updated ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified web view loading logic to enhance flexibility in handling web view
corrected a typo in the exception message related to JDBC type specification to improve clarity and accuracy of error reporting
removed the ' required ' parameter from the DateTimeFormat annotation in AuditEventsMvcEndpoint . java and updated request handling in AuditEventsMvcEndpointTests . java
renamed ExponentialTimer and related classes to PreciseThroughputTimer and PreciseThroughputTimer to PreciseThroughputTimer
remove softbody from dynamics world after test
changed interface declarations to public for SinkFunctionProvider , SourceFunctionProvider , OutputFormatProvider , and InputFormatProvider to allow access to these interfaces from other classes
[ zeppelin - 8474 ] improve error message in zeppelinhubclient and zeppelinwebsocket
add unit test to verify that the jingle element do not include a namespace
fix npe when redplasma be n ' t find .
added support for x - http2 header in bareresponseimpl
updated member removal logic to use plot ' s trusted members instead of plot ' s members to enhance security by ensuring only authorized users can remove members
updated delimiter length and formatted string in SimpleReport . java to improve readability and maintainability of the code
added support for ignoring symbol files in the Javap task to enhance flexibility in handling symbol files during processing
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` start ` method from the ` TickerDemo ` class
removed unnecessary try - catch blocks for contract type handling to simplify error handling and improve code clarity
[ web ] only create input3d for realsense applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests during development
do n ' t throw parserexception when parse a script tag
added @ Override annotation to getRepositoryFactoryClassName method to ensure proper method overriding for repository factory class
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to enhance
refactor assignment of properties in IOSGLES20 class to improve code readability and maintainability
deleted UploadPathActivity . java and removed UploadPathActivity . java to streamline the codebase by eliminating unused components
updated return statements to conditionally set total term frequency and sum total term frequency based on index options to ensure correct behavior of term frequency calculations
fix ( ctconstructor ) : do not set implicit constructor when source start be not at the start of constructor
updated the ` populateValidateNullableIfNeeded ` and ` populateValidateUnique ` methods to include a ` Database ` parameter to ensure compatibility with ` OracleDatabase `
refactor Database class to improve code readability and maintainability
refactor SpringApplicationBuilder class to improve code readability and maintainability
updated the assignment of the iterator in PointInSetQuery . java to ensure proper reference to the iterator in the iterator initialization
removed a substring from rawName in SchematicHandler . java to simplify processing by eliminating unnecessary characters
added case handling for " java . util . Collections $ EmptyList " , " java . util . Collections $ EmptySet " , " java . util
changed the visibility of the Option enum from static to instance level
refactor Compose and ComposeActivity to use AlertDialog for handling twitlonger character limits to improve user experience by ensuring proper dialog
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` FileOperationsHelper . toggleKeepInSync ( getFile ( ) )
replaced ` DatatypeConverter . parseBase64Binary ` with ` java . util . Base64 . getMimeDecoder ( ) . decode `
added two new files , ControllerCounter . java and DBCallback . java , to provide functionality for analytics tracking and database operations
added ' final ' modifier to the parameter of the deleteTicket method in EhCacheTicketRegistry . java to enhance code clarity by indicating that
added a new file FlywayMigrationRunner . java that defines a main method for FlywayMigrationRunner to facilitate the migration of Spring
replaced instances of ` isEmpty ( ) ` with ` size ( ) = = 0 ` in ` HashMap ` and added a new class ` Override
update version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the new release version
updated the ` modify ` method to accept a nullable ` EnumSet < Modifier > ` parameter and added logging for missing ORC compression modifiers to enhance
added null check for main value and improved error handling in LauncherHelper . java to ensure robustness by preventing null pointer exceptions and
reformatted test class names for consistency to improve code readability and maintainability
make graal node size a configurable rather than a constant
bugzilla 52522 - xssfsheet : make copypolicy constructor public
added a method to reset the icon load result in FloatingIconView to ensure proper handling of icon loading results
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure the
updated drawable dimensions based on landscape orientation in IconRecentsView . java to ensure proper layout handling for different screen orientations
deleted the AddAdapter . java file to remove unused code to streamline the project
fix indexoutofboundsexception in nonstaticlifter
modified the method signature of ` OpTraitsRulesProcFactory ` to include ` processSortCols ` as a parameter to enhance functionality by allowing
updated LogWatcher initialization and improved message validation in TestLogWatcher . java to enhance error handling and ensure messages are validated correctly
added a print statement for " < any > " in Java2TypeScriptTranslator . java to enhance TypeScript translation capabilities
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest version releases
added a check for the presence of SPRING _ AOP _ PROXY _ TARGET _ CLASS in the environment to ensure that the proxy target class is
removed the singletonLock variable from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary locking logic
improve documentation for mockserver example
improve performance of suitehtmlreporter
updated Maven repository handling and improved error handling in MavenExecutionContextView . java , and added unit tests in MavenRepositoryMirrorTest
added a ` name ` parameter to ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePathTypeCoercer ` classes
updated the redirect URI comparison logic in OAuth20CallbackAuthorizeEndpointController . java and added a test case in OAuth20CallbackAuthorizeEndpointControllerTests . java
replaced instances of ` empty _ ANNOTATIONS _ ARRAY ` with ` AnnotationParser . toArray ( ) ` across multiple classes to improve code readability and
updated method calls to use getBadgedIconForUser and getBadgedLabelForUser instead of getBadgedDrawableForUser and getBadgedLabelForUser to
[ hotfix ] [ doc ] fix default line separator in global config
fix regression in configurationmanagerutils . isimplementingclass
sanitize input string in basecontroller ( thymeleaf )
chore : update java and python dependency ( # 638 )
added IOException handling to the buildFileNamesCanBeDifferentCrossCell method to ensure proper error reporting when building file names with different configurations
refactor CountersReader class to improve code readability and maintainability
refactor AllAppsRecyclerView and UserEventDispatcher to streamline container type handling and improve event logging to enhance code clarity and maintainability by
hbase - 27875 deprecate hbase . ipc . server . allocator . max . buffer . count and hbase . ipc .
improve native query performance
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types based on the presence of real and non - generic parameters to improve
refactor TestFSTs class to improve code readability and maintainability
pdfbox - 4892 : use getlabeltop ( ) and getlabeltextheight ( ) instead of getlabel ( ) , a suggest by
hbase - 27875 adjusting upper bound region split policy to account for initial size
removed unnecessary model model calls in LauncherClings . java to streamline the code by eliminating redundancy
removed redundant initialization of keys and updates lists in ManagedSelector . java to streamline code by eliminating unnecessary assignments
added support for excluding Spring Data sources in SpringDataSourceBeanPostProcessor to enhance flexibility in data source management
restore undo info after delete table
camel - 15836 - camel - aws2 - * : improve the retry logic for create kinesis client
refactor channel handling in VelbusSensorHandler to use a loop for triggering events to improve code clarity and reduce repetitive logic
disable unfavorable benchmarks due to unfavorable benchmarks
added a test method for illegal database names in IoTDBSessionSimpleIT . java and improved error handling in PartialPath . java to ensure proper
added resetNewFiles ( ) method to GarbageCollector . java to ensure a fresh state for resource management
updated ` desiredWorkspaceLeftRightMargin ` and ` desiredWorkspaceRightMarginPx ` to use ` desiredWorkspaceHorizontalMargin ` instead of ` desired
reformatted code for improved readability and consistency to enhance maintainability and clarity of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 662 )
api : fix typo in xenserver network label
updated libGDX version from 1.5 . 5 to 1.5 . 6 in DependencyBank . java to incorporate the latest features and
added a private ` Set < String > metricNames ` field and its getter method in ` SolrCore ` to facilitate the retrieval of metric names
changed the type of ` workingDirectory ` and ` manifestFile ` from ` URI ` to ` Path ` in ` MavenManifestFactory . java `
replaced direct check for " mac " with a static final boolean variable to improve code readability and maintainability
refactor JdbcAggregationRepository to improve code readability and maintainability
added functionality to clear slotList in the Frame class to ensure that slotList is updated from both instances of the Frame class
initialize m _ predCount to - 1 in PredicatedNodeTest . java to ensure proper initialization of the prediction count
added a mergeProperties method to the ConfigurationSpringInitializer class to ensure proper handling of configuration properties during application startup
updated the ` setupLogging ` method to accept a ` org . slf4j . Logger ` instead of a ` Logger ` to ensure compatibility with
changed instances of ` HashMap ` to ` LinkedHashMap ` in multiple Java files to maintain the insertion order of elements in the aliasToWork map
added a check to ensure jdbcHandlerMap is available before attempting to retrieve its superclass to improve robustness by avoiding potential NullPointerExceptions
added debug logging for writing items in Hibernate , Jpa , FlatFileItemWriter , and JmsItemWriter classes to improve traceability and debugging
updated locale parsing logic to handle the last character of the Wellformed value to ensure proper parsing of language range ranges to improve accuracy in language range parsing
updated Http2ServerResponseImpl and VertxHttp2Handler to execute closeHandler on an IO thread to ensure proper context handling during server shutdown
cache xssf table for good performance
updated schema text validation logic in BaseSchemaTextFormatter . java to ensure correct handling of nullable columns and improve code clarity
replaced MongoFactoryBean with MongoClientFactoryBean in MongoNamespaceReplicaSetTests . java to improve compatibility with the MongoDB client implementation
replaced HashSet with LinkedHashSet for roots and leaves to maintain insertion order in the collections
updated the logic for cloning table scan operators in SkewJoinOptimizer . java to ensure correct handling of operator trees during join operations
added a null check for the client ID in the DynamicRegistrationClientConfigurationService and updated JsonFileRegisteredClientService to utilize it to ensure
added a new field reference to AchievementList . field _ 187981 _ e . clear ( ) in StatList . java to ensure that
initialize ` userName ` , ` productName ` , ` driverClass ` , ` driverVersion ` , and ` connectionUrl ` to an empty string to
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in ` QuickSharingPermissionsBottomSheetDialog
added support for reading long buffers in ByteBuffersDataInput to enhance memory management by allowing large long values
refactor UnixFileAttributes to use separate static variables for file time fields to improve code readability and maintainability by reducing repetitive code
added a new file ` TestNoEagerReclaimOfHumongousRegions . java ` with a class ` TestNoEagerReclaimOf
added search visibility management in AllAppsContainerView based on user preferences to enhance user experience by allowing search bar visibility based on user preferences
fix : use routes ( ) instead of router ( )
added a null check for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new ` ReloadPageAction ` class and integrated it into the menu to enable users to reload the current displayed page in the application
updated logging level from info to warn for non - existent entries in ` SQLManager . java ` to improve logging granularity to enhance clarity
update minimum version of spring security to 3.2 . 8 . RELEASE
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure proper error handling when configuration type does not have a selected version
[ geot - 4892 ] use serviceloader to load extension point .
added a finalization method to ensure the table is closed properly to prevent potential resource leaks
added a method to stop the statement executor in JdbcConnector and its invocation in HiveViewImpl to ensure proper resource management and prevent potential memory leaks
updated feature settings in DocumentFactory and added generic hints in XMLSAXHandler to improve flexibility in handling external DTDs and enhance type
updated JdbStopThreadidTest to use OutputAnalyzer for application exit handling to improve clarity and functionality of the application exit process
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to ensure proper handling of ` ContentProvider `
updated the handling of future and timestamp entries in ExpressionThreadPoolManager to improve code clarity and maintainability by using more descriptive variable names
updated the property key for the HTTP port in HttpTestBase . java from " port " to " vertx . httpPort " to improve clarity by
replaced ` addCaptureListener ( new ChangeListener ( ) ) ` with ` addListener ( new ChangeListener ( ) ) ` in ` buttonTable .
increased the default batch size in NewSessionQueueOptions from 10 to 3 to optimize memory usage based on available processors
added error handling for resource manager connection establishment in TaskExecutor . java to improve robustness by logging exceptions during resource manager connection establishment
[ hotfix ] [ table - planner ] [ table - planner - blink ] [ table - planner - blink ] do n ' t
updated IllegalArgumentException message to include min and max parameters to improve error handling clarity
updated onMessage method signatures to include owner parameter and modified logging messages in multiple classes to enhance message validation and improve clarity in telegram
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` to handle database operations to provide a structured way to manage database operations
refactor multiple assertion classes to improve code organization and maintainability
# 16 - enh : add setbeanid ( object bean , object id ) to ebeanserver
updated method call from ` tools / xslt / add - menu - to - site - descriptor . xsl ` to ` getAddToSiteDescriptorXsl
replaced direct addition of request matchers with a shared list of matchers to improve thread safety and ensure consistent handling of request matchers
added hashCode and equals methods to ContactResource class to ensure proper object comparison and hash code generation for collections
move getrequest ( ) and getresponse ( ) to processor interface to make it easy to access request and response
updated log messages in FileManager . java for clarity and improved error logging to enhance the readability of log output for better debugging
added a cleanup method in TestIndexSearcher to ensure proper resource management during tests
updated import statements and method calls in SyntaxTests . java for consistency and clarity to enhance code readability and maintainability by standardizing
refactor ConnectionModel and ModeledConnection classes to improve code readability and maintainability
tika - 4071 -- upgrade to tika 2.2 . 0 , remove unused parserdecorator
do n ' t require cpw . mods . fml . class to be specify for fml security manager
removed unnecessary parameters from AccountUtils , IndexedForest , and CustomPopup classes to simplify code and improve readability
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the rename method in CoreApiMapping . java
[ wasm ] fix jsx comment handling .
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording during test execution
improve error message when buckconfig be miss
added OS - specific physical memory and limit logging in TestStringBufferAndBuilderGrowth . java to improve resource management and debugging information
deprecate conversionservice in favor of conversionservice in maptolocaldateconverter
added a success flag to the HiveMetaStoreClient class to indicate when the operation was successful
updated string comparison from ` = = ` to ` equals ` in ResourceReferenceInfo . java and modified bundle initialization in Dstu2BundleFactoryTest .
updated video URL checks to include " amp . twimg . com / v / " in addition to " vine . co / v /
added @ Deprecated annotation to AreaReference . java to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes to improve code organization and readability
updated assertions and ref kind handling in MemberName . java to improve assertion clarity and ensure correct reference kind management
changed the default value of ` submitKeyUpdates ` from ` false ` to ` true ` and added synchronization to the ` runChange ` method to ensure
added an else condition for MouseEvent in EditNodeTextField . java to ensure proper handling of MouseEvent events
camel - 16400 : added support for bean static method with thanks to jens kleine - herzbruch
improve javadocs for benchmarking module ( # 1055 )
refactor error handling in AgentRunnerTest to use lambda expressions to improve code readability and reduce redundancy
added ` getDescription ( ) ` method implementations for various classes and updated return strings for better clarity to enhance code readability and provide more
refactor the handling of faces in the ObjLoader class to improve clarity and maintainability of the code
refactor ProcessEngine class to improve code readability and maintainability
change variable name from reentrantLock to lock in multiple files to improve code clarity by using a more descriptive variable name
updated the ` getBomReference ` method to include a ` mavenPackaging ` parameter in the ` getBomReference ` method
updated back method to use getComponent ( ) instead of getComponent ( ) to ensure the correct component is used for the back action
reordered conditional statements in SASLAuthentication . java for clarity to improve readability and maintainability of certificate verification logic
changed parameter types from ` @ Nullable [ ] ` to ` T extends @ Nullable [ ] ` in ` ObjectArraySubject ` and ` assertThat ` methods
updated method calls to use ` getConf ( ) ` instead of ` NutchConf ` for configuration retrieval to improve consistency in accessing configuration properties
bugfix : do n ' t remove the tab if it ' s the last stub
added a method to retrieve the session ID in RemoteWebDriver . java to provide access to the session ID for external use
added null checks before setting time interval for nodes and edges in ImportContainerImpl . java and updated tests in ImporterGEXF2Test . java to
changed the command option from " - logLevel INFO - serverPort " to " - serverPort " to simplify the command for server port configuration
updated error logging to include exception message to improve error reporting for better debugging
replaced ` RobotsHonoringPolicy ` with ` CrawlMetadata ` in ` DispositionProcessor . java ` and updated related methods to utilize
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
( chore ) camel - package - scan : fix test on window
added a method ` alternativePath ( ) ` to the ` ExpectNewDemo ` class that returns an input stream for an audio file to provide a way
updated input initialization to call getFirstFilter ( ) instead of input . init ( ) to ensure proper initialization before processing
added a protectionDomain parameter to the method call in BufferAlignmentAgent . java to enhance security by managing protection features
added disposal of resources in WaterRipples to ensure proper resource management and prevent memory leaks
added a configuration option to disable semijoin optimization for external tables to improve performance by avoiding unnecessary optimizations on external tables
updated the description of the Authorization header to clarify that no authorization is required for client requests
updated wallpaper offset settings in Workspace . java to adjust wallpaper positioning based on scroll range
updated return values in ` SybaseASADatabase ` and ` CreateSequenceGenerator ` to use ` true ` instead of ` false ` and modified SQL
nifi - 1892 : fixed npe in putsql when commit / rollback be call twice .
added checks for parent directory creation and existence in SnapPuller . java and corresponding unit tests in TestReplicationHandler . java to ensure proper handling of
updated AppTarget initialization to use " id : launcher " instead of " id : launcher " to ensure consistency in naming conventions
fix race condition in framer . frame ( ) .
updated OAuth2AuthorizationRequestRedirectFilter and OAuth2LoginConfigurer to include clientRegistrationRepository as a parameter to enhance flexibility in handling
added a description for the splitting text in GenericUDFStringToMap . java to clarify the purpose of splitting text into key - value pairs
updated Instant formatting in PlainFormatter . java and removed the @ Test annotation in PlainFormatter . java to improve precision of instant representation and remove unused test case
replaced TIMEOUT _ MS with RETRY _ CLOSE _ TIMEOUT _ MS and added a close ( ) method in AgentRunner . java to improve
hhh - 14564 : remove reflection and use methodhandle # privatelookupin
updated Mockito library version to ensure compatibility with the latest features and bug fixes
updated debug log message from " Closing proto event file " to " New proto event file " to clarify that the event file is a new
added JUnit @ Ignore annotation to SamplingNamingTest . java to temporarily disable tests that produce no sample results
updated exception message for zero rows and columns in GridLayout . java to improve clarity of error messages for better debugging
improve error message in decisionnode and wagoncART
added functionality to sort BoundSheetRecords based on their position in XLS2CSVmra . java and BoundSheetRecord . java to improve
refactor average impulse calculation to separate start and end thrust calculations to improve code readability and maintainability
niftyjmedisplay now pass the inputmanager to inputsystemjme constructor
refactor hashCode field assignment logic in UniverseBuilder . java to improve clarity and ensure offset validation
remove deprecate block . getmesh ( )
[ hotfix ] [ yarn ] fix typo in yarnapplicationmasterrunner
added EMPTY _ WORD _ OPTIONS option and modified matcher logic in LineReader and LineReaderImpl to handle empty input cases to improve flexibility in handling empty
if writecommitlog be false , do n ' t try to push view replica update to primary table
updated clipboard handling in CaptureActivity and added default button ID retrieval in PreferencesActivity to enhance user experience by allowing automatic opening of web content in preferences
added a new test method ` testBatching ` in ` JoinedTableTest . java ` to validate the JPA batching functionality of boards
added handling for EntityExistsException in JpaPersistenceService to improve error logging to differentiate between duplicate and existing item entries
deprecated the ` format ( ) ` method in ` CucumberOptions ` and updated plugin handling in ` RuntimeOptions ` to ensure compatibility with the latest
removed the save ( ) method from the PMS class to streamline the code by eliminating unused functionality
refactor back key handling logic in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new class ` Capacity . java ` for testing
replace goHome ( ) with onNoteSaved ( noteTmp ) in DetailFragment . java to utilize onNoteSaved ( noteTmp ) to
fix xwpfwordtextractor to handle endnote reference
updated CasAuthenticationTransactionSuccessfulEvent to include clientInfo parameter to enhance event details for better traceability
added a test method for verifying GDAL version in BridjOGRDataStoreTest . java to ensure compatibility with the latest features and bug fixes
added a new file ` Lifecycle . java ` to handle network error events in the application to facilitate the management of network - related
deviantart ripper now handle 404 error gracefully
removed unused imports and simplified code in RocketFigure . java to improve code readability and maintainability
fix ( opengl ) : do n ' t use glbuffers for retina in pjogl
added option to automatically select offline project
replaced multiple instances of ` PackedInts . PackedInts . CodecUtil . writeHeader ` with ` BlockPackedWriter . Block _ SIZE
refactor DefaultRouteBuilder and DefaultRouter to improve type handling for routesByStatus and routesByStatusSorted to enhance clarity and maintainability to
removed redundant imports and streamlined data handling in GoAwayTest . java to improve code clarity and reduce unnecessary duplication
added support for setting properties for a map in ` ReflectionUtils ` and created a new ` FluentSetterBean ` class to enhance flexibility
updated the ` post ` method in ` BlockingHttpEndpoint ` to return ` HttpResponse ` instead of ` ? > ` to enhance the
updated file URL formatting and added a method to prepare a folder in FileSortByExpressionTest and FileSortByIgnoreCaseTest to improve code readability and
updated print statement to include lastAppearedTaskTargetId instead of mLastAppearedTaskTarget to improve clarity by reflecting the actual task ID being
pdfbox - 4892 : add a flag to disable image conformance check for pdf and pdf document
added aggregation functionality to the TSServiceImpl class to enhance query capabilities based on execution context
updated ` Nested2 ` and ` Base ` classes to extend ` WithNestedTests . AbstractTest ` instead of ` LuceneTestCase ` and added a
added functionality to enable and set the xCap server URI in the PresencePanel to enable or disable the xCap feature based on the registration settings
ww - 4237 add a flag to handle exception in dispatcher
added methods to stop text editing in multiple implementations of CodenameOne and TextArea classes to improve editing control and ensure consistent behavior across different components
nifi - 1114 : fix npe in controlrate when no group attribute be set
added a new parameter ` isNewComponent ` to the ` showDialog ` method and updated related logic in ` ComponentConfigDialog ` and ` R
[ giacamole - 1102 ] add synchronization to send message to the client .
added a condition to check if the OS type is not Windows before executing the test in HTMLDataFlavorTest . java to ensure the test only runs on
added SQL _ SERVER _ SNAPSHOT constant to the transactionIsolationLevel to support the handling of SQL Server SNAPSHOT scenarios
replaced ` newRecids . put ` with a loop that continues to offer a new record ID with a retry mechanism to handle potential thread failure to improve
use java . util . zip . zipfile instead of org . apache . tomcat . util . compat . compat . jrecompat
added a null check for the command class before initializing the service in RegisteredServiceSimpleFormController to avoid potential NullPointerExceptions when the command class is
disable disk failure by default
removed public access modifier from several methods in RipInterface and RipStatusHandler classes to allow access to these methods from other classes
filter out 127.0 . 0.1 from the filter condition in PeerDiscoveryAgent to ensure only valid IP addresses are processed
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner . java to streamline code by eliminating unused functionality
updated import statements for AutoRebalanceStrategy and ClusterDataCache in PinotSegmentRebalancer . java to ensure compatibility with the latest Helix components
danielwagnerhall : remove container . delete ( ) method that be no longer need
simonstewart : make the defaultselenium command work with pipe - separated input
add retry for glossary creation
updated schema references in ModelResolver to use Components . COMPONENTS _ SCHEMA _ REF instead of Components . ALLOWED _ NAME to ensure consistency
refactor EntityDeletedEvent to use JsonUtils for handling deleted events to improve code clarity and ensure proper serialization of deleted events
added support for " gop " GOP value in FormatConfiguration and updated related classes to enhance media parsing capabilities and improve logging for GOP values
added a new file ` TestProfileReturnTypePrinting . java ` implementing a test for method return types printing to facilitate testing of return type printing behavior
added locking and synchronization for concurrent access in ParseConfigUtils . java to ensure thread safety during configuration refresh operations
added release columns segment operator handling in MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper resource management and prevent potential memory leaks
simonstewart : remove duplicate @ ignore annotation
updated method signatures and return statements in HasAndroidDeviceDetails . java to improve type safety and clarity to enhance code readability and maintainability
do n ' t add dead bug to project stats
ui : disabled shadow label on gtk
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline code and improve readability
added a check to return a date in the future in ScheduledAction . java and a corresponding test in ScheduledActionTest . java to ensure that
refactor upload button handling in ShareActivity to streamline upload task launching process to improve code readability and maintainability by reducing complexity
refactor multiple Java classes related to message expression handling to improve code organization and maintainability
added loadExchangeMetaData method implementations in MeXBTExchange and RippleExchange classes to enable loading metadata from InputStream in both MeXBTExchange and R
added serialization support for ` Writable ` in ` CrawlDbReader . java ` to enable efficient serialization of ` Writable ` objects for improved
remove unnecessary test class
added a new service configuration pid " discovery . mdns " to the MDNSDiscoveryService to define a specific service for MDNS discovery
added null check for messageItem before calling scrollToPosition with scrollToPositionWithOffset to avoid potential NullPointerException when messageItem is null
[ flink - 16436 ] [ test ] fix flakiness in testbpindexreorderer
removed assertions for DATANODE and NAMENODE roles in RoleCommandOrderTest to streamline tests by eliminating unnecessary dependencies
added a method to restore local info from table info and updated method names for clarity to improve code readability and maintainability
reformatted code for consistency in formatting to improve code readability and maintainability
updated BitmapFontTest to apply transformations and set the logo sprite to true to improve sprite scaling and ensure correct logo loading behavior
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ] do not
do n ' t send a status change if there be a pending echo
added a method to retrieve unreachable token owners and updated method names for clarity to improve code readability and ensure consistency in method naming
[ geot - 6892 ] do n ' t change to multiplicatorexpression when the variable be a constant
added content type handling in FormAuthenticator and SavedRequest classes to ensure proper content type is set based on the saved request ' s content type
changed access modifiers of several fields from static to instance variables and added a null check for localEnv to improve thread safety and prevent potential NullPointerExceptions
refactor job - related classes to improve code organization and maintainability
replaced ` Object ` with ` ReentrantReadWriteLock ` for concurrent access to ` metaLock ` and ` metaWriteLock ` to improve thread safety to
added a test for reading an identity provider in a specified identity zone to ensure that the system correctly handles identity providers in different identity zones
updated job scheduling to use ExpireJob instead of JobHandle to improve job management by allowing expiration of expired jobs
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 5978 ] optimize rebalance ( # 5971 )
[ doc ] add ` ` cairo . detached . mkdir . mode ' ' system property
[ java ] do n ' t restart static node when there be a slow follower .
change default label pattern to [ auth ] instead of [ authors3 ]
updated dependency handling in DBinaryDescription and DLibraryDescription to use CxxPlatforms and ImplicitDepsInferringDescription to improve dependency management for C
refactor GoogleCloudAPI and GoogleTTSService to properly manage OAuth services to ensure proper resource cleanup and prevent memory leaks
http : / / issues . apache . org / jira / browse / amq - 2473 - fix http / 2 endpoint
added a boolean flag ` reopenReaders ` in ` SolrConfig ` and modified the condition in ` SolrCore ` to conditionally open readers based on
add dialect attribute to freeplane version
added methods ` currentDate ( String key ) ` and ` currentTimestamp ( String key ) ` to the Update class and corresponding tests in `
added a dup method in ` mmm Attr . java ` and a new test class ` PrimitiveTypeInBoundForMethodRefTest . java ` with
refactor Condition class to use a lambda expression instead of an anonymous class to improve code readability and maintainability
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector to improve query performance by using a more efficient scoring query
remove unused imports from ConcurrentClassLoadingTest . java to improve code clarity and reduce unnecessary dependencies
added a new method ` providesDirectNearbyUploadPreferences ` to the CommonsApplicationModule for managing nearby upload preferences to enhance functionality by
added support for handling " SYSIBM " and " SYSDUMMY1 " database modes in the parser and mode classes to enhance
refactor TraceGatewayEnvironmentPostProcessor and SamplerAutoConfiguration to improve logging consistency and configuration to enhance code readability and maintainability by
patch from josh from bug # 54925 - add support for add / remove workbook property to xwpf
[ geot - 6231 ] fix infinite loop when no data be give
refactor CliDriver and SessionState to improve error handling and return values to enhance robustness and maintainability of the code
replaced ` Executor ` with ` Scheduler ` for HTTP execution in ` MockRestAdapter . java ` to enhance flexibility in handling HTTP requests
added a default method to select rules based on a specified rule ID set to improve flexibility in selecting rules by rule ID sets
added a method ` addExitDescription ` to the ` ExitStatus ` class and refactored the exit status handling in ` AbstractJob `
fix the multiblock render handler not fire right click event
renamed ` columnFamily ` to ` columnFamilyColumn ` for clarity to enhance code readability by using a more descriptive variable name
removed an unused import statement in PlotConfiguration . java to improve code readability and maintainability
replaced ` BuildUIAlertView ` with ` buildUIAlertController ` in ` DefaultIOSInput . java ` to enhance UI alert functionality
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to ensure the
rename parameter from ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in parameter naming
removed assertion for message retrieval in AdvServiceTest to streamline the test by eliminating unnecessary assertions
refactor key handling in MappingMongoConverter to improve readability and maintainability of key conversion logic
updated Timber logging format in NearbyMapFragment . java to improve readability of log output
( chore ) camel - core : fix deprecation warning
updated FuzzyLikeThisQuery to use MultiFields for term retrieval and added a test for non - existing fields in FuzzyLikeThisQuery
refactor the ` writeApplicationsLinks ` method to accept a boolean parameter for tabular list display to enhance flexibility in displaying application links based on
[ ds - 3474 ] use dspace . identifier . factory instead of dspace . utils . dspace
updated byte assignment to use getLength ( ) instead of length to ensure correct length is used for byte assignments
added a return statement that returns null to the getDisplayScript method to provide a default implementation for the method without requiring parameters
simonstewart : fixing issue where we could n ' t find any element in the firefox driver ' s firefox driver ' s
pdfbox - 4892 : set the initial arraylist size , a suggest by valerybokov
added synchronization and error handling in NetworkConfigurationWatcher and NetworkManagerListenerImpl to ensure thread safety during network configuration updates
fix bug # 45538 - add test for reading nested object
removed import of Shdr from ShaderNodeLoaderDelegate . java to streamline dependencies by eliminating unused imports
updated variable assignments for hostParams and roleParams in AmbariManagementControllerImpl . java to ensure consistency in variable naming conventions
added a condition to check if the base font starts with " Symbol " to ensure proper handling of font types that start with " Symbol "
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ModelHourglass . java to ensure compatibility
updated date handling in LiveTvGuideActivity to use ` mCurrentGuideStart ` instead of ` start ` to improve clarity and consistency in date
replaced ` getDeclaredMethod ` with ` getMethod ` in ` MockGateway ` and added new classes ` CommonParentTest ` and ` Child
added loading for " lib freetype . so " and " libfontmanager . so " libraries in JREUtils . java to ensure proper loading of
kristianrosenvold : do n ' t generate trig power for multi variable function
loop safepoint elimination : do not allow floating guard for non - protected non - unsigned loop
[ java ] fix typeframemodelingvisitor to correctly handle instanceof call .
added a new class ` LocalizedString ` and refactored methods in ` Attr ` , ` Resolve ` , and ` AttrTest `
add serverconfig to disable classpath search
updated AudioFormat array initialization and made fields final to improve code clarity and ensure proper copying of audio formats
updated retries value from 0 to 2 in Reference . java and Reference . java to allow for a more flexible retry configuration
added support for loading and managing settings in TexturePacker to enhance functionality by allowing dynamic configuration of settings
refactor AchievementsFragment to use AppCompatTextView for displaying uploaded images and images used byWikiTextview to improve code readability and maintainability
added annotation processing and logging methods in TranslatingJavacPhaseTracerTest . java to enhance tracing capabilities and improve logging clarity
updated CategoryInterface and MwQueryPage classes to include category information retrieval and added a new CategoryInfo class to enhance data accessibility to improve data
updated assertions in AuthzAuthenticationRequest to use parameterized messages instead of hardcoded strings to improve code readability and maintainability
updated TaskbarStashController to utilize AccessibilityManager for managing taskbar auto - hide settings to enhance accessibility support and improve code
added handling for the ' ^ ' character in the GenericSignatureParser to ensure proper exception throwing for already thrown NoSuchElementException
updated access flags handling in ClassVisitorDriverFromElement . java and added new test cases in StubJarTest . java to ensure proper stu
added null checks for input parameters in IntervalFilter and LowpassIntervalsSource classes to enhance robustness by preventing NullPointerExceptions
added tests for the ` map ` iterator ' s last hash and last iteration in ` MapInterfaceTest . java ` to ensure correct behavior of the iterator
added a serialVersionUID field to TreeMap class to ensure compatibility during serialization and deserialization of the class
updated the creation time from milliseconds to seconds in ImageData . java to ensure accurate timestamp representation for image creation time
mondrian : use locus2d instead of locus2d for f2m
added import for EncryptionUtils and delete keys for account private and public keys in AccountRemovalJob . java to ensure proper encryption key management for accounts
fix : do n ' t set keep - alive header in jdkasynchttpprovider when connection be close
do n ' t attempt to join map if there be no interceptor
no functional change - remove deprecate processor
removed the spillEnabled parameter from the BaseHybridHashTable , BinaryHashTable , and LongHybridHashTable classes to simplify the constructor and eliminate unnecessary
refactor environment variable handling in EnvironmentVariableHelper to use Optional for better null safety to enhance robustness by avoiding potential NullPointerExceptions
ww - 4892 fixed checkstyle issue in util / defaultactionmapper . java
added an import statement for SerializableMode in Mockito . java and updated PluginSwitch . java to enhance serialization support in Mockito
fix : do not throw exception when set field value for non - nullable bean
add support for isolation level in select statement in db2
replaced HiveConf references with static final constants for transport modes to improve code readability and maintainability by reducing redundancy
added an override for the ` isCacheable ` method in ` GlobalOrdinalsWithScoreQuery ` that returns false to ensure that the query is not cached
added a new file TestStrangeControl . java that implements a thread - safe test for the StrangeControl class to ensure that the StrangeControl
updated file extension from " . json " to " . jsfile " in JsFile . java and JsLibrary . java to ensure compatibility with the latest
added selection handling methods to ShadowEditText to enhance functionality for setting and getting selection indices
refactor gRPC server initialization to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added a new method ` use ` to the ` Jooby ` class and updated the ` Router ` and ` JoobyTest ` classes to
added a null check for the fst parameter in FreeTextSuggester . java to ensure that the lookup is not supported at this time
updated string handling in T4975569 . java and modified URL verification in T6729471 . java to use ` toURL ( ) `
added ABI writer class loading logic in JavacInMemoryStep . java to ensure proper handling of ABI writer classes during processing
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to PubRoot . java to suppress compiler warnings related to boolean method inversion
log a warning if pullmessageservicethread have shutdown .
refactor EnergyEndpointer class to improve code readability and maintainability
refactor the handling of displayed columns in ComponentPresetChooserDialog to use an ordered list of displayed columns to improve code readability and maintainability
remove unused import that break build
camel - google -Sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and updated ` CxxLibraryMetadataFactory ` to use
deleted the file mmm Constants . java and mmm DistanceUtils . java to remove unused code to streamline the project
updated the handling of the DELIMITER in the key to improve clarity and correctness of the key processing logic
do n ' t initialize fallback linker if jdk . internal . foreign . abi . fallback . fallbacklinker be not available
fix : add test for inline rolebinding
added debug logging for configuration of session cookie properties to improve traceability and debugging of session cookie settings
updated file name generation to use the current year instead of a fixed value to ensure accurate file naming based on the year being used
fix ( observableblockingsubscribe ) : fix typo in observableblockingsubscribe
added error handling for invalid options in JavapTask . java and created a new test class T8033711 . java to improve robustness of
replaced ` collect ( Collectors . toList ( ) ) ` with ` toList ( ) ` in multiple Java files to simplify code and improve read
changed log level from error to warn for fetching new tasks and modified error handling logic to improve logging clarity and ensure proper shutdown behavior
[ hotfix ] [ network ] disable tiered storage for single input gate
( chore ) camel - mailgun : use isnotsuccessstatus check instead of constant
updated Cuboc and CubocDesktop to use GL20 configuration to ensure compatibility with OpenGL20 features in the application
simplified the return statement for better readability to enhance code clarity and maintainability
replaced ` DefaultSourcePathResolver ` with ` AddToRuleKey ` and refactored the ` appendToCommandLine ` method in ` OutputMacroExpander
rename assertnojobslefteventually to assertnolightjobslefteventually for clarity
added a check for additional file paths in MergeWordsListTask . java to ensure that duplicate words are not processed when the input file path contains backslashes
[ # 7448 ] instructor : instructor : instructorfeedbackresponsecomment : fix # 7441 ( # 7442 )
removed unnecessary whitespace in the Container class to improve code readability and maintain consistency
added a new file ` TestEscapeThroughInvoke . java ` implementing a class ` TestEscape ` that demonstrates the use of ` A ` and its
replaced stream . skip ( ) with IOUtils . read ( ) for skipping bytes to improve efficiency and readability of the code
http : / / issues . apache . org / jira / browse / amq - 3473 - add connection pool start /
changed catch block from Exception to Throwable to handle a broader range of exceptions
hbase - 25819 fix the potential npe in lrublockcache
removed conditional check for task count in RecentsView . java to simplify the task count retrieval logic
added instance config change listener to HelixBrokerStarter and increased sleep duration from 1000ms to 5000ms in HelixServerStarter to enhance
added CoinmateExchange and CoinmateMetadataServiceRaw classes for managing and retrieving exchange metadata to enhance the CoinmateExchange
improve error message when systempath contain $ { basedir } or $ { project . basedir }
pdfbox - 4892 : do n ' t overwrite cosobject key if they be different
add ptransform . setdisplaydata ( list < itemspec < ? > > displaydata )
replaced instances of DefaultSubject with assertThat for null checks in SubjectTest . java to improve readability and ensure correct assertion behavior
updated security settings in ClientJSSEServerJSSE . java to disable certain algorithms to enhance security by restricting certificate processing
added validation checks for subcommands , subcommands , and subcommands groups in OptionData . java to ensure correct error messaging to improve user experience by
updated module - info . java files for mmm and ppp modules
added error handling for server error in IOSImplementation . java to improve robustness by throwing an IOException when a server error occurs
added finally block to ensure proper cleanup of resources in LogEventChecker to avoid potential memory leaks
refactor exception handling and streamline writer closing logic in FileSinkOperator . java to improve error logging and ensure proper resource management
added diagnostic output to SchemaGenerator to enhance debugging capabilities by providing diagnostic information
replace ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using a more specific exception type
updated test cases in DataSourceMonitorTests . java to improve test coverage for data source monitoring
added a HashSet to track loaded resource paths to prevent multiple scanning for the same resource path
[ hotfix ] [ test ] fix npe in testserviceutil
added a null check for the response object before handling it in RoutingInBoundHandler to avoid potential NullPointerExceptions during response processing
added support for optional natip parameter in ekey configuration .
updated imports from ` org . apache . arrow . buffer . ArrowBuf ` to ` org . apache . arrow . memory . Arrow
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code readability and maintainability
added checks for null or empty header and body buffers in HttpConnection . java and a corresponding test in RFC2616BaseTest . java to
refactor TimeoutSubscriber to use AtomicReference for upstream and subscription handling to improve thread safety and clarity in subscription management
improve the handling of starved sstables in leveledmanifest
added a test annotation in TestOrcTimezone1 . java to ensure proper functionality of the test method
improve performance of metric and timer system property parsing
added error handling for JSON processing exceptions in PinotSegmentRestletResource . java to improve robustness by throwing a specific exception when JSON processing fails
refactor the default renderer retrieval logic in JTable . java and add a new test class in Test6888156 . java to improve robust
added checks for the existence of the shell before adding it to the command line arguments to ensure that the command line arguments are only added if the shell is
updated the parameter of deleteWithoutSubscriptions from 10 to 1 in DatabaseCleaningService . java to limit the number of deleted subscriptions
changed the type of ` testInstances ` from ` List ` to ` LinkedHashSet ` and updated related methods to use ` LinkedHashSet ` instead of `
refactor FieldMonitor class to improve code readability and maintainability
removed redundant calls to deleteFilesAfterClose ( ) and fileMmapEnableIfSupported ( ) in BTreeMapTest . java to streamline code
updated iterator initialization in SortedIntList . java and added a reset method in SortedIntListTest . java to improve iterator handling and ensure proper resource management
added unregister method to JMXHelper and modified catch block formatting in JMXHelper to improve error handling and clean up code
[ hotfix ] [ rocksdb ] increase default writebuffer size for rocksdb configuration
updated constructor parameters in Style . java to simplify method calls by removing unnecessary parameters
fix http : / / code . google . com / p / mybatis / issues / detail ? id = 662 : message encode error
added JSON graph logging for the beam pipeline configuration to improve traceability and debugging of pipeline execution
change helloaudio to use mouseinput instead of vector
refactor LoopRotateBadNodeBudget class to improve code readability and maintainability
added ` convertToMongoType ` method to ` AbstractMongoConverter ` , ` MappingMongoConverter ` , and ` MongoOperationsUnitTests ` to
[ web ] do n ' t display imaginary unit in input box
simonstewart : add unit test for sendkeystoactiveelement .
added functionality to handle negative target sizes in AddAndScaleMultiImage . java to improve image scaling accuracy by preventing invalid target sizes
removed redundant methods from DBMaker to streamline code by eliminating unused functionality
fix shift key state for android
removed the DETECTED _ ACTIVITY constant and related methods from multiple classes to streamline code by eliminating unused constants and
updated import paths for ExtensionConfig from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse .
removed the import of Buildable from AaptPackageResources . java to streamline the code by eliminating unnecessary dependencies
removed redundant calls to ` file . readUnsignedShort ( ) ` in multiple Java files to improve code clarity by eliminating unnecessary variable assignments
improve error message for invalid upgrade protocol
updated the assignment of blockMode in P11Cipher . java to ensure consistent formatting of algorithm parts to improve code readability and maintainability
updated Mockito library version to ensure compatibility with the latest features and bug fixes
removed redundant permission checks for plot ownership in Merge . java to streamline permission validation logic and improve code clarity
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , Response , and Response classes to streamline code by eliminating
use mary - unitselection - mary - unitselection instead of mary - speech - freetts - en - us - us - us
refactor ` stripQuotes ` method to use ` PlanUtils ` for better code organization to improve readability and maintainability to centralize quote handling logic
refactor rendering handling in DLNAResource and Request classes to simplify rendering management and improve code readability
added a list of repository sources to the DefaultPluginManager to ensure that repository dependencies are included in the repository list
( chore ) camel - cxf : fix potential resource leak
refactor PhysicsClient class to improve code readability and maintainability
added JUnit @ Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failures
added initialization of the file object in ZipFile . java to ensure the file object is correctly initialized
added a deprecated method handleAll in TryType . java to indicate that it should no longer be used in favor of a new implementation
add a test for the default constructor of the channel
added logging functionality to GenericDAOImpl and implemented StackTraceUtils for filtering stack traces to improve traceability and debugging capabilities in the application
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline test code by eliminating unnecessary dependencies
refactor unparse logic to conditionally handle parentheses in FunDefBase and ParenthesesFunDef classes to ensure correct parsing of functions
refactor SELECT _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY to use a Multimap for selecting configurations
updated the declaration of supressWarnings and added a conditional check for " jdk . internal . misc . InnocuousThread " in UnsafeAutomaticSubstitution
updated JsonTreeReader to handle various JsonElement types more accurately to improve error handling for unexpected input during parsing
added handling for dash arguments in TestCommand . java and implemented a test for extra arguments in ExternalTestRunnerIntegrationTest . java to ensure proper behavior when using
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to facilitate deduplication and indexing of Solr documents
[ hotfix ] [ examples ] support flink planner in streaming mode
added clearDatabase ( ) method in MssqlIntegrationTest . java to ensure a clean state before running tests
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4810 ? msgid = 48
added a check to ensure that the parent file exists before proceeding to avoid potential errors when attempting to access the parent resource
added write and close methods to IOUtils for writing documents to ensure proper resource management and prevent potential memory leaks
updated print statements in JavaBuild . java to include line breaks to improve readability of output
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` _ root ` and ` dotsPer
added support for custom user search queries in the CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to en
updated import statements and added default ports handling in multiple classes to improve code organization and ensure consistent port management
refactor SnmpTargetHandler to utilize ThingHandlerHelper for status verification and improve test structure to enhance code readability and maintain
[ # 7008 ] instructorfeedbackeditpageaction : instructor can submit session with submit privilege
added @ Incubating annotation to AvailableSettings . java and marked it as deprecated to indicate that the class is outdated and should no longer be used
refactor FileResolverImpl to improve handling of jar and zip file paths and add a new WarFileResolverTest class to enhance file
update log message to include docstores
fix dirt block not show in example mod
changed whitespace settings from X to Y in ImageProcessor . java to ensure consistent spacing across image processing settings
increased the maximum number of locks from ` threads ` to ` threads * 1000 ` to allow for a delay in thread management
updated ` deserializeFrom ` method to include ` exactSearch ` parameter in ` TsFileSequenceReader . java ` and added assertions in ` MeasurementChunk
no effective change - code cleanup
updated the preferred size of the pane in NavigationShareTab . java to improve layout consistency by adjusting its height
replaced OffsetAttribute with State for state management in BeiderMorseFilter . java and added a new test for KeywordAttribute in TestBeider
updated multiple Upnp - related Java files to improve code organization and maintainability
fix lens warp to work with blockpos
test : add unit test for json serialization
refactor MutableContextDataSupplier class to improve code readability and maintainability
changed exception handling from Exception to Throwable in CoreContainer . java to improve error handling by logging a warning when LogWatcher cannot be loaded
http : / / issues . apache . org / jira / browse / amq - 4237 - use httpclient instead of httpclient
defaultjavaloweringprovider should not call math . getvalue ( ) . stamp ( ) if it be null .
updated DefaultServlet and DefaultServletTest to use POST instead of SC _ NOT _ ALLOWED to ensure proper handling of OPTIONS requests in the response
tika - 4892 -- use locale . us for decimalformat in tika - metadata . xml to avoid decimalformatexception
updated exception handling in ShowFileRequestHandler to set response exceptions for 404 and NOT _ FOUND errors to improve error handling clarity and provide more
added handling for ` InvocationTargetException ` in ` ReflectorClassWriter . java ` and introduced a new ` TryCatch ` class to improve error
added a clamp method to the Vector class and implemented it in the Vector2 class to enhance vector manipulation by allowing clamping between specified values
added OAuth2 authentication handling in ChainedTokenGranter . java to ensure proper scope management during token creation
refactor BC _ instanceof class to improve code readability and maintainability
replaced setSaveFlags ( SAVE _ ALL ) with a static final logger instance to improve logging consistency and maintainability
updated UaaUrlUtilsTest to use JUnit 5 annotations and removed public access modifiers to improve test structure and align with the latest JUnit
hhh - 16921 : add basic domain type to nativequery . addScalar ( )
added a WeakHashMap to cache font activation status to improve performance by reducing redundant calculations
fix typedset memory usage
danielwagnerhall : use sessionid instead of sessionid for window handle
refactor BrokerRequestUtils class to improve code readability and maintainability
refactor instance handling in InjectorBuilderImpl to use a map for improved clarity to enhance code readability and maintainability by
updated ` BuildTargetToRawTargetNodeFactory ` to use ` buildTarget . getBasePath ( ) ` instead of ` cell . getAbsolutePathToBuildFile
fix npe in echorechomessage when input be null
add keepalivemanager to keepalivetimeout jabberconnection .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 to adjust the default load factor for improved performance
added a method to retrieve all data type physical variations and updated related classes to improve data type handling and streamline reducer batch operations
move htmlassettranslator and stringsresourcetranslator to j2se client package
updated conditional logic in OverviewState . java to correctly handle shelf removal based on device profile conditions
added @ Entity annotation to BaseActivityEventEntity . java to enable persistence of entity data in the database
added tracing section for various Touch intents in NavBarSwipeInteractionHandler , TouchInteractionService , and TraceHelper to improve debugging visibility and traceability during
added a new file ` InvalidOptions . java ` with methods to handle invalid options and verifying the expected output to ensure proper error handling and
added a check to ensure the number of supported bounds does not match the number of supported bounds in DisplayController to prevent runtime errors related to display state changes
refactored the ` getClientIdAndClientSecret ` method to use ` OAuth20Utils ` instead of ` OAuth20Constants ` to improve
changed the default value of ` _ unwrapServletException ` from ` false ` to ` true ` in ` ErrorPageErrorHandler ` and ` AsyncContextTest
added handling for default shortcut status in PackageUpdatedTask . java to ensure proper initialization of shortcut information
camel - 16400 : seda endpoint should use default unbounded queue size of 1000 instead of 1000 .
added batchUpdateStart and batchUpdateEnd methods to Kernel and App classes to facilitate batch processing in the application
added HTTP client configuration in ThirdEyeApplication . java to enable dynamic HTTP client management in the application
added sorting functionality to JpaJobPersistenceImpl and JobInstanceFetchRequest classes to enhance job instance retrieval capabilities
updated CryptoFacilitiesTradeService to use CurrencyPair for canceling open orders instead of throwing an exception to ensure correct handling of open orders to improve error
[ web ] hide keyboard after click in algebra view
[ gr - 27820 ] use a native function handle for memory movement .
refactor method signatures in ` BindLdapAuthenticationHandler ` for improved readability and consistency to enhance code clarity and maintainability
mow - 1010 disable tooltip by default
updated DefaultDateTypeAdapter to accept a customizable date and time style to enhance flexibility in date formatting based on user - defined styles
updated playerSet append syntax in ListCommand . java to improve readability of the playerSet output
added a check to return the current list if it is empty to prevent potential NullPointerExceptions when accessing the list
added handling for InvocationTargetException in ParametricCallable . java to ensure proper exception propagation for CommandException
updated the ` getLikeExpression ` method to accept a boolean parameter for whether the expression is a like or col - regular expression to enhance flexibility
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl to enhance lifecycle management for stream suppliers
updated the ` runChild ` method in ` LuceneTestCase ` to handle locale changes more effectively to ensure consistent behavior across locale settings in tests
refactor multiple Java files to improve code organization and maintainability
refactor context handler initialization into a separate method to improve code readability and maintainability by reducing duplication
camel - 9382 : camel - blueprint - do n ' t start blueprint container twice
updated assertions in TestExecuteStreamCommand to check for the presence of " fffffffffffffffffffffffffffffff " instead of " fffffffffffffffffffffffffffffff " in flowFile
refactor returnTypeSubstitutable method and simplify its implementation to improve code readability and maintainability
added throttleType enum and updated throttling logic in TestExecutor . java to support throttling functionality based on character encoding
removed unnecessary pixel assignment in ColorBleedEffect . java and added a check for blendSrcFunc in SpriteBatch . java to streamline color assignment
refactor Annotation and AnnotatedElement classes to improve code readability and maintainability
added a new interface Model to the org . apache . poi . hssf . model package and updated Sheet and Workbook classes to implement
( chore ) camel - httpfilter - optimize header filter pattern
added a configurable option to clear the EntityManager in JpaItemWriter and JpaItemWriterBuilder to enhance flexibility in entity management configuration
added null checks for ShortcutInfo in InstallShortcutReceiver , Launcher , and Workspace classes to enhance robustness by preventing null pointer exceptions
make coremapnodepatterntrigger thread - safe
updated exchange specifications to reflect the correct host and exchange name for Wex to ensure accurate representation of the exchange being used in the application
added null checks for columnReaders and reader in OrcEncodedDataConsumer . java and updated buffer setting logic in EncodedTreeReaderFactory . java to
added null check for files in SegmentInfos . java and a test for opening an IndexReader after deletion in TestIndexReader . java to ensure that a
fix flakiness in elasticsearch integration test
refactor BigDecimal return logic to use a variable for percentage value to improve code readability and maintainability
updated range validation conditions in RangeInputStream and RangeReader to ensure valid input limits are handled correctly to avoid processing errors
( chore ) camel - core - optimize route configurer to print duration
improve performance of hl playback
moved NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTestCase from the builders package to LuceneTestCase to streamline the codebase by using the correct
[ hotfix ] [ test ] add statefulmapper2 to test statefuloperator
removed null check for fill in Area . java and set stroke shader shift in Line . java to streamline code by eliminating unnecessary null check
removed the ` dbExists ` method and updated its usage in the ` Blockchain ` and ` BlockchainTest ` classes to streamline the
trim whitespace from the group element in SQLPlusSupport . java to ensure consistent parsing of input values
updated socket async settings in Http11AprProtocol . java to ensure proper handling of asynchronous requests
bugfix : center the divider on the center of the split pane .
added health check metrics in ControllerMeter and PinotControllerHealthCheck to enhance monitoring capabilities for controller health checks
hide shared avatar in local file list
[ mow - 4892 ] make mow . scss a source for mow . scss , not mow . scss
http : / / issues . apache . org / jira / browse / amq - 2473 - fix checkstyle issue in util /
do n ' t log command if log level be fine
replaced CountDownLatch with a direct assertion for span completion in EventBusTracingTestBase . java to simplify the assertion to improve code readability and maintainability
refactor QueryParser to use default locale instead of static locale to improve flexibility and maintainability of locale handling
fix npe in entrycustomizizetogenerator ( # 1102 )
[ jbrules - 3625 ] allow rulebaseimpl to inherit from betanodeconstraint
pdfbox - 4892 : add exception for unauthorized ocsp response
replaced a fixed sleep duration with a dynamic server state check to improve responsiveness by allowing the server to transition to a different state
added ` COUNTER _ OPEN _ CONNECTION _ COUNT ` and ` COUNTER _ OPEN _ CONNECTION _ COUNT ` constants to ` Source
implement graphqlinterfacetype . fields ( list < graphqlfielddefinition > ) for more flexibility
refactor createDefaultJavaPackageFinder method to return source roots directly to improve code clarity and reduce redundancy in method calls
replaced direct instantiation of OutputWriter with PrintWriter to improve performance and compatibility with PrintWriter
[ hotfix ] [ test ] use temporary folder for test
added support for handling DataTable in JRubyStepDefinition to enhance functionality for processing DataTable instances
updated visibility settings for author and image nodes in SearchImagesRenderer . java and modified parameter names in ApacheHttpClientMediaWikiApi . java to improve
refactor ReadSentimentDataset class to improve code readability and maintainability
improve error message when formula parse fails
added bind address getter and setter methods in WebSocketClient . java to enhance WebSocket connection handling by allowing dynamic binding of socket addresses
[ java ] do n ' t delete archive / aeron directory if not need .
refactor width and height assignment logic in WidgetGroup . java to simplify size handling and improve code readability
changed the type of sessionFixationAttribute from boolean to Boolean in HttpSecurityBeanDefinitionParser . java to ensure proper handling of session fixation attributes
fix a bug in lalogiclinesfragment .
danielwagnerhall : add linear backoff to the chrome driver .
added ` HttpMethod ` and ` httpRoute ` attributes to ` ClientResponseWrapper ` and ` ClientResponseWrapper ` in ` TraceExchangeFilterFunction
use integer . min _ value instead of integer . min _ value in precompactedrow
updated rendering intent handling in ICC _ Profile and ColorConvertOp classes , and added a new test class InvalidRenderIntentTest to ensure correct
[ # 10641 ] allow noture question to be submit ( # 10641 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java ` to ensure
suppress findbugs warning in kafkasink
added PGConnection support in PooledConnectionImpl and implemented a test for PGConnection in BaseDataSourceTest to enhance connection pooling functionality and ensure proper error
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated log level from warn to info for JWT authentication configuration and changed the logging level from warn to trace for better clarity to improve log readability and
remove deprecate method from hazelcast
updated AmbariManagementControllerImpl to handle unlimited key JCE requirement and improved command reporting in AbstractServerAction and FinalizeK
added support for reading and writing named list objects in NamedListCodec to enhance data handling capabilities for NamedList serialization
fix npe when assign completely lose partition
added schema inclusion rule to ApiExample to ensure schemas are included only for public schemas
updated the expected value in the assert statement from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test accurately reflect
fix : do n ' t create polygon with unclosed ring
added methods to retrieve base name and dimension count in ConstantPool . java to improve functionality for handling constant pool names
added a method to set debug evaluation output for the next evaluation to enhance debugging capabilities for evaluation results
test ( refactor ) : migrate testmodule to junit 5 ( # 4529 )
updated ExoPlayerProfile instantiation in LegacyMediaManager . java and modified user preferences in PlaybackController . java to include a check for live TV direct
added a return statement in DynamicStyleBar . java to ensure proper termination of the method execution
added logging statements for setting and resetting database properties in Utils . java to improve traceability and debugging during replication operations
refactor ReactiveAuthorizationManager to improve code readability and maintainability
added a check for boolean types in MethodEmitter to ensure proper handling of boolean types
truffle : make sulongobjectnuller public instead of sulongobjectnuller
refactor multiple Java files to improve code organization and maintainability
add test for transaction - aware cache manager proxy
added a method ` calculateBoundingBox ` to calculate the bounding box of vertices to improve the accuracy of bounding box calculations based on vertex attributes
added a new TargetHashFunction enum and refactored hashing logic in TargetsCommand . java to enable flexible hashing options for target hashes
refactor DefaultConfigurationProperties to improve code readability and maintainability
added high light color and alpha settings in ListViewMultiChartActivity and modified highlight paint logic in BarChart to enhance visual distinction of the chart
phoenix - 2892 : remove unneeded pg pg pathplanmap . put ( pg pg pg pgpg , pg pg pg pg
( chore ) camel - infinispan : fix test instability
added a check to ensure artifact files are created and removed in MavenArtifactFetcher and MavenDependencyResolver to ensure artifact files are properly managed
updated shader string formatting in SpriteBatch . java to ensure compatibility with OpenGL ES specifications
hbase - 23748 use set instead of list to avoid concurrent modification
added a try - catch block to load JSP page loading in TagLibConfiguration . java and changed log level from warn to debug to improve error handling
refactor CustomAnalyzer to streamline version handling and add a test for version awareness to improve code clarity and ensure compatibility with
added a test to verify that ` getPackageArchiveInfo ` reads values from ` setPackageArchiveInfo ` to ensure that ` getPackageArchiveInfo `
replaced direct method invocation with MethodUtil . invoke for package access checks to enhance security by ensuring proper package access validation
added event types for project configuration and task start and task execution in GradleBuildService , Main , and ProjectReader to enhance progress tracking and
added synchronized block to AndroidWebDriver . java to ensure thread safety during concurrent access
do n ' t throw poolinitializationexception if initializationfailtimeout < = 0
removed the ` timeOut ` parameter from the ` getResult ( ) ` method and added an ` error ` method in the ` getResult ( ) ` method
changed the ` isNative ` field from non - transient to transient in ` JMethodIdTable . java ` to ensure that the ` isNative `
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
rename ` ` ruleenable ' ' to ` ` ruleenablementaction ' ' ( # 1771 )
fix some javadoc warning and code smell
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity and control over credential handling to enhance traceability of authentication
[ hotfix ] [ test ] fix typo in kafkatynamictablefactorytest
added error handling for null registrant repository in UsersPanel . java to improve robustness by providing a clear error message when the repository is not found
added support for " . otf " file extension in font name detection to enhance compatibility with various file formats
refactor type matching logic in AnnotationMatcher to improve clarity and correctness in handling Java types to enhance readability and maintainability of the code
replaced " OFF " with " SEVERE " in the Grep class to reflect the correct classification of the Grep feature
added a check for debug logging before logging messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when debug logging is not enabled
[ surefire ] fix npe when there be no include or excludes
added methods to handle home intent actions in the Launcher class to ensure proper handling of folder navigation based on user preference
updated maximum bitrate from " 110 " to " 30 " in the configuration to optimize performance by reducing unnecessary bitrate settings
remove duplicate code in CommandLineParser . java to improve code readability and maintainability
modified the return statement to trim whitespace before returning the description to enhance readability by removing unnecessary whitespace
updated the output file path in XOMParserTest . java to simplify the output path for better readability
remove process . pid ( ) from log error message ( # 1103 )
added getter methods for music and sound in MusicLoader and SoundLoader classes to provide access to the loaded music and sound objects
updated import statements in OnBeanCondition . java for consistency to improve code readability and maintainability
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording for specific test cases
svm : enable pause button for cpu and memory feature
refactor account preference handling into separate methods for clarity to improve code readability and maintainability by reducing duplication
smack - 195 : send available presence to the xmpp server .
updated StringBuilder initialization to use a minimum capacity based on utflen to optimize memory usage by avoiding unnecessary resizing of StringBuilder
disable statsd by default
refactor InterruptedException handling to improve code clarity and maintainability
refactor ServiceTicket class to improve code readability and maintainability
refactor connection handling logic in ConnectionCheckOperation . java to improve clarity and maintainability of the code
updated the conversion logic in ArgumentArrayMessageMapper to handle Map types more accurately to ensure correct conversion of payload strings to avoid potential null pointer exceptions
[ ds - 3952 ] update test to reflect new collection behaviour
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to PasscodeActivity in PasscodeManager . java to ensure that the activity is
refactor : remove deprecate method from patternparameterconfigurator ( # 2852 )
changed the return type of ` beginDraggingWidget ` from void to boolean and added a check for null drawable in the ` beginDraggingWidget ` method to
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added a null check for the root in DynamicStyle . java to prevent potential NullPointerExceptions during component collection
add a way to write the confusion matrix to a file , so that it ' s easy to debug
fix npe in jmeterthread when there be no sample
added unit tests for ` getConnectedDevices ` and ` getConnectedDevices ` methods in ` ShadowBluetoothHeadsetTest . java ` to ensure
polish ` ` fix property bind test ' '
added " clone " and " finalize " methods to the set of object methods in ResultObjectProxy . java to enhance functionality to support additional object methods
[ hotfix ] [ test ] check for null counter in integrationtestbiglinked
add objectreference . referringobjects command .
updated the ` setRegisteredServiceFilter ` method to include a check for the ` serviceId ` to ensure that only registered services matching the service ID are
added a null check for the activity before running on the UI thread to prevent potential NullPointerExceptions when accessing the activity
updated logger variable names for consistency to improve code readability and maintain uniform naming conventions
added getter and setter methods for string type in DatabaseAdaptor and JDBCSessionDataStore classes to allow dynamic configuration of string type to enhance flexibility
updated test cases in UIMAUpdateRequestProcessorTest . java to use suggested category instead of language to improve test coverage and ensure accurate validation of
replaced calls to ` getSessionId ( ) ` and ` getLogIdVar ( sessionId ) ` with ` updateThreadName ( ) ` and
refactor TaskletAdapter class to improve code readability and maintainability
drools - 5271 : add dmn test for negative value
updated texture map patch paths and modified default enabled logic in SplashProgress . java to ensure texture maps are properly initialized for macOS systems
added tooltip text for the showCGCP checkbox in RocketPanel . java to enhance user experience by providing context - sensitive information
replaced calls to ` owner . getTypes ( ) ` with ` owner . addType ( e ) ` in ` EnumFactory ` and ` InterfaceFactory
[ hot reload ] add text and description to hot reload action
use hassheetlabel ( ) instead of getlabelsimple ( ) to avoid npe
changed the BRIGHTNESS _ FACTOR from intValue ( ) to double ( ) for BRIGHTNESS _ MAX in BindingConstants . java to
update sschistoryparser to correctly parse sschistory . sh
added ` isAdmin ` parameter to ` createUser ` method and implemented user list methods in ` HomekitAuthInfoImpl . java ` to enhance functionality
added null checks for indexedWriteMethod and updated comparison logic in Introspector and PropertyDescriptor classes to ensure proper handling of void return types and
updated debug log messages to use placeholders instead of string literals to improve performance and readability of log output
updated method signatures in Context and Request classes to use ' task ' instead of ' runnable ' for better clarity to enhance code readability and maintain
fix npe in mixinitemstack . setcapabilitiesfromspongebuilder .
updated assertion in LifecycleUtilsTest to compare execution ID directly from binding to ensure consistency in execution ID comparison
added checks for contract types in Wallet . java and refactored contract creation logic in GetContractServlet . java to enhance contract validation and
added package - info . java files for com . ibm . lang . management , com . ibm . lang . management , and com . ibm . lang
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a loop that checks for null values in the tail node to improve
added duplicate handling for JavaFileObject instances in JavadocTool . java and refactored test method in T7091528 . java to improve code cl
change default value of STRIP _ IPV6 from " true " to " false " and adjust authority substring logic to ensure proper handling of IPv6 addresses
updated LoginServerTokenEndpointFilter to accept a list of parameter names for adding new users to the login process to enhance flexibility in handling
added support for c _ key in languagefactory
replaced instances of ` ThreadPoolExecutor ` with ` MoreExecutors ` and introduced a new ` MoreExecutors . newSingleThreadExecutor `
added caching and expiration headers to the response in multiple classes to improve response management and ensure proper caching behavior
do n ' t log error message in voicemanager
updated HSSFTests to use TestAreaReference , TestRangeAddress , TestCellReference , and TestSheetReferences instead of AllHSSFUtil
refactor FetchHTTP test classes to improve code organization and readability
replaced direct access to output with a null check for the output variable to prevent potential NullPointerExceptions when accessing output
added access controller priority settings in Java2DRenderer to improve resource management during resource resolution
added exception handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure that the build process fails gracefully for specific JDK versions
updated ` HotspotThreadMBean ` to be ` final static ` and refactored CPU time testing logic to improve thread management and ensure CPU time validation
added a check for empty comments before processing whitespace in TabsAndIndentsVisitor . java to ensure whitespace is not empty to prevent potential NullPointerExceptions
updated assertions in TestTriggerIntegration and modified log level in SimDistribStateManager to improve test reliability and clarity
updated equality checks in DatabaseChangeLog , AlreadyRanChangeSetFilter , and RanChangeSet classes to use case - insensitive comparison for
added a method to retrieve string values from a map to ensure proper handling of null values in the map
added date and time formatting based on user - defined settings for military time in TweetActivity to enhance date and time display based on user
nifi - 1771 : fix npe in standardprocesssession when no connection be available
refactor keyboard request logic in DetailFragment . java to improve code readability and maintainability by encapsulating focus handling logic
updated the path handling in the main class to ensure that backslashes in the canonical path are properly formatted and handled
make sure point be not create multiple time
added import statement for org . springframework . integration . core . Message to utilize the Message interface in the GenericMessage class
updated the SQL query construction in PostgresConnector . java and added a new join method in TaskAttempt . java to improve code readability and
updated file filter selection logic in AquaFileChooserUI . java to ensure only selected files are processed in the file chooser
fix thread safety issue in p2ptransportmanager
updated the ` toFormulaString ` method in ` ArrayPtg ` to return " TRUE " or " FALSE " based on boolean value to ensure correct
replaced specific imports with wildcard imports in PGtokenizerTest . java to improve code readability and maintainability
refactor variable handling in Java2TypeScriptTranslator to improve clarity and logic flow to enhance readability and maintainability of the code
added sequence handling and SQL statements in AddAutoIncrementChange . java to support auto - increment columns in PostgreSQL
updated byte reading logic in DataInput . java to ensure correct handling of negative byte values in byte processing
removed assertions for " VerticalPhysicalPixelSpacing " and " HorizontalPhysicalPixelSpacing " metadata to streamline tests by eliminating unnecessary assertions
updated parent assignment in Component . java to ensure proper retrieval of the parent component
reformatted code for consistency and readability to improve code maintainability
speed up native - crypto test by use free instead of finish
added iteration event handling and refactored iteration event firing methods across multiple classes to improve event firing consistency and enhance code clarity
refactor HTTP content handling in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management and prevent memory leaks
added deleteLogs ( ) method to TestRecovery . java to ensure logs are deleted after each test case
added a check for the " twitter : / / " URL before loading the URL in BrowserActivity to ensure that URLs containing " twitter : /
[ hotfix ] [ test ] make deploymentgrouptest more reliable
changed the parameter of logResult from false to true to enable the logging of list labels for better visibility control
increase maxautoretries to 25 for test
remove system . out . println ( result ) from translatorsupporttest
added support for the FRACTION resource type in the ResourceLoader and Converter classes to enable handling of fraction resources in the application
added a check to confirm write before proceeding to enhance security by preventing unauthorized write operations
added null checks for groupId and artifactId in UpgradePluginVersion . java to enhance code robustness by preventing potential NullPointerExceptions
hbase - 27875 use quotaexceededexception instead of donotretryioexception in namespaceStateManager
refactor multiple Java classes to improve code organization and maintainability
refactor TestFuzzPreLoop class to improve code readability and maintainability
added a check to ensure f0 is non - negative to prevent potential negative values in HTSVocoder . java to prevent potential division by zero
added null checks for primary and foreign keys in SchemaRetriever and TableRetriever to enhance robustness by preventing potential NullPointerExceptions
use a thread - safe set of charset in inputbuffer
added SharedPreferences checks for empty screens in the workspace to ensure that empty screens are handled appropriately based on user preferences
added a warning log for deprecated cucumber - needle usage to inform users of the deprecation of cucumber - cdi2 and cuc
updated theme handling in ShadowThemeTest and added native object registry in ShadowArscAssetManager to improve code clarity and maintainability by using
updated byte array field mismatch failure messages to use ` Arrays . toString ( ) ` instead of ` Arrays . toString ( ) ` to improve clarity and
no effective change - remove db migration for ehistory2
added support for the ` getProto ` and ` setProto ` methods in ` ScriptObject ` and ` ScriptObject ` classes to enhance the functionality
updated the random shuffle method call in TestFilterDirectoryReader . java to include a value of ` random ( ) ` to ensure consistent randomness in the
updated displayName assignment logic in UsersAndGroupsSearchProvider . java to differentiate between remote clarification and known clarification based on user context to
updated path handling in CookieRetrievingCookieGenerator to use StringUtils to ensure default values are used when the path is blank
removed redundant closing braces in multiple Java files to improve code readability and maintainability
updated cache name retrieval from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java ` to improve
updated comparison logic in ValidationResult . java to use the variable ' ve . pageNumber ' instead of ' pageNumber ' to improve clarity and correctness of the
added a null check for the focused widget in the highlighted index condition to ensure that the focused widget is not null before proceeding with highlighting
fix checkstyle issue in util / soundutil . java
refactor ApplePackageDescription and related classes to use ` getAppleCxxPlatformFlavorDomain ` instead of ` appleCxxPlatformFlavorDomain
add test for show ololoed with name and type
corrected the method name from onConnect to onAccept in ServerSessionListener . java and AbstractHTTP2ServerConnectionFactory . java to improve clarity
fix typo find by codespell on fossies . org
added a new file ` TestGetLoggerNPE . java ` to test logging behavior to ensure proper handling of null logger instances and prevent runtime exceptions
added a ` data ` field and a getter method in ` PathSharingContext ` , removed ` sharedMap ` from ` ScriptedDeciderRule
make sure staticobject . getobjectaccessible return object [ ] rather than object [ ]
added regex pattern matching for " NEXT VALUE FOR " in NextValExpression and updated references in ExpressionDeParser to enhance flexibility in handling
improve error message when resource bundle be not pre - cached
updated the handling of write buffers in BoundedLocalCache and added a test for pending writes in BoundedLocalCacheTest to improve cache management
added ` Leverage _ Level ` parameter to ` QuoineExchange ` and ` order direction ` field to ` QuoineNewMarginOrderRequest
added boundInitialization method to PropertyDescriptor and created a new Test7192955 class for property binding validation to ensure beans are correctly bound and
removed failsafe dimensions from LwjglApplicationConfiguration and added a setDisplayModeCallback interface in LwjglGraphics to streamline configuration handling and allow for
added null check for buttonsAwatingRelease in Tabs . java to ensure proper resource management and prevent potential memory leaks
make linecell wrap width independent
updated error message formatting in XSLTErrorResources _ it . java to improve clarity and consistency in error reporting
change the default value of paramValues from HashMap to LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper to maintain insertion order of parameter values
updated string formatting in multiple classes to use ` String . format ( ) ` for better readability to enhance code clarity and maintainability
simplified the method of obtaining the namespace URI to improve code readability and reduce redundancy
added nestedJoins configuration to multiple test classes to enable handling of nested joins in tests
server : fix listvolumes api to return listvolumes for root admin only
added caching options for JavacFileManager and modified constructor parameters in CompletionTaskProcesor to include a cursor parameter to improve compilation performance by avoiding unnecessary
added configuration settings for HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure proper initialization of Hive security authorization plugins
replaced ` Assert . assertThat ` with ` assertThat ` in ` KuduIOIT . java ` and removed ` MatcherAssert . assertThat ` from ` Xml
use util . createhandler ( ) instead of new handler ( )
fix ( ilp ) : fix typo in symbolfilemapping
removed redundant print statements in TermFilterTest . java to streamline output for term filtering functionality
removed the ` Reflection ` class and updated imports in ` Jooby . java ` and ` TypeConverters . java ` to streamline the code
refactor threadlessexecutor to not use sharedexecutor
refactor error handling in DateTimeFormatter and add a new test for DateTimeException in TestDateTimeParsing to improve code clarity and ensure proper handling
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and update related methods for clarity to enhance code read
added handling for WILDCARD case in Types . java and created a new class T7034495 . java with multiple generic interfaces A , B
refactor loop structure in LotsOfEvents . java to improve readability and maintainability of the code
truffle : fix tracsclusiondeciderule to not break
remove the printmicronautversion ( ) method that be no longer need
added assertions for Print _ Area and Name records in TestBugs . java to ensure correct handling of name definitions in the workbook
updated MindIcon creation to include a description to improve clarity of the returned icon description
added an ` internalStateHandled ` parameter to the ` onHomeIntent ` method in ` LauncherCallbacks ` and ` LauncherCallbacks ` classes to
refactor CxxBuckConfig to use a variable for the preferDependencyTree variable to improve code readability and maintainability
added ` showDetails ` method to ` FileDisplayActivity ` , ` FolderPickerActivity ` , and ` FileDetailFragment ` for managing
replaced instances of " $ apply " with " apply " across multiple files to standardize function naming conventions and improve code clarity
added randomness to byte array allocation in MinimalEncoder . java and updated expected sizes in HighLevelEncodeTestCase . java to ensure proper handling
updated header description formatting and modified parameters in SourceBuilder . java to include " | - " and " | - " prefixes to enhance clarity of
added a call to notifyDataSetChanged ( ) to update the adapter to reflect changes in data changes
removed the default WAL sync mode method from ShadowSQLiteConnection to streamline code by eliminating unused functionality
updated type checks in RemoveJavaDependenciesAdapter . java and added assertions in Collections . java to enhance type safety and ensure correct handling of target expressions
defaults3crtasyncclient : remove unused method
update error message for corrupted stream length test
improve error message when collection size be not correct
[ fix ] graalcompiler bailout should never be bailout .
g3d - 1010 : fix for pen image with too small size ( for desktop )
refactor SQLXML class to improve code readability and maintainability
added a limit parameter to the getOrderBook method across multiple classes to allow for greater flexibility in order book retrieval
use vm . share . gc . heapoome instead of metaspace . stresshierarchy . common . exceptions
nifi - 1771 : limit the maximum string length for stream read in standarddataflow
updated the retrieval of the engines variable to use an empty string instead of a configuration string to ensure that the thread safety by avoiding potential null pointer exceptions
refactor TimerWheel class to use WheelIterator instead of FullIterator to improve clarity and consistency in naming conventions
add error message for miss bug pattern
increased the timeout duration for assertions in LocalChunkProviderTest from 3 seconds to 10 seconds to improve test reliability by allowing longer wait times
changed the visibility of the menu item from true to false to disable the uncomplete checklists functionality in the menu
refactor DefaultResultSetHandler to improve result map handling and add a new Contract class to enhance code clarity and introduce a new Contract class
added null checks for defaultHome and mUpdateRegisteredPackage before unregistering the receiver to enhance robustness by preventing potential null pointer exceptions
removed the import and annotation for VertxGen in PumpImpl . java to streamline the code by eliminating unused dependencies
removed unnecessary casting of FileDisplayActivity to FileDisplayActivity in FileDetailFragment and OCFileListFragment to simplify code by removing redundant casting
trim whitespace from configuration tokens in ConfigAttributeEditor to ensure consistent formatting of configuration attributes
updated multiple Java files related to auxiliary classes to improve code organization and maintainability
svm : fix classloader . getclassloader ( ) for jdk9 +
updated the handling of the ' relKind ' variable based on the device type to ensure correct assignment of ' relKind ' based on the device type to
chore ( agent ) : update agent name from ' ter ' to ' t '
updated variable names and exception handling in ThriftHiveMetastore and HiveMetaStore to improve code clarity and ensure proper exception management
added a new module - info . java file for the com . speedment . runtime . core package to define module dependencies and exports for the core package
updated flush state handling and fill state management in SslConnection . java to ensure proper handling of encrypted output during SSL operations
updated Log4j2LogDelegateFactory and LoggerFactory to improve logging functionality and added a new NoExceptionInInitializerErrorTest class to en
added checks for the presence of the server VM in the execution environment and modified related logic to ensure that the Java server is only launched when the
refactor MongoDB operation classes to improve code organization and maintainability
updated PGProperty to use " org . postgresql . ssl . LibPQFactory " instead of " org . postgresql . ssl . Lib
disable testinterprocesssemaphoreedgestest until it be fix
added sorting functionality for resource names in EditableResources . java to ensure consistent ordering of resource names based on case sensitivity
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to support the ` OSv ` terminal feature to enable
added support for additional file extensions in ClassType . java to enhance compatibility with additional file types
changed the order of ` combinedVectors ` and ` actualSuperVectors ` from ` HashMap ` to ` TreeMap ` and ` actualSuperVectors
updated loop condition in XPathEntityProcessor . java to ensure correct iteration over names and values
refactor WebSocketPolicy class to improve code readability and maintainability
refactor ` readPhoneStatePermissionGranted ` and ` accessWifiStatePermissionGranted ` from static to instance variables in ` ShadowTelephonyManager
add option to not use template - based resolution
updated Class . forName calls to use generics for ClassVisitor and ClassVisitor classes to enhance type safety and prevent unchecked cast warnings to improve code
added a new file LoggingAuditService . java that implements UaaAuditService to provide detailed audit logging for user authentication events
added null checks for temperature and Fahrenheit values in TaoZoneStateAdapter and AirConditioningZoneSettingsBuilder to ensure valid
do n ' t generate proxy for abstract class in aop
camel - 16400 : camel - http - add support for http proxy to http endpoint
updated the maximum encoding version from " 1.1 " to " 1.2 " in TemplateDTO . java to reflect the latest encoding standards
added a method call to jdkSerialFilter to enable serial filtering in the system class
( chore ) camel - core : update log message to include pool size
replaced calls to ` getScroller ( ) . forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple Java files to simplify the
updated the parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` in the ` ensureRealtimeClusterIsSetUp ` method to improve
added error reporting methods to ValidationReport and updated status handling in DisallowValidator to improve error reporting accuracy and enhance validation logic
updated inline QSB handling in InvariantDeviceProfile . java to support different display options for portrait and landscape orientations
added URL decoding to the createClassPath method to ensure proper handling of special characters in the location string
updated regex patterns for method parameters in TransformSteps . java to improve accuracy in matching method names with escaped characters
fix nullpointerexception when set retina property
increase timeout for flaky test
updated package - info . java files for mmm and ppp packages
added a setUrl method to the Environments class to enable dynamic URL configuration for Docker images
added multiple calls to System . gc ( ) in KnowledgeAgentTest . java to ensure proper resource management and prevent memory leaks
updated method implementations in AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock to improve code clarity and maintainability
added a copyFile method to SnapshotTaker to handle file copying operations to improve file management and error handling for file operations
renamed the method ` appendToDescription ` to ` getDescription ` across multiple files to improve clarity and consistency in method naming
[ pytorch ] fix npe in linalg . zero ( ) with multiple device
added a check to ensure the XML is an instance of Xml . Document before processing to avoid potential errors during XML formatting
updated test classes to use ` AndroidJUnit4 ` instead of ` InstrumentationTestCase ` and added JUnit 4 annotations to ensure compatibility with
added GasLimitRule and ParentGasLimitRule to ProofOfWorkRule , DifficultyRule , and ParentGasLimitRule in CommonConfig . java
changed the access modifier of ` setupData ( ) ` method from public to private and removed the ` setupData ( ) ` method from multiple test files
renamed the ` autocommit ` variable to ` runInTransaction ` in ` ChangeSet . java ` and updated its usage throughout the code to
fix nullpointerexception in tripleserverstream
updated URLs in JobManagerOptions and RestartStrategyOptions to include the base URL to enhance clarity by including the site ' s base URL to improve
added a new test method ` testIssue154 ` to ` SelectTest . java ` for SQL parsing and deparsing to ensure correct SQL queries related to
refactor Common class to improve code readability and maintainability
refactor app launch event handling in Launchable . java to use a try - with - resources statement to improve code readability and ensure proper
[ hotfix ] [ doc ] fix typo in streamexecdeduplicate
[ hotfix ] log exception when send kafka message to topic
dataes - 344 : do n ' t expose non - immutable property in dataes persistent entity
modified the ` setCoord ` method in ` GeoCoordSys1D ` and ` GeoSegment3D ` classes to return a boolean indicating success to
added scrolling logic and logging for gesture events in AskGestureEventsListener . java to improve user experience by handling scroll events more effectively
updated comparison logic in NGramEstimator . java to ensure correct ordering of values based on their lengths
updated import statements to reflect the new package structure to ensure compatibility with the latest Cucumber library structure
updated methods in StatsLogCompatManager to retrieve folder icon properties to enhance clarity and accuracy of folder icon state information
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to improve cl
added a new file ` TestSkeletonPredicates . java ` and a test method ` Test1 _ helper ` in ` TestSkeletonPredicates . java
refactor equality and hashcode methods in SelectionHighlighter . java for improved clarity and functionality to enhance code readability and maintainability
added a new ` StringResultConverter ` class and modified ` AsmRuntime ` and ` AsmUtil ` to utilize it to enhance string
( chore ) camel - jbang : migrate test to junit5
corrected a syntax error in the WaitForSingleObject condition to ensure proper evaluation of the console object
added null checks and improved buffer limit handling in BufferUtils . java to enhance code robustness and prevent potential NullPointerExceptions
updated assertion in TestSolrDiscoveryProperties to use File . separator instead of a hardcoded path to ensure compatibility with different operating systems
updated operating system detection logic in AutoUpdaterServerProperties . java to ensure compatibility with macOS and pre - catalina environments
replaced ` lockFile ` with ` lockName ` in the ` Lock ` class to improve clarity by using the absolute path of the lock file
replaced ` appIcon ` with ` allApps ` for better clarity to improve code readability by using a more descriptive variable name
updated references to ` ClientDatagramEndPoint ` to use ` ClientDatagramEndPoint ` instead of ` Invocable ` to improve code clarity and
changed the SQL query to sort step executions by STEP _ EXECUTION _ ID instead of Oreder to improve the efficiency of step execution retrieval
updated button handling in LwjglInput . java to return - 1 instead of LEFT for unknown buttons to ensure correct button representation and prevent processing of unknown
added two test cases for ClaimedTask submission in TaskRestRepositoriesIT . java to ensure proper handling of approve and reject actions in the workflow
refactor logging statements to use a consistent logger variable instead of a transient logger to improve code readability and maintainability by reducing repet
removed the minute from the expiration time in ` SsoAccessTokenProvider . java ` and updated import statements in ` SsoAccessTokenProviderTest .
[ geos - 10641 ] skip test that run on macos only
added methods to create and list alarm suppression requests in GreetResourceMockedTest and OciMetricsCDIExtensionTest to implement functionality
reordered conditional checks in JFrame . java to improve readability and maintainability of the code
refactor MediaDatabase connection handling to use a try - with - resources statement to improve resource management and prevent potential null pointer exceptions
replaced references to ` metricsContext ` with direct usage of ` solrMetricsContext ` in ` SuggestComponent . java ` to improve code clarity
refactor conditional checks for file and folder counts in OCFileListFragment . java to improve readability and maintainability of the code
camel - 16436 : camel - core - optimize to not use arraylist for keypair provider
refactor SourceVersion class to improve code readability and maintainability
added a new test class ` ThreadFactoryTest ` for thread creation in ` QueuedThreadPool ` to ensure that the ` MyThreadFactory `
updated lock period retrieval logic in DelegateResourceActuator . java and adjusted expiration time in ProposalUtil . java to ensure proper handling of lock periods based
added a new TicketModel instance to the EditTicketPage class to enhance ticket management functionality within the application
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the feature for dimiss apps from predicted list
updated superclass constructor calls to include ` Class < S > ` parameter across multiple assertion classes to enhance type safety by associating assertion classes with
added a new menu item for quoting characters in the tweet menu to enhance user experience by allowing quick access to tweet links
make sure interruptlock . lock ( ) be call to avoid race condition
do n ' t use ` ` passthrough ' ' and ` ` decrypt ' ' codec for playback
added a conditional check for the result before offering and closing the consumer in ServerHTTP2StreamEndPoint . java to ensure that failure is only offering
updated the XSLT error message from " Stiller Modus " to " Silent - Modus " and corrected a typo in the error message
make checkpointcleaner thread - safe .
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapter ` , and ` MockRestAdapterTest
reformatted code in ComponentPresetManager . java for better readability to improve maintainability of the code
added support for unique column names in Hive result sets to enhance query flexibility by allowing unique column names
fix for ticket : 212 : update example text after select voice
added session validity check and exception handling in Session . java and updated test cases in SessionHandlerTest . java to improve session management and ensure proper exception handling
hhh - 13864 remove unused exceptionhelper
updated key pair generation from 256 to 255 in JceX25519Domain . java to ensure consistency in key generation parameters
added a method to set the codec in TestBlockPostingsFormat3 to ensure consistent postings format handling
[ hotfix ] add debug log for empty checkpoint range
added support for RSA / ECB / OAEPPadding algorithms in OperatorHelper . java to enhance algorithm parameter handling and improve error management
replace references to ` DARWIN _ AARCH64 ` with ` Platform . MACOS _ AARCH64 ` across multiple files to ensure compatibility with
refactor error handling and logging in DebugSourcesResolver . java to improve clarity and structure to enhance error reporting for resource resolution failures
refactor return statements in AbstractTest . java to improve readability and maintainability of the code
updated file handling and logging in FileUploadUtils , ControllerConf , and UploadRefreshDeleteIntegrationTest to improve error handling and ensure segment files are
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` across multiple files to improve memory management and prevent potential memory leaks
updated the USE _ PIPELINE _ DOWNLOADER constant from false to true to enable the fast sync chain download feature
updated the calendar handling in SimpleDateFormat . java and added a new test class Bug7130335 . java to improve date formatting functionality and ensure
replaced direct calls to mRollo . mState . mState with a local iconCount variable to improve code readability and maintainability by
cloudstack - 1771 : do n ' t set default hypervisor for vr when vr be not in use
refactor StringBuffer class to improve code readability and maintainability
added ruleUID assignment to RuleResource . java to ensure the correct uid is assigned to the rule
added a null check for the listener before unsubscribing to avoid potential NullPointerException when the listener is null
added a new PropertyDescriptor for pretty printing in JoltTransformJSON to enable customizable output formatting for JSON transformations
make access _ table public in InstrumentBranchesPhase . java to allow access
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to use a more descriptive message format to improve clarity and consistency in error reporting
improve error handling in tcptransport and xmpptransport
refactor multiple Java classes to improve code organization and maintainability
updated AmbariManagementControllerImpl to include additional parameters for cluster upgrade status to enhance the clarity and functionality of the upgrade process
simonstewart : update copyright header to match the current codebase
removed the declaration of wfields to streamline the code by eliminating unnecessary fields
added EncryptionJwtCryptoProperties and OAuthProperties classes to initialize encryption and signing keys with default sizes to ensure proper encryption and signing keys for improved security
hbase - 27875 htabledescriptor . getcolumnfamilycount ( ) should return the actual number of row instead of the length of
updated the alias check method in SampleWebJspApplicationTests to use a lambda expression to improve code readability and reduce redundancy
refactor multiple classes related to serialization to improve code organization and maintainability
added a new ` IdleStrategy ` interface and implemented a reset method in ` Cluster ` and ` ClusteredServiceAgent ` to ensure idle strategy is reset
updated the incrementing of currentChunkID in the SequenceFile . Writer constructor to ensure consistent usage of the currentChunkID value
added a new abstract class AbstractJobExecutor that implements the JobExecutor interface to provide a concrete implementation of job execution in batch processing
replaced the return statement with a break statement in the recovery process to ensure proper termination of the recovery process
rename hugeStaticBase to staticBase and update related references to improve clarity and consistency in variable naming to enhance code readability and maintainability
do n ' t return consul id when consul discovery be disabled . fix # 1181
replaced ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` new SecureRandom ( ) . nextInt ( ) `
improve error message when runtime compilation fail
removed redundant calculations for currentStart and baselineStart to streamline the logic for handling time bucketes
added a check for abstract methods in the mocking framework and corresponding tests to ensure correct behavior when stubbing abstract methods in the mocking
refactor checkPackageAccess methods to accept Class objects instead of String names to improve flexibility in checking package access permissions
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup to enhance plugin testing capabilities and ensure proper error handling
use bold font to improve readability
added support for the " has - touch - interaction - service " request in the QuickstepTestInformationHandler and TestInformationHandler classes to enhance testing
refactor connection logic in ConnectAction . java to improve readability and ensure thread safety during connection handling
updated references from ` ImmutableMap < String , ShowOptions > ` to ` ImmutableMap < BuildTarget , ShowOptions > ` across multiple files to enhance
add miss javadoc for java . lang . arrayhelper
added support for Home and End characters in the code to enhance navigation functionality and improve user interaction
replaced a synchronized block with a direct call to ` MainUtil . getConnectedPlots ` to simplify the code by eliminating unnecessary synchronization
replaced the installation check for " com . estrongs . android . pop " with an intent chooser to enhance user experience by allowing
removed the public modifier from the constructor of Roster to allow broader access to the constructor of the Roster class
added basic constraints to certificate extensions in TestUtils . java to ensure proper handling of basic constraints during certificate generation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address the issue of using the wrong transform offsets
removed the check for multiValued ( ) in TrieDateField . java and TrieField . java to simplify the logic for setting precisionStep
removed the TaskbarStateHandler class and its associated functionality from BaseQuickstepLauncher . java to streamline the codebase by eliminating
added a new file ` ArrayLength . java ` that tests the ` getField ( ) ` and ` getDeclaredFields ( ) ` methods to ensure that
wait for hazelcast process to be destroy on teardown to avoid race condition
refactor ApplicationSettingsService to use @ PostConstruct instead of @ Singleton to ensure proper initialization of application settings before saving
safepoint : fix assertion for negative value
change thread name field type from char array to string to ensure compatibility with Java ' s string handling
updated the DEFAULT _ RAND _ SEED constant from milliseconds to 42 milliseconds in Lucene90HnswGraphBuilder and HnswGraphBuilder to
make sure stroke object be set before use
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] refactor sqlvalidatorimpl # expanddynamic
added a method to find interested children in Comment2000 to facilitate the handling of container records in the Comment2000 class
added import for Message and set status code for the frame to enhance user experience by providing a warning icon
updated modifier handling in PSurfaceAWT and PGraphicsOpenGL classes to use getModifiersEx ( ) instead of getModifiers ( ) to improve
fix amd64countLeadingZerosnode and amd64countTrailingZerosnode to use 3 cycle instead of 6
camel - 16400 : camel - as2 - fix nullpointerexception when disco send a plain message
refactor Locale class to improve code readability and maintainability
added a clearLog method in ErrorConsoleController and implemented it in ErrorConsoleViewModel to clear log messages to enhance error handling by allowing users to reset
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the animation controller
updated imports and method signatures to use ` final ` and ` Set < TranslatableCaption > ` instead of ` Map ` to improve code cl
updated connection pooling settings and improved resource management in test classes to enhance test stability and ensure proper resource cleanup
danielwagnerhall : enable opera blink by default
updated exception handling in ManageJournalsPanel . java to provide user feedback for download failures
added new Lifx product entries to the LifxProduct class to support additional Lifx product details and enhance functionality
added support for asynchronous operations in the OverseerCollectionProcessor and updated related tests to enhance asynchronous handling and improve test coverage for replica creation
changed ` PGSQL _ PK _ BYTES _ LIMIT ` from ` private static final ` to ` static final ` and refactored primary key
updated LogPage , SummaryPage , and LinkPanel to utilize the repository model ' s HEAD attribute instead of a hardcoded value to enhance flexibility
update model space rotation from Y - axis to X - axis in SkeletonInterBoneWire . java to correct bone positioning for bone interactions
added a ` browserDestroy ` method in ` AndroidImplementation . java ` and refactored the ` destroy ` method in ` AndroidImplementation . java `
added a wait for the " readApiTestViolations " collection in AutoScalingHandlerTest . java to ensure that the test environment is up to date
refactor character handling in ScreenTerminal and Tmux classes to improve code readability and maintainability
updated the condition for controller state checks in SoftResetAction . java to use a more descriptive return statement to improve clarity and maintainability of the
disable on - disc stream cache to speed up texture pack reloading .
added null check for parentFolder in Request and RequestV2 classes to ensure proper resource retrieval and avoid potential NullPointerExceptions
cloudstack - 6892 : fix npe in networkofferingvo . ispersistent ( )
added a close method to the FileOutputStream to ensure proper resource management and prevent memory leaks
added error handling for 403 responses in StandardGitHubRepository . java to improve robustness by logging HTTP 403 responses with headers
log4j2 - 1349 add the getoriginal ( ) method to the messagefactory2adapter to get the original messagefactory
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related to
updated regex to match versions up to 3.3 to ensure compatibility with the latest releases
updated tooltip delay settings in ExtractionModelFrame . java to include a delay of 7 seconds to improve user experience by allowing more time for tooltip updates
refactor ProjectCommand to use ImmutableSet for passed - in targets to improve code readability and maintainability by reducing redundancy
added UTC timezone handling in TimeTest . java to ensure correct formatting of 24 - 45 timezones
refactor MediaSessionConnector class to improve code readability and maintainability
use getsslsupport ( ) instead of create a new one
updated distance display method to use accuracy instead of altitude to improve accuracy display accuracy
added Futures _ Enabled parameter to BinanceExchange and refactored related methods for better clarity to enhance the handling of futures
continue issue 5 in favor of instructor course
set the accept queue size for the connector in ThriftHttpCLIService to optimize resource allocation for better performance
replaced the use of ` getClass ( ) . getName ( ) ` with a constant for ` PROPERTY _ DISABLE _ WATCHER ` in ` Path
do n ' t attempt to connect to jms if the scheme be ssl
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated exception handling in ` TestWindowFunctions
[ java ] : remove assertion that may be zero for a really fast collection .
fix nodewithjavadoc to return empty optional
added a method to check if the operating system is OSX and refactored memory handling in WhiteBox to improve memory allocation handling to enhance compatibility
added multiple calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing or splitting scenarios
hbase - 2593 add procid to exception message in hbaseadmin
camel - 16400 : camel - cxf - allow to configure the service class for the wsdf endpoint . thanks to jens k
refactor YamlChangeLogSerializer to use a container for database change logs to improve clarity and maintainability of the code
updated print statements in SchemaPrinter . java to use newline instead of a single newline to improve readability of output
remove sponge schematic code that be no longer need
replaced ` getContext ( ) ` with ` getActivity ( ) ` for initializing ` nowPlaying ` and ` footer ` in ` HomeFragment . java ` to
updated @ GeneratedValue annotations to use generics and added a new @ GenericGenerator annotation in multiple Java files to enhance code clarity and
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature and improve code clarity
updated output buffer handling in BZip2Codec . java and modified ByteBuffer allocation in TestBZip2Codec . java to improve performance to optimize memory usage
[ web ] make sure ggbapplet . startlogger ( ) be only call once
added a new constant VALUE _ TYPE _ EMPTY and modified type assignment logic in Value . java to improve code clarity and ensure proper handling of empty values
updated equality checks for group comparisons in GroupManager . java to improve null safety and avoid potential NullPointerExceptions
refactor Liquibase - related classes to improve code organization and maintainability
pdfbox - 4892 : fix typo find by codespell on fossies . org
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated tests in ` VersionedTargetGraphBuilderTest ` to use
rename columnfamilystore . getmincompactsize ( ) to columnfamilystore . getmaxrowsize ( )
fix json serialization of metadata collection
updated the logic for setting and deleting the last element of the sobj in NativeArray . java to handle cases where the last element is not present before
updated file handling logic in FileUploader . java to ensure the correct parent file ID is set for the upload process
added a new file UTF8ReaderBug . java to test handling of supplementary characters in UTF - 8 XML input
add unit test base on user forum issue
updated test assertions to include depth and depth20 in BinanceIntegration . java and BinanceCoinsIntegration . java to ensure tests align with the latest API
added a resetAllocation method to the Wrapper class to reset initial and maximum allocation states
removed import of AssertTree from AmbariManagementControllerTest . java to streamline dependencies by eliminating unused imports
refactor property handling in mmm Agent . java to synchronize access to system properties to ensure thread safety when accessing system properties
[ hotfix ] [ doc ] fix typo in modelutils
refactor AbstractDoubleArrayAssert class to improve code readability and maintainability
updated width and height calculations for labels in Legend . java to ensure proper alignment of labels based on index bounds
added test methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` , ` TestResponse
replaced ` getText ( ) ` method with ` getValues ( ) ` and updated term frequency handling to support multiple values instead of a single field to en
replaced direct rule resolution with a new ` BuildTargetSourcePath ` instance to improve clarity and maintainability of the code
add a disabled chat message when versioning be disabled .
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a new field ` numberOfFiles ` in ` Media
added a new argument " - b " in AidlStep . java and updated string formatting in GenAidlTest . java to improve command - line
add test case for bug # 79
added a todo comment to the FakeHttpLayer class to mark the class as outdated
replaced ` handleError ( cause ) ` with ` revokeLeadership ( ) ` in ` EmbeddedLeaderService . java ` to ensure leadership
2 . x : fix compositediscoveryclient to use flatmap instead of streams
updated method names from ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in method naming conventions
[ hotfix ] [ doc ] [ doc ] add description to jobmanageroptions
replaced ` updateNoWidgetsView ` methods with ` updateRecyclerViewVisibility ` for better clarity to improve code readability and maintainability by using
added reflection - based class loading for WstxOutputFactory in XmlUtil . java and updated tests in MultiVersionXmlParserTest . java
refactor ` testBuckAliasList ` to ` testBuckAliasList ` with ` @ Before ` and ` @ Setup ` annotations to ensure
removed unnecessary logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to improve code readability and reduce clutter
( chore ) camel - cxf : disable test for now
added a try - catch block around the update ( ) method to handle potential exceptions during periodical refresh failures
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and modified provider
patch from josh from bug # 54925 - add check for miss background fill
refactor ZonedDateTimeFormatterBenchmark class to improve code readability and maintainability
refactor update buffer logic in DistributedUpdateProcessor and add a new test class in DistributedUpdateProcessorTest to improve code clarity and
added a null check for rocket stage in SimulationListHandler . java to ensure proper handling of null motor cases
improve error message when replace exist block
refactor ExtendedMasterSecretExtension class to improve code readability and maintainability
changed the declaration of the processor variable to be final to ensure that the processor variable cannot be reassigned after initialization
added a listener for handling end - of - stream errors in WritableKeyProcessor to notify listeners when the stream has been reached
added " CUBE " to MySQLDatabase . java to enhance database performance testing capabilities
added a try - catch block around the rm method call to handle potential IOException to improve error handling and prevent application crashes
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated references accordingly to improve cl
refactor DefaultOkHttpClientFactoryTest to use the HTTP client ' s connection timeout and read timeout retrieval methods instead of direct field access to improve code read
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the operating system in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions
g3d - 195 : fix problem with av dock in desktop
added a new parameter ` fromCli ` to the ` jailerMain ` method and modified error handling in ` jailerMain ` to allow
refactor HttpRequest class to improve code readability and maintainability
added a shared preference for unread notifications in TalonPullNotificationService to manage unread notifications effectively
added a check to ensure the parent object is an instance of ` Kind . Object ` before comparing its non - null state to prevent potential null pointer exceptions
updated parameters in Box2DTest . java and Pong . java for improved rendering accuracy and performance to enhance rendering accuracy and provide
refactor RecyclerView initialization and layout handling in ViewPostDetailFragment . java and ViewPostDetailFragment . java to improve code readability and
change log level from trace to warn in CLIService . java to reduce log verbosity during background operation abort
fix a bug in jimplebodybuilder where abstract method be not be consider abstract .
g3d - 1010 : do n ' t focus text field on ie 10 +
updated ` getNotificationUsers ` method to include ` event . getDeviceId ( ) ` and modified user retrieval logic to include ` deviceId ` parameter to en
updated base URL in CGIARProvider from v4.1 / 6 _ 5x5 _ TIFs to cgiar . org / S
replaced the file chooser implementation in ` MotifFileChooserUI . java ` and added a new class ` bug6520101 . java
change return value of ` handle ` method to boolean in ` HollowDiffUIRouter ` , ` HollowHistoryUI ` , and `
refactor ` getRuleOptional ` methods to return ` Optional < T > ` objects instead of null to improve error handling and provide clearer
added a visibility setting for transportSpinner based on whether a shortcut is being made to enhance user experience by showing or hiding the transport spinner to improve user
added null check for attributes _ field in mmm Attr . java and created new classes ppp T7043371 . java and T7073477 .
refactor back press handling in BookmarkFragment , BookmarkListRootFragment , CategoryDetailsActivity , ExploreFragment , SearchActivity , and
added support for long view index ID in QueryServices and QueryServicesOptions to enable dynamic retrieval of view index ID based on configuration
updated string suffix from " V " to " v " in SDRTrunk . java to ensure consistency in capitalization
replace ` withMessageContaining ` with ` cleanPath ` in ` PrivateKeyParserTests . java ` to ensure that the path is cleaned before processing to
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriter configuration to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the latest version
hbase - 27875 add option to disable column family check in importtsv
[ java ] : use a long instead of string for log subscription id .
replaced direct calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " startApplicationDetailsActivity " ) ` and added
added a condition to return early if the input text equals " i " in the PoloniexStreamingService to improve performance by avoiding unnecessary processing
refactor Procedure class to improve code readability and maintainability
added Locale . getDefault ( ) and ClassLoader . getSystemClassLoader ( ) to ResourceBundle method calls in Toolkit . java and Window . java to ensure
[ j2kt ] normalize kotlin array creation .
updated conditional logic in PerSegmentSingleValuedFaceting . java to include additional checks for mincount and hasAnyCount to ensure accurate handling of term enumeration
fix ` ` author list be null ' ' error in mod metadata ( # 1103 )
added a new test class ` OSGiTest ` and modified ` module - info . java ` and ` module - info . java ` to
jbrules - 2214 : enabling / disabling controller service by default should not be enable by default
hbase - 20513 hbase - 20513 hbase - 20513 hbase - 20513 hbase - 20513
fix : cast ` ifElement . getThenStatement ( ) ` to ` CtStatement ` in ` scan ( ( ( ctstatement )
added hasuserdata ( ) method to simplefeatureimpl and property interface .
removed HiveException from method signatures in DDLPlanUtils and ExplainTask to simplify method signatures and improve code clarity
refactor RelyingPartyRegistration class to improve code readability and maintainability
removed the enableLogging method from JavaCompiler . java to streamline logging functionality by eliminating unused code
added a new class ` InJavaSourceSet ` and modified ` UsesJavaVersion ` to handle Java source sets to improve the handling of Java source sets
updated file path handling in TestGDALParser to use a dynamic filename instead of a hardcoded path to improve flexibility and ensure compatibility with different file formats
added a new method ` createGetter ` to the ` ReflectionHelper ` class to enable dynamic retrieval of getter methods based on object attributes
removed conditional check for useExternalStorage in DirectUpload . java to simplify SDK version validation
added a configuration for the nocommit feature in IndexerMapReduce and updated related classes to support it to enhance indexing behavior by allowing commits to be
api : do n ' t allow to create volume without disk offering id
updated content assignment in ToHtml . java and modified assertion in BaseTestCellComment . java to check for non - empty notes to improve clarity and
added null checks for ` amountToAdd ` and ` amountToSubtract ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime `
added a new test class ` Issue382 ` to handle specific error types in the Jooby framework to ensure proper error handling for specific
replaced custom signum method with static import to improve code readability and reduce redundancy
added a condition to hide the holder text view when a specific condition is met to ensure the text view is shown to improve user interface responsiveness
fix ( jdt ) : fix npe in astparentconsistencychecker and jdtimportimpl
danielwagnerhall : do n ' t try to get firefox profile if it ' s not available
fix : add bucketpickup for liquidblock ( # 9060 )
http : / / issues . apache . org / jira / browse / amq - 2902 - fix flaky test
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure correct time
renamed ` existingObservation ` to ` distinctObservation ` and updated related logic in ` DistinctErrorLog . java ` to improve cl
updated system property settings for Nightly , WEEKLY , TEST _MONSTER , Awaitfixes , and BADAPMS in LuceneTestCase
rename sqlexecutorimpl to sqlexecutionloggerimpl to avoid confusion
add deny access for class , field , and proxy in graalcontext
improve performance of pgraphics2 . loadpixels ( )
updated the method call to use partition . getSd ( ) instead of table . getSd ( ) in HiveUtilities . verifyTransactionalProperties calls to ensure
updated the logic for determining whether to scroll the overlay based on the scroll amount to improve the accuracy of overlay behavior
hhh - 14501 - add unmodifiablebatchbuilderimpl to allow override of batch size
improve error message for unexpected input
added a test to verify that spying on a class retains the state in PowerMockito to ensure proper functionality of the MockWithStaticStateDemo class
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL syntax with brackets and orders to ensure
added null check for ugi before calling doAs to improve robustness by handling potential null pointer exceptions
added error handling for audio buffer allocation in OpenALMusic . java to improve debugging by providing more context on the error encountered during audio buffer allocation
( chore ) camel - azure - quartz : rename method to avoid confusion
refactor decimal type creation in RexNodeConverter . java to improve precision and scale handling to ensure correct SQL type generation for decimal types
update WebAuthnMultifactorDeviceProviderAction to use Optional for vendor and device retrieval to enhance robustness by handling null values gracefully
updated assertions in WalletTestAccount003 to use Long . toString ( now ) instead of string concatenation to improve clarity and consistency in the test assertions
replaced axialStage with RocketComponent and refactored selection logic in BasicFrame and DesignPanel to improve code clarity and streamline
added longRunningTime parameter to Args . java to allow configuration of long execution time in the application
added a new class ` Ideas _ 2012 _ 05 _ 21 ` and updated references in ` FindRefComparison ` and ` RefComparisonWarningProperty `
replaced imports from ` sun . misc . Service ` with ` java . util ` and updated service loading mechanism in ` ScriptEngineManager ` and ` F
[ geot - 6892 ] fix gml3 encode to work with xsd
removed an unused Expectations class and simplified assertions in TestRestClientRequestImpl . java to improve code readability and maintainability
added a condition to check if the reference database matches the comparison database before proceeding to ensure that unique constraints are only applied when the reference database matches the
removed the ` addAndroidConstants ` method and modified asset path handling in ` IjProjectTemplateDataPreparer . java ` to streamline the
refactor test assertions in DuplicateCookieTest and SessionRenewTest to use awaitility for improved stability to enhance test reliability by
added additional properties to the ImmutableMap builder in ChromeTraceBuildListener . java and ChromeTraceBuildListenerTest . java to enhance trace logging by including additional
[ gr - 27820 ] fix nativelibrary . getbundle ( ) to work with java 11 .
fix typo in hepplanner
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval of exchange metadata from TheRockExchange to provide users with an example of how
renamed FloatingDecimal and FormattedFloatingDecimal classes to strictfp and FormattedFloatingDecimal , respectively , and added a test for strictness
removed unparseIdentifier method call from columnNamesBuilder to simplify column name handling by directly appending the column name
added a new test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and updated method signatures in ` BlockStatementTemplateGenerator `
fix for http : / / issues . apache . org / bugzilla / show _ bug / show _ bug . cgi ? id = 128
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the path handling by
added handling for pending recs in IkStepDefinition . java to manage pending recs in IkStepDefinition . java to improve clarity and
updated ` equals ` and ` hashCode ` methods in ` AbstractType ` , ` BigintType ` , ` BooleanType ` , and `
updated the SyncLevel enum and added a method to retrieve sync level from initArgs to enhance functionality by allowing dynamic configuration of sync level
fix test which randomly fail on slow ci server
added a condition to check if a slice is not recovered to ensure that only valid slices are processed during recovery
pdfbox - 2852 , pdfbox - 2852 , pdfbox - 2852 : fix typo find by codespell on fossies .
added SDK path handling in AppleBundle and SwiftStdlibStep classes to ensure proper environment configuration for process execution
refactor TransientBlobCleanupTask and TransientBlobCache to use a BiConsumer for cleanup operations to improve code clarity and maintainability
fixed typo in networkmanagerimpl # createstaticnatrule - > createstaticnat
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion for row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling of row types during query processing
refactor BetterBlockPos class to improve code readability and maintainability
updated the proxy retrieval to use the class loader to ensure compatibility with the current class loading context
refactor version handling to use a dedicated method for nightly build status to improve code readability and maintainability by centralizing version checks
added support for OracleDatabase in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing slashes in SQL statements
add a system property to disable null value analysis
fix test which randomly fail on slow ci server
updated BLOB _ SIZE , PLAY _ MONEGIN , SLIDER _ MARGIN , and modified calculations in DrawAudio .
added a call to addMultifactorAuthenticationProviderBypass ( duoSecurityPrincipalMultifactorAuthenticationProviderBypass ( ) ) in DuoSecurityMult
refactor findPositionForNewNodeBestAreaFit and findPositionForNewNodeContactPoint methods to improve readability and maintainability of the code
[ jbrules - 3514 ] fix javadoc warning in k module
added help page functionality to PMS and updated HelpTab to use it to improve user experience by displaying a specific help page
added two new files , GeocodeProviderFactory . java and Constants . java , to provide a centralized implementation of GeocodeProviderFactory and ConstantsBase
updated import statements for CharArraySet in LuceneAnalyzerUtil . java and LuceneTokenizer . java to ensure consistency with the updated package structure
refactor exception handling in OptionTest and ResourceManagerImplTest to use try - catch blocks to improve test clarity and ensure proper exception handling
[ py4j ] do n ' t delete object in memorycommand if objectid be not the default jvm _ object _ id .
updated conditions for excluding points in SegmentsInfoRequestHandler . java and refactored collection creation in CollectionsAPISolrJTest . java to
updated the calculation of numPredictiveAppCols to account for phone devices to ensure accurate prediction of app columns based on device type
added a new method ` hasScalarSubqueryInput ` in ` JoinUtils ` and updated related logic in ` DrillJoinRelBase `
add an abstract blockcontainer for block that can be remove from the world .
updated gravity and height settings in DeviceProfile . java to ensure correct layout parameters for search targets
replaced ` run ( ) ` with ` start ( ) ` in ` YahooSession . java ` to ensure the session starts correctly to improve user experience
removed the standAloneClient variable and updated error handling in HiveMetaStoreClient . java to improve code clarity and ensure proper resource management
updated getDisplayScript method to accept a DISPLAY category parameter in Locale . java and added a test for bug 7079486 in LocaleCategory . java
replaced references to ` BASE _ URL _ PROP ` and ` CORE _ NAME _ PROP ` with ` ZkStateReader . CORE _ NAME _ PROP
replaced ThreadLocalRandom with Random in StoreDirectTest . java to improve performance by using a more efficient random number generation approach
added a check for the launcher state before processing backup keys to ensure that backup operations are only executed when the launcher is ready to improve performance by avoiding
updated IllegalArgumentException messages to include " : " prefix for improved clarity to enhance readability of IllegalArgumentException messages for better debugging
added unit test base on user forum issue
updated variable names from ` mBodySpace ` to ` mBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability and maintainability
fix flaky test
added multiple logger entries to Grasscutter . java to improve logging detail for debugging purposes
changed the visibility of ` highlightCnstScrRngQuery ` and related methods from instance variables to static in ` SpanScorer . java ` to
updated condition to check workspace state to ensure proper handling of workspace states in overview mode
refactor multiple assertion classes to improve code organization and maintainability
added a check for cacheable before notifying new templates in SnippetTemplate . java to ensure templates are only notified when caching is enabled
added a new constant SCOPE _ SOLR _ CORE and updated several classes to use this constant to improve code readability and maintainability by
added a primary key constraint to the measurement table in DatabaseMetaDataTest . java to ensure that the measurement table has a unique identifier for primary keys
rename ` -- permissions - config - path ` to ` -- permissions - config - file ` in pantheon
refactor HttpSession handling logic in HttpSessionContextIntegrationFilter . java to improve session management and logging clarity to enhance code readability
c2 : add test for if with dead region
rename englishudlas to englishususldas for good clarity
replaced direct access to ` testConcurrentAccess ( ) ` with a try - finally block to ensure thread safety during concurrent access testing
added a static UI preference and modified toast bar visibility logic in MainFragment to allow dynamic UI updates based on user preferences
refactor the drop method in WindowsSecurity to ensure proper resource cleanup to prevent memory leaks
replaced ` setParameter ` with ` setParameterIfAbsent ` for setting parameters in ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler
updated dialog messages to include localized error messages to improve user experience by providing context - specific feedback
tika - 751 -- add support for tika - ooxml , tika - ooxml , tika - ooxml , tika -
added logging for loading glue paths and updated method signatures in FixJava and FeaturePathFeatureSupplier to improve debugging capabilities and enhance code cl
camel - 16400 : fix camel - eip - documentation - enricher to work on window
add - dcassandra . skip _ schema _ check = true to skip schema check
added debug logging for found notification and playback devices in DeviceConfiguration . java to improve traceability and debugging when no capture device is specified
added support for maximum frame payload size in WebSocket configuration to enhance flexibility in configuring WebSocket protocol settings
cachevalidationlistener now implement iinvokedmethodlistener so it can be run in a suite
updated content length handling in MoreIndexingFilter to check if the content length is not empty before adding it to the document to ensure that the content length is
refactored solvingcompleted ( ) so that it be thread safe
added error handling for PathAlreadyExistException during timeseries creation to improve robustness by ignoring non - existent time series files
added a new method ` check ` to the Authz class to provide a way to check if a boolean value is returned by the Authz class
changed method visibility from public to protected in multiple classes to allow subclass access to these methods for better extensibility
server : fix listpublicipaddresses api to list publicipaddresses only if projectid be not null
removed the check for ` _ compliance . ordinal ( ) ` in ` HttpParser . java ` and updated the test method name in ` Http
refactor thread initialization to use a dedicated method for clarity to improve code readability and maintainability by reducing duplication
added methods to create and retrieve an external storage directory in ShadowEnvironment . java and created corresponding tests in EnvironmentTest . java to enhance functionality
jbrules - 2214 : add test case for mvel type coercion
reformatted code for consistency and clarity in LoggingConfig . java to improve code readability and maintainability
updated logging statement to include exception message to improve error reporting for better debugging
do n ' t try to extract tel : to number if it ' s already tel :
refactor visibility logic for shared files in FileListListAdapter to improve code readability and maintainability
deprecated the configuration option ` hive . optimize . sort . dynamic . partition . threshold ` in favor of ` hive . optimize . sort . dynamic . partition
refactored confOverlay handling in ExecuteStatementOperation and Operation classes to improve clarity and maintainability of session management
updated method calls and imports in BTCMarketsStreamingAdapters , BTCMarketsStreamingService , and BTCMarketsWebSocketSubscriptionMessage classes to improve
[ geot - 6892 ] fix test failure in orcdatastoretest
removed the onErrorInStep method that always returns null in StepListenerSupport . java to streamline the code by eliminating unnecessary method implementations
refactor Wallet class to improve code readability and maintainability
camel - 16400 : camel - netty - http should use source code generate configurer to avoid reflection configuration .
replace system . out . println with log . info in testnonblockingapi
added a boundary check for the row index in DbConnectionDialog . java to prevent index out of bounds errors
pmd : add rule to detect method with same name a enclosing class
added a new class ` ExtendedPlatformComponent ` and modified ` ManagementFactory ` to utilize it for platform management to enhance platform management capabilities
replace single quotes with double quotes in SQL query handling to ensure proper formatting of SQL strings
updated paths in BleutradeDtoTest , BleutradeDtoTestSupport , and BleutradeExtendedDtoTest classes to
refactor TextEscapeUtils class to improve code readability and maintainability
added a new constant ` FILTER _ PARAM ` and modified the ` FilteredQuery ` instantiation in ` AbstractSpatialFieldType . java ` to use it to
added progress indicators for auto - email sending in GpsLoggingService to improve user feedback during email updates
replaced ArrayList with HashSet for inlinks and updated iterator methods to improve performance and readability of the code
[ tradfri ] fix nullpointerexception when stop scan
modified the ` testFilterForPartition ` method to accept a boolean parameter for controlling filtering at the server side to enhance flexibility in testing partition
updated TicketModel and TicketPage to include Abandoned status alongside existing statuses in TicketModel and TicketPage to enhance
removed initialization of columnAliasPrefix in multiple platform classes to simplify the code by eliminating unnecessary assignments
replaced ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowInputFormat ` to enhance
log a warning if run on a 32 - bit jvm on a 64 - bit system
do n ' t copy page parent in pdfcopy .
added a daemon mode option and implemented a mechanism to start a web pendant UI in the terminal client to enhance user experience by allowing the application to
added a new file FlushIndexTask . java that implements the FlushIndexTask class to enable flushing the next buffer in the index based on performance runs
adjust sstablewriter . getflushwriter to account for disk space
added support for SEASONS output in conditional checks in MediaLibraryFolder . java to enhance functionality to handle SEASONS output scenarios
added a new file LocalSocketAddress . java to test IPv6 loopback addresses in the network interface
updated grid size coordinates in GridSizeMigrationTask . java to correct grid size coordinates for migration to ensure proper functionality
replaced instances of ` ci . getName ( ) ` with ` ci . name ` and updated related method calls in ` SerializerPojo . java ` to
added read - only support to the Context class to ensure transactions are only committed when the context is read - only
refactor LookAndFeelCommand class to improve code readability and maintainability
fix off - by - one error in blockboxing . checklastrun ( )
added imports for EOFException , EofException , and EOFException , and modified assertions in GracefulStopTest . java to enhance test coverage
removed locking mechanism for HTTP response listeners in NetJavaImpl . java to improve performance by reducing contention during concurrent access
refactor NetworkParameters class to improve code readability and maintainability
removed redundant code related to account asset optimization in DynamicPropertiesStore . java to streamline the code by eliminating redundancy
added a new constant J9 _ GC _ POLICY _ NOGC with a value of 0 to define the garbage collection policy for the VM
added validation for contract addresses in TransactionCapsule . java to ensure proper handling of invalid contract addresses
[ java ] remove strictexception rule which be no longer need
improve error message when no localization available
added a new file ProcessorInfo . java to manage CPU availability to provide a mechanism for identifying available CPU cores in the application
added -- html and -- stylesheet option to generate html output
deprecate logbackxmllocation in favor of default _ logback _ location
updated ` HostLevelParamsHolder ` and ` ServiceComponentRecoveryChangedEvent ` classes to improve handling of service component recovery events to enhance code cl
updated SleuthTagPropagationAutoConfiguration to conditionally create handler based on user configuration to enhance flexibility in handling tag propagation settings
refactor dependency type assignment in RustCompileUtils to use a switch statement for clarity to improve readability and maintainability of the code
updated oauth2LoginLinks method to accept MultiValueMap of query parameters to enhance flexibility in handling OAuth2 login links
hbase - 2593 hfilescanner . seekbefore ( ) should seek to the first kv in the file , not the file
jbrules - 2214 : deprecate ` ` generation timing ' ' in favor of ` ` @ timing ( ) ' '
add unit test for np . layernorm ( ) and np . nn . layernorm ( )
refactor showShareFile method across multiple activities to use a unified method to improve code maintainability and reduce duplication
added a new test class LiquibaseUpdateMojoExecutionTest for testing Liquibase update functionality to ensure correct execution of Liquibase
convert the " proxyType " string to uppercase to ensure case - insensitive handling of proxy types
add forge . getdungeonlokTRIES ( ) and minecraftforge . getdungeonlokTRIES ( ) to get dungeonlok
refactor JdbcDatabaseSnapshot to improve cache handling for table and column filtering to enhance performance by reducing the number of fetched columns and
added a container for CSS border styles in CSSBorderTest . java to enhance the visual appearance of the dash background in the UI component
added a new ` RetryInterceptorAutoConfiguration ` class and modified ` LoadBalancer ` and ` RetryLoadBalancerInterceptor ` to use it to enhance
replaced ` FILL _ PARENT ` with ` MATCH _ PARENT ` in ` CellLayout . java ` to align layout parameters with new
replaced ` System . nanoTime ( ) ` with ` System . currentTimeMillis ( ) ` for constructing the parent task name in ` parentTaskName `
added error handling for invalid Add Service requests to improve robustness by throwing a detailed exception for invalid input
do n ' t check for versioned file in index if it ' s not versioned
[ giac ] make sure we do n ' t round negative element
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new development
refactor JLayer class to improve code readability and maintainability
fix eviction test which randomly fail on slow ci server
refactor Md5PasswordEncoder to use a single variable for saltedPass instead of a separate method to improve code readability and maintainability
replaced direct calls to ` viewTreeObserver ` with direct method calls to improve code readability and maintainability by reducing redundancy
refactor Response class to improve code readability and maintainability
use long . max _ value instead of long . min _ value to avoid overflow
fix size of callparticipant in security panel .
added a check for non - null and non - empty replies before retrieving reply handles in multiple classes to ensure that replies are only retrieved when they are not
added toString ( ) and equals ( ) methods to HitbtcBalance class and improved equals ( ) and hashCode ( ) methods to enhance
fix ( sql ) : fix order by with in statement in where clause
updated the return statement in RetriesExhaustedWithDetailsException to use addrs . toString ( ) instead of s to improve clarity of the returned value
replace openOpenFile ( ) with openOpenFile ( ) and update closeOpenFile ( ) to use OpenCookie . open ( ) for opening the file to improve
updated imports from Apache HttpClient to Apache HttpClient 5 in JsonToGrpcApplicationTests . java to ensure compatibility with the latest HTTP client features and improve
pipe power wood : do n ' t request energy if they be less than or equal to requested energy
added a check to delete the temporary output file if it exists to ensure that the output file is clean up when needed
updated the ` BitstampWebSocketTransaction ` constructor to include an ` id ` field in the constructor of ` BitstampStreamingMarketDataServiceTest `
added checks to return null if the time exceeds the defined maximum age in the ReplayProcessor and ReplaySubject classes to ensure that the processor
updated expected citation string in CitationStyleGeneratorTest . java to ensure consistency in citation formatting
added SQL _ INSERT _ COLUMNS _ BY _ FILENAME and SQL _ INSERT _ COLUMNS _ FROM in MediaTableFiles . java
ggb - 188 add feature flag show _ definition _ for _ equation in exam
fix npe in sip comm field when no component be configure .
hbase - 25819 add a caching option to metareader for scan root scan
updated the initialization script from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql " to
refactor Math and StrictMath classes to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to enable the transient taskbar feature in the application
[ hotfix ] [ runtime ] fix typo in javadoc
added a conditional to set the density based on scale and scale factors to ensure proper scaling behavior for different scaling scenarios
rename ` optional ` to ` vararg ` for clarity to improve code readability and maintainability by using more descriptive terminology
added exception handling to the info logging statement in RegionStateStore . java to improve error reporting for better debugging
[ hotfix ] [ test ] fix flaky testclusterupgradeutils
updated warning log in AsyncHttpConnection and renamed AsyncContextTest class to LocalAsyncContextTest to improve clarity of warning messages and enhance
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to control whether to show the arrow in the UI
added a check for ` isMVStore ( ) ` in ` Database . java ` and removed the ` testSetMode ( ) ` method from ` Test
truffle - llvm : disable bigEndian test on linux / amd64
refactor input handling in Scalars . java to improve type safety to enhance code clarity and prevent potential ClassCastException
updated error handling for single and multiple primary key specifications in CreateTableStatement . java to improve clarity on primary key specifications to enhance error reporting for
added conditional checks for LMP ( LMP ) before setting drawable resources in multiple classes to ensure proper drawable resources are used based on the application ' s
improve error message when there be no isolate to query ( # 1622 )
refactor HeadersConfigurer to use dedicated header writer methods to improve code readability and maintainability by reducing duplication
refactor ObjectEnumerableAssert class to improve code readability and maintainability
danielwagnerhall : move distribute cdp test to test package
updated the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to specify the type parameter explicitly to enhance clarity by explicitly defining the
added path resolver and prebuilt libraries handling in Python binary classes to ensure proper resource management for prebuilt libraries in the Python interpreter
added client authentication handling and updated related methods in NetServerOptions and HttpServerOptions classes to improve client authentication management and enhance code clarity
updated directory paths in Hive and Metastore configurations to use the system ' s user name instead of the user ' s name to ensure compatibility with different
refactor task view retrieval logic to use primary and secondary task views to improve code readability and maintainability by simplifying logic
add timeout to amqptransformertest to avoid spurious failure
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unused functionality
rename controller to flowcontroller to avoid confusion
fix : do not set exchangesumnum when consume all child pipeline
added use of io . github . classgraph . ClassLoaderHandler in module - info . java to enable loading of class hierarchies from the specified G
solveandpersistenceframe . solve ( ) now return the best solution , not null
added JsonIgnore annotation to ApplicationSettings . java to prevent serialization of sensitive data during JSON processing
changed the condition from checking if throwable is null to checking if throwable is not null to ensure that the code correctly handles cases where throwable is not null
fix nullpointerexception in querytimemanager
fix npe in auto workbench when there be no crafting
fix gl200 text protocol decoder ( fix # 488 )
renamed timeColumnName to incomingTimeColumnName for clarity to improve code readability and maintainability
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20Token004 . java
added support for initialization of ` Initializable ` in the ` ContainerBuilder ` and introduced a new ` Initializable ` interface to enhance flexibility in
add longtasktimer sample to timer observability handler ( fixes # 195 )
changed the data type of ` SYNC _ DELTA _ RATE ` from ` float ` to ` double ` and updated calculations for ` fetchTime ` and
deprecate thymeleaf # computefragment with unwrapped syntax
changed the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when accessing shared resources
http : / / issues . apache . org / jira / browse / amq - 2893 - fix for amq - 289
added new color constants and updated color extraction logic in ColorExtractionAlgorithm . java to improve color handling and support for dark text in wallpaper
added access check for data folder members in SketchBuilder . java to ensure only accessible data folders are included in srcFolderPathList
updated the ` appendContent ` method to accept a boolean parameter for controlling title inclusion to enhance flexibility in determining if notes should include
removed instantiation of SessionRegistryImpl to simplify the code by eliminating unnecessary object creation
added logging for reconnection attempts in NettyStreamingService to improve error handling and traceability of reconnection attempts
updated proxyFactory initialization to use JavassistProxyFactory instead of OGNL and replaced instances of Factory with Proxy in multiple test files to enhance
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve performance by using a more efficient data structure
refactor SocketExceptions and ExceptionText to use String . join for constructing error messages to improve readability and maintainability to enhance code clarity and
added a check to ensure the view path is within the repository directory before proceeding to prevent errors when the view path is under the repository to enhance
do n ' t open tab header if there be no bib file in the drag - and - drop pane
added support for compressed class pointers in multiple test files to enhance performance by optimizing class loading operations
added error logging for non - active or replay states in PeerSync . java to ensure proper handling of updates in the update log
deleted the ConnectionHook . java file to remove unused code related to connection handling
removed redundant initialization of waitForReplicasInSync in multiple test files to streamline code by eliminating unnecessary checks for replica synchronization
( chore ) camel - swagger - java : fix typo in parameterassert
[ apex ] fix namespace guarded access for apex
fix javadoc warning in jdk8
refactor AggregateEngine to use IoTDB ' s ThreadPool instead of Executors to improve thread management and reduce resource usage
updated WebSocketAsyncConnection constructor to accept ByteBufferPool as a parameter to enhance flexibility in buffer management
added scrollToPositionWithOffset calls in UploadActivity . java to improve scrolling behavior based on index bounds
fix ( sql ) : do n ' t add column metadata by other column alias ( # 2451 )
refactor animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation for improved readability to enhance code maintainability and ensure
added a conditional to disable the default user agent in the HttpClient based on the HTTP client configuration to ensure that the default user agent is not used in the
added conditional handling for pubsubhubbub in FeedRefreshUpdater and ApplicationSettings to enable conditional subscription handling based on application settings
changed the access modifier of the finalize method from public to protected to allow subclass access to the finalize method for better extensibility
updated the method name from isAnonymousOrLocalClass to isAnonymousOrLocalOrSyntheticClass and added a check for ACC _ SYNTHETIC access
[ ds - 3952 ] add a dummy webapp to make sure we do n ' t break the rest web application
added logic to retrieve the table alias containing a column in the Calcite planner to ensure that a column is present in the specified tables to improve error
updated triggerKey identity to include " Trigger " prefix to enhance clarity of trigger key identification
updated log level from info to warn for transaction failures and improved error logging format to enhance log clarity and provide more informative
remove unused import from basicmaptest . java ( # 18755 )
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` and ` TestHiveClientConfig
added a new enum ` TlsClientCertPolicy ` and refactored client certificate handling in ` GitBlitServer ` to improve clarity and
added a debug log statement for " New CHALLENGE has been saved " in KrakenFuturesStreamingService . java to improve traceability
updated ` ProxyWebSocketHandler ` to accept ` HttpHeaders ` and added support for additional WebSocket protocol headers to enhance flexibility in handling WebSocket
added a debug log statement for HiveQueryResultsFetchReq to improve visibility into fetch request processing
updated dimension string formatting in HolidayEventFormatter . java to improve clarity and consistency in output formatting
updated ` FinalizePrivateFieldsTest . java ` and ` FinalizePrivateFields ` to enhance inner class handling and introduced ` InnerStaticClass `
updated UnexpectedJobExecutionException class to improve error handling consistency
removed unused module - info . java file to streamline the codebase by eliminating unnecessary dependencies
updated maxFreq and maxCost handling in DrillSidewaysQuery . java and DrillSidewaysScorer . java to improve code clarity and
added class registration for GeoDegeneratePath to the class registry to ensure proper handling of degenerate paths in the object system
removed the ` preFill ` parameter from the constructors of ` ParticleEffectPool ` , ` FlushablePool ` , and ` RefPool `
updated taskbar state handling in TaskbarLauncherStateController and taskbar stashing logic in TaskbarStashController to ensure proper state management when not
added null check before comparing default styles in CascadeDeleteVisitor to avoid potential NullPointerException when style is null
updated GuiUtil and StatusTab classes to improve component sizing and added methods to set preferred width and maximum width to enhance UI layout flexibility and
refactor icon assignment logic in FileTreeViewHolder . java for improved clarity and structure to streamline icon retrieval to enhance code readability and
updated assertions in ParallelUniverseTest to check for " v18 " and " large - land - v18 " instead of " isEqualTo " and "
fix concurrentmodificationexception in xmlreporter
add test for native probability function
added a call to deregister the ShutdownThread to ensure proper cleanup of resources in the client container
hhh - 15486 : drop temporary table after use for sybase ase15
danielwagnerhall : fix htmlunit test to work with htmlunit 3.0 . 1
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor LinksIndexingFilter class to improve code readability and maintainability
updated string concatenation in VirtualAllocCommitUncommitRecommit . java to include " reserved 1024KB for Test " to enhance clarity of the output
update ad playback state when there be no ad group
added a suppression warning for the ` Objects . equal ` method in ` MultimapSubject . java ` to follow the ` Multimap . equals `
updated fetchPropertyValue calls to use unit _ hz instead of deg _ text for wave frequency to ensure accurate representation of wave frequency in the application
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
replaced the use of ` putAll ` with a constructor that initializes ` all ` with ` includedLabelSets ` to ensure that the ` all ` map
fix npe in vertexlighterflat when format be null
added tracing tags for messages sent and received in multiple interceptor classes to enhance visibility of messages for better debugging and monitoring
replaced ` ZoneId . of ( timeZoneStr ) ` with ` TimeZone . toZoneId ( timeZoneStr ) ` in ` ScheduledTrigger .
added AsyncBucket and InMemoryExtension classes and modified Bucket and Bucket4j classes to use InMemoryExtension instead of LocalBucketBuilder to enable support for
8168531 : test / tools / javac / jfr / testdescription . java fail with ` ` java . lang . runtimeexception :
removed unnecessary whitespace in AbstractConnector . java to improve code readability and maintainability
refactor OngoingStubbing class to improve code readability and maintainability
added an optional web server reuse mechanism to the Daemon class to enhance flexibility in managing web server instances based on configuration
rename ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` to improve clarity and consistency in variable naming
log warn if thread allowlist be not clear
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to ensure the processor uses the correct item
[ drools - 759 ] exclude hitpolicy . collect from findgaps / findoverlaps
added a new test method ` testSlidingWindowsCombine ` to the ` CombineTest ` class to verify the behavior of sliding windows in the
added a conditional check for ` allAppsDirty ` before binding ` bindAllApps ( ) ` to ensure ` bindAllApps ( ) ` is only
removed redundant check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to streamline the test by eliminating unnecessary assertions
reformatted the ` Solution ` class to improve readability to enhance code clarity and maintainability
refactor AquaMenuBarUI to improve property handling and security checks to enhance clarity and maintainability of the code related to Aqua
fix ( item ) : do n ' t set fall distance when fall
refactor query handling in SimpleJpaRepository to improve clarity and maintainability of the code
added additional fields for genesis block properties in BlockUtil . java to enhance block configuration options to improve clarity and ensure accurate transaction input handling
do n ' t generate safepoints for loop safepoints by default
added null check for children before processing in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to avoid potential NullPointerExceptions when listing children
make artifactresolver public to allow reuse
added thread termination and improved resource management in multiple classes to ensure proper resource cleanup and prevent potential memory leaks
added validation to ensure maxBufferedDocs is at least 1 to prevent IllegalArgumentException to prevent runtime errors
added handling for logging - in in LoginActivity to manage the state of login operations in the application
added null checks in Pump . java and implemented a test for UUID reversal in PumpTest . java to ensure proper handling of null values and
updated access modifiers and visibility of several methods in HttpShardHandlerFactory and LBHttpSolrServer classes to enhance encapsulation and improve code clarity
updated ` order ` from ` LOWEST _ PRECEDENCE ` to ` HIGHEST _ PRECEDENCE ` in ` BaseAuthentication
added Jetty server and HandlerList handlers to TestJNDI to facilitate HTTP request handling in TestJNDI
updated formatting of code for consistency and clarity in SortedDynPartitionOptimizer . java to enhance code readability and maintainability
change return value from NioEventLoop to true to simplify event loop handling logic
updated the calculation of ` newNumNulls ` to use ` newNumNulls ` instead of ` oldNumNulls ` to ensure that ` newNumNulls
( chore ) camel - jbang - export - kamelet - add support for kamelets
replaced OkHttpOAuthConsumer initialization with an AtomicBoolean for task completion and added authorization checks to ensure proper handling of OpenStreetMap uploads and
remove debug print statements from various test files to improve code readability and maintainability
added client authentication configuration to IoTDBRestServiceConfig and RestService classes to enhance security by allowing configurable client authentication options
refactor mock injection logic in ` PropertyAndSetterInjection ` and add a new test class ` ChildWithSameParentFieldInjectionTest ` to
updated BloomFilter64bit and BloomUriUniqFilter classes to implement InitializingBean and modified expected size and hash count handling to
updated ` getCursorAdapter ( false ) ` to ` getCursorAdapter ( true ) ` in ` HomeFragment . java ` and added a preference for
updated scroller ' s height ratio from 1f to . 75 f in ProfilePager . java to improve header height scaling for better visual consistency
updated import statements to use ` RuntimeEvent ` instead of ` RuntimeEvent ` and introduced a new ` RecompilationEvent ` class to enhance
added HOST _ SYS _ PREPPED configuration and methods to manage system preparation status to enable tracking of system preparation status in the application
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and created a
added a loop to delete characters at the first character of the location to ensure proper handling of the first character of the location
added entity and score properties to the StaticPipeline class to enhance functionality by allowing configuration of pipeline properties
updated filename handling in Frame . java and added path configuration in WhoopsModule . java to improve filename processing accuracy and enable conditional logging based on
[ geos - 10641 ] fix npe in catalog repository when a non - existent datastore be find .
refactor assertion methods in Assert . java to improve code readability and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added tests for multi - line text in ` InlineCssTextAreaApp
http : / / issues . apache . org / jira / browse / camel - 2851 : fix the unit test error of
replaced instances of ` writeMeasurementScheams ` with ` write ` in ` TsFileWriteAlignedWithTSRecord . java ` and `
updated memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve accuracy of memory allocation tests
updated jar paths in LoggingOptionsTests . java to ensure compatibility with the latest logging framework changes
fix flaky huebridgehandlerosgitest
updated package structure and imports in multiple Java files to organize code under the ` com . itsaky . androidide ` package to improve clarity
[ drools - 1276 ] ignore test until drools - 1276 be fix
added a constructor to PullRequestMergedEventsStream that accepts a file path , topicName , and personalAccessToken to streamline the instantiation of PullRequestMerged
refactor AbstractExpressionPart class to improve code readability and maintainability
[ hotfix ] [ doc ] fix typo in taskslot
replaced instances of FIRE _ EXCEPTION _ ON _ FAILURE with CLOSE in NettyWebSocket and NettyWebSocketTest to improve clarity and
added error handling for lock release in MoveTask . java to improve robustness by logging exceptions when unlocking locks to ensure that locks are properly managed and
refactor JRubyBackend to use ResourceBundle for handling resources to improve code maintainability and reduce dependency on external resources
use byteutil . empty _ byte _ array instead of empty _ byte _ array to avoid allocation .
refactor class loading logic in ClassGraphClassLoader to improve readability and maintainability of the code
[ hotfix ] [ test ] fix jobmanagerstartuptest failure
chore : [ datastream ] update proto file to match new google . cloud . datastream api
added a ` Bundle ` to the ` builder ` for extras in ` FileDisplayActivity . java ` to enhance the functionality of the builder by allowing
changed the control flow from ` break ` to ` continue ` in ` ParticleEmitter . java ` to improve control flow logic for particle processing
updated cluster expectations in AmbariManagementControllerImplTest . java to reflect the correct number of clusters to ensure tests accurately reflect the
removed nullable constraint from the " SERVICE " column in TransientSessionTicketImpl . java and added NoResultException handling in JpaTicketRegistry . java
refactor Bug4823811 class to improve code readability and maintainability
replaced direct addition of patternToDelete with a function that uses the project filesystem ' s path relativization to improve flexibility in handling file paths
updated requestFullState method to accept a boolean parameter indicating if the request was an initial request to improve control over the state request process
updated ShibbolethCompatiblePersistentIdGenerator to include an attribute field and modified related methods to enhance flexibility in attribute handling and improve
fix checkstyle issue
refactor hide keyboard logging to use a bundle for logging messages to improve code readability and maintainability by reducing repetitive logging calls
removed redundant code in FileNodeProcessor and MManagerBasicTest to improve code readability and maintainability
refactor NavigableMap and NavigableSet classes to improve code organization to enhance maintainability and readability of the codebase
move testslurpfile ( ) to testutils
updated method visibility and added @ FunctionalInterface annotation in multiple Java files to enhance encapsulation and improve code clarity
refactor span retrieval logic to use a new method ` spanWithName ` to improve code readability and maintainability by reducing repetitive
added support for date types in Hive schema conversion to enable proper handling of date types in Hive schema conversion
updated the splitting logic in StyleConverter to use Patterns . COMMA _ SEPARATOR instead of hardcoded whitespace to improve code readability and maintainability
apps - 2892 make sure input dialog do n ' t crash
refactor column count comparison logic in SemanticAnalyzer . java to improve clarity and correctness of column count handling
refactor score update logic in WANDScorer . java for improved clarity and correctness to enhance code readability and maintainability to ensure
refactor Correspondence class to improve code readability and maintainability
updated import statements in PaintSetEnabledDeadlock . java to streamline dependencies and improve code clarity
initialized ` curPixVal ` with a default value of ` 0xFF000000 ` and added a new test class ` WhiteTextColorTest ` to
change biome dictionary to use a collection instead of a set
corrected the spelling of " withinTolerance " to " exceedsTolerance " in BoundedLocalCache . java to improve code readability to enhance
added imports for LOCAL and PLATFORM _ POSTSUBMIT flavors and updated the @ Stability annotation in TaplTestsLauncher3 . java to enhance
updated package - info . java files for mmm and ppp packages
added a check to ensure logFileSuffix is non - empty before processing to avoid potential NullPointerExceptions when logFileSuffix is empty
refactor PythonBuckConfig class to improve code readability and maintainability
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest . java to ensure correct functionality of system shared library management
[ meiligao ] fix meiligao command not support ( # 1699 )
fix potential npe in powerdiode . getBattery ( )
added a TrimCache async task to trim the cache to improve user experience by providing feedback on cache size changes
fix checkstyle issue in util / render task
updated BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , AccessControlUtils , and BasicAuthBatchIntegrationTest to throw NotAuthorizedException
added a new abstract method ` schedulePeriodically ` to the ` Scheduler ` class and updated method signatures to use it to improve code clarity
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( ) ` in ` FileDisplayActivity . java ` to ensure that the
added a conditional check for multiple input streams and improved logging for file matching in StreamUtil . java to enhance the robustness of file selection logic
refactor ` create _ table _ with _ environment _ context ` and ` create _ table ` methods to use ` CreateTableRequest ` instead
added synchronization to the start and abort methods of FixedRateFragInsStateTracker to ensure thread safety during task execution
refactor indentation handling across multiple parser classes to improve code readability and maintainability
add change wifi status event and fix autoplay setting
simplified the control frame validation logic in FrameGenerator . java to improve code readability and maintainability
added visibility for the collapse handle in WidgetsBottomSheet to improve user interface by ensuring the collapse handle is visible
added two new files , Issue475 . java and XSS . java , for handling HTML and JavaScript content in the jooby server to en
added a check to return early if the number of units to scroll is zero to optimize performance by avoiding unnecessary processing
updated condition to check for multiple contract lists to ensure correct handling of cases where only one contract list is present
added ` add ` methods to ` JsonArray ` and ` JsonObject ` classes and corresponding tests in ` JsonArrayTest ` and ` JsonObjectTest ` to
added hashCode ( ) method to IPPPrintService and created TestRaceCond class to validate equality checks for PrintService instances to ensure consistent hash code comparison
hhh - 16936 : use getversion ( ) instead of getiversion ( ) to avoid npe
do n ' t enable stripe if platform fee be zero
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
add clear data first subsample for adaptive reconfiguration
removed the ` public ` access modifier from multiple class declarations in the ` AsynchronousAntn ` , ` BulkheadAntn ` , `
added Retrofit annotation to Part and PartMap classes to enable Retrofit functionality in the codebase
refactor JsonBuildHelper and ParamsBuildHelper to improve parameter handling and JSON generation to enhance code clarity and maintainability while ensuring proper
added TYPE _ TASKBAR _ OVERLAY _ PROXY and TYPE _ TASKBAR _ OVERLAY _ PROXY in AbstractFloatingView . java to enable
fix : update gapic - generator - java with mock service generation fix
updated alpha calculation in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation handling and manage recents state more effectively
removed the second parameter from the createRenderScript method call to simplify the method signature for better readability
update javadoc to reflect the new behaviour
added a method to check if the system bundle is a system bundle and refactored related code to use it to improve code readability and
updated import statements and formatted code for better readability in IntegrationTestSparkBulkLoad . java to enhance code clarity and maintainability
updated Bloom filter calculations to use a constant for false positive rate to improve code readability and maintainability by avoiding magic numbers
renamed the variable ` rocketConfiguration ` to ` defaultConfiguration ` and introduced a selection mechanism for motor configurations to improve clarity and functionality
server : fix npe when host be not find
added a null check for the value before adding it to the entry set to avoid potential NullPointerExceptions
cloudstack - 7059 : improve error message when host discovery fails
updated the string concatenation for NO _ NAME and NO _ VALUE in ParamAction . java to enhance clarity by adding " " and " " for
updated constructor parameters in BaseStubbing , ConsecutiveStubbing , OngoingStubbing , and OngoingStubbingImpl to use Object instead of Invocation
added a method to strip parameter from method names to improve parameter handling in method calls
updated version name and code for the GreatVoyage application to reflect the latest version releases
outputfilter : use set instead of list
[ geot - 6892 ] use labelcacheitem . label _ cache _ item instead of hardcoded value
mow - 1010 make sure popup will be resize when there be overlap feature
updated error messages in ValidationSuite . java for consistency and clarity to improve code readability and maintainability by standardizing terminology
replaced an anonymous inner class ` IStartingWindowListener ` with a direct reference to ` mStartingWindowListener ` to improve code readability and maintainability
added a doc comment inherited from MBeanServerConnection to clarify the purpose of the doc comment inherited from MBeanServerConnection
updated exception messages in CheckPackageAccess . java to clarify the expected exceptions related to package access control
increased termination timeout from 30 seconds to 90 seconds in ThreadSafetyTest . java to allow more time for tests to complete successfully
changed the type of ` loggingEnabled ` from ` boolean ` to ` Boolean ` and added a conditional check for ` loggingEnabled ` before setting it to
added @ JsonIgnore ( true ) annotations to Schema . java to prevent serialization of sensitive data during JSON processing
increased test timeout from 5000 ms to 10000 ms in TestNonTxIndexBuilder . java to allow more time for tests to complete successfully
updated the ` train ` method in ` SimpleNaiveBayesClassifier ` to use ` null ` instead of ` Query ` and modified the
added CheckHelperControllerModule and CheckHelperAuditModule to the CheckDatabaseHelper class to enhance functionality by integrating audit logging capabilities
refactor Prototype class to improve code readability and maintainability
added a check for null tableIsTransactional and initialized it if it ' s not set to ensure proper handling of transactional tables in the semantic analysis
[ java ] use onblock instead of onwrite for write record fragment .
fix cea decoder for negative time
kairosdisten : fix kairosdisten unit test to work with alias
updated currency pairs from BTC / LTC to USD / USD in VaultOfSatoshiBaseService . java to align with
hhh - 14501 fix resource leak in test
updated import statements for KafkaSender from kafka11 to kafka .
added two new test files , GwtBinaryIntegrationTest . java and A . java , for GWT binary integration testing to ensure proper functionality
updated event handling logic in BrowserContentPane . java and refactored ResultSetRenderer initialization in SQLConsole . java to improve error handling and enhance robust
reformatted code in EnhancedRandomImpl . java and updated test cases in EnhancedRandomImplTest . java to improve code readability and
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to manage XML security properties to enhance configuration management for XML
added a new interface ` InterfaceWithDefaultMethod0 ` and its subclasses , ` Decoy ` , and ` Instance ` , with implementations of default methods
updated regex patterns in SqliteFieldPredicateView to use GLOB instead of LIKE to improve query performance by using a more efficient glob pattern matching
[ hotfix ] [ runtime ] make dmn assembler service protect
fixed - redissonscript . scriptload ( ) method do n ' t call redisson . getentryset ( ) .
fix checkstyle issue in preparation for release
updated logging statements to use ` verbose ` instead of ` debug ` in multiple files to improve log clarity and reduce log verbosity
do n ' t release fml proxy when it ' s close
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS and updated thread pool initialization to allow dynamic configuration of server handlers
replaced the handling of shortcuts in the LauncherModel to check for non - empty entries before adding them to the workspace to improve efficiency by avoid
remove unnecessary type check in DefaultHttpClientBinderRegistry
removed the case for the home button in DetailFragment . java to streamline navigation functionality
added a check for Android market availability in the PlayServices condition to ensure compatibility with PlayServices only when necessary
refactor TableBlockParser to improve cell parsing logic and add a new test for outside whitespace after the header to enhance code readability and
added support for a bridging header in the NewNativeTargetProjectMutator and related classes to enhance project generation by allowing configuration of
refactor methods and source file handling in PotentiallyDeadCode . java to improve clarity and functionality to enhance code readability and maintainability
added support for diamond detection in ` mmm Attr . java ` and new classes ` ppp DiamondRedundantArgs . java `
replaced calls to ` invocation . getInvocationStageTrace ( ) . startSend ( ) ` with ` invocation . onStartSendRequest ( ) ` in multiple
added debug logging for cachemetrics registration to improve traceability of cache metrics registration
added exception handling for AuthenticationException in LdapCtxFactory . java to ensure proper error handling for authentication issues
updated the condition to check for negative values instead of zero to ensure accurate comparison of float values
added a local file for the " logback . dev . xml " configuration in JoobyMojo . java and included it in Main . java
added a new file ` JaasEventCheck . java ` that implements ` ApplicationListener ` for handling JaasAuthenticationFailedEvent and ` J
refactor QuickstepTransitionManager to use a list of visible views instead of a single view to improve code readability and maintainability by red
updated string distance comparison logic in ConjunctionSolrSpellChecker . java and added a new test class in ConjunctionSolrSpellCheckerTest . java
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` to ensure compatibility with the updated data structure structure
[ hotfix ] remove unused constant in defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
add agent . script . timeout to make it configurable
updated JDBC table parameter handling in AbstractJDBCConnectorProvider . java to ensure correct formatting of table names and schemas
corrected the spelling of " sqlUpdate " to " sqlUpdate " across multiple files to improve code readability and maintain consistency in naming conventions
refactor schemaTypeCache initialization to use a synchronized map to improve thread safety and performance by reducing contention
refactor header addition logic in StaticServerHttpHeadersWriter to check for duplicate headers to improve efficiency by avoiding unnecessary header additions
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable tests that rely on file availability
added a directory creation in TestCollector . java to ensure the test storage directory is available
added chunked streaming mode setting in StarTreeJobUtils . java to improve performance by allowing large data transfer
added test case for basic and multiple type syntax checker
hbase - 20509 fix build after hbase - 20509 upgrade
added a test to verify that populating beans with recursive structure does not cause stack overflow exception to ensure that the populator does not cause stack overflow exceptions
added IOException to the getRemoteName method signature to improve error handling for remote name retrieval
updated exception handling in UserAccountManagerImpl and added HTTP client creation in ClientFactory and ConnectivityServiceImpl to improve error handling and ensure proper HTTP client
refactor WebSocketConnection and ExplicitDemandTest classes to improve code clarity and maintainability
added support for ` AspectJ ` mode in ` GlobalMethodSecurityBeanDefinitionParser ` and updated related bean registration logic to enhance security
updated import statements and added hostname verification functionality in mmm Connection . java and ppp Connection . java to enhance security and control over hostname verification
added an ` remove ` method to ` OHLCSeries ` and a corresponding test in ` OHLCSeriesTests ` to ensure proper item removal
replaced invocation . invoke ( ) with invocation . invokeUrgent ( ) in ClientSchemaService . java and modified assertions in CompactFormatIntegrationTest .
updated the way joint edges are removed from the world to ensure proper management of joint edges in the physics world
fix nullpointerexception in searchfilter
[ hotfix ] [ test ] add license header to sourcereadertestbasetest
removed redundant null checks for document and parent folder in DocumentsStorageProvider . java to streamline code and improve readability by eliminating
added ` HookDefinition ` and ` JavaHookDefinition ` interfaces and a corresponding test class ` JavaHookTest ` to facilitate the registration
refactor buffer flushing logic into a separate method called flushIfDeadlockRisk to improve code readability and maintainability by reducing duplication
updated setExoOptions method to include an allowTs parameter to enhance flexibility in specifying video formats based on the provided profile
drddecoderstate : remove from identifier collection when delete a user
added an INVISIBLE constant and refactored color handling in Color . java and RailButtonShapes . java to streamline color management to improve code
updated null handling logic in CountAggregationFunction . java and added a new test for null handling with query options in NullHandlingIntegrationTest . java to ensure
set deep to - 1 in internaltransaction
escape special characters in the name of the stream to ensure compatibility with XML processing
updated file path retrieval to use a configurable work directory to enhance flexibility by allowing external configuration of the work directory
[ jbrules - 2635 ] add deprecate rule to rulesetfactory to make it clear that the rule be deprecate
amd64directcallop : use codebuffer . position ( ) instead of codebuffer . getposition ( )
refactor TimeRange to use static constants for min and max time constants to improve code readability and maintainability by avoiding repetitive
refactor BitDocIdSet class to improve code readability and maintainability
refactor connection handling by extracting connection logic into a separate method to improve code readability and maintainability by reducing duplication
refactor DetailFragment and GalleryActivity to improve code readability and add InterceptorFrameLayout functionality to enhance maintainability and ensure
fix tank . fill ( ) not be call when not in remote mode
updated CsharpLibrary and PrebuiltDotnetLibrary handling logic to support both legacy and non - legacy Dotnet library providers to ensure compatibility with the latest
improve handling of iq pep packet . jm - 10
added a null check for the runtime variable in the intrinsicGraph null check to ensure that intrinsicGraph is not null before proceeding
do n ' t update metric if there be no dataflow worker
pdfbox - 4892 : avoid indexoutofboundsexception , a suggest by valerybokov
added LwjglAppletApplication constructor and modified canvas handling in LwjglNativesLoader to improve applet initialization and ensure proper focus management
removed the DockerClientConfig parameter from the string representation method in EnvironmentAndSystemPropertyClientProviderStrategy . java to simplify the return statement for better readability
refactor ` doPostAuthentication ` method to utilize ` ldapPasswordPolicyConfiguration ` for handling password policy application to enhance flexibility in
refactor Int2ObjectCache class to improve performance to optimize object caching efficiency
added a private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated it in ` LdapUtils ` to utilize it to
refactor Readable class to improve code readability and maintainability
updated page break logic in JsoupNonVisualRegressionTest . java to use TestSupport . WITH _ FONT for PDF handling to improve test reliability by
updated the icon used for the share menu item in CaptureActivity . java to use the correct drawable resource for the share menu item
updated JRE version checks to utilize system properties for major and minor versions to enhance compatibility with different Java versions
updated the handling of the JDBC41 driver to check for its minimum and maximum value to ensure compatibility with JDBC41 compliance
refactor GenericContainer class to improve code readability and maintainability
replace Set with ArrayList for filteredSet and filteredList to improve performance by using a more efficient data structure
added multiple @ Override annotations to several classes to ensure proper method overriding and improve code clarity
added an extra line break in ChartProvider . java to improve code readability and maintain consistent formatting
use the parent of the working directory of the current file instead of the current one .
simplified the return statement in JavacParser and added a new class ExtraSemiTest with a Java source test to improve code clarity and
added support for " AFTER " and " BEFORE " keywords in JpaQueryCreator and UserRepository classes to enhance user search capabilities by
updated Test15FloatJNIArgs . java file to improve test coverage and ensure compatibility with recent changes
updated import statements and refactored version handling in mmm plugin . java and ppp plugin . java to improve code clarity and maintainability
updated substring index in MockProcessContext and added a test for encryption and decryption functionality to ensure correct handling of encrypted and decrypted data in MockProcessContext
[ java ] check for non - reentrant call in aeronarchive .
refactor dependency handling in OpProcFactory to check for null dependencies before merging to improve robustness by avoiding potential null pointer exceptions
added a timeout of 10 seconds to SslBytesServerTest . java to ensure tests do not hang indefinitely
peer : fix typo in javadoc
added methods for real - time segment handling and updated class names to improve functionality and clarity in the codebase
added null check before calling writeTo to avoid potential NullPointerException when exportData is null
updated the calculation of popup position and scroll bar offsets in RecyclerViewFastScroller . java to improve the accuracy of scroll bar positioning and ensure proper scroll
updated command execution instructions in BuckWSServerPortUtils . java and added a method to check if the tool window is not instantiated to improve clarity
added a condition to check if the platform is Windows before adding the prevent sleep checkbox to ensure proper handling of item state changes for non - Windows platforms
updated import statements from ` javax . servlet . http ` to ` jakarta . servlet . http ` in ` HttpConfigurationAuthorityOverrideTest .
added crop handling for vertical bar layout in QuickstepAppTransitionManagerImpl . java to improve layout responsiveness based on device orientation
added full - screen exclusive mode handling in XWindow and related classes to ensure proper state management during full - screen access
improve played duration string for logback - util
added ` addCredentials ` methods to ` DagUtils ` and ` ReduceWork ` classes to enhance credential management for DAG tasks to improve
( chore ) camel - core - maven - plugin : use entryset . entryset ( ) instead of keyset . keyset
trim whitespace before setting the thread name to ensure thread names do not contain undesired whitespace
corrected a typo in the log message from " Not yet " to " Not yet " in GpsMainActivity . java to improve clarity
refactor Job class to improve code readability and maintainability
added a static class ` Unused ` and a test method ` testUnusedType ` to handle unused fields in ` Main . java ` to ensure proper handling
updated the key used for HBASE _ MASTER from " hbase _ master _ host " to " hbase _ master _ hosts " and introduced
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused code to streamline the project
updated the ` performJoin ` method to return a list of ` GenericRecord ` instead of a single ` GenericRecord ` to enhance flexibility in
updated the handling of DELEGATE _ LOCK _ PERIOD to use a constant for maximum delay to improve code clarity and maintainability by
server : fix nullpointerexception when set network rate to 0
remove unused constructor from cmcexchange
updated configuration handling in GossipLocalNode to check for a presence of a " seed . node . IP . LIST " path to improve flexibility in
enable client tpc by default by default ( # 18686 )
updated swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple application classes to ensure compatibility with the latest swagger
refactored the division logic in MutableBigInteger and added a new class ModInvTime for computing modular inverses to improve clarity and
refactor key initialization logic in NamedObjectList . java to improve readability and maintainability of the code
updated method signatures to use ` cleanupEmptyTableDir ` instead of ` cleanupEmptyDir ` across multiple classes to improve clarity and consistency in
refactor AsyncCache and Cache classes to improve code organization and readability
added import for RCFileInputFormat and registered it with kryo in SerializationUtilities to facilitate serialization of RCFileInputFormat objects
added methods to retrieve Java types for a specific column in TypeMapperComponent to enhance type handling capabilities in the application
added error handling for invalid host headers in Request . java and implemented a test for invalid host headers in RequestTest . java to improve robustness
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` and ` ClassParameter ` for time zone lookup
remove addoutgoingvalues ( ) and forEachoutgoingvalue ( ) method from standardop .
refactor SegmentCoreReaders and SegmentReader to simplify directory handling to improve code clarity and maintainability
aggregate : check if main thread profile exist before rollup
added validation for annotation definitions in a Buck rule with required _ for _ source _ abi set to false to ensure that annotation definitions are not allowed in
replaced instances of " greekLowerCase " and " irishLowerCase " with " greekLowercase " and " turkishLowercase " in
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
( scott phillips ) update dspace - app - webui to late dspace 4.0 . 0 . release
added a list of IDs to the BasicDateTime class to ensure unique identifiers for each date in the database
updated the initialization of SurfaceSyncGroup in TaskbarDragController to include a specific class name to improve clarity and specificity of the synchronization group
replaced the use of ` getObjectId ( ) ` with ` getId ( ) ` in ` GridFsTemplate . java ` and refactored
added tests to verify the total size and bytes of downloads in ShadowDownloadManager to ensure accurate retrieval and retrieval of download data
refactor text insertion logic in TextField . java to use a boolean variable for clarity to improve readability and maintainability of the code
fix nullpointerexception in groupnodeview when target be the same
refactor ` afterSetStatements ` method to streamline terminal statement handling to improve code clarity and maintainability by reducing redundancy
added ` hashCode ( ) ` method to ` IntervalXYDelegate ` and ` XYSeriesCollection ` classes to use ` HashUtilities ` for consistent
fix flaky test clientqueuetest # testqueuetest # testclientqueuetest
reformatted code in CloudWatchAppender . java for improved readability to enhance code maintainability and clarity
updated method name from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` in Gson . java to ensure consistency in
added calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` in ` HttpTestZ
added checks for non - empty subtag and improved language tag handling in Locale and LanguageTag classes to ensure proper handling of empty language tags
server : allow ssh - to - agent to be disable by default
[ hotfix ] fix checkstyle violation in schedulerwhen
fix checkstyle issue in util / emojikeyboard . java
added a condition to check if the input string does not contain a dash to ensure proper handling of empty strings in the SimpleSearch query
updated sorting and sorting columns labels to use " natural " and " A - Z column order " instead of " natural " to improve clarity and consistency
replaced ` Arrays . copyOf ` with ` Arrays . copyOf ` in ` Utils . java ` to improve performance by reducing unnecessary array copying
added a call to ` write ` with ` htmlEncodeButNotSpace ( remoteAddr ) ` in ` HtmlSessionInformationsReport . java `
update item state trigger handler to match new item name
refactor synchronize block to improve code readability and maintainability
added concurrency handling for file move operations in Hive to improve performance and resource management during file operations
added trigger methods for TimerTask with a period parameter to enhance timer functionality by allowing customizable period settings
added support for LOCAL _ DATE and LOCAL _ TIME types in TypeStringUtils to enhance type handling for SQL date and time representations
added a verbose option to the error logging to provide more informative error messages when verbose errors are encountered
updated ClickStartHandler calls to include a boolean parameter for menu visibility and added menu toggle logic to enhance user experience by ensuring the app toggles when
added validation to ensure vpn connection can only be establish between same account and customer gateway
updated error handling in CursorReadingTask . java and added a new test for errorOnNext in CursorReadingTaskUnitTests . java to ensure proper error handling
pdfbox - 2852 : add protection for encrypt pdfs
[ 3.0 ] fix npe in curatorwatcherimpl # getchildren ( path ) ( # 3471 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code organization and readability
updated the ` withAppendedId ` method to include an ` id ` parameter and added a deleteItem ` method in ` HostsList . java
updated Java files for consistency and clarity to improve code maintainability and readability
changed the type of the ` replaceOrderBulk ` method parameter from a ` Collection ` to a ` List ` of ` BitmexPrivateOrder `
refactor enterDefault method to accept IdentNode instead of Node to improve clarity and maintainability of the code
added a new file ` J9ConstantHelper . java ` and modified ` ObjectHash . java ` and ` ObjectHash . java ` to
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify multi - threaded invocations of ` Mockito ` to ensure
of - 241 : send an unavailable roster message to the transport .
replaced calls to ` pd . getProperties ( ) ` with ` pd . getOverlayedProperties ( ) ` in ` MapOperator . java ` and
updated the loadHandle method call in FunctionObjectCreator . java to ensure proper handling of function handles in the code generation process
added a null check before initializing ` extTypeCustomDesers ` in ` MessagePackFactory ` to avoid potential ` NullPointerException ` when ` ext
added a system property " mockserver . logLevel " set to " WARN " in the Main . java file to provide a warning level for testing purposes
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline the test code
removed unused imports and modified the createJetty method to streamline the code by eliminating unnecessary dependencies
changed the type of ` scoreMap ` from ` Map < Float , Float > ` to ` Map < String , Map < String , Float > `
updated comparison logic in U64 . java to check for negative values to ensure proper handling of negative data values to prevent potential issues with negative data values in
fix ` ` headline style be too long ' ' error message
added a check for ` didSupportDarkText ` in the notifyChange method to ensure that dark text support is only shown when supported by the user
[ hotfix ] [ checkpoint ] add test for non - forced enqueue
updated import statements and constants for core pool size and keep alive time in Parallel . java to improve clarity and precision in thread pool management
replaced ` filter ( ... ) ` with ` anyMatch ( ... ) ` for matching providers to simplify filtering logic and improve readability
added checks for Windows ServerCore container requirements in OpenCVImageFactoryTest . java to ensure tests do not fail on Windows ServerCore container
http : / / issues . apache . org / jira / browse / amq - 2473 - fix for http : /
[ py4j ] make py4j . getreturnvalue ( ) return throwable instead of null .
added @ Repeatable annotation with RetentionPolicy . SOURCE and @ Issues annotation to Issue . java to mark Issue instances as repeatable and
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java to ensure consistency
updated socket connection logic to use a dynamic address based on system property ` socksProxyHost ` to improve flexibility in handling socket connections to enhance
[ hotfix ] fix checkstyle violation in slotreport and slotstatus
removed import of ClassUtils from ReflectionUtils . java to streamline dependencies and reduce unnecessary dependencies
replace HashSet with LinkedHashSet for storing protocols and cipher suites in SslContextFactory to maintain the insertion order of elements in the set
added a static resource variable to store the system resource to optimize resource management by caching the system resource
adjust paddle buffer size in streamingaeaddecryptingchannel .
added a test to handle invalid fallback scenarios in the circuit breaker endpoint to ensure proper error handling for invalid fallback scenarios
updated SSL connection handling in AppPage . java to enhance security by using a more secure secure connection
updated cin ' s size limit from 0x7FFFFFFF to 0x7FFFFFFF and removed the call to resetBytesReadCounter to optimize performance by reducing
pdfbox - 4892 : move get / set preferrAES method into protectpolicy , a suggest by valerybokov
( chore ) camel - opentelemetry : use log instead of system . out
remove flaky test from elb integration test
change method name from ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to accurately reflect the method ' s
added error handling for file creation in DiacriticTest . java to improve robustness by informing users when configuration fails
hhh - 15464 - fix test failure on oracle 11
updated texture file handling and error handling in TextureUnpacker . java to improve robustness by ensuring atlas file existence and error reporting
added write lock for thread safety in AmbariManagementControllerImpl . java to ensure thread safety during service state changes
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and readability
added a test for non - closed result sets in TestJdbcDriver2 and improved query handling in HiveStatement to ensure proper resource management and prevent potential
fix : do n ' t use inputstream . mark ( 0 ) in streambodygenerator
added logic to remove pre - deleted databases from the schema response to ensure that pre - deleted databases are properly cleared before returning the response
remove chunkedWriter from pipeline in Http1xUpgradeToH2CHandler to ensure proper handling of chunked responses
added a confirmation dialog for item deletion in FullDetailsFragment and updated related conditions in EnhancedBrowseFragment to enhance user experience by allowing
added a ` RuleBank ` interface and refactored the ` RuleFinder ` and ` GraphicsUtil ` classes to use a ` RuleBank
throw a fatal alert instead of crash the build
added two new Java files , TestMonomorphicObjectCall . java and Object . java , implementing a native method for object manipulation to
replaced instances of ` removeMetaDataSource ` with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop . java ` to ensure
hbase - 27875 defaultmemstore . shouldseek ( ) should check store ' s cf before seek
[ hotfix ] [ runtime ] remove unused code in taskmanagerservicesconfiguration
updated AlterTimeSeriesStatement constructor to accept a boolean parameter for altering views to enhance flexibility by allowing control over the alter view behavior
simonstewart : make matchtext ( ) more readable
added a try - catch block around routingTableBuilder retrieval in HelixBrokerStarter . java to handle potential exceptions when accessing routingTableBuilderConfig
fix npe in httpclientintroductionadvice
( chore ) camel - jms : use char [ ] instead of string for password
bug 7999 : do n ' t try to invalidate session if it ' s recursive
updated the ` equals ` and ` equals ` methods in ` Counters ` and ` CountersTest ` classes to use ` ! = `
modified the ` initialize ` method to accept a ` SimulationStatus ` as a parameter to ensure that the status accurately reflects the original simulation
[ gr - 17937 ] fix compilation error in sulong .
refactor variable handling in PrettyPrinter to improve clarity and maintainability of the code
added null checks for index nodes in LRUDictionary . java to ensure proper initialization and avoid potential NullPointerExceptions
refactor filtering logic in DatagramSocket and DatagramChannelImpl to improve code readability and maintainability to enhance filtering logic to ensure proper handling
test : migrate testquerydns from junit 4 to junit 5
added a new file NutchServerInfo . java to manage server - related properties related to NutchServerInfo to provide a structured way to
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource attributes in EdgeNGramTokenFilter to simplify attribute handling and improve code clarity
added support for timestamp column in CQL and Thrift inserters
updated DSAParameterGenerator to handle different strength values and improved error message formatting to ensure proper handling of strength values and enhance clarity of
[ fix ] numberutils . floatToIntBits ( ) now return an int instead of a double .
updated the masking condition in InetAddressSet . java and added new test cases in InetAddressSetTest . java to ensure correct masking behavior and enhance test coverage
added SQL constraint violation checks in DefaultJdbcOptimisticLockingExceptionMapper to enhance error handling by identifying constraint violations
( chore ) camel - broker : fix checkstyle issue
added methods for adding tabs with specified icons and sizes to improve tab management functionality in the user interface
replaced array size declarations with zero - length arrays in multiple classes to optimize memory usage by avoiding unnecessary allocation
[ hotfix ] [ runtime ] move testingtaskmanagerruntimeinfo to mockenvironmentbuilder
refactor conditional checks in MavenVisitor . java for clarity to improve code readability to enhance code maintainability and reduce redundancy
updated test cases in ZookeeperDataChangedListenerTest to use " MOCK _ APP _ SECRET _ UPDATE " and " MOCK _
added a new file FormatCheckingTest . java to check for illegal class names in the Java process
updated line number handling in CodeGenerator . java to ensure accurate tracking of line numbers
added a try - catch block around the configuration retrieval process to handle potential exceptions gracefully
added overloaded ` createToggle ` methods for creating ` RadioButton ` instances with different input types to enhance flexibility in creating ` RadioButton ` instances
updated LRUCache to initialize the cache size and increased CHUNK _ METADATA _ CACHE _ SIZE from 100 , 000 to 10 , 000 to optimize memory usage
updated visibility of DEFAULT _ CAPACITY from private to public and refactored capacity handling in ChannelParser to improve accessibility of DEFAULT _ CAPACITY and
added null check for symbolicName before quoting it to avoid potential NullPointerException when accessing symbolicName
added support for usemode system property
added error handling for shutdown hook addition and improved logging in YARNSessionFIFOITCase to ensure proper shutdown handling and provide clearer insights during
renamed ` projectRoot ` to ` androidManifestPath ` and updated related methods in ` RobolectricTestRunner ` to improve clarity
fix npe in abstractreplyproducinghandler when not propagate header
refactor CompareMode class to improve code readability and maintainability
added HasTests interface implementation and getTests method to RustBinaryDescription and RustLibraryDescription classes to enable testing capabilities in the build system
updated placeholder and error messages in FileMessageVH . java to improve clarity and consistency in error reporting
updated OnExitTest . java file to improve test coverage for OnExit functionality
added a method to recreate the taskbar when user preference changes to ensure the taskbar is refreshed when the user preferences change
add support for j9 heap dump on ibm vm
( chore ) camel - mybatis : ensure session be close in case of exception
simonstewart : make the ie driver work with the firefox driver , not firefox
updated Java version from JDK 5 to Java 5 in IteratorToFor . java to ensure compatibility with Java 5 features and improve code clarity
added a stateful state to the application to indicate that the application is not in an unavailable state
updated position and limit calculations in buffer template classes to improve clarity and correctness of buffer handling logic
updated method call from ` toUri ( ) . toString ( ) ` to ` toString ( ) ` in ` toMove ` to ` toString ( )
added checks for the length of the array before deleting an element and implemented setEmpty methods across multiple classes to ensure proper handling of empty arrays and
changed enum ` Protocol ` and ` Transport ` to public in ` VirtualAuthenticatorOptions . java ` to allow access to these enum values from other classes
updated document handling in TestMultiPhraseQuery . java to use a new document structure to improve code clarity and maintainability by ensuring consistent document structure
updated assignment logic in ` ReservationController . java ` and added handling for pending reservation status in ` TicketHelper . java ` to improve payment handling
added thread - safe handling for the onTimeout listener in HttpChannelState . java to ensure that the onTimeout listener is only invoked on the
replaced printStackTrace ( ) with debug logging in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to improve
updated package - info . java files for mmm and ppp packages
updated the read method to use ConsistencyLevel . LOCAL _ QUORUM for PaxOS to ensure compatibility with different data consistency levels
added support for " Home " model name and improved serial number handling in the HeosDiscoveryParticipant and HeosPlayerHandler classes to enhance device
added a new ` Wait ` class and associated methods in ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` to
refactor Neo4j to use AttributeController and AttributeTable for node and edge data handling to improve code organization and enhance attribute management
added null check for serverName in SessionManager . java to ensure proper handling of null values in session management
nifi - 1114 : move rocksdbflowfilerepository to controller . repository and mark it deprecate
updated the retrieval of the " IS _ GRANTABLE " variable to use a string value from the results object to improve flexibility by allowing retrieval of
updated URL validation logic in JavascriptContext . java to ensure proper handling of URLs starting with " javascript : " and improve logging clarity
camel - 7999 fixed the unit test error of camel - cxf
added a check for a new column before adding it to the admin table to ensure that the column is only added if it does not already exist to avoid
implemented the Disposable interface in the Texture class to ensure proper resource management and prevent memory leaks
added null checks for tldBundleLocation in WebappRegistrationCustomizerImpl and updated references in FragmentActivator and OSGiAppProvider to en
do n ' t use goquorum genesis file if goquorum privacy be enable ( # 667 )
replaced IOException with Throwable in HttpInput . java to improve error handling by using more specific exception types
added a condition to skip Thailand if the country is not " Thailand " and the country is not " JP " in the list
updated references from HostResponse . Wrapper to HostResponse . HostResponseWrapper across multiple files to ensure consistency and correctness in API response handling
added boost comparison and hash code calculation to the FilteredQuery class to enhance query filtering functionality to include boosting information for improved performance
reformatted the constructor of FileMenuFilter to improve code readability and maintainability
[ web ] show symbol table only if location be not null
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
fix npe in spongecommoneventfactory when no entity be available
rename ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` across multiple files to improve clarity and consistency in naming conventions
fix flaky compaction test by use identityqueryfilter
added null check for the ' type ' attribute in MiniAapt . java and created a corresponding test case in MiniAaptTest . java to ensure
added support for " SPEL " in the OperatorEnum and implemented a new SpELJudge class in OperatorJudgeFactory to enhance
updated the type check for ordinalitySymbol from ` = = ` to ` . equals ( ) ` in LocalExecutionPlanner . java to ensure correct validation
replaced the use of Service . providers ( Service . java ) with Lookup for loading the default Profiler class to improve performance and reduce dependency on external services
updated various Java files related to certificate and socket handling to improve code organization and maintainability
added logging for attribute lookup failures in AttributeResolution9 . java to improve error tracking and debugging capabilities
updated the number of source and target options from " 1.5 " to " 6 " in fullOptions to ensure compatibility with the latest version of the
[ hotfix ] [ table - planner - blink ] add metadata - only projection rewriter
replaced direct calls to ` getLocalizedNames ( ) ` with a sorted list of localized names in ` AboutActivity . java ` to ensure the displayed
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
added a condition to refresh shared preferences based on live streaming settings to ensure shared preferences are only updated when live streaming is enabled
added the exception cause to the MappingException in AuditConfiguration . java to include the underlying exception for better traceability
( chore ) camel - file - consumer : use awaitility in test
replaced instances of AbstractType with AbstractType < ? > in multiple files to improve type safety and eliminate unchecked cast warnings
added transport support functionality to GitClientApplication and updated RepositoryUrlPanel to enhance transport handling and improve code clarity
added support for " long press " nav handle in multiple input consumer classes to enhance user experience by providing detailed gesture logging information
added null check for mavenMetadata and updated version comparison logic to improve robustness by handling cases where mavenMetadata is not initialized
added handling for " Large Page Support " in TestLargePageUseForHeap . java to ensure proper logging of memory usage during testing
cloud _ usage : skip event migration if cloud _ usage db do n ' t exist
( chore ) camel - test - infra - broker : fix unit test on window
added a new test class for ObjectStreamClass functionality to ensure proper serialization and deserialization of ObjectStreamClass objects
removed unnecessary null checks for myself . getDataCenterInfo ( ) in ZoneAwareDiscoveryFilter . java to simplify the condition to improve code readability and
change log level from error to warn in OpenTracingTracer . java to improve error reporting for tracing data capture failures
added a toString ( ) method to the Generator class to provide a readable string representation of the generator list
refactor URI handling to initialize ` doquote ` and ` dontquote ` separately to improve code clarity and maintainability
added a check for non - existent resources in ClusterControllerImpl . java and created a corresponding test in ClusterControllerImplTest . java to
added null check for response and improved error logging in AccepttoApiUtils . java to enhance error handling and provide clearer diagnostics for
removed direct buffer allocation for Android versions below 5 to ensure compatibility with older Android versions
refactor SybaseASADatabase class to improve code readability and maintainability
added a ` forceProjection ` parameter to the ` HashJoinInfo ` constructor and updated related method calls to ensure consistent behavior of the ` forceProjection `
added a method to retrieve the string distance in SpellChecker . java to enhance functionality by allowing retrieval of distance information
added FLAG _ IMMUTABLE and FLAG _ FLAG _ IMMUTABLE constants , and modified PendingIntent creation methods to use FLAG _ IMMUTABLE for
refactor HiveFileFormatUtils to improve read column ID handling to enhance code clarity and maintainability by separating configuration management
replaced instances of ` getUPPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java `
added multiple instances of ` DisplayTemporaryToast ( ) ` in ` SavedExperiments . java ` to display a temporary toast message to enhance user feedback
set the version of the parent service if it ' s null to ensure the service version is correctly initialized from the parent service information
added a new test class RawSerializationTest for Gson serialization to ensure correct handling of primitive and object collections during JSON conversion
refactoring seleniumserver to implement sslcertificategenerator interface
refactor loop to use index - based access to retrieve replies instead of a for loop to improve code readability and maintainability
increased timeout duration in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for resource access to succeed
added a testNGramFilterPayload method in TestNGramFilters . java to validate the payload handling in the NGram filter functionality
refactor AclImpl class to improve code readability and maintainability
added tests for different array sizes in ` EasyRandomTest . java ` and removed unused tests in ` EasyRandomTest . java ` to ensure
bug 7059 : fix npe in citrixresourcebase when vm be down
added a ThreadLocal named ` tryWriteAgain ` to manage asynchronous write retries to improve responsiveness by allowing concurrent execution of write operations
added a method ` ancestorsVisible ( ) ` to check if the actor is an ancestor of the parent of the parent of the parent of the parent of
added logging for failed rolling - update steps on deployment - group to improve error handling and traceability of deployment operations
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] add nullable annotation to sinkprovider
added error handling for ` AuthenticationFailureUsernameNotFoundEvent ` and refactored user retrieval in ` DaoAuthenticationProvider ` to log authentication failures
updated AtMostXVerificationTest . java file to improve test coverage for verification functionality
updated default QTYPE from " lucene " to " LuceneQParserPlugin . NAME " across multiple files to ensure consistency in naming conventions and improve
updated SimpleDateFormat instances to use Locale . US to ensure consistent date formatting across different locales
added an ` isInitialized ( ) ` method to ` JavaLanguageServer ` and created a new ` Main ` class in ` LocalsCompletionTest _
updated test method parameters and variable names in ClientAPITokenIntegrationTest . java to improve clarity and consistency in variable naming
added transaction methods to DatabaseAdapter and modified transaction handling in GNCXmlHandler to improve transaction management and ensure correct account imports
replaced byte array handling with ByteArrayOutputStream for reading data in MimeType . java to improve memory efficiency and performance
refactor exception message handling in MessagingTemplate . java for clarity to improve readability and maintainability of the code
added isAcceptable method to AutoFormatVisitor to check if a source file is an acceptable compilation unit
lucene - 4892 : add max buffered docs and ram buffer size to testindexwriter
added functionality to clear witness capsules in Manager and NodeDelegateImpl classes , and implemented a test for witness updates in ManagerTest to ensure
added exception handling for NoSuchElementException in CopyOnWriteMap . java to ensure robustness by handling cases where there are no elements to evict
remove log4j dependency , use log4j directly
updated BasicAuthIntegrationTest and DaemonStream to enhance collection reindexing and metrics assertions to improve test coverage and ensure accurate authorization metrics
replace HashMap with LinkedHashMap in DependencyUtil . java to maintain insertion order of nodes
add jerseysupport # internalerrormapper to handle internal error
replaced direct header validation with a utility method to improve code readability and maintainability
updated property handling in System . java to improve clarity and structure to enhance maintainability and readability of the code
updated methods in StringSubject to accept CharSequence instead of String to improve flexibility in handling string containments
[ gr - 23748 ] fix checkgraalintrinsics for jdk 11 .
rename IntUtilsTest class to PrimUtilsTest to improve clarity to better reflect the purpose of the test class
updated the database connection factory to use a dedicated DataSource variable to improve flexibility in handling database connections
[ hotfix ] [ doc ] fix typo in deploymentoptions
updated ` updateTextButtonWithDrawable ` method to accept ` Drawable ` instead of ` Drawable . ConstantState ` to improve flexibility in handling drawable resources
updated resource handling in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream to improve performance and readability of the code
added support for coalesce operations in RexNodeConverter and SqlFunctionConverter to enhance functionality to handle coalescing expressions correctly
( chore ) camel - hl7 : fix typo in unit test
fix javassistproxyfactoryfactory to use context classloader
make defaulttypeadapters thread safe
reformatted code for consistency and readability in DocumentUtil . java to improve code maintainability
refactor URI handling in HttpClientRequestBase to simplify query initialization and improve clarity to enhance code readability and maintainability
added a filterOldEntries method to manage old feed entries to optimize the filtering of old feed entries for better performance
log4j2 - 1349 change log level from fatal to warn for append close of wal
refactor NodeMap to implement the Iterable interface and improve code readability to enhance functionality and maintainability of the NodeMap class
updated import statements and variable names in DiscoveryClientRouteDefinitionLocator . java to improve clarity and consistency to enhance code readability and maintainability
added a check for non - empty fields before adding aggregation operations in MongoRecordReader . java and modified return condition in RexToMongoTranslator . java to
smack - 161 add a default admin list to the list of default admin .
replaced usage of MultiFields with SolrIndexSearcher for term retrieval in multiple plugin classes to improve performance by avoiding unnecessary field access in SolrIndexSearcher
camel - 16400 : camel - core - optimize to avoid string . tostring ( ) call
updated the handling of the ` primitiveType ` in ` GroovyParserVisitor . java ` to simplify the logic by directly returning the result of ` build
[ hotfix ] remove uninterruptible code from frameinforesultquery
fix flaky sedablockwhenfulltest
added a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level documentation
updated the calculation of readLen in MessageUnpacker . java to ensure readLen does not exceed buffer boundaries
updated import statement for Nullable in HttpClientTimingInstrumentationVerificationTests . java to align with the new package structure
updated SQL query to include user serial information for icon retrieval to enhance the accuracy of icon caching by including user details
http : / / issues . apache . org / jira / browse / amq - 4685 - fix typo in defaultmqproducerimpl
added a boolean parameter ` isClassfileOnly ` to the ` addWhitelistedResource ` method across multiple classes to control the whitelisting of
added a method to fix baremetal foreign keys in Upgrade410to420 . java to ensure proper database schema updates for baremetal devices
removed the IJava2DRenderer interface and its associated interface from Java2DRenderer to simplify the codebase by eliminating unused components
added an override for the onTearDown method in DefaultAudioSink to notify the listener when the audio track is empty to ensure that the buffer is empty when
added scheduled task scheduling for upstream tasks in ` UpstreamCacheManager . java ` to improve the efficiency of upstream task management
[ hotfix ] [ doc ] fix typo in streamtype
updated assertion message to include context to improve clarity of assertion failure output
updated imports and modified user authentication logic in FilestorePage . java and RootPage . java to improve code clarity and ensure proper user access
camel - 17686 : camel - elasticsearch - ignore test due to slow machine
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 3635 : expression control
updated button text from " leftButtonAltcoin " and " rightButtonAltcoin " to " buyAltcoin " and " sellWithFiat
camel - 15836 : camel - restlet - allow restlet to route to a path that do not exist .
add miss parameter to block . createnextblock ( ) method .
removed the Serializable interface from DBNavigableSet and updated test methods to use serialCloneNoCatch to ensure proper serialization handling and improve test clarity
[ hotfix ] fix npe in ruleengineimpl
reformatted conditional statement in Main . java to improve code readability and maintainability
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter . java ` to
deleted the PlainVerifier . java file to remove unused or redundant code related to JWT verification
added a check to close system windows when triggering anAltTab to ensure proper resource management and prevent potential memory leaks
updated DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog handling and state management to enhance user experience by ensuring proper dialog behavior and state management
updated MimeUtil methods to specify UTF - 8 encoding to ensure consistent handling of character encoding across the application
added a call to the superclass ' s deinitialize method to ensure proper initialization of the TextField class
refactor LogFormatTest to use TestUtilities for serialization to improve code readability and maintainability by utilizing TestUtilities for serialization
updated date parsing from ` previousUntilLastClause ( ) . DURATION ( ) . DURATION ( ) ` to ` previousUntilLastClause ( )
added error handling for negative array length in JAXWSExceptionBase . java to ensure proper exception throwing for negative array sizes
test : migrate ctresolvedimporttest to junit 5 ( # 2499 )
increased thread join duration from 10 seconds to 60 seconds in T6567415 . java to allow more time for thread execution to complete successfully
[ hotfix ] [ test ] change default value of jobmanageroptions default to ' region '
added title handling methods in ShadowActivity , ShadowAlertDialog , ShadowDialog , and ShadowTextView classes to improve title management functionality to enhance user experience by
use poilogger instead of common logging
updated alarm handling logic in InstarHandler . java to improve alarm state management and enhance code readability
add delete latency metric to map delete operation ( # 18709 )
refactor status check in Response . java to use a switch statement to improve code readability and maintainability
updated the method to find the Javac location using a new helper method to improve code readability and maintainability by centralizing location retrieval logic
add project name to flutter create additional setting ( # 167 )
added a new test class ` DeprecatedStubbingTest ` to test stubbing behavior with deprecated methods to ensure correct behavior of stubbing
replaced ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType ` in ` ITBra
tregex : fix partialmodifier GR annotation for nml
add a system property to disable rsa key exchange
refactor BufferedReader usage to improve code readability and ensure proper resource management to enhance code clarity and prevent potential resource leaks
added ` oAuthFactory ` and ` oAuthServiceHandleId ` fields to ` PubSubAPI ` and ` SDMAPI ` classes
replaced AGGRESSIVE _ EASE interpolator with EMPHASIZED interpolator in TaskbarEduView . java to enhance animation
added UpdateRegionLocationPlan import and updated logging levels in multiple classes to improve region migration handling and enhance log clarity
added a new file ` FileDialogLeakTest . java ` to test the finalization of ` FileDialog ` to ensure that the ` FileDialog `
hbase - 25809 move testopentableincoprocessor from hbase - hbase to hbase - hbase - coprocessor
[ gr - 36214 ] do n ' t generate uninterruptible method in trufflefeature .
[ flink - 27420 ] [ table - common ] remove the use of split method in pb codegen
updated condition to check if ` dims [ 1 ] . disi ` is not null instead of checking for ` numDims ` to ensure proper handling of
add sourceinforefreshhandler to fakemediasource to prevent race condition
added version checks for JVM specifications in Constants . java to ensure compatibility with Java 9 versions
fix npe in filereportertest
changed the condition from ` isFalse ( ) ` to ` isTrue ( ) ` for the end - to - end encryption keys existence check to ensure
added functionality to enable home button navigation in the action bar to enhance user experience by allowing users to navigate to the appropriate action bar
added a new constant ` GET _ USER ` and updated protocol version from 5 to 6 , and implemented user retrieval logic in ` RpcUtils `
added an @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable conditional execution based on the architecture architecture
updated the handling of the ' notFound ' strategy to use the original start class to improve clarity and maintainability of the code
improve error message and add local for register
replaced calls to ` event . getAsyncContext ( ) . getResponse ( ) ` with ` event . getSuppliedResponse ( ) ` in ` Test
nurserostering : fix nimbus look and feel for nurse - rostering
updated regex pattern for versioning in AppPage . java to improve accuracy in version replacement logic
refactor animation listener handling in LauncherAppTransitionManagerImpl to improve clarity and maintainability of the animation logic
dumpedprivatekey : improve error message
fix copy / paste error in edit offer
refactor milestone parameter handling in TicketPage . java to differentiate between open and closed tickets based on whether the milestone is open or
reduce the amount of cpu use by the pipe in the pipe wod
added a new method ` getClusterKey ` to the ` StateMachineInvoker ` class and updated the ` getStateMachineClusterInstance ` method to include blue
initialize downgradeAllowed to true in UpgradePack . java and add a test for downgrade checks in UpgradePackTest . java to ensure that downgrade
updated XML element handling to use ATTRIBUTE instead of ATTRIBUTE and introduced a new ATTRIBUTENAME constant to improve clarity and consistency in XML processing logic
add ` ` emulatesystemloadlibrary ' ' configuration to load library from class loader
refactor AppsCustomizePagedView and LauncherModel to use getAppNameComparator ( ) instead of APP _ NAME _ COMPARATOR to improve
added closing and creation of parent directories for output streams in DefaultPlatformManager and FatJarStarter classes to ensure proper resource management and avoid potential directory
updated method signatures and assertions in TestSecretKeyCredentialHandler . java to improve clarity and consistency in test validation logic
camel - 16400 : camel - core - optimize routebuilderfinder to avoid reflection
updated description and scope format strings to include " only applicable to push - based reporters " to clarify that only push - based report
hbase - 25819 fix flaky testfulllogreconstruction . testfulllogentries ( addendum )
added methods to set socket buffer sizes and address reuse in DatagramSocketOptions to enhance socket configuration flexibility by allowing customizable buffer sizes
improve server shutdown message ( # 1 )
alexeibarantsev : remove deprecate locatable interface
updated error messages in VersionInfo . java to clarify search conditions and retrievability checks to improve error messages to enhance user understanding of
replaced equalityPredicateColumns with predicateColumns in StarTreeIndexOperator . java to improve clarity and consistency in variable naming
reformatted code in HandshakeHandler . java for consistency to improve readability and maintainability
updated formatting in Navigator . java for consistency to improve code readability and maintainability
changed ` private static ` modifiers to ` static ` in ` RecordReaderFactory . java ` and added a new test class ` RecordReaderFactory
added comparison for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL in MongoQueryCreator and corresponding unit tests in MongoQueryCreator
refactor group - by expression handling in CalciteSqlParser . java to improve clarity and maintainability of group - by clause validation logic
refactor FileChannelLinesSpliterator and FileChannelLinesSpliterator to utilize AtomicInteger for buffer reference management to improve memory management and prevent
refactor code to use a local variable for validator before accessing its properties to improve code readability and reduce repetitive method calls
added a schedule method to ` CircuitBreakerImpl ` and modified ` CircuitBreakerTest ` to use it to improve circuit breaker execution
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify the intent handling logic
changed the property name from " ajax " to " progressbar " in SubmissionController . java and FileUploadRequest . java to improve clarity and
added @ Disabled annotation to TableExtRetrieverTest . java to disable the test due to the retrieval strategy for column privileges
fix concurrent bug in entitygraph . getExportedcount ( )
updated the import statement for requireNonNegative from IntRangeUtil1 to IntRangeUtil to ensure consistency in the usage of the required utility class
updated character validation logic in HttpParser and added unit tests for encoded headers to improve error handling for invalid characters and ensure proper handling of encoded headers
updated the layout reference from ` trends _ activity ` to ` configuration _ activity ` in ` ConfigurePagerActivity . java ` to align the activity
updated print statement in SLWTTextListing . java to include position information to improve clarity of log messages for better debugging
solr - 12028 : fix flaky test forceleadertest
refactor Thread class to improve code readability and maintainability
refactor template file suffix handling in AbstractConfigurableTemplateResolver to improve clarity and maintainability of template file resolution logic
camel - 16400 fixed the cxf unit test error
reformatted YamlRepresenter class to improve code readability and maintainability
updated output formatting in ToChar . java and added SQL insert statements in TestFunctions . java to improve readability and ensure proper SQL syntax to enhance
added validation for transaction string and write ID in GenericUDTFGetSplits . java to enhance data integrity by ensuring valid transaction strings are processed
updated logging messages in JsonSerDe . java for consistency and clarity to improve code readability and maintainability
added null check for book path and improved logging in DataHolder . java , and implemented hasNoInitialImage method in Picture . java to
updated SSTDeserializer and TestSSTDeserializer to include a check for NextRecord . sid before creating strings to enhance robustness by preventing
updated ` AppPreferencesImpl ` to use a constant for the default grid column value and improved handling of negative values to enhance code readability and
update error message in Platform . java and ComparisonFailureWithFieldsTest . java to use " line - break " instead of " empty - differences " to
added a boolean flag ` waitingForKeys ` in ` DecoderInputBuffer ` and updated conditions in ` ClippingMediaPeriod ` and ` SampleQueue ` to
removed leading slashes from path annotations in OkexV3 . java to simplify the API endpoint path formatting
refactor calculations in LineUtilitiesTests for better readability to improve code clarity and maintainability
added error logging for varargs and old array syntax in JavacParser and new classes T6569633 and T6569633 to improve error handling and
log warn if defaultdrmsessionmanager be call on wrong thread
added handling for method calls with parentheses in VariableContext . java and corresponding tests in TestVariableContext . java to ensure proper parsing and handling of
add test for invalid compilation unit and profile string
updated buffer limit calculation in Piece . java and modified bufferForMessage limit assignment in SharingPeer . java to ensure proper handling of buffer limits and
added support for configurable HTTP response timeouts in NettyRoutingFilter to enhance the flexibility of HTTP response handling by allowing configurable timeouts
refactor NativeLinkTarget handling in CxxLibraryFactory and NativeLinkTargetGroup to improve code clarity and ensure compatibility with deprecated methods
added unit test base on user forum issue
added support for field access in ASTConverter and refactored convert method in RexNodeConverter to enhance field access handling and improve code clarity
replaced direct usage of QueryLogEntry . values ( ) with a constant QUERY _ LOG _ ENTRY _ VALUES to improve code readability and maintainability
[ helidon ] only use relative uris when no proxy predicate be provide ( # 1892 )
refactor PKCS12KeyStore and StoreSecretKeyTest to streamline certificate handling and improve clarity to enhance code readability and maintainability by
added reflection access checks in ` Bootstrap . java ` and refactored method names in ` ReflectionCheckLinker . java ` to improve access control
removed the public access modifier from constructors of CollisionMap to enforce encapsulation
marked getRawInputFromTransactionInput as deprecated to indicate that the method should no longer be used and may be removed in future versions
refactor log level handling into a switch statement to improve code readability and maintainability
cloudstack - 4892 : do n ' t use region _ id a a parameter when create a user account
bug 60284 : oldexcelextractor no longer throw encryptionexception for old excel file
[ gr - 23748 ] add extra - image - build - argument to mx _ java _ benchmarks
removed an unnecessary else block in TimeLineCursorAdapter . java to streamline the visibility logic for the image holder
fix test which randomly fail on slow ci server
updated directory handling in ShadowContext and ContextTest classes to improve directory management and ensure proper resource cleanup
updated ExceptionFactory to handle different exception types to improve error handling by differentiating between AssertionFailedError and ClassNotFoundException
increase WAIT _ TIME _ MS from 10000 ms to 60000 ms in LauncherInstrumentation . java to allow for longer wait times during testing
updated imports and added audience handling in ConnectOAuth2RequestFactory and ConnectTokenEnhancer to enhance support for audience claims in OAuth2
camel - 15836 : camel - kafka - do not break on first error by default
added a new constant ` selectableItemBackground ` to the ` selectableItemBackground ` variable to improve code readability and maintainability by using a
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and prepare for future
updated the assignment of eventType to ensure consistency in event type handling
add resumablerandomaccessfilelistener to allow resumable random access to file
changed the class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java to
added logic to set the size of format records in HSSFDataFormat . java and updated assertions in TestWorkbook . java to ensure correct handling of cell cell
[ hotfix ] deprecate method in flinkkafkaproducer
updated the condition for determining compressed chunk length in CompressedInputStream . java to ensure proper validation of chunk length against maxCompressedLength
camel - 14284 : camel - spring - data - redis - add idempotent operation to reproduce issue
fix container repair for vanilla item . close # 7771
fix legacylocalrepositorymanager for local layout
added checks for task manager initialization and improved error handling in LocalTaskManager and JobManager classes to ensure that the LocalTaskManager thread does
improve error message when deploy a file in maven
replaced calls to ` getTemporalPath ` with ` getInternalTemporalPath ` in ` FileStorageUtils ` and added a method to retrieve the internal temporary
added a new method ` findByEntries ` to ` FeedEntryStatusDAO ` for querying FeedEntryStatus objects based on entries to enhance
added timing logic for verticle execution in ContextImpl . java and created a new test for blocking execution in BlockedThreadCheckerTest . java to ensure
updated ` instantiate ` and ` convert ` methods to include a ` null ` check for ` ctorArg ` to enhance error handling by providing clearer
updated file handling logic in LoadContactsTask . java to differentiate between Android O and newer Android versions to improve compatibility with different Android SDK versions
replaced setter methods for remoteAddress , remoteHostname , and remoteHostname to improve code clarity by removing redundant setter calls
added a null check for the realClass in Robolectric . java to ensure that the shadowClass is annotated with @ Implements to prevent runtime errors
enable mutual authentication by default for mutual auth
updated import statements and added a test for handling SSL exceptions in BasicHttpTest . java to ensure proper exception handling for HTTP endpoints in the server
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enable access to consumer and producer from other classes
refactor event creation for SitemapWidgetEvent in multiple classes to improve code readability and maintainability
corrected a typo in the warning log message from " no address / subject / text " to " from " in CommunicationsManager . java
# 1221 - enh : add draftqueryoptimise ( ) method to beandescriptordrafthelp to fetch only non - draft bean
added error handling for IOException in MultipartBody . java to improve robustness by retrying operations on unavailable resources
refactor : fix checkstyle issue in executablefactory and zipfolder
update license year to match last edit
fix npe when attach a file to a non - existent directory
added SchemaInfoLevelBuilder and SchemaInfoLevelBuilder to SchemaCrawlerOptionsBuilder in AccessTest . java to optimize schema information retrieval to improve performance by red
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and added a
replace exception throwing with returning null to simplify error handling for unknown operation names
added methods to set name , enabled , and expanded properties of the prototype to enhance the functionality of the ProjectProperty class
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ doc ] fix typo in datastreamjob
added error handling for ErrnoException in TestContentProvider to ensure proper resource management and prevent potential memory leaks
camel - 18536 : camel - cxf - allow to configure service class via cxf . xml a endpoint .
updated protocol validation logic in HTTP2ServerConnectionFactory to ensure proper handling of h2 - 14 protocol configurations
refactor parameter symbol handling in LambdaToMethod . java and update related logic in ClassFileVisitor . java to improve clarity and functionality to enhance
fix a typo in the sbarq pattern
increased the timeout duration of the copyURLToFile method from 5 seconds to 60000 milliseconds to allow for more time for the copy operation to complete successfully
added a method to set the slop in the query parser to improve query processing accuracy
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to allow more time for long press actions to trigger
updated the default value of Servers . parse from 8188 to 6188 in two sink classes to ensure compatibility with the latest configuration settings
[ terasology ] fix npe in screengrabber when save screenshot
updated visibility logic in EditShareFragment to include conditional checks for edit options to enhance user interface responsiveness based on the availability of edit options
update progress calculation in DepthController . java to ensure progress does not exceed a defined value of 1.0 to prevent rendering issues
remove unused method .
added debug logging for authentication failure and refactored server auto - redirection logic to improve traceability of authentication failures and enhance code readability
added null checks for the service parameter in SamlIdPMetadataUIAction . java to enhance robustness by preventing potential NullPointer
[ pantheon ] add hidden flag to enable account level permission
added a method to exclude the CoroutinesRoom class from instrumentation in AndroidConfigurer to prevent unnecessary instrumentation of the room functionality
modified the ` isSupported ` method to synchronize on ` HttpCallerInfo ` to ensure thread safety when accessing the context class loader
removed the setInitScript method from InitializingDataSourceFactoryBean to streamline the initialization script handling
camel - 16400 : fixed the issue that the reply manager do n ' t set the thread name correctly .
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added tagging checks for images in PdfDocument . java to ensure proper handling of tagged images during PDF processing
log4j2 - 281 add test for patternlayout . testpatternselector ( )
simonstewart : make the htmlrunner test more robust by not throw an unsupportedoperationexception
updated the return type of the ` thank ` method from ` MwPostResponse ` to ` MwThankPostResponse ` and added a
added SocketBased interface and updated ChannelEndPoint to implement SocketBased to enhance socket handling capabilities within the application
removed redundant variable assignments for revokingStore to streamline code for better readability and maintainability
add test for hql collection implicit join
updated assertions in NonVisualRegressionTest to normalize expected and actual values using system line separators to ensure consistent line endings across different operating systems
replaced references to ` toCommit ` with ` filesToCommit ` in ` IndexWriter . java ` and added assertions in ` MockDirectoryWrapper
removed the ` final ` modifier from several method declarations in ` BaseError . java ` to enforce immutability and prevent method overriding
added a validation check for the new percent value in ConsumeUserResourcePercentActuator to ensure it is within the range of 0 to 100 to prevent runtime
added a condition to check for old login status before showing the legacy login feature to ensure the login feature is only shown when appropriate
rename StreamNetworkThroughputBenchmarkTests class to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
updated response page logic in EditTeamPage . java to ensure proper navigation to UsersPage instead of EditTeamPage
updated debug logging message to provide clearer context on plugin initialization errors
refactor connection management logic to ensure proper shutdown of the server socket channel to improve resource management and prevent potential resource leaks
refactor Rocket class to improve code readability and maintainability
extracted the logic for creating dynamic partition specifications into a separate method ` createDynPartSpec ` to improve code readability and maintainability by reducing dup
apps - 2892 make round half up factor configurable
added ` visitDirectory ` method to ` JarDirectoryStep ` and ` DirectoryTraversal ` classes to handle directory entries to ensure that jar entries
added a new class JWKSetEditor to handle JWK set parsing to enable dynamic setting of JWK values based on provided text
refactor finish methods in OrrsBlockTreeTermsWriter and BlockTreeTermsWriter to use PendingTerm instances instead of BytesRef objects to improve
truffle : fix classnotfoundexception when tracethrowable be use .
changed the default value of ` fetcher . threads . per . host . by . ip ` from ` true ` to ` false ` in ` Fetcher
updated conditional logic in StatementUtil . java to ensure correct assignment of timeToLiveOfQuery based on queryTimeout to improve clarity and correctness of timeout
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and updated genPath resolution logic in HaskellGhciRuleIntegrationTest . java to ensure
refactor ReplicaPosition class to improve code readability and maintainability
bug cs - 13939 : do n ' t schedule stats update if initial delay be negative .
updated animation interpolators to use a constant FINAL _ FRAME to improve code readability and maintainability by avoiding magic numbers
adjust navigation bar height based on display density to improve visual consistency
added a new module - info . java file for the HTTP3 server module to define module dependencies and improve code organization
refactor variable name from " myJsonObj " to " my _ JSON _ OBJ " in JsonTest . java and JsonType . java
removed unnecessary conditional checks for the context variable in ResourceResolverBean . java to improve code readability and reduce redundancy
[ hotfix ] [ doc ] remove unnecessary optional from checkpointconfig
updated the parameter type of ` reportInnerClassReferences ` from ` TypeElement ` to ` Element ` in ` InnerClassesTable . java `
updated the command string concatenation for " test . tool . vm . opts " to include an empty space to ensure proper formatting of the VM options string
replaced FluentIterable with Java Stream API to improve code readability and leverage modern Java features
do n ' t export dubbo register url if not in jvm ( # 1078 )
when otr be disable , end all session .
added new properties for node label outline size , transparency , and color in ` PreviewProperty . java ` and ` NodeLabelRenderer . java `
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
added a boolean parameter to the Win32FontManager class to enable font management functionality
added null check and cursor setting in TreeVisitor . java to ensure proper cursor handling and prevent potential NullPointerExceptions
[ jdt ] use ierrorhandlingpolicy in jdtbatchcompiler when no classpath be available
added content alignment and text anchor properties to LabelBlock class to enhance layout flexibility by allowing different text alignment positions
refactor Class and Parameter classes to improve code readability and maintainability
refactor methods in IndexReader class to improve code readability and maintainability
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and updated related logic in ` NetworkInterface . java ` to improve handling
updated ` fromRfc1123DateString ` to accept a ` Locale ` parameter and modified date parsing logic to include it to enhance flexibility
fix flaky test : filedownloadviaproxytest
dataes - 344 - add output _ no _ hits property to abstractpaginatedjsonqueryelasticsearch
bug 10434 : do n ' t multiply by aggregation ratio by default
[ java ] do n ' t increment workcount when election fail .
remove uncheckrun from readfilesp and streamfilesp ( # 23864 )
simplified the condition for skipping widgets in PageChangeListener . java to improve code readability and maintainability
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` HSSFWorkbook ` , and ` FileSharingRecord ` classes
added a try - catch block around unregistering invalidated sessions to handle potential exceptions to improve error handling and logging for session management
refactor CategorizationFragment class to improve code readability and maintainability
corrected a typo in the status message from " unreachable " to " not reachable " in HueLightHandler . java to improve clarity and
add a loading flag to fmlclienthandler to prevent crash .
updated return statements to use a localized bundle for millions and thousands to improve localization support for user - defined units
refactor MessagePackParser to use a switch statement for handling different data types to improve readability and maintainability of the code
added a test for querying with reserved words as identifiers in HQL and JPQL query transformers to ensure correct functionality and error handling for
add unit tests for map serialization and deserialization in MapTest . java to ensure correct handling of nested maps during JSON serialization and deserialization
added bounds checking for x and y coordinates to ensure that x and y coordinates do not fall below offset limits
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and maintainability by using a consistent naming convention
improve error message when testplan can not be find
updated method names in GeneratedEntityTranslator and JdbcManagerSupportImpl to use " getSchemaName " and " getTableName " instead of "
added null checks for argIdent in the parser to ensure argIdent is not null before adding it to parameters
updated the default protocol setting in JettyHttpComponent9 to use the configuration from scf ' s protocol instead of a hardcoded value to improve flex
volumevo : display volume be set to true by default
modified the ` version ` method to accept a boolean parameter for full or full version handling to enhance flexibility in logging messages based on the
updated the logic for retrieving the result from the ChangeLogParameters class to improve the handling of global change logs to ensure correct retrieval of the result based on
change log level of jtatransactionmanager to debug
hhh - 14501 skip test that cause exception in basicformatterimpl for oracle
reordered the assignment of socketTimeout and setSoTimeout before starting and setting the SSL handshake to improve code readability and maintainability
updated status bar calculations in multiple fragments to account for the MainActivity ' s isPopup flag to ensure proper visibility of actions in non - popup
change default chaosoracle to be final .
http : / / issues . apache . org / jira / browse / amq - 4893 - add debug log to amqresource
replaced specific imports with a wildcard import and refactored test methods in JodaTimeRangeRandomizerTest . java to simplify import statements
updated WebDescriptor . java to conditionally load XSD resources based on Jakarta EE version to ensure compatibility with Jetty EE
fix : readiness check for node be not ready
updated loop condition to use handler . endpoints instead of liveEndpoints to ensure correct endpoint retrieval from the handler
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the latest RPC version changes
added a null check for System . getSecurityManager ( ) before accessing package access checks in ObjectStreamClass and ObjectStreamField to enhance security by prevent
removed unused imports and simplified method implementations in Utils . java and XLCDCommunicator . java to improve code readability and maintainability
updated DefaultMetricsTagProvider to handle null host values and return an unmodifiable map of tags to improve robustness by ensuring a default value is returned when
danielwagnerhall : fix test to pass on window
change default level from OFF to ERROR in Launcher . java to ensure proper error handling in the application
changed member variables to final in IconNormalizer . java to ensure immutability and improve code readability
added a boolean flag ` firstCallPrepareDo ` and modified prefix method invocation logic to support conditional execution based on the ` firstCallPrepareDo
added a boolean flag ` mHasFocus ` and refactored workspace visibility logic in ` Launcher . java ` to improve code clarity
removed eager singletons from AuthWithStoreFeature and Auth classes to simplify dependency injection and improve code clarity
updated the ` incomingAssociations ` method to accept a boolean parameter for ignoring invisible associations to enhance the flexibility of the association handling logic
server : do n ' t allow capacity _ type _ private _ ip to be remove from the db if it ' s not set
improve error message for empty diagram and linux 4.6 +
refactor model resolution logic in ModelResolver and add RequiredRefFieldModel class to improve clarity and functionality of required field handling in API model
rename ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreConfigurationWatchConfiguration ` to ` CasCoreConfigurationWatchAutoConfiguration `
refactor FeatureFlags class to improve code readability and maintainability
updated UUID generation logic in ConfigStore . java and added a new test for unique identifiers in ItemUIDtoHueIDMappingTests . java to
added caching for images in TimeLineCursorAdapter and TimelineArrayAdapter to ensure images are set correctly when a picture is present
updated configuration message for compaction on full CRUD tables to clarify that compaction on insert - only tables will always run via queries
added a null check for storage path in the condition of mWaitingToSend to ensure that a valid storage path is provided before proceeding
refactor resize threshold checks to use ` checkResize ( ) ` method instead of ` resizeThreshold ` to improve code readability and maintainability
updated LDAPConnectionService . java to improve connection handling logic
deprecate aggregatedefinition # xmlattribute ( optional = true ) in favor of # xmlattribute .
removed debug logging statements from TouchInteractionService and RecentsAnimationDeviceState to clean up the code and reduce unnecessary logging clutter
added a condition to check if the class name starts with " com . intellij . rt . junit " in IntelliJ IDEA build 1
updated assertions to compare hits2 and hits3 instead of hits to ensure accurate validation of search results
added a new file LucenePackage . java to provide a utility class for LucenePackage to facilitate the retrieval of the LucenePackage class
updated sizeInBytes addition logic to account for negative sizeInBytes to ensure proper handling of sizeInBytes in memory management
updated BloomKFilter and GenericUDAFBloomFilter classes to improve estimation logic and made fields final to enhance code clarity and ensure imm
added a null check for getDrawerToggle ( ) in the onAnimationUpdate method of MainActivity . java to ensure that the drawer toggle is not null
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method in DefaultAuthenticationAdapter . java to suppress warnings related to unused parameters
added support for scanning modules in the scanning process to enhance flexibility in class loading configuration
[ biblatex ] add corporate field in biblatex export test
added error handling for core recovery cancellation in CoreContainer . java to ensure proper resource management and logging during ZooKeeper awareness
replaced direct calls to ` System . currentTimeMillis ( ) ` with a new method ` currentTimeMillis ( ) ` and introduced a new ` currentTimeMillis (
added a null check for found before invoking its methods to enhance robustness by preventing potential NullPointerExceptions
updated startup message and connection parameters in PGProperty . java to improve clarity and consistency in documentation
added trust resolver and permission evaluator configurations in SecurityEvaluationContextExtension to enhance security evaluation capabilities by ensuring proper role hierarchy and permission evaluator settings
added a check to set exponentSize to primeSize - 1 if it is zero to ensure proper initialization of the exponentSize variable
replaced direct usage of ` ocLocalFolder ` with a static method ` getUsableSpace ` in ` FileStorageUtils ` to improve code readability and
refactor ` DistinctSqlAggregation ` to use a for - each loop instead of a direct call to ` delegate ` to improve code readability and
added a test for post - login activities in UserServiceTest . java to ensure correct execution of post - login activities for a user based on successful authentication
make extractor SpanishVerb stripper configurable .
refactor CharArraySet to simplify equality checks and improve readability to enhance code clarity and maintainability
improve error message when track count cannot be set
updated ` JsBundleGenrule ` to use ` AndroidPackageable ` instead of ` JsBundleAndroid ` and refactored related tests to
updated character encoding handling in PinotClientRequestServlet and refactored string lookup logic in StringDictionary to improve compatibility with UTF - 8 characters
updated case label from " LogicalAnalyzer " to " LogicAnalyzer " and replaced integer arrays with tile icons in InstrumentsFragment . java to improve
make sure we do n ' t create the same vector instance multiple time
removed the syncMetaLeader ( ) method from CMManager . java to streamline the codebase
improve feedback question with miss response
added TestLoggingExtension import and annotation to DiagramRendererTest . java to enable logging capabilities in the DiagramRendererTest class
updated method signatures in FastResultSetHandler , BeanWrapper , ObjectWrapper , and MapWrapper to include a mapUnderscoreToCamelCase parameter to en
added VIOMI _ WATERHEER _ E1 device to MiIoDevices to support the new water heater type in the system
refactor SSL session handling to improve code readability and maintainability by reducing redundancy
added a new file ` CreateNewSpreadsheet . java ` that creates a new Excel spreadsheet example to demonstrate how to create Excel sheets
polish ` ` make ttl and keyprefix configurable ' '
updated content URI handling to use CONTENT _ URI _ NO _ NOTIFICATION instead of CONTENT _ URI to improve clarity and prevent notifications during content
updated the test version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to reflect the latest build release
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` to ensure thread safety across threads
added a condition to check if the character is a closing angle bracket before processing to ensure proper handling of angle brackets in the code
removed String . format from Workspace . java to simplify code and improve readability
added import for ` Scope ` and updated UI message when no validation errors are found to enhance user experience by providing feedback when no validation errors are found
refactor IntegrationTestContextLoader to improve resource loading and context configuration to enhance integration context management and ensure proper resource loading based on application context
updated scroll handling logic in Component . java and Container . java , and modified method calls in JavaSEPort . java to improve responsiveness to scroll events
updated conditional check for UUID class in RamlType . java to ensure proper handling of UUID type validation
added a new class ` ClientStat ` and updated ` StatsService ` and ` DefaultStatsService ` to use ` ClientStat ` instead of
updated expression handling in CellContentConverter . java to replace multiple instances of " $ 1 " and " $ 2 " with " $ type " to ensure
simonstewart : make the test more tolerant , so that it do n ' t fail on window
mondrian : fix typo find by codespell on fossies . org
added thread dump logging and improved error handling in ProcessTools . java and CustomLauncherTest . java to enhance debugging capabilities and ensure proper
remove embed image test for now
added a check for the presence of a slot before converting the store type to ensure conversion only occurs when there is a slot for the store type
refactor data handling in ContainerMediaChunk and InitializationChunk to improve clarity and maintainability of the code
replaced direct instantiation of IndexWriterConfig with a utility method to improve code readability and maintainability by reducing redundancy
tika - 4892 -- tika - 4892 , tika - 491 , tika - 491 , tika
added handling for " package - info " comments in DocLint to improve error reporting for unexpected package - info comments
added support for import commands in DataImportHandler and DataImporter classes to enhance functionality by allowing specific commands in the import process
added a test to verify that inner classes are not modified when the ` ignoreDefinition ` flag is set to true to ensure that inner classes are not modified
removed import of android . util . Log in JettyService . java to streamline dependencies and improve code clarity
updated checkItemPlacement method to accept a list of workspace screens to enhance functionality by allowing item placement based on workspace screens
[ java ] add / quitquitquit to jetty7appserver .
refactor the handling of multiple records in LLRealtimeSegmentDataManager to improve clarity and maintainability of the code
added a check to skip processing on Windows systems to ensure that specific display names are excluded from processing
added error dialog if the protocol provider can not be find .
replaced ` getRegistry ( ) . getRegistry ( ) . getRegistry ( ) . getReaderContext ( ) . getReaderComponent ( bean ) `
changed the parameter of the drawBitmap method from ' left ' to ' null ' in FastBitmapDrawable . java to ensure compatibility with the updated drawBitmap
updated date formats in MeitrackProtocolDecoder and TotemProtocolDecoder to use lowercase ' yyyy ' and ' yy ' instead of uppercase ' yyyy '
changed method access modifiers for ` getFontPath ` and ` getPlatformFontPath ` methods in ` SunFontManager ` and ` X11FontManager
mark multiple instances of EnhancedRandom as deprecated to indicate that these classes are outdated and should not be used in new development
replaced ` ReachedMaxSizeException ` with ` ExecutionException ` in ` ClientMapStoreTest . java ` and added assertions in ` ClientMapStoreTest
add a configuration option to keep empty sentence
added error handling for artifact subdirectory creation in MavenArtifactFetcher . java to improve robustness by throwing an AssertionError when the artifact directory creation fails
removed the ` IDELazyTreeLoader ` class and updated return statements in ` JavaLanguageServer . java ` and ` JavaCompilerService . java
fixed npe in directagentattache when resource return null
refactor sendEmail method to throw MessagingException instead of MessagingException to improve error handling for sending email messages
add miss package - info . java for pipeitemsobsidian and pipeitemsobsidian
updated date parsing methods to accept a locale parameter to enhance flexibility in date formatting based on different locales
added functionality to include decals in storage options to allow users to choose whether to include decals or not
updated ` generateDocumentation ` method to include a ` null ` parameter in the ` generateDocumentation ` method to ensure compatibility with the latest API changes
updated the ` HiveProtoLoggingHook ` and ` TestHiveProtoLoggingHook ` classes to improve performance logging by using dynamic queue names instead of
corrected the spelling of " Solr " in log messages to ensure consistency and accuracy in log output
updated class file version check to include major version to ensure accurate validation of class file version for compatibility
added a new test class ` LdapPasswordAuthenticationTest ` to validate LDAP password authentication to ensure proper functionality of LDAP password authentication in the application
updated import statements in TaskCompiler . java to replace OrcInputFormat with BasicStatsNoJobTask and modified conditional check to use BasicStatsNoJob
fix nullpointerexception when save - all be enable ( # 4722 )
refactor VisibleAdvance class to improve code readability and maintainability
fix ( kubernetes - client - api ) : do n ' t reconnect when start informer
updated condition in EdgeDataTable . java and NodeDataTable . java to include dynamic number column checks to ensure proper handling of numeric columns in sparklines mode
added null checks for groupId and artifactId , and improved code formatting in RawPom . java to enhance code readability and maintainability
added a null check for apiInfo in V2HttpCall . java to ensure safe assignment of api to avoid potential NullPointerExceptions
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization to enhance maintainability and readability of the code
added shader loading and destruction methods to FlameRenderer and PhotoPanel classes to improve resource management and debugging capabilities
added a new context menu item to the InsnListEditor and modified the scene initialization in FxWindow . java to enhance user interaction by allowing
added a check to prevent index out of bounds errors in CSS parsing to enhance robustness by preventing index out of bounds exceptions
added a check for the " isDecorated " property in UIServiceImpl . java to enable or disable the look and feel based on application properties to
removed unnecessary ' this ' keyword from SQL query in HostRoleCommandDAO . java to simplify code and improve readability
updated F2 _ TEST and F6 _ TRANSPONDER _ TEST _ REPLY and F6 _ TRANSPONDER _ TEST _ COMMAND
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and logic flow to enhance swipe handling logic to ensure correct task navigation based on
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to support color storage functionality in the application
refactor String class to improve code readability and maintainability
updated logger initialization across multiple Java files to ensure consistent logging approach across the application
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to retrieve global entries from the map to enhance functionality by allowing
added multiple assertions for the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method operates correctly
[ hotfix ] [ test ] migrate cudfiltertest to junit 5
updated path separator handling in JavadocReport . java to ensure compatibility with different operating systems
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance level to allow the method to be accessible from other classes
added assertions to ensure fields exist in the metamodel before accessing them in InheritanceTest . java and changed field access in TestUtil . java to
remove conf parameter from Outlink constructor across multiple parser classes to simplify outlinks initialization and improve code clarity
removed the ` LexicalContext ` parameter from the ` ensureUniqueNamesIn ` and ` copyFinally ` methods to simplify method signatures and improve
removed unused imports and modified return statement to include empty modifiers to improve code clarity and ensure proper handling of type expressions
fix testng ant task to work on window
removed conditional logging for unsupported root input in HiveCardinalityPreservingJoinOptimization . java to streamline code and reduce unnecessary complexity
improve error message when registry entry can not be find
removed duplicate assignments for x3 and y3 in Intersector . java to improve code clarity and maintainability
added default methods for SBE decoding and limit handling in MessageDecoderFlyweight to provide a placeholder implementation for future version compatibility
refactor ` ElasticsearchContainerTest ` to use a constant for the ELASTICSEARCH version to improve code readability and maintainability by
peermessage . parse ( ) should not copy the entire byte array for torrent
[ geos - 10641 ] add version id to cluster definition
camel - 14284 : camel - ftp should use source code generate configurer to avoid reflection configuration .
[ zeppelin - 10751 ] fix npe in zeppelin - server . xml after zeppelin -
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified ` code . newLocal ( v ) ` to
added a check to return early if basic constraints are - 2 in ForwardBuilder . java and created a new class BuildEEBasicConstraints . java
added database initialization logic for JDBC postgresql DAO in JdbcPostgresDAO to ensure compatibility with PostgreSQL 9.5 and above
updated WebSocket and AbstractWebSocketConnection classes to enforce a minimum buffer size requirement and improve error handling
lucene - 4892 : fix npe in segmentreader . undeleteall
added null checks for scopes in ClientRegistration and updated test cases in ClientRegistrationTests to ensure that scopes are not null before proceeding to avoid potential Null
added null checks for orderBy before adding it to the expression to avoid potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t delete snapshot on kvm when vm be down
added debug logging for Hive log initialization to improve traceability of the initialization process
added a check for non - empty tasks before processing in AssetManager to ensure tasks are not empty before proceeding to avoid potential NullPointerExceptions
change return type of delete pubnode method from void to boolean .
add support for ` ` id ' ' and ` ` fromtype ' ' property in time search .
improve error message when code 128 or code 39 barcode be empty
replaced TreeSet with LinkedHashSet for storing CipherSuites to maintain insertion order
replaced direct control characters with a dedicated method to improve code readability and maintainability
update SqlProviderSqlSource to handle both String and CharSequence return types and modify SqlProviderTest to improve error handling for multiple SQL provider methods
added null checks for aliasChildren in InternalMNode . java to ensure safe access to aliasChildren and prevent potential NullPointerExceptions to enhance robustness
added a method to calculate the layout transition offset for a specific page index in PagedView . java and updated scroll delta calculation in Workspace . java to
renamed the variable ` synthetic ` to ` pruned ` and updated related method calls to improve clarity and consistency in variable naming to enhance code
added accessibility to the method in WidgetInterceptor . java to enhance security by ensuring the method is accessible
added a condition to check if the field ' s raw name is not " database . server . id " before setting it as a literal initializer to ensure
bump window to 5.0 . 0 . 3163 . 100 Safari / 537 . 36
added a new menu item " LooksFrame . 28 " to the popup menu to open a specific web interface to enhance user experience by allowing access to
refactor HandleGetter to use a local variable for the actual value and update related statements to improve code readability and maintainability by reducing
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ test ] improve logging in queue
do n ' t call loadBattlePassManager ( ) in favor of call before avatar postload
updated Docker image configuration in PortForwardingContainer . java to ensure compatibility with the latest SSHD image version
added a large array and forced garbage collection to optimize memory usage during testing
updated log name checks and added logging statements in StdErrLog . java and StdErrLogTest . java to enhance logging functionality and improve test coverage
fixed - rremoteservice . getremoteserivce ( ) method do n ' t return remoteserivce # getrequestname (
added ` isSelected ( ) ` and ` setSelected ( boolean b ) ` methods to the ` MultiButton ` class to enhance button selection functionality
updated the Intent reference from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to ensure the correct navigation from NextUpActivity to Next
[ hotfix ] fix checkstyle violation in brokercontroller
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection handling to improve connection management and ensure proper resource cleanup
refactor background color retrieval to use a utility method to improve code readability and maintainability
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
added multiple type adapter registrations in ToolingApiLauncher . java to enhance type adapter registration for various artifact types
corrected the order of parameters in TestPayloadCheckQuery . java to ensure the correct representation of parameters in the code
refactor ConsoleReader to simplify character writing and drawing logic to improve code readability and maintainability
added functionality to display the user ' s context in the command execution log
rename modulesupport . test to org . graalvm . compiler . api . test to avoid confusion
[ hotfix ] remove unused slotsharinggroup constructor
do n ' t use java9 specific stream .
updated texture paths and music volume from " data / wheel . png " to " data / sys . png " and modified song duration from 22 to 1
added unregistering and unregistration methods for mCloseSystemDialogsReceiver in the Launcher class to ensure proper cleanup of system dialogs functionality
updated import statement for Cluster in HostsRemovedEvent . java to ensure consistency with the correct package structure
updated ` ClientDetailsEntity ` to enable token introspection and added a new property ` allowIntrospection ` in ` ClientDetailsEntity ` ,
added HTML encoding for session attributes in HtmlSessionInformationsReport . java to ensure that session data is properly encoded for display
added new links for PhraseQuery and PhrasePrefixQuery in mmm Query . java and ppp Query . java to enhance query documentation clarity
updated condition checks to use ` isEmpty ( ) ` instead of ` size ( ) = = 0 ` for better readability to improve code clarity and
updated the logic for determining if an expression is a string literal and its parent is a string type to improve clarity and correctness in handling string concatenation to
changed method parameter types from A to Object across multiple classes to improve type safety and consistency in type usage
updated import statements and changed the package of ThrowingFunction from lambda to exception to improve clarity and specificity of the exception handling mechanism
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods in ` AppPreferences ` and ` PreferenceManager ` to improve code clarity and
fix ( prettyprinter ) : fix final field initialization in constructor ( # 2451 )
updated BitmapDrawable initialization to use Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s bitmap handling
renamed methods and variables in DutchStemmer . java for clarity to improve code readability and maintainability
updated PageMarkerResources to use the correct icon resource for the current page indicator
added a reinvocations variable and updated string concatenation for backups completion status in BasicInvocation . java to improve clarity in log messages to enhance
updated calculations for topPadding in DefaultLookAndFeel . java to ensure correct vertical alignment of text elements in the UI layout
added a break statement in the Recognize . java file to improve control flow and prevent fall - through behavior
added haptic feedback functionality for home screen lock in multiple classes to enhance user experience by providing haptic feedback during touch events
refactor formula handling in ExcelBatchReader and add a new test for text formula in TestExcelFormat to improve code clarity and ensure correct
fixed bug 1465501 - immutablefield no longer report a warning for assignment in anonymous inner class
added a private ` userAgent ` field and updated user agent retrieval logic to ensure the user agent is dynamically set based on application settings
added a required attribute to the XmlAttribute annotation in multiple Java files to ensure that the data format is mandatory for proper functionality
changed log level from info to debug for file not found logging to reduce log verbosity and improve performance
rename the test class from QueueTest to QueuedPipeTest to clarify the purpose of the test class
replaced server version check with a method call to getUniqueID to improve compatibility with different server versions
camel - 14284 : camel - core - optimize to avoid reflection
added vertexColor property and modified vertex color handling in PShape3D . java to enable dynamic color updates based on vertex color settings
updated ` printForeignKeys ` method to use ` R ` instead of ` ColumnReference ` and modified related logic to enhance type safety and
replaced Shadow . extract ( ) with matrix . getValues ( m ) in ShadowMotionEvent . java to simplify code and improve readability
changed package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck . parser
refactor class handling logic in GroovyEngine . java to simplify class retrieval and improve code clarity
add hawtio - plugin - context and hawtio - plugin - configmanager to brandingservlet .
removed redundant print statement for command output in NativeCodeGenerator . java to streamline output for clarity
replaced multiple calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with a single call to ` fireChangeEvent ( ) `
added unit tests for the ` hasCause ` method in ` ThrowableAssert _ hasCause ` to ensure that the ` hasCause ` method behaves as expected
removed duplicate flattenName calls in AutomaticDependencies . java to streamline code by eliminating redundancy
updated variable name from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to improve code clarity by using a more descriptive variable name
simonstewart : add marionette test for firefox profile
added a description property and associated methods in Route , DefaultRoute , ManagedRoute , ProcessorDefinition , RouteDefinition , and RouteDefinitionTest classes to
refactor JavacTreeMaker class to improve code readability and maintainability
added weight setting for edges in ImporterCSV . java to ensure edges have a defined weight
bug cs - 13428 : add log for tariff cost per month
updated SQL query to include the ' adsrc ' column in addition to the existing ' adrelid ' column to enhance the accuracy of
improve error message when binarized sentence be miss
updated the string representation of the User class to include more detailed information about the user for better debugging and logging
improve error message when message body be null
[ hotfix ] [ runtime ] remove unused executionvertex parameter
of - 22 : roster : allow user to subscribe to a roster group if they be not a member of a roster group .
added the " maven . test . classpath " reference to the project ' s classpath in AbstractJRubyMojo and removed it from Cucumber
updated method handle assertions to use ` mtype ` instead of ` rtype ` in ` MethodHandleImpl . java ` and added a new test
added imports for StopFilterFactory and NamedSPI in multiple filter factory classes to enhance functionality and documentation clarity
updated width and height checks from " > " to " ! = " for placeholderImage dimensions to ensure dimensions do not exceed placeholderImage dimensions
added a condition to exclude " META - INF / " from class names in addition to " META - INF / " in addition to " .
added final modifiers to parameters in createImageToFileSystem and createImageToStorage methods to improve code clarity and ensure proper task execution based on
updated assertions and log message formatting in StackWalkerTest . java to improve test reliability and clarity
changed the visibility of the ` addViewportJob ` method from protected to public to allow access to the method from other classes
removed partition parameter from the buildFlow method across multiple test files to simplify the flow building process by eliminating unnecessary partition handling
updated server configuration settings for the server to ensure the server does not continue running on shutdown
added null and empty check for block in NodePathsConvertOperator and improved child traversal logic in SchemaQueryMergeOperator to enhance robustness by handling
send total harvest time to ice agent ( if available )
updated FPS , count , and limit drawing parameters in ParticleEditor . java to improve particle rendering accuracy and performance
added handling for the " hadoop - env " configuration in UpgradeCatalog240 . java and updated related tests in UpgradeCatalog240Test . java
added a transparent background color to the SvgViewerFactory to enhance visual clarity by allowing transparent backgrounds
updated imports and annotations in ShadowKeyguardManagerTest and ShadowKeyguardManager to ensure compatibility with minimum SDK version requirements
updated the ` containsExactly ` method to accept a varargs parameter instead of a fixed value to enhance flexibility in checking for array containments
updated Limit method to refill greedy capacity and added a check for non - empty key to enhance flexibility in bucket configuration handling
added documentation for german language
updated transformation logic to include post - execution hooks for materialized views to enhance query optimization by ensuring lineage evaluation during execution
handle noclassdeffounderror gracefully
refactor ` TraceWebFilter ` to use ` SpanAndScope ` instead of ` Span ` for span management to improve code clarity and
updated exception handling in AbstractUpdateCommandStep to improve robustness by ensuring null exceptions are handled gracefully
updated SolrServerException constructor to include the base URL to enhance error reporting by providing context about the Solr server being used
updated the landscape condition in HSSFPrintSetup . java to correctly handle print setup conditions
added a null check for the variable ' o ' in the return statement to prevent potential NullPointerException when ' o ' is null
added validation for argument names in ArgDesc . java to ensure that invalid argument names are handled appropriately
added support for a background location listener in AndroidLocationPlayServiceManager to enhance location updates management by integrating background location handling
updated condition to check for GL _ POINTS instead of non - GL _ POINTS to ensure correct handling of primitive types in MeshBuilder
trufflestring : improve performance of string comparison
added command list functionality to the ComboBox component
nifi - 1892 : fixed issue where alias name contain forward / back slash .
updated ZkCLI to use zkcli . sh - zkhost instead of zkcli . sh - cmd for ZkCLI . java to
replaced direct equality checks with method calls to improve code readability and maintainability
added a conditional check for ` remoteGrpcStatus ` before posting a message in ` LocalFallbackStrategy . java ` to ensure that a message is only
refactor method signatures in XYItemRenderer and XYPlot classes for consistency to improve code readability and maintainability
fix entityid be n ' t set for entity tick in chunkmanager
added a private static method ` getErrorString ` to ` GLSurfaceViewAPI18 ` for handling various EGL error codes to improve code readability
add a method to get the list of supported locale . jm - 10
http : / / issues . apache . org / jira / browse / amq - 3892 - fix unit test for rfc2616
added tohelperlist ( ce ) in construction .
added handling for the " [ " escape sequence in GlyphLayout . java to ensure proper processing of the first and subsequent escape sequences
added security permissions for setting the context class loader in Transport . java and TCPTransport . java to enhance security by ensuring proper context class loader
updated the ` populateDirectoryList ( ) ` method to handle null folder cases and added a null check for ` folder ` in the ` ReceiveExternalFiles
fix nullpointerexception in testng
removed debug logging in BarrowmanCalculator and modified the calculation in TubeCalc to improve performance by reducing unnecessary log output
updated column assignment logic in TimelineControllerImpl . java to handle additional cases for Node and Edge tables to ensure proper retrieval of columns based on their types and
added a method to register extra components in BaseBrokerStarter to enhance functionality by allowing registration of additional components
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` to address bug 458 related to
peergroup : do n ' t add peer that do n ' t support witnesses
reduce memory consumption by the builder .
updated configuration handling for ` configNodeSimpleConsensusSnapshotTriggerThreshold ` to utilize ` RatisConfig . RatisConsensus ` to
updated multiple Java files to improve code consistency and readability across the project
added a check for the ManagedService annotation before unregistering and registering the JMXHelper to ensure proper handling of the JMXHelper instance to avoid potential
tika - 4892 -- add support for non - unicode entry name in packageparser
add test case for problematic division with modulo .
added methods to lookup generic interface and superclass in TemplateRegistry to enhance template lookup functionality and improve type safety
increased the buffer size from 512 to 1028 in ByteArrayOutputStream . java to accommodate larger buffer sizes
improve error message for unsupported language
replaced byte array allocation with a loop that reduces the number of byte transfer attempts to improve efficiency to optimize memory allocation for better performance to enhance efficiency by
fix npe in select avatar menu
refactor error handling in SemanticAnalyzer to check for null source before throwing a SemanticException to improve clarity and prevent potential NullPointerExceptions
update skeletonrenderer to use correct skeletal mesh scale
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes and set it in
added ComponentScan annotation to SpringWebConfig . java to enable the use of component scanning functionality in the application context
removed the getAccount ( ) method from UserListItem . java to streamline account retrieval from the user list
added tests for package installation and updated processName assignment logic in ShadowPackageManagerTest and ShadowApplicationPackageManager to ensure correct handling of application package
refactor AvailableSettings class to improve code readability and maintainability
added fields for TransactionCapsule and ReceiptCapsule in TransactionTrace . java to enable initialization , execution , and finalization of transaction traces
add an option to shuffle member list ( # 18902 )
replace ` Text ( ) ` with ` CrawlDatum ( ) ` in ` SegmentReader . java ` to enhance data handling by using a more
refactor JsonDeserializer class to improve code readability and maintainability
updated configuration properties in TsfileDBConfig and changed fetchSize to ThreadLocal in QueryProcessExecutor to enhance thread safety and ensure fetchSize is
corrected a typo in the error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java " to
removed the import of ExecutionContext in TaskletStep . java to streamline dependencies and reduce unnecessary dependencies
initialize title variable to an empty string to avoid null pointer exceptions when title is null
fix npe in asynchttpclient when no body be present
mark embed server instance a deprecate to mark it a deprecate
fix npe in jabrefframe . registermacevents ( )
renamed the test class from SecurityTokenServiceAuthenticationMetaDataPopulatorTests to SecurityTokenServiceTokenFetcherTests and updated its usage to improve clarity and
added a return statement to ensure the method correctly handles Enum types
changed the visibility of hideUnprivilegedObjects from private to private final to ensure that hideUnprivilegedObjects cannot be modified after initialization
change log level from info to fine for threaded acoustic scorer
added support for Android Q in IOUtils for saving video gifs to ensure compatibility with Android Q devices
act - 1771 : fix test to work with variableinstanceentity
refactor multiple Java classes to improve code organization and maintainability
simplify code by use computeifabsent
hbase - 27875 remove unused dataoutputoutputstream class ( # 27877 )
updated test cases in TestAcidOnTez . java to adjust bucket ID values to align with new schema requirements
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity for class enhanced logging
added a method to get the default provider name and updated provider names based on the provider type to improve provider identification and ensure compatibility with different provider types
added support for processing ` Captor ` annotations in ` MockitoBeforeTestNGMethod . java ` and ` MockitoBeforeTestNGMethod . java `
added checks to ensure class names , methods , and test methods are not empty in TestSuiteBuilder . java to improve error handling and prevent runtime exceptions
updated import statements and modified prefix checks in GroovyAutoComplete . java , GroovyAutoComplete . java , and GroovyCompletionTest . java to
use graphhopperosm instead of graphhopper
danielwagnerhall : fix handling of http client with retries .
changed the visibility of mHideSysUiScrim from final to non - final and added functionality to manage top shadow visibility based on user preferences
added cancellation functionality to OkHttpCall and modified related test methods to ensure proper resource management and error handling during call execution
refactor swipe handling logic in WindowTransformSwipeHandler to improve clarity and logic flow to enhance swipe handling logic to ensure correct task navigation based on
updated RequestMatcher interface to extend RequestMatcher to ensure compatibility with Spring Security ' s request matcher
updated the list of conditions in DeferredAttr . java and added a new abstract class ImplicitLambdaConsideredForApplicabilityTest . java to enhance
improve error message when j2kt be not support
added unit tests for the ` applyQualifiers ` method in ` DeviceConfig ` and implemented the ` setDimensions ` method in ` DeviceConfig `
replaced instances of ` LocalDateTime . now ( ) ` with ` new Timestamp ( System . currentMillis ( ) ) ` and removed reflection - based method
updated the icon reference from ` logo ` to ` ic _ launcher ` in ` RootCursor . java ` to improve clarity by using a more desc
added content text to the error builder in FileUploader . java to enhance user feedback by displaying error messages
refactor ConcurrentHashMap to improve thread safety and performance in concurrent scenarios
added adaptUserTrades method to AbucoinsAdapters and updated AbucoinsTradeServiceRaw and AbucoinsTradeService to use it
updated plot validation logic to simplify plot handling and improve code clarity
simonstewart : allow htmlunitdriver to use proxy if available
added support for handling VARBINARY data type in BlobType to improve data type handling for VARBINARY definitions
updated cookie version handling to ensure compatibility with different cookie version requirements
added synchronization to the array type mapping logic to ensure thread safety when accessing shared resources
replaced ` Vertx ` with ` ContextInternal ` and refactored the ` checkContext ` method in ` InboundBuffer ` to improve type safety
added a timeout test for dead servers in LdapTimeoutTest . java to ensure proper handling of timeout scenarios in LDAP connections
updated usage message from " UniocdeData . txt " to " UnicodeData . dat " in CharacterName . java to clarify the usage
set operation name for inout header in cxf test
refactor multiple Synth UI classes to improve code organization to enhance maintainability and readability of the codebase
added support for BoosterSet in ComponentAssemblySaver and updated list parameters in BoosterSet to ensure proper handling of BoosterSet instances to enhance
added proxy support for jabref
replaced occurrences of ` MetricsUtil . BLOCKCHAIN __ FORK _ COUNT ` with ` MetricsUtil . BLOCKCHAIN _ FORK _ COUNT `
replaced throwing an InternalError with returning false to simplify error handling for compile stub invocation
hbase - 23748 addendum fix checkstyle violation in testcputil
removed chunked transfer handling from NettyRoutingFilter to simplify the request processing by directly using the HTTP client ' s request method
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure that attributes are reset before processing new patterns
added a polling period parameter and refactored verification logic in VerificationAfterDelayImpl and After classes to enhance recovery handling and improve error management
added compaction handling in session state management to ensure correct masking behavior based on session state changes
[ zeppelin - 10782 ] fix zeppelin interpreter process to work on window
hbase - 23748 addendum fix checkstyle error in hbase - admin and hbase - testthriftserver
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to known issues
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , ` Renderer ` , and ` Renderer
added a try - finally block to ensure resources are released when XML parsing fails to improve resource management and prevent potential memory leaks
set header buffer to null in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and updated ` Java17TypeSignatureBuilderTest ` to use it to
added a null check for the ResultSet object before closing it to avoid potential NullPointerException when closing the ResultSet
update driverVersionMajor and driverVersionMinor from - 1 to 10 and set their values to 6 to ensure compatibility with the latest database schema
fixed bug 137979 - usestringbufferlength no longer report false positive for empty string literal
removed logging of error messages in RemoteSparkJobMonitor to simplify error handling
modified the createDb method to return a Connection object instead of void to ensure that the database connection is closed after use
add miss license header
hbase - 27875 add configuration to disable off - peak compaction in hbase . hbase . compaction . max . size . off
added JSON parsing for deposit addresses in BitstampDepositAddress . java and created corresponding unit tests in DepositAddressJSONTest . java to
replace IllegalStateException with an IllegalArgumentException for buffer capacity exceeded to improve error handling by providing a more specific exception for better clarity
updated the method call to use ` toAbsolutePath ( ) ` instead of ` linkPath ` to ensure the correct path is used for processing deleted directories
replaced ` Event ` with ` MetricsEvent ` in ` InvocationFinishedEvent ` and updated related methods to use ` InvocationType ` instead of ` Operation `
refactor network interface retrieval to ensure that only valid multicast interfaces are processed
replaced the existing check for valid checksums with a loop that checks for " 1 : any " to improve code readability and maintainability
added a clone method to BufferedChecksumIndexInput that throws an UnsupportedOperationException to signal that the clone method is not supported in the current implementation
updated equality checks in Circle class to include radius parameter to improve accuracy of circle calculations
updated frequencyBand assignment logic in P25Channel . java and added an override annotation in P25ExplicitChannel . java to ensure that frequencyBand is only
replaced ` tapSquareSize ` and ` inTapSquare ` with ` tapRectangleWidth ` and ` tapRectangleHeight ` in ` Gesture
turn off replication on write by default
added a " lastFillTime " query parameter to the CryptoFacilitiesAuthenticated class and utilized it in the getCryptoFacilitiesFills method to
added ` getDelegate ( ) ` and ` getDelegate ( ) ` methods to ` TraceCallable ` , ` TraceRunnable ` , and `
refactor error handling in FileActivity and FileDisplayActivity to improve clarity and maintainability of error handling logic
added a method to check if a connection stream is writable in multiple classes to enhance functionality and error handling for connection stream operations
added a boolean parameter to the method call to enable asynchronous processing
removed alignment parameters from TableCell constructors in BaseTextFormattingHelper . java and TableCell . java to simplify TableCell initialization and improve code readability
added a new file ` TracingAutoConfiguration . java ` to implement auto - configuration for tracing in the application to enhance tracing capabilities and
fix bug in submission . addcontent ( )
refactor getPrunedQueryableSegments method to accept listOfQueryableSegments as a parameter and adjust segment handling logic to improve code clarity and maintainability
refactor VertxBufferTest class to improve code readability and maintainability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5782
changed the access modifier of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation and ShowViewsOperation to improve code clarity and reduce unnecessary dependencies
added a new ` MongoDataIntegrityViolationException ` class and updated ` MongoTemplate ` to utilize it to improve error handling for MongoDB
[ hotfix ] [ runtime ] return job completion future in jobcoordinationservice
refactor ` bitsToHumanReadable ` method to utilize a ` mimeType2HUmanReadable ` array for different image types to enhance
updated merge policy initialization in TestUpgradeIndexMergePolicy and added noPathologicalMerges method in TestMergeOnFlushMergePolicy to streamline merge
added a check to return early if overview state is not enabled to improve performance by avoiding unnecessary processing when overview state is not enabled
updated error log message for CPU binaries not being run on a CPU without specific instructions to provide clearer guidance on CPU without CPU requirements
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter to enhance flexibility in loading setting models from external resources
added null checks for input fields , TermsEnum , DocsAndPositionsEnum , and LeafReader in FilterLeafReader . java to ensure input is
added key size provider to defaultsecretkeysizeprovider to ensure key size be valid .
updated exception handling in NetSocketReader . java and removed redundant constructors in SoftEndOfStreamException . java to improve clarity and consistency in error reporting
removed javax . inject . Inject annotations from multiple Java files to streamline dependency injection and improve code clarity
updated assertions in ` BundledDistributionTest . java ` and added database user assertions in ` PostgreSQLTest . java ` to enhance test coverage and
[ hotfix ] [ configuration ] make pipeline . name configurable
updated scale calculation in OverviewState . java to account for two - panel layouts to ensure correct scaling based on the device ' s layout requirements
updated IcePlainsBiome class to extend SnowyBome and modified its populators to use a new PopulatorTree to enhance
removed the timezone parameter from multiple method calls in DataUpdateManager and StorageUtils to simplify method signatures and improve code readability
[ j2kt ] add ` ` isqualified ' ' flag to ` ` thisreference ' ' to indicate whether the type be qualify .
[ xhamster ] fix xhamster ripper url
fix npe in glowworld . getentities ( )
mondrian : make oracledialect . gettablename ( ) respect schema parameter
fix ` ` pathpart ' ' to ` ` part ' '
added a new parameter ` numberOfAllFiles ` and modified constructor and methods in ` FileMenuFilter ` , ` FileListListFragment ` ,
[ java ] : fix term offset calculation in network publication .
fix javadoc for guildupdate owner event
updated inPortalTicks logic in Player . java and Entity . java to adjust inPortalTicks based on creative and entity type to ensure inPortalTicks
updated layout calculations and added compressed handling in ClusterMonitorTileSkin . java to improve layout consistency and support for compressed data display
refactor multiple codec template classes to improve code organization and maintainability
changed the calculation of ` lengthDataBits ` and ` numberQuartet ` from ` int ` to ` long ` for improved precision to ensure
removed unnecessary null check for the renderer in RendererConfiguration . java to simplify the condition for null handling
server : do n ' t allow scale disk offering with custom service offering ( # 4946 )
updated import statements in HitbtcAdapters . java and modified builder pattern in Order . java to improve code clarity and ensure proper usage of Limit
updated variable names from idleCount to consecutiveIdleCount to improve clarity and consistency in naming conventions
[ hotfix ] [ jruby ] fix typo in jruby scripting
updated the handling of the displayName variable in ConfigCategory . java to ensure consistent variable usage and improve code clarity
updated condition in ParticipateAssetIssueActuator to include a check for non - negative values of preciseExchangeAmount to ensure proper handling of expan
remove infinite loop in FeedUtils . java to improve code clarity and maintainability
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to validate HDF4 file reading functionality to ensure
[ flink - 6092 ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added methods ` quietCloseAll ` and ` quietCloseAllAll ` to ` CloseHelper ` for closing multiple AutoCloseable instances to improve resource management
replace occurrences of ` posBtn ` with ` R . string . common _ yes ` in the ` RemoveFileDialogFragment . java ` to improve clarity
added a null check for source dimensions before drawing the image to avoid potential null pointer exceptions when processing images
replaced ` ReflectionHelpers . callInstanceMethod ` with ` java . security . ProtectionDomain . getMethod ` for method invocation in ` UnsafeAccess . java
updated regex pattern for fqdn validation in GUIUtil . java and corresponding unit tests in GUIUtilTest . java to simplify validation logic to enhance accuracy in
updated conflict handling logic in CachedRowSetWriter . java to improve clarity and accuracy of conflict tracking
fix nullpointerexception when use api version 0.0 . 3
added a conditional check for reference equality in ReferenceMemory . java to ensure proper handling of reference instances in memory assignments
added support for handling seed file injection in the Injector class to ensure that only valid seed files are processed in the job configuration
added a condition to check if ` hideOriginal ` is true before showing the original view in ` FloatingIconView . java ` to ensure that the original
updated the calculation of maxNodes in DefaultLoopPolicies . java to ensure maxNodes is non - negative and correctly account for the maximum number of iterations
added a check for UV coordinates type support before creating texture data in CombinedTexture . java to ensure compatibility with UV coordinates in texture coordinate handling
added error handling for empty polynomial values in multiple classes to improve robustness by logging warnings and avoiding null pointer exceptions
camel - 16400 : camel - tracing should use source code generate configurer to avoid reflection configuration .
updated the handling of the prefix length in the SQL update statement to use a variable for the oldPrefix length to improve clarity and maintainability of the
replaced ` addAll ` method with ` add ` method in ` convertedValsList ` initialization to simplify list creation and improve code readability
deprecate abstracttimer constructor that should not be use
added a nightly build warning message in MainWindow . java to inform users that Universal Gcode Sender is a nightly build to inform users
add option to sort response by recipient email
updated return statement in UnnecessaryThrows . java to clarify the reason for removing unnecessary throws to improve code readability and maintainability
deleted CacheApplication . java and updated references to CommonsApplication . java and ShareActivity . java to streamline caching functionality and improve code organization
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application . startService ` and ` RuntimeEnvironment . application . start
refactor StatisticsServlet class to improve code readability and maintainability
updated RuntimeEnvironment to use ResourcesManager for configuration updates to ensure compatibility with devices running KitKat and above
added a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` to manage the existence of a stack repository update link
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
fix npe when index name be null
added package imports for XML resolver helpers , reader , and reader readers in CheckPackageAccess . java to ensure proper access control for XML resolver components
rename methods from ` save ` to ` add ` across multiple classes to improve clarity and consistency in method naming
bugfix : do not replace first input for loop exit node
updated RecyclerView references from RecyclerView to WidgetsRecyclerView in SearchAndRecommendationsScrollController . java to enhance clarity and consistency in
added a check for terminal support in ConsoleReader to ensure that only supported terminal instances are processed
changed data types of ` fiveSeconds ` and ` timeAllowed ` from ` long ` to ` Integer ` and introduced time exceeded checks in `
added session validity check before flushing to ensure only valid sessions are flushed to maintain session integrity
refactor column handling logic in ChangedIndexChangeGenerator . java to improve readability and maintainability of the code
replaced Vector with ArrayList for buttons in ButtonGroup . java to improve performance and simplify button management
updated UserManagerCompat and UserManagerCompatVNMr1 and UserManagerCompatVL to use UserManagerCompatVM and UserManagerCompatVM
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to ` Database ` , ` AbstractDatabase ` , and
added maximum mismatch rules count and improved error messages in ActionGraphCache . java to enhance error reporting and clarify mismatched rules
added LockDatabaseDesc and UnlockDatabaseDesc classes for managing database locking and unlocking operations to enhance the Hive planning capabilities by allowing
updated RankingTopComponent and RankingUIModel to use setter methods for model properties to improve code readability and maintainability by reducing
added handling for disconnect messages in HandshakeHandler . java and updated log messages in NodeImpl . java to differentiate between disconnect messages and incompatible protocol
added a test method to verify deletion of storage groups in IoTDB authorization to ensure proper functionality and error handling for SQL commands related to storage
updated " Google : : Cloud : : Documen " to " Google : : Cloud : : Documen " in multiple protobuf files
updated type validation logic in ` Assertions . java ` and added methods to check for unknown variable types in ` FindMissingTypes . java ` to
added a new method ` afterClass ` and ` beforeClass ` to the ` StepScopeTestExecutionListener ` class to enhance test execution handling by
updated CountersManager to use UTF - 8 encoding and improved error handling for metadata buffer capacity to enhance code readability and ensure proper
updated logging statements in MultiSteps and SendEmail classes to use placeholder syntax to improve readability and maintainability of log output
added handling for joinKeys in JoinDesc . java to ensure proper cloning of joinKeys when they are not null
added PrincipalResolver to WebAuthnConfiguration to enhance authentication handling by utilizing a specific principal resolver
added an ` ImmutableList < Path > ` parameter to the ` addSettingsFromFile ` method and updated related test cases to enhance flexibility in
made several fields final in Oracle . java to ensure immutability and thread safety
[ hotfix ] [ doc ] disable unaligned checkpoint when rescaling
do n ' t throw unsupportedoperationexception for invalid sql
add debug log to compiletheworld .
added a check to ensure the variable is an instance of LocalVariable before proceeding to prevent runtime exceptions
added support for MySQLDatabase in CreateTableGenerator to ensure proper handling of NULL values for specific database types
added context class loader management to ensure proper context class loader handling during context class loading
added ejection delay for zero stage number in SimulationListHandler to ensure proper ejection behavior when stageNr is zero
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related methods to improve clarity and consistency in naming conventions
refactor TransactionUtil2 class to improve code readability and maintainability
updated the ` validateIssuerClaim ` method to accept an ` Optional < OAuthRegisteredService > ` parameter across multiple classes to enhance issuer resolution
refactor collection handling in ClusterState . java to improve clarity and error handling for null collections
fix text area alignment
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance flexibility in managing foreign database and schema names
[ java ] throw a timeout exception when election fail to establish leadership .
replaced static import of Shadows with a private method shadowOf in ShadowActivity . java and updated BluetoothGatt extraction in ShadowBluetoothDevice . java to
drill - 4192 : avoid npe in fileselection when selection root be empty
deprecate oninventorytick ( ) in favor of oninventorytick ( ) in forge 1.20 . 1
fix : do n ' t export war class in zip
added a null check before calling invalidateOptionsMenu ( ) to prevent potential NullPointerException when getSherlockActivity ( ) is not initialized
updated widget options handling in Launcher . java and AppsCustomizePagedView . java to ensure proper binding of widget options based on bind options to improve
added constants for EcobeeSensorThingHandler capability names to enhance code readability and maintainability by using named constants
reformatted code for consistency and improved readability in OperationSetServerStoredContactInfoFacebookImpl . java to enhance code maintainability and
added " AAPT " and " AAPT2 " environment variables in Genrule . java and corresponding tests in GenruleTest . java to
only dump access table if truffle - instrument - branches be enable .
added a null check before calling dispose ( ) on the message object to prevent potential NullPointerException when message is not initialized
changed the visibility of the db variable from private to public and added a getter for db in TronStoreWithRevoking . java to allow access
updated log warning messages to clarify that log watching is not implemented for log4j
replaced printStackTrace ( ) calls with direct failure messages in CategoryPlotTests . java to simplify error handling and avoid unnecessary stack trace printing
updated IOSImplementation . java to use a small byte array output stream and added a new SmallByteArrayOutputStream class to enhance performance and
use intmap instead of hashmap to speed up shader render
updated the connection string from " territory = en _ US " to " shutdown " in AbstractDIHJdbcTestCase . java to ensure compatibility with the
do n ' t print exchangetimestamp if it ' s null
updated the default language handling in TestHtmlTag . java and added new test cases in TestUseOption . java and TestUseOption . java
added a check for non - incomplete items before processing items in CompletionProvider . java to enhance error handling by preventing processing of incomplete items
updated command - line usage to include a timeColumnName parameter and adjusted related logic to improve clarity and functionality of the Hybrid cluster integration tests
refactor output format handling to ensure correct file extension is used based on output format type
updated conditional check for QSB enable in DeviceProfile . java to ensure proper layout behavior when QSB is disabled
fix equal ( ) and hashcode ( ) for animationlist and gltfmodelkey
added a ` _ date ` field and its setter method in ` AbstractGenerator ` , ` Generator ` , and ` HttpGenerator ` classes , and updated
replaced Adler32 with CRC32 in Store . java to improve performance by using a more efficient CRC32 implementation
bug cs - 14589 : set default value for xen . heartbeat . interval to null
added a new warning constant ` ZERO _ AREA _ FIN ` and modified geometry warning logic in ` FinSetCalc . java ` to include it
[ type : refactor ] add support for retryonconflict field in elasticsearchio
hhh - 15464 add truncate function for h2 and oracle
added error handling for memory pool not found errors in MetricUtils and updated corresponding tests to improve robustness and clarity in error reporting
added a ` useJavaScript ` parameter to the ` ensureSignedUp ` method in ` UserTests ` and improved error handling in ` UserContext `
updated error messages in ValidationTask . java to use constants instead of string concatenation to improve readability and maintainability of error messages
updated the BACKFILL path in DetectionResourceHttpUtils . java from " / generateAnomaliesInRange " to " / replay "
updated PrecompiledContracts . java to use a single DataWord ( 1 ) instead of multiple calls to new DataWord ( ) . getData ( ) to
refactor app item handling in AllAppsContainerView to improve code clarity and ensure proper badge application logic
fix : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
updated method calls in ResourceHandlerTest . java and added comments in ServletContextHandler . java to clarify the expected behavior after context initialization
removed conditional check for mDrawIdentifier in Cling . java to simplify logic for handling custom workspace identifiers
truffle : remove assertion that be n ' t need .
ignore test that do n ' t make sense
updated import statements to use the correct package for ItBitExchange to ensure compatibility with the latest ItBit library version
ww - 3840 fix npe in profile activation interceptor
made class instances of Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes final to enforce immutability and prevent subclassing
do n ' t close objectinputstream to prevent resource leak
updated type handling from " java . util . Vector " to " java . util . Hashtable " in util . java to improve clarity and
added tableNameWithType to the warning log message in RetentionManager to provide more context about the table being retentioned
added trimming of fragmentList before checking its length to ensure that only non - empty strings are processed as valid fragments
fix modfileresourcepack . getresourcepackpath ( ) throw resourcepacknotfoundexception
refactor node and edge transformer handling in PartitionToolbar . java to improve code clarity and maintainability by reducing redundancy
removed redundant condition for showing grid view in RecentsView . java to improve code readability and maintainability
replaced ` Map < String , String > ` with ` BMIViewObject ` in the ` CalculatorRestEndpoint ` and ` CalculatorService
replaced ` Comparator . comparing ` with ` : getKey ` in ` QueryCommand . java ` to simplify the method for better readability and performance
fix for haybale block not be able to render properly
refactor environment variable handling to use a list instead of a list for improved readability to enhance code clarity and maintainability by
add support for - plugin - configuration to create empty plugin property
updated null and empty check for hashTable in HashJoinBatch . java to ensure proper handling of empty hashTable cases
updated timestamp validation logic and renamed test methods in TimestampTest . java and TimestampTest . java to improve clarity and accuracy of timestamp handling to enhance
[ java ] : do n ' t share archive context in clustered service agent .
added a condition to check if the compilation context is not compiled when COMPILE _ THRESHOLD is zero and modified assertions in LambdaForm . java
added multiple test cases for various online classes including DB2 , H2 , MySql , and Oracle , and MySQL to enhance test coverage for
refactor TogglableFlag and related classes to improve default value handling and add a change listener to enhance app search functionality by allowing dynamic
updated logging statements to use parameterized messages for better readability to improve logging clarity and maintainability
added a platform check to return early if the current platform is not Android to optimize performance by avoiding unnecessary processing for unsupported platforms
use hamcrest assertion instead of junit in routestest
added new functional interfaces for BytePredicate , FloatPredicate , ShortPredicate , and ShortToLongFunction in the com . speedment . common . function package to
updated ` getSubsColor ` method to return a ` String ` instead of an ` int ` and modified the ` setSubsColor ` method
added a conditional check before completing the future to ensure deregistration only occurs when the future is complete
replaced the flush ( ) method with an output ( null ) method in AbstractWebSocketConnection . java to streamline the WebSocket connection output process
modified intent handling in LoginActivity and added a redirect flag in SignupActivity to ensure welcome activities are only launched when the " redirected " flag is
added ShadowCheckedTextView class to enhance testing capabilities for CheckedTextView functionality in Robolectric tests
make parser state serializable
added a new certificate " identrustdstx3 [ jdk ] " to the VerifyCACerts . java file to enhance certificate validation for
removed duplicate setting of TEMPDIR _ CONFIGURED in WebInfConfiguration . java to streamline context configuration by eliminating redundancy
fix for smack - 289 : wrong occupant nick in muc room
updated QuicSession and QuicSession constructors to include a context parameter to enhance session management by associating it with specific connection instances
replaced instances of ` writer . getMergeScheduler ( ) ` with ` writer . getConfig ( ) ` in ` CreateIndexTask . java `
reformatted code for improved readability and consistency to enhance code clarity and maintainability
added imports for ComputedDateValue , ComputedNumericValue , and ComputedNumericValue , and modified default value handling in AddDefaultValueChange
refactor NbtScoreboardIoService to improve code readability and maintainability
saml : do n ' t overwrite metadata if they already exist
changed the visibility of the printer variable from private to protected and refactored the creation of the printer in GraphPrinterDumpHandler . java to enhance
added BigDecimal import and updated order ' s average price calculation to improve precision in handling order amounts
updated field handling in ProjectionOperation , TypeBasedAggregationOperationContext , and AggregationUnitTests to use the target field instead of the name in
modified the logic for adding a player to the player ' s viewers to ensure that the player ' s viewers are only added if they do not
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable to improve state management and prevent null pointer exceptions
updated connection handling in SPDYClient . java to improve connection management and streamline connection handling logic
fix : fix nullpointerexception in protostuffobjectoutput # writeobject ( ) ( # 1771 )
pdfbox - 4892 : fix javadoc , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability and maintainability
ggb - 288 : do n ' t draw ax if not visible
replaced direct calls to ` setFilter ( ) ` and ` setWrap ( ) ` with ` unsafeSetFilter ( minFilter , magFilter , true
resolved - issue batch - 1272 : xml - workflow - service should not return workspace item to workspace
refactor HTTPS connection handling in CustomUrlJob . java and add a new CustomUrlTrustEverything . java file to enhance security by ensuring
use real use of g722 clock rate by default
refactor TextureAtlas class to improve code readability and maintainability
replaced the method ` getProductNameForBuildTargetNode ` with ` getModuleName ` in ` ProjectGenerator ` and added a setter method in ` AppleLibraryBuilder
[ hotfix ] [ test ] make testslot thread safe
fix : ebean - findids ( ) and ebean - findidswithparent ( ) do n ' t work with type id _ list (
updated the handling of the WebSocket response header in WebSocketServletRFCTest . java to improve clarity and ensure the response header is correctly validated
[ wasm ] make sure we do n ' t reuse the reference object in a loop .
[ type : refactor ] add ` ` ttl ' ' config option for log collection ( # 1865 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and added serialization methods in CustomPreconditionWrapper and XMLChangeLogSerializer to enhance
replaced ` QueuedThreadPool ` and ` QueuedThreadPool ` with ` HandlerCollection ` and ` HandlerCollection ` in ` DeploymentExceptionTest . java `
added exception handling for Fresco initialization and improved resource initialization in NearbyController to enhance error handling and ensure proper resource management
added null and empty check for objectName before returning it to ensure objectName is not null or empty before processing
improve error message when file could not be open
[ hotfix ] [ table - planner ] make planner and executor class constant
updated variable names and added null checks for dname to enhance code readability and prevent potential NullPointerExceptions
mark RuntimeOptions as deprecated for removal in future development
replaced byte buffer encoding with a direct string conversion for better performance to simplify code and improve readability
added a new interface ` PermissionEvaluator ` with a method to check permission permissions to facilitate permission evaluation within the application
added a new option ` ERASE _ LINE _ ON _ FINISH ` in ` BRACKETED _ PASTE ` and modified the buffer handling
fixed - masterfilesystem . getallservers ( ) method do n ' t call getallservers ( ) if server be not online
updated error handling in P2pException and related classes to use BLOCK _ SIGN _ ERROR instead of CALC _ MERLE _ ROOT _ FAILED to
refactor to use urlconnection instead of jarfile
improve error handling in ` DefaultHttpClient ` and ` FullNettyClientHttpResponse ` to catch ` Throwable ` instead of ` Exception `
replaced ` BorderLayout . center ` with ` BorderLayout . centerAbsolute ` for the spinner container to ensure the spinner is centered on the absolute position
[ hotfix ] [ network ] fix networkbufferpool # requestmemorysegments to handle interruptedexception
replaced the local variable of ` mbeanServer ` with a static variable ` newMbeanServer ` in ` TestJmxIntegration . java ` to
replaced AndroidJUnit4 runner with RetryTestRule in AbstractIT . java to improve test reliability by implementing a retry mechanism
refactor transaction handling in CallTask and QueryStateMachine classes to simplify auto - commit logic and improve code readability
updated import statements and added a new package - info . java file for Csv tests to improve code organization and clarify package structure
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser and
[ hotfix ] [ test ] fix checkstyle violation in streamtask
refactor request handling logic in Request . java and add a test for CONNECT requests in RequestTest . java to improve robustness of request processing
updated storage point retrieval methods to use legacy storage points to improve compatibility with newer Android versions and ensure correct storage point retrieval
added methods to handle session availability and unavailability in the session management system
added a package to scan for " liquibase . pro " in ServiceLocator to enhance package scanning functionality for Liquibase Pro files
replaced ` deleteSyncFolders ` method with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider . java ` and removed it from ` MainApp
updated ` loadWithNewGlobal ` method to accept an additional parameter for arguments to enhance functionality by allowing more flexible argument handling in global loading
updated start index handling in FastPathResolver to use startIndex directly instead of using a fixed value to improve code clarity and maintainability by
replaced calls to ` length ( ) ` with ` toIntExact ( ( ( Slice ) footer ) . getRetainedSize ( ) ) ` for
corrected spelling of " hasRandomizedType " to " hasAlreadyRandomizationDepth " across multiple files to improve code readability and
added support for " LEAD ( col8 , 1 ) " and " LAG ( col8 , 1 ) " functions in UnsupportedOperators
added a line to clear the headers in the proxy request to ensure that the proxy request does not contain duplicate entries
added a check for SA attach in CompressedClassSpaceSizeInJmapHeap . java to ensure tests are skipped when SA attach is not expected to work
added a null check for bgColor and implemented a new TranslucentWindow class to enhance robustness by preventing potential NullPointerExceptions
added error handling for missing user info fields in UserInfoActivity . java to improve user feedback when no user information is available
added custom serialization for PrecompiledHeaderData to ensure precompiled headers cannot be used on different machine to prevent runtime errors
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ] fix the
added a new integration test class for named output groups in the Buck project to ensure proper handling of named output groups in the build process
updated regex pattern in FileSettings . java to improve accuracy in matching file content
nifi - 1114 : fix npe in statelesscontrollerserviceinitializationcontext and statelessflow
replaced usage of ` new Object [ ] { } ` and ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent mode for taskbar functionality
added device status entries for " leaving - dock " and " energy - save - mode " in DeviceStatus . java to enhance device management capabilities for
improve error message when item model can not be load
added JUnit @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable the test due to known issues
fix ( opengl ) : do not set current pixel scale for 2d graphics
refactor RussianLowerCaseFilter class to improve code readability and maintainability
updated CsvBulkLoadToolIT and QueryUtil to simplify server and client configurations to enhance code readability and maintainability by reducing
replace File . separatorChar and File . pathSeparatorChar with underscores in displayName to ensure compatibility with different file systems
* make wavloader more flexible by use seekablestream
added a boolean flag ` repeatFirstLineIndent ` and modified indentation handling in ` ColumnText . java ` to support repeat first line indents to enhance
cast the Oid class to Object before comparison to ensure proper type handling for Oid instances
move initialization of metricstrackerfactory and healthcheckregistry into the constructor
[ gr - 34486 ] fix loopex compilation error .
set focus painted for buttons in WindowsPlacesBar to improve user interface responsiveness
added support for UniqueConstraint and ForeignKey in the handling of the " backingIndex " field in DatabaseSnapshot to ensure proper indexing behavior for database snapshots
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and updated ` AccountAPI ` to
improve error message when dc . title be not present in group
added a check for empty words before returning a HypothesisUtterance to ensure that a valid Hypothesis is provided before proceeding with further processing
added unit test base on user forum issue
updated thread settings in FeedRefreshUpdater and added databaseUpdateThreads property in ApplicationSettings to enhance thread management by allowing dynamic configuration of database updates
increased the FASTSCROLL _ THRESHOLD _ MILLIS value from 40 to 10 to improve the scrolling speed for better user experience
updated the initialization of SystemClassName to use " Ljava / lang / System ; " instead of " MetaUtil . toInternalName ( ) " to
hhh - 13644 procedure call should not throw nullpointerexception
added null check for apiProperties before accessing it to avoid potential NullPointerException when apiProperties is null
added new file ` BinaryFrameGenerator . java ` and ` TextFrameGenerator . java ` to handle binary WebSocket frames and text frames to enable
danielwagnerhall : wait for the ` ` peas ' ' element instead of the ` ` peas ' ' element to
refactor random double calculations in RandomGeo3dShapeGenerator . java to improve precision and randomness to enhance the accuracy of Geo3D shape
added a keepAlive method to manage ClassLoader references to ensure proper cleanup of resources to prevent memory leaks
changed return value from false to true in SQLiteDatabase . java to ensure correct functionality of SQLiteDatabase
jbrules - 1636 : fixing jsr166 lock monitorenter so that it do n ' t report false positive
added MkdirStep to multiple classes and updated assertions in FatBinaryTest to verify the correct number of steps to ensure proper directory creation and validate the expected
refactor yCoord calculation and error handling in MeshLeveler . java to improve clarity and correctness of coordinate validation logic
[ drools - 759 ] skip kie - pmml parsing and compilation when jpmml libs be not available
updated condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure correct handling of temporary status shutdown
fix testcontainers on macos
added a condition to check for memory mapped buffers on Windows to ensure proper handling of file channels on Windows systems
added a check to ensure that the model has a organization in the pom . xml file to prevent PluginException during plugin installation
updated copyright notice in SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to remove unused functionality related to web session termination
updated the argument passed to ` executeChildProcess ` to use ` system . getProperty ( " java . class . path " ) ` instead of an empty
replaced references to ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit and md5Salt to
added a new test method ` dontChangeJavadoc ` to the ` AddLicenseHeaderTest ` class to ensure that the Javadoc documentation is not unchanged in
updated LAUNCHER3 _ PHYSICS feature flag from false to true to enable the LAUNCHER3 PHYSICS feature
added a noPrint tag to the HtmlThreadInformationsReport class to improve the visual presentation of thread information
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and LUCENE _ VERSION from " L
added macosx symbolicator and task handles to BsdDebuggerLocal . java to enable support for macOS X systems
fix potential memory leak in fml client
do n ' t log ` ` connection reset by peer ' ' exception
[ java ] : use default admin directory if no conductor be available .
added a break statement in the TouchImageView class to prevent fall - through behavior in a switch case
chore : [ dialogflow ] enable stackdriver logging by default
remove unnecessary flush on sslhandshakecomplete ( )
[ j2kt ] fix typeutils . isassignableto for java . lang . object
use a concurrentskiplistset instead of a hashset for memtables pending flush
added null check for ` tree . errs ` in ` MemberEnter . java ` and updated error handling logic in ` JavaCompiler . java ` , and
replaced SWT . NO _ BACKGROUND with SWT . NONE in BugInfoView . java to simplify the browser selection behavior
replaced ` finish ( ) ` with ` cancel ( ) ` for the negative button in ` AboutActivity . java ` to ensure the dialog is properly
updated calculations for ` newLowerBound ` and ` newUpperBound ` in ` IntegerStamp ` and added unit tests in ` IntegerStampTest ` to
added a method to read an InputStream into a byte array and updated the image instance initialization to use this new method to improve code readability and maintainability
added variable handling and context management in the SwitchCompiler and ExpressionGenerator classes to enhance the switch - related functionality to improve code clarity and support for
updated the failover logic in RSAClientKeyExchange . java to handle potential InvalidKeyException and added debug logging to improve error handling and provide clearer
updated the " AdditionalDependencies " attribute in the WinGammaPlatformVC10 . java file to include " psapi . lib " to ensure compatibility with the
updated line separator handling in StringUtilsTest . java to ensure consistent line separator usage across different operating systems
updated TemplateEngineFreemarker to handleIncompatibleImprovements and encoding settings , modified malicious JavaScript in ApplicationController , and updated expected content
refactor serialization handling in CRDGeneratorTest to improve readability and output clarity
no effective change - code cleanup
disable emailablereporter by default
updated quote handling logic in CommandLineBuilder . java and added a new test for quote quotation mark in CommandLineBuilderTest . java to improve code clarity
( chore ) camel - metric : remove public modifier from interface
added a method to set the number of reduce tasks in the job to improve resource management by allowing dynamic adjustment of reduce tasks
[ hotfix ] [ table - common ] fix nullpointerexception in schema generator
update file version from 505365 to 532077 in SaveService . java to reflect the latest version changes
added support for " GL _ ARB _ texture _ float " extensions in FloatTextureData . java to ensure proper handling of texture extensions in the texture
bug 61725 - fileserver : add fileserver . write ( string filename , string value ) method
added null check for outputDirectory and jarStream in ClassDump . java to ensure output directory is set only when necessary to avoid potential NullPointerExceptions
replaced direct future submission with a performance measurement using Robolectric ' s PerfStatsCollector to improve performance tracking for SQLite connections
updated method calls from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest ` and ` J
[ geos - 10641 ] add resourceerrorhandling enum to allow configuration of resource error handle
lucene - 4892 : fix ramindexfileformat . getdimensionbytes ( ) to account for eof
improve error message in case of miss resource
updated ForkJoinPool and ForkJoinWorkerThread to accept a boolean parameter for innocuous behavior to enhance thread safety by allowing
updated CHECK _ EVERY _ N constant and added logging statements in Caches . java to improve memory management and enhance logging clarity
hbase - 25819 fix testsplittransaction to not reuse region open in testsplittransaction
added null check for currentSelectionArea before enabling selection in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is not initialized
added a parameterized test for Jetty ' s JAAS demo in DemoModulesTests . java to ensure that the Jetty
added a condition to check spanX and spanY before calculating the hypot value in CellLayout . java to ensure that the hypot calculation accur
refactor CacheOffHeap class to improve memory management efficiency
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 579 : add
added validation for XML gid values and improved data string handling in TiledLoader . java to enhance robustness by avoiding invalid XML values and
fix concurrency issue in inmemorytilecache . setworkingset ( )
added a new file ` Solution . java ` that implements a mathematical formula that determines if two values are smaller than or equal to a given number of
added a new interface ` AddressChecker ` and modified ` TrackerRequestProcessor ` to use it to improve error handling for invalid IP addresses to enhance the
fix render bug in multilayermodel
remove default comment tag from config entry
changed the data type of ` thingTypeVersion ` from ` int ` to ` String ` and updated related assignments in ` ModuleType ` and ` Cap
added null check for recieptents before sending email to avoid potential NullPointerException when recieptents are null
refactor isSingle check into a separate method to improve code readability and maintainability
added a ` failFast ` parameter to ` DockerClientFactory ` and refactored related methods in ` RemoteDockerImage ` to improve error
added a ` resourcesMode ` parameter to ` AndroidMetadata ` and updated related methods in ` RobolectricTestRunner ` and ` AndroidMetadata ` to
[ amazonechocontrol ] use dateutils . settime ( ) instead of dateutils . truncate ( ) for date conversion
updated the method call from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure the correct core is used
added handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for command execution failures
refactor TreeMap class to improve code readability and maintainability
add ` ` enableasyncstackTraces ' ' property to enable async stack trace
added a method to set the glow color in BubbleTextView and updated Folder to use it to enhance visual feedback by allowing dynamic color updates
added styling for link and description components in LinkedFilesEditor . java to improve visual consistency and readability of the code
updated ResultSetMetaData to return " java . lang . Short " instead of " java . lang . Short " and added a test for class matching in ResultSet
removed file deletion logic in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify file writing process by eliminating unnecessary exception handling
added null check for _ info before accessing its status to prevent potential NullPointerException when _ info is null
added a constructor to the ShadowLocation class that accepts a String provider to enable initialization of the location provider
added a condition to set maxRAM to 1100 when the deviceRam is less than 2048 to optimize memory usage for 32 - bit devices
add stats for no - data - included map in localmapstatsprovider
add log to fileprofileactivator to help diagnose problem
updated the string used in addToBody from " noname1234 " to " invalid _ " to improve clarity by using a more descriptive identifier
use set instead of list to avoid concurrent modification
updated the array trimming logic in ExpandableUploadListAdapter . java to use MAX _ NUM _ UPLOADS _ SHOWN instead of 30 to
added unit tests for the delete functionality in the DashboardUserMapper to ensure correct deletion behavior and validation of the deletion operation
[ # 7448 ] instructor : instructor : fix typo ( # 7441 )
[ gr - 27827 ] fix handling of auto - derefs .
added a method to retrieve the buffer size to provide access to the buffer size for better resource management
add -- headless option to terasology launcher
refactor action bar title setting logic in DrawerActivity . java to improve readability and maintainability of the code
refactor CommandLineParserTest class to improve code readability and maintainability
added interpolators for ALL _ APPS _ CONTENT _ FADE and ALL _ APPS _ SCRIM _ OQUE _ TH
updated method to use javaNameFromExternal instead of toUnderscoreSeparated to improve clarity and consistency in naming conventions
added native methods for frame and frame in CWrapper . java to enhance frame management functionality in the application
added constant value validation in mmm Checker . java and created a new ValueTest . java file to ensure that constant values cannot be distinguish from
updated test files for MontgomeryMultiply , MulAdd , and SquareToLen to improve test coverage and ensure accuracy of mathematical operations
removed unnecessary null check for constructors in PojoUtils . java to simplify code by eliminating redundant checks
refactor JiraConfiguration class to improve code readability and maintainability
updated error message formatting in UploadBuild . java to improve clarity of error reporting for better debugging
updated bounds calculations in DeviceProfile . java to include search bar offset to ensure proper layout adjustments for widget bounds
do n ' t schedule disconnect if idletimeout be zero
refactor activity transitions to run on the UI thread in OverviewCommandHelper . java to improve UI responsiveness by ensuring tasks are launched on
added a method to retrieve the Optional < Pair < String , ImmutableList < AppleSource > > from an Optional < Pair < String , ImmutableList < AppleSource
increased the timeout duration for trigger firing in TestSimTriggerIntegration . java from 220000 second to 32 seconds to allow more time for trigger firing to
use positioncount instead of outputpositioncount in floatselectivereader
improve node cost search performance
added a check to skip processing for specific UI components to ensure that only valid UI components are processed to avoid processing errors
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java ` to streamline
added a check to get the latest commit point if it is null to ensure the correct commit point is used for replication operations
added unit tests for ` getImeiForSlot ` and ` getMeidForMeid ` methods in ` ShadowTelephonyManager `
removed the debug methods for HTTP request debugging in SimpleHostRoutingFilter . java to streamline request handling and improve code clarity
added ` destory ( ) ` method to ` IndexSegment ` , ` IndexSegmentImpl ` , and ` TestQueryPlanner ` classes to
[ flink - 17820 ] [ test ] fix the flakiness of normalmessagetest
replaced ` Charset . forName ` with ` StandardCharsets . UTF _ 8 ` in ` OutputStreamWriter ` initialization to improve code readability and maintainability
hbase - 27875 bulkload should n ' t retry if the file do n ' t exist
added a nullable ` commission ` parameter to ` DefaultWithdrawFundsParams ` and updated its usage in ` DefaultWithdrawFundsParams ` and `
removed unused import of StreamTerminator in AutoCloseReferenceStream . java to clean up the code and improve readability
consolidated multiple catch blocks into a single catch block for handling SolrServerException to improve code readability and maintainability by reducing redundancy
added a check for overloaded methods and improved error handling in Java2TypeScriptTranslator . java to enhance method invocation safety and provide cle
replaced direct disk sweeping with StacklessLogging logging in TestFileSessions . java to enhance logging capabilities for session management
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 662 : sql
refactor SubExactLConstantTest and SubExactLNonConstantTest files to improve code clarity and maintainability
added a check for null or empty claimRequestString before parsing to improve robustness by handling potential null values gracefully
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve compatibility with HIVE _ BUILDER in the transformation logic
updated the processTypeHintForNestedDocuments method to simplify type handling and added null value tests for simple types to improve code clarity and ensure
replaced ` mcr ` with ` coreStatus ` in ` CollectionsAPIDistributedZkTest . java ` and updated ` CoreAdminRequest . java `
initialize transformers and locators as new lists to avoid null pointer exceptions when accessing them
updated error message formatting in AbstractQuerydslProcessor . java to improve clarity of error messages for better debugging
make pegraphdecoder more usable to debugging
( chore ) camel - resttemplate : rename setof ( ) to copiedsetof ( )
( chore ) camel - mail : simplify code
fix npe in case of null destination
added a method to set the identifier name as a property name to ensure the identifier name accurately reflects its purpose
add wavegeneratoractivity so it can be use in the ui .
added logging for null sheets in KeyedProperties . java and improved error handling in SheetOverlaysManager . java to enhance debugging capabilities and
fix : add test for exec and log command
added a test method ` testNoWriter ` to the ` TestReplicationHandler ` class to ensure that a new index is created when no writer is available for
do n ' t invoke super . dispatchmethodkernelokra if not need
added sorting functionality to the records list in DefaultDnsClient . java to ensure consistent ordering of records based on their priority
refactor thread creation to use a privileged action for thread creation to improve code readability and maintainability by encapsulating thread creation logic
added validation and selection logic in SelectBox and UITest classes to enhance input validation and ensure correct user interface selection
replaced IllegalStateException with a stack trace printing to improve error handling by providing a more informative error message
added a ` parentSplit ` parameter to the ` createState ` method and updated related logic in ` FlowBuilder ` and ` SplitState `
made the ` connectionState ` variable volatile and updated its usage to ensure thread safety during connection closure
updated polling period from 10 to 1000 milliseconds to allow more time for polling in the endpoint configuration
refactor memory allocation methods in MemoryStack . java and MemoryUtil . java to improve efficiency and memory management to enhance performance by reducing
added exception handling for DocletAbortException and improved error reporting in HtmlDoclet and AbstractDoclet classes to enhance error handling and provide cle
[ java ] unusedmodifier : fix false negative for unused modifier
refactor logging statements to use method references instead of lambda expressions to improve code readability and maintainability
make ssl parameter name configurable for test
improve error message when transformation fails
updated method to retrieve active connection permissions instead of user permissions to ensure correct access control for active connections
refactor equality comparison in Point class to use EqualsBuilder for better clarity and performance
updated FileProcessor to handle null outputRoot parameter to improve robustness by preventing potential NullPointerExceptions
added an AnnotationFilter interface and modified PDFPage and PDFRenderer to utilize it to enable filtering of PDF annotations based on a specified filter
refactor StackTraceCleaner class to improve error handling and logging clarity
added conditional checks for CSS and JavaScript file types in PluginServlet . java to ensure proper content type for CSS and JavaScript files to improve content type handling for
hhh - 15464 skip testliteralsinselectexpressiontest on oracle
updated the parameter name from ` slot ` to ` slotSize ` in the ` upgrade ` method and modified the logic for handling version values to improve cl
added ` getStatsSnapshot ( ) ` method to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl ` classes , and
[ scb - 2635 ] [ k8s ] add long polling to kie client ( # 2635 )
updated gesture handling in BaseOverview and added accessibility tests in PagedView and LauncherInstrumentation to improve user interaction responsiveness and ensure proper
updated unlocks initialization in UI . java and added a button in PausedDialog . java to improve clarity and functionality of the unlock dialog
added a line to clear the drops of the event to ensure that the event ' s drops are reset before processing further
added a constant for the default parameter in StreamResult . java to improve code readability and maintainability
replaced ` MalformedURLException ` with ` IOException ` in ` testNormalizeOrder ` method to improve error handling by using more specific exception types
updated print statements in TsFileSketchTool . java to include chunk type information to enhance output clarity by including chunk type information
added exclusion of " lib - Swift . h " headers in UmbrellaHeader . java to exclude specific headers from processing
rename method ` onHttpError ` to ` onHttpHeaderError ` for clarity to improve code readability by using a more descriptive method name
added encode ( ) method to RequestPlugin . java to ensure proper encoding of requests
mondrian : mondrian : do n ' t convert numeric expression to string for db2
added null or empty password validation in LdapAuthenticationProviderImpl . java and created a corresponding test class to ensure proper error handling for null or blank
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear complex writers in ProjectRecordBatch . java to ensure proper cleanup of complex writers when conditions are met
added @ SuppressWarnings ( " serial " ) annotations to multiple Java classes to suppress serialization warnings to improve code clarity and reduce unnecessary code complexity
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and added a null check for ` classInfo ` to enhance class loading
added error handling for " _ errors " in ErrorResponseException to ensure proper processing of schema errors and improve error reporting clarity
added a constructor to EventSourcingRepository that accepts additional parameters to enhance flexibility in the EventSourcingRepository class
refactor symbol handling in binary node processing to improve clarity and maintainability of symbol definition logic
updated search text handling in SearchedPeopleCursorAdapter and QCustomDialogBuilder to ensure proper formatting of search text to enhance user experience by preventing
updated command handling logic in NuvoConnector and NuvoHandler to differentiate between essentia and non - essentia modes to improve command processing
tmi - tiff : default planar configuration to chunky instead of planned
added a call to close the item list tag to ensure proper resource management and prevent memory leaks
move averageutil class to core . utils for good performance
added two new Java files , SigInt and SigIntBarrier , to implement signal handling for handling int signal interruption and signal termination in a concurrent
refactor edge handling logic in ExporterGEXF . java to support hierarchical graphs to enhance the accuracy of edge count retrieval based on
refactor TCTLSeparatedProtocol to use Text objects instead of byte arrays to improve performance and simplify string handling
[ # 10641 ] rubric : fix index out of bound exception ( # 10641 )
replace DB2Database import with a direct comparison for schema and catalog case handling to improve clarity and maintainability of the comparison logic
simonstewart : reset webdriverproxy to null after each test run
updated the formatting of criticalErrors to use Integer . tostring ( ) instead of getLine ( ) for better readability to improve code clarity and
updated the reset method for mTextWatcher in InPlaceEditView . java to ensure consistent behavior during text updates
improve javadoc for trufflestring . getbytes
[ hotfix ] [ runtime ] fix type inference in outedgesfunction
refactor multiple assertion classes related to Java 6 to improve code organization and maintainability
deleted the file ` ClassA \ 314 \ 201 . java ` and created a new test class ` DiacriticTest . java
replaced CountDownLatch with CyclicBarrier and refactored assertion logic in ClusterMembershipTest . java to improve thread - safety and clarity to enhance
[ mng - 4892 ] mng - 4893 : allow mng - 4892 to work with reactor .
updated SSL handling logic in ServiceRegistryConfig and improved test assertions in TestServiceRegistryConfig to enhance security checks and ensure correct IP port configuration
updated Mockito library version to ensure compatibility with the latest features and bug fixes
reformatted the constructor of Jdbc3Connection to improve code readability and maintainability
added a synchronized method ` ensureInstance ( ) ` to the ` Servlet ` class to ensure the servlet is properly initialized before usage to improve thread safety and
added logging functionality and modified server time calculation in BinanceExchange and BinanceBaseService to enhance observability of server time and improve
added a condition to check for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) V8.5 " in Tomcat adapter
updated deregistration logic in InfiniteProgress . java to ensure proper handling of the current form when deregistering animations
updated ` decodeResource ` and ` decodeStream ` methods to accept an additional ` BitmapFactory . Options ` parameter to enhance flexibility in
[ java ] reduce the number of message to publish in the example .
added ` preventNextClick ` functionality and improved tweet text handling in ` TimelineArrayAdapter ` to enhance user interaction by preventing repeated click actions
added support for " text " data type in PostgresDatabase and updated related logic in NumberType and ColumnSnapshotGenerator to enhance database compatibility
fix race condition in entryprocessorbouncingnodesstest
updated state checks from ` isHardDeletableState ( ) ` to ` isRemovableState ( ) ` in ` AmbariManagementController
added a null check for bridgeRegistry before adding results in CreateBridgeServlet . java to prevent potential NullPointerExceptions when bridgeRegistry is not initialized
refactor robot expiration handling to use a consistent method for better readability to improve code clarity and maintainability by reducing repetitive
replaced direct calls to ` getDisplayName ( ) ` with a variable ` dName ` for better readability to enhance code clarity and prevent potential
modified SpriteBatch constructor to accept a default shader parameter to enhance flexibility in shader initialization based on the application context
added synchronous commit settings in TestUtil . java to enable synchronous commit functionality in tests
added a ` fillSortedSet ` method to ` SortedSetTypeCoercer ` and refactored its usage in ` SortedSetTypeCoercer
updated confirmation alert logic in RemoveFileDialogFragment and RemovalFilesDialogFragment to handle favorite files and folders more effectively to improve user experience by
added a check to ensure the character ' c ' is within the range of 256 to prevent potential ArrayIndexOutOfBoundsException during URL encoding operations
added port assignment and modified fragment storage registration to use a dynamic port to improve flexibility in port configuration for fragment storage
added an assertion to check for an empty cluster map in HostResourceProviderTest to ensure proper handling of scenarios where no clusters are present
[ hotfix ] remove unused log parameter from yarnentrypointutils
move initialization of sip comm frame to the base class .
deleted the ShadowHtml . java file and updated test assertions in HtmlTest . java to streamline the codebase by eliminating unused shadow classes
added a new file ` StarTreeRecordStoreFactoryBlackholeImpl . java ` that implements the ` StarTreeRecordStoreFactory ` interface to provide a
updated logger configuration to use " org . eclipse . jetty . http3 " and " org . eclipse . jetty . qu
changed the visibility of the addListeners method from private to public in MockSettingsImpl . java to allow access to the addListeners method from other classes
[ hotfix ] fix checkstyle violation in statehandlestore
updated import statements for security components in multiple test files to ensure compatibility with the latest Jetty HTTP security features
add ` ` none ' ' to ` ` student section ' ' parameter for enrollment
use try - with - resources to prevent resource leak
camel - 1145 fixed the test error of camel - core when the port be not available .
added ` androidLibraryBuildTarget ` and ` libraryTarget ` parameters to several Java library - related classes to enhance functionality by allowing specification of the library target
fix typo in error message
removed the getPageSizeVal method that directly returns the page size to simplify the code by eliminating unnecessary page size handling
added handling for the CLOSED case in IteratingCallback . java to prevent further processing when the loop is closed
added ` isAuthorized ` field and updated related methods in ` AccessControlContext ` and ` ProtectionDomain ` to reflect this change to ensure proper authorization
refactor OSGi deployment event handling in OSGiDeployer . java to improve clarity and ensure proper registration of AbstractOSGiApp instances
added handling for " tiff " codec in DLNAMediaInfo . java to ensure correct MIME type is set for tiff files
improve performance of optimizedcalltarget
added a new file ` CubocDesktop . java ` and modified ` Map . java ` and ` MapRenderer . java ` to use
updated PolicyMonitor initialization to use File objects instead of hardcoded paths to improve flexibility and maintainability of the test code
added a call to removeAllFiles ( ) in TrashbinActivity to clear the trashbin list before adding new files to the trashbin list
replaced ` org . eclipse . jdi . Bootstrap . virtualMachineManager ( ) ` with ` com . sun . jdi . Bootstrap . virtual
truffle : make checkglobalnode a inner class for clarity .
updated createLauncherEvent method to accept an Intent parameter to enhance event handling by associating launch source data with specific component details
limit the maximumBurnAmount to a maximum of 100000 to ensure it does not exceed the burn target limit
updated imports and refactored the snapshotObject method in UniqueConstraintSnapshotGeneratorSnowflake . java to streamline imports and enhance
refactor item assignment logic in DMLTransformer . java to improve clarity and handling of empty insert statements to enhance readability and maintainability of
updated test method names from " testValidServiceTicketWithInsecurePgtUrl " to " testValidServiceTicketWithSecurePgtUrl " and adjusted
updated the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added a method to hide the default function name to enhance functionality
refactor JarLauncher class to improve code readability and maintainability
updated generic type parameters for ` results ` , ` getThrowables ` , and ` setRecoverableExceptionClasses ` to use ` Throwable `
fix npe in callGTalk .
added a test for updating a PGobject with a specific date in ResultSetTest . java to ensure proper handling of PGobject data in the database
modify password reset endpoint to handle cases where the user ' s origin is not UAA to ensure proper error responses when attempting to create a password
replaced the retrieval of the first child element from the document with a direct retrieval of the document element to simplify the code and improve readability
refactor caching logic in Cache . java to improve performance and maintainability of caching operations
rename timeinsec to timemillis to avoid confusion
fix npe in light relay when bind be invalid
added a new Chainer class and updated CollectionSubject to use it to enhance testing capabilities by allowing chained item handling
refactor Model class to improve code readability and maintainability
increased recordedTime from 1024 weeks to 619315200000L to accommodate additional time unit requirements
added handling for Windows terminal type in LineReaderImpl . java to ensure proper resizing of the terminal on Windows systems
updated host version state management in UpdateDesiredStackAction . java and modified state handling in RepositoryVersionState . java to ensure that host versions are only saved
refactor : move test to test _ root instead of third _ party
use linkedhashset to maintain order of artifact in maven plugin
removed try - catch block around operation conversion to simplify code and improve readability
reformatted code for better readability to improve maintainability of the code
updated the thread pool name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in thread naming
added a connection method in CloudSolrClient and a test for cloud client uploads in TestCloudSolrClientConnections to ensure that the cloud client
added synchronized blocks to ensure thread safety when modifying binding collections
refactor file and cache directory handling in ShadowContext and RobolectricTestRunner to improve code readability and maintainability by consolidating
added TreeMap support to SecureXStream and updated related imports and tests in XStreamPersisterTest to enhance data handling and ensure correct styles are
[ k8s ] allow to pass kiemodulemodel to kiemodulebuilder
updated conditional checks in BlockEventListener . java to use Farmland objects instead of Material types to improve clarity and ensure correct behavior based on block
added a default implementation of getLocalIp ( ) method to return null to provide a default implementation that defaults to null
updated serialization method in JdbcStepExecutionDao and modified skip limit in tests in StatefulRetryStepFactoryBeanTests to use SerializationUtils for deserialization to
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated resource names and added preload resource paths in tensorflow . java to enhance clarity and support for Python 3 compatibility
refactor plugin table initialization and add a refresh button to improve user experience by allowing plugins to be refreshed easily
changed log level from debug to warn for error handling in DefaultHistory . java to reduce log verbosity and improve performance during history file operations
cloudstack - 1771 : fix npe in vmwarestorageprocessor when volume be delete from root volume
camel - sftp : fix the unit test error of camel - sftp
refactor ExperimentalMockitoJUnitRunner class to improve code readability and maintainability
refactor build serial handling in GpsSettingsActivity and Session classes to improve clarity and maintainability of the code
modified the implementation of the SwapGBuffers class to enhance performance and maintainability of the code
added null check for spatial before removing skeleton control to ensure that skeleton control is only removed when necessary
added a method to set smart replies in ShadowRankingTest and updated ShadowRanking to utilize it in ShadowRanking to enhance testing capabilities
[ java ] only add segment file if they start with the specified pattern .
updated the way carrot2ResourcesDir is retrieved in CarrotClusteringEngine . java to improve clarity and consistency to enhance code readability
added null check for testRect in WindowsTreeUI . java and created a new bug8004298 . java file to address a null pointer
updated ASM API version from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to ensure compatibility with the latest ASM framework version
throw tasteexception instead of return null
added clientInfo to SurrogateAuthenticationEventListenerTests to utilize client information for improved test setup to enhance test coverage by ensuring proper client information is
added a boolean variable ` isUserView ` in ` CardPresenter . java ` to track the state of user views in the application
updated the method name from ` isGraphvizJavaAvailable ` to ` isGraphvizJavaAvailable ` across multiple files to improve clarity and
refactor the creation of histograms for constructBatch and syncLogTimePerRequest in LogDispatcherThreadMetrics to improve code readability to enhance maintain
added a new module - info . java file for SQLite connector module to define module dependencies and exports for SQLite connector functionality
added a sleep of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional check for " new " type in configuration to simplify permission management logic
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method to return a depth value of 0.5 in SpringLoadedState to ensure that a depth value of 0.5 is always returned
refactor BinaryDecoder to use Arrays . copyOfRange instead of System . arraycopy for copying bytes to improve code readability and performance to enhance
[ hotfix ] [ doc ] fix typo in executiongraph
removed SwipeLayout imports and updated notification handling in NotificationActivity . java and NotificationRenderer . java to streamline notification management and improve notification visibility handling
update DefaultExceptionConverter to handle null invocation and improve exception messages to enhance error reporting and clarity in exception scenarios
fix npe in glowcontainer . getlock ( )
replaced MethodHandle with direct method access in ProxyMaker . java to simplify method invocation and improve code readability
changed the type of ` value1 ` and ` value2 ` from ` int ` to ` intValue ( ) ` in ` MathTest . java
updated email subject formatting in BaseEmailContentFormatter . java to improve clarity and consistency in email output formatting
added a panel to the property sheet and modified its visibility logic to enhance user interface by ensuring proper panel visibility and layout management
added a null check for the location parameter in the connection check to ensure robustness by preventing potential NullPointerExceptions
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and readability
added a null check for DSA key parameters in BasicChecker . java to ensure that required parameters are present before proceeding with public key generation
refactor MediaTypeRequestMatcher to use a dedicated method for ignoring media types to improve code readability and maintainability
updated task number handling in LlapBaseInputFormat . java to improve clarity and consistency in task attempt logging
allow bean definition override by default
added a null check before closing indexReader to prevent potential NullPointerException when indexReader is null
updated package names from BTCMarkets . btcmarkets . service to BTCMarkets . btcmarkets and removed the BTCMarketsStreamingMarketDataService
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest . java ` to validate the rendering of code blocks with BR
added a new file ` CompatibilityTest . java ` that tests the internal DTD and property file loading to ensure that the internal DTD
added new classes ` VariantComponentsModule ` , ` PushUtils ` , and ` SecurityUtils ` for managing push notifications to enhance the application '
updated the logic for determining the number of replicas in TableRebalancer to use a loop to improve code readability and ensure consistent handling of instance
bump version to 2.7 . 0 for release
log4j2 - 1349 use system property ` ` line . separator ' ' in test
improve handling of timeout in apr / native
added default values for friction , restitution , density , and isSensor in FixtureDef . java to ensure proper initialization of floating - point variables
updated method signatures to include anomaly function specification in various classes to enhance anomaly classification functionality by associating anomalies with their
added a shell command to wait for broadcast idle to improve synchronization and error handling in the LauncherInstrumentation class
added unit tests for font tag and link tag attributes in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure correct handling
fix guistatscomponent not load correctly
added permission handling for phone calls in Launcher and Utilities classes to ensure proper access to phone features in the application
updated return values in SimulationPanel , PlotDialog , BasicEventSimulationEngine , and Startup classes to improve localization support and enhance user experience
refactor GeoEncodingUtils to use a private buffer size constant and simplify the fromBytes method to improve code readability and maintainability by red
added a synchronized method to check if the Docker client is available to ensure thread safety when accessing the Docker client
removed the constant VPX from CodecTypes . java to streamline the codebase
added coordinator address functionality to DistBuild and related classes to enable remote coordinator thrift server connection
added path matching functionality to FsUtils and wrapped timer in WrapTimer to enhance path matching capabilities and improve code readability
added a conditional check before adding labels to ensure labels are only added if the value is greater than zero to avoid adding negative values to the list
[ geot - 4892 ] fix nullpointerexception in app . getboolean ( ) when result be null
removed the @ Test annotation from TestPerfBenchMarkDriver . java to streamline the test code by eliminating redundancy
added materialization time setting in ObjectStore and created a test for updating creation metadata in TestObjectStore to ensure accurate tracking of materialization times
added handling for UnsatisfiedLinkError in VoskSTTService . java to improve error logging and notification for missing native dependencies to enhance
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 4892 : remove
update break weight logic in GlyphView . java to improve clarity and correctness of break weight handling
refactor sync handling in RCFile . java to use a buffer for improved efficiency to enhance performance and reduce memory usage during sync operations
added @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to address a known issue related to bug SOLR - 13028
refactor toepool to use a linked list for step and processor
removed the ` flavorsForFormats ` parameter from the ` setToSortedDataFlavorArray ` method in ` ClipboardTransferable . java `
added a random free port option in TestThriftServerCmdLine . java to generate a unique port for testing purposes
added a check for atEOF ( ) in RegExpScanner . java to prevent processing when atEOF ( ) is called
replaced direct calls to Boolean . getBoolean with static sets for metrics and timers to improve performance by caching enabled metrics and timers based on system properties
fix nullpointerexception in chat room jabber # getresourceorthrow ( )
added null and empty checks for filename and length in PApplet . java to improve error handling and provide clearer error messages
refactor refresh token creation into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java to improve clarity and consistency in error reporting
[ hotfix ] [ yarn ] remove dead lock from yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` that returns null in ` ShadowNativeImageReaderSurfaceImage . java ` to provide a placeholder
updated the SSL URI for the BTCChinaMarketDataService initialization to ensure the endpoint points to the correct data service service
pmd : fix cpd task to work on window
added ` OauthController ` and ` Oauth2PluginTest ` files to implement OAuth authentication functionality in the Shenyu framework
refactor SemgrexPattern class to improve code readability and maintainability
added flatMap and flatCollection methods to AbstractStreamEx , EntryStream , and StreamEx classes to enhance stream processing capabilities and improve code
improve exceptiontoproducerresponseconverters to not throw exception
updated the condition for class loading in RobolectricClassLoader to allow for mixed scala test cases to ensure compatibility with Android Android Android Android Android Android
do n ' t send sdp that do n ' t require transcoding
changed the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in ` CreateTableGenerator . java ` and
[ geot - 7078 ] [ geot - 7078 ] add unit test for geot - 7078
added a volatile boolean field ` wasInvoked ` and updated related methods in ` NetworkTestUtils ` , ` UaaHttpRequestUtilsTest ` , and
added a check to ensure the processor is not configured before expanding regex mappings and changed return types to unmodifiable maps to improve error handling and
updated the ` splitIntoThirtyParts ` method to use ` splitIntoThirtySecondsParts ` instead of ` splitInto ` and added
added XLCDCommunicator and XLCDController classes for handling XLCD commands to enable support for XLCD commands in the application
[ drools - 7484 ] [ drools - 7851 ] use kmodule . xsd instead of kie . xml
added retryTimes validation to multiple event - related conditions to ensure retryTimes does not exceed zero to improve robustness of event handling logic
refactor WorkerProcessPoolTest to use join instead of await for thread states to simplify thread management and improve code readability
refactor ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and add a new test class ` DelegatingMethodTest `
reduced the constants of freezing and unzing resources from 20000 to 10000 to optimize resource allocation for improved performance
updated method signatures and added configuration saving to improve code clarity and ensure proper configuration handling
deleted the ` SpringTransactionHooks . java ` file and replaced its usage with ` AbstractSpringTransactionHooks ` in ` SpringTransactionHooksTest . java `
refactor AbstractClassAssert class to improve code readability and maintainability
added a new file ` GetUninitializedStringValue . java ` to test handling of uninitialized string values to ensure that a meaningful message is displayed when an uninitialized string
added support for handling provided dependencies in AndroidLibraryDescription and updated related tests to enhance dependency resolution and improve test coverage for provided dependencies
added a new BooleanFlag named ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable keyboard transitioning during app transitions
replaced the retrieval of system anomaly messages with a single variable to improve code readability and reduce redundancy
added a constant for " cinepack " format in FormatConfiguration and updated LibMediaInfoParser to support cinepack format to enhance media parsing
added CAMERA _ BOBBING configuration and improved hand movement animation logic to enhance player experience by allowing dynamic adjustment of hand movement animations
replace data description with digest in GrpcCasBlobUploader to ensure accurate representation of blob objects
deleted the HSQLDBServerFilesFilter . java file to remove unused code to streamline the project
fix crash when restore from seed or key be null
added a trace log statement when a title is not found by IMDb ID using the IMDb ID in MediaTableTVSeries . java to
added a method to check if a method invocation already exists to ensure that existing method invocations do not overwrite existing ones of the same type
updated array initialization to use a constant for the number of values to improve code readability and maintainability by avoiding magic numbers
bugfix # 20911 - display a dialog for reset profiling mode
added multiple conditional checks for value in GenericUDFMask , GenericUDFMaskFirstN , and GenericUDFMaskShowFirstN classes to ensure correct
fix derby test by use temporaryfolder
added method to check if an item be a damageable item . close # 289
fix mc - 167447 : set line width to 1.0
simonstewart : fix the issue that firefox do n ' t set the browser . startup . page properly
updated HTTP method handling in Http1xClientConnection . java to ensure proper response handling for specific HTTP methods
updated task acceptance from " compile " to " process - classes " in JoobyMojo . java to ensure the task reflects the correct
replaced the shutdown method with a closeIdleConnections method in HTTPHC4Impl . java to improve connection closing logic to ensure idle connections are properly managed and
added a condition to check if the metric name does not already include an aggregate function suffix before creating a new Metric instance to ensure that the metric name is
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView and TaskView to use mCurrentFullscreenParams to improve flexibility in handling
added a new Java file that counts the number of occurrences of a given number of occurrences in a given input to provide functionality for counting occurrences of occurrences in
initialize socketchannel to null to avoid nullpointerexception
refactor MutisignOperationerGodicTest class for improved clarity to enhance code maintainability and readability
added error handling for NoSuchElementException in StaxEventItemReader to improve robustness by gracefully handling NoSuchElementException during fragment reading
replaced specific imports with a wildcard import and added null checks for qualifiedResourceName to improve code readability and prevent potential NullPointerExceptions
updated JSON imports from ` com . nimbusds . jose . shaded . json ` to ` net . minidev . json ` in
updated OS detection logic to handle " Aix " and " Linux " family correctly to ensure proper identification of AIX " to improve compatibility with different operating
vpc : use router . getid ( ) instead of router . getprivateipaddress ( ) in vr
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class that calls ` invokeWithoutBlockingWithResultSync ` with a
remove junit test for now
replaced casting to int with Math . round for width and height calculations in PortraitPagedViewHandler . java to improve code readability and performance
danielwagnerhall : fix checkstyle error in testclusterdumper
updated ClassSize alignment logic in KeyValue . java to accommodcommodcommodcommodcommodcommodcommodcommodcommodcommodcommodcommodate new array structure to enhance
camel - 16462 : camel - core - optimize to avoid reflection
added support for conditional tasks in SparkCrossProductCheck to enhance task execution flexibility
added ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED actions to the filter in Launcher
updated condition in LoginInfoEndpoint to include a check for jsonResponse and added tests for passcode prompt presence to ensure proper handling of JSON responses
added a method ` toDescriptiveString ( ) ` to convert the timestamp to a descriptive string for better debugging information to improve clarity of the
added a new field ` result ` to the ` HuobiAccountInfo ` class and updated related methods in ` HuobiAccountService
added support for the " PERIOD " keyword in the MariaDB database and a test for it in AddColumnGeneratorTest to ensure proper SQL generation
[ beam - 8470 ] allow portable worker to specify docker container image and external service address
updated version change logs in VersionChangeLogs . java to provide clearer information about Launcher shortcuts and bug fixes
changed the access modifier of the constant NUM _ MILLIS _ IN _ DAY from private to public to allow access to the constant from other classes
remove system . out . println from imageresourceloader
[ java ] check that aeron client invoker be not null before invoke it .
updated the validation logic in ` ppp Attr . java ` and added a new class ` NoWarnOnImplicitParams . java ` to handle implicit lambda parameter
refactor hideMenuItem method to hideMenuItem and showMenuItem methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability
updated BTCETransHistoryResult to include reserved constants for BTC _ deposit and BTC _ withdrawal types to enhance clarity and accuracy in
replaced List with Set for series and exceptions in RetryFilterFunctions . java to ensure uniqueness of HttpStatus series and exceptions
added a @ Deprecated annotation to PluginLoader . java to indicate that PluginLoader is no longer recommended for use
updated condition in LastQueryExecutor and added a new test for last with unseq time in IoTDBLastIT to ensure correct handling of
updated string appending syntax in HttpResponse . java to ensure consistency in newline handling
added a static block to set a log error property in BuildImageMojo . java to improve error handling during HTTP wire operations
added a call to setSafeArea ( true ) on titleBar to ensure titleBar is displayed in a safe area
reversed the iteration order of TimeSeriesChunkMetaDataList to ensure the correct retrieval of the last element from the list
added SQL syntax for renaming and deparsing in AlterTest . java to ensure correct SQL syntax for database operations
make copystate ( ) public so that it can be use by subclass
fixed - rfuture . get ( ) method should return completablefuture # completablefuture .
use constant for suffix split to reduce code duplication
[ hotfix ] [ test ] fix checkstyle violation in orc module
reordered conditional statements in CompareFunctionsProcessor . java to improve readability and maintainability of the code
improve error message when there be insufficient disk space
added ` toString ( IndexReader ir ) ` methods to ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes
added a check for the handler ' s invalidated state in AbsSwipeUpHandler and unregistered TaskStackListener in TaskAnimationManager to ensure proper handling of
added ` getLockTimestamp ` and ` setLockTimestamp ` methods in ` AppPreferences ` , ` PreferenceManager ` , and ` PassCodeManager `
replaced direct artist retrieval with a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added a null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is not initialized
nifi - 1114 added null check for header flow file in splittext
updated key store type handling in HttpsConnectorFactory to support Windows - specific keystore types to ensure compatibility with Windows - specific systems
( chore ) camel - resttemplate : increase test timeouts
updated condition in FileSyncAdapter to check for FILE _ NOT _ FOUND instead of FILE _ NOT _ FOUND to handle cases where the result code
added animation functionality to the Slider class to enhance visual feedback during slider transitions
replaced instances of ` eol ` with ` lineSeparator ` in tests to ensure consistency in variable naming
changed maxWidth and maxHeight from 512 to 1024 to optimize memory usage for texture packing
added a test for negated ternary not wrapping in UnwrapParenthesesTest . java and modified the condition in UnwrapParentheses . java
camel - 16400 : camel - hazelcast - do n ' t swallow null body in consumer
added TextFeedbackTest class and updated AllTests and TextFeedbackTest files to implement unit tests for the TextFeedback functionality
replace Math . round with Float . compare for score comparison to improve precision in score comparison
updated default case values for DENSITY _ 560 , DENSITY _ 2HD , and DENSITY _ 4K in Add
move arrayclasselementoffset from hotspotcopysnippets to hotspotreplacementsutil
added logic to skip processing if there are no stages to improve performance by avoiding unnecessary processing for empty stages
added remote SCM support functionality to the Configuration and RuntimeEnvironment classes to allow users to enable remote scm functionality through configuration options
[ mieleappliance ] make mieleappliancehandler respect rinshhold state
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for logging events to improve logging consistency across the application
[ hotfix ] [ test ] fix typo in localzookeeper
added tests for ProjectGenerationEvent ' s finished and started states to ensure proper handling of project generation events in the serialization process
[ web ] add feature . select _ tool _ new _ bEHAVIOUR for preview point
refactor JavaCompiler class to improve code readability and maintainability
[ hotfix ] [ test ] increase the execution time for random read test
updated multiple Java files related to DumpHeap , TimSortStackSize2 , TestPollingInterval , BasicLauncherTest , BasicJMapTest , and Deadlock
added " -- gc - sections " and " nocopyreloc " flags to ldflags in NdkCxxPlatform . java to enable garbage collection of
updated circuit breaker URI handling in SpringCloudCircuitBreakerFilterFactory and added corresponding tests in SpringCloudCircuitBreakerFilterFactoryTests to
add miss license header
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a new method ` getAccountNet ` to the ` HttpMethed ` class and a corresponding test in ` HttpTestAccount001 `
added a check for ` availTextWidth ` before returning ` clipString ` in ` SwingUtilities2 . java ` to avoid unnecessary layout when ` avail
initialized ` flatteningIterator ` in ` FileResourceIterator ` and refactored iterator handling in ` FlatteningIterator ` to improve thread safety
updated the title and body handling in NotificationUtils . java to remove HTML tags from the title and body to ensure that the title and body are cleaned up
doc : generate sample code in the java microgenerator ( # 10 )
added test to reload and delete any existing question
fix for http : / / issues . apache . org / bugzilla / show _ bugzilla / show _ bug . cgi ? id =
added permission checks for launcher activities in InstallShortcutReceiver , Launcher , and Launcher classes to enhance security by rejecting malicious int
[ java ] : fix race condition in sequencer agent .
implemented hashCode ( ) method in AbstractParquetMapInspector class to ensure proper hash code generation for instances of AbstractParquetMapInspector
added flushing and releasing of resources in HTTP3StreamConnection to ensure proper resource management and prevent memory leaks
added AutoCloseable interface to SplitReader to enhance resource management and prevent potential memory leaks
removed the ` deepCopy ` method from the ` GsonBuilder ` class to streamline the code by eliminating redundancy
replace null return with not _ found constant in llscanner .
refactor file open and close handling in RestClientRequestImpl to use asynchronous threads to improve responsiveness and performance of file operations
updated the dispatchStatusString method call in GrblController . java to ensure consistent formatting to improve code readability
replaced ` MockFactory . class . getClassLoader ( ) ` with ` SearchingClassLoader . java ` and introduced ` SearchingClassLoader . java
jme3 / scene : add test case for bug in refresh flag
added support for LEFT _ SEMI _ JOIN in conditional checks to enhance join handling in the join condition logic
updated HttpReceiver and HttpSender classes to check for HTTP status code CONTINUE _ 100 before terminating the response and request completion to ensure proper handling of
use arrayOopdesclengthoffset instead of arraylengthoffset for good performance
http : / / issues . apache . org / jira / browse / amq - 2473 - add default policy to broker service
refactor multiple Java files to improve code organization and maintainability
added a check to ensure the application context is not running before stopping it to prevent potential errors when stopping the application context
changed the return type of the drawItem method from void to GlyphLayout to enable method chaining for better readability and maintainability
refactor metrics handling in SpringmvcClient and CodeFirstSpringmvc to use MetricsPublisher to improve metrics collection and error handling
updated formatting of method parameters in AccountAgeWitnessService . java to improve code readability and maintainability
reformatted code for consistency and improved readability across multiple classes to enhance code readability and maintainability
added support for ResourceUrlProviderExposingInterceptor in CasWebflowContextConfiguration and related tests to enhance the handling of resource URL provider
[ java ] add a return inlining to the dexpler .
[ smarthome ] fix ` ` enrichedruledto ' ' to return property instead of rule
removed ` LinkOption . NOFOLLOW _ LINKS ` from the path check in ` PathResource . java ` and added new statuses in ` AliasChecker
[ hotfix ] remove sql dialect from executionentry
replaced ` ImmutableSet < String > rDotJavaPackages ` with ` Supplier < ImmutableSet < String > > rDotJavaPackagesSupplier
[ core ] add test for astpackagedeclaration
added configuration for minimum cross - compaction unseq file level in IoTDBDescriptor to ensure proper handling of unseq file levels based on application properties
[ hotfix ] [ test ] move activeresourcemanager to active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify that the
updated imports in ZipResource . java and added error handling for URI creation to improve robustness and ensure proper URI construction with spaces in paths
updated code formatting and improved thumbnail handling in ExpandableUploadListAdapter . java to enhance code readability and ensure proper thumbnail generation logic
refactor RobolectricTestRunner to iterate over class hierarchy and merge config accordingly to improve clarity and correctness of configuration merging logic
updated filtering logic for block and item registries in ModelLoader . java to ensure only non - null registries are processed to improve robustness by avoid
removed abstract methods from ` AbstractDataChangedListener ` and ` WebsocketDataChangedListener ` , and updated session handling in ` WebsocketCollector
updated JSONPojoConvertor to handle enum types and added color management functionality to improve JSON processing capabilities and ensure correct color handling
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the ` -- view
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` and refactored related code to utilize
updated GyroControl to implement OrientationEventListener and added orientation correction functionality to enhance sensor responsiveness based on device orientation changes
change biome list size to match the length of the biomegenarray
updated eval method calls to use ` print ` instead of ` println ` to improve code readability and maintainability
updated the initialization of the environment variable in FileCompilerConfig . java to ensure the correct environment is used for compilation
added a new interface ByteToLongCollector to facilitate the collection of Byte - to - Byte conversions in the codebase
added a preload parameter to MMapDirectoryFactory to control map loading behavior
added custom metrics for various components in BukkitPlatform . java to provide detailed analytics for various components based on component settings
refactor QuickConnectREST class to improve code readability and maintainability
added aspect ratio and default card image in CardPresenter . java to improve UI layout and visual consistency
[ scott phillips ] fix authenticationcountselector and loginredirect to work with implicit authentication
updated cloning logic for longValues , doubleValues , decimalValues , and byteLengths in VectorHashKeyWrapper . java to handle empty arrays
added tests for ` System . nanoTime ( ) ` in ` TimeChangeTest . java ` and implemented ` nanoTime ( ) ` method in `
added trimming of input lines in MultiPartFilter . java and improved parameter logging in MultipartFilterTest . java to enhance input validation and
add livingexpanddrop event to allow player to drop their experience .
updated error handling for API key and refresh parameters in OpenUVBridgeHandler and OpenUVReportHandler to improve clarity and specificity of error reporting
[ beam - 13428 ] remove unsupportedoperatorsvisitor from beamqueryplanner . validate ( sqlnode )
added support for retrieving reverse dependencies in GraphEnhancementQueryEnvironment and introduced RdepsFunction in GraphEnhancementQueryEnvironmentTest to en
refactor character handling logic to improve code readability and maintainability
modify selection option logic in ScaleDialog . java to check for entire rocket components to ensure correct selection behavior based on component type to improve user experience by
replaced ` Arrays . toString ( bytes ) ` with ` assertEquals ( bytes , bytes ) ` in ` UpdateableResultTest . java ` to simplify the
added time boundary handling for hybrid table in BaseBrokerRequestHandler . java to ensure proper management of time boundary information for hybrid tables
do n ' t add the socketref to the poller if it be not async
fix eightmuses ripper to download full image
replaced direct calls to ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple test files to improve code
added a condition to check if the profile is not a phone and not in landscape orientation to ensure proper layout handling for phone orientations
updated Hibernate query assertions to use the unwrap method for QueryImpl to ensure compatibility with the updated query handling logic
replaced ` Files . readAllLines ` with ` readMatchingLines ` in ` SubSystem . java ` and added a new method ` readMatchingLines
removed dynamic check for streamMethod in JpaQueryExecution . java to simplify method invocation logic to improve performance by avoiding unnecessary method calls
fix npe in physprocess when entity be null
add test to clear map when value attribute be indexed
add jitsi support for join jitsi room .
updated color assignment logic in Utils . java and modified HTML message in UtilsTest . java to enhance color value handling and improve test output formatting
disable menu item if text input property be empty ( # 951 )
updated the scratch path in Aapt2Link . java to use a relative path for the link tree to ensure that the scratch path is consistent with the
replaced instances of ` Capture ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and ` ThriftOverHttpService
g3d - 1 : do n ' t select geos anymore
improve error reporting for empty stack
added isCanceled ( ) method implementations in multiple classes to ensure consistent cancellation handling across call types
added a default implementation of the ` isAnnotationPresent ` method across multiple classes to standardize annotation presence checks across the codebase
added a default implementation of the removeAllWidgets method to indicate that the default method is not yet implemented
[ hotfix ] [ yarn ] [ test ] fix yarnsessionfifoitcase failure
OpenSSLcipher . getoutputsizeforupdate ( ) should n ' t return null
added logic to force a transcode of high - res video in the PlaybackController based on media sources and video dimensions to ensure proper handling of video
[ beam - 8470 ] fix microbatchreader test failure
updated import statements and modified listener handling in GpsLoggingService . java to improve code readability and maintainability by consolidating listener management logic
changed the parameter type of ` putString ` from ` boolean [ ] ` to ` byte [ ] ` and modified width assignment logic in `
added support for handling drag events in FolderIcon to enhance drag - and - drop functionality in the application
added a method to create an empty artifact in various connector classes to ensure proper handling of null values and prevent runtime exceptions
rabbitmq : fix checkstyle issue in util / publisherimpl . java
removed conditional check for ` afterAug1 ` in ` VideoViewerActivity . java ` to simplify the logic for video loading conditions
camel - 14284 : fix camel - sftp to work on window
( chore ) camel - aws2 - * : increase mock endpoint wait time
updated variable names from ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability
do n ' t create double plant if it ' s a large fern
replaced ` setFocusable ( false ) ` with ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab . java ` to ensure focus
cloudstack - 1771 : do n ' t re - throw exception when vm fail to start
added ` acceptLicense ( ) ` method to ` DB2TestSystem ` and modified conditional checks in ` DockerDatabaseWrapper ` and ` TableIsEmptyGenerator
updated the ` units ` variable from ` final ` to ` non - final ` in ` DoubleModel . java ` and refactored unit
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support BTC / ZMW currency pairs
pbrlighting : set num of sample before run test
refactor assertTasklet calls in StepWithSimpleTaskJobParserTests for consistency to improve code readability and maintainability
changed variable declarations to be final in CentralAuthenticationServiceImplTests . java to ensure immutability and prevent accidental modifications
ggbabs ( x ) should be x + y , not x + y
added multiple calls to ` addServiceOutput ( ) ` in ` DDLSemanticAnalyzer . java ` and modified error logging in ` DDLSem
[ jbrules - 2635 ] fix decimal type coercion for bigdecimal type ( # 2321 )
added a new import statement for " org . eclipse . jdt . " in WebAppContext . java to hide Jetty ' s J
modified the return value of the authentication cache check from ` useAuthCache ( ) ` to ` false ` to simplify the logic for determining authentication success
pdfbox - 4892 : capitalize the first segment , a suggest by valerybokov
( chore ) camel - core : fix backward compatibility issue
added a null check for zooKeeper before assigning its state to avoid potential NullPointerException when zooKeeper is not initialized
updated the progress bar message in Loader . java to ensure consistent formatting to improve readability of the progress bar
refactor vibration handling to run on the UI - helper thread instead of the main thread to improve responsiveness to enhance user experience by ensuring v
added a call to updateLastRemoteStreamId in HTTP2Session . java to ensure that the last remote stream ID is correctly updated for the HTTP2
added anti - aliasing for text in the editor header and toolbar .
[ java ] : do n ' t adjust next term position in driver publication to be more efficient .
refactor ( ctannotationimpl ) : remove static import of enums in ctannotationimpl
refactor ExoPlayer class to improve code readability and maintainability
remove native method getrgbpixelimpl , use getrgbpixels instead
added a new method ` newPrintStream ` to configure output streams based on encoding to enhance flexibility in handling different output stream configurations
make touchableMovementmethod vibrate to 25 , not 1 .
fix checkstyle error in flybushdatacleaner
updated WebSocketClient constructor to include an Executor parameter to enhance flexibility in handling WebSocket connections
danielwagnerhall : do n ' t open i18n . html if i18n test fail
improve error reporting when load constant fails
added a call to restoreAuthSystemState ( ) in XmlWorkflowServiceIT . java to ensure proper authentication state management during tests
added a comparator to the CoNLLUFeatures class to enable case - insensitive comparison for string inputs to enhance functionality by allowing input strings to be
refactor JavadocTool to use a new parse method for handling multiple JavaFileObject inputs to improve code readability and maintainability by reducing
danielwagnerhall : fixing failing test for selenium - backporting
added a validation check for the length of keys in HighestKvno . java to ensure that the number of keys is 9 to prevent runtime errors
added error handling for fetching attributes in HDF5BatchReader to ensure only valid Huge objects BTrees with 1 record to improve robustness by logging
[ beam - 8470 ] use ` writeresult ` instead of ` p done ` in bigqueryio
fix : add documentation for createtemplaterequestentity
added a new file TestMultiANewArray . java to implement a test for handling multi - dimensional arrays to ensure proper functionality and error
make secondary storage configurable
refactor block ID handling in SyncBlockChainMsgHandler to improve clarity and logic flow to enhance readability and maintainability of the code
added theme setting for the content preview tab to ensure the content view uses the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leaks
added a test for HTTP idle timeout in ConnectorTimeoutTest . java to ensure proper handling of idle timeout values in the HTTP configuration
make dictionary property configurable via system property
replaced calls to ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added a new method `
updated generic type declarations and parameter settings in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to improve type safety to enhance code
changed log level from warn to debug for child node logging to reduce log verbosity and improve performance
refactor color extraction logic in ColorExtractionService to utilize a method for obtaining the hotseat palette to improve code readability and
added methods to set default data table entry and cell transformers in TypeRegistry to enhance data table functionality by allowing custom transformer implementations
removed an assertion for newAvailableShared to streamline the code by eliminating unnecessary assertions
chore : regenerate with update license year
removed the ` projectGenerated ` field and its getter / setter from ` ProjectGenerator ` and updated its usage in ` WorkspaceAndProjectGenerator ` to simplify
reformatted conditional statement in DriverUtils . java to improve code readability and maintainability
added methods to handle contact form requests in the application and created a new Contact class to enhance the application ' s capability to process contact form
guacamole - 220 : use simpleuser . getsystempermissionset instead of simpleuser . haspermission .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version
[ kie - api ] fix typo in traitfactory
updated SQL query methods to use ` findWhereNameOrAliasLikeAndActive ` instead of ` findWhereNameLikeAndActive ` to en
replaced manual resource closing with IOUtils . closeSafely for better safety to ensure proper resource management and prevent potential memory leaks
refactor multiple listener classes to improve code organization and maintainability
added a click listener for the overflow button in ExpansionViewHelper to allow users to click on the overflow button to enhance user interaction by allowing menu
updated error messages from " is null " to " is a non - null reference " across multiple files to clarify the purpose of the
ggb - 161 update the line height of the help button in the algebra view
move protobufferutilitiestest to core . util
improve side pane width calculation in jabref window ( # 4748 )
add crossref entry to aux db if crossref be present
[ geos - 7674 ] fix geoserver build after geoserver refactor
rename ` extractTypes ` to ` dataTables ` to improve clarity by using a more descriptive variable name
fix nullpointerexception when meta contact avatar change
updated import paths for Command in ShellCommand and ShellFactoryImpl to ensure compatibility with the latest SSHD command structure
added a test method to clean up the audit log table post - parameters by position in AuditLogTest . java to ensure that the audit log table is
updated inject method to return Object instead of T to improve type safety and avoid unchecked cast warnings
added regex patterns for matching comment lines and improved parsing logic in ` ACLFileParser ` and ` ACLFileParserTest ` to enhance
updated ` MapRDBFormatMatcher ` and ` MapRDBSubScan ` to use ` DynamicDrillTable ` and ` FileSystemPlugin ` instead
added support for additional ancestor dimension values in StarTreeImpl and StarTreeNodeImpl to enhance the representation of ancestor dimensions in the tree representation
added user unlock check before dumping plugins and closing open views to ensure plugins are only displayed when the user is unlocked
updated condition to check for positionStr instead of widthStr to ensure proper handling of null values in the image processing logic
refactor certificate validation logic in PKIXValidator . java to improve readability and maintainability of the code
[ hotfix ] [ test ] add archunit test for test code
updated package names from ` org . apache . shenyu . integratedtest . alibaba . dubbo ` to ` org .
vpc : do n ' t skip project network acl if not in recursive mode
updated method call from ` remove ` to ` get ` in ` RuntimeTypeAdapterFactoryFunctionalTest . java ` to ensure correct retrieval of the ` type
new feature to store undo info for property
replaced direct retrieval of the ` sun . java2d . xrgradcache ` property with a privileged action using ` AccessController ` to enhance
[ hotfix ] [ test ] make test more reliable
updated the ` doAfterFlush ` method across multiple classes to ensure proper handling of field processing and prevent potential null reference issues
added deprecation handling for non - deprecated properties in ConfigurationMetadataGenerator to ensure that non - deprecated properties are properly filtered out during JSON processing
refactor capacity and mask initialization in BiInt2ObjectMap and Int2ObjectHashMap classes to improve code clarity and ensure proper handling of array
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT value from 25 to 15 and refactored file renaming logic in Hive . java to
improve error handling in parallelsender .
added a null check for the context in SchemeAndroidIDE . java to ensure proper initialization of SchemeAndroidIDE when the context is null
[ gr - 27886 ] fix nativeimagebuildserver to use the correct classloader for native image .
change return type of modifyGrantedAuthorities method from void to List and update authority handling in SwitchUserProcessingFilter to improve method flexibility and
rename ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and introduce ` RawJaxrsIntegrationTest ` and ` J
add querytimeout support to hikaricpool and poolutilities
added DataProviders for general and supplementary characters in XslSubstringTest . java to enhance test coverage for XML and supplementary
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter . java ` and
added support for " NEXT VALUE FOR " in MariaDBDatabase and updated sequence handling logic in CreateSequenceGenerator to ensure compatibility with MariaDB versions
reformatted code for consistency across multiple Java files to improve code readability and maintainability
added TableDataManagerProvider imports and metrics to multiple test files to enable performance monitoring and metric collection for database operations
added a check for " jsse . enableMFLExtension " alongside " jsse . enableMFLNExtension " in SSLExtension .
changed iterator type from ObjectHashSetIterator to ObjectHashSetIterator and added unit tests for object sets to enhance type safety and ensure proper functionality of
updated characterRemaining calculation in Compose . java and adjusted characterRemaining text calculation in TweetFragment . java to correct the logic for handling shortened URLs
add ` ` datapoint _ ttl ' ' parameter to ` ` cassandra . datastore . cassandra _ datapoint _ ttl '
updated checkForAndKillXcodeIfRunning method to accept an option for prompting before checking if Xcode is running to enhance user experience by
added a method ` getTerrainAtCell ` to the ` TerrainGrid ` class to retrieve terrain data from a specified cell to improve the functionality of the
added default value printing in mmm Pretty . java and created a new class T6665791 . java that implements a Java compiler task to
added error logging for missing QuestEncryptionKeys . json file to improve error reporting for missing quest encryption keys
added a check to ensure push is not allowed when not pushing to the HTTP channel
refactor PointValue class to improve code readability and maintainability
removed the sign method for local witnesses in BlockUtil . java to streamline the code by eliminating redundancy
modify return statements in FileSystemView and Win32ShellFolder2 to include security checks to enhance security by ensuring only valid root paths are returned
updated method names and logic in ColumnText and PdfPRow classes to improve clarity and functionality of row handling in PDF processing
refactor undoNote logic in ListFragment to use a SparseArray for undoing notes to improve the management of selected notes in the undo note list
[ # 7751 ] updatetomatexception : fix # 7753 ( # 7753 )
added a null check for data in getTransferData method to ensure that a non - null data is handled gracefully
no effective change - remove unused code
replaced ` mLauncher . getPaddingForWidget ` with ` AppWidgetHostView . getDefaultPaddingForWidget ` in ` AppWidgetResizeFrame
refactor method handles in NashornBeansLinker to use a static Lookup instance to improve code readability and maintainability by reducing rep
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
renamed the CountDownLatch variable from ` latch ` to ` goAwayLatch ` to improve clarity and consistency in naming conventions
replaced calls to ` expectFailure . getFailure ( ) . getMessage ( ) ` with ` hasMessageThat ( ) ` for improved clarity to
replaced instances of ` ThreadLocal ` with ` null ` for the ` currentBook ` variable across multiple classes to simplify the code by eliminating unnecessary
added a ` supports ` method to the ` MethodInvocation ` class and updated the ` vote ` method in ` ContactSecurityVoter ` to check for
removed unused imports from DataLoader . java to clean up the code and improve readability
added an AtomicInteger to track the number of rows affected and updated the postUpdateLog method to accept a positive row count to enhance logging
g3d - 195 : set margin - left and margin - top in euclidianDockpanelwabstract only if need
set default value of foregroundFPS and backgroundFPS to 60 to ensure proper initialization of FPS values
added ObjectReleaseTracker assertions in HdfsTransactionLog . java and TransactionLog . java to ensure proper resource management and assertion to enhance object release tracking
replaced DefaultWebSocketFrame with a custom WebSocket frame listener to ensure proper handling of WebSocket close events
updated event listener references from ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and ` OnStateMachineError ` to enhance event handling
refactor SettingsActivity to use a dedicated method for setting the list background to improve code readability and maintainability by encapsulating background color logic
replaced ` org . apache . commons . lang3 . StringUtils ` with ` org . openhab . core . util . StringUtils ` and added
added a new method ` accumulate ` to the ` WeightedAvgAccum ` class to aggregate numeric values based on specified weight and string inputs to enhance
[ hotfix ] fix checkstyle violation in replicationsink
replaced ` VALID _ CACHE _ SET ` with ` REGEXP _ CACHE ` in ` RegExpFactory . java ` to improve performance by using a cached
added a reset method to the GameThread class to allow resetting of the game thread state
added a digest check in the login method of DigestAuthenticator to ensure that only authenticated users can log into the login service
refactor parameter handling in SavedRequestAwareWrapper to improve null checks and streamline parameter merging to enhance code reliability and maintainability by
updated logging messages in BasicConfigurator , LoggerContext , ConfigurationAction , and ContextInitializer classes to improve clarity and accuracy of log output during configuration setup
replaced conditional checks with a call to ` this . wakeup ( ) ` in ` CommitLog . java ` and ` this . wakeup ( ) ` to
added a check for Android O in PhotoViewerActivity and updated auto - complete adapter in UserAutoCompleteHelper to ensure compatibility with Android O to prevent potential crashes
updated SchemaInfoLevel from minimum to basic in SchemaCrawlerTest . java to improve clarity and consistency in schema information
replaced XMLStreamWriter with BufferedOutputStream in SaveTask . java to improve performance by reducing the number of write operations
updated character encoding handling in TestPayloads . java to use UTF - 8 instead of a fixed - length byte array to ensure proper handling of Unicode data
fix mc - 103516 not be able to delete entity with null value ( # 7505 )
removed " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter " from the list of probe configurations to stream
[ drools - 3058 ] fix serialization of multi - valued rule ( # 2178 )
removed redundant case statements in NowSearchTerm and SearchTermBuilder classes to streamline code for better readability and maintainability
pdfbox - 4892 : remove unneeded modifier , a suggest by valerybokov
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method and headers to improve flexibility and maintainability of the code
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class for creating ` ResponseBuilder ` instances to improve code readability and maintain
added a notification for the command start in AsyncBackgroundTaskManagerTest to ensure that the background task manager starts processing
refactor ` computePreviewDrawingParams ` method to include null check for ` mReferenceDrawable ` to improve robustness by avoiding null pointer exceptions
replaced ` TokenFilterFactory ` with ` CharFilterFactory ` in ` LukeRequestHandler . java ` to enhance filtering capabilities for character
replaced null checks with ParamChecks . nullNotPermitted for plot and generator parameters to improve code readability and reduce code duplication
added verbosity control to JavacStep and ExecutionContext classes to enhance output visibility based on verbosity settings
added handling for " oracle " database type in DbSqlSession . java to ensure proper schema formatting for Oracle databases
log4j2 - 1349 add logmanager . getcontext ( false ) . getclassname ( ) to asyncloggerallthreadcontextimplementations
added a new file TestShrinkToOneRegion . java that includes a main method that calls System . gc ( ) to facilitate testing of garbage collection
replaced string splitting with Splitter for package handling to improve code readability and maintainability
replaced ` utf8ToString ( ) ` with ` context ` in ` AnalyzingInfixSuggester . java ` and added a new test
updated the attachment handling logic in PushsaferMessageBuilder to use localAttachment instead of attachment to improve clarity and ensure proper encoding of local attachments
remove provenance hash from stripprovenance and stripprovenance for now
pdfbox - 2852 : remove unneeded null check
changed ` FORMATTER ` from ` final static ` to ` static ` in multiple test classes to ensure consistent usage of the ` FORMATTER `
updated the ` evaluate ` method to accept a ` Double ` parameter instead of a ` Long ` to enhance flexibility in handling numerical values and improve
[ graaljsscripting ] fix npe in graaljsscriptenginefactory due to miss configuration
changed class declarations from package - private to public in Test1 and Test2 to allow access to these classes from other packages
updated permission handling in PlayerEventListener . java to use " deny . no _ enter " and " plot " instead of " no _ permission _ event "
updated the ` getAdditional ` method to accept a ` Session ` parameter and modified related method calls to enhance functionality to support session - specific handling of
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` in ` BaseNormsFormat
added random Box , Circle , and Circle objects to the Box2D character controller tests to enhance test coverage for collision scenarios with different physics behaviors
added tests for frame buffer sizes in ` FLIGHT _ RECORDER _ OPTIONS ` to ensure correct behavior of memory management with varying sizes
updated assertions in ObjectAlignment and Options classes to check for power of 2 to ensure correct validation of output sizes
added support for target package extraction in Android instrumentation tests to enhance flexibility in extracting package names from manifest files
refactor DocHelper class to improve code readability and maintainability
updated the initialization of acceptableThrowawayItems to use an ArrayList instead of an Arrays . asList to improve flexibility in setting configuration
updated type casting for various methods in Test6987555 . java to ensure type safety and avoid potential ClassCastException issues
reformatted code for consistency in MessageHandler . java to improve readability and maintainability of the code
refactor inflection class to improve code readability and maintainability
added methods to retrieve and set the locale in EvaluationContext to improve locale management in the evaluation context
removed the import of Plugin from SummaryPrinter . java to streamline dependencies and reduce unnecessary dependencies
added a break statement in DrawerActivity . java to prevent fall - through in switch cases
updated import statements in MongoQueryCreator . java to use wildcard imports and modified debug log message format to enhance code clarity and improve logging output
added support for xwork . loggerfactory system property
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
rename bean name to avoid confusion
make localpstoreprovider thread safe
change the visibility of the deleteFiles method from package - private to private to restrict access to the method for better encapsulation
rename ` Provider ` to ` ServiceProvider ` and update related method names for clarity to improve code readability and maintainability by using more descriptive
do n ' t throw illegalargumentexception when field can not be find .
added toolchain checks in AbstractCell and implemented isToolchainCreated method in DefaultToolchainProvider to ensure that the Android SDK changes parser behaves correctly
fix deadlock in polyglotengineimpl
hhh - 16913 fix checkstyle error
updated linker flag names from ` setLinkerFlags ` to ` setExportedLinkerFlags ` across multiple files to enhance clarity and consistency in
updated method names and logic in AbsSwipeUpHandler and RecentsView to improve clarity and consistency in handling recents rotation updates
updated listener checks to use wildcard generics for type safety to enhance type safety and prevent potential runtime exceptions
abstractblockchain : use header . gethashasstring ( ) instead of newblock
use getstorepathPhysic ( ) instead of getstorepathcommitlog ( ) in defaultmessagestore
fix resource leak in micrometermetricmanager
updated message count and total messages in CompactionLog based on message status to improve accuracy of message processing metrics
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new development
added a method to check for the presence of a system UI object in the AbstractLauncherUiTest class to improve test coverage for system UI functionality
changed logger visibility from static to final in SessionRegistryImpl . java to ensure logger cannot be reassigned after initialization
added a check to return false when the cookie jar is empty in InMemoryCookieStore . java and updated tests in NullUriCookieTest . java to
[ bonsai ] do n ' t clear storage if address be already in the storage
updated the ` getText ` method to accept a ` CharSequence ` instead of a ` String ` in multiple repository classes to enhance flexibility in handling string
unignoring a test for marionette bug 1477977
added a try - catch block to handle IOException in the SocketConnector class to improve error handling and logging
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCER ` across multiple files to improve clarity and consistency in escaping
added synchronization to the DbTxnManager class to ensure thread safety during heartbeat execution
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and refactored ` wrapWithTracingAndCancellation `
added a new method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to ensure the first line is displayed correctly within the Text
updated directory paths in TestInformationSchemaWithPrivilege . java to use the system ' s temporary directory to ensure compatibility with different Hadoop environments
refactor graphics configuration retrieval logic to improve clarity and ensure proper handling of null graphicsConfig cases
tika - 4892 -- add test for oom in legacy mode
camel - 16400 : camel - core - optimize rout engine to reduce object allocation .
updated PrintTagList . java to allow users to specify a model file with - model syntax to enhance functionality by allowing users to specify a model
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test case for handling
http : / / issues . apache . org / jira / browse / amq - 4893 - fix flaky test which randomly fail
[ java ] make startfromtruncatedrecordinglogtest more reliable .
updated the calculation of the outer rectangle in LineBorder . java to improve accuracy of rectangle drawing by using a calculated arc value
added a check for empty gallery images before proceeding to avoid potential NullPointerExceptions when accessing gallery images
added a new column " DEPLOYMENT _ ID " to the database change log table to ensure the correct deployment ID is used during database operations
updated usage instructions in PrintFields . java and SetField . java to reflect the correct package names to ensure clarity and accuracy in usage instructions
removed the ` moreColumnOk ` parameter from several method signatures in ` AlterTableAddConstraint . java ` to simplify method signatures and improve
added provisional engine management in QuickfixjComponent and corresponding tests in QuickfixjComponentTest to enhance the component ' s capability to
added a private boolean field ` displayZoomControls ` and updated related methods in ` RoboWebSettings ` to manage the display control settings for mixed content
add corporea block and slab to the corporea spark .
refactor ConnectionFactory class to improve code readability and maintainability
added a method to enable disabling menu items in GpsMainActivity to enhance user interaction by providing a default icon based on app settings
updated the message for empty favorites list in ExtendedListFragment to improve clarity by using a more descriptive resource key
hhh - 16688 - remove @ serviceregistry . setting that be not need
updated MotorMountConfigurationPanel to use subpanel parameter instead of ' this ' in the constructor of MotorMountConfigurationPanel to improve clarity and
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner . java `
added getter and setter methods for creator , subject , and subject properties in POIXMLProperties . java and updated test cases in TestPOI
added a call to super . doStop ( ) in the HandlerWrapper class to ensure proper execution of the superclass ' s doStop method
[ java ] do n ' t try to read cnc file if it ' s empty .
replaced instances of ` Marker ` with ` Command ` and ` FooCommand ` in ` UnsatisfiedTypeBounds . java ` to improve clarity and
refactor jmod class handling in ClassFileSourceImpl . java to improve clarity and maintainability of the code
added nullability checks to constructors in TreeBackedElement and TreeBackedPackageElement to enhance code robustness by preventing null pointer exceptions
replaced the setting of the client ID with a new instance of PublicTokenRequest for token requests in Saml2TokenGranterTest and UserToken
fix arrayindexoutofboundsexception in abstractfrompropertyrangedescriptor
added synchronization methods to ZKAssign and ZooKeeperWatcher classes to ensure data consistency during node operations
fix error message when no context be give
[ drools - 725 ] add a test to ensure that the activiti rule flow group be activate when the agenda be deactivate .
added a return statement in HystrixDashboardConfiguration . java to ensure proper termination of the execution flow
removed redundant exception handling for PipeNotExistException in DropPipeProcedure . java and added assertion in IoTDBPipeIT . java to simplify error handling and
fix flaky test clientqueuetest # testqueuetest # testclientqueuetest
refactor : use defaultjavaprettyprinter in ctreferenceimpl . tostring ( ) ( # 2178 )
changed the visibility of the validateInstance method from public to protected to allow subclass access to the validateInstance method
refactor GeoPointField , GeoPointTokenStream , GeoPointInBBoxQuery , and GeoPointPrefixTermsEnum classes to improve code organization and enhance
added a new class FakeBuildable to provide a mock implementation of FakeBuildable for testing purposes
fix nullpointerexception when empty bucket be use . close # 1893
rename ` ` rule path ' ' to ` ` rule timeseries ' ' for clarity
added a check to return 0 if the velocity is less than or equal to the expected value to ensure that the method does not return a negative value to
replaced calls to ` getBucket ( gcsUri ) . get ( ) ` with ` _ storage . create ( ) ` and ` _
added a finally block to ensure proper resource cleanup to prevent potential memory leaks
# 1171 - ddl generation for history view : create or drop view if exists
updated the expected value in the checkEngine method from 2 to 3 in CarrotClusteringEngineTest . java to correct the expected value for the cluster
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable tests that need to be rewritten
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand . java ` and added a new ` ParserStateObject
updated object quoting strategy initialization in ChangeSet and DatabaseChangeLog classes to ensure proper handling of object quoting strategy based on configuration
replaced ` parse ( zipFile ) ` with ` fromXmlStream ( zipFile ) ` in ` SliderAppsViewControllerImpl . java ` to improve parsing
deleted the ` CsrfControllerAdvice . java ` file to remove unused or redundant code related to CSRF token handling
updated endorsedArg formatting and added a method to quote path lists to improve path handling to enhance readability and maintainability of the code
added animation handling for scrim animations in the launcher to improve visual feedback during app resumption
updated the formula for parsing long values in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest . java to ensure accurate parsing of
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added support for handling UNC paths in WindowsPathParser and PathOps classes to ensure proper handling of absolute and UNC path prefixes in path
removed the initialization of MulticastSocket in Promiscuous . java to simplify socket creation by removing unnecessary parameters
removed duplicate calls to writer . close ( ) in TestWildcard . java to improve code readability and maintainability
replace return statement to return a cloned version of nBits to ensure that the original nBits is not modified unintentionally
changed the visibility of the ` deriveCollectorName ` method from private to protected and added tests for custom collector names in ` ProfilerCollector ` to enhance
refactor MappingMongoConverter to use a dedicated method for type hint checks to improve code readability and maintainability by reducing redundancy
added performance measurement to ProxyMaker to track the creation of proxy factories
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings during compilation
include exception cause in connection exception
refactor ` reinflateWidgetsIfNecessary ( ) ` to use ` getWorkspace ( ) ` instead of ` getWorkspace ( ) ` to improve
added a new file ` DeleteInsideFileDialogTest . java ` to test file deletion in a dialog to ensure that the file dialog behaves as expected
* lwjgl2 . update ( ) now call display . update ( false ) and processmessage ( ) only if renderable be true
added test case for instructor student list page with picture
added environment variable checks in TestIgnorance . java to ensure only run methods are ignored based on the " onlyRun " system property to enhance
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature for better usability
added a null check for ` pageable ` in ` QueryDslJpaRepository ` to prevent potential ` NullPointerException ` during query execution
added a method ` computeMemorySize ` to the ` MemoryManager ` class and corresponding tests in ` MemoryManagerTest ` to validate memory size calculations to
( chore ) camel - jms : increase test timeout
refactor SnowballAnalyzer class to improve code readability and maintainability
updated the handling of the previous batch in StreamingAggTemplate . java to ensure correct indexing and state management during batch processing
throw graalerror instead of assertionerror when receiver be null
added a new method ` stream ` to the ` StreamSupplierComponent ` class that calls ` computeIntensityDefault ` with a ` TableIdentifier < ENTITY
updated logging messages to reflect the fact that a file is fully played instead of being watched to improve clarity and accuracy of logged files during playback
replaced ` setAccessable ` method with ` newInstance ` in ` InjectorProxy ` , ` StandardInjectorProxy ` , and ` Injector
[ hotfix ] [ table - planner - blink ] remove out . close ( ) from flinkstreamingcreatefunction
added unit tests for showing , altering , and altering SQL statements in various Java files to ensure correct parsing and deparsing of SQL statements
replace returning null with an empty list in AppleTest . java to ensure that the method returns an empty list instead of null to avoid null pointer exceptions
updated test assertions in NamedSetTest . java to include Quality Distribution and Inc to enhance test coverage for Quality Distribution functionality
added a condition to check if the WebSocket connection is already connected and improved logging messages to enhance error handling and provide more informative
replaced session attribute settings for ACEGI _ SECURITY _ AUTHENTICATION _ KEY and ACEGI _ SECURITY _ TARGET _ URL _ KEY
hbase - 26436 addendum : add retry to testregionreplicareplicationendpoint
updated PMS configuration in FormatRecognitionTest . java to disable PMS settings to improve test reliability by preventing unintended behavior
bug cs - 15686 : add templateservice . createovadatadisktemplates ( templateinfo parenttemplate ) event .
updated JUnit4 annotations and imports in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to improve test structure and compatibility with JUnit4
added multiple @ Override annotations in CentralAuthenticationServiceImpl . java , RemoteCentralAuthenticationService . java , and NoOpLockingStrategy . java to ensure proper
updated column names from " METRICID " to " metricVal1 " in multiple SQL statements to ensure consistency in naming conventions across the database
added a check for document count consistency in SegmentReader to ensure that deleted documents do not match the expected document count
improve logging of sip communicator exception
pdfbox - 4892 : increase length for staves , a suggest by valerybokov
disable file upload by default
added a test for default CSRF protection protection matcher allowed methods in the CsrfFilter to ensure proper handling of CSRF protection mechanisms based on
make hotspotobjectconstantimpl . isfrozen ( ) package - private
replaced ` add ` method with ` addFrequency ` in multiple classes to enhance spell checking functionality to include frequency suggestions
added an ` withWatermark ( now ) ` method to the ` FileIO ` class to store and utilize the current time for metadata matching to improve
[ hotfix ] [ table - common ] fix npe in ctestatement . copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable handling of ResultSetMetaData in query compilation
updated command - line arguments in JsLibrary . java to include the root directory name to enhance command - line options by specifying the root directory
updated the slider model parameters for the BasicSlider in RailButtonConfig . java to use Math . PI instead of 180 to improve the responsiveness of
improve performance of save .
ambari - 20509 . kerberos . expression - language should be enable by default for ambari server ( oleewere )
removed redundant check for remoteMountPointComponent before setting coordinates to streamline the code by eliminating unnecessary conditional checks
updated ` setupViews ` method to include a ` scrimView ` parameter across multiple classes to enhance the view setup process by incorpor
[ flink - 23748 ] [ state ] add periodic materialization feature to changelog backend
added a ` value ` field with getter and setter methods in ` ProtocolParameter ` , ` List ` , and ` ParamTagHandler ` classes , and
add test case for http : / / issues . apache . org / jira / browse / amq - 3473 - add
added isBumped flag and modified the parseDetails method to return a boolean indicating if the data was bumped to improve error handling and ensure
added Content - Type header to request in SearchRequestUnitTest . java to ensure proper handling of form - urlencoded data format
refactor EmbeddedClientConnector to improve code readability and maintainability
phoenix - 1010 ignore setfetchsize ( ) in phoenixresultset
added instantiation of AndroidNet with null parameters to ensure proper handling of null values in AndroidNetwork configuration
updated parameters in the LLRealtimeSegmentDataManager class to include segmentMaxRowCount and numRowsConsumed to ensure accurate tracking of segment processing metrics
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify the
hbase - 26937 tablemapreduceutil should not use hbase - prefix - tree by default
added a check for inflation failure in DesignerActivity . java and made root variable final in XMLLayoutInflater . java to ensure immut
refactor PushbackInputStream class to improve code readability and maintainability
do n ' t process fixednode node if it ' s lowerable .
updated the message resource in ErrorMessageAdapter . java to reflect the correct folder synchronization functionality
makefile : add crlf support to makefiles rule
updated the way deleted documents are retrieved and checked in ReadTask . java to improve code clarity and ensure proper handling of null values
updated the refresh flags in SimpleBatchNode to include RF _ TRANSFORM to ensure proper refresh behavior during transformations
[ gr - 27820 ] use isuninterruptible instead of isguaranteedsafpoint .
added frame buffer size callback and updated window size handling in LwjglWindow . java to improve window management and ensure proper resource cleanup
updated translation calculations in LauncherAppTransitionManagerImpl . java to use offscreen translation values to improve animation responsiveness and visual consistency
updated the implementation of ` LiteralNode ` to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` to improve handling of null values
added methods to set file and index length in ` CompoundFileWriter ` , ` FSDirectory ` , and ` IndexOutput ` classes to enhance file
added manifest handling and updated test classes in multiple Java files to improve compatibility with native libraries and enhance test coverage
camel - 15836 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource in consumer
added handling for " * " role in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to ensure proper authorization behavior for
refactor ZookeeperClientServerRegisterRepository to use a switch statement for null and empty data handling to improve code readability and maintainability by
refactor deep stub handling by replacing ` makeDeepMock ` with ` deepStub ` for clarity to improve code readability and maintainability
added a check for empty call value before converting it to a byte array to ensure that the method returns a default value when the call value is empty to
updated debug log message to use parameterized messages for better readability
modified the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and updated the algorithm retrieval logic to ensure proper handling of NoSuchAlgorithmException
tmi - tiff : fix eof exception in tiffreader
added validation for job parameters in CommandLineJobRunner to ensure job parameters are provided to prevent runtime errors
updated the expected content in tests from " foo \ r \ n " to " foo " in SmtpTests . java and MailTests . java to
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve code readability and reduce redundancy
replaced synchronized methods with AtomicLongFieldUpdater for sequence ID generation to improve thread safety and performance of sequence ID generation
added a new file ` Test . java ` containing a class ` Test ` that calculates the sum of two integers to provide a utility for calculating the sum
updated minSdk and maxSdk configurations in ShadowWifiManagerTest . java and changed fields in WifiUsabilityStatsEntryBuilder . java to
added a new Java file ` Solution . java ` that implements a solution that determines if two queries fail based on a specified number of integers to implement a
avoid concurrentmodificationexception in gossiper
refactor taskbar recreate logic to improve clarity and handling of screen orientation changes to enhance code readability and maintainability by simplifying the
updated SyncFutureCache . java to improve synchronization efficiency
update DUBBO _ PROTOCOL _ VERSION from " 2.0 . 1 " to " 2.0 . 2 " and update LOWEST _ VERSION
fixed false negative for uselessstringvalueof with literal
added a new test method ` testEllipseNoseconeDrag ` to the ` SymmetricComponentCalcTest ` class to verify the functionality of the
add target max type shard size to hollowproducer to reduce memory usage
added support for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " in TestBackwardsCompatibility .
refactor CompilationTask class to improve code readability and maintainability
updated test assertions to check for " mydb " instead of " mydb . db " and improved parameter handling in DDLTask to
added a call to execute a ClearDatabaseChangeLogTableStatement in AbstractJdbcDatabase . java to ensure that the database change log table is cleared when the
updated the ` get ` method in ` RestClient ` to handle versioning and improved null handling in ` CallPath ` to enhance
updated error messages and added a synchronized check for the Phoenix driver ' s closed state to improve error handling and ensure proper resource management
refactoring : throw unsupportedoperationexception instead of npe
added cleanup after tests in FolderPickerActivityIT and implemented screenshot functionality in FolderPickerActivity to ensure proper resource management and improve test coverage for screenshots
[ gr - 27820 ] fix memory leak in native - image generation .
fix stringhelper . removeLeadingAndEndingquotes ( ) to handle empty string
added handling for NOT _ CONTAINING in JpaQueryCreator and refactored related logic in ParameterMetadataProvider and UserRepository to improve query
do n ' t try to push the branch if it ' s too long
added a dispatch for P25Message to the P25MessageFramer to ensure the original message is preserved after processing
added null checks for the WebSocket handler before calling checkClosed ( ) to prevent potential NullPointerExceptions when handling WebSocket connections
[ ds - 3952 ] fix test failure due to auth system change
updated padding calculations in AppWidgetResizeFrame . java and modified imports in Launcher . java to improve widget padding handling and align with the new
added a method to hide all apps in Taskbar UI controllers and updated the closeOverlay method in BaseActivityInterface to enhance user experience by preventing
removed the ` synchronized ` keyword from the ` launch ` method and replaced it with ` launcher . join ` to improve performance by reducing unnecessary synchronization
updated coordinate calculations in JavaSEPort . java to use canvas coordinates to ensure proper positioning of elements within the canvas boundaries
refactor notification handling in UploadService to use a dedicated method to improve code readability and maintainability by utilizing a dedicated method for starting and stopping
fixed bug 1363247 - excessivepubliccount no longer report false positive for static final instance .
hbase - 26935 thrift test thrifthbaseservicehandler should set number of retries
reduce log level for half offset commit
added handling for FileNotFoundException in ResourceUtils and changed log level from debug to trace in AbstractCipherExecutor to improve error logging for file access issues
added a new response class ` BittrexTickersResponse ` for retrieving market tickers and tickers from the Bittrex API to
fix classcastexception in entityentry
do n ' t use class . getclass ( ) . getclass ( ) when register a websocket session
updated character encoding strings in FileUtils . java to enhance compatibility with additional character sets
added methods to manage stylesheet resources in ResourceService and updated content retrieval logic in DefaultServlet to enhance resource management by allowing stylesheet resources to be
added a call to clear the index in TestFiltering . java to ensure a clean state before processing new data
updated method call from " getAddress " to " address " in X86MethodGenerator . java to ensure compatibility with pointer parameter strategy functionality
updated database type check from PostgresDatabase to CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with additional database types
removed the check for " isEnum " in ObjectStreamClass . java to simplify the condition for better readability
replace UnsatisfiedLinkError with SymbolNotFoundError in Library . java and introduce a new class SymbolNotFoundError to improve error handling to enhance clarity and
updated BinaryResponseWriter to conditionally create a SolrDocument based on the presence of specific fields to improve handling of document retrieval based on field selection criteria
added handling for PING and PONG messages in WebSocket implementation to ensure proper processing of WebSocket ping messages
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in regular expressions
replaced individual DnsServer address imports with a wildcard import and updated server selection tests to include cache options to simplify import statements and enhance server selection
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration to conditionally enable tracing for the MessagingTracing class
refactor SQL query handling to simplify conditional checks and improve readability to enhance code clarity and maintainability by reducing redundancy
updated import statements across multiple Java files to ensure compatibility with the latest version of the rose - moe library
added handling for the ' / ' character in XMLLightweightParser to ensure proper parsing of close tags in XML responses
removed the setVisibility ( GONE ) method from TouchCharInput . java to streamline the input handling logic
added a null check for the current user before comparing IDs to prevent potential NullPointerExceptions when accessing the current user
updated JSObjectLinker to handle index correctly and improved slot assignment logic to ensure correct assignment of JSObject members based on their indices
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to remove final modifiers and simplify suffix handling to improve code clarity
mark SecurityConfig as deprecated to indicate that the class should no longer be used
added @ Deprecated annotations to multiple Java classes to indicate that these classes will be removed in future versions
deleted the ` JoglDebugAdaptor . java ` file and removed the ` plumbJoglDebug ( ) ` method from `
camel - 15836 - camel - aws : add tostring ( ) method to extrafieldpropagation
added PendingIntent for notification updates in FileDownloader and FileUploader to ensure that notifications are processed in the correct thread context
refactor nextOrd method in Lucene80DocValuesProducer to improve readability and maintainability of the code
refactor DateTimeFormatter class to improve code readability and maintainability
refactor desktop properties for DnD autoscroll configuration to improve clarity and maintainability of the code
added null and empty checks for administrator credentials in KerberosOperationHandler to ensure proper validation of credentials to prevent authentication failures
added a new constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and updated width scaling logic in BaseWidgetSheet . java to
fix ( opengl ) : use sketch window color instead of sketch window color
refactor Hashing class to improve code readability and maintainability
modified the ` accept ` method in ` FileSenderFactory ` to accept a folder path instead of a file to enhance the flexibility of file validation
updated the ` addToListIfNeeded ` method to include a ` contentDescriptionInt ` parameter for improved user information display to enhance user experience
remove unnecessary null check for type variable to streamline code by eliminating redundant checks
increased ACTIVITY _ START _ DELAY from 500 to 800 milliseconds to improve user experience by allowing more time for activity startup
added a new constant ` WEBAPP _ HOME ` in ` SolrJettyTestBase ` and updated its usage in ` JettyWebappTest
removed null check for mount and set selectedMotorSet to null in ThrustCurveMotorSelectionPanel . java to streamline code by eliminating unnecessary
added import for BufferUtil and utilized it to clear the buffer in ByteBufferPool . java to ensure the buffer is cleared before further operations
fix npe when create notification rule via rest api
rename authorization . ldap . groupbase and authorization . ldap . groupObjectClass to authentication . ldap . groupauthentication
http : / / issues . apache . org / jira / browse / amq - 4237 - durableontransient should not delete exchange
[ hotfix ] [ test ] fix bulkslotproviderimpltest failure
improve error message when client fail to connect to server
refactor CompositeHandlerAdapter to improve code readability and maintainability
refactor Quartz2Adapter class to improve code readability and maintainability
add a try - catch block to handle IllegalStateException when lookup execution fails to improve error handling and prevent application crashes
update Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improvements
chore : remove deprecate configmappednameresolverfactory # newnameresolver ( ) and use discoveryclientnameresolver
added a check for non - empty annotations before updating them in JavacParser . java and created a new test class annotatedAnonClass . java to ensure
added " com . sun . naming . internal . " to the package imports in CheckPackageAccess . java to ensure proper access control for internal packages
changed the default value of strict from false to true in StaxEventItemReader . java to enable strict processing
modified the ` readPartition ` method to accept a boolean array for exhaustion state to enhance flexibility in handling partition reading by allowing
refactor ActionResetingPool class to improve code readability and maintainability
added a check for non - null ` lightState . getXY ( ) ` before calling ` fromHSBtoHSBType ` in ` Light
refactor folder creation logic to utilize target cell coordinates and improve drag - and - drop functionality to enhance the visual representation of folder creation
added loading dialog functionality to FileOperationsHelper , FileDetailFragment , and OCFileListFragment to improve user experience by providing a visual indication of loading state
added a null check for uigestureFile before loading logs and messages to avoid potential NullPointerExceptions when uigestureFile is not available
updated method calls to use Locale . getDefault ( ) for name comparisons to ensure compatibility with different locales in field naming conventions
added a method to set listeners in XmlSuite to enhance event handling capabilities
added a new property ` loadWithNewGlobal ` and updated related methods in ` Global . java ` , ` Context . java ` , and
added ` fromJsonString ` and ` toJsonString ` methods to ` StarTreeIndexSpec ` class and updated test cases in ` TableConfigTest ` to
added import for ObjectPostProcessorConfiguration in multiple configuration classes to enhance security configuration capabilities in the application
replaced occurrences of ' \ ' with ' ' in multiple Java files to ensure consistent handling of single quotes in file paths
[ jbrules - 3514 ] fix npe in in operator ( # 2178 )
added import for FieldCache and invoked purgeFieldCache method to ensure there ' s more than one segment to avoid FC insanity
act - 1247 : add test for boundary message event on subprocesses and inside subprocesses
fix issue with static method resolution .
http : / / issues . apache . org / jira / browse / amq - 2473 - allow to specify count of message group
added constants for slot IDs in Secmod . java to improve code readability and maintainability by using named constants
added alignment parameter to widget addition and updated related methods to enhance flexibility in widget layout management
[ hotfix ] [ test ] ignore unalignedcheckpointitcase for now
added checks for specific class types in JDK13Services . java to ensure proper handling of specific Java classes during processing
added a check for the existence of the keyword before adding it to the keywordToReference map to avoid adding duplicate keyword entries to the map
fix for http : / / issues . apache . org / jira / browse / amq - 2473 - fix arrayindexoutof
removed unused methods from SegToken and SegToken classes to streamline code by eliminating unnecessary complexity
escape telegraf metric name ( # 644 )
update memberimpl to support udp port assignment .
rename operatormulticast to operationmulticast to avoid confusion
increase send timeout in eventbus
added a try - finally block to ensure thread safety during the node start process to prevent potential resource leaks
fix memory leak in sessionfactoryserviceregistryimpl
danielwagnerhall : do n ' t show / login button if no jwt _ token be available
[ pytorch ] add test for multi - dimensional tensor ( # 1892 )
added a task stack listener to clear the forced invisible state handler in RecentsView and removed it from BaseActivity to ensure that the task stack is
fix date pattern bug in defaultsplitcharacter profiling
camel - 14501 : camel - cxf - avoid npe when no property be configure
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and reduce duplication
added logging for duration calculations in LauncherAnimationRunner . java to improve debugging capabilities and ensure correct play time handling
added bailoutonexception option to c1x compilation .
updated signup and passwd variables to be null in Links . java and modified assertions in IdentityZoneConfigurationBootstrapTests . java to ensure default values are
[ hotfix ] rename previousexecutiongraphallocations to reserveallocations
( chore ) camel - time : use stringformat instead of simpledateformat
[ geot - 6892 ] add gc _ no _ data property to tiffreader .
improve error message when exception source section be null
replaced ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java ` and removed
replaced blocking the client connection wait with a CountDownLatch for connection state handling to ensure proper synchronization to improve reliability of the connection state checks
refactor ArrayTypeHandler to improve null handling for arrays to enhance robustness by preventing potential NullPointerExceptions
replaced the ` RegexpTunnel ` class with a direct access to the ` REProgram ` field and refactored the prefix retrieval logic to improve
updated the application selection from null to Application . class to ensure the application selection reflects the correct application type
[ jbrules - 2635 ] fix npe when a mutable global be modify in the kiecontainer
replaced ` Preconditions . checkNotNull ` with ` TransactionUtil . validAssetName ` for asset name and description validation to ensure asset names and descriptions
fix copy & paste for textfield
[ lgwebos ] fix lgwebos upnp discovery error
replaced direct assignment of seed and active nodes with bulk additions of nodes to improve code readability and reduce redundancy in configuration settings
updated assertions in BaseTokenStreamTestCase to include detailed position and token offsets to improve test clarity and debugging information for debugging purposes
updated getNextTime method to include a modulus parameter for better control over the increment logic to enhance flexibility in time incrementing based on the
added methods ` performItemClick ` and ` findItemContainingText ` to ` ShadowAdapterView ` and removed them from ` ShadowListView `
pdfbox - 2852 : avoid classcastexception , a suggest by valerybokov
added a method to handle graph decoding after a method scope in GraphDecoder . java and modified the afterMethodScope method in PEGraphDecoder . java to
refactor HttpSession handling in HttpSessionDestroyedEvent and add unit tests for HttpSessionDestroyedEvent to improve session management and ensure proper functionality of
added a test to change the service name in the Zipkin span to a manually provided one to ensure that the Zipkin service name changes correctly
added logging for excluded classes from the JAR in JavaInMemoryFileManager and JavacToJarStepFactory to improve debugging capabilities and clarify
renamed ` SeparatedProjectGenerator ` and related classes to ` SeparatedProjectsGenerator ` and ` SeparatedProjectsGenerator `
increased the timeout for the tryLock method from 4 seconds to 10 seconds to allow more time for the method to complete successfully
updated ConfluentSchemaRegistryDeserializerProvider to include default cache capacity parameter to enhance flexibility in schema registry handling by allowing configurable cache capacity limits
rename the variable ` remind ` to ` checkAtStartup ` for clarity to improve code readability and maintainability
added methods for handling strongKeys , weakKeys , valueStrength , and softValues in NodeGenerator . java and refactored the NodeFactory
hhh - 14501 avoid unnecessary check for non - transient on non - hibernate proxy
added support for PROTO _ PROPERTY _ NAME and setPROTOCHECK methods in ScriptObject . java to enhance object prototype manipulation by allowing
updated DEFAULT _ READ _ MODE from " heap " to " mmap " and refactored the instantiation of ImmutableSegmentImpl to use a variable for segment
added support for ByteArrayTemplate in ArrayTemplateBuilder to enhance functionality for handling byte arrays
added Hipchat integration to SamlServiceProviderProperties and created HipchatConfiguration class to enable support for Hipchat integration in SAML service provider
replaced List < URL > with Set < URL > for commandRegistryUrls in CommandRegistry . java to ensure uniqueness of URLs to avoid redundancy
updated warning message to include the current context and added debug logging for uncovered HTTP methods to improve clarity of warning messages for debugging purposes
camel - sftp : fix npe in sftpconnector when login with sftp repo fails .
http : / / issues . apache . org / jira / browse / amq - 2473 - do n ' t set transactionmanager
bug cs - 16171 : fix checkstyle issue in vmwareresource
refactor Timers class to improve code readability and maintainability
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to align with the
removed deprecated constants from UAX29URLEmailTokenizer and TestUnit
removed the ` Map < Object , Object > ` interface from the ` ScriptObject ` class and updated related tests in ` ContextTest . java ` to
refactor EventBusMetrics class to improve code readability and maintainability
( scott phillips ) remove dependency on ep . getlanguage ( )
updated JaversTransactionalDecorator to implement InitializingBean instead of Javers and modified ensureSchema method implementation to enhance bean initialization and ensure schema
removed null check for pgTypeName before adding it to the map to simplify the code by avoiding unnecessary null checks
added server settings for handler1 and handler2 in ScopedHandlerTest . java to ensure proper server configuration for handler instances
log calltimeoutexception in wait notify phase when call timeout
replaced ` StringUtils . isBlank ` with ` StringUtils . isEmpty ` for username and password checks in ` RestLoginProcessingFilter . java ` to ensure that
updated permission check from ` Objects . equals ` to ` equals ` for permissionNode to ensure proper handling of wildcard permission checks
renamed the variable ` encoding ` to ` sourceCharset ` and updated related methods to improve clarity and consistency in naming conventions
changed the type of ` postLogin ` from ` byte [ ] ` to ` String ` and updated related methods to use ` String ` instead of `
updated imports and refactored simulation handling in GeneralOptimizationDialog . java to improve code clarity and ensure proper simulation management
camel - 16400 : camel - core - optimize to allow to turn off context reload by default .
updated log4j configuration to include additional root logger properties to enhance logging capabilities by providing more detailed information about log levels
refactor PrologSizeSanityCheck class to improve code readability and maintainability
refactor NearbyListFragment to improve code readability and maintainability
added a check for non - mark support before invoking ` invokeSafely ` in ` RequestBody . java ` and created a test for non - mark
added a check for the enabled state before accessing the TCP port in EmbeddedNeo4jServer and improved debug logging in DefaultBeanContext to ensure
fix a bug in movementdebugcommands that could cause npe .
modified the ` random ` method to include a ` halfLengthTotalWeight ` parameter for improved weight allocation to enhance the flexibility of the random
refactor GsonParser and MetricsResourceTest to simplify cache string handling and improve error message formatting to enhance code readability and maintainability
added comments for clarity to improve code readability and maintainability
replaced multiple instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` across multiple classes to standardize transaction
refactor PipeTaskCoordinator to use PipeTaskCoordinatorLock instead of ReentrantLock and introduce a new PipeTaskCoordinatorLock class to improve thread
updated DefaultSdkProvider to conditionally use preinstrumented JARs based on a system property to enhance flexibility in handling instrumented JAR
changed the conditional check from ` ! isSilent ` to ` isSilent ` in ExecDriver . java ` to simplify the logic for handling silent operations
added checks for default and required fields in the IndexSchema class to ensure proper error handling for invalid fields during schema validation
refactor the repair logic in StorageProxy to improve read repair handling to enhance clarity and maintainability of the code
replaced ImmutableSortedSet with Iterables . transform for adding system include roots to improve code readability and leverage project filesystem functionality
updated Date initialization and added sensitivity checks for Subject Key Identifier and Serial Number in AdaptableX509CertSelector . java to enhance certificate validation and ensure
log4j2 - 1349 log4j2 - 1349 use abstractappender . parsestring ( ) instead of integer . parseint (
deprecate guiscreenevent in 1.16 .
added methods to manage category addition and removal in CategoryEditSearchRecyclerViewAdapter to improve category management functionality in the application
# 1893 - enh : add servercachetype parameter to servercachefactory . createcache ( string , servercacheoptions ) ...
refactor mass and CDOverriddenBy assignments in RocketComponent to use a loop for better readability to improve code clarity and maintainability
replaced the ` doCompile ` method with a ` post ` method in ` JavaCompilerService ` and added resource cleanup in ` SynchronizedTask
refactor task handling in MultiThreadedBuildRuleResolver to use a Supplier for better null safety to improve code clarity and maintainability by reducing
refactor WanReplicationServiceImpl to use a volatile reference for the executor and improve thread safety to enhance thread safety and prevent potential null pointer exceptions
added null checks for tTable and its TTable to enhance robustness by preventing potential NullPointerExceptions
refactor code to use lambda expressions for lambda expressions to improve code readability and reduce boilerplate code
added unit tests for the Files class and implemented the delete method in Files . java to ensure proper functionality and error handling when attempting to delete a
removed exception handling for socket closing in ServerSocketAdaptor and SocketAdaptor to simplify resource management by eliminating unnecessary exception handling
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replaced ` currentWorkingDirectoryList . clear ( ) ` with ` addWorkingDir ( f . toString ( ) ) ` in ` addWorkingDir ( )
added null check for ' cn ' in ItemInfo . java and set insets in Workspace . java to ensure proper handling of item information and maintain layout
changed the access modifier of the static String variable from public to private to restrict access to the class for better encapsulation
updated URLs in SimplePostTool . java to replace " csv - Durl " and " json - Dtype " with " application / json - jar
apps - 2892 fix infinite loop in algebraitem . issymbolic ( )
refactor JavaxWebSocketClientContainerProvider to streamline client container startup and error handling to improve code readability and ensure proper resource management during shutdown
updated condition to check if the type is not null to ensure proper handling of null types in the code
ensure web application be clean up after each test .
added a method to retrieve resources based on a search string in RemoteBrowseHandler . java to enhance search functionality by allowing dynamic retrieval of resources
removed the visibility setting for the neutral button in SetupEncryptionDialogFragment to streamline the user interface by removing unnecessary UI elements
[ ds - 3952 ] itemdao # countitems ( list < collection > collection , boolean includearchived , boolean includewithdrawn
updated SQL statement syntax in DDLTask . java to improve readability and consistency to enhance code clarity and maintainability
added exception handling and logging for OAuth2 exceptions in CheckTokenEndpoint . java to improve error reporting and debugging capabilities
updated multiple Java files to improve code organization and maintainability
updated identity zone endpoint tests to use parameterized responses instead of direct requests to improve test coverage and ensure correct handling of identity zones
updated dismiss delay from 20000ms to 10000ms and enhanced tooltips in SQL console to improve user experience by allowing more time for var assignments
update txt _ run _ single _ method to support junit5
replaced ` HumanReadableException ` with ` RuntimeException ` for error handling in ` WorkerShellStep . java ` to improve error reporting for external processes
[ hotfix ] [ core ] make flink - streaming - java - java - connector - java - java - java - plugin experimental
fix typo in streamcepstrumsource
updated index handling in List . java to ensure index does not exceed bounds to prevent index out of bounds errors
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure correct handling of Parenthesis instances in tests
added a confirmation option to the DebugPaste class to allow users to specify a confirmation option for the debug paste command
improve error message when no endpoint can be find
simonstewart : do n ' t focus the mathquill ggb anymore
updated imports and class references from ` AbstractDescriptionArg ` to ` GoBinaryDescriptionArg ` in ` GoBinaryDescription . java ` to improve
updated the logic to retrieve the application ' s logback . xml if it exists to ensure that the application ' s logback . xml file is accessible
replaced ` RetryListenerSupport ` with ` SecondDummyRetryListener ` across multiple files to standardize the retry listener implementation across the application
report whole count as decimal ( # 498 )
made fields ` email ` and ` author ` final in the ` Contribution ` class to enforce immutability of these fields during object initialization
refactor JUnitFormatter to use a loop that appends a period instead of a for loop to improve readability and maintainability of the code
refactor how elements are retrieved and instantiated from the fields map to ensure proper type handling and prevent potential ClassCastException
enhanced error messages in StaxEventItemReader to include the resource URL to improve clarity of exceptions related to resource validation
simonstewart : fix a bug in the testmultireadertest that cause a test failure in some case .
added null check for currentProfile before attempting to find a client to avoid potential NullPointerExceptions
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure namespace declaration is added correctly for the new element
added cryptographic parameters to the KeyStoreManager class to enhance security by preventing cryptographic operations
changed method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` Mesh
act - 3481 : use correct engine version when deploy process
updated resource loading and property settings in SpecificCompiler . java to improve clarity and consistency in resource management
improve handling of isolate thread attach in entry point snippet
refactor GenericUDFMapValues to handle null maps safely to improve robustness by avoiding potential NullPointerExceptions
rename " interceptors " to " handlerinterceptors " in EndpointWebMvcAutoConfigurationTests to clarify the purpose of the configuration
add config to enable oil spouts by default
added file deletion checks and logging for the " . clean - me " file in ImportContext . java and updated file existence checks in JobQueue . java
improve error message when memoryrealm can not be read
updated import statements in CRLDistributionPointRevocationCheckerTests . java to streamline imports and improve code clarity
updated constants in ZipConstants . java and ZipConstants64 . java to use wildcard imports in ZipConstants64 . java and ZipConstants64 . java to
refactor ` newFileSystem ` methods to improve file validation and error handling to enhance robustness by ensuring only non - file paths are processed
replaced ` createHorizontalStrut ( conditionLabel . getPreferredSize ( ) . width ) ` with ` createHorizontalGlue ( ) ` in ` conditionPanel
fix flakiness of failoverupdateuristest
added SerializedName annotations to ServiceOsSpecific . java to enable serialization of service parameters for serialization purposes
fix : do not delete database entry when delete a book
refactor multiple Java files to improve code organization and maintainability
fix an issue where the response message would not be send to the client .
rename adminconsoleplugin . startup ( ) to adminconsoleplugin . restart ( )
replaced unregisterHandlers ( ) method with direct assignments for binaryConsumer , textConsumer , and closeHandler to improve code readability and maintainability by reducing
added configuration properties for device ID transformation and table logging to enable dynamic configuration of device ID and table logging settings
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and modified core initialization in ExitableDirectoryReaderTest . java , added Delay
updated the condition for mockTsp to check if getAccessError ( " http : / / timestamp . comodo . com / rfc3161
fix p2pkh output script generation for witness
added " / schema / types / fieldType " to the expression in IndexSchema . java to support additional field types in the schema
added null and argument completers in Completers . java and created a new test class OptionCompleterTest . java to enhance the completer
s3utils : fix checkstyle violation
change data types of sourcePeerId from String to int in BatchIndexedConsensusRequest , IoTConsensusServerImpl , LogDispatcher , and IoTConsensus
refactor file handling logic in FtpHelper . java to streamline file upload process to improve code readability and maintainability by reducing
added alpha transparency for the reply button in TweetFragment . java to improve visual consistency of the reply button for better user experience
updated expected timestamp formatting in AccessLogSupportTest . java to improve clarity and consistency in expected timestamp formatting
update marycachetest to use tmp / testfiles - deleteme instead of testfiles - deleteme
removed redundant null checks and simplified subscriber initialization in ` SettingImpl . java ` to improve code readability and maintainability
replaced initialization of XMLObjectProviderRegistrySupport with a null check for the marshaller in AbstractSamlObjectBuilder . java and AbstractSaml10ResponseView .
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging stack traces
added a check for file existence in dev mode in AssetsController . java and updated test cases in AssetsControllerTest . java to ensure
[ hotfix ] [ rocksdb ] add writeoptions to rocksdbkeyedstatebackend
change the default value of the DEFAULT _ FORMAT string from " value - tag - index " to " value - index " to standardize the format for
added request hint for douglas . minprecision = 1 . fix # 189
increase waitatleast for secp256k1 and altbn128 ( # 244 )
[ java ] rename ducesandboxtest to sandboxtest for clarity .
camel - 1114 fixed the unit test error of camel - cxf
make forwardpropagatetree public so it can be use by other class
updated the SQL query in JDBCExample . java to include an additional parameter to enhance query flexibility by allowing multiple time ranges
improve error message when $ { project . basedir } expression be miss
refactor Style class to improve code readability and maintainability
added zoom handling for back key events in ShareActivity to enhance user experience by allowing back navigation in the ShareActivity
added a condition to skip processing for deprecated fields in Json . java to ensure that deprecated fields are not processed during JSON processing
added fade - in and fade - out animations for the send layout in the LauncherFragment to enhance user experience by providing visual feedback during
[ hotfix ] fix checkstyle violation in utils
added a Progressable parameter to multiple methods in the Utilities and HiveBinaryOutputFormat classes to track progress during file operations for better debugging and monitoring
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
fix ` ` update color ' ' button in contribution list
rename hyervisortemplateadapter for good clarity
added a check to set ` dPath ` to ` user . dir ` if it is empty to ensure the application uses the system ' s user directory
defaultaudiosink : do n ' t skip audio format with no sample rate
log4j2 - 1349 log4j2 - 1349 : remove unnecessary call to stringmap . contains ( )
updated VerificationInOrderWithCallsTest . java file to improve test coverage for verification order with calls
updated the parameter in setFromAxis method from axis . z to axis . x to correct the argument for setting the quaternion
updated the constant name for COLLECTION _ DELIM from " colelction . delim " to " collection . delim " to improve clarity by
add a test to verify that the first listener be connect at start .
[ netbeans - 5355 ] fix documentation generation for union type
refactor one - handed mode checks to use a separate variable to improve code readability and maintainability by reducing repetitive logic
added onDetachedFromWindow method to ensure proper cleanup of running tasks to prevent memory leaks
added a dictionary resource parameter to the MorfologikAnalyzer and MorfologikFilter classes to enhance flexibility in specifying
changed variable declarations from ` count ` to ` thrown ` in ` ResultSetTest . java ` to ensure proper handling of exceptions in the test cases
changed the initialization of ` InitializeProjectMessage ` to use an empty string instead of a debug string to allow for more flexibility in project initialization
replaced ` AtomicReference < Boolean > preventedByLocking ` with ` AtomicBoolean ` preventedByMVCC ` and updated related logic to
refactor tooltip text handling in ComponentTreeRenderer to improve clarity and maintainability of tooltip text management
increased the timeout duration for the zipkin server from 5 seconds to 10 seconds to allow more time for the zipkin server to start up properly
deviantart now login to deviantart if no deviantart login
replaced the KNOWN _ GOOGLE _ SIGNATURES array with constants for Google package keys to improve code readability and maintainability by
updated method call from ` solutionBusiness ` to ` createSolutionBusiness ` to improve clarity by using a more descriptive method name
added a new method ` notifyWindowStateChanged ` to handle window state changes in ` WWindowPeer . java ` to improve event handling and logging for window
added email description to template data in ` EntityGroupKeyContentFormatter ` and set it in ` TestEntityGroupKeyEmailContentFormatter ` to enhance
updated return statement to use data . remove ( sel ) instead of remove ( sel ) to ensure the correct data is removed from the data structure
updated the ` getISO3Language ( ) ` method to handle different language lengths and improved error handling for locale - specific return values to enhance
refactor ChangeLogParser usage to improve code readability and maintainability by using a dedicated parser method
added a check to return early if screen pinning is active to optimize performance by avoiding unnecessary processing when screen pinning is active
added methods to handle no chart data and text descriptions in Chart . java to improve user experience by providing clear text for chart data availability
replaced multiple instances of ` checkValid ( ) ` with ` checkHeadWritten ( ) ` in ` Http1xServerResponse ` and ` Http
improve performance of nettyresponse # write ( )
added a " : scheme " header with a value of " http " in Http2Test classes and updated test method names for clarity to
fixed - rlocalcachedmap . entryset ( ) and rlocalcachedmap . entryset ( ) method throw npe if storemode = local
camel - 14284 : camel - jpa - do n ' t register jpa component if it do n ' t exist
fix typo in physicscharacter
added a null check for the reparsedFunction in the parser condition to ensure that the parser correctly handles cases where the reparsed function is not initialized
updated logging variable names and refactored order book handling in BitstampPusherService . java to improve code readability and enhance order
added deprecated methods for old upload segment handling in FileUploadDownloadClient to prepare for future removal and improve code maintainability
updated the findOne method to include a filter parameter in MongoDbTailTrackingManager to enhance data retrieval based on specific criteria
( chore ) camel - juel : add miss predicate to language test
added bounds checking for alpha in RecentsView . java to ensure alpha values are within valid range to prevent rendering issues
updated import - package string formatting in ManifestReversion . java to ensure consistent formatting to improve readability and maintainability of the import - package string
refactor DataSyncConfiguration class to improve code readability and maintainability
added JavaSnippetRepository initialization in JavaLanguageServer . java to enable snippet repository functionality
refactor loop structure to use a for loop for updating timeBuckets to improve code readability and maintainability
danielwagnerhall : update chromedriver to point to the new googleapis page
camel - 16400 : camel - core - optimize pg event listener to use prepared statement
fix rome feed parser to work with rome 1.2 . 0
added content length header handling in TransferCompletionHandler and streamlined header management in NettyAsyncHttpProvider to improve transfer handling and ensure consistent header management
refactor Dialog class to improve code readability and maintainability
removed the constructor from EnhancedRuntimeException to streamline exception handling by eliminating unnecessary parameters
make socketappendertest more resilient against intermittent failure
camel - 15836 : remove deprecate eventadminendpointbuilderfactory .
updated method signatures and parameters in ByteArray . java for consistency to improve code readability and maintainability
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve input handling and prevent potential crashes
camel - 6770 : camel - restlet - allow to turn off test that fail due to camel - 6770
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method to simplify the method signature by eliminating unnecessary parameters
move hazelcast . test . modulepath to test . modulepath so it can be use in test suite
added source directories to the JavaLanguageServer and JavaServerConfiguration classes to enhance the clarity and functionality of the compiler initialization process
added a new menu item for muting hashtags in the TweetPager to improve user experience by allowing muting of hashtags
corrected spelling of " ancestor " and " descendant " in multiple files to improve code readability and maintainability
updated y - coordinate calculations to use ` Math . max ( 0 , pos . getBlockY ( ) ) ` instead of ` pos . getBlockY (
updated ` selfCheckDataTypes ` method to include ` PathNotExistException ` and improved error handling in ` InsertNode . java ` to en
updated formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] remove unused mailboxexecutor field from abstractstreamoperatorfactory
hbase - 27819 addendum fix the hbase - 27819 test failure
refactor meter ID mapping to use method reference to improve code readability and maintainability
updated the constructor of BlockJUnit4ClassRunner to use getJavaClass ( ) instead of getTestClass ( ) to ensure proper initialization of the class
[ k8s ] use lasttimedata instead of remoteitems when delete a k8s resource
update calculation for allAppsCellWidthPx by adding two columns to improve layout consistency in the user interface
[ hotfix ] [ core ] reduce code duplication in coreoptions
replaced direct calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to improve code read
added a call to writer . forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the merging process for improved performance
updated the Session interface to accept a Closeable interface and changed method return types to void to void to improve flexibility in handling session closure operations
refactor GetLocations class to improve code readability and maintainability
updated exception handling to check for null ex before printing stack trace to improve error handling robustness by avoiding null pointer exceptions
replace UncheckedIOException with Ignore in Content . java to handle specific exceptions gracefully
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with the latest Android framework features
ruby flavor : use charsequence instead of string for repeat
changed log level from warn to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask . java to
simplify code by remove the use of the usecaches flag
updated ` CasGeoLocationConfiguration ` to use ` Resource ` instead of ` MaxmindProperties ` and improved database reading logic to enhance flex
update test to match new page
updated ` useEncodedQualifierListOptimization ` method to include ` Scan ` parameter to enhance query optimization by excluding raw tables
removed public access modifier from several methods in ApprovalStore and ApprovalControllerService classes to enhance encapsulation by restricting method
added a mechanism to cancel download notifications when the download process is in progress to ensure that downloads are in progress before proceeding
replaced the method ` getOpenView ` with ` getAnyView ` in ` AbstractFloatingView . java ` and added a new method ` getView `
updated the project version from " 1.0 . 11 " to " 1.0 . 13 " and modified copyright year for OpyRight 2000 to
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to improve thread handling consistency
refactor GsonBuilder class to improve code readability and maintainability
added null check for circleCenters before adding it to fixedPoints to avoid potential NullPointerExceptions when adding to fixedPoints
remove espresso . espresso . home option and use truffle . espresso . home directly
doc : fix typo in ctcodeelement javadoc
refactor DeleteSessionAction to use instance variables instead of boolean flags to improve code readability and maintainability by reducing redundancy
corrected spacing in InvalidDocumentStoreApiUageException class constructors to improve code readability and maintain consistency
initialized ` sz ` to 0 in ` JoinQParserPlugin . java ` and modified result assignment logic in ` SolrIndexSearcher . java ` , and
updated the call to triggerMediaScan to include the file parameter to ensure the media scan is triggered on the correct file instance
removed conditional printTestResults based on verbosity settings to simplify test result posting logic
added custom G - code settings from customGcodeText1 , customGcode2 , 3 , 4 , 5 in MainWindow . java to enhance
( chore ) camel - additional - jaxb : use bufferedwriter instead of printwriter
refactor JsonElement class to improve code readability and maintainability
added JUnit exceptions handling in TestBadConfig . java to ensure proper exception management during tests
added a method to remove fragments and action bar from GpsMainActivity to ensure proper cleanup of fragment management and action bar visibility
fix broken spanish token test
updated range handling in multiple handler classes to use ` Range . Byte ` instead of ` Range . Range ` to ensure proper handling of zero length
updated the file path for the ` gcodeFile ` and improved debug output formatting in ` VisualizerCanvas . java ` , and modified the
added support for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " in TestBackwardsCompatibility .
fix checkstyle violation in assertion _ sync _ with _ instanceofassertfactories _ test
added a check to ensure that the output stage is not null before proceeding with operations to prevent potential NullPointerExceptions during query execution
fix : do n ' t expand file directory in integrity check
added import for SolrClient and removed unused shardToClient field to streamline code by eliminating unnecessary dependencies
added null check for ` fas ` before accessing its properties to avoid potential ` NullPointerException ` when ` fas ` is null
reformatted code in NestedRepositoryTreePanel . java to improve readability and maintainability of the code
changed the access modifier of the constructor of ExtensionTypeHeader from package - private to public and added a check for the extension type range to ensure that the
pdfbox - 4892 : improve exception handling , a suggest by valerybokov
( chore ) camel - prometheus : fix typo in prometheus properties
added error handling for state machine trigger errors in ReactiveStateMachineExecutor to improve robustness by properly managing state machine errors during event processing
added a test to verify that multiple Python executables on the path are set correctly to ensure that the configuration correctly returns the first executable path
added a default button to the root pane in InitialAccountRegistrationFrame . java to enhance user interaction by allowing the sign - in button to open a
added support for dynamic semi - join reduction for map - joins in Hive configuration to enhance query optimization in map - joins
added exception parameter to error logging in RegistrationRestRepository . java to improve error reporting for better debugging
move reflectionutils to util package instead of reflection
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created unit tests for the ` O
removed the private ` center ` variable across multiple classes to streamline code by eliminating unnecessary assignments
updated conditional check for pcollection in RegisterAndProcessBundleOperation . java to simplify the condition for better readability
refactor SslContextFactory to improve SSL configuration handling
[ hotfix ] [ test ] remove unused constant in configurationproperties
changed the return value from " access _ confirmation " to " access _ confirmation _ error " in AccessController . java to provide more descriptive terminology
[ 3.0 ] enable context classloader for reference config ( # 1894 )
added a ` shiftRows ` method to ` HSSFSheet ` and modified the ` shiftRows ` method to include a ` copyRowHeight ` parameter
updated rollover icon and pressed icon names in FontImage . java to improve clarity and consistency in naming conventions
updated grid translation handling in TaskViewUtils and refactored related methods in TaskViewSimulator and RecentsView to improve task view rendering
refactor Assertions class to improve code readability and maintainability
added null checks for currentDateTimeFunction in multiple database classes to ensure safe retrieval of currentDateTimeFunction from the database
added a method ` anonymousPath ( String path ) ` to ` IOUtils ` and utilized it in ` Log4jUtils ` to
updated the ` call ` method in ` DigitalWellBeingToast ` to include a ` contentDescription ` parameter and adjusted related calls to enhance task
[ java ] increase wait time if there be no meta server .
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
fix nullpointerexception in genericitem
added Hibernate integration and a new test for fetching post details in BidirectionalOneToOneNPlusOneTest . java to enhance functionality
added a call to removeExtraEmptyScreen ( ) in Launcher . java and modified startSearchPageIndex initialization in LauncherModel . java to ensure
updated the initialization of ` baseDerivedRefs ` and ` s ` in ` MarkBasePointersPhase . java ` and added null check in ` IndexedValueMap
updated string formatting in GoogleLineChart and GooglePieChart to use double quotes instead of single quotes to improve readability and consistency in string representation
do n ' t swallow interrupted exception
[ iotdb - 4978 ] fix walprettyprinter to print walprettyprinter ' s position ( # 7751 )
changed the port from 1 to 0 for the Transceiver initialization in TestNettyTransceiverWhenFailsToConnect . java to ensure the transceiver starts
sort log event before generate a report
added a test to verify CSV line retrieval with escaped quotes to ensure correct handling of escaped quotes in CSV lines
make chinese sr test run faster
do n ' t send iq with remote jids that we do n ' t support .
removed the @ JniImpl annotation from the VM class to streamline the code by eliminating unnecessary dependencies
updated method calls and configuration settings in Fetcher2 . java to improve clarity and consistency in configuration settings
added conditional checks for video headers format in FFMpegVideo . java and removed unused print statements in MediaInfoParser . java to ensure proper handling of
updated test cases to reference " other _ package2 " instead of " other _ package " to align with the new package naming conventions
fix wordborder # setdwordbordersize ( ) and wordborder # resizedwordborder ( ) to
hbase - 25819 hmaster should return wal group replication status if region server can not start
ggb - 388 remove the caller from the login event view when it ' s successful
refactor rout table test to use generate instance configs
changed the class modifier of FieldAttributes from final to public to allow access to FieldAttributes from other classes
add test to verify that maven project contain a reference
simplified the condition for comparing oldProto and newProto in PropertyMap . java to improve code readability and maintainability
refactor ` getControllerId ` method to accept a ` configId ` parameter and streamline relay addition logic to improve code clarity and
replaced sessionFactory . close ( ) with session . close ( ) in SessionRequest . java to ensure proper resource cleanup to prevent memory leaks
removed conditional check for refresh token prompt in OidcConsentApprovalViewResolver to simplify the logic for handling refresh tokens
removed a debug print statement from Http2SolrClient . java to clean up the code and improve readability
replaced a lambda expression with an enum to improve readability and maintainability of the code
refactor ConditionalOnEnabledResourceChain to improve code readability and maintainability
added a check to ensure the treeRoot ' s child count is greater than zero to enhance the accuracy of the BarrowmanCalculator logic
pdfbox - 2852 : use getunfilteredstream ( ) instead of getfilteredstream ( ) , a suggest by valerybokov
added intent result listener in order to make facebook more responsive
replaced hardcoded string " h : mm a " with a variable skeleton in ShadowICU . java to improve code readability and maintainability
removed dependency on KeyguardManager in TouchInteractionService to simplify the logic for determining device lock status
server : fix npe when delete volume from cloud
replaced ` FileChannel ` with ` AsynchronousFileChannel ` and added position tracking to enhance asynchronous file handling capabilities
reformatted code in SigInt and SigIntTest classes for consistency to improve code readability and maintainability
g3d - 1010 : refactor : move bounding box resize logic out of method
change return value from - 1 to 0 in Asset . java to correct the behavior of the method
refactor code to use a lambda expressions instead of lambda expressions for better readability to improve code clarity and maintainability
added a refresh listener to the UploadListFragment to notify the user when the fragment changes
update bibdatabasecontext to use optional . empty ( ) instead of file . tofile ( )
replaced ` emitters . items [ i ] ` with ` emitters . get ( i ) ` in ` ParticleEffect . java ` to
refactor tomcat service discovery to use findServices ( ) instead of findServices ( ) to improve code readability and maintainability by red
updated error messages in BuildRuleFactoryParams , Console , and BuildRuleFactoryParamsTest to include " . " to improve clarity and consistency in error
added a check to ensure playback state is not in PLAYING state before proceeding to optimize performance by avoiding unnecessary processing
replaced ` findByPK ` with ` findById ` in ` deleteService ` method to simplify service component desired state retrieval to improve code readability and
refactor inner class field clashes in Java2TypeScriptTranslator and add new classes InnerClassFieldClash and StructuralTests to en
added logging and follow redirect filters to Docker client configuration to enhance control over Docker logging and redirect behavior
added awtLock to ensure thread safety when calling displayChanged
hhh - 10183 fix test failure for sqlserver2008dialect
added a try - finally block to ensure the input is closed safely to enhance resource management and prevent potential resource leaks
changed the access modifier of the storeClassFile method from private to public to allow access to the storeClassFile method from other classes
added a new test class ` TestSortedSetDocValues ` and modified ` ecj . javadocs . prefs ` to handle ` NO _ MORE
updated error messages in CGIHandler . java and added JavaVM callback handler in JavaVM . java to improve error handling and ensure proper thread interruption
added support for additional line endings in LineReaderImpl to enhance functionality to handle additional input formats
changed the parameter types of ` multiFetchSourceFiles ` and ` createFetchSourceFilesRequest ` from ` List ` to ` Set ` to
[ fix ] ogrelaaderrenderer do n ' t crash when there be no vertex .
updated test method names and error handling in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest to improve cl
replaced ` FileUtil . createData ( ) ` with ` FileUtil . createFolder ( menuPath ) . delete ( ) ` in ` MacroService . java
truffle : fix javadoc for type system .
refactor JsonObject class to improve code readability and maintainability
added a check for non - negative ` _ maxIdleTime ` in ` SelectChannelEndPoint . java ` and modified the condition in ` HttpConnection .
fix farmlandblock . cansustainplant ( ) not work correctly . close # 1699
added SALT _ BUCKETS column and modified database metadata retrieval in QueryDatabaseMetaDataIT . java and UpgradeUtil . java to en
updated HttpCookie to use Locale . US for date formatting to ensure consistent date formatting across different locales
removed multiple redundant db . close ( ) calls to ensure proper resource management and prevent potential memory leaks
increased the poll duration from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests to allow more time for processing messages to complete successfully
[ economy ] add trace for economy allocation stage .
fix : source tab do n ' t work if save - all be use .
refactor ObjectMapper initialization to use a static block to improve code readability and ensure consistent line end handling
replace backslashes with forward slashes for Windows paths in NativeEnvironmentRepository . java to ensure compatibility with different operating systems
refactor application handling in multiple test classes to use a dedicated Application variable to improve code organization and ensure proper resource management during tests
[ java ] remove duplicate validation for record log .
chore : [ v1beta1 ] [ test ] replace groupname with errorgroupname in integration test
remove test that do n ' t pass on travis
added a private boolean field ` reverseImage ` and initialized it in ` CameraManager . java ` to facilitate the retrieval of the reverse image configuration
updated string comparisons in multiple classes to improve readability and consistency to enhance code clarity
improve performance of mdm match link
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in ` AuthenticationSuccessListenerTests . java ` and ` AuthenticationSuccessListenerTests .
settypes : improve performance
refactor TypeUtil class to improve code readability and maintainability
use localdatetime to avoid timezone issue
added a method ` maybeCreateAbstractMethodErrorThrower ` to handle ` AbstractMethodError ` in ` MethodHandleResolver ` to improve error handling for abstract
[ camel - 1862 ] camel - core - ognl : fix invalid ognl expression
remove unnecessary check for empty string in AbstractParser . java to streamline code by eliminating redundant logic
camel - 14284 : camel - jclouds - use iohelper to copy stream to avoid oome
( chore ) camel - test : remove @ ignore annotation from camel - consul test
added a check for ACC _ STRICT access flag on default methods in mmm Check . java and created a new test class CheckACC _
[ java ] increase driver timeout for channel validation test .
added a new file ` FileExtensions . java ` that defines constants for file extensions in the ` FileExtensions . java ` file to facilitate the
replaced the static class ` ThreadLocalDateFormat ` with a direct instance of ` ThreadLocal ` to simplify the class structure and improve code clarity
removed deprecated options for FastTLABRefill , DeferPollingPageLoopCount , and SafepointSpinBeforeYield in VMDeprecatedOptions . java to
added displayName field to Pac4jBaseClientProperties and updated related classes to support custom display names for improved client configuration flexibility
replaced RuntimeException with EarlyTerminationException in multiple operator classes and introduced a new EarlyTerminationException class to improve error handling and provide a more specific exception
updated return statement formatting in TraceFunctionAroundWrapper . java to ensure consistent code style
improve handling of closed connection in http binding
fix npe when event do n ' t have a parent
removed the KeyCrypterException from the catch block in WalletTool . java to simplify exception handling for better clarity
marked AsyncCompletionService as deprecated to indicate that it should no longer be used in favor of an alternative implementation
updated the handling of the length variable in HyphenationTree . java to ensure the correct length is used for string manipulation
add a delay to give the registration process a little bit more time .
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
updated the description of the constant ` PARAMETER _ NEEDS _ TO _ BE _ NAMED ` in ` ParameterBinder . java ` to clar
added a boolean variable ` providersChanged ` initialized to false to track if providers have changed during configuration
added a method to quote identifiers in the token rewrite stream to ensure proper handling of identifier literals in the semantic analysis
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated type parameters in the AnalysisSPILoader to use generic types to improve type safety and reduce unchecked cast warnings
modified the boundary check in the Window class to include parent - child relationships to ensure proper boundary handling and avoid potential null reference issues
added a null check for appManifest before accessing its target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator to use a dedicated method for adjusting metadata and enhance serialization handling to improve code clarity and maintainability by
added userName field and corresponding getter and setter methods to Driver and HiveSemanticAnalyzerHookContext classes to enable dynamic handling of user names during query execution
camel - 16400 : camel - xslt - allow to configure a transformer to be able to turn on or off from a file or url
added Hadoop shim support to multiple classes in the codebase to enhance compatibility with Hadoop - related functionality
updated test files to remove unused variables to improve code clarity and maintainability
do n ' t log access request if there be no context
updated ThroughputLogger to return early if startTime is zero and improved message formatting in ThroughputLogger to enhance performance logging clarity and
updated VM version checks to use ` Platform . isDebugBuild ( ) ` instead of ` system . getProperty ( " vmVersion " ) `
updated DefaultLogPublisher and MeterDetailStatisticsModel classes to store and retrieve MeterDetailStatisticsModel as a map instead of clear to en
do n ' t print logback . configurationfile on startup
added @ NotNull annotations to several CookieValueManager and related classes to enhance null safety and improve code clarity
replaced instances of ` Escaper . BASH _ ESCAPER ` with ` Escaper . SHELL _ ESCER ` across multiple files to
refactor wait strategy tests to use try - with - resources for better resource management to ensure proper resource cleanup and avoid potential memory leaks
updated the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to align with the new class naming conventions
removed unnecessary whitespace in RelativeDateFormatTests . java to improve code readability and maintain consistency
added the method ` generateShieldAddress ` to the ` RpcApiService ` class to generate shield addresses from a ShieldAddress message
changed return types of readConsoleInput methods from byte [ ] to String in JansiWinSysTerminal . java and JnaWinSysTerminal . java
updated regex patterns for platform matching in TestStabilityRule . java to improve accuracy in identifying platform - specific tests
updated DefaultSolrHighlighter to limit fragment count for multi - valued fields and modified HighlighterTest to preserve multi - valued fields to improve fragment handling
refactor tryToLogin method to accept username and password as parameters to enhance flexibility in handling user credentials during the login process
updated entity handling logic in HandlerSceneEntityDrownReq . java and removed unused imports in PacketSceneEntityDrownRsps . java to
( chore ) camel - jms : fix checkstyle issue
removed wrapCollection ( parameter ) in the update method call to simplify the method signature for better readability
added error handling for IllegalCurrencyException in BTCEAdapters . java to log warnings for unknown currencies to improve robustness by ignoring unsupported currencies
refactor subscription name comparison logic in DurableConduitBridge . java to improve clarity and reduce redundancy to enhance code readability
pdfbox - 2852 : increase default tolerance to 0.3 f , a suggest by valerybokov
updated the ` startController ` method to accept a boolean parameter for tenant isolation and refactored related test cases to enhance flexibility in
replaced ImmutableMap builder method with direct return of value from response to simplify code and improve readability
added a check to ensure attrs size is greater than zero before proceeding to avoid potential NullPointerException when attrs is empty
added abstract methods for project JDK name , JDK type , and language level in AbstractIjProjectConfig , IjProject , and I
updated the explanation of " Experimenal " to "perimental " in HiveSessionProperties . java to clarify that bucket count is compatible but
added tests for handling user details in GrantedAuthorityEffectiveAclsResolver to ensure correct resolution of ACLs for roles with specific user details
fix : use getSOLVEDJAVALangObject ( ) instead of create new reflectionmodel
added logic to determine the number of buttons based on the number of buttons available in XToolkit to ensure that the number of buttons is limited to a maximum
updated import statement for assertEquals from jdk . testlibrary to com . oracle . java . testlibrary to ensure compatibility with the latest testing framework
added a new ` MessagePackFactory ` class and refactored ` newUnpacker ` methods in ` MessagePack . java ` to improve
add ` ` is _ cave ' ' and ` ` is _ desert ' ' tag to the biome tag provider ( # 6
rename the ` present ` method to ` draw ` across multiple classes to improve clarity and consistency in method naming
updated layout setting logic in ComponentGroup . java to ensure correct UIID assignment based on horizontal state
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( ) ` with ` matcher . matches ( matcher ) ` for consistency
simplified touch handling logic in AndroidInput and AndroidLocklessInput classes to improve code readability and maintainability
[ java ] check if commit position counter be close in cluster service agent .
test and fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 579
improve error message for malformed url
bug 7499 : do n ' t return storage pool if the host be not in use ( # 7499 )
replaced ` openInput ( fileName ) ` with ` fileLength ( fileName ) ` in ` NRTCachingDirectory . java ` to improve clarity and
updated ` JavascriptCompiler ` class to use ` final ` and refactored related methods for clarity to enhance code immutability and
added synchronization to the store method in UISettings . java to ensure thread safety when accessing shared resources
added a check for native input support and made the fireDataChanged method public to allow access to the fireDataChanged method from other classes
[ hotfix ] [ spannerio ] make spannerio error message more descriptive
replaced raw types with diamond operator to improve code readability and maintainability
changed the type of the array from double [ ] to short [ ] in ObjectInputStream . java and added a new class CloneArray . java
replaced ` getClaim ( " nonce " ) ` with ` getStringClaim ( " nonce " ) ` in ` OIDCAuthenticationFilter . java `
added a check for relationship fields in DCInputSet . java to ensure proper handling of relationship fields in the input set
added a new constant CAPABABILITIES _ SERVER _ SLOGAN and updated related methods to improve clarity and functionality of the capabilities
refactor conditional logic to improve readability and maintainability of the code
updated the test to use JUnit ' s Assume for network connection verification to improve test reliability and ensure proper exception handling
added a check to return early if no missing symbols are available for a specific build ID to improve performance by avoiding unnecessary processing
updated string constants in StringHelperTest . java to include additional columns for improved data representation
added a warning log for empty data providers in Parameter . java to improve test clarity and avoid unnecessary warnings
( chore ) camel - swagger - java : use collections . emptylist instead of collections . emptymap
[ geos - 7078 ] fix for select node style with rich selection style
updated the method call from ` setRestitution ( objectId , mass ) ` to ` setRestitution ( objectId , restitution ) ` to
added a new file AutoFtpActivity . java to implement FTP testing functionality to enable automated testing of FTP sending behavior in the application
refactor token type handling in BaseSemanticAnalyzer to improve readability and maintainability of the code
added methods to retrieve and set the component state in ImageViewer , OnOffSwitch , and GenericSpinner classes to enhance functionality for managing
added a new class ` RemoteExecutionEnabled ` and corresponding tests in ` BuildableSerializerTest ` to handle remote execution behavior to ensure proper exception handling for
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` in ` ImportCsv . java ` and added ` @ SuppressWarnings ` annotation in ` PublicBAOS . java
added assertion to assert that the working score is not stale to ensure that the working score is not stale during processing
updated the configuration key for semijoin conversion from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion "
added logging for ignoring datagram message content as it is not an io . netty . buffer . ByteBuf instance to enhance debugging capabilities by
updated directory removal logic in SynchronizeFolderOperation . java and refactored file handling in FileDisplayActivity . java to improve clarity and
added assertions to verify the presence and presence of the transaction hash in the PollingTransactionReceiptProcessorTest class to ensure that the transaction hash is correctly validated
[ hotfix ] [ table - common ] deprecate schemaregion . constructschemablacklist
throw an exception if the samplemimetype be null
replaced instances of ` notify ( ) ` and ` wait ( ) ` with ` notifyAll ( ) ` and ` notifyAll ( ) ` in `
updated @ AllArgsConstructor annotation to include onConstructor _ = = properties parameter to ensure proper handling of JSON creation mode
added SQLFeatureNotSupportedException for creating an index on a view table to inform users that creating an index on a view is not supported
added a new class WebSite with associated getter and setter methods to facilitate the population of WebSite objects with associated properties
added a setup method to set the default locale to " en " in a JUnit test to ensure consistent test environment for unit tests
improve error message when download jar file fails
replaced ` containsString ( ) ` with ` Matchers . equalToIgnoringCase ( expected . value ) ` in ` MultiPartParsingTest . java ` to
added conditional checks for single parameters in SimpleExprGenerator to ensure proper handling of variable expressions in the analysis process
added a volatile boolean field ` createdVertx ` and modified the conditional check for ` vertx ` to ensure that ` vertx ` is only created
updated method calls in NodeStyleBuilder to use a NodeModel instance instead of null to improve clarity and consistency in attribute writing
updated log messages to remove concatenation of remotePath and added null checks for currentFile and currentDir to improve clarity and prevent potential NullPointerExceptions
added a new field ` ignoredReadStatus ` to the ` entries ` class and updated related methods in ` CategoryREST ` , ` FeedREST ` ,
replaced ` MavenTestingUtils . getTargetDir ( ) . toURI ( ) ` with ` MavenPaths . targetDir ( ) `
added validation for data types and updated imports in RegisterServerConsumerExecutor . java and MetaDataRegisterDTO . java to enhance data integrity by
updated the playback condition in GwtMusic . java to check if the sound is not paused to ensure that the music is only played when the audio
added a new permission for admin access to a specific area in the admin command to enhance security by restricting access to specific area permissions
replaced ImmutableMap with HashMap for query options in ServerRequestPlanVisitor . java and updated test cases in QueryRunnerTest . java and CalciteSql
refactor file name checks in ReloadableJava parsers to use path object methods to improve readability and maintainability of the code
fix flakiness in resourcestest
replaced the native method ` NMTWaitForDataMerge ( ) ` with ` NMTOverflowHashBucket ( long num , int index ) `
[ hotfix ] [ serializer ] refactor EitherSerializerSnapshot to JavaEitherSerializerSnapshot
updated AddressResolver to use a new resolver option for handling dot resolution to improve flexibility and maintainability of address resolution configuration
added a call to ` super . __ associate ` in ` RequestRockerTemplate ` and a test for it in ` RequestRockerTemplateTest `
pdfbox - 2852 : avoid npe , a suggest by valerybokov
updated XML namespace paths from " liquibase / parser / core / xml / " to " www . liquibase . org / xml / ns
truffle - api : move commonMIMEtypelocator to test source package
updated RepositoryVersionState from INIT to NOT _ REQUIRED and replaced INIT with NOT _ REQUIRED in multiple Java files to improve clarity and consistency in
updated CompareControl to include SchemaComparison to enhance comparison logic to improve flexibility in schema comparison
updated import statement for TestBackwardAnoamlyFunctionUtils from JUnit to TestNG to align with the latest testing framework standards
added a new file ` ProgressiveJPEGTest . java ` for testing progressive JPEG rendering to facilitate testing of progressive JPEG images
fix a bug in materialloader that cause some material to not work properly .
[ gr - 27886 ] make native - image build on window .
added a null check for the text before setting size in Label . java to avoid potential NullPointerException when the text is empty
updated the readVarInt ( ) method to correctly handle negative values to ensure proper handling of negative values in the data read process
made PushUtils and ThumbnailsCacheManager classes final to enforce immutability and prevent subclassing
simplified the calculation of the length variable to improve code readability and maintainability
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code and improve readability
updated the regex pattern for loading presets in componentPresetDao to improve flexibility in matching file names
updated accessibility announcement logic in TaskbarStashController and adjusted icon size in InvariantDeviceProfile and ActivityContext to improve accessibility handling and
updated node initialization to use RefreshTask instead of Args to ensure compatibility with the latest API changes
update ant task to support jdk 1.5
replaced PowerMock with MockitoJUnit for mocking QuotaTariffVO instances to improve test reliability and leverage a more modern
added static streams for error and output streams in TestSchemaToolCatalogOps . java to ensure proper handling of standard error and output streams
added a ` dfsClient ` parameter to several methods in ` FanOutOneBlockAsyncDFSOutputSaslHelper . java ` to enable the
added RepositoryMetadata support to MongoQueryMethod and related classes to enhance query method functionality to support repository - specific metadata handling
refactor to make it easy to reuse the entityresolver
updated import statements in MetaDataEndpointImpl . java to streamline import statements to improve code clarity and maintainability by removing redundancy
increased the allowed repeated DEADLOCKS constant from 5 to 10 and introduced a retry mechanism for retrying transactions to improve deadlock handling and ensure robustness
refactor BarChartActivity , LineChartActivity1 , and YAxisRenderer to improve axis handling and update stroke width calculation to enhance code clarity
added a method to validate printable characters in FsUtils . java to ensure that only printable characters are processed in the FsUtils class
rename selenide . in to selenide . using ( )
added processpluginconfiguration flag to maven - plugin - request to allow plugins to be process .
updated return statements in ProxyConnectionManager and ServerTrafficCounter to use double conversion for conversion to double to improve precision in conversion calculations
updated the resource path for the resources string in ITSystemTest . java to check for the existence of " google - cloud - vision " to ensure
guacamole - 1181 : return remote host from authenticateduser if available .
[ ds - 3952 ] add admin _ button attribute to community list request
replaced longCompactions and shortCompactions with AtomicInteger to track the number of compaction threads to improve thread naming consistency and uniqueness of thread names
replaced ` getApplication ( ) . getPackageName ( ) ` with ` resources . getResourcePackageName ( ) ` in ` WallpaperChooser . java `
updated Near . java to use a new method for retrieving visible players to improve code readability and maintainability by reducing redundancy
refactor multiple Java files to improve code organization and maintainability
refactor MlibOpsTest class to improve code readability and maintainability
replaced hardcoded string with a constant for operating system implementation to improve maintainability and readability of the code
corrected the typo in the attribute name from " referencedContainer " to " referencedContainer " in SchemeGenerator . java and added a test
updated key and initialization logic in UploadFileOperation . java to streamline encryption and initialization process for file metadata files
added @ Stability ( flavors = LOCAL | PLATFORM _ POSTSUBMIT ) annotation to WorkProfileTest . java to mark the test as stable due to
added a check to skip processing if bucketing version is not set to ensure that processing only occurs when bucketing version is enabled
replaced ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in ` GwtTestWrapper
added a new abstract class ` LockFreeBucketContendedTimeMeter ` and refactored ` LockFreeBucket ` to use it to improve clarity
nodeprobe : print thread pool stats
updated max bitrate handling in ExternalPlayerActivity and PlaybackController to incorporate user preferences for bitrate settings
updated imports and refactored conditional checks in ZipkinHttpSpanExtractor . java and added new test cases in TraceFilterTests . java to
do n ' t allow duplicate offer data model to have same payment account
remove reflection to avoid reflection call
added a method to set the project to the filesystem to ensure the project is properly initialized before use
updated JsBundle , JsBundleBuilder , and JsBundleWorkerJobArgsTest to include ProjectFilesystem as a parameter across multiple files to enhance
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] fix checkstyle violation in metricsddslcontext
replaced implementation of VersionBuckConfig with ImmutableSet and updated universes initialization to improve code clarity and ensure expected size of entries
added a try - catch block around the bindShadowClass method call in Robolectric . java to handle potential TypeNotPresentException to improve error
changed the access modifier of the validateTypes method from static to public and updated the error message to correct the method ' s visibility and improve clarity of
fix : update gapic - generator - java with mock service generation fix ( # 241 )
added SLF4J logging capabilities to SimulationStatus . java to facilitate debugging and monitoring of simulation status updates
updated VERSION _ POSITION _ Y from 138 to 150 and increased VERSION _ FONT from 138 to 14 to improve visual consistency in the application
updated NotificationImpl to run on the UI thread to ensure notifications are processed on the Event Dispatch Thread
updated return statements in ReturnsElementsOf . java for clarity to improve code readability and maintainability
fix typo in error msg
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` for handling line file documents in ` IndexWriter ` to
added a method ` getVersionCode ( ) ` to retrieve the version code from ` MainApp ` to improve code maintainability by centralizing version code handling
camel - 1114 : fix bean explicit method invocation with body parameter . thanks to jens kleine - herzbruch for
updated method calls from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to ensure
added buffer management functionality to ` IndexBufferObject ` and ` VertexBufferObjectWithVAO ` classes to improve performance and flexibility of buffer handling
added a transition for " forgotPassword " in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password change notifications
fix javadoc for jerseyclientconfiguration
int - 2 to avoid confusion
updated print statements in InstanceOfPatternMatchTest . java and refactored return statements in RemoveRedundantTypeCastTest . java and TypeUtils .
added methods to check if the contents array is empty in StringDict and Table classes to ensure proper handling of empty strings in data processing
refactor ` GenericContainer ` to implement ` AutoCloseable ` and add ` withCustomizer ` method to enhance resource management by allowing
updated logging level from info to error in MediaInfo . java and refactored test methods in RendererConfigurationTest . java to improve error reporting
added support for schema pattern configuration in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance flexibility in database connection settings
return empty _ bytes instead of null when session id be null
refactor bitmap creation logic in AndroidGraphics . java to use variable width and height calculations to improve code readability and maintainability
refactor Base64 class to improve code readability and maintainability
[ sulong ] fix single context assumption in sulong
simonstewart : ignore a test that fail on the iphone since it ' s not ready yet
refactor FlowBuilder and its tests to improve code organization and maintainability
changed the type of ` resName ` from ` ResName ` to ` int ` in ` AttributeResource ` and removed the ` ResEntry
[ type : refactor ] remove storage field from dockercontextmetagorexception
( chore ) camel - test - infra - elasticsearch : use @ before instead of @ after
modified type variable handling in ` ppp Attr . java ` and added a new class ` T6450290 . java ` with nested classes ` Box `
added logging level configuration to LoggingFlags and LoggingOptions classes to allow customizable logging levels based on user - defined settings
added logging statements to various classes for better debugging and tracking of package removal processes
added allFilesOption ( ) method to FileActivity , FileDisplayActivity , and PreviewImageActivity classes to enhance file selection functionality in the application
added deprecated methods ` forEachOperation ` and ` hasMatching ` to ` MutationOperationGroup ` for better operation handling to signal that these methods will be removed
updated the calculation of numPredictiveAppCols to account for phone devices to ensure accurate prediction of app columns based on device type
added UTF - 8 encoding to the StringUtils class to ensure proper handling of special characters in string values
added new RequestMatchers classes and corresponding tests for handling request matchers to enhance request matching capabilities in the security framework
mow - 394 : do n ' t hide input box in temporary mode
updated calculations for height and width in ProgressBar . java to correctly account for background height and width adjustments to ensure proper positioning of the knob
[ native ] use external _ functions . json instead of src / test / resources / external _ functions . json
added final modifiers to several variables in the BruteArgumentMoverHandle class to enforce immutability and improve code clarity
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gesture states during gesture handling
updated layout handling for landscape orientation and adjusted metrics calculations in Workspace . java to improve layout accuracy and ensure proper dimensions based on orientation changes
added a condition to check if the file name " / robots . txt " is a " / robots . txt " in the URL to ensure
[ netbeans - 4892 ] use a static resource for warning icon
fix an issue with advanced game setup
added a check for zero value in the division operator in UDFOPDivide . java and created a corresponding test class to ensure proper handling of division by zero
reformatted code for consistency and improved readability to enhance code maintainability and clarity
replaced hardcoded values for ` filterProcessesUrl ` and ` logoutUrl ` in ` FormLoginBeanDefinitionParser ` and ` LogoutBeanDefinitionParser `
added onDestroy method to ShareActivity and ContributionsActivity to ensure proper cleanup of upload service connections upon destruction
replaced ` thumbNail ` with ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity and consistency in variable naming
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added request timeout configuration to RaftServerConfigKeys to ensure proper request handling for RPC requests
replaced error handling for degradation of time index in TsFileResourceManager . java and modified resource management logic in ResourceManagerTest . java to
added system properties to the model source in MavenModuleLoader to ensure proper configuration of system properties
added readiness checks and metrics tracking to ServerMeter and HealthCheckResource classes to enhance monitoring capabilities by tracking readiness and bad calls
add support for custom itemblock in animated torch . fix # 189
added a null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when writer is not initialized
added a new method ` getHiveOnTezConfFromDir ` to retrieve Hive configuration from a specified directory to improve integration with Hadoop
added a link to muting users in the featuresActivity to enhance user experience by providing access to relevant users
added a property to disable direct method handle usage in reflection to improve performance by avoiding unnecessary object creation
hbase - 26909 splitonLeadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] fix code duplication in yarnclusterdescriptor
use pronunciations . getSpelling ( ) instead of pronunciations . getpronunciations ( )
fix jsonutilstest failure
added functionality to store and retrieve tweet IDs in the compose map
added a warning log for message listener termination on reliable topic to improve traceability of listener disruptions
improve error message when no class be find to analyze
replaced the import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to ensure compatibility with
updated the initialization of the ` isIncompatible ` variable in ` DLNAResource . java ` to ensure proper handling of resource compatibility checks
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to improve clarity and specificity regarding the
pdfbox - 4892 : avoid npe , a suggest by valerybokov
http : / / issues . apache . org / jira / browse / amq - 2473 - fix test failure of dlqmessage
updated StarTreeIndexSpec and related classes to enable off - heap format and changed default star tree format version from " ON _ HEAP "
truncate title to 2048 char .
updated the previewPanel initialization in JColorChooser . java and added a new Test6977726 . java file to improve the handling of the preview panel
changed log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity for extension checks
add null check for reusable bitmap in androidtilebitmap .
added a method to retrieve layout parameters in FakeView . java to enable access to layout parameters for testing purposes
added exception handling for closed cursors in DefaultCursor and a test for IllegalStateException in CursorSimpleTest to ensure proper error handling to prevent runtime exceptions when attempting
pdfbox - 4892 : simplify code , a suggest by valerybokov
added @ Ignore annotation to JMSClientTest . java to temporarily disable tests that are not ready for execution
added a private field ` ts ` with getter and setter methods in ` Message . java ` to provide a way to retrieve and set the timestamp associated with
[ opengrok ] add exceptionmapperutils to log error
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
remove legacy parameter from request in isochroneresource
removed the ' public ' access modifier from multiple test classes to enforce package - private visibility for better encapsulation
refactor CSRF attribute setting into a separate method to improve code readability and reduce duplication
improve error message when shadowclassloader can not be find
[ jbrules - 2635 ] add support for disable numeric value in decision table
changed logging level from info to debug in HiveConf . java to improve logging granularity by reducing log verbosity
added checks for null axes and joystick buttons in Lwjgl3Controller . java and updated controller management logic in Lwjgl3ControllerManager . java
updated import statements for ObjectFactory in WeldFactory and WeldFactoryTest to align with the latest Cucumber library structure
removed redundant null check for host before saving port forwards to improve code readability and maintainability
added a new configuration property ` SHOULD _ SNAPSHOT _ DATA ` to ` GlobalConfiguration ` and its getter / setter methods in ` GlobalConfiguration `
added a null check for the temporary file name before scheduling a job to avoid potential NullPointerExceptions when the temporary file name is not set
refactor LocationMarshaller class to improve code readability and maintainability
updated touch event handling logic to improve responsiveness to trackpad gestures during gesture interactions
refactor VectorReader and related classes to remove VectorReader . ColumnVectorBatch to simplify package structure and improve code clarity
updated imports from ` ArgumentMatchers ` to ` Matchers ` across multiple test files to ensure compatibility with the latest Mockito API changes
replaced instances of ` getRelativePathName ( ) ` with ` getRelativePath ( ) . toString ( ) ` across multiple files to simplify path handling
updated the ` completeMapAndTransformRow ` method to accept ` RecordReaderFileConfig ` as a parameter to enhance flexibility by allowing
added a null check for the extractor before instantiating the component to avoid potential NullPointerException when extractor is null
server : fix resource limit issue when resource limit be set to unlimited
fix potion shift event not fire .
deprecate the option ` ` cold _ reads _ to _ omit ' ' in favor of ` ` cold _ reads _ to _ omit '
added a call to ` leech . stop ( ) ` in ` ClientTest . java ` to ensure proper termination of the leech process
[ issue # 7999 ] fix npe in popmessageprocessor ( # 7998 )
refactor KeyboardAddonSettingsFragment to improve code readability and maintainability
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests that are not ready for execution
rename ` MongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references to improve clarity and
added upgrade request and response handling in UpgradeConnection and JettyTrackingSocket classes to enhance websocket connection handling and support upgrade requests and responses
added timeout functionality to Android connection handling to allow configurable connection timeouts
refactor ` getUserAccessPermissions ` and ` getTeamAccessPermissions ` methods to return a list of ` RegistrantAccessPermission ` objects
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing for quoted cast expressions to
added a conditional check for root users to ensure that the file is not writable based on the operating system ' s permissions
refactor FixedThreadExecutor to use dynamic properties for thread group and thread per group to enhance flexibility in managing executor configurations based on
added null check for field before checking its case in AbstractChangeGenerator . java to prevent potential NullPointerExceptions when field is null
updated import statements to replace ` CasEventListener ` with ` InitializingBean ` and changed method return type to ` BeanSupplier ` to improve
refactor animation handling by extracting the end animation logic into a separate method to improve code readability and maintainability
added a close method to the DeflaterOutputStream to ensure proper resource management and prevent memory leaks
added a new file gsp001 . java that tests JVMTI GetSystemProperty to ensure that system properties are retrieved at the early phase of the Agent _
refactor bean definition processor to use concrete class metadata instead of annotation utils to improve code clarity and maintainability by reducing redundancy
* add read / write method for camerateroot , lightnode , and lightnodenode .
refactor popup window disposal logic in PopupNotificationPanel . java to streamline error handling and improve code clarity
replaced instances of ` NoInstanceException ` and ` UndeterminedNoInstanceException ` with ` inferenceException ` and ` inferenceException ` to
added a method to retrieve featureValue to provide access to the featureValue variable for external use
changed the parameter type of the after method from int to long in VerificationAfterDelay to accommodate larger delay values
added onBuild and executionDriver fields with their respective getters and setters in ContainerConfig and Info classes to enable configuration of the onBuild and execution
updated icon setting logic in Toolbar . java and modified component positioning in FlowLayout . java to improve layout handling for RTL and non - RTL orient
added support for enabling position increments in StopFilter to enhance filtering flexibility based on user - defined settings
added internetAddress field in EmailsTest . java and SystemErrorEmailReportTest . java to utilize the InternetAddress class for email sending to ensure
added a new boolean variable ` mTryShareAgain ` in ` FileActivity . java ` to manage the state of share - related functionality
added terminal name handling to JansiNativePty based on the Maven POM properties to enhance terminal management by dynamically determining the terminal
updated bandwidth cost calculation to use a dynamic size based on VM support to ensure accurate bandwidth estimation for VM - specific operations
replaced direct calls to ` asyncTask . getSpan ( ) . getTraceId ( ) ` with ` Awaitility . await ( ) ` for
updated API endpoint URLs in EaseeBindingConstants . java to use the new API structure to improve code organization and maintainability by centralizing
updated sleep duration and added startup attempts for Kafka container to improve the reliability of Kafka integration tests
replaced ` hasJsonPath ` with ` hasJsonPath ` in ` SearchResultMatcher . java ` to simplify JSON path validation to enhance code read
added SSL context trust management to OkHttp to enhance security by enforcing secure connections
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to use direct method calls to improve code readability and
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` and ` StringPtg . java `
added nullability checks for stdout and stderr in ShellStep . java to enhance robustness by preventing potential NullPointerExceptions
increase asyncappender test timeout to make test faster
updated escapeDatabaseObject methods to use object names instead of table names to improve clarity and consistency in handling database object names
added a boolean field ` inputChanged ` and modified input validation logic in ` MaterialRenameDialog . java ` to ensure that the input field reflects the
added state change functionality to ShadowDisplay and implemented state management in ShadowDisplayTest to ensure proper handling of display states across different display types to enhance functionality
[ geos - 7088 ] add support for direct invocation in ows dispatcher
[ web ] add x and y key for gwt backend
updated SQL query construction for PostgreSQL version 9.0 and above to ensure compatibility with PostgreSQL version 9.0 and above to enhance query accuracy
added a nullable annotation to the message variable in QueueChannel . java to improve code clarity and prevent potential null pointer exceptions
refactor ` getPathsFromResource ` method to use ` pathUri ` instead of ` jarPath ` for improved clarity to enhance code
added support for Jenkins nodes in the remote collector configuration to enhance monitoring capabilities for Jenkins applications
refactor header attribute handling to use a dedicated method for resolving placeholders to improve code readability and maintainability by centralizing attribute resolution logic
ProtobufLogReader : improve error handling for malformed edits in the wal file
removed duplicate calls to destroyRegistries ( ) and destroyMetadataReports ( ) in DefaultApplicationDeployer and added shutdown logic in NacosRegistry to ensure
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor status code handling in GoAwayGenerator , GoAwayBodyParser , and GoAwayGenerateParseTest to support different SPDY versions to
reformatted the initialization of ` AuditEvent ` and added assertions for its data type to improve code readability and ensure correct handling of ` BadCredentials `
updated rounding error handling in interpolation methods to ensure proper handling of edge cases to prevent division by zero errors
use / defaults / instead of / defaults / to avoid conflict
refactor the addition of the DX executable to the builder to improve code readability and maintainability
added assertions to validate the equality of PointRangeQuery instances in TestPointQueries . java to ensure that the equality of PointRangeQuery instances is
hbase - 23748 testhfilecleaner . testhfilecleaner should not use hconstants . hconstants . hfile _ archive
added a check to ensure the download file name does not match the file transfer request ' s name to enhance user experience by displaying the correct file name
jedisclustercommand : do n ' t throw a jce exception , just rethrow
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] make rowtimeminibatchassgineroperator always
replaced ` RegExpBasedFilterInvocationDefinitionMap ` with ` PathBasedFilterInvocationDefinitionMap ` in ` FilterInvocationDefinitionSourceEditor . java ` and updated
refactor QMap - related benchmark classes to improve performance and clarity to enhance test coverage for different data types in unit tests
added initialization of G _ SCH _ B in HybridPlotWorld . java to ensure G _ SCH _ B is ready for use
added checks for null or empty fields and improved identifier handling in GroovyEngine . java to enhance robustness by ensuring identifiers are processed correctly and
make sure that the ` ` number ' ' drawable be set to false to avoid crash
added TCP keepalive configuration options in HiveConf and updated TServerTransport initialization to enhance server connection management by allowing configurable keep - alive settings
renamed the method ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` in ` FileRenameAction . java ` to
no effective change - remove unused code
refactor RealtimeSegmentRelocator to use lambda expressions instead of anonymous classes to improve code readability and maintainability
vpc : do n ' t create vpc if it do n ' t exist
updated WindowTransformSwipeHandler to use Math . max for windowAlpha calculation and modified condition in FloatingIconView to ensure windowAlpha is non - negative to
updated error message to specify Spring Security 4.0 schema to ensure compatibility with the latest Spring Security version
refactor multiple assertion classes to improve code clarity and maintainability
( chore ) camel - disruptor : make field final
added a new UDF class ` TestConfigureUDF ` and updated ` ExprNodeGenericFuncEvaluator ` to utilize it to enable testing of configuration
updated regex pattern matching in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve pattern matching functionality to enhance flexibility
refactor logger retrieval to use getLogger ( INTERNAL _ LOGGER _ NAME ) . debug ( ) instead of getLogger ( ) to improve code readability
replaced instances of ` updatePurgedShardNodes ` and ` updatePurgedShards ` with ` deletePurgedShardNodes ` and ` delete
added support for " 17 - preview " language in JavaLanguageModule and updated tests accordingly to enhance language support for Java 17 and improve test coverage
http : / / issues . apache . org / jira / browse / amq - 4237 - wait for compression job to finish
[ hotfix ] fix checkstyle violation in volatilereadnode
added a method to get an unmodifiable list of steps and reformatted code for consistency to improve code readability and maintainability
removed redundant ` fromBase58 ` and ` toBase58 ` fields from ` TronJsonRpc ` and updated error handling in ` TronJson
refactor currency pair creation to store variable for clarity to improve code readability and maintainability
[ micrometer ] fix longtasktimer to use base time for duration
[ hotfix ] [ euphoria - euphoria ] do not use hashpartitioner in reducebykeytranslator for partitioning
replaced colorValues and colors with CharSequence and added support for ListPreference in HostEditorActivity to enhance flexibility in handling different types of preference types
renamed ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and updated related methods to improve clarity and consistency in handling database version
added a constant for the maximum number of tweetweets in the conversation and updated the while loop condition to limit the number of tweetweets processed based on the
increased the refresh interval from 1ms to 2000ms in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map to refresh
fix for http : / / issues . apache . org / jira / browse / amq - 2473 - fix npe
fix a class cast exception in glowserver
refactor the grow method in DataIO to improve readability and maintainability of the code
removed unused import of java . io . DataOutputStream to clean up the code and improve readability
camel - 20297 camel - jbang - allow to access the file name of a part of the attachment http binding
added a call to markReadForLoad ( ) in LauncherFragment . java to enhance loading state tracking during fragment operations
added ClassNotFoundException handling to the instrumentation methods in JarInstrumentor . java to improve error reporting for class instrumentation failures
added a method to check for spill availability in HashAggTemplate to ensure proper error handling for out - of - memory operations during partition selection
replaced direct calls to ` info . info . getDocStoreSegment ( ) ` with a variable ` dsName ` for consistency to improve code readability
added a default name ID format to the supported name formats in SamlProfileSamlNameIdBuilder to ensure compatibility with different SAML name ID formats
added redirect and error handling in ChangePasswordPage . java to improve user feedback during password change operations
removed an unnecessary semicolon in Deadlock2 . java to improve code readability and maintainability
added maxidletime to nioreceivermbean
deleted the FontScalingTest . java file to remove unused code to streamline the project
added validation for date range before and after filtering in RRD4j persistence to ensure data integrity by preventing invalid date range queries
added checks to ensure numVectors is non - negative before proceeding to prevent potential errors when numVectors is less than or equal to zero
test : migrate executablereftest to junit 5
added null checks before setting view and glass pane to avoid potential NullPointerExceptions when view or glass pane are null
camel - 16400 : add wireapapapapapapapapapapapapapapapapagagen to
change visibility of setAction method from public to protected to allow subclass access to the setAction method
planner - 205 : enable topn planner by default
[ java ] remove redundant assignment of aerondirectoryname in agent test .
fixed - rbatch . execute ( ) and rbatch . executeat ( ) method do n ' t call set queued flag if the connection be already
replaced InputStream with a URL for configuration variables in HiveConf . java and removed LoopingByteArrayInputStream . java from HiveConf . java to improve
updated model creation to use criteria . getDevice ( ) instead of Device . defaultDevice ( ) to ensure correct device context is used for model creation
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to ensure proper menu inflation and handling of menu item selections to improve
refactor CertificateValidator class to improve code readability and maintainability
updated the homeDir initialization to include the " hawtio . dirname " system property to ensure the correct directory path for Hawtio integration
added handling for empty comments in Space . java to ensure consistent spacing behavior when comments are empty
made several fields volatile in multiple dictionary - related classes to ensure thread safety during concurrent access
added printStackTrace ( ) method in ContextHandler . java to improve error handling by logging stack traces
[ spongecommon ] fix integration regression for item drop test
added ` ifNotExists ` parameter to ` DDLTask ` , ` DDLSemanticAnalyzer ` , and ` AddPartitionDesc ` classes to control
volume upload : fix potential npe in nfs secondary storage
[ hotfix ] remove unused controlrequeststreamid
[ geot - 6205 ] wfs 2.0 capability transformer now support spatial operator .
added import for LuceneTestCase and annotated BasicDistributedZkTest with @ AwaitsFix annotation to address a known bug related to SOLR - 2
refactor parsing logic in Http11InputBuffer to improve readability and maintainability of the code
[ java ] change default value of isIngressExclusive to false .
replaced hardcoded cache keys with an array of cache keys to improve flexibility in managing HBase cache configurations
updated record count handling in JSONRecordReader to improve clarity and maintainability of record processing logic
added filtering for year items in CategorizationFragment to ensure only valid year items are removed from merged items
updated drawColor calls in CacheableTextView , CellLayout , and HolographicOutlineHelper to use PorterDuff . Mode . CLEAR instead
added OpenGL version check in Mesh . java to ensure compatibility with OpenGL ES 2.0 rendering
ww - 4892 clear actioncontext in backgroundprocess
refactor table name handling to include database name prefix to improve clarity and flexibility in database management
added connection timeout configuration and changed ` count ` to ` final ` in ` StubConnection . java ` to improve connection management and ensure thread safety
added multiple SQL queries for the ` approx _ percentile ` function in ` TestHiveAggregationQueries . java ` to ensure accurate computation of the maximum percentile in
updated default idle and write timeout constants to use constants from WebSocketConstants to improve code readability and maintainability by reducing repetitive variable
updated the method for retrieving shares to use the user ' s account name instead of the account name directly
updated type declarations and added null checks for scope _ id in Inet6Address . java to enhance type safety and prevent potential NullPointerExceptions
refactor button enabling and disabling methods in PlaybackControlView for improved clarity and functionality to enhance code readability and maintainability
modified the ` isPresent ` method to accept a ` long sessionID ` instead of a ` Session ` object to enhance flexibility in handling session
use getimmediateclasspath ( ) instead of gettransitiveclasspath ( )
make useexceptionprobability default to true by default
updated the color assignment for the app icon based on whether the icon is themed to ensure proper color representation for different icon types
guacamole - 195 : fix npe in mysqluser . init ( ) .
updated aliases to include " centre " in addition to existing aliases to enhance clarity in the code
added DirectUpload class and injected it into CommonsApplicationComponent to enhance functionality by allowing direct uploads
added space settings for left and right axes in BarChartActivity and updated legend position handling in BarLineChartBase to improve visual spacing and ensure correct legend
added support for Java ABI families in AndroidLibraryDescription and JavaLibraryDescription to enhance library management capabilities
added operation event status type to the request parameters and initialized the services list in CompositeLogService to ensure proper handling of operation events during logging operations
added debug logging for parameter annotations in DexAnnotation . java to facilitate troubleshooting of annotation processing
( chore ) camel - jms : rename startbundle method to setup and teardown
updated ProcessBuilder initialization to include classpath specification to enhance classpath handling for the SortedArrayStringMapTest
updated file path handling in PackageResourceLoader to use a constant for the resource path to improve code readability and maintainability
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in dataset
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable the test due to known issue b / 243855320
escape percentage in error message
fixed - jcachemanager . close ( ) method do n ' t call cache . geturi ( ) # geturi ( )
do n ' t log ` ` not claim task already claim ' ' when close command context
reformatted the initialization of ALPNClientConnectionFactory for better readability to improve code clarity and maintainability
update entitypropertiespacket to use basevalue instead of maxvalue
added initialization check before playing mp3 audio in SonosAudioSink . java to avoid potential null pointer exceptions
increased the timeout duration for countdown latches in ContextRegisterListenerTest and SpringMvcClientBeanPostProcessorTest from 500 milliseconds to 5 seconds to
changed log level from info to debug in LightThingHandler . java to provide more informative logging for troubleshooting issues
cloudstack - 7999 : add db . properties and db . properties . properties in db . properties file
updated import statements and method signatures in Reporter . java for consistency and clarity to enhance code readability and maintainability by standardizing
updated the parameter type of ` generate ` method in ` DataGenerator . java ` from ` Frame ` to ` DataFrame ` in ` generate ` method to
refactor multiple module - info . java files for consistency to improve code clarity and maintainability
added a check for empty physical column names before matching physical column names in OrcPageSourceFactory to avoid potential NullPointerExceptions during column name matching
add miss call to method cla . mixplay ( )
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
improve accuracy of finder pattern finder and add more test
simplified the check for leadingIncludePaths to improve code readability and maintainability
refactor matrix vector multiplication logic into a separate method to improve code readability and maintainability
add ` ` $ $ x ' ' and ` ` $ $ x ' ' to ` ` findall ' ' method in selenideproxy
defaultaudiosink : do n ' t skip audio format with no sample rate
added getFormula ( ) and setReference ( ) methods to XSSFName and modified getFormula ( ) and setReference ( ) methods in XSSF
increased the scaling factor in HighDimensionsTest from 60000 to 90000 to improve the accuracy of scaling operations
updated the length check from 1 to 0 in SimpleTypeGT . java and added a new test for pattern schema in GMLParserTest . java to
added a new test class ClassPathXmlJobRegistryContextTests to validate job retrieval functionality to ensure correct retrieval of job names from the job registry
changed the data type of mHistoricTimes from float to long in MotionPauseDetector . java to accommodcommodcommodate larger event time values
camel - 12320 : camel - restlet - deprecate the old option in favor of the new one .
remove showout from logendpointbuilderfactory
refactor event submission logic into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by reducing duplication
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the list of limit orders to avoid
added pixel offset calculations and validation in LCMSImageLayout . java to improve image layout handling and prevent layout errors
[ zeppelin - 5271 ] fix ruby timestamp for native event .
added a condition to return the resource if the alias ends with " / " in the path and created a test for non - existent paths to ensure
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER to improve
do n ' t increment scroll amount if not necessary
graphdecoder : fix npe in case callerloopscope be null
test : migrate sniperprettyprinterjavaprettyprintertest to junit 5 ( # 4104 )
refactor URLOutputStream initialization to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added @ Entity and @ Entity annotations to Mail . java to enable the use of entity relationships in the Mail class
change default value of ` includeTablespace ` from ` false ` to ` true ` and add an option to include tablespace of tables to enhance
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to metaDataBuffer and valuesBuffer for better resource management
added a check for non - empty file before clearing the field vector in ScanBatch . java and a corresponding test in TestJsonReader . java to ensure that
updated failure handling logic in StringSubject . java and added a new test case in StringTest . java to improve error reporting and ensure correct behavior when custom
added a regex pattern for matching library names in LibUtils . java to enhance validation to ensure only valid library names are processed
replace ` ClassNotFoundException ` with ` Exception ` in ` JrtJavaBasePackages . java ` and ` PackageHelper . java ` to improve error handling by
hbase - 26909 check that the distributedfilesystem be not in safemode when write to hdfs
updated error messages in TranslatingJavacPhaseTracer to include the class name and the exception message to improve debugging information for tracing issues
[ mng - 7674 ] remove unused code from defaultplugincache
fix nullpointerexception when update contact status .
remove servletrequestdetails . withresourceandparams since it be no longer use
added a new file ` AccountInfoFetchIntegration . java ` to test the fetching of account information from the BTCE exchange to ensure that the Polling
added mouse wheel functionality to VDUInput and vt320 classes to enable mouse wheel interactions for improved user interaction
use the correct library path for the game input .
fix : remove deprecate columnhstore annotation ( deprecate in 3.0 )
fix the issue that metadataindex . getskinskinskinskineskineskineskineskineskineskineskines
updated LoadBalancerWithServiceTests to use SLF4J Logger instead of RequestFieldMatcher and modified service creation logic to use configuration properties to improve logging
fix potential nullpointerexception in mapservice
replaced direct access to ` system . getProperty ` with ` AccessController . doPrivileged ` for retrieving the operating system version to improve security by using privileged
updated the file suffix handling in TemplateEngineFreemarker to allow dynamic configuration of the file suffix based on configuration settings
updated hash and value calculations in SelectMessageQueueByHash . java and added new test cases in SelectMessageQueueByHashTest . java to improve message selection logic
ggb - 388 : make sure animation be complete after drag .
make sure caret column property be visible in styled text area
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to utilize CxxBuckConfig for manag
replaced instances of ` SimpleParameterAccessor ` with ` ParameterAccessor ` in multiple Java files to standardize parameter accessors across the codebase
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerExceptions when passwordAttribute is null
[ hotfix ] fix datautilities . defaultarraytype to handle array type
updated SslContextFactory to handle null addresses gracefully to improve robustness of SSL engine creation
fix test flakiness in testfstests to make it more stable
simonstewart : add a method to delete a cookie in the ie driver
added a boolean flag ` mHasEndedLauncherTransition ` and modified the condition for recreating controllers in ` AbsSwipeUpHandler ` to ensure proper handling
added UTF - 8 character to HTML head and title tags in HTMLListWriter and HTMLWriter to ensure proper rendering of text in the HTML output
refactor methods in IndexReader class to improve code readability and maintainability
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path handling in multiple classes to improve
updated the JComboBox implementation in BasicComboBoxUI . java and added a new bug6337518 . java file to implement a new bug633
refactor TestRandomAccessBuffer class to improve code readability and maintainability
refactor UserInfoActivity class to improve code readability and maintainability
added notification for HomeContentProvider changes in multiple services to enhance user experience by notifying about content changes
added functionality to manage the stay - pressed state of the BubbleTextView and Launcher classes to improve user experience by ensuring proper state management during
added an error parameter to the getFallbackResponse method across multiple classes to provide more detailed error handling for fallback responses
removed the check for ` _ compile _ only ` in the if condition to simplify the conditional logic for better readability
added null checks for tags in ChannelUri . java to enhance robustness by preventing potential NullPointerExceptions
updated regex pattern matching to allow multiple matchers in SQL patterns to enhance flexibility in pattern matching functionality
added a constant for the action bar title in FileActivity and updated its usage in FileDisplayActivity to improve clarity and maintainability of the code
updated the method to retrieve the last element of convertedElements and added a new test for concatenating a list in ConfigSettingIntegrationTest to ensure correct handling
updated the schedule hour from " * " to " 0 " in CleaningService . java to align the schedule interval with intended behavior
updated TransactionalValidationListener to handle partitioned tables and improved table path validation logic to enhance validation logic for partitioned tables and ensure
refactor ReplicationHandler and SnapPuller classes to enhance polling functionality to improve performance and control over replication operations
changed the data type of ` generatedKey ` from ` int ` to ` long ` and modified SQL statement handling to ensure accurate retrieval of generated keys and
refactor proxy retrieval logic in SimpleReferenceCache to improve code readability and maintainability
improve error message when inlining fails
updated keepAliveTimeoutShared and keepAliveTimeoutCustom values , modified thread pool initialization , and added null checks for endpoint and consumer in WebClient
deleted the HttpTestAccount001 . java file to remove obsolete test code that is no longer needed
do n ' t swallow exception in dispatcher
camel - 7999 fixed the unit test error of camel - cxf
added support for the ' ~ ' character in the ClientUtils class to enhance functionality by allowing additional characters in the input string
camel - 16400 : camel - slack should use java . time . duration instead of long .
fire blockharvesting event when drop a block . close # 1043
updated layout parameters for FormLayout and encodedAudioPassthrough checkbox in TranscodingTab . java to optimize layout adjustments for better UI consistency
added a new file ` bug8057791 . java ` that tests the rendering of a list using a Nimbus Look and Feel
updated flag assignments in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and maintainability of the code
added websocket methods factory in RunnerBuilder and updated WebSocket configuration in RunnerBuilderTest to enhance WebSocket functionality and ensure compatibility with the latest
updated null check for ' to ' from ' length ( ) > 0 ' to ' to ' in ComposeActivity . java to ensure proper handling of
added dictionary handling in ParquetFixedWidthDictionaryReaders . java and created a new test for bigint with dictionary in TestColumnReaderFactory . java to improve
updated divider handling logic in PortraitPagedViewHandler . java to correctly account for landscape orientation to ensure proper scaling of task dimensions based on device
added a new annotation ` Log ` and ` LogInterceptor ` in the ` org . apache . shenyu . examples . springcloud
updated the formatting of the dump string in QueuedThreadPool . java to enhance readability to improve clarity of thread state representation
added an optional implementation parameter to cache operations to enhance flexibility in handling cache operations
updated the createReferenceMap method to include totalFrameSize ( ) for the reference map calculation to ensure accurate memory allocation for reference maps
refactor TypeSafeConfigurator class to improve code readability and maintainability
camel - 16400 : camel - graphql - add karaf feature test
updated the main method to include two new test methods for bug 1 , bug 2 , and bug 3 in RFE2891944 . java to en
removed unnecessary encoding for key and value in HttpClientIntroductionAdvice . java to simplify the code and improve readability
replace ` UnsupportedPlatformTool ` with ` UnsupportedPlatformTool : : new ` for better type safety to improve code clarity and maintainability
updated loopCount calculation and logging to use TimeUnit for better readability and precision to improve code clarity and maintainability
added a size ( ) method to FlightConfiguration and FlightConfigurationImpl classes to provide a way to retrieve the size of the flight configuration map
[ k8s ] make addressmanagertest . index non - zero
updated layout specifications and component names in VLCVideo . java to improve layout consistency and clarity in the user interface
rename bitsquare to bitsquare
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker . android . tw
updated user configuration directory and refactored user XML file handling in MBoot . java to enhance user configuration flexibility and improve readability
added binding for bufferHandle in VertexBufferObjectWithVAO . java to enable proper handling of buffer data in the graphics context
refactor ServerHttpSecurity class to improve code readability and maintainability
added @ Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests that are not ready for execution
added default headers management to HttpClientProperties and CasCoreHttpConfiguration to ensure proper handling of HTTP headers in the configuration
improve error handle for user password validation
deleted the NoOpConfigPathGetter . java file to remove unused configuration path getter functionality
updated signingKey initialization to use Bytes . fromHexString instead of Codec . base16Decode to improve compatibility with hex string encoding
replaced ` CascadedStyle ` import with ` CSSName ` constant and added handling for ` float _ val ` and ` inline _ block `
jbrules - 2635 : fix javadoc warning and add miss import
replaced instances of ` CaseInsensitiveHeaders ` with ` MultiMap ` in ` RestUtils ` and ` WebsocketUtils ` to enhance header management to
rename ` enc ` to ` charset ` in ` ProxyServer ` and ` Realm ` classes to improve clarity and consistency in handling character
added a method ` getJobId ( ) ` to the ` StepContext ` class and a corresponding test in ` StepContextTests ` to provide a way
refactor comparison methods in ExpandableUploadListAdapter and FileStorageUtils to improve code readability and performance by using ` Long . compare ` instead of
changed log level from error to debug for HTTP response logging in DefaultJdkHttpClient . java and JdkBlockingHttpClient . java to improve logging granularity
updated import statements in LegacyAuthenticationHandlerAdapter . java to streamline dependencies and improve code clarity
changed the class modifier of WingDings from final to public to allow access to WingDings from other packages
filtermanager : do n ' t remove invalid filter if their owner be not our own
add bcpginputstream . wrap ( inputstream ) for good compatibility
replaced DataOutputStream with BufferedOutputStream and added a try - finally block to ensure dataOutputStream is closed properly to improve resource management and prevent potential resource leaks
added a test for selecting rows from a view in TestJdbcDriver2 . java and updated column name handling in HiveBaseResultSet . java to
updated FocusTransitionTest . java file to improve test coverage for FocusTransition functionality
fix compile error due to change in gwt project
added error handling for MapRedTask instances in CounterStatsAggregator . java to improve robustness by handling potential exceptions during job retrieval
removed an unnecessary line break in HttpInput . java to improve code readability and maintainability
added a method to change the color of a component and refactored color selection logic to improve code readability and maintainability by encapsulating
updated the constructor of TaskHelper to include a hidden parameter to enhance functionality by allowing the task to be marked as hidden
fix flaky test which randomly fail on slow ci server
pdfbox - 4892 : fix resource leak in createfromrandomaccessimpl
added import for DefaultParameterHandler in LanguageDriver . java to enhance parameter handling capabilities in the scripting framework
lsra spill optimization : do n ' t skip spill interval if spill loop depth be small
test : add test case for groovy code generation
improve pgresultset # closeoncompletion ( ) to avoid multiple close ( ) call
set default value of serviceAdvisorType to Python to ensure compatibility with Python services
replaced the static resolver variable with a ThreadLocal for ResolvingDecoder management to improve thread safety to enhance concurrency handling and avoid potential memory leaks
changed the constructor of Path and PdfContentStreamProcessor to accept List < ? extends Subpath > instead of Collection < ? extends Subpath >
replaced ` new byte [ 512 ] ` with ` generateRandomBytes ( ) ` for memo calculations in ` SendCoinShieldTest . java ` to ensure
added a new method ` setPersonalisation ` to the ` SkeinParameterSpec ` class to format date and distinguish from other date formats
removed redundant code block to streamline code logic for better readability
removed percentage parameters from scroll method calls across multiple Java files to simplify method signatures and improve readability
changed the access modifier of the pointer variable from private to public and added reset methods for the FlatRecordReader class to allow access to the pointer variable from
renamed ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions
fix cast expression when raw type be not boolean
replaced the use of ArrayList with a direct boolean for determining accepted media types to simplify the code and improve readability
added a new boolean variable ' false ' to the TaskView class to control the behavior of the task display
added an ` isAutoIncrement ( ) ` method to ` LiquibaseDataType ` and implemented it in ` BigIntType ` , ` IntType
set default error text to ` ` command fail due to internal server error ' '
updated imports in DeadListenerTest . java and LocalManagementTest . java to use jdk . testlibrary . ProcessTools and utilities for performance testing
changed method calls from ` add ` to ` push ` for ` currentStatus ` and ` boosterStatus ` to ` push ` in ` toSim
added AJP connector creation and configuration for AJP port in GitBlitServer . java to enhance server functionality by allowing dynamic binding of A
added type coercion logic for compound types in TransTypes . java and created a new Intersection03 . java file to ensure correct handling of class types
changed the class name from EmbeddingTest to EmbeddingITest to improve clarity and reflect the intended functionality of the EmbeddingTest class
added a native method to start the toolkit thread only if it does not already exist to ensure that the toolkit thread is started only once to avoid
[ gr - 27820 ] add option to compress bundle in parallel .
fix ( opengl ) : hide surface on opengl
updated the temporary directory initialization to use getClass ( ) . getName ( ) instead of a hardcoded string to improve flexibility by allowing dynamic class name retrieval
added enablement parameters for full node and solidity node in CommonParameter and SolidityNode classes to allow configuration of node and solidity HTTP
added a ` service ` property and updated the return statement in ` GoogleCloudFirestoreTicketDocument ` to include the ` service ` field to enhance
refactor Generate . java file to improve code readability and maintainability
fix : json _ format ( ) should return java null
updated BadgeRenderer and related classes to handle DOTS _ ONLY flag and improved icon validation conditions to enhance badge rendering accuracy and ensure correct icon
make freemarkermanager thread - safe
added a test to verify exclusion of package name patterns in OgnlUtil to ensure proper configuration of excluded package names
updated device Udid retrieval logic to differentiate between macOS and other operating systems to ensure accurate identification of simulator Udid based on device type
updated DefaultHttpClientFilter and TestDefaultHttpClientFilter to use ProduceProcessorManager and improved error handling to enhance logging clarity and ensure proper
added null checks for mScript and mInvokeResetWAR in AllAppsView . java to ensure proper binding and execution flow to prevent potential NullPointerExceptions
added a boolean flag TEXT _ BURN and modified the condition in the line count check to ensure shadow layer is set only when TEXT _ BURN is
added teardown methods for database cleanup after tests to ensure proper resource management and prevent potential resource leaks leaks leaks leaks
added a parser field to the SecurityNamespaceHandler class to facilitate the retrieval of specific parser configurations
updated conditional check in BoundedLocalCache . java and added a fastpath test in BoundedLocalCacheTest . java to improve cache movement
modified the ` RawConnection ` interface to extend ` WebSocketConnection ` and added a complete method for frame processing to enhance WebSocket connection handling and
added tests for multiple assertions in SoftAssertionsPerfTest . java to ensure that the soft assertion functionality behaves as expected
added exit code handling for Python tests to ensure that tests exit with a specific error code when they fail to execute successfully
updated the handling of xAdvances in GlyphLayout . java to include a check for markup enabled state to ensure proper processing of next lines when rendering
refactor score comparison logic to use streams for improved readability to enhance code clarity and maintainability by leveraging Java features
update enumClass to use getSuperclass ( ) instead of getEnclosingClass ( ) to ensure correct class hierarchy for anonymous classes
improve performance of playerconnection . flush ( )
added a check for mStarted before removing the OnDrawListener to prevent multiple invocations of OnDrawListener in Launcher and LauncherAnimUtils to ensure
refactor multiple classes related to term handling to improve code organization and maintainability
replaced specific rule imports with a wildcard import and added a check for NOT _ APPLICABLE status in ReplicaAssigner . java to simplify import statements and
changed the default value of MEDIAPARSERV2 from false to true to ensure compatibility with the latest media parsing standards
add support for @ aop interceptor type ( # 1771 )
fix permission for truncate table
do n ' t publish status if the provider be n ' t register yet
updated the random number generation logic in PastelColor . java to use a calculated base color base to improve precision in color generation by incorporating
refactor ScriptEngineFactory class to improve code readability and maintainability
updated the creation and handling of FastBitmapDrawable instances in HolographicViewHelper to use original and outlineD variables to improve code clarity and
refactor method handling in CloudClient to use HttpMethod for improved clarity and robustness
improve the handling of phrase containment in the multi - word preprocessor
[ hotfix ] [ test ] remove unused import
updated class loading logic in mmm Table . java and added a check for HIVE _ PASSTHROUGH _ OF _ CLASSNAME to enhance
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
updated validation logic in DOMBuilder . java to ensure valid input bounds and prevent potential ArrayIndexOutOfBoundsException
refactor HierarchicalUndirectedGraph usage to improve clarity and consistency in handling directed graphs
camel - 18131 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , fixed test
added a new file ` PublicStaticInterfaceMethodHandling . java ` that implements a test class with static and default methods to demonstrate the usage of static
camel - 16400 : camel - defaultkeyselector now work on osgi
replaced instances of ` ThreadDeath ` with ` ThreadDeath ` in ` LogResolverBean . java ` to ensure proper exception handling for ThreadDeath
refactor multiple Java classes to improve code organization and maintainability
updated JGit version from " 1.0 . 0 ( 201106090707 - r ) " to " 1.1 . 0
use clientkey instead of path to avoid npe
int - 1214 added namespace support for transformer and methodinvoking
updated BACK _ FACTOR to REWIND _ TIME and modified duration checks in ResumeObj . java to improve clarity and correctness of duration validation logic
added ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` , ` JavaSEPort ` , and ` JavaSEPort `
updated usage format in UtilityCommands . java and modified usage handling in DocumentationPrinter . java to improve clarity of command usage instructions
fix typo : collection . map not collection . map
updated methods in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to use mergeFiles instead of unseqFiles to improve clarity and consistency in file
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
updated the logic for rebuilding rule sets in ProjectPropertiesModelImpl . java to improve clarity and maintainability of the code
improve performance of field lookup in abstractsootfieldref
add elastic naming convention to elasticmeterregistry ( fixes # 195 )
added IController , GcodeCommandCreator , and JobLengthEstimate methods to IController , TinyGController , and BackendAPI classes to enhance
add test for huge horizontal rule
replaced instances of ` System . out . println ` with ` TTY . print ` in multiple Java files to standardize output statements across multiple files to improve
updated method declarations in multiple Java files to improve code readability and maintainability
updated condition to check if frameLength is less than or equal to zero to ensure proper validation of frame length to prevent potential errors
updated the return statements in IntFloatMap . java and IntIntMap . java to store and return the value of zeroValue in both IntFloatMap
refactor ImageDownloadService to use a serial execution for setting icons and background images to improve UI responsiveness by ensuring icon updates are executed on
added a null check for registered before proceeding to prevent potential NullPointerExceptions when registered is null
removed native method ` hasNextSibling ( ) ` from ` AttributeNode ` , ` DocumentNode ` , ` ElementNode ` , and ` HtmlNode `
added null check for results before accessing its size ( ) method to avoid potential NullPointerException when results is null
improve log when mobfilecache be disable
refactor ColConvCCMTest class to improve code readability and maintainability
replaced instances of ` target ` with ` allowCovariantReturns ` and ` syntheticNameChar ` for clarity to improve code readability and maintainability
pdfbox - 4892 : use generic type , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new class ` X ` with
added return statement to avoid unnecessary processing
added a call to EventQueue . invokeLater in bug6638195 . java to ensure thread safety during asynchronous operations
updated the logic for determining the maximum message size in CompressExtension . java to ensure proper handling of message sizes in the CompressExtension class
update steeringValue calculations in multiple test files to correct the calculation of steeringValue in various test files to ensure accurate steering value
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password equality check to improve code readability and leverage built - in utility
refactor date handling in JdbcSerDe to use LocalDateTime instead of java . time . Date to improve compatibility with local date representation
update VERSION from 2 to 3 and modify metadata handling logic to ensure compatibility with version 3 and improve metadata processing efficiency
added conditional configurations for Flyway with JPA in FlywayAutoConfiguration . java and created a new FlywayInitializerJpa
added sorting functionality to the classes to ensure the classes are processed in a consistent order
added ` getCurrentStableState ( ) ` method to ` LauncherStateManager ` and refactored ` waitForLauncherCondition ` in ` AbstractLauncherUiTest
refactor SharedInformer class to improve code readability and maintainability
refactor memory scope handling in TestCloseScope0 . java to support different Java versions to ensure compatibility with different Java versions and improve resource management
increased test timeout from 500ms to 5000ms to allow more time for server connections to establish successfully
renamed CaptchaChannelProcessorTests to improve clarity and consistency in test class naming
added a condition to update the owning collection in MetadataImport . java to ensure the correct owning collection is used when a change occurs
added retry logic for saving properties to prevent multiple attempts for saving properties and improve error handling
updated the parameter in TrackingDirectoryWrapper instantiation from mergeDirectory to directory to ensure the correct directory is used for tracking files
applied patch [ 1870 ] false positive for unused import
added validation for insert overwrite queries on bucketed tables in HiveIcebergStorageHandler to ensure proper handling of insert overwrites on bucketed tables
updated assertions in BootstrapTests to reflect correct expected values for SAML configuration keys to ensure tests accurately reflect the expected configuration of SAML keys
improve excluder to exclude static field
modified the getAddressVector method to use a more descriptive variable name to improve code readability and maintainability by using a more descriptive variable name
removed unused constants from CommentsParser . java to improve code clarity and maintainability
added IOException handling to the release method and introduced a new LockReleaseFailedException class to improve error handling and resource management during lock release operations
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to align with the new package structure for
added a conditional check for unary operators before transforming in SpelExpressionTransformer . java to ensure transformation only occurs for non - unary operators to
updated ByteBuddy instantiation to disable TypeValidation to improve performance by avoiding unnecessary type validation
replaced instances of DeclaredType with TypeElement in JavacRoundEnvironment . java to simplify type handling and improve code clarity
updated PessimisticEntityLockException handling in LockModePessimisticReadWriteIntegrationTest and set GLOBAL innodb _ lock _ wait _
log4j2 - 1349 fixed log4j2 . properties not be load properly
added redirect handling logic to the ServiceApiRequest class to ensure proper handling of HTTP redirects and improve error reporting
added constants for " SERVICE _ MAPPING " and " VERSION _ MAPPING " , and updated microservice configuration based on environment settings
updated the method call from ` getName ( ) ` to ` getBeanName ( ) ` in ToeThread . java ` to ensure the correct bean
updated DB _ PATH _ REGEX to static and modified its usage in BaseAndroidTestCase . java , added DB _ PREFIX constant , and
updated return statement to retrieve unread count from HomeDataSource to improve accuracy of unread count retrieval
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for virtual thread pool preview to improve
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and improved price list handling in Wallet to enhance flexibility
refactor user retrieval logic in HomePage . java to improve code readability and prevent null pointer exceptions to enhance code clarity and prevent potential Null
updated file path handling in LocalFileSystem and added a new test for relative wildcard path matching in LocalFileSystemTest to improve accuracy in file matching functionality
added maximum width and height limits for component bounds in ComponentBuilders . java to ensure component dimensions do not exceed defined limits to prevent rendering issues
added logging for maximum retries in CommonsHttpSolrServer and marked the request method as deprecated to improve error handling and deprecate the old request method to
removed redundant exception handling calls in PrintController . java to streamline error handling and improve code clarity
refactor hash filename handling to use lambda expressions to improve code readability and reduce boilerplate code
added methods to check for numbers with separators in SpellChecker and a corresponding test case to ensure proper handling of numbers with separators in spell checking
updated the MESSAGE constant in HelloWorld . java to ensure consistent formatting to improve code readability and maintainability
refactor file handling in FileDisplayActivity to improve code organization to enhance readability and maintainability of the code
added error handling for replication time logging to improve robustness by catching exceptions during replication
updated the argument of the update method from ` recid ` to ` 2L ` in StoreCachedTest . java to ensure compatibility with the expected data
removed the reference to ` materials ` in the ` StreamerLoader ` constructor and added a check for instances of ` MaterialColumnParser ` to ensure proper
updated package names and descriptions for various components in DependencyBank . java to enhance clarity and maintainability of the codebase
added maximum recycled views for various view types in the RecyclerView to enhance the application ' s memory management by limiting the maximum recycled views
added a new test method ` testBuildingBinariesSeparately ` in ` AndroidBinaryCrossCellIntegrationTest . java ` to verify the behavior of building
improve examplebaritonecontrol to cancel mining .
added imports for ` ParsedNode ` , ` ParsedNodeException ` , and ` ResourceAccessor ` in ` CreateProcedureChange . java ` to enhance
added null handling for null values in FilterOperatorUtils and a corresponding test in NullHandlingEnabledQueriesTest to ensure correct filtering behavior for null values
added validation for bootstrap method arguments in JDynamicInvokeExpr . java to ensure correct argument requirements and prevent runtime errors
resolve intermittent ci failure
clear the formatters in CucumberInstrumentation to ensure a clean state before running tests
changed the type of ` contacts ` from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > ` and
update workspace label adjustments based on cell padding to ensure workspace labels are only hidden when appropriate
improve error message for flaky test
[ gr - 27820 ] llvm : fix context extension creation in pre - initialization mode .
removed JUnit Ignore annotations from ChaosMonkey tests to temporarily disable tests that are not ready for execution
replace RuntimeException with JsonIOException in Gson . java to improve error handling by using a more specific exception type
replaced ` Integer . valueOf ` with ` Integer . parseInt ` for value assignments in ` VisualScoreTagTest . java ` to improve performance by avoiding
updated error messages to include source and target paths to improve clarity and accuracy of error reporting
updated segment name checks in HLCSegmentName , LLCSegmentName , and SegmentName classes to use a unified check for high - level
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding test cases in ` FragmentTest ` to
updated the instantiation of DateTime to use the current time instead of the current time to ensure the correct date is returned for accurate processing
added " - target " option to return " - x86 _ 64 - none - linux - android " in TargetCpuType . java to specify a
added a method to delete all files for an account in FileDataStorageManager and manage account files in ManageAccountsActivity to improve account management by
updated command line argument format from " - ? " to " - h " in SchemaCrawlerCommandLine . java to improve clarity of help output
added a static method ` createSuiteDescription ` to create a ` Description ` description with a unique ID to enhance flexibility in description creation by allowing
replaced manual decoding of bitmap with a call to decode barcode using a dedicated method to improve code readability and maintainability
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and related classes to simplify the constructor and eliminate unnecessary
added unit tests for range pasting from end and start in GWCZoomContextFinderTest . java to ensure correct behavior of zoom context finder
added a new configuration key ` DEPENDENCY _ TRACKING _ CONFIG _ KEY ` and integrated it into the ` JRubyScriptEngineConfiguration ` to
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure the
do n ' t announce a new table if it already exist
updated the ` WelcomeWindow ` class to utilize caching for image dimensions to improve performance by reducing redundant image loading operations
updated tuner configuration handling and added error logging for buffer transfer resubmission to improve clarity and error handling during buffer transfer operations
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a new test for sh binary functionality to enhance testing capabilities in ShBinaryRuleIntegrationTest
added a condition to include " db : hsqldb " in TestFilter . java to ensure compatibility with HSQLDB in the filter logic
fix : javabinloader do n ' t handle empty line correctly
truffle : do not materialize exception if there be no stack trace
export jvmci to service provider if require
added unit test for duplicate command handler resolution .
[ flink - 20865 ] [ runtime ] enable fine - grained resource management in batch job
fix entityfishhook not work with vanilla
camel - ftp : fixed doc typo
renamed ` commandRunner ` to ` stepRunner ` across multiple files to improve clarity and consistency in naming conventions
renamed ` useShortNames ` to ` compressPackageNames ` and updated related methods in ` GangliaReporter ` to improve clarity
added a check for empty items in AppsContainerRecyclerView to prevent processing of empty items to avoid unnecessary processing
added a conditional annotation for the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration to ensure the bean is not present to prevent runtime errors
log4j2 - 1349 use stringbuilder instead of stringbuffer to improve performance
added support for omitting response headers in multiple classes to enhance flexibility in handling response headers based on request parameters
updated the method for retrieving property names in ` EscherProperty . java ` and added a new test class ` TestEscherProperty . java `
updated method call to use getDescription ( ) instead of getBuildRuleType ( ) to ensure proper retrieval of build rule types from the description class
make sure we update the hierarchy after remove a method
added null checks for ` disputesPerTradeIdItems ` and ` disputesPerDepositTxIdItems ` in ` TradeDataValidation . java `
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified ` retrieveColumns ( ) `
wallet : set transaction confidence type to not _ seen _ in _ chan in sendtx
improve handling of @ body and @ header parameter in httpclient
fix craftinghelper . processconditions ( ) to skip crafting condition that start with _
hbase - 2592 log a warning if region open fails
refactor length comparison logic in Credential . java to improve readability and maintainability of the code
[ java ] do n ' t check image when there be no image .
modified the destroy method to throw an Interruptedexception to simplify process termination handling and improve error logging
added a check for Oracle in the condition to ensure compatibility with both MySQL and Oracle databases
camel - 16400 : camel - mail - consumer should log error if store be not connect .
throw parsecancellationexception if there be more token in the query that have not be consume
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` g ' ' complete
added getdatafilename ( ) method to model class and updated hmmmodel initialization in voice .
added email domain property and corresponding getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enhance email domain management functionality in the
added REQUEST _ READ _ TIMEOUT , REQUEST _ READ _ TIMEOUT _ DEFAULT , and REQUEST _ CONNECT _ TIMEOUT _ DEFAULT constants to the Configuration class to allow
do n ' t process deferred concept if they already exist
added RedisCategory annotation to RedisServiceRegistryTests to categorize tests as Redis - related
updated test methods to use parameterized tests and added null and empty source handling to improve test coverage and ensure proper validation of deprecated usage patterns
added a call to super . paintComponent in WaterfallPanel . java to ensure proper painting of the component during rendering
removed unused imports from multiple Java files to improve code clarity and reduce unnecessary dependencies
updated LogEventWrapper to include eventSignatureFull and added getter / setter methods for eventSignatureFull and eventSignature in ContractEventTriggerCapsule .
updated filter condition to check for session IDs ending with " _ " instead of contains to ensure proper filtering of session files regardless of their content
replaced clearRect with fillRect and setColor for graphical elements to ensure proper rendering of graphical elements in the map view
jbrules - 2809 : fixing compilation error in packagebuilder
removed debug print statements from multiple Java files to clean up the code and improve readability
added a check for NaN values before comparing scoreDocs in TestFieldCacheSort . java to ensure that scoreDocs are not equal to zero to prevent potential
replaced ` getEntityKeys ( ) ` with ` Set . copyOf ( deviceProfile . getEntityKeys ( ) ) ` in DeviceState . java
added a method to handle zero time values in ColumnSnapshotGenerator . java and created a test for date defaults in MySQLIntegrationTest . java to
rename ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offeredBtcPubKey ` across multiple files to
updated variable types from ` Map < ? , ? > ` to ` Map < ? , ? > ` across multiple collector classes to enhance
[ hotfix ] [ k8s ] add test for edit session model
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure proper reference to the configuration object
added a condition to return early if modalness changes to improve performance by avoiding unnecessary processing when modalness changes
added a test for creating ` CodecCapabilities ` from profile levels to ensure correct behavior of ` CodecCapabilities ` with specific profile levels
added a call to ` confirmButton . requestFocus ( ) ` in ` EditOfferView . java ` to ensure that the confirmation button reflects the
added validation for width and height in SunVolatileImage . java and implemented error handling for OutOfMemoryError in X11SurfaceDataProxy . java
updated group separator from " . " to " \ u00a0 " in FormatData _ uk . java to improve readability of the group
replaced integer array with AtomicInteger array in AsyncStressTest . java and StressTest . java to improve concurrency handling and optimize thread management
added support for beta flavour in AchievementsFragment and LeaderboardFragment to enhance user experience by informing them of unavailable
updated SearchMethodVisitor to retrieve access and description from context to ensure proper initialization of search parameters
added sleep calls and catch clause for SQLException in IoTDBInsertWithoutTimeIT . java to ensure proper handling of interrupted exceptions
refactor duration handling in DLNAResource . java for clarity to improve code readability and maintainability
updated XML element names for batch - config and stream - config in ResequenceDefinition , BatchResequencerConfig , and StreamResequencerConfig classes
[ iotdb - 5978 ] avoid deadlock in tablereader . reload ( ) ( # 5978 )
updated key manager and trust manager type handling in ThriftSource and ThriftRpcClient classes to enhance security by using a configurable key manager algorithm
refactor the ` getSingleSourceApplicableTest ` method to use ` Applicability . or ` instead of ` JavaIsoVisitor ` to
fix enter key not work in blockmania .
replace PACKAGE _ PRIVATE with NONE across multiple files to improve clarity and consistency in access specifier handling
renamed the method ` unHandled ` to ` unhandled ` and updated related error handling logic to improve clarity in method naming and enhance
updated the handling of stripes and statistics in OrcInputFormat . java to ensure correct retrieval of stripe statistics based on specific conditions
added a null check for the exception before proceeding to prevent potential NullPointerExceptions during execution
fix myhentaicomics ripper to use secure url
added a version option to the application to display the current JAR version if available
replace split ( ) with splittokens ( ) for good performance
added default rotation handling based on keyboard configuration in ConsoleActivity . java and updated input connection handling in TerminalView . java to improve user experience by
updated the type of ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` and added a
added a null check for ownerConnectionAddress in ClientSmartListenerService to prevent potential NullPointerExceptions during execution
camel - 15836 : camel - jbang - add support for inject headermapfactory into camel - jolokia
updated formatting in JavaCompiler . java to improve code readability and maintainability
int - 1771 added support for jmstemplate in jmsOutboundgateway
updated the index used in the expecting condition from ' i + 1 ' to ' i + 2 ' in ArrayFunctions . java to correct the logic for
refactor script engine loading to improve error handling and ensure proper resource management
added support for ` org . postgresql . PGStatement ` in ` PooledConnectionImpl . java ` and ` ConnectionPoolTest .
fix flakiness in cassandraiotest by refresh mbean cache size estimate
changed log level from error to warn in AtomicRemainder . java to reduce log verbosity and improve performance
do n ' t ignore expired sstables when calculate min timestamp
fixed - rqueue . poll ( timeout ) method throw illegalstateexception if timeout be 0 or negative
updated print statements in JobInspectCommand . java to simplify string formatting to improve code readability and maintainability
refactor Engine class to improve code readability and maintainability
refactor code to use ` entrySet ( ) ` instead of ` stream ( ) . values ( ) ` for sorting to improve code readability and
[ issue # 5892 ] fix intermittent test failure ( # 5893 )
updated condition in BKDWriter to check for numDataDims instead of numIndexDims to ensure correct handling of data dimensions
[ hotfix ] [ table - planner ] do n ' t print stack trace to stdout in notebookserver
kristianrosenvold : use ` ` lt ' ' instead of ` ` funn ' ' in expressionnode evaluator
removed public access modifier from verifyIdsAreStable and getNodeId methods to allow access to these methods from other classes
cloudstack - 1771 : update error message to be more clear
removed public access modifier from method declarations in ItemWriter . java to enforce encapsulation
fix flaky test : roombahandlertest
added a toString ( ) method to the ImageNameSubstitutor class and created a test for it in ImageNameSubstitutorTest to ensure proper
replaced ` FSDirectory ` with ` RAMDirectory ` in ` TestNorms . java ` to replace ` FSDirectory ` with ` RAMDirectory
added a check to ensure the line height does not exceed predefined limits to prevent potential overflow and ensure consistent line height handling
walletappkit : fix typo in javadoc
[ netbeans - 3441 ] fix nashorn engine initialization to work with oql 2.0
remove the transport menu item from the button group instead of the old one
added resolve and replaceTokens methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes to enhance template resolution functionality in the application
fix : set bsqblockchainexplorer to null if no bsq block explorer
added attribute handling methods in StandardSession and Session classes to manage session attributes more effectively
added assertions in TestDbJson _ List . java to ensure correct retrieval of plain bean information from the database
update averages initialization to use initialPageCount instead of pageSize to ensure averages are initialized with the correct initial page count
refactor BatchCommandLineLauncher class to improve code readability and maintainability
added database and transaction manager beans to BatchMetricsApplication for HSQLDB integration to enhance database management capabilities within the application
changed the superclass of GlowrootLogHttpService from UnauthenticatedHttpService to HttpService to align with the new HTTP service implementation
pdfbox - 4892 : use non - stroked java composite instead of stroked one , a suggest by valerybokov
removed synchronization from the close method in DocumentsWriter . java to improve performance by reducing unnecessary synchronization
added methods to retrieve property values based on column order and validation constraints in UiBinding . java to enhance flexibility in property management for UI components
replaced calls to ` dexStore . name ( ) ` and ` dexSplitStrategy . name ( ) ` with ` dexStore ` and `
when save a full tree , only update the stored copy of the tree
refactor condition handling in Affix and Dictionary classes to use a cache for pattern matching to improve performance by avoiding redundant computations and enhance
replaced raw types with diamond operator in KrakenAdaptersTest . java to improve code readability and maintainability
added import for CharTermAttribute in DefaultIndexingChain . java to enable handling of CharTermAttribute in token processing
refactor NBJavacTrees class to improve code readability and maintainability
added a check for unsupported data encodings in VectorizedPrimitiveColumnReader to ensure proper error handling for unsupported data encodings
updated logging statements in HttpSolrCall . java for consistency and clarity to improve readability and maintainability of the code
destroy metadata service proxy when instance change
tnt : fix infinite recursion in defaultentityqueryrepository
updated error message handling for null changelog ID in HubChangeExecListener . java to improve clarity based on the presence of a changelog entry
improve error message when barcode decoding fails
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompile
updated event handling logic in ObjectStore . java to ensure consistent event tracking and range setting to improve clarity and maintainability of event processing
refactor validation logic in ValidatedLocalValidatorFactoryBean to streamline annotation checks to improve clarity and maintainability of the code
fix memory leak in entityawareworldprovider
remove unnecessary type checks in IntrinsifyArrayCopyPhase . java to streamline code by eliminating redundant type checks
fix unit test break by change in log4j2 . xml
replaced the ` WantedAnywhereAfterFollowingInteraction ` class with a more descriptive ` WantedAnywhereAfterFollowingInteraction ` class and
added validation checks for account existence and key address in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that the owner address is
[ zeppelin - 4892 ] sort command in script launcher by name
chore : [ ruby ] update ruby namespace from v2beta1 to v3beta1 ( # 238 )
replaced direct property addition with setProperties calls in BaseSingleTreeBuilder . java to improve code readability and maintainability
updated AsmLoader to initialize AsmLoader with a parent class loader to ensure proper loading of classes from the correct class loader
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated import statements in Java2TypeScriptTranslator . java to include namespace handling based on whether the class declaration is a definition scope to enhance clarity
replaced ` EmptyServerHandler ( ) ` with ` AbstractHandler ( ) ` and added ` IO . copy ( ) ` for handling requests to ensure proper
updated listener additions in HelloInput . java to simplify event listeners for better readability and maintainability
hhh - 15675 avoid npe in abstractsqmpath . findroot ( ) if root be null
updated package declarations in multiple test files to ensure consistency in package structure across test files
None
add libgraal - specific initialization for libgraal
[ hotfix ] fix checkstyle violation in parddoretest
chore : update java microgenerator to 1.0 . 2 add null check
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
refactor CallStack class to improve code readability and maintainability
log warn when per - node max size be not configure
update error messages from " AST " to " LST " in multiple Java files to clarify the purpose of the error for better understanding
refactor scoring logic in ThreadedAcousticScorer . java for improved clarity and consistency to enhance code read
replace AssertionError throwing with returning null to simplify error handling
[ test ] fix flaky test
added ` makeString ` methods to ` ParallelIterable ` , ` RichIterable ` , ` AbstractSynchronizedRichIterable ` , ` AbstractMultiReader
updated OidcServicesManagerRegisteredServiceLocator to use a constant for the default order to improve code readability and maintainability by avoiding repetitive
added a ` weakAssociationRule ` parameter to the ` WeakAssociationsAnalyzer ` constructor and updated related logic to enhance flexibility in selecting weak
refactor Deflater class to improve code readability and maintainability
added error handling for IOException in Font . java to improve robustness by converting Throwable to IOException
added null check and empty string handling in VersionTypeBinding . java to ensure a valid version is returned when no content is provided
updated the method signature of ` onPostExecute ` to accept a ` List < Place > ` instead of a ` List < Place > ` to improve
changed the content type check to be case - insensitive to ensure consistent handling of content types regardless of case
changed the visibility of AUTH _ MAGIC from private to public and updated related logic in OpenSSHPrivateKeyUtil and OpenSSHPrivateKeySpec
updated the updateItemLocationsInDatabaseBatch method to accept a boolean parameter indicating whether to update item locations based on feature flags to improve flexibility
replaced specific Hibernate annotations with a wildcard import and added a JPA entity retrieval in InheritanceCacheTest . java to simplify import statements and en
updated the import statement for DefaultOAuth2RequestFactory and added a method to retrieve user approvals in TofuUserApprovalHandler to ensure compatibility with
fix influx name convention not apply to tag value ( # 645 )
improve performance of quickfix test
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure the correct handling of the " Cookie2 " header
added a static method ` classMetadataUnsupported ( ) ` and updated references to use it in ` Platform . java ` and ` Platform . java ` to
added functionality to manage the visibility of the clear - all button based on user preferences in OverviewActionsView and RecentsView to enhance user
updated ` desiredRepoVersion ` to be ` final ` and modified ` actionContext . setTimeout ` from 60ms to 600ms , while adjust
remove memoryleaktest for now
updated the return statement to use ` InetAddress . getLocalHost ( ) ` instead of ` connector . getLocalPort ( ) ` to enhance flexibility in
added a condition to check if MvDWAPI is enabled before fetching the MvDWPlaceholderAPI plugin in ServerListener . java and introduced a new
fix flaky test partition assignment
added support for JNA provider in FFIProvider . java to enhance flexibility in handling different FFI provider implementations
tika - 4892 -- add test for hierarchical file list in batch processing
added null checks for objectToSave and collectionName in MongoTemplate and updated null handling for idProperty to improve robustness and prevent potential NullPointerExceptions
updated Position initialization to use NODE _ LIST instead of NOT _ ITERABLE for better clarity to improve code readability and maintainability
added ` accTradeValue ` field and its getter / setter in ` BithumbTicker . java ` , updated ` BithumbTradeServiceRaw
updated logging statements to use parameterized messages for better readability to enhance clarity and maintainability of log output
replaced hardcoded values for parallel tasks with a constant MAX _ PARALLEL _ TASKS in OverseerTaskProcessor . java to improve code readability and
replaced ArrayList with CopyOnWriteArrayList in FixedByteMVutableForwardIndex . java and FixedByteSVMutableForwardIndex . java to improve thread safety
refactor multiple dictionary - related classes to improve code organization to enhance maintainability and readability of the codebase
added a null check for the destination buffer in FlipTransition . java to prevent potential NullPointerExceptions during processing
fix camel - msv test which randomly fail on slow ci server
updated the condition to check if ` beginCycle ` is less than ` currentCycle ` to ensure that the condition correctly accounts for the current cycle
updated RandomValueStringGenerator capacity from 6 to 10 in JdbcExpiringCodeStore . java and modified autologinCode length check in AutologinIT
added a check for UniqueConstraint in StandardObjectChangeFilter to ensure proper handling of UniqueConstraint instances in the change filter
refactor description handling in MediaDetailFragment to improve clarity and efficiency to enhance readability and maintainability of the code
improve error message for arrayindexoutofboundsexception
added withReferenceFilter and withFilter methods to ListImagesCmd , ListImagesCmdImpl , and ListImagesCmdIT classes to enhance filtering
camel - 14284 : camel - jms - exclude bridgeerrorhandler from jms endpoint . thanks to stephan for the patch .
added exclusion checks for " # defn " and " # endif " patterns in OpExclusionUtils . java to ensure proper handling of unwanted exclusion settings
added two return statements in DatabaseCommand . java to ensure that the method always returns false for certain conditions
add more politician example to honestpoliticianexample
use stringutils to avoid npe
camel - 14284 : camel - restlet - allow to configure a different port for restlet
remove wal _ sign case from schematicformat ( # 1104 )
set maximum query length in QTestUtil and removed overridden configurations from SessionState to optimize query performance and reduce memory usage
changed access modifiers of userName and securityMgr from public to private and refactored createHttpConnector method to improve encapsulation and streamline Http
[ hotfix ] [ connector / kafka ] fix typo in sink name
updated the condition to check if the application name is not " spark . app . name " and assigned it to " spark . app . name " to
improve error message when include property be not find
danielwagnerhall : add maximisewindow to make sure window . maximize ( ) do n ' t fail
updated methods to use ` getMainCellBuckPaths ( ) ` instead of ` getEmbeddedCellsBuckOutBaseDir ( ) `
added a null check for the exception message in TestXMLEntityExpansion . java to ensure that the exception message does not contain " entity expansions "
updated table offset and length assignments to mask values with 0x7FFFFFFF to ensure proper handling of zero values in the table
removed the customized method from DirectMethodHandle to streamline the code by eliminating unused functionality
refactor LineChartRenderer to optimize memory allocation and coordinate handling to improve performance and readability of the code
refactor flavor validation and error handling in AndroidBinaryDescription . java to improve clarity and maintainability of the code
updated buffer index from ' offset ' to ' i ' in LwjglGL11 . java to correctly reference the buffer at the specified index
added new files for Property , PropertySuper , and TestClassResolutionFail classes to implement error handling for property resolution failures
do n ' t remove shutdown hook if group property be disable
updated references from ` FilterChainProxy ` to ` FilterChjainProxy ` and refactored method parameters in ` VirtualFilterChain ` to improve
replaced ` Collections . sort ` with ` Arrays . sort ` and updated return statements in ` PercentileAggregationFunction . java ` to improve code readability
added schema loading logic in MetaDataBasedSQLCompletionProvider and updated MDTable retrieval in QueryTypeAnalyser to ensure proper handling of non - loaded schemas
initialized ` baseType ` to ` null ` in ` DatabaseInfoRetriever . java ` and added localized variables in ` MutableColumnDataType . java ` to
updated link references in multiple Java files to use anchor syntax to improve code readability and maintainability
replaced instances of ` getInstance ( ) ` with ` new ObjectEqualEvaluator . INSTANCE ( ) ` in ` EvaluatorFactory . java `
updated target platform references from " osx _ x86 - 64 " to " osx _ config " across multiple test files to ensure compatibility
added sound effect handling methods in AllAppsView . java to manage sound feedback during playback
changed the exception declaration of the main method from Exception to IOException to handle potential IOException more gracefully
added a call to setGranularityEnabled on leftAxis in BarChartActivitySinus . java to enable granularity for the left axis to enhance
refactor version comparison logic into a separate method to improve code readability and maintainability
updated file paths and assumptions in ContextHandlerGetResourceTest . java to use MavenTestingUtils for directory handling to improve test reliability and support for
added a close method to various transport classes to ensure proper resource management and prevent connection leaks
fix intermittent test failure on ci server
[ beam - 4142 ] check that the resource be a directory to avoid npe
removed redundant import statements for SpriteBatch in IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability by
removed duplicate unbindHandle call in ItemServiceImpl . java to improve code clarity and maintainability
refactor Config and Attribute classes to improve code organization and readability
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
refactor button handling logic in NavbarButtonsViewController . java to improve clarity and maintainability of button navigation functionality
replaced ` abort ` with ` throw ` in ` PolyBenchLauncher . java ` to ensure proper exception handling for language lookup failures
replaced bootstrapMethodIndex , nameAndTypeIndex , and memberIndex with byte and short data types for improved clarity in ClassWriter . java to en
added support for BlockFormattingContext in findBox methods across BasicPanel . java to enhance flexibility in finding boxes based on block formatting context
added error handling for process termination in WorkerProcess . java and improved error output retrieval in WorkerShellStep . java to enhance reliability
added null checks for operator and wrapped list in CheckedListReplaceAll . java to improve error handling and provide clearer diagnostics when null values are passed
added volatile flags and modified the handling of the ` _ testFill ` and ` _ writeCallback ` variables in ` SslConnectionTest . java `
updated DeviceFlag and FeatureFlags classes to improve listener management to ensure listeners are properly registered and removed based on configuration changes
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to issue gh - 1114
removed unused import of MalformedURIException to clean up the code and improve readability
[ # 7786 ] instructorfeedbackeditpage : instructorfeedbackeditpage : instructorfeedbackeditpage : instructorfeedbackeditpage : in
added a check to prevent multiple subscriptions for open trades and user trades in KrakenStreamingTradeService to improve performance by reducing
replace stderr . err with stdout .
updated the constructor of SparseRowMatrix to accept a boolean parameter for random access to enhance flexibility in creating SparseRowMatrix with varying card
bug cs - 14589 : do n ' t create usage event for volume that be not belong to the vm
refactor file input stream handling to use a dynamic path based on job configuration to improve flexibility in handling different job configurations
[ beam - 8470 ] fix java 11 build issue
register memoryccprovider in memorycallgraphbuilder only if necessary
fix nullpointerexception in conference chat .
add a check to make sure we do n ' t write to a file that can not be write
added FolderSyncActivity to handle folder synchronization in the navigation drawer to enhance user experience by integrating folder synchronization functionality within the application
[ hotfix ] [ test ] close network buffer pool in sequentialchannelstatereaderimpltest
fix spanish tree normalizer to correctly handle comma
replaced pointReader usage with heapPointWriter ' s getPackedValueSlice method to improve performance by directly utilizing heapPointWriter ' s value slice
added LocaleRandomizer and its corresponding test class LocaleRandomizerTest to enable random locale selection functionality in the application
added assertions to validate MIME type handling for " application / x - font - printer - metric " and " application / x - font - type
[ netbeans - 4892 ] bump version of netbeans - core from 8.2 to 9.0
reformatted code for better readability in TCPTransport . java to improve code clarity and maintainability
fix possible race condition in http / 2 parsing
updated the initial delay value for WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to increase the initial delay
updated error message to include the previous column name to improve clarity in error reporting for restricted columns
added support for custom date formats in ThirdEyeJiraClient to enhance date handling capabilities in the code
refactor priority generation in HeadersGenerator and PriorityGenerator classes to use a dedicated method for generating priority headers to improve code readability and maintainability
added a maximum size limit for scalar replacement in ClassTransformer . java to ensure scalar replacement does not exceed predefined limits
added DATE _ TAKEN and DATE _ TAKEN constants to the projectionTest and fileSortOrder arrays in MediaProvider . java to enhance media
updated image drawing calculations in TexturePacker2 . java to correct positioning parameters to ensure proper rendering of images in the texture packing process
added a ServletContextHandler and modified WebSocketUpgradeFilter initialization in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to improve
added shutdown calls for validateSignService and trxHandlePool to ensure proper resource management and prevent potential memory leaks
added ` RawJsonRequestBodyAnnotationProcessor ` and updated ` JaxrsSwaggerGeneratorContext ` and ` Echo ` to register ` RawJson
added a new method ` newTarget ` to the ` LoggerUtils ` class to create a new ` Target ` instance with specified target type and extension to
updated the return statement in BeanContainer . java to use an ArrayList instead of a single entry and added a new BeanContainerTests . java file to improve
amend hbase - 24698 fix typo in testmetricsregionserver
camel - 16400 : fixed the issue of fileinputstream leak in cachedoutputstream
add deviceid to telnettonika protocol ( fix # 2 )
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` for reading the first line of the build file to improve compatibility with character
added null check for assignment operator in mmm Attr . java and created a new test class ppp FailOver15 . java to ensure proper handling of assignments
added a boolean flag ` enableAccountHandling ` to control account handling in ` BaseActivity ` to ensure account handling is only enabled when required
do n ' t throw illegalargumentexception if no main polygon can be find
updated the ` DrillViewTable ` constructor to accept a ` List < String > ` of paths instead of a single ` View ` to
updated PooledByteBufAllocatorL to include additional configurations for buffer allocation options to enhance performance and flexibility in memory management
changed the type of the array from double [ ] to short [ ] in ObjectInputStream . java and added a new class CloneArray . java
added configuration for low - level IO thread pool size in HiveConf and updated LlapIoImpl to use this configuration to enhance thread management by allowing
added reinitialization for sun . security . ssl . debug and sun . security . ssl . SSLLogger on jdk 11
updated latitude and longitude range validation in LatLonGrid . java and added a test for growing polygons in TestLatLonGrid . java to
added a new method ` invisibilityOfElementWithText ` in ` ExpectedConditions . java ` to check visibility of elements containing a specified text
added ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and updated related logic to enhance file replacement functionality to support insert overwrites
added a test for obtaining the enclosing object of a Reflector class in ReflectorTest . java to ensure that the enclosing object of a Reflector
added a new configuration parameter " auto _ generate _ android _ facet _ sources " to the BuckConfig settings to enable automatic generation of Android facet sources
updated error messages in HubChangeExecListener to include author information to improve clarity of error messages for better debugging
added properties field with getter and setter methods in mmm Link . java and added a corresponding test in QuickLinksConfigurationModuleTest . java to
removed EqualsAndHashCode annotations from InitialConfig and YamlConfigFileDTO classes , and added a toString ( ) method in YamlConfigFileDTO to streamline code and
use generic type to avoid raw type .
updated the ` forName ` method to accept a ` Class < ? > ` parameter and improved class loading logic to enhance class loading
replaced ` isEmptyOrNullString ( ) ` with ` is ( is ( is ( is ( is ( is ( is ( is ( is ( is (
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve thread management efficiency by utilizing a more
changed the method visibility of setSecurityContextAccessor from package - private to public to allow access to the method from other packages
updated imports and refactored methods in TimeStepdefs . java for improved clarity and functionality to enhance code organization and align with
fix issue where spark _ isolated and spark _ recessive be not be set correctly .
updated proxy creation methods to use ` exchangeSpecification . getUri ( ) ` instead of ` exchangeSpecification ` to improve clarity and consistency in
updated print statements in RecordGenerator . java to use a more descriptive variable name to improve code readability and maintainability
camel - 15836 : camel - kafka - allow to configure autocommit for kafka consumer
updated locking mechanism in Liquibase and LoggingExecutor classes to ensure proper release and logging of database change logs
updated the @ SuppressWarnings annotation in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to include " rawtypes " and " serial " warnings to
added synchronized keyword to several methods in Database . java to ensure thread safety when accessing shared resources
( chore ) camel - spring - boot - auto - configuration - maven - plugin : refactor nested property resolution
updated currency pair reference from baseSymbol to counterSymbol to ensure accurate ticker adaptation for currency pairs
( chore ) camel - core : fix checkstyle issue
replaced UUID generation with system property retrieval for test ID to improve flexibility by allowing dynamic test ID retrieval
added synchronization to synchronize access to date and number formats to ensure thread safety when accessing shared resources
updated package - info . java files for mmm and ppp packages
updated heightScale configuration to use a dynamic value instead of a fixed value to enhance flexibility by allowing dynamic height scaling
updated equality check in SecurityConfig and changed assertion in SecurityConfigTests to use assertNotSame instead of assertEquals to improve clarity and accuracy of security validation
updated the default value of ` dump - partition - id ` from ` false ` to ` false ` to ensure consistent behavior when dumping partitions
added imports for TronTXOutput and TronTXOutput . TXOutputs , and implemented a test for TX outputs in UTXOSetTest to
[ java ] false positive for unused local variable and anonymous variable .
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a test for overriding previous restart parameters in JsrJobOperator to ensure correct behavior of job restart properties when parameters are provided
added a method to disallow batch operations on cascade to provide a way to control batch processing behavior
updated principal assignment logic in JaasAuthenticationHandler . java to streamline principal retrieval to improve code readability and maintainability
replaced direct core closing with a dedicated thread pool for better resource management to improve thread safety and prevent potential resource leaks
added null check and visibility handling for mActionsView in RecentsView . java to ensure proper UI behavior when mActionsView is not initialized
refactor parameter handling in RunIdIncrementer to improve clarity and ensure proper initialization of job parameters
refactor BasicEntity and TestUtil classes to improve code organization and readability
added unit tests for the ` getMatchedDevices ` method in ` SchemaRegionBasicTest ` to enhance test coverage for device matching logic to ensure correct
[ 3.0 ] add try - catch for metric event error invocation ( # 11030 )
updated EigenvectorCentrality . java to include a check for non - zero max before updating mCentralities and added a new EigenvectorCentralityBuilder
updated the registry creation process to use a dynamic port instead of a fixed one to enhance flexibility by allowing dynamic port assignment
updated GeometryGenerator to use byte arrays instead of float arrays for vertex and index data to improve performance and compatibility with binary data handling
updated the Amplifier value from 2 to 0 in BlockEntityBeacon . java to correct the Amplifier positioning logic
refactor TubeCalc class to improve code readability and maintainability
disable health check by default ( # 4722 )
updated the type of ` DEFAULT _ GROUPS ` and ` groups ` from ` Class < ? > ` to ` Class < ? > ` and added
updated the @ summary annotation in bug8057791 . java and added a new test annotation in bug8057791 . java to improve test coverage for
added a daemon thread to the executor service in the StatisticsReporterComponentImpl class to ensure that the application does not exit via main method completion
fix lexicon version number for gradle
added reflection access check in JavaAdapterFactory to ensure proper handling of type operations
camel - 16400 : fix camel - mina test error
updated initIOContext method in CombineHiveRecordReader and HiveContextAwareRecordReader and added getStart method in RCFileRecordReader to en
deleted ` ClassLoaderHolder . java ` and ` LoaderManager . java ` files to remove unused classes to streamline the codebase
added a method to check if the configuration is changed and modified the file system checks to ensure that only valid source directories are processed , improving
added try - catch blocks around session callback registration to handle potential exceptions that may occur during registration
updated index creation paths in TestBackwardsCompatibility . java to ensure compatibility with new indexing configurations
[ hotfix ] [ rpc ] allow akkarpcserviceutils . createandstart ( ) to be call with a builder function
added retry logic for setting mapreduce . map . maxattempts in TestExportSnapshot . java to ensure maximum attempts are respected during snapshot operations
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a new test class SslConnectionTest for SSL connection handling to ensure that SSL connections are properly closed before filling
added validation for IPv4 and IPv6 addresses in InetAddress . java and NetworkInterface . java to ensure only valid address types are processed and improve error handling
added a test for date serialization in a collection to ensure correct handling of date types in JSON format
refactor Message class to improve code readability and maintainability
nifi - 1892 : fixed npe in putdatabaserecord . generatesql ( ) when sql be empty
updated loop condition in TableOutput . java to correctly calculate the maximum width based on the running width
pdfbox - 4892 : simplify code , a suggest by valerybokov
make formatstringchecker priority high by default
[ java ] ignore for - each statement .
added PDF version and full compression settings in PDFExporter and updated sample file to improve PDF export functionality and ensure correct sample file format
added unit tests for LdapUserDetailsMapper to ensure correct mapping of role attributes to authorities
make ldap read timeout configurable
refactor multiple TestDescription files to improve code organization and maintainability
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and readability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check if the handler is invalidated in the gesture state check to ensure proper handling of gesture states during gesture handling
updated rotation values for folder creation and folder creation in Workspace . java to improve layout responsiveness and visual consistency
updated OciConfigConfigSource to use ConfigProviderResolver instead of ConfigProvider to enhance configuration handling and improve code clarity
refactor Testjsig class to improve code readability and maintainability
improve mana item count calculation to account for stack capacity .
regenerate client with updated copyright year ( # 6022 )
removed the serialVersionUID field from P11TlsPrfGenerator . java to ensure compatibility with the latest serialization standards
refactor validation logic for empty and failed TsFile resources in DataRegion . java to improve clarity and maintainability of the code
added new classes ` Switch21 ` and ` Switch19 ` with methods ` switchPatternMatching ` , ` switchNull ` , and ` Switch
updated error messages in ComparableSubjectTest to use " test . MyTest . ComparableType " and " test . MyTest . RawComparableType
tika - 4892 -- enable standalone processing by default
updated maximum set size check and improved array handling in Int2ObjectCache . java to enhance accuracy of set size validation and ensure proper
removed sorting of security filter chains in WebSecurityConfiguration and added a test for ordering in WebSecurityConfigurationTests to ensure correct ordering of security filter
updated the order type in BinanceTradeService from TimeInForce . GTC to null to align with the new order type requirements
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer instead of implementing Randomizer directly to simplify the randomization process and improve code clarity
[ hotfix ] fix checkstyle violation in rocksdbbuildinfostore
http : / / issues . apache . org / jira / browse / amq - 2473 - fix camel - jms component doc
added error handling for NoSuchFieldError in SourceUtils and created a new class TestGetBound with multiple generic types to improve robustness by handling potential NoSuchField
refactor filter predicate handling into a separate method ` getLeafFilterBuilderByParquetType ` to improve code readability and maintainability by
modified artifact name handling in BatchPropertyBeanPostProcessor and added cleanup methods in JobContextFactoryBeanTests and StepContextFactoryBeanTests to ensure proper resource
added logic to generate a unique certificate serial number for each segment in HttpsSegmentFetcher to ensure unique certificate serial numbers for each segment to avoid conflicts
updated the handling of default value retrieval and added a new DnsFallback class for testing DnsFallback functionality to improve code clarity and ensure correct behavior
ww - 4892 add miss import
changed the type of the ` success ` field from ` boolean ` to ` String ` and updated related method parameters in ` DepositAddress . java `
refactor the drop method in WindowsSecurity to ensure proper resource cleanup to prevent memory leaks
removed " address " and " phone " from the scope settings in CommonOAuth2Provider . java and CommonOAuth2ProviderTests . java to simplify scope
replaced direct submission of a submit statement with a dedicated Start class to improve code readability and maintainability by encapsulating the start logic
added a new constant for big DECIMAL values and modified hue and saturation handling in WLedHandler to improve precision in color representation based on configuration settings
replaced ` isValidCaller ` method with ` VALID _ CALLERS ` for improved clarity to enhance readability and maintainability of the code
added a new caseJSRInst method in InstSwitch . java to handle JSR inst switch functionality
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 353 : transaction be not
updated SQL query construction and prepared statement handling in DBMSProcessor . java to improve code readability and error handling for SQL updates
removed elevation handling for devices running Lollipop and above to simplify the code by eliminating unnecessary elevation settings
rename ` ` typeInformation ' ' to ` ` identifier ' ' for consistency .
refactor file access handling to use AccessController for improved security to enhance code readability and maintainability by leveraging privileged
refactor GroovyParserVisitor and GroovyPrinter to improve initialization and handling of binary operations to enhance code clarity and maintainability by
updated logging statement to use class name instead of message to improve clarity of warning messages for invalidation errors
updated character handling in RecordInputStream , UnicodeString , and added a test for UMLat readiness in TestUmlatReadWrite to ensure correct
added a test for downloading files with Norway characters in names to ensure correct handling of file names containing Norway characters
updated error handling in AsyncResource to use CancellationException and added cancellation logic for KeyRevokedException to improve error handling clarity and ensure
fix potential npe in timedmemberstatefactory
refactor MongoTemplateTests to improve code readability and add a new test for removing an object from an explicit collection to enhance maintainability and ensure
update copyright year to 2022 for 2013
updated string formatting in Coder . java to improve readability of the returned error message
refactor scroll handling in RecentsView and PagedView to utilize a new method to improve code readability and maintainability to enhance
refactor HiveIcebergMetaHook to use a centralized COMMON _ HMS _ PROPERTIES map to improve code maintainability and reduce
added a method to check if an address is already in use before proceeding with error handling to improve code readability and maintainability by reducing dup
added a classpath parameter to the argument list in TestNestmateAttr . java to specify the test class path for the test execution
updated logging level from VERBOSE to verbose _ schema in Grep . java to improve clarity by using a more descriptive log message
fix checkstyle issue in util / javaclass . java
add support for nest use - savepoint in sub - transaction
changed ` fetchSize ` from an integer to a ThreadLocal in ` QueryProcessExecutor ` to allow thread - safe access to fetch size management
[ java ] replace backoffidlestrategy with noopidlestrategy in embedpingpong .
[ type : refactor ] fix client introspection to handle empty response
added HDP _ VERSION configuration and logging in SliderAppsViewControllerImpl . java to enhance system property management for HDP version configuration
refactor JavacProcessingEnvironment to use separate fields for loaderClass , jusl , and loader to improve code clarity and ensure proper resource management
added deep cloning functionality to ParameterizedRobolectricTestRunner and introduced a new DeepCloner class in RobolectricTestRunner to enhance testing
added a conditional annotation for JETTY _ SHOW _ STACKTRACE in ResourceBase . java to disable stack trace display in the application
added a type check for an object in NativeObject . java to ensure proper handling of object types
updated OopField references from ` _ object _ klass ` to ` _ well _ known _ klass ` and replaced them with ` _ well
updated JwkKeyListView and JsonWebKeyEndpoint to use new serialization methods for RSAPublicKey and ECPublicKey to enhance key serialization
[ gr - 34486 ] fix nativeimageheap . writeisolates ( ) for non - stable image .
updated MBeanServerMXBeanUnsupportedTest . java to improve test coverage for MBeanServer functionality
removed import of OrderClassLoaders in MavenPluginCollector . java to streamline dependencies by eliminating unused imports
added ` getOwnerAddress ( ) ` method to multiple actuator classes and introduced ` getOwnerAddress ( ) ` method in ` TransactionCapsule
add a simple demo to show how to use stomp with broker .
refactor sendCommand calls to use predefined byte arrays for min and max values to improve code readability and maintainability by avoiding repet
update protobufannotationserializer to handle empty edge
[ java ] remove correlationid from asynccommandidset when it be remove .
added conflict handling logic in FileDataStorageManager , FileDownloader , and FileUploader to manage file conflicts to ensure that files are properly marked as up to
updated type parameters in ExecutionContext and related classes to use generics for collections to enhance type safety and prevent potential ClassCastException
replaced usage of StrUtils with direct method calls for splitting file names across multiple filter factory classes to simplify code and improve readability by reducing
added support for Oracle and MySQL driver properties in DatabaseFactory to enhance database configuration flexibility
updated MockMethodInterceptor to accept a handler parameter and corrected a suppression warning in PartialMockingWithConstructorUsingEasyMockTest to ensure proper handling of
updated time calculation in FileChangedExclusiveReadLockStrategy to use system current time instead of a fixed timestamp to improve accuracy of time tracking for file changes
[ hotfix ] [ table ] wrap classloader in context .
added a runnable to run on the UI thread in TerminalView . java and implemented the onBufferChanged method in TerminalTextViewOverlay . java to improve UI
updated formatting of code for consistency and readability in ConfigDispatcher . java to improve code clarity and maintainability
refactor freeze operation logic to conditionally handle TVM freeze v2 to improve clarity and flexibility in the operation registry
added support for insecure connections in TLS configuration by introducing a boolean flag to allow configuration of the insecure protocol to enhance security by allowing
refactor source and class location handling in JavadocTool . java and introduce new classes T7091528 . java and T7091528
replaced ` toLowerCase ( ) ` with ` equalsIgnoreCase ( ) ` for case - insensitive comparison of edge column names in ` ExporterGDF .
added cascade type to OneToOne relationship in DefaultUserInfo . java to enhance data integrity by allowing cascade operations
change message . equals ( ) to be more generic
updated ISO - 8859 - 1 encoded character in response headers to use Unicode escape sequence to ensure proper handling of special characters in HTTP responses
[ hotfix ] remove unused field in rocksdbSerializedcompositekeybuilder
added ` getStaticPermissionsField ` method to ` ProtectionDomain ` class and updated logic for handling static permissions in ` SubjectDomainCombiner ` to improve
fix nullpointerexception in recipehandler Brewery and ElvenTrade .
updated parsing logic in mmm Parser . java to handle parentheses correctly to ensure accurate parsing of expressions with parentheses in the parser
added a connection error dialog to the upload process to enhance user experience by providing feedback when an error occurs
added a new test class ` Issue596 ` and modified ` HttpHandlerImpl ` to handle unsupported media types to ensure proper error handling for unsupported media types
updated bitwise operation to use long conversion to ensure correct handling of large bit values
refactor ImportLayoutStyle class to improve code readability and maintainability
refactor ConsoleUIService to use constants for terminal and input handling to improve code readability and maintainability by reducing duplication
replaced mocking of AccountManagerCallback with direct instantiation and assertions to simplify test code and improve readability
remove unnecessary ' this ' keyword from analysistype . getenclosingtype ( )
renamed methods related to ` getProperty0 ` , ` getEntries ` , ` getConcatSeparator ` , ` getConcatSuffix ` , and ` get
removed a timeout parameter from the set method call in PutAllCallable . java to simplify the code by eliminating unnecessary timeout settings
[ issue # 5060 ] fix npe when mqconsumer be empty ( # 5060 )
[ java ] add source identity to the source connection .
added a new file ` TopTabAction . java ` that implements the ` Presenter . Toolbar ` interface to provide a toolbar that displays a specific
camel - 16462 : camel - core - optimize dynamic router to use schedule for all match
updated import statements and added JUnit annotations in AggregateItemReaderTests . java to improve code clarity and ensure proper test setup
updated the constructor of the Procedure class to use generics to enhance type safety and improve code clarity
added functionality to display the count of wikidata edits in the AchievementsActivity to enhance user experience by displaying the number of edits
added validation to ensure the length is within the valid range of Short . MAX _ VALUE to prevent runtime errors
do n ' t crash when constant long be large than long . min _ value
updated multiple dataset classes to improve consistency in naming conventions to enhance code readability and maintainability
enhanced error message in InvalidTopologyTemplateException to include acceptable values for credential type to improve clarity in error reporting for better debugging
updated the initialization of ` v [ 0 ] ` and ` v [ 1 ] ` to use ` random ( ) ` instead of ` nextInt (
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified time comparison logic to improve precision in date comparison
added SSL property handling in TestUtil . java and updated related tests in PGPropertyTest . java to improve SSL configuration to enhance security by ensuring secure connections
danielwagnerhall : enable safebrowsing by default in chrome
added null checks before setting flight configuration in BaseMotorMount and RecoveryDevice to avoid potential NullPointerExceptions when oldConfig is null
added a condition to prevent transcoding in DLNAResource based on configuration settings
updated table comparison logic to handle empty lists more gracefully to improve robustness by preventing potential null pointer exceptions when accessing elements
added a CustomIgnoreTag constant and conditionally remove a section from the native code if it starts with CustomIgnoreTag to enhance the robustness of
camel - 16400 : camel - jpa - optimisticlocking should use optimisticlockingexception instead of runtimeexception
fix npe in beandefinitioninjectprocessor when @ configurationproperties annotation be miss
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added padding adjustments to the toolbar and fragment container to improve layout consistency and
deleted the ClusterNodeInfo . java file to remove unused or redundant code from the project
added a return statement in ShieldedTransferActuator . java to ensure the method always returns true to avoid unnecessary execution
added debug statements to ServerHandshaker to provide feedback on ciphersuite selection status
refactor template selection logic in ` ChooseRichDocumentsTemplateDialogFragment ` and ` ChooseTemplateDialogFragment ` to handle single and multiple templates to
added a ` nodeLabelMap ` to track duplicate node labels and updated logging behavior to enhance error reporting for duplicate node IDs to improve clarity and
added a new file ` R2303044ListSelection . java ` to test selection of a list item to ensure that a list item is selected when
[ java ] use hasclienttimedoutexception . hasclienttimedoutexout instead of checkkeepedexception .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions when mWorkspace is not initialized
added a new test method ` testCompoundPropertyTwice ` to the ` StepScopePlaceholderIntegrationTests ` class to ensure that the ` compound ` property
replaced the use of ` Lists . newArrayList ` with a direct call to ` rowCounts ` to streamline row count computation by eliminating unnecessary
updated path handling in SpringBootDocBuildTemplate to use path parameters and query parameters to improve clarity and functionality of the API method documentation
do n ' t create a new listener if one already exist
updated DistBuildCachingEngineDelegate to use CachingBuildEngineDelegate instead of DistBuildCachingEngineDelegate to improve cache management based on remote configuration
improve error message when response can not be parse
added a conditional check for DEBUG before logging the message in WidgetsModel . java to reduce log verbosity when debugging is enabled
refactor Console , Scanner classes to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a new test for discount overlaps in TestSimilarityBase . java to simplify the calculation
refactor mailSender method calls to check for the presence of SimpleMailMessage and MimeMessage [ ] arrays to enhance test reliability by
added exit and quit methods to Global . java and removed them from ScriptingFunctions . java to improve the handling of script termination functionality
[ hotfix ] [ test ] fix resource leak in loanbrokergateway
renamed methods related to ` getFirstUnverified ` and ` getLastUnverified ` to ` findFirstUnverified ` and ` findFirstUn
bug cs - 14898 : do n ' t call getcookie ( ) in vmware context
updated assertions in ResinAcegiAuthenticatorTests to ensure consistency in authority retrieval across test cases
replaced direct calls to ` bigIntegerToBytes ( this . r , this . s ) ` with ` ByteUtil . bigIntegerToBytes ( this . r
rename fml . disabledmodstest to fml . modstates for good clarity
refactor account selection and dialog handling in ReceiveExternalFilesActivity to improve clarity and maintainability of account selection and display logic
improve error message when sink can not be connect to client
added error handling for empty simulation results in ValidatorContractController to ensure that an exception is thrown when processing an empty simulation results
refactor JSON parsing in TexturePackerFileProcessor to handle null values gracefully to improve robustness by preventing null pointer exceptions
no effective change - remove unnecessary null check
updated SIZE and WINDOW values in TestRefprocSanity . java from 10 , 000 , 000 , 000 to 1 , 000 , 000 , 000 ,
fix npe in editorconsole . write ( ) when no console be open
camel - 15836 - camel - aws2 - * : improve the performance of the kinesis connector - kinesis - * : make it faster to
replaced manual dialog creation with a dedicated method ` showInfoAlert ` to improve code readability and reduce duplication
updated variable names and method parameters in T4501661 . java to enhance clarity and maintainability of the code
update jetty version to 1.8 . 0 _ 31
do n ' t include pluginbase as a dependency if it ' s a pluginbase
added a HashSet to manage ZipFileInputStream instances to ensure proper resource management and prevent memory leaks
rename datamatrix to data _ matrix to avoid confusion
added methods to run active and idle streams in the SequenceGeneratorSource class to improve resource management by ensuring thread safety during source context execution
corrected spelling of " getCurrentyActiveConnections " to " getCurrentActiveConnections " to ensure consistency and accuracy in method naming
replaced ` findAny ( ) ` with ` findFirst ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java `
added support for " ppc64 " architecture in multiple Java files to enhance compatibility with additional data formats
improve error message when activity resolution fails to resolve activity
replaced ` COMMIT _ TIMEOUT _ MINUTES ` and ` ROLLBACK _ TIMEOUT _ MINUTES ` with ` LONG . MAX _ VALUE ` for
replaced instances of ` new Date ( ) ` with ` OffsetDateTime . ofInstant ( ) ` and ` OffsetDateTime . ofInstant ( )
refactor BytesRef class to improve code readability and maintainability
added a Toast message to indicate that YouTube Player doesn ' t work on Lollipop until an update from Google
added error handling for unterminated Dollar quotes , string literal , and block comments in SQL parser to ensure proper parsing and error reporting for SQL
fix npe when there be no vibrator .
updated border color from " 0 " to " 1 " and modified related attributes in DotRenderer . java to improve visual consistency and clarity of
added a method to check if a configuration variable is encoded or not encoded in HiveConf . java and updated the SetProcessor . java to utilize this
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve code readability and maintainability
make default uri implementation work with proxy uri ( # 3903 )
added image loading functionality to NetworkedCacheableImageView and updated related classes to enhance image loading capabilities and support for NetworkedCacheableImageView
removed target parameter from LauncherAnimUtils . ofFloat calls across multiple files to simplify animation parameters to improve code readability and maintainability
updated the controller version handling in DependencyBank . java to use a constant for the controller version to improve maintainability and clarity by centralizing
refactor LaunchedURLClassLoader to improve code readability and maintainability
updated ` DataSourceHealthIndicator ` to use ` DataAccessUtils ` instead of ` QueryForObject ` for querying results to improve compatibility with JDBC query
[ ds - 3058 ] add no - cache header to response for authentication
updated the warning message format to use Locale . ENGLISH to ensure consistent message formatting across different locales
updated SolrQueryParser constructor to accept an Analyzer parameter to enhance flexibility in query analysis by allowing custom analyzer configuration
updated copyright year from 2014 - 2016 Will Winder to 2017 - 2017 in multiple Java files to reflect the official copyright year of the project
removed unnecessary semicolon in MainTest . java to improve code clarity and maintainability
refactor TypeContributions class to improve code readability and maintainability
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VoidColumnVector for batch processing
use request . getName ( ) instead of templatename in statementgenerator
remove unnecessary type check in AbstractConfig . java to streamline the configuration addition process
[ java ] : add correlationid and timestamp to session header .
rename methods ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll ` and ` max
added a new annotation ` NoBootstrap ` in the ` manifold . api . host ` package and modified the ` BootstrapInserter ` to conditionally build
hbase - 27875 tabledescriptorchecker should use getvalue ( ) instead of getmaxfilesize ( )
updated the handling of requestedCommits and fillTo methods in BranchGraphServlet . java to improve clarity and correctness of commit list filling logic
added InvocationTargetException to method signatures in bug6794831 . java to improve error handling for method invocations
added a constant for the build ID and updated the ` fillInOriginFromCache ` method in ` CachingBuildEngine ` to improve clarity
removed unused imports from TransactionCapsule . java to improve code clarity and reduce unnecessary dependencies
updated the markAsDone method call in HttpProtocol . java to ensure the future is marked as done correctly to maintain the original state of the operation
added a default TezConfiguration to facilitate configuration handling in Tez processing
added a null check for keyPurposes to prevent potential NullPointerExceptions when keyPurposes is null
simplified conditional check for visibility in CustomPlaybackOverlayFragment to improve code readability and maintainability
added a null check before stopping the most recent sound in OpenALAudio . java and invoked the forget method in OpenALSound . java to ensure that
fix ` ` discontinuity ' ' notification on first frame
added DecimalFormat , 000 , 000 , 000 , 000 tick units to NumberAxis . java to support additional numeric representation in graphical representation
refactor TargetsCommand and AbstractTargetGraphAndBuildTargets to use builder pattern instead of direct method calls to improve code readability and maintain
removed the use of ` IndexFileNameFilter . INSTANCE . accept ( null , fileName ) ` in ` IndexFileDeleter . java ` and
add fullboundingboxladders property to allow for full entity to have collision bound box
added a compression level parameter to multiple classes to enhance flexibility in handling certificate compression levels
add a test to verify that static fields are included in the stub jar to ensure that the method correctly includes static fields in the stub jar
added handling for BYTES data type in FieldSpec and related classes to ensure proper retrieval of metrics for BYTES data type
replaced string concatenation with formatted output in multiple test files to improve readability and consistency of error messages
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed the call to `
updated SpringDataJPAJoinFetchPaginationTest to use Spring ' s CacheManager and added caching functionality to enhance cache management capabilities and improve
fix for german . pronunciation . targetfeaturelister . feature to work with german locale .
added a check for an empty post body in SimpleHttp . java and updated test cases in TestHttpPlugin . java to ensure proper handling of
added a concurrent executor service to the ClientSideSlb and ClientSideSlbTest classes to improve thread management and ensure proper resource cleanup
updated texture positioning logic to account for vertical flipping to ensure correct vertical positioning based on flipping state
throw invalidconfigurationexception instead of hazelcastexception for unknown property
updated contextPath declaration and added null check for contextPath to ensure contextPath defaults to " NA " when contextPath is null
[ jbrules - 2635 ] fix npe in kiecontainerimpl when projectclassloader ca n ' t find resource file
added validation for B _ TREE _ MAP _ ROOT _ HEADER in BTreeMap . java and defined B _ TREE _ MAP _ ROOT _ HEADER in
added precompiled header handling and validation in ` AbstractCxxSourceRuleFactory . java ` to ensure that both prefix and precompiled headers are
replaced ` WeakReference ` with ` AccWeakReference ` for image updates to enhance security by using privileged actions for image updates
updated method visibility from package - private to private for ` findNextIndex ` and modified return logic in ` OrderedMap ` to enhance encapsulation and
changed the isDirect variable from true to false in VertexBufferObject . java to correct the logic for determining direct memory usage
maryclient : fix for ticket : 146 : remove duplicate code .
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 in Actor . java and Group . java to ensure
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) , a suggest by valerybokov
added a null check before removing the close hook to prevent potential NullPointerException when context is null
updated border spacing logic in CellLayout and added folderCellLayoutBorderSpacingInherited method in DeviceProfile to improve layout responsiveness for scalable grid
replaced NumberFormat parsing with a new custom ValueNumeric class for handling numeric values to improve code readability and maintainability by encapsulating parsing logic
added a condition to check for deferred authentication in FormAuthenticator . java to ensure proper handling of deferred responses in authentication logic
updated argument checks from " -- module - start - ini = " to " -- add - to - start " to " -- add - to - start
added a default partition value handling in DynamicPartitionFileRecordWriterContainer to ensure a default partition value is used when none is provided
added @ Nullable annotation to operatorFactory and related methods in StreamGraph , StreamNode , and BatchExecutionUtils classes to enhance null safety and
updated the ` getConflictId ( ) ` method to include a condition for ` hasClassifier ( ) ` before concatenating version and artifact ID to en
camel - 16400 : camel - kafka should not call staterepository . getstate ( ) multiple time .
improve error message when annotation substitution fails
fix typo in jabber account registration wizard
doc : fix docstring formatting
updated concurrency handling in LumberjackMultiThreadTest to use a calculated concurrency level based on available processors to improve test reliability by adjusting the expected
fix nullpointerexception when player be not dead
refactor Exchange class to improve code readability and maintainability
add apikey and apikey to updateuser api doc
refactor switch - case statements in MfaProvider , IdleTimer , JdbcMfaProviderProvisioning , and SAMLServiceProviderConfiguratorTest to use
updated the implementation of AbstractMetaDataExportMojo to enhance metadata export functionality and improve code clarity
added SQLIntegrityConstraintViolationException handling to improve error messaging for dropping tables due to SQL integrity checks
updated the property key from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure the correct access token is used
added a deprecated class RoboExecutorService in RoboExecutorService to signal that this class should no longer be used in favor of an alternative implementation
added a check for root group before adding subgroups in GroupTreeView to ensure subgroups are included in the menu when a group is a root group to
updated the method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition to check if the path starts
updated the Java process builder setup in TestDynamicNumberOfGCThreads . java to use dynamic arguments for dynamic number of GCThreads tests to
changed the type of host flavor from ImmutableMap < String , ImmutableFlavor > to Flavor and updated related methods accordingly to enhance type safety and
updated SQL statement construction to include optional parameters to enhance flexibility in specifying table creation options
added alpha transparency to the background drawable in ChatViewerFragment to improve visual appearance of the chat background
test : migrate ctiteratortest to junit 5 ( # 4104 )
added ` token . clear ( ) ` method and ` result . clear ( ) ` method to multiple tokenizer classes to ensure consistent behavior across tokenizer implementations
pmd : fix false - negatives with block statement
updated ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to remove ` Enum < S > , E extends Enum < E >
danielwagnerhall : do n ' t filter locator that start with ` ` link = ' '
ww - 4237 fixed numberformatexception in stringconverter
return the current scope of aggregate lifecycle rather than the one from the current uow
updated touch handling in TaskbarDragLayerController to use TOUCHABLE _ INSETS _ REGION instead of TOUCHABLE _ INSETS
removed the condition checking for ' ~ ' in FencedCodeBlockParser . java to simplify the code by eliminating unnecessary checks
http : / / issues . apache . org / jira / browse / amq - 3893 - add sockettimeout property to
added a sleep and exception handling in ElementAttributeTest . java to ensure proper synchronization and error handling during test execution
updated character encoding in BufferedReader to ensure proper handling of special characters in the input stream
refactor List class to improve code readability and maintainability
added constructors to AsyncFileImpl for handling file paths and options to improve error handling by capturing exceptions during file operations
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to mark the execution context as stable to indicate that the execution context is
nuage vsp : fix npe in case hostid be null
rename ` retryUploads ` method to ` retryFailedUploads ` across multiple classes to improve clarity and consistency in naming conventions
updated class file versions to use Java 9 instead of Java 8 to ensure compatibility with Java 9 features
improve error message for compiler warning
add a method to asynchttpclient to clear the client header map
replaced Vector with ArrayList for argument handling to improve performance and reduce memory usage
updated DEFAULT _ GRID _ COLUMN from 4.0 f to 3f in AppPreferencesImpl . java to increase the granularity of the grid column
added a condition to check if the table is defined before proceeding to ensure proper handling of view creation scenarios
updated regex pattern for date formatting in TestHS2HttpServer . java to ensure correct replacement of date strings in the context root content
added error handling for object instantiation in GraphPrinter . java to ensure robustness by catching potential exceptions during object conversion
simonstewart : fix the firefox driver to work with the firefox driver
update byteOffset calculation and add a test for too many allocations in ByteBlockPool to ensure correct handling of byte allocation scenarios
change interactionvalueencoder to use locale . english instead of static
added exception handling for unexpected errors in TcpTransport to ensure proper resource management and error reporting
add miss @ suppresswarnings ( ` ` serial ' ' )
updated OcamlDebugLauncher and OcamlBuildRulesGenerator to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify the class hierarchy
improve error message for database change
added response type validation in OAuth20DeviceCodeResponseTypeRequestValidator and improved error logging in NexmoSmsSender to enhance security by
added a call to chk ( index , 1 ) in DrillBuf . java to ensure correct index handling during buffer operations
updated the ` initTableMapperJob ` method to accept an additional parameter for ` inputFormatClass ` and ` outputKeyClass ` to enhance flex
[ hotfix ] fix checkstyle violation in abstractJRubymojo
truffle - llvm : disallow access to internal language .
added deprecation warning and validation for ' reserveCommitDuration ' in ReplicationHandler . java to ensure compatibility with Solr 7.1 and its configuration to
changed cache variable names from ` cacheVariableName ` to ` cacheForeignKey ` in ` DIHCacheSupport . java ` to improve clarity and
updated ECKeyPairGenerator to use Object array instead of long handles to improve performance and reduce memory usage
[ hotfix ] [ runtime ] add suspend method to restarting
replaced singleton instance of RotationTouchHelper with direct instantiation to simplify object creation and improve code clarity
[ type : refactor ] refactor uniFicontrollercache to use flatmap
updated variable names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency in
remove old offer from the offer book if they have the same id
use the default tl 1.3 connector for now
added type handling for mocking classes in MockitoMethodInvocationControl . java and updated import statements in SystemClassUserTest . java and SystemClass
updated NotLoadedException to include the current object parameter in multiple classes to improve error handling by associating exceptions with the current object
added a null extra file reference in the intent to ensure proper handling of file data in the intent
added error handling and improved file renaming logic in StoreDirect and StoreWAL classes to enhance robustness and clarity of file operations
added task snapshot handling in AbsSwipeUpHandler . java to improve task management during swipe up gestures
added hidden flag to CommandArgumentDefinition and updated LiquibaseCommandLine to utilize it to improve command argument handling to enhance flexibility in displaying hidden
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to align the test with the new network configuration
[ geos - 10641 ] use getSLD instead of getcatalogfromstyle for styleinfo
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being
added ID management methods to TiledMapLoader , TmxMapLoader , AnimatedTiledMapTile , and StaticTiledMapTile classes to allow dynamic
refactor Manager class to improve code readability and maintainability
updated DriverManager connection to include a version parameter to enable compatibility with newer database versions
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo . java to enhance change log generation by allowing optional schema inclusion
replace ` putIfAbsent ` with ` put ` in ` registryCache ` to simplify the method for putting entries into the registry
planner - 2892 : log single benchmark exception instead of error
changed the access modifier of the doPutRecord method from final to non - final to allow subclass access to the method
fix file selection on android 10 +
added tests for handling large and slow HTTP GET requests in FastCGIProxyServletTest . java to improve test coverage for large response content scenarios
added a service intent to mark a read interaction in MarkReadService to enable users to interact with the ReadInteractionsService in the application
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to improve error handling by ensuring warnings are logged only
added configuration to set the mail server port to 25 to allow flexible configuration of the mail server port
refactor SSLFactory reloading to use retry policies for better error handling to improve reliability and robustness of SSLFactory reloading process
updated the date format pattern in ObjectMapperProvider . java from " HH : mm : ss ' Z ' " to " HH : mm : ss '
updated the assertion message in SpyingOnRealObjectsTest to clarify the reason for the assertion failure due to mocking a private class to
added functionality to determine if a line ends with a newline in the InlineBoxing class to improve handling of line endings with line breaks
updated filePathString initialization to handle null parent cases to improve robustness by preventing potential NullPointerExceptions
removed unused import of DocCollection in TopicStream . java to clean up the code and reduce unnecessary dependencies
refactor input stream handling in NinjaServletContextTest for improved clarity and functionality to enhance test coverage for multipart form data handling
added properties configuration to AbstractCasEndpointTests to allow dynamic inclusion of web exposure settings
added a check to ensure the current graph is a dynamic graph to prevent runtime exceptions
improve error message for disabled bean
jsonpath : add option to suppress exception in jsonpath expression
updated the creation of ControllerLeaderLocator in HelixServerStarter . java to ensure proper initialization of the controller leader location
updated usage messages in CLHSDB and HSDB to clarify command usage for better user experience
refactored the ` configureChunkProvider ` method in ` FaultTolerantStepFactoryBean ` and removed it from ` SimpleStepFactory
[ beam - 8470 ] deprecate write . java in favor of io . write
refactor accessibility manager tests to use a local variable for the AccessibilityManager instance to improve code readability and maintainability by reducing
add ` ` flutter usage statistic ' ' to analytics
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from several Java source jar
refactored enum data type handling in PostgreSQLDatabaseConnector and added a new PostgreSQLEnumDataTypeHelper class to improve code organization and encaps
updated log path assertion to use File . separatorChar to ensure compatibility with different operating systems
updated references to ` MapredLocalWork ` from ` mapLocalWork ` to ` mapRedLocalWork ` across multiple files to align with
added index table validation in HiveMetaStoreClient to ensure that index tables are not dropped to prevent runtime errors
added a check to disable scrolling when the visibility is not VISIBLE to improve user experience by preventing unwanted actions
fix for sh - repl highlight on window
add miss handling of optional local variable in cross - site script
replaced the use of ` getRawPath ( ) ` with ` toString ( ) ` for adding file paths to ` filePathStrings ` to simplify path handling
removed the capture listener before adding it to the stage to ensure the listener is only removed when necessary
changed the value of _ metaDataComplete from true to false to disable metadata processing in the MetaData class
changed the return type of ` removeTaskTarget ` from ` boolean ` to ` void ` in ` RecentsAnimationController . java `
added environment variable handling for " PLATFORM " and " RELEASE " in JsBundleGenrule . java and corresponding tests in JsBundleGenrule
updated type casting logic in ` ppp Lower . java ` and added a new test class ` ppp T6500701 . java ` for handling primitive types
added tests for handling new line formatting in imports and Javadoc files to ensure correct handling of new line characters in comments and Javadoc files
added hub mode configuration in AbstractLiquibaseChangeLogMojo . java and declared it in AbstractLiquibaseMojo . java to allow dynamic
refactor skip policy assignment in JsrFaultTolerantStepBuilder . java and simplify null check in JsrChunkProcessor . java to improve code
added error handling for the current linkDb in IndexerMapReduce to improve robustness by logging warnings when linkDb is not found
replaced manual retrieval of the " setIndexerThreadPool " method using reflection to improve code readability and maintainability by leveraging reflection
removed " : 5000 " prefix from the address string in GameCanvasImplementation . java to simplify the address format for better readability
added a ` copy ` method to ` MapJobExecutionDao ` and refactored job execution retrieval in ` MapJobExecutionDaoTests `
added a new file ` DownloadTest . java ` to implement a test for downloading a PNG file from the game to facilitate testing of
update language handling in multiple Java files to ensure consistent language normalization and improve code clarity
updated UDF arguments in GenericUDFRound . java to use UDFArgumentTypes instead of argument arguments to improve type safety and clarity in error
added null check for selectedVersion in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
added multiple AntPathRequestMatcher matchers in SecurityConfig . java to enhance security configuration flexibility for the application
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
refactor bean definition handling in BeanDefinitionInjectProcessor to include checks for specific class names before processing to improve robustness by avoiding unnecessary object
added @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
[ openwebnet ] remove final modifier from SUPPORTED _ THERMOREGULATION _ SUPPORTED _ THING _ TYPES in openwebnet ( #
refactor SocketEventProcessor execution in AprEndpoint . java to simplify code by removing redundant status checks to improve readability and maintainability
deleted the SunToolkitSubclass . java file to remove unused class SunToolkitSubclass . java to streamline the codebase
replaced direct translation calculations with a new method ` hasRotationOrScaling ` in ` DefaultRenderableSorter ` to improve code readability and maintainability to en
added a test for registering wrapper handlers before primitive types in TypeHandlerRegistryTest . java to ensure correct handling of primitive types in type handler registration
pdfbox - 4892 : convert alternate colorspace to rgb a propose by valerybokov
updated references to ` CommonsApplication ` and ` Utils ` to use ` BuildConfig ` instead of ` CommonsApplication ` to improve code
added unit test base on user forum issue
fix npe in thorn chakram .
added a test for altering table with indexes extending primary keys in AlterTableWithViewsIT . java to ensure that indexes extend primary keys
updated the initialization of offset and off variables in FileFloatSource . java and modified test assertions in TestFunctionQuery . java to improve code clarity and
removed the ID field from the MongoRecordReader class to ensure proper handling of MongoDB fields
added disconnect methods to YeelightHandlerBase and DeviceBase , and updated connection handling in WifiConnection to ensure proper disconnection and termination of
added support for AUTO _ INCREMENT syntax in the parser and corresponding test case in TestCompatibility to enhance database support for auto - increment functionality
fix : add ` ` myapp ' ' to ` ` shared index informer ' '
server : fix npe in templatemanagerimpl . createprivatetemplate
replaced ` Point ` with ` RobolectricBufferedImage ` and updated image handling logic in ` ShadowBitmapFactory . java ` to improve performance and
removed deprecated constants from LauncherSettings to clean up code and improve maintainability
move data file to examples
added legendTop and mOffsetBottom variables to PieChart . java to improve legend positioning for better user interface layout
added a check to return early if the world transform is zero to optimize performance by avoiding unnecessary processing
add maryscriptcreator class to facilitate maryscript creation
added a session attribute to store the remote host for the listening HTTP servlet to enable tracking of the remote host for the listening HTTP servlet
refactor compaction logger initialization and file deletion logic in LevelCompactionTsFileManagement . java to ensure proper resource management to enhance code clarity and ensure
updated references from " xlink : href " to " href " in ComponentDescription . java to ensure consistency in URL handling for license and location elements
( chore ) camel - aws2 - s3 : fix typo in s3 upload timeout checker name
hbase - 27875 make regionserver . isclustershutdown ( ) public and log regionserver ' s state
added a null check for the span before logging the stopped span to avoid potential NullPointerExceptions when accessing span information
trim whitespace before adding an active option to ensure that only valid options are added to the configuration
added functionality to control wallpaper depth based on user preferences to enhance user experience by allowing customizable wallpaper depth settings
added an assertion to verify the success count of the overseer to ensure that the overseer correctly reflects the expected success state
updated kernel version check logic in LinuxFileStore . java to ensure compatibility with different kernel versions
refactor ExecConstants class to improve code readability and maintainability
added ScreenRecordRule import and annotation in ThemeIconsTest . java to enable screen recording functionality for testing purposes
added a method to set scan attributes for paging in ScanUtil to enhance paging functionality by integrating with PhoenixConnection
added a check to ensure lowRange is less than or equal to 100000000000L to prevent potential errors in range validation
reduce cache size estimation in asyncwritecache
server : fix hostresponse . setzoneid ( host . getzoneid ( ) ) .
[ zeppelin - 1892 ] fix livy interpreter to handle utf - 8 correctly
refactor filesystem removal logic to use a direct method call to improve code readability and maintainability
changed the type of the ` json ` variable from ` Object ` to ` String ` and updated related methods in ` HttpRequestBuilder . java ` to improve
increased the polling wait time from ` hardCommitWaitMillis * 2 ` to ` hardCommitWaitMillis * 3 ` in ` SoftAutoCommitTest
[ grid ] clean up listener after each test
refactor multiple dial - related Java files to improve code organization and maintainability
syncqueue : fix typo in error logging
updated Ryuk container version from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest features and bug fixes
updated the method to return additional bootstrap paths instead of the bootstrap paths in BootClassLoaderHook . java and added a new test hook class to ensure
fix for patchy library not find on window .
[ hotfix ] [ yarn - tests ] remove unused yarnclient parameter from yarnitcase
add no - data - included map statistic to localmapstatsprovider
deleted the AllTests . java file to remove obsolete tests that are no longer needed in the project
added handling for non - breaking and zero - width Unicode characters in AbstractWordConverter to improve text formatting to enhance compatibility with Unicode standards
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to ensure that stack traces do not starve memory during stack
updated method call to use getResultMappingsForRowKey instead of getResultMappings for creating row keys to improve clarity and maintainability of the code
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id
deleted the ` Controller . java ` file and renamed ` Weldby ` class in ` Weldby . java ` to ` WeldModule .
ruby flavor : do not capture group in empty check
added a protected variable ` liquibaseProLicenseKey ` and removed its logging statement in ` AbstractLiquibaseMojo . java ` to allow
mondrian : fix npe in mondrian . setmeasurehierarchymemberreader ( )
[ gr - 34486 ] make debug info output configurable .
mondrian : fix typo find by codespell on fossies . org
added support for handling multiple friend paths in Kotlin - related classes to enhance flexibility in managing Kotlin - related arguments
added new aliases for " BATK " , " BRAHMI " , " MANDIC " , and " MANDIC "
updated equality checks in ExecutionCommand to use equals for commandId , hostname , role , roleCommand , and roleCommand to improve readability and
updated Mockito library version to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code readability and maintainability
added a toString ( ) method to SystemScope class to provide a readable string representation of the SystemScope object for easier debugging and logging
updated CSS parsing logic to handle percentage and number types more accurately to improve error handling for invalid parameters in the CSS parsing process
added a test for verifying the reverse scan of a local index in LocalIndexIT . java to ensure that the index retrieval logic correctly handles
updated imports and method names from ` InstrumentationRegistry ` to ` ApplicationProvider ` and modified database cleanup logic to ensure compatibility with the latest testing framework and
updated toast messages to use string resources instead of hardcoded strings to improve localization support and maintainability of the code
refactor conditions in RendererUtilities for improved readability and consistency to enhance code clarity and maintainability by simplifying conditions
refactor KrakenStreamingAdapters to use ArrayNode instead of JsonNode for market data retrieval to improve code readability and maintainability by reducing
added a try - catch block to handle SQLiteException when adding the FILESYSTEM _ CRC32 column to the database
removed debug print statement from AsyncServletIOTest . java to clean up the test output
updated import statements and refactored data computation logic in ConvertJoinMapJoin . java to improve clarity and maintainability of the code by
refactor ` buildView ` method to use ` Context ` instead of ` LayoutInflater ` to improve code clarity and ensure consistent background resource handling
added a ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to enable authentication
vpc : do n ' t set vpcid to null when set gateway network
[ beam - 10955 ] disable flink savepoint test on flink 1.11
fix checkstyle issue in util / aspectratioframelayout . java
updated loop condition to include index validation to ensure actions are only processed when valid actions are available
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest exchange architecture
add integration test for virtual and parent relationship
added null checks for spatial before processing to prevent potential NullPointerExceptions when spatial is null
updated token filtering logic in ConditionalTokenFilter , FixedShingleFilter , TestRandomChains , and TestConditionalTokenFilter to ensure correct handling of
fix unsafestorenode to include state after field
replace super . putAddress ( base + offset , value ) with io . putAddress ( base + offset , value ) in BoundedMemoryIO .
added a test to verify that the CAS event repository is empty before proceeding to ensure that the event repository is not empty before processing
removed unused parameters from AuthenticationAttrProcessor . java to improve code clarity and reduce unnecessary complexity
added a null check for the key parameter in MacOSXPreferences . java and created a new test class RemoveNullKeyCheck . java to ensure that null
removed the overridden ` setTypeface ` method in ` CodenameOneTextPaint . java ` to ensure that a runtime exception is thrown when setting a type
added ` open ` method implementations in ` AzurePinotFS ` , ` LocalPinotFS ` , ` PinotFS ` , and ` H
danielwagner : remove deprecate webdriverrunner # fail ( string )
simplified conditional check for item size in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to use a private boolean field for constructor mappings to improve code readability and maintainability by reducing repetitive
updated SQL statement in CreateTableGeneratorTest to include quotes around foreign key references to ensure proper SQL syntax for database compatibility
refactor filtering logic in VectorizationContext . java to improve clarity and functionality to enhance filtering support to ensure proper handling of boolean expressions based on
updated the type of ` moveSelectorConfig ` in ` ExhaustiveSearchPhaseConfig . java ` to use the diamond operator for type safety to
replaced the instantiation of ReorganizeTableStatement with a direct call to modifyDataTypeStatement to simplify the code and improve readability
updated cluster name handling to use constants instead of string literals to improve code readability and maintainability by reducing redundancy
improve log when a peer can not be connect
added style handling for multiple style strings in Nano . java to improve flexibility in applying styles based on input styles
use adventurenbtconverter instead of jnbt for fixup in schematic ( # 2103 )
updated return statement in NoToStringOnStringType . java to provide more descriptive terminology to improve clarity of the method ' s output
updated JVM memory settings in TestThreadFailure . java to reduce memory usage and improve performance
updated retryFailed method to use FailureContext instead of an integer count and added retryAnalyzer and DataProviderRetryTest classes to enhance error handling
updated return statement to use bandwidth instead of tokens [ 0 ] to ensure the correct bandwidth is used for token retrieval
danielwagnerhall : add selenium - backed selenium - backed selenium - backed selen
updated method signatures and refactored certificate fingerprint details in the Main . java and Resources . java files to improve clarity and consistency in certificate
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks to ensure the dialog is not opaque and has a default shape and has a default background to enhance component stability by preventing
changed the visibility of the state variable from private to final in DefaultProjectFilesystem . java to ensure the state variable cannot be reassigned after initialization
refactor Redis connection handling in ` RedisObjectFactory . java ` to improve clarity and support for different sentinel configurations
add a check to make sure we do n ' t modify the timestamp of a delayed message if it be the same a before .
replaced ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ` method calls to simplify the code by removing unnecessary
refactor share operation handling by replacing GetSharesOperation with a service - based approach to improve code clarity and maintainability by using a dedicated
removed the dependency check for ` isInjected ` in ` BeanDefinitionInjectProcessor ` and added ` @ Inject ` annotation in ` FieldPropertyInject `
refactor y - coordinate calculation in ClassicPlotManager to use a start index instead of getMinBuildHeight ( ) to improve code readability and
fix npe in smack integration test .
tmi - tiff : use interop subdirs when read exif data
added support for the ENABLED _ LS mode in VersionedTargetGraphCache and updated executor initialization in VersionTargetGraphMode and VersionedTargetGraphCache to
updated conditional checks to include video format validation to ensure proper handling of video formats in parser and media processing
fix typo in javadoc
add lwjgl . librarypath system property to load native .
added escape functionality to CSVRequestHandler and updated related tests to enhance CSV processing capabilities and improve error handling for invalid escape characters
updated grant type validation logic in ClientRegistrations . java and modified test cases in ClientRegistrationsTests . java to ensure proper handling of authorization
improve error message for self - suppresion
added a query to fetch the count of a string and updated assertions in DerivedTableIT . java and modified ClientAggregatePlan . java to include a null
added RSquare information to the map and assertions in RegressionEvaluator and StreamExpressionTest to enhance the accuracy of regression calculations
added handling for null request headers in ThreadContextMDCServletFilter to ensure proper context attribute management for HTTP requests
refactor code to use a local variable for MapWork instances instead of casting to MapWork to improve code readability and reduce casting overhead
refactor image handling in PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for retrieving folder images to improve
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a test for trusted issuer in JwtIssuerAuthenticationManagerResolverTests to
updated resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a new test for database
refactor interop type handling to use a boolean parameter to improve clarity and maintainability of type checking logic
removed redundant sleep call in AbstractBasicMockingIntegrationTest . java to streamline the test execution by eliminating unnecessary delays
added a new file KernCrash . java that implements a GUI with custom fonts to demonstrate and demonstrate the use of KernCrash
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure that tests do not proceed during execution
added a method ` getInterfaceAddresses ` to retrieve network interface IP addresses to enhance functionality to support IPv4 and IPv6 addresses
[ zeppelin - 1894 ] cleanup housekeeper task on shutdown .
corrected the spelling of " getClientAddress " to " getSlaveAckOffset " to improve code readability and maintainability
refactor assertion methods in Assert . java to improve code readability and maintainability
added a new test class ` Issue247Test ` to verify the functionality of the ` getTreeMap ` method in the ` MapDB ` database to
changed the type of ` results ` from ` Set < CategoryItem > ` to ` LinkedHashSet < String > ` and modified the ` doInBackground
updated validation logic in ValidatorTest . java to differentiate between today and birth leap years in the validation process
added support for processing error codes in GrblController to improve error handling by distinguishing between alarm codes and error codes
modify return statement to handle cases when there are no screens to display in the workspace functionality
removed the count parameter from the getTrades method and related calls to simplify the method signature and improve code readability
updated character handling in ConsoleReader and MemoryHistory classes to improve text formatting and ensure correct index bounds
updated the way the jdkPath is constructed by changing the concatenation of " jdk " to " jdk " in JavaBuild . java to ensure
updated method calls from ` getDescription ( ) ` to ` getType ( ) ` across multiple classes to improve clarity and consistency in handling build rule types
updated JFCModel constructors to include a logger parameter to enhance error handling by logging warnings about missing control paths
added validation to ensure tolerance is non - negative in MaximumInscribedCircle . java to prevent invalid tolerance values
added createView and dropView methods to facilitate view creation and dropping operations in the database
added conditional checks for stable float and double expectations in NaNTest . java to ensure tests are only skipped when stable float and double expectations are met
added a new ` DesktopTaskbarUIController ` class and integrated it with ` TaskbarManager ` to manage hotseat icons in the taskbar
added task count listener to moditemadapter and searchmodfragment .
refactor methods in Files . java to improve code readability and maintainability
refactor interceptor handling in AnnotationGrpcServiceDiscoverer to use a collection instead of a set to improve code readability and maintainability by
updated DomainAwareServicesManager and ChainingServicesManager to extend ServicesManager instead of ServicesManager to simplify service management by removing unnecessary interface implementation
add debug log to resourcepackloader
chore : update gapic - generator - java version to 2.1 . 0 ( # 638 )
added grow ( ) and growY ( ) methods to Cell class to enable dynamic cell growth functionality
refactor DefaultInputHandler to use a more generic ` bindings ` map instead of separate ` currentBindings ` and ` currentBindings ` to improve
resolve intermittent ci failure
replaced long array with byte array and added memory failure check in MetricsMemoryTester . java to optimize memory usage and handle failure scenarios more effectively
deleted the JobParametersPrototype . java file to remove unused code related to parameter handling
added security configuration to the MappingsTable class and updated related methods to enhance security handling during mapping operations
rename ` APPLE _ SWIFT _ OBJC _ CXX _ HEADERS ` to ` APPLE _ SWIFT _ EXPORTED _ OBJC
changed DUMP _ TO _ FILE from true to false in TestMSPowerPointParser . java to disable DUMP _ TO _ FILE by default
workaround for omx . rk . video _ decoder . avc bug
[ java ] do n ' t set producer limit if there be no spy .
added a check for no info output options in the BaseFormatter class to ensure proper handling of database information when no output options are specified
enable ssl by default
added error output options to DOMConverter to improve error handling during latex rendering
refactor assertion methods in Assert . java to improve code readability and maintainability
[ java ] add retain field to event .
add testcase name to event output
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] fix typo in sql group window function name
updated import statements in LatexToUnicodeAdapter . java to ensure compatibility with the latest FastParse library version
added read - write locks and refactored SSL timeout handling in AbstractSessionContext . java to improve thread safety and maintainability of the SSL
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` in ` AppModule . java ` and modified
replaced CalciteSqlDialect with AnsiSqlDialect in SqlNodeConvertContext . java to utilize a more appropriate SQL dialect implementation
changed log level from debug to trace in FirmwareUpdateService . java to provide more granular logging for no firmware update handler availability
added unit tests for date and timestamp handling in Date and Timestamp classes to ensure correct handling of null values in SQL queries
refactor StringSubject and related classes to improve string concatenation to enhance readability and maintainability of the code
added a test method to verify repository permissions for multiple teams in UserModelTest . java to ensure correct permissions are returned for repositories with multiple
added a new file Test7088020 . java that tests method handles with incorrect method calls to ensure proper exception handling for WrongMethodTypeException when
replaced the ` matchAudienceRestriction ` method with a ` contains ` check for audience URIs in ` Saml2ResponseValidator . java ` to improve
refactor cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener to improve code organization and ensure consistency in cache management
changed the default value of ` _ stderr ` from ` System . err ` to ` null ` in ` StdErrLog . java ` to allow for
added a new constant SEPARATION _ ORDER and a check for active stages in BasicEventSimulationEngine to track the number of active stages in the simulation
updated query optimization from offlineTableConfig to realtimeTableConfig to align query optimization with real - time table configuration
updated PhoenixHBaseAccessor to include host minute aggregation SQL to enhance metrics aggregation functionality based on split point configuration
refactor SavepointV2 and FileStateHandle classes to improve code organization to enhance maintainability and readability of the codebase
added Bluetooth class management in ShadowBluetoothDeviceTest . java and implemented Bluetooth class handling in ShadowBluetoothDevice . java to ensure proper functionality of Bluetooth class management
rename contains ( ) to containsprofile ( ) to avoid confusion
[ drools - 1086 ] improve error message when feel function list be empty
replaced ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with ` graph . readUnlockAll ( ) ` in ` DataBridge
updated the way coreNodeName is constructed by using getCoreName ( ) instead of getNodeName ( ) to improve clarity and consistency in the code
add updatebackpressure to update chat .
updated test cases in TaggerParserPosTagCompatibilityITest . java to ensure compatibility with new parsing logic
added SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase to suppress compatibility issues related to SimpleText codec
added a condition to check if the element type matches the lastBaseTag in mmm Types . java and created a new class T7005671 with
updated triangle calculations in DelaunayTriangulator . java and added a seed in DelaunayTriangulatorTest . java to correct
added @ Override annotations to multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization in AmbariJwtAuthenticationFilterTest to use builder pattern to improve code readability and maintainability
refactor state management in StackOverflowCheckImpl . java to improve clarity and maintainability of state transitions
added shadowing methods for SQLiteDatabase and ContentValues in Robolectric to enhance testing capabilities for SQLite database interactions
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java ` and added a new
replaced the use of ` bytesPerDim ` with ` ArrayUtil . getUnsignedComparator ` for comparison in ` BKDWriter . java ` to improve
updated Locale class to include script and country handling with default locale initialization to enhance security and ensure proper initialization of locale settings
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct alpha value is used for text visibility
fix typo in warning message
updated imports in DefaultConfigurationTestSuite . java and TokenRevocationEndpointTest . java to use UaaJunitSuiteRunner for all test classes to streamline
trim whitespace from token inputs in GzipFilter . java and GzipFilterDefaultTest . java to enhance security by preventing XSS vulnerabilities
updated the output type assignment in Response . java to ensure consistency in output handling logic
updated regex implementation from JDK to JONI to ensure compatibility with the latest regex features and improvements
replaced ` looperExecutor ` with ` FutureTask ` for asynchronous task execution in ` ViewCapture . java ` to improve responsiveness and performance
add getstyles ( ) method to maryhttpserver to retrieve style from voice
added a check to ensure the parent folder exists before creating it to prevent errors caused by folder creation failures
updated the IP address from 0.0 . 0.0 to 127.0 . 0.1 to ensure the binding IP defaults to 127.0
corrected the spelling of " InOnlyCamelWorkitemHandler " to " InOutCamelWorkitemHandler " in multiple handler classes to ensure consistency
pdfbox - 4892 : remove unused import , a suggest by valerybokov
renamed WorkModeToggleContainer to WorkFooterContainer and updated related methods to improve clarity and consistency in naming conventions
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor ( prettyprinter ) : remove unnecessary explicit check for implicit type parameter ( # 2184 )
[ hotfix ] [ table - planner - blink ] fix memory leak in operator context
updated string formatting in QueryByExamplePredicateBuilder . java and simplified replacement logic in StringQuery . java to improve code readability and maintainability
replaced long evictionCounter with AtomicLong evictionCounter and updated evictionCounter methods to use AtomicLong to improve thread safety and performance in
simonstewart : make sure action be run on the main thread , not on the main thread
replaced localHost check with intendedDestination instanceof Inet4Address in NetworkAddressManagerServiceImpl . java to simplify the condition for checking the intended destination type
[ opengrok ] set data root and source root for main window
added ` MarkedClientEnabled ` and ` MarkedServerEnabled ` methods to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration ` to
[ hotfix ] [ doc ] fix typo in tableenvironment
updated statement timeout handling in MapperBuilderAssistant and adjusted timeout settings in MappedStatement to ensure consistent timeout settings across the codebase
updated the handling of the hangingTscTimeout parameter across multiple files to improve code clarity and ensure consistent retrieval of the timeout value from options
added serialization classes for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentConfiguration to enhance serialization support for Geolocation requests and responses
updated error messages and refactored artifact handling in ArtifactFilesystem . java and ArtifactFilesystemTest . java to improve clarity in error reporting and
tika - 4892 -- add support for jlsx xlsx and xlsx xlsx to the jlsx parser
[ giac ] do n ' t trigger concurrent modification on boolean
fix race condition in tcp nio connection
improve error message when guava optional do not have value
updated visibility checks in BackgroundAppState . java and modified the progress calculation in ShelfScrimView . java to improve UI responsiveness and ensure correct
fix npe in matdefeditorlelement when nav be null
mow - 794 : fix mow pin image on desktop
updated ErrorOccuredInOnExceptionRoute . java file to improve error handling clarity
use schedulewithfixeddelay instead of scheduleatfixedrate for astro discovery
pdfbox - 4892 : simplify code , a suggest by valerybokov
disable fail jms test due to hang
updated import statements in GuiceFactoryTest . java to replace wildcard imports with specific ones to improve clarity and maintainability of the code
added a system feature list to the Robolectric package manager to enable tracking of system features for testing purposes
refactor path handling in RCAFrameworkLoader to use a loop instead of checking for absolute paths to improve code readability and maintainability by
added logging for the cancellation process to improve visibility and debugging of the cancellation process
added a check to initialize enumerationValues to null if it is empty to ensure proper handling of empty enumeration values
rename variables and conditions related to inline boxes for clarity and consistency to improve code readability and maintainability by using descriptive variable names
added asynchronous processing for collecting and sending telemetry data in ` collectAndSendTelemetryData ` to enhance performance by reducing the number of calls to
removed conditional alteration for database type for UPGRADE _ ITEM _ TABLE in UpgradeCatalog260 . java to simplify database type handling
updated error messages for index and temp resource directories to provide clearer guidance on permissions to improve user guidance for directory creation issues
refactor DatasetUtilities class to improve code readability and maintainability
added a method to append selector IDs to the key in Matcher . java to improve the formatting of selector identification in the output
reformatted debug logging statements in GouraudShadingContext . java to improve code readability and maintainability
updated taskbar visibility and alpha handling in multiple classes to improve user experience by managing taskbar visibility and alpha based on device dynamics
removed unnecessary elements from KeyExchange . java to streamline code and improve readability
added a check for ` JdbcConnection ` before executing the ` select version ( ) ` query in ` CockroachDatabase . java ` to
refactor file index handling in ServerMainTest to improve clarity and maintainability to enhance code readability and ensure correct file existence checks
added methods to retrieve media record reordering mime type in CodenameOne and MediaManager classes to enhance media processing capabilities by providing access to media record
use shaderhelper . useshaders ( ) instead of confighandler . useshaders ( ) to avoid npe
updated the bindable filter logic in DruidAdapterIT . java to incorporate additional conditions for filtering results to enhance filtering accuracy and ensure correct
reordered parameters in ZkStateReader instantiation for consistency to improve code readability and maintainability
pdfbox - 4892 : disable xmp meta parser for external entity
added a new interface ` ClientRegistrationIdentifierStrategy ` to facilitate the retrieval of client registration identifiers in the OAuth2 client
replaced a conditional check with a while loop in UrlHelper . java to improve readability and maintainability of the code
rename ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and adjust related logic for varargs access checks to improve clarity
refactor border property check to use a helper method to improve code readability and maintainability
changed log level from info to debug in WatchConnectionManager and WatchHTTPManager to improve logging granularity and reduce noise in logs
updated import statements and method signatures in InternalDropAllCommandStep . java and HubUpdater . java to utilize HubRegisterResponse instead of HubConnection to
replace direct byte manipulation with Byte . toUnsignedInt for byte conversion to improve code readability and reduce redundancy
[ rocketmq ] fix typo in opentracingtransactionproducer
update DepFiles from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig to ensure caching behavior aligns with updated build requirements
changed the value of rangePannable from true to false in CategoryPlot . java to disable range pannable functionality
updated logic for managing the main active view in AllAppsContainerView to ensure proper handling of the work mode switch based on the current active page
changed access modifiers of ` glCaps ` , ` renderer ` , ` animator ` , and ` FPSAnimator ` in ` Visualizer2TopComponent .
added handling for CancellationException in FunctionTest . java to ensure that the test gracefully handles CancellationException during execution
changed constructors of JarFileResource and JarResource to be protected to allow subclass access to these constructors
fix javadoc for defaulttrackselector
added a loop to wait for unseqMerging status in LevelCompactionTsFileManagement to ensure proper synchronization to avoid potential race conditions
updated fee currency from AUD to BTC in BTCMarketsAdaptersTest to ensure the test accurately reflects the correct fee currency being used
added @ Table annotation and refactored test methods in HibernateDTOProjectionTest and JPADTOProjectionTest to improve code clarity and
refactor Unicode class to improve code readability and maintainability
updated the ` installAutoInstance ` method to include a ` Service ` parameter and added functionality to update Hive LLAP settings based on the updated
updated the call to delegate . onComplete ( ) in SendHeadersFirstPublisher . java to ensure proper execution order to maintain the correct order of operations
update aws module to use builder instead of deprecate method
added support for BIG _ DECIMAL in RangePredicateEvaluatorFactory to enhance value evaluation for BIG _ DECIMAL data types
rename ` ` inner ' ' to ` ` javacprocessingenvironment ' ' to avoid confusion
remove system . out . println ( annotation . toString ( ) ) from parameterinfo
added ` getAc3Enabled ( ) ` and ` getAc3Streaming ( ) ` methods in ` PlaybackController . java ` ,
updated the return statement to include a " value " field with a JSON representation of the response to enhance the response structure to support JSON responses
added @ SuppressWarnings ( " deprecation " ) annotation to DelegatingStatement and DiskFileItem classes to address potential issues related to deprecation warnings
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to validate SQL queries to ensure correct
refactor RTimerTree class to improve code readability and maintainability
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
add test case for issue # 2358 ( # 2359 )
replaced direct instantiation of ` QueuedThreadPool ` and ` ScheduledExecutorScheduler ` with named ` clientThreads ` and ` ScheduledExecutorScheduler ` to
updated JScrollPane and JSplitPane handling in ViewResultsFullVisualizer . java to improve layout management and added error checkbox functionality to enhance user interface
added phone number documentation to ScimUserEndpointDocs . java to clarify the purpose of the phone number field in the user endpoint
added private constructors to DeleteFiles , IndexFiles , and SearchFiles classes to enhance encapsulation and prevent instantiation of these classes
added null checks for responseMap and responseMap in JsonHttpPropertyRequest and URLStreamProvider to improve error handling and logging for HTTP response responses
refactor SolrRequestHandler class to improve code readability and maintainability
added a condition to check if ` DEFAULT _ PARALLEL ` is not equal to ` DEFAULT _ PARALLEL ` to ensure that ` parallel ` is not
fix javadoc for testvmware
added handling for SCARD _ E _ NO _ SMARTCARD in addition to SCARD _ W _ REMOVED _ CARD to improve error
added import for SuppressSysoutChecks and annotated the Test2BTerms class with SuppressSysoutChecks to suppress debug output for troubleshooting purposes
camel - 16400 : camel - bindy - allow to bind multiple value in the same line
changed default value of ' useOwner ' and ' useTimeStamp ' from true to false in JabRefPreferences . java to disable owner and timestamp settings
replaced ` Runnable ` with ` ThrowingRunnable ` in the ` runAndCheckException ` method signatures to enhance exception handling by utilizing a more specific
added null checks for via and viaContext in CrawlURI . java to enhance robustness by preventing potential NullPointerExceptions
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored methods in LiquibaseXMLTransformer
increase default cert validity to 90 second
updated ` frame ` and ` lastDeltaUpdate ` variables in ` ThreadHandler . java ` to use ` smoothDelta ` and adjusted their values based on
added a null check for paginator in HttpBatchReader and modified rawUrl initialization in HttpScanBatchCreator to ensure proper handling of table names
added null check for compactionInfo client in Worker . java and created a test for findNextCompact in TestWorker . java to improve error handling to ensure
added onSaveInstanceState method and updated fragment state handling in ShadowFragmentActivity and FragmentActivityTest to ensure proper state management during fragment state changes
reformatted code for improved readability to enhance code clarity and maintainability
added a test for parsing simple Android color references to ensure that the color resource loading functionality behaves as expected
added error handling for NoResultException in getSingleResult ( ) method to improve robustness by logging exceptions when no result is found
improve performance of collection . contains
updated the preference key from ' l ' to ' LawnchairApp ' in DepthController . java to ensure compatibility with the current application context
removed duplicate import of ProcessTools in LocalManagementTest . java to streamline code by eliminating redundancy
updated the ` updateTotalEnergyAverageUsage ` method to accept a ` timestamp ` parameter and removed the ` now ` parameter to simplify the method signature and
improved null handling and formatting in ExtensionStack . java and added a test for null extensions in ExtensionStackTest . java to enhance
2 . x : flatmap . flatmap ( ) should dispose of inner error ( # 4701 )
added connection timeout configuration in MultiGetRequest and ServerTableSizeReader classes to ensure proper handling of connection timeouts during server requests
reformatted code for better readability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to align with the latest Gradle
updated ` EdgeSyncCursor ` and ` BaseImageService ` to use ` TenantResourcesEdgeEventFetcher ` instead of ` SystemResourcesEdgeEventFetcher
added a test to verify that output hash is not calculated when cache is not writable to ensure correct behavior of output hash calculation in build rule handling
camel - 16400 : camel - netty - allow to configure whether to use byte buffer or not .
updated the method call to use Warehouse ' s qualified table name instead of altering it directly to ensure compatibility with the new table handling logic
improve error message when vertx instance creation fails
add unit test for type handler serialization and deserialization
pdfbox - 2852 : fix typo find by codespell on fossies . org
removed hint settings for query and lock timeouts to streamline timeout settings for improved clarity
added a new class ` StaticLoggerBinder ` that implements ` LoggerFactoryBinder ` to provide a singleton instance for logging functionality
removed duplicate calls to ` familyMap . put ( family , list ) ` across multiple Java files to streamline code by eliminating redundancy
added orientation checks in TaskbarManager . java to ensure proper handling of screen orientation changes
escape the nickname when create a jabber room .
added unit tests for the ` compact ` method in the ` StoreDirect ` class and created a new file ` Issue265Test . java `
added @ SuppressWarnings ( " Mutable " ) and @ SuppressWarnings ( " EqualsHashCode " ) annotations in multiple Java files to suppress warnings related to method
[ hotfix ] [ test ] make execution flow control test serializable
updated conditional checks for audio and subtitle tracks in DLNAMediaInfo . java and improved array copying in FFMpegVideo . java to enhance
updated NBWriteServlet to accept an unlimited parameter for control over write operations to enhance flexibility in handling unlimited write operations
do n ' t update total difficulty for invalid block in import light .
updated action assignment logic in DefaultPlaybackController . java to simplify handling of seekable players
replaced ` ArrayList ` with ` CopyOnWriteArrayList ` for managing library collections to improve thread safety and performance in concurrent access scenarios
updated the calculation of the bend angle and position in AllAppsView . java to improve the accuracy of the bend angle and position based on the
added a check for the presence of a colon in the key before processing to ensure proper handling of key - value pairs in HttpURLConnection
added PrincipalResolver parameter to casSimpleMultifactorAuthenticationMetaDataPopulator constructor to enable dependency injection for principal resolution
replaced ObjectMapper with ObjectBuilder for JSON parsing to improve compatibility with different character encodings
added a method ` removeTrailingSlashes ` to the ` IoUtil ` class to remove trailing slashes from the StringBuilder to enhance string processing by preventing
added methods ` matchesAny ` and ` matchesAny ` to ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to
hbase - 25819 fix a syntax error in loadincrementalhfiles
added fading event for water potion ( # 1771 )
reformatted the ` beginOrAdjustReorderPreviewAnimations ` method call for consistency to improve code readability and maintainability
updated calculations in ` ContractStateCapsule . java ` , ` ReceiptCapsule . java ` , ` ResourceProcessor . java ` , and ` ResourceProcessor
added checks for input readiness in AsyncContentProducer and enhanced debug logging in BlockingContentProducer to improve stability and traceability of
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that a required parameter is provided to avoid runtime errors
updated plist variable handling in AppleBundle . java and added a test for Info . plist variable substitution in AppleTestIntegrationTest . java to improve functionality to
update turret bullet , fix shooting , close # 189
change return types for ` adaptOrder ` and ` adaptOrder ` methods to return ` Object ` instead of ` OrderCreateApiRequest ` to ensure proper
added a new file ` PreParseGrammarTest . java ` that tests XML grammar preparation to verify the functionality of the Xerces grammar parser
added ` @ SuppressWarnings ( " doclint : missing " ) ` annotation and ` @ SuppressWarnings ( " doclint : missing " )
added FontManager import and overridden font settings in ExtendedEditText . java to ensure consistent font rendering across the application
added a null check for the current user in AuthorizeTag . java and a corresponding test in AuthorizeTagTests . java to ensure proper handling of
camel - 7673 fixed the cxf cxfrs test error
added setUpData method to JDBCGeometryTestSetup class to ensure proper initialization of test data
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] do n ' t stop restore attempt for already cancel task
allow user to specify server . rmi . create = true
use stringutils . join instead of string . join to make it easy to debug
added display metrics handling and updated qualifier assertions in multiple test classes to improve test coverage and ensure correct behavior of qualifiers
[ java ] : add cluster member id to service heartbeat .
updated the calculation of ` numAttributes ` based on the major version of ` ThreadMXBean ` to ensure compatibility with different JVM versions
added handling for negative and positive infinity results in CustomExpression . java to ensure correct handling of NaN values in expression evaluation
http : / / issues . apache . org / jira / browse / amq - 4893 - do n ' t log continuation on
added authentication routes for " / authenticate " and " / authorized " in the AuthenticityController and implemented authentication methods in AuthenticityFormTest to
added an assertion to check if the next node is alive in LoweringPhase . java and modified snippet handling in SnippetTemplate . java to ensure that the
updated logger reference from ConnectionManager to HttpClientRequestImpl to ensure proper logging context for HTTP requests
fix default track selection order
[ hotfix ] [ runtime ] fix typo in runtimeserialization
ggb - 2892 : crop geo on top of geo .
[ hotfix ] fix checkstyle violation in unitofworkfactory
added a new field ` allAppsCellWidthPx ` and updated references in ` WidgetPreviewLoader ` and ` WidgetCell ` to use it to improve
tika - 4071 -- add content type parameter to mail content , if available
updated URI construction in ThumbnailsCacheManager . java to include fileId and localId to enhance thumbnail generation by including local file information
added checks to prevent marking and resetting of input streams in the Source class
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future development
added a configuration property to control whether to show error stacks on the error page to enhance user experience by allowing toggling of error
cloudstack - 6892 : clean up template on account cleanup be fail if domain be not up to date while delete template
[ sparc ] remove unnecessary bailouts
[ drools - 5271 ] add support for legacy drool 5.0 api
fix crash in codenameoneactivity on cancellation
increased the default timeout value from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow more time for tests to complete successfully
updated import statements and modified style qualification logic in ShadowAssetManager . java to improve code clarity and ensure correct resource name processing
deleted two Java files , MrefStat . java and MrefStat1 . java , including MrefStat . java and MrefStat1 .
added StringUtils . isBlank check for requested scope in DependencyInsight . java to ensure proper handling of blank scope strings
refactor error handling in BTCETradeServiceRaw . java to use constants for error messages to improve code readability and maintainability
use hamcrest assertion instead of junit in tests
bitcoinuripuripuripuripuripuripuripuripuripuripuripuripuripur
planner - 383 throw illegalargumentexception if collection wrapping be enable
updated the folder info setting in FolderPagedView . java to ensure the correct folder information is set
fix race condition in jfrbuffernodelist and jfrchunkwriter
simplify null check in basicabstracttuple
refactor linter configurations handling to use InputResource for improved resource management to enhance error handling and support for reading linter configurations from
replace direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post to the Runnable to ensure backgrounds and paddings
updated the item index in the nonnulllist call from ` onInventoryTick ` to ` onInventoryTick ` in the ` onInventoryTick ` method
added a case for OCELOT _ BABY in PlayerEvents . java to handle OCELOT _ BABY event processing
added multiple @ PublicEvolving annotations to StateTtlConfig . java to indicate that these annotations are intended for the implementation of the state ttl configuration
added null check before setting parameter values in PreparedStatement and PreparedStatement classes to ensure proper handling of null values and improve code clarity
[ java ] print only valid recordings in the catalog .
updated append0 method call in StringBuilder . java to ensure consistent formatting of newline characters in the code
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest . java ` to validate JSON serialization functionality to ensure proper handling of snapshot
added cache invalidation for transaction and block in BroadTest . java to ensure proper cleanup of transaction and block data in tests
added handling for " LensMaskOpen " and " LensMaskClose " commands in AmcrestHandler , DahuaHandler ,
removed ` throws NoSuchBuildTargetException ` from method signatures in ` BuckConfig . java ` and ` BuildRuleFactoryParams . java ` to simplify method
refactor ChangeLogIterator to accept a list of change set filters instead of an array to improve flexibility in handling different change set types
improve error reporting for guest exception
ec2utils : use getenvorsystemproperty ( ) instead of getenv ( )
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
refactor whitespace handling in SpacesVisitor . java to improve clarity and correctness of parent initialization logic
add servercacheoptions # copy ( boolean )
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to verify that a hidden border is not visible on a f
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and updated related
updated KucoinExchange to use a more descriptive variable name for the Kucoin host URI to improve code readability and maintainability by using
corrected formatting in SpringResourceAccessor . java to improve code readability and maintainability
updated MICROGRAM _ PER _ CUBICMETRE and MICROWATT _ PER _ SQUARE _ CENTIMETRE to
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to utilize ` getMask
deleted the Tls12SocketFactory . java file to remove unused code to streamline the project
fix npe in tex parser when there be no entry for a give citation
added a check for Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric ' s legacy resource handling
added a check for FirebirdDatabase before creating a new DatabaseDataType for DOUBLE PRECISION to ensure proper handling of double precision in Firebird databases
added null checks before assigning data source and transaction manager to avoid potential NullPointerExceptions when dataSource is null
add package - info . java for test stubs .
updated command in OutputStreamTest from " ping - c 5 www . google . com " to " ping - c 5 127.0 . 0.1
no effective change - code cleanup - remove useless try - with - resources
updated the score handling logic in TermQuery to conditionally include scores based on the scoreMode ' s needsScores flag to improve accuracy of score calculations
[ dataflow ] fix npe in dataflowmetricstest
server : do n ' t search host nics when deploy vm
refactor dynamic partition pruning logic to utilize a new method for target object inspection to improve code clarity and maintainability by reducing
added a method to remove build artifacts from the artifact filesystem to ensure that existing build artifacts are removed before execution
added logic to set row selection interval based on selected row to improve user experience by allowing dynamic selection of rows
[ j2kt ] add assertion for arraystoreexception .
refactor PropertySource class to improve code readability and maintainability
added user agent support to the HttpClientBuilder and HttpClientConfiguration classes
refactor session management by replacing direct session creation with a dedicated restore method to improve code readability and maintainability to streamline session restoration process
updated assertions in IssueTest . java and changed data provider - based results handling in Reporter . java to improve test clarity and ensure distinct test instances
updated ByteArrayDataSource initialization to handle null content type to ensure a default value is used when none is provided
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 662 : disambigu
added @ SuppressWarnings ( " serial " ) and @ Override annotations to GraphApplet . java to improve code clarity and ensure proper method overriding
added a new method ` updateTaskViewsSnapshotRadius ( ) ` to ` RecentsView ` and updated its implementation in ` TaskView ` to
added logging statements to StaticMicroserviceVersions . java to improve traceability and debugging of swagger generation
change return type of put methods from void to int in ArrayMap . java to allow for more precise indexing of elements in the map
updated KafkaContainerCluster to include a startup timeout of 1 minute for better resource management to improve stability by allowing more time for container startup
[ issue # 5978 ] add retry logic for defaultmqpushconsumerimpl ( # 5979 )
refactor header addition logic in StaticServerHttpHeadersWriter to handle case - sensitive headers to ensure that headers are not written with different casing to improve
updated event listener class loading to enhance security by ensuring proper package access validation
added a custom adapter to display multiple applications in the application list to enhance user experience by providing a structured list of applications
updated applyIcon method to include null check for task parameter to enhance robustness by preventing null pointer exceptions
use try - with - resources to prevent resource leak
[ calcite - 748 ] basesqmtosql ast convert to sql do n ' t throw npe for insert statement
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursorCursorProjectionItem
refactor polling logic in DataInputStreamWithTimeout to use Future and improve error handling to enhance thread safety and maintainability of the polling mechanism
added ENABLE _ TS ( 0 ) mode to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enable
refactor UpgradeCatalog150 class to improve code readability and maintainability
rename networkparameters . testnet3 to oldnet .
danielwagnerhall : do n ' t update property panel if there be only one geos
updated onboarding preferences handling in AppsDividerView . java and added null check for mShowAllAppsLabel in ActivityContext . java to improve
updated HdfsIndexOutput to extend BufferedIndexOutput and added error handling for resource closure to improve resource management and prevent potential resource leaks
pdfbox - 4892 : do n ' t clip clip path if it ' s already complete
removed synchronization around local address assignment in SocketChannelImpl . java to improve performance by reducing unnecessary synchronization
added a method to add multiple values to a row in TemplateTransformer . java and a corresponding test in TestTemplateTransformer . java to enhance
added a method to check if the operating system is Windows and improved file renaming logic in Wallet . java to ensure compatibility with Windows systems and en
replaced usage of ` ALPHABET _ STRING ` with ` CHECK _ DIGIT _ STRING ` in ` Code39Reader ` and ` Code39Writer `
improve handling of unexpected type in node generation
removed unnecessary check for stored field length in IndexingChain . java to streamline code for better readability and maintainability
fix ( sql ) : handle nanosecond precision in where clause
fix npe in lwjglcanvas when postrunnablestacktraces be false
reformatted the description of the storage URL in AbstractGCSProcessor . java to improve code readability and maintainability
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve clarity to enhance code readability and
updated directory retrieval methods in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use a default value instead of null to improve test reliability by allowing
refactor UserData initialization and update filter count handling in FaultTolerantChunkProcessor to improve code clarity and ensure correct counting logic to enhance
updated method signatures and error handling in ` FileWithTabs ` and ` T4994049 ` classes to improve code clarity and ensure proper
replaced instances of checking for WindowsTerminal with ` assumeTrue ( TerminalFactory . get ( ) instanceof WindowsTerminal ) ` in ConsoleReaderTest . java to
removed conditional check for admin user in GetFeedbackSessionsAction . java to simplify code for better readability and maintainability
updated calculations for ` newSelection ` and ` mPosX ` in ` AllAppsView . java ` to improve accuracy in determining vertical scrolling behavior
bugfix # 20911 - do not notify client when there be no profiled app thread
added model loading and refresh methods in DataModelManagerDialog , modified encryption logic in DbConnectionDialog , and improved null handling in ExportPanel
replaced instances of ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` for consistency to improve code readability and maintainability by using a
lucene - 4892 : fix npe in documentswriter when no segment exist
[ blender ] fix npe when parse armature with no dvert
refactor FileDisplayActivity to improve code readability and maintainability
replaced direct creation of UnsupportedOperationException with a custom implementation to avoid unnecessary stack trace filling
replace calculation of label bounds with a streamlined method that calculates average line height to improve accuracy in label rendering
refactor RotationTouchHelper to accept a DisplayHolder parameter to improve flexibility in handling display changes
refactor quoted string handling in AVA . java to improve readability and maintainability of the code
replaced Long . valueOf ( s , 16 ) with IdConversion . convertToLong ( s ) and updated parentSpanId handling in ServletHandlerInterceptor
added a new test method ` testSmall ` and ` testBig ` in ` ServerDatagramConnectorTest . java ` , along with a test
updated the substring method call in TestSqlEntityProcessorDelta . java to correctly extract the substring value for country code to ensure accurate validation of the country code
refactor caching logic in Cache . java to improve performance and maintainability of caching operations
updated variable names and scope handling in ResourceSetRegistrationEndpoint . java to improve code clarity and ensure consistent scope management
lucene - 4892 : fix testunifiedhighlightertermvec to not use parallelleafreader
added a JFrame to display a GcodeTable with a number of rows to facilitate the addition of data to the GcodeTable
updated WebAppConnectionTimeout to use a configurable value from the configuration to enhance flexibility by allowing dynamic connection timeout settings
updated the type of ` envelopedTransform ` and improved error logging in multiple Java files to enhance code clarity and ensure proper encoding of query
refactor TestMediaService class to improve code readability and maintainability
added a new constant HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in the Messages . java file to provide a
add a tool to print all btc and btc currency in a language .
added validation for hostname component in EndpointAddressInterceptor to ensure it does not contain illegal characters or dash characters
added registerSecurityKeyStart and registerSecurityKeyComplete methods in AccountProxy and HttpAccount classes to enhance security key registration functionality in the authentication
refactor ServerSpanThreadBinder class to improve code readability and maintainability
updated references from ` getUserPointer ( ) ` to ` userData ` in ` BulletPhysics . java ` and ` BlockItemSystem . java ` ,
fix csv2shape to be compatible with previous release
replaced callGasWord with gasCost in VM . java and removed unused imports in Program . java to improve code clarity and reduce unnecessary dependencies
refactor Parameters class to improve code readability and maintainability
added a call to setIgnoreNullValues to the piePlot class to ensure that null values are ignored during processing
refactor resource bundle loading logic to streamline cache management to improve code readability and maintainability by reducing redundancy
pdfbox - 4892 : use dash instead of underscore , a suggest by valerybokov
bugfix : allow executescript action to be execute during edit mode
added a flag to indicate if the user has modified the authentication process
added a new file TestSealedObjectNull . java to test the functionality of the SealedObject class to ensure that the SealedObject class correctly handles
replaced ` onOpen ` methods with ` setResponse ` and ` succeeded ` methods in ` ConnectPromise ` and ` WebSocketClientConnection ` to improve cl
added support for SNOW in BlockEventListener based on server version to ensure compatibility with different server versions
added lastTradeId tracking and updated Trade handling in CryptsyAdapters and CryptsyPublicTrade classes to ensure trades
added error handling for closing the HMS connection to ensure proper resource management and logging of connection issues
fix glowserver seed to handle empty seed string
added a new device profile for " Nexus 5 " in the DynamicGrid . java file to enhance the visual representation of the device ' s
2 . x : fix ref count not be reset early when dispose ( # 4701 )
replaced the use of ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( ) ` in ` SynthContext . java ` to improve compatibility
added support for white space around text formatting ( # 4635 )
updated file existence checks in SaveTask and added tests for handling empty and non - overwrite file scenarios to enhance file handling robustness and ensure
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during concurrent access
http : / / issues . apache . org / jira / browse / amq - 3893 - log4j2 - serialize mutable
replace LengthLike with NonNegativeLengthLike in PropertyBuilder initialization to ensure proper handling of non - negative lengths
replaced calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` in multiple resource classes to simplify context creation by removing
improve error handling for jimple catch - ups . fix # 1221
updated JUnitRunner and AndroidPlatformTarget to improve error handling for empty build tools directory to provide clearer feedback to users about the absence of build
updated cache size from maxMemory from 16 to 8 in OmniNotes . java to optimize memory usage for better performance
[ hotfix ] [ test ] fix test failure in invocationstagetrace
fall back to bcfks if the input be null
updated server socket initialization and modified test assertions in UpstreamCheckUtilsTest . java to use a dynamic port instead of a fixed value to improve flexibility
do n ' t use panel dimension in dock split pane ( bug fix )
improve performance of renderer for arb shader
refactor PopulatorContext class to improve code readability and maintainability
do n ' t send save - all notification for project that do n ' t have data ( # 4722 )
updated ZQLJobManager to use a configurable character set for JSON output to enhance flexibility in handling different file encodings for better compatibility
added a check for non - empty argument list before processing to ensure that the argument list is valid before proceeding to avoid potential ArrayIndexOutOfBoundsException
replaced hardcoded string values with a centralized prefix for better maintainability to improve code readability and reduce redundancy
( chore ) camel - generator : deprecate option ` - suffix - strategy `
removed debug log statements from DerbyDatabase . java to clean up the code and improve readability
fix flaky cep test
replaced parallelStream ( ) with stream ( ) in PersonNameSuggestionProvider . java to improve performance and readability of the code
updated the handling of the " liquibase . hub . mode " property in HubUpdater . java to ensure that updates to the liqu
added constants for IBM J9 VM , OPENJ9 VM , and Eclipse OpenJ9 VM in Constants . java and a test for version
refactor font request logging to differentiate between CompositeFont and individual fonts to improve clarity of log messages for better debugging
updated import statements in ALPNNegotiationTest . java and NegotiatingServerConnectionFactory . java to use HttpVersion . HTTP _ 1 _
added rate control settings for HTTP / 2 requests in MaxConcurrentStreamsTest . java to ensure that HTTP / 2 requests do not go through rate limits
added a new file Test6741426 . java that implements Runnable with a JComboBox and JTextField to demonstrate the use of Nimbus Look
improve error message when csrf token be not present
added null checks for dbMgdPath and dbExtPath in conditional statements to ensure proper handling of managed directories and external directories
fix : add miss package
removed ` accentColor ` parameter from several category setup methods to simplify method calls and improve code readability
updated the exception message in TemporaryFolderUsageTest . java to include the fileAtRoot parameter to improve clarity of the error message for better debugging
replaced usage of ` MAP _ TYPE _ INFORMATION ` and ` COLLECTION _ TYPE _ INFORMATION ` with ` ClassTypeInformation . LIST ` in
check that client ' s address be non - empty or null . fix # 1892
added " keynectisrootca [ jdk ] " to the VerifyCACerts . java file to enhance certificate validation for root certificates
make pipeline . compute ( ) return an int instead of void
added conditions to set menu mode and set armed state based on popup state to improve menu behavior and ensure proper state management
ttf : fix arrayindexoutofboundsexception on eof
added a new file ` FinalizerInfoTest . java ` that tests object initialization and finalization to ensure that the ` MyObject ` class
replaced ` map ` with ` doOnNext ` in ` CachingRouteDefinitionLocator . java ` and ` CachingRouteLocator . java ` to improve
refactor BurningManService to handle custom addresses more accurately to improve compensation proposal handling by distinguishing between custom and non
refactor StringSubject class to improve code readability and maintainability
increased the size of longData from 1 , 000 , 000 to 1000 , 000 and added an @ Ignore annotation to the BatchValidateSignContractTest
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity regarding the method ' s purpose
updated query handling in Search . java to replace " @ " with " from : " in RetweetActivity . java to ensure consistency in query formatting
removed conditional check for forRebalance to simplify the code logic
added a new POST endpoint for importing accounts in YubiKeyAccountRegistryEndpoint to enable importing accounts from JSON format in the YubiKey registry
fix ( shadermanagerlwjgl ) : change texture parameter name from ` ` texture ' ' to ` ` tex ' '
added null check for ` cnt ` in ` paintOnTopLoop ` and adjusted padding calculations in ` SideMenuBar ` and ` Toolbar ` to ensure
refactor AbiWriterProtocol class to improve code readability and maintainability
added a null check for subName in the caption assignment logic to ensure that the caption is set correctly when subName is null
changed data flag from IMMOBILE to GRAVITY in EntityItem . java to ensure proper granularity of data operations
updated conditional checks and improved expression handling in CustomExpression . java to enhance code clarity and ensure proper validation of custom expressions
replaced the ` requestBlindVoteListFromNetwork ` method with a direct call to ` missingDataRequestService . sendRepublishRequest ( ) `
added PostgresTest . java to implement a test case for PostgreSQL using HikariConfig to enhance testing capabilities for PostgreSQL connections
updated substring indices in SubtitleUtils and RemoteUtil to use single quotes instead of double quotes to improve readability and consistency in string handling
updated line separator handling in DefaultJavaPrettyPrinter to use a constant for line separators to improve code readability and maintainability
use atomicreferencefieldupdater instead of atomicreference
added null checks for query and filters before adding them to the qlist to prevent potential NullPointerExceptions during query processing
fix : do n ' t create bridge for non - bridge thing
replace printHelp ( ) with an error message for unknown commands to improve user feedback by providing clearer error messages
added a check to return the existing output file if it exists to ensure that the output file is not null to avoid potential null pointer exceptions
added support for ' + ' and ' - ' in date parsing in DateConverter to enhance date parsing functionality to support additional formats in the input string
added a method to find a Post by its slug in the PostRepository class and a corresponding query in SpringDataJPALockTest to enhance functionality
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and added a check for its value to
added a ` SimpleClientHttpRequestFactory ` for configuring request timeouts in ` ClientRegistrations . java ` to improve connection and read timeouts for HTTP requests
updated file path handling in SourceTest . java to improve clarity and correctness of file existence checks
remove graalvm . version system property from defaulthomefinder
added checks for access and refresh token validity in ClientAdminBootstrap to ensure proper handling of access and refresh token validity settings
updated the Android API version retrieval logic to ensure compatibility with different Android API versions
refactor property placeholder handling by removing unnecessary ' this ' references to improve code readability and maintainability
updated Subject Public Key Algorithm details in the certificate details to ensure compliance with the latest certificate standards
updated ZkSolrClientTest to manage concurrent collection processing and synchronization to improve reliability and accuracy of collection processing logic in ZkConnection
added import for BigInteger class in MongoMappingContext . java to enable handling of BigInteger type in MongoDB operations
added a condition to check if the button text matches the displayed text in HomeFragment to enhance user interface responsiveness
updated conditional logic in MEncoderVideo . java to include a check for MEncoder configuration to ensure proper handling of MEncoder settings based on configuration settings
increased the default event loop thread count from 10 to 15 to optimize performance by reducing the number of event loop threads
changed access modifiers of several fields and methods in CountMin4 class from abstract to protected and updated feedback handling in AdaptiveWindowTinyLfu
refactor ExternalFileField to improve file sorting functionality and add a new test class to enhance functionality and ensure correctness of file sorting in the
change error message from " Invalid URL " to " Connection error " in DoiFetcher . java to improve clarity of error reporting for connection issues
added event source handling in OpenRocketSaver and updated FlightDataBranchHandler to include source ID to enhance event processing by including source
changed the access modifier of the check method from private to protected to allow subclass access to the check method
added support for handling synchronization operations in FileActivity to improve user experience by providing feedback on file synchronization status
updated thumbnail URI generation in ThumbnailsCacheManager . java to include special characters to enhance security by preventing exposure of special characters
added a check for the " cn1 $ infinite " property in the InfiniteContainer class to prevent further processing when the container is not initialized
updated the total variable ' total ' from 0 to 1 and modified the calculation logic to correctly account for a constant value
added a check for locked entries in FeedRefreshUpdater to ensure that locked entries are only updated when they are locked
refactor conditional checks in SolarisAclFileAttributeView . java to streamline user assignment logic to improve code readability and maintainability
replaced the list of edges with an array of edges in LatLonTree . java to streamline edge management and improve code readability
added IOUtils closing in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fix npe in bibtexparser when comment be empty
added strict property handling in Main . java and corresponding test cases in MainTest . java to ensure proper parsing of properties files based on strict mode
add support for @ constraint ( alwaysinvalidconstraint ) for custom constraint
camel - 14284 : use http4 instead of http - http in httpcomponentverifier for test
added a call to waitForThingsToLevelOut in TestCloudPivotFacet . java to wait forThingsToLevelOut to enhance test reliability by
removed redundant length checks for bytes in UBJsonWriter . java to streamline code for better readability and maintainability
refactor ApplicationTest class to improve code readability and maintainability
replace String concatenation with StringBuffer for details to improve performance and readability of the code
replaced instances of ` Type ` with ` RoboType ` across multiple files to improve clarity and consistency in naming conventions
[ java ] do n ' t throw exception when dispatch be complete .
dataimporthandler - add cachekey and cachelookup attribute to entityprocessorbase
added a new file PutfieldError . java that demonstrates exception handling for IncompatibleClassChangeError to demonstrate the use of IncompatibleClassChange
resolve http : / / issues . apache . org / activemq / browse / amq - 2473 - do n ' t try to
add log for memtable flush limit reach
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple
replaced the existing encodedLength ( ) method with a new implementation to improve clarity and maintainability of the code
refactor TestMethodResultMapBuilder class to improve code readability and maintainability
added handling for " java . lang . Integer " method invocations in FindNullDeref . java to improve error handling for specific method invocations to ensure proper
[ hotfix ] [ runtime ] initialize tasklocalstatestoreimpl # storedtaskstatebycheckpointid with a new object
updated return statements in mmm Utils . java to return " m " and " d " instead of " m " and " d " respectively
refactor logic for handling DeepShortcutView and DeepShortcutView instances in Utilities . java and FloatingIconView . java to improve code readability and ensure
updated the validator type from JwtClaimValidator < String > to JwtClaimValidator < Object > and added a test for issuer validation to enhance
renamed methods related to buying and selling quick rates to improve clarity and consistency in the Coinmate implementation
added a new configuration class ` CoverageConfig ` and updated ` CoverageController ` and ` CoverageController ` to use it to enable dynamic class loading based on
added a check to ensure the EventBus instance is registered before registering it to prevent potential errors caused by duplicate registrations
added ASCII - only handling logic in NormalizerBase . java to optimize string normalization based on input length
[ hotfix ] [ runtime ] fix check for migration task in job coordination service
added error handling for SQL updates in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the SQL execution fails and provide clearer feedback
( chore ) camel - cometd : use junit4 instead of camel - context
updated ` attrs ` method calls in ` HtmlTag . java ` and ` TableTagsTest . java ` to include ` OK ` status to ensure compatibility
added a line to write a " < br / > " tag in HtmlCoreReport . java to improve HTML output formatting to enhance readability of
updated ramBytesUsed calculation to include scores if scores is null to ensure accurate memory usage estimation when scores are not provided
replaced ` JsonNull ` with ` InstanceCreator ` and added custom ` StringHolder ` and ` StringHolderTypeAdapter ` classes to enhance
[ multistage ] fix extra data in mergecoordinator for mining
added a ` numArgs ` map to track the number of arguments passed to the ` argsToProperties ` method to enhance argument handling by associating
( chore ) camel - swagger - java : fix typo in doc
[ hotfix ] [ table - planner - blink ] fix migration rule listener npe
updated method signatures in RestClientRequest and RestClientRequestImpl to use ` partOrList ` instead of ` part ` to enhance clarity and
[ planner - 386 ] move twitterbootstrap / bootstrap . js to twitterbootstrap / css / bootstrap . js and twitter
remove the basiccategory ( ) method that be no longer need
hhh - 16921 deprecate uniqueentityloader # load ( ) and migrate to uniqueentityloader # load ( )
hbase - 25819 fix race condition in regionserverflushtableproceduremanager and regionserversnapshotmanager
do n ' t set width or height if they be zero
fix checkstyle error
updated ` assureMatchVersion ( ) ` method implementations across multiple filter factory classes to ensure compatibility with the latest Lucene version requirements
fix aop proxy generation for interface method ( # 951 )
drldparser : fix parsing of comma in drl expression
refactor multiple subject classes to improve code organization and maintainability
improve error message when payload length be negative .
move publishsubscribechannel to ' dispatcher ' package instead of ' config '
updated data types of ` executionId ` and related methods from ` String ` to ` Long ` across multiple classes to enhance clarity and
added multiple calls to ` digest . update ( byte ) ` for width , height , and height in ` ImageProcessor . java ` to enhance the
removed logging of overlay version in SolrConfig and added necessary imports in SolrConfigHandler to enhance logging clarity and improve Solr configuration handling
reduce the delay time for automatic synchronization in FileSyncResult to improve synchronization efficiency
fix checkstyle violation in segmentv1v2tov3formatconvertertest
refactor ` addPathToMTree ` method to accept a ` Path ` parameter instead of a ` fullPath ` string to improve flexibility in handling path
updated URL handling in DefaultPackageScanClassResolver and added a test for package scanning with plus characters to improve URL processing robustness and ensure correct
[ hotfix ] [ table - common ] move timestampextractorutils to table - common module
added a new class ` SpringSecurityAuthenticationSource ` for LDAP authentication handling to enhance security context management by integrating LDAP authentication support
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization to enhance maintainability and readability of the codebase
updated minSdk from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest API changes
replaced ` Dialogs . autoSuggestDialog ` with ` SimpleFormDialog ` for custom filename suggestion to improve user experience by displaying a cached file list of
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and updated assertions in ` StoreAPITest . java `
updated parameter order in the stream method in MongoTemplate . java to improve clarity and consistency in method usage
change zoom calculation to use logarithmic calculations to improve zoom accuracy and ensure proper type casting for zoom values
added similarity handling to KNearestNeighborClassifier and updated related test cases to enhance classification accuracy by incorporating Lucene similarity scoring
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to improve query performance by using a new query implementation
replaced ` toString ( ) ` with ` getReason ( ) ` for the reasons variable in ` LowResourceMonitor . java ` to improve clarity and
updated package - info . java files for mmm and ppp packages
added unit tests for requestMtu and requestMtuNoCallback methods in ShadowBluetoothGattTest . java to ensure correct behavior of BluetoothGatt
extracted the creation of servletOutputStream into a separate method to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging clarity
make processing chain thread - safe
updated Swedish translation strings in Resources _ ja . java to improve user experience by providing clearer translation options
updated size check from 0 to 1 in JDBCTypeMapping . java and modified variable names in JDBCTypeMappingTest . java to ensure correct handling
added synchronized keyword to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player addition and removal operations
replaced the ` isScreenReaderActive ( ) ` method with a ` controlCodes ` and ` codeMatcher ` for managing screen reader control
added support for the COMMAND _ BEHAVIOR _ SIDE _ NAVIGATION command in the MenuBar and SideMenuBar classes to
updated the subscription logic in PoloniexManualExample . java and added disconnect handling in WampStreamingService . java to improve code clarity and
added validation for energy limit in UpdateSettingForEnergyLimitContractActuator to ensure energy limit is greater than zero to prevent runtime errors
refactor URL handling in PostmanJsonBuilder to use a variable for protocol to improve code readability and maintainability by reducing redundancy
camel - 16400 : add a getter / setter for the namespaceprefixref attribute on soapdataformat to allow the namespaceprefixref to be set
refactor assertions in TestRange to use a dedicated method for date comparison to improve code readability and maintainability by reducing repetitive
added JettySolrRunner checks and security status verification in BasicAuthIntegrationTest . java and ZkStateReader . java to ensure proper handling of
add price feed to trades chart view ( # 1104 )
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve clarity and ensure consistent
updated variable names and logic in NativeString . java to improve code clarity and ensure proper handling of end values to enhance readability and prevent potential
added FileDataStorageManager to manage file downloads to enable automatic downloads of files
refactor random access file handling in MappedRawLog . java to improve code clarity and ensure proper resource management
added a method ` checkIfRegistryRunning ` to check if the registry is running and implemented a retry mechanism for file deletion in ` FileUtils ` to ensure
added call to componentPresetDao . startLoading ( ) in Quick3dMain . java , TextureTest . java , and TextureTest . java to
added @ SuppressWarnings ( " rawtypes " ) and @ SuppressWarnings ( " unchecked " ) annotations to multiple Java files to suppress unchecked warnings
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
phoenix - 4415 set isolation level to set if transaction be enable or not
added transactionAttribute handling in AbstractStepFactoryBean , ItemOrientedStep , and SkipLimitStepFactoryBean to improve error management based on transaction
replaced ` CasClient ` with ` DirectCasClient ` and refactored ` CasManagementSecurityInterceptor ` to extend ` SecurityInterceptor
added functionality to add a new category in the navigation drawer to enhance user experience by allowing users to add category items
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated its usage in ` FileDisplayActivity
pdfbox - 2852 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and modified text size retrieval in TerminalBridge to improve clarity and consistency in font size management
fix a bug in constant analysis .
refactor multiple Java classes to improve code organization and maintainability
replace returning an empty ArrayList with creating a new ArrayList instance to improve performance by avoiding unnecessary object creation
removed unnecessary try - finally blocks and simplified code for better readability to improve code clarity and maintainability
added a method to set the revision in MicroserviceVersions and updated instance caching logic in InstanceCacheChecker and TestInstanceCacheChecker to ensure correct revision handling
updated foreign key handling logic in TableRetriever and AbstractRetriever classes to improve clarity and consistency in foreign key management
camel - 15836 - create a camel - aws2 - s3 component that use source code generate configurer
removed the currencyPair parameter from the getBitstampUserTransactions method to simplify the method signature and improve code clarity
added a try - catch block to handle NoSuchComponentException when retrieving the component instance to improve error handling for component instance retrieval
add a flag to disable push by default
replaced hardcoded LegacyAddress instances with dynamic loading from a file to improve flexibility and maintainability of the test code
changed the access modifier of findDropTargetAt method from package - private to public to allow access to findDropTargetAt from other packages
refactor push notification handling in NotificationsActivity to improve clarity and maintainability of the code
improve handling of channel closure in nettyasynchttpprovider
updated LdapPasswordPolicyEnforcer to use StringUtils for null and empty checks instead of null checks to improve code readability and maintainability by
refactor DefaultAnnotationEngine and Stubber classes to improve code organization to enhance maintainability and readability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to the issue identified in PHOENIX - 2840
nifi - 1892 : added timezoneadapter to the aboutdto to allow the user to specify their timezone .
updated assertions in Splitter . java and modified range splitting logic in StorageService . java to improve clarity of assertion messages and ensure correct handling of owned
no effective change - code cleanup
fix race condition in active circuit .
replaced ` GdxRuntimeException ` with ` IllegalStateException ` in ` ShaderProgram . java ` to improve error handling by using a more specific exception type
flume - 2892 : add sink and source field to sinkrunner and sourcerunner
updated log level from error to info in FastBindLdapAuthenticationHandler . java to improve logging clarity for authentication failure scenarios
refactor ContainerOrderFocusTraversalPolicy class to improve code readability and maintainability
implement freehand , not double
updated constructor name in CasRiskBasedAuthenticationEvaluationStartedEvent class to improve clarity and consistency in naming conventions
refactor connection handling and logging in SchemaCrawlerMain and Executable classes to improve resource management and enhance logging clarity
update default tl version to v1.2 for jdk16 +
updated error messages in CountersManager . java to include " metadata " instead of " values " and " labels " to provide clearer context about the
refactor audio handling logic in MediaManager . java to improve clarity and ensure proper positioning when mCurrentAudioQueuePosition is zero to enhance code
updated debug logging to include the connection as a parameter to improve clarity of debug information
added support for @ Transient annotation in JpaPersistentPropertyImpl and its corresponding unit tests to ensure proper handling of transient properties in JPAPersistentProperty
updated assertions in UpgradeResourceProviderTest to compare the desired stack version with the current version entity to ensure the correct stack version is maintained during the upgrade
change the return type of the eval ( ) method from Symbol to Object and modify the return value of eval ( ) method in TruffleVM . java
make isbinarytype public to allow access to it
updated the default value of TEZ _ DYNAMIC _ PARTITION _ MAX _ DATA _ SIZE from " hive . tez . dynamic . parition
updated the ` findProblem ` method in ` JavaEditor . java ` and removed unused imports in ` JavaProblem . java ` to streamline
updated the default off - heap usage in DictionaryIndexType and BloomFilterHandler to simplify the code by removing unnecessary configuration for off - heap usage
refactor table writer test to use system property
refactor DebugHelper class to improve code readability and maintainability
added ` ownsTexture ` field to ` ParticleEffect ` class to ensure that texture ownership is properly checked before proceeding to prevent rendering issues
added LDAP configuration properties to HiveConf to enhance security settings for LDAP authentication
chore : update java and python dependency
updated InputMethodManager behavior in DetailActivity . java to use Context . SHOW _ FORCED instead of Activity . HIDE _ IMPLICIT _ ONLY
added a test for converting a map of integers to a map of primitive to a map of objects in DataTableTypeRegistryTableConverterTest to ensure
updated the size size from 100 to 50 in TestFileSystem . java to optimize memory usage and improve performance
improve error message for rule m2 . 4 exception
refactored the ` dropSequences ` method across multiple database classes to ensure consistency in exception handling across database implementations
added a null check for the status variable to prevent potential NullPointerExceptions during execution
added a variable ' f ' to store the field created in DocumentBuilder . java to improve code readability and maintainability
do n ' t show hierarchy style for node that do n ' t exist
datamongo - 540 - add unit test for upsert with non - existing object
updated mid calculation to use ` low ` instead of ` high ` across multiple classes to ensure correct computation of mid values in the range
added a method to record app launch statistics and refactored broadcast intent handling to enhance tracking of app launches and prevent null pointer exceptions
added drawing and disposal of the image in JavaSEPort . java to ensure proper resource management and prevent memory leaks
[ # 8474 ] instructor : instructor : instructorfeedbackresultspageui : instructorfeedbackresultspageui :
added a check to generate a player ' s inventory ID if it ' s zero to ensure player ' s inventory ID is generated correctly to avoid zero -
added a condition to check if ` found ` is ` true ` before breaking the loop in ` ConfigDescriptionRegistry . java ` to ensure that the loop
update ReloadableJava parser visitors to handle returnType and returnTypeAnnotations correctly to ensure proper handling of empty list and returnType annotations in the parser
updated TileMapRenderer to handle blended tiles as an IntArray instead of a single String to improve flexibility in handling tile data
added support for sun classes in the Probe . java file to enhance compatibility with additional cryptographic classes
updated the getArea method in IfcTools2D . java to improve the accuracy of area calculations by incorporating last coordinates
updated the assignment of lockOnSync and throttlingRate to use ' key ' instead of ' currentThrottleRate ' to improve clarity and consistency in
pipeeventbus # fireevent ( event ) should call super . onactionactivate ( )
updated ZkController timeout value from 1000 to TIMEOUT to allow more time for ZkController initialization to complete successfully
added a test for passcode with client parameters in TokenMvcMockTests . java to ensure proper handling of client secret and passcode parameters in
added constructors for LengthFilter and CharArraySet in TestRandomChains . java to ensure proper handling of token and character arrays in the testing process
removed the JUnit Ignore import from RandomPlaneTest . java to streamline test code by eliminating unnecessary dependencies
use int . tounsignedlong instead of int to avoid overflow
replaced direct calls to ` btRigidBody ` with a call to ` btRigidBody . getInstance ` for better encapsulation to improve code readability and maintainability
added copyright year retrieval and updated URLs in AboutDialog . java to enhance build information clarity and accessibility
add getdistributedobjects ( ) method to jetclientinstanceimpl to make it possible to call getdistributedobjects on a single member
updated finSet . java and MassCalculatorTest . java to include print statements for component , finCount , and inertia , and corrected expected values
updated memory allocation from total memory to max memory in SmartDexingStep . java to ensure the semaphore reflects the maximum memory instead of total memory
[ hotfix ] fix checkstyle violation in standaloneschemafetcher
change output prefix to bisq co - founder .
updated the initialization of the input string and added exception handling for big _ integer _ t to improve code clarity and ensure proper exception management
updated the capacity check from 1 < = 30 to 0x40000000 in ObjectSet . java to allow for a more flexible capacity validation
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to enhance null safety and prevent potential null pointer exceptions
removed @ AddToRuleKey annotations from several fields in AppleTest . java to improve code readability and maintain consistency in formatting
added exception handling for security exceptions in FileHelper and TextHelper classes to improve robustness and prevent application crashes due to security policies
added tests for resolving attributes with multiple attributes in ShadowThemeTest . java to ensure proper functionality and behavior of theme attribute resolution
updated the sheet name check to use ` sheets . size ( ) ` instead of ` - 1 ` in ` doesContainsSheetName ` method and
replaced primaryColor method with elementColor method in ManageAccountsActivity . java to improve clarity and consistency in theme management
updated the initialization of the handler to handle null replyHandler to improve robustness by preventing potential null pointer exceptions
added binary collation support to MariaDbDbmsType , MySqlSpeedmentPredicateView , and AbstractDbmsType classes to enhance database
added a method ` whenType ( Class < T > treeType ) ` to the ` Tree ` class that returns an ` Optional < T > `
added a method to retrieve the user view destination in ItemLauncher . java to improve code readability and maintainability by reducing redundancy
replaced ` @ Produces ( MediaType . APPLICATION _ JSON ) ` with ` @ temporaryRedirect ( ) ` in ` FeedREST . java `
[ hotfix ] [ kinesis ] add check for non - serializable deserializer
( chore ) camel - aws2 - * : fix javadoc warning in camel - json
replaced ` Thread . sleep ( 2000 ) ` with a try - finally block to ensure ` zkClient ` is closed properly to prevent resource leaks
renamed methods related to icon and banners transition progress from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress `
refactor code to use a new read method for end point handling to improve code readability and maintainability
replaced ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` for creating ` ByteBuffer ` instances in ` ABCase1 _ 2 . java ` to
refactor prepareStreamsToUpload method to return a boolean instead of void to simplify the method signature and improve readability
updated comparison methods in AbstractConfigLoader and modified jar order handling in TestMicroserviceConfigLoader to use Integer . compare for consistency to improve code readability
added a new file PicOfDayAppWidget . java to implement PicOfDay widget functionality in the application
cloudstack - 2303 : if service offering uuid be null , default system internal lb offering will be use .
updated HiveParserCalcitePlanner to use HiveRelOptUtil and improved join condition handling to enhance compatibility with Hive ' s query optimization
[ hotfix ] [ table - planner - blink ] deprecate transformation class in previous commit
added user credentials and password options to the JMXConnector connection to enable secure access to the remote JMX server with specified credentials
removed redundant assignment of scratch variable to streamline code by eliminating unnecessary variable assignments
updated method calls in AppsCustomizePagedView . java to include a new parameter for the number of widgets to enhance widget handling by incorporating
g3d - 3d : do n ' t show 3d view if 3d view not present
update rotation coordinates in GcodeRenderer . java to ensure proper centering of the graphics context
added a new option ` WORKSPACE ` to the ` DAEMON ` message in ` OptionEnum . java ` and configured it in ` TerminalClient
updated the file extension from " apt " to " html " in test options to ensure compatibility with HTML output format
updated ScimUtilsTest to use JUnit 5 annotations and assertion methods to improve test structure and compatibility with JUnit 5 standards
updated ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` ModelAndView ` to improve flexibility
hhh - 1892 fix flakiness in hibernate integration test
refactor EventBusHook class to improve code readability and maintainability
refactor MultiPaintEventTest class for improved performance to enhance rendering efficiency in multi - paint scenarios
removed the final modifier from mNewScale in WorkspaceStateTransitionAnimation . java to simplify the variable declaration for better readability
refactor SyncFactory class to improve code readability and maintainability
added support for unique key fields in LukeRequestHandler to ensure proper handling of unique keys in schema processing
added support for rounded color in BorderEditor and updated color handling in EditableResources to enhance visual representation in the application
add miss @ truffleboundary in binaryparserexception .
[ hotfix ] fix checkstyle violation in defaultschedulerbatchschedulestest
added logging statements to ` GatewayRSocket ` , ` GatewaySocketAcceptor ` , and ` PingPongApp ` , and modified ` PingP
added toolbar menu item functionality to RecentChatFragment to enhance user interaction with recent chats
changed the ` InfoDropTarget ` class to ` UninstallDropTarget ` and modified the ` startDetailsActivityForInfo ` method to return a boolean indicating success
replaced instances of ` add ` with ` push ` in multiple test files to improve clarity and consistency in scope management
updated API and wiki URLs in CommonsApplication . java to reference commons . wikimedia . org instead of commons . wikim
refactor index assignment logic into a separate method ` setIndex ` to improve code readability and maintainability by reducing duplication
replaced instances of ` Collections . sort ` with direct method calls for sorting elements to simplify code and improve readability by removing unnecessary collections
added DateTimePatterns array to FormatData _ hr _ HR . java to support additional date and time patterns in the application
added a line to clear the focus of the clicked view to improve user interface responsiveness
updated spinner selection logic and improved language selection handling in DescriptionsAdapter and SpinnerLanguagesAdapter to enhance user experience by ensuring default language is used
replace " WSST " with " WSDT " across multiple TimeZoneNames files to standardize time zone representation for better accuracy
added native methods for global and weak field access in FastGetField . java to enhance functionality by allowing dynamic access to fields based on specified mode
added default value handling for UNION schema types in ReflectData . java and updated tests in TestReflect . java to ensure proper handling of NULL types in
fix flaky seda test
added a null check before remapping the RClass in ResourceMerger . java to avoid potential NullPointerExceptions during resource remapping
add default constructor to hbase - fhir - dialect for backward compatibility
camel - 1114 fixed the issue of httpproducer not send ' connection close ' header on connection close .
increased socket timeout from 60000 ms to 120000 ms in BasicDistributedZkTest . java to allow more time for socket operations to complete successfully
nifi - 1114 : added test case to verify that ticket status be FREE
refactor Parser class to improve code readability and maintainability
refactor CasProcessingFilter to improve code readability and maintainability
fix : use getfirstelementchild ( ) instead of getnestablenode ( ) in parser
[ optaplanner - 3088 ] fix lookup strategy resolution for enum type ( # 3088 )
updated metaPortStart and dataPortStart values from 20001 to 10001 and added a method to wait for nodes to shut down to optimize node management
change log level from warn to info
added a content type assignment for mContentType in WebdavEntry . java to ensure proper handling of binary content type for binary data
added ` getQueueSize ( ) ` method to ` LazyTraceThreadPoolTaskExecutor ` and created corresponding tests in ` LazyTraceThreadPoolTaskExecutorTests
do n ' t add distance to line if distance be too small
rename ' required ' to ' requiredlabel ' to avoid confusion
removed duplicate ` next ( ) ` method implementation in ` PurgingPartitionIterator ` to streamline code by eliminating redundancy
added a method ` getAsUnescapedPath ( ) ` to the ` SchemaPath ` class and updated its usage in ` VectorUtil ` to use
added abstract methods for height and width in BaseMonochromeBitmapSource . java to provide access to bitmap dimensions
added validation for localVertices in Polygon . java to ensure at least three points are provided to prevent array index out of bounds errors
replaced instances of ` ObjectMapper ( ) ` with ` ObjectMappers . newDefaultInstance ( ) ` in multiple files to utilize the
ggb - 285 fix for implicit curve with non - polynomial equation
updated ExternalNameRecord to handle both short and Unicode names differently to ensure compatibility with different encoding scenarios for unicode names
( chore ) camel - jms : fix checkstyle issue in abstractjmsprocessor
added logic to exclude " username " and " passcode " prompts from login prompts to enhance security by restricting login prompts
replaced ` remove ` method with ` removeIf ` for removing listeners to improve clarity in listener removal logic
added functionality to toggle the rotation angle in the PieChartActivity to enhance user interaction by allowing a smoother interaction with the chart
cloudstack - 6892 : when copy vhd from secondary storage , delete the vhd
hbase - 26436 do n ' t allow non - existent namespace table to be delete in hmaster
updated import statements and added a resize method in AndroidInput . java to improve layout handling and ensure proper resizing of input values
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class for property value retrieval to enhance functionality by allowing retrieval of property values
clientmapnearcachetest : ignore test that be always fail and blocking prs
fix hopperhocks not be able to place item outside their bounding box . close # 1391
added authentication dialog functionality to SsoWebViewClient to enhance user experience by allowing saml authentication
added document deletion methods and updated assertions in TestStressIndexing2 . java for improved document management to enhance test reliability and clarity to ensure
[ flink - 22559 ] [ test ] ignore flaky upsertkafkatableitcase
replaced ` get ( j ) ` with ` computeIfAbsent ( j , new ArrayList < > ( ) ) ` for initializing the ` typeList ` list
added a configuration to allow the deserialization of single values as an array in DefaultEntityMapper to enhance data handling by allowing single values as arrays
updated localization update message to include " BE , UK , and SL . " to enhance clarity for localization updates
updated SHORTCUT _ CATEGORIES array initialization to use a dynamic retrieval of application categories
[ drools - 8484 ] support instanceof expression in feel ( # 2411 )
nifi - 1114 : added mime . type header to flowfile ' s content - type header to gethttp
add toprovenance ( ) and toprovenance ( ) method to resourcehistorytable , and fix test
updated button names from exit _ button to done _ button and added search capability check in SearchBookContentsActivity to improve clarity and ensure search functionality is
[ hotfix ] fix checkstyle violation in natsconfiguration
modified the ` invalidateStalePartition ` method to accept a ` MetastoreContext ` parameter and updated related logic to improve handling of partition versions
improve performance of view results full visualizer
replaced occurrences of ` ic _ group ` with ` ic _ chat _ bubble ` in multiple adapter classes to improve clarity and specificity of the icon
replaced ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver . java ` and ` getLongLongLong ` in ` BroadcastReceiverTest
updated method names in MocksCreationTest for consistency and clarity to enhance code readability and maintainability by using uniform naming conventions
added a new constant DATA _ SOURCE _ NAME in CSVThirdEyeDataSource and changed method visibility in YamlDetectionConfigTranslator to public to allow access to
increased the timeout duration for the awaiter from 10 seconds to 30 seconds in the specified phase from 10 seconds to 30 seconds to allow more time for
removed BuildSlaveFinishedStatusEvent and related classes to simplify event handling by eliminating unused event classes
cloudstack - 3303 : fix findbugs encode warning in vmwarestoragemanagerimpl . java
[ ds - 3952 ] add test for depositing workspace item without workflow
remove duplicate elements from classpath files in ClassLoaderSupportImpl . java to improve performance by eliminating redundancy
removed the isBoxedPrimitive method from Unbox . java to streamline the code by eliminating an unnecessary method
updated argument handling in SpecificCompilerTool and added a test for ordering of flags in TestSpecificCompilerTool to improve argument handling flexibility and ensure
added a null check for the table before deleting a directory in HiveMetaStore . java and updated partition deletion logic in TestHiveMetaStore . java to
updated HiveServer2 async execution parameters and improved exception messages for better clarity to enhance thread management and provide more informative error
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a new EXECUTE _ TASK _ ROLE constant for service and component retrieval to improve code clarity and
do n ' t try to connect to sip server if there be no configuration .
reload log tree when log be change ( # 667 )
updated shutdown logic in ChannelEndPoint . java to ensure shutdown conditions are only considered when the channel is open
refactor SetNullableGenerator class to improve code readability and maintainability
( chore ) camel - report - incid : migrate to new file component
replaced specific imports with a wildcard import and simplified method calls in NettyRoutingFilter and FormIntegrationTests to improve code readability and maintainability
added a new API operation " helloWithValue " to multiple services and updated related classes to support the " hello " parameter in the service implementation
refactor lifecycle listener handling in Lwjgl3Application and Lwjgl3Window classes to improve resource management and ensure proper disposal of lifecycle listeners
updated FG _ FK color from 90 to 200 to improve visual consistency in the UI component
disable mp3 by default
improve test coverage for secondary index manager
pmd : add ` ` about ' ' and ` ` version ' ' to generalpreferencespage
[ hotfix ] [ test ] fix broken serialization test
refactor MediaFormatUtil class to improve code readability and maintainability
added an overridden method ` isCellEditable ` to ` GeneralTab ` that returns false to provide a default implementation for cell editable status
added ` isOnlyPrintCommands ( ) ` method to ` AbstractUnusedDependenciesFinder ` and updated message construction in ` JavaBuckConfig `
added a temporary counter for vocal tract modifiers and updated the scaling factor from 2.0 to 0.85 to improve the accuracy of vocal
updated import statements for BaseScalarUdfTest , TestUDFRound , and TestGenericUDFConcat to ensure compatibility with the latest Hive API changes
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to ensure proper hash code generation for instances of UaaAuthenticationDetails
test skeletoncontrolrefresh now use skinningcontrol instead of skeletoncontrol
replaced ` NodeFilter ` with ` NodeCountFilter ` and updated related method signatures in ` NodeUtil . java ` to improve clarity to enhance
updated the condition to check if sync block to fetch is less than or equal to sync _ FETCH _ BATCH _ NUM to ensure that the fetch
updated state from 365 to 366 and refactored debug expression handling to improve code clarity and maintainability
updated dependency resolution logic to use streams to improve code readability and performance
replaced the ` tmp ( ) ` method with ` dst2 ( T v ) ` and removed the ` lerp ( T target , float alpha )
[ grid ] fix npe in grid hub configuration
updated linker argument handling in RustBinaryDescription . java to use ImmutableList instead of a List to improve flexibility in linker argument management
[ multistage ] add travis / appveyor test to appveyor test
added support for specifying the DAG name in Hive configuration to enhance configuration options for LLAP split generation
removed unused import of java . io . File to clean up the code and improve readability
make sure we do n ' t close a closed stream in escapeprocessingoutputstream
updated the ` validateQuery ` method to accept a variable number of arguments instead of a formatted string to enhance flexibility in error handling by allowing multiple
updated INDEX _ VERSION from 1 to 2 and replaced FIELD _ REPOSITORY with FIELD _ REPOSITORY in LuceneExecutor .
[ hotfix ] [ runtime ] add test for kryo registration
added a null check before removing configuration properties in BlueprintConfigurationProcessor . java and updated test cases in BlueprintConfigurationProcessorTest . java to ensure that
refactor Boolean handling logic in MetaStoreDirectSql . java to improve readability and maintainability of the code
added hideCustomizationDrawer ( ) method in ppp Launcher . java to improve user experience by hiding the customization drawer
refactor TermVectorComponent to use a constant for warning keys and update related data handling to improve code readability and maintainability by avoiding
added optimistic type warning and improved logging messages in mmm Compiler . java and ppp Compiler . java to enhance performance monitoring and provide clearer
refactor Expect class to improve readability and maintainability of the code
added UnixSocketConfigurationStrategy to enable Unix socket configuration to enhance flexibility in Docker interactions within the Docker client
added flaky test methods for " even low rate IP " and " low rate IP " in CloseableDoSFilterTest and CloseableDoS
camel - 16400 : camel - core - optimize reactivehelper to not throw exception on no active subscription
refactor Vectorizer to streamline map work validation to enhance code readability and maintainability by reducing redundancy
updated constructors in StringAppender and LogDivertAppender to include a new parameter to enable flexibility in layout configuration
fix npe if guipackage be null
[ gr - 27820 ] fix linkonce and weak link in llvm .
updated multiple Java files related to class handling to improve code organization and maintainability
add unit test for defaulttransactionthreadlocal
added a check for invalid OperationHandle messages in HiveStatement . java to improve error handling for invalid operation handles
updated command types to use DROP _ NOT _ NULL instead of NULL to improve clarity and maintainability of command handling
camel - aws : added unit test for aws secret manager component
refactor SimpleTree class to improve code readability and maintainability
updated the return statement in UserREST . java to remove the exception message from the response to simplify the response structure for better readability
updated the ` fromContent ` method to include a ` subTree ` parameter to enhance flexibility in handling nested content in the Result class
updated column width calculation in Sheet . java and added a test for column width in TestHSSFSheet . java to ensure correct handling of
added a new parameter ` configPath ` to the ` less ` method in ` Commands . less ` to enhance functionality by providing a specific configuration path
changed Set < Table > to Collection < Table > in DotWriter . java and GraphExecutable . java to use Collection instead of Set to improve type safety
use a different sshd container image for testcontainers
server : fix npe in agentmanagerimpl when hostid be null
refactor key generation logic in DefaultGroupKeyGenerator to improve clarity and maintainability of the code
[ multimap ] improve error message
refactor BCSiliconRecipes to use builder pattern instead of direct variable assignments to improve code readability and maintainability
use putobject instead of put for good performance
updated visibility logic for child views in CellLayout . java and refactored drag exit handling in Workspace . java to improve code readability and maintainability
updated the ` flatMap ` method in ` ModifyRequestBodyGatewayFilterFactory ` to use ` originalBody ` instead of ` o ` and added a defer
added package access checks in ConstructorFinder , FieldFinder , MethodFinder , and MethodFinder to enhance access control validation for package - private types
updated logging level from warn to trace for multiple events in LoggingHandler . java to provide more granular logging for debugging purposes
refactor prefix handling in WhiteBlackList . java and add a new test case in Issue348 . java to improve code clarity and ensure
added menu options for gallery image selection in GalleryActivity to enhance user experience by allowing quick access to gallery images
refactor MongoDBServiceFactory to use a singleton instance for MongoDBService creation to improve performance and reduce object creation overhead
added tests for ` HasBooleanICONST0 ` and ` HasBooleanICONST1 ` classes in ` InlineConstantMutatorTest . java ` to
updated the ` decode ` method in ` RecordTest ` to accept a ` Blackhole ` for blackhole consumption to enhance memory management by allowing
fix : update gapic - generator - java with mock service generation fix ( # 32 )
updated methods to return ` Stream . Entry < String , String > ` instead of ` Stream . values ( ) ` for retrieving unit strings and
clear the witnesses list in ManagerTest . java to ensure a clean state before running tests
add log to jdbcpagesink when abort
replaced the method for getting and setting the stack in NativeError . java to improve clarity and encapsulation of stack handling in the code
added a condition to check if the path starts with a period in DrillPathFilter . java to ensure proper handling of paths with specific prefixes
renamed ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyConfiguration ` and related methods to improve clarity to enhance
added a call to clear the index in BasicFunctionalityTest . java to ensure the index is reset before further operations
updated BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to allow for a new weight value
made ` fThreadGroup ` volatile in ` FailOnTimeout ` and refactored ` fLookForStuckThread ` to be ` final `
refactor ValueResultData constructor to remove final modifier to improve code readability and maintainability
updated hash code calculation and equality check in FuzzyQuery . java to improve performance by using superclass equality instead of null checks
removed debug print statements from PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed return type of removeFile and removeDirectory methods from SharedRandomAccessFile to void to void to simplify method signature and improve code clarity
updated the driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated the ` retrievePersonAttributes ` method to initialize ` attributes ` with a default value of ` 0 ` and refactored the principal creation process to
changed log level from info to warn in OpenWebNetBridgeHandler . java to better reflect the severity of log messages related to connection failures
refactor hash methods in Hashing , Int2IntHashMap , IntHashSet , Long2ObjectHashMap , and Long2ObjectHashMap to use
added null checks for storageManager and mImageViewReference in ThumbnailGenerationTask to ensure that a valid storageManager is provided to prevent potential NullPointerExceptions
updated loop condition in GroupSelectionQuery . java to include a check for a maximum number of iterations to ensure that the loop does not exceed the specified limit
added a new file Bug1933922 . java that implements a loop that collects and processes program files to address bug 1933922 related
updated conditional statements and formatting in MultipleSeriesProvider , AjaxDecoratorMapper , Tokenizer , and TokenizerTest classes to improve code readability and maintainability
updated control characters from 0 - 31 to 32 in FileResolver . java to ensure that control characters are valid for processing
added a call to requestFocus ( ) on the component to ensure the component displays correctly after changes
update test data for instructor home page ui test
rename jsonparserasync to jsonstreamparser
updated crouton handling logic in DetailFragment . java and improved intent notification in MainActivity . java to enhance user feedback and ensure proper
added a test for schema query and fetch with unrelated templates in IoTDBSchemaTemplateIT . java to ensure correct handling of unrelated
refactor Dialog class to improve code readability and maintainability
replaced ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder . start ( args ) ` and removed JAVA _ TO
updated the method for incrementing past window metrics in HintedHandoffManager to use a dynamic host name instead of a static local host to improve flex
refactor subsystem initialization to use a loop for setting paths based on controller and base names to improve code readability and reduce duplication in subsystem
added platform - specific assumptions in test classes to ensure tests are only executed on supported Apple platforms
make java . specification . version optional in jvmciversioncheck
updated Mockito library version to ensure compatibility with the latest features and bug fixes
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage scenarios
updated charset handling in BinaryParser , PlainTextParser , ParsingExecutionContextView , and ParsingExecutionContextView to support dynamic character set management in parsing execution context
added support for configuring multipart data compliance in HttpConfiguration and Request classes to enhance flexibility in handling multipart data compliance
added support for JDK 17 in GradleDistributionManager to ensure compatibility with JDK 17 features
added a new method ` addType ` to ` SnapshotControl ` for adding database object types to improve code readability and maintainability by encapsulating type
refactor Term class to improve code readability and maintainability
updated return statement to handle null or empty runWith cases to improve robustness by preventing potential NullPointerExceptions
http : / / issues . apache . org / jira / browse / amq - 4237 - add test case for amq - 4
refactor multiple Java classes to improve code organization and maintainability
pdfbox - 4892 , pdf417 - 4891 , pdf417 - 4892 : make sure we do n ' t
removed redundant calls to setDimAlpha and setIconColorTint in TaskView . java to streamline color tinting logic to improve code readability
added a new file ` SumZeroAggr . java ` to implement aggregation functions in the Drill execution framework
[ flink - 20536 ] [ table - planner - blink ] [ table - planner - blink ] fix lastvaluefunctionit and
hbase - 27875 log more information when allocation fail
added a null check for propName before putting propValue in roleObject to avoid potential NullPointerExceptions when propName is null
added ` @ VisibleForTesting ` annotation to ` mTouchSlop ` and ` mCanIntercept ` fields and refactored related code for
added a method to log container streams with a boolean parameter to ensure that the stream parameter remains open indefinitely when logging a container to prevent prematuremature
add test case for mvstore cache performance .
updated LONG type from " L " to " J " in PrimitiveType . java to ensure correct data type representation
changed the method signature of delegatingApplicationListener from instance to static to allow the method to be called without an instance of DelegatingApplicationListener
set body to null for exchange message in RestBindingAdvice to avoid potential null pointer exceptions
added a new file ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` to implement tasklet - related
g3d - 195 : update size keep drawables only after create new view
lgtm : fix arrayindexoutofboundsexception in lgtm
updated ` sendEventToTest ` method to use ` stateOrdinal ` instead of ` eventTag ` across multiple classes to enhance state handling by
added handling for " Lavf / " user - agent in video request processing to ensure proper processing of video thumbnails based on user - agent
improve error message when text area be too small
added conditional logic to adjust the title area based on the UI theme constants to ensure the button is displayed appropriately according to the theme settings
updated Skia . java to include presets for Skia to enhance compatibility with newer Skia features
added support for unit tests in the networkparameters class
added HumanReadableException to QueryCommand and implemented tests for owner and format arguments in QueryCommandIntegrationTest to ensure proper error handling and validate
refactor capacity and mask handling in IntIterator . java to improve clarity and maintainability of the code
updated the ` walkRuleAndAdd ` method to accept a ` SourceRule ` parameter and added a ` srcTarget ` parameter to enhance dependency traversal logic
[ netbeans - 4674 ] allow override of module name in patch module file
[ java ] do n ' t use semanticversion . major for backward compatibility .
updated OwnCloudClientManagerFactory to set a single session policy based on authentication status to ensure proper session management for SAML authentication
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure that mappedTableResource is not null to avoid NullPointerExceptions
use utils . close instead of try / catch to close resource
refactor ` AnonymousAuthenticationFilter ` to utilize a ` Supplier < SecurityContext > ` for managing anonymous security contexts to enhance
modified the ` removeActor ` method to accept an additional parameter for unfocusing actors to enhance actor removal functionality and improve code clarity
refactor cloud configuration handling to use a variable for clarity to improve code readability and maintainability
add log level to netty server
refactor multiple Java classes to improve code organization and maintainability
replace direct call to update ( ) with SwingUtilities . invokeLater ( this : : update ) to ensure UI updates are executed on the Event Dispatch Thread
( chore ) camel - groovy : improve performance
replace list with set to avoid concurrent modification
changed access modifier of ARGS _ OPTION and isPythonEntryPoint methods from static to public in multiple classes to allow access to these methods from other classes
refactor ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and update ` commit ( ) ` method to use ` commit ( ) `
remove debug code that be no longer need
improve error message when we ca n ' t convert text to a response
changed access modifier of updateImage methods from private to protected in ImageButton . java and ImageTextButton . java to allow subclass access to these methods
fix block . dropxp ( ) not be able to drop xp ( # 8821 )
added native methods for retrieving spatial location configuration in DataOutputQueue and depthai classes to enhance functionality for spatial location configuration management
refactor multiple Java classes to improve code organization and maintainability
replace keySet ( ) . isEmpty ( ) with isEmpty ( _ root ) in TreeTrie . java and add a new isEmpty ( ) method in T
updated foreground and background method calls in AttributedStringBuilder . java to simplify color calculation and improve code readability
added a condition to disable fingerprinting based on system properties to ensure that fingerprinting is disabled when not explicitly disabled
changed the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
updated MongoTemplate and MongoTemplateTests to improve event handling and context management to enhance code clarity and ensure proper context handling in MongoDB
fix settransactiontest so that it do n ' t break other test
tika - 4892 -- close the inputstream if we get an exception , close it
updated the rule in the modify statement from ' replica : * , cores : < 5 ' to ' replica : * , autoAddReplicas : false '
removed unnecessary whitespace in the loadConfig method call to improve code readability and maintain consistency
update log message for servlet action failure to be more clear
( chore ) camel - streaming - java : remove unnecessary exception declaration
removed the step field and related methods from HDatapoint and related classes to simplify data point handling and improve code clarity
updated log messages and added shared lock acquisition logic in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity of log output
[ grid ] fix schedule job after grid restart
danielwagnerhall : fix this lameness in testtextcontent
refactor logger to use ThreadLocal for thread safety to improve performance by avoiding unnecessary object creation
updated imports and modified the convertToCompilationUnit method signature in FunctionInitializer and FunctionInitializerTest to improve testing capabilities and align with Mockito practices
added handling for primitive types and improved type checking in ` Types . java ` , ` Infer . java ` , and ` T66
updated task view handling in RecentsView . java and removed unnecessary calls in TaskView . java to improve code clarity and ensure proper orientation state
hbase - 25819 fix flaky testflushfromclient # testflushfromclient # testgetregionserverthreads ( )
added logic to delete existing contract details before creating a new one in TransactionExecutor . java to ensure a fresh repository is used for contract details management
updated balance calculations in TokenIssueProcessor and modified allowance calculations in withdrawRewardContractProcessor to include dynamic properties for asset issuance fees to ensure
replaced ` apMap ` and ` texCache ` with ` Map < URI , Texture > ` and added cache clearing functionality to improve texture management
refactor raster handling in Blit . java and add a new Bug7049339 . java file to improve code clarity and demonstrate
added a boolean flag ` isUnselectedStyle ` and implemented ` getStringWidth ` method in ` Label ` , ` DefaultLookAndFeel ` , and
initialize ` mappings ` and ` currentActions ` with zero values in ` AbstractCasMultifactorWebflowConfigurer ` , ` Cas
removed flags parameter from queryImplicit intent methods in ShadowApplicationPackageManager . java to simplify method signatures by eliminating unnecessary flags
refactor PingRequestHandler class to improve code readability and maintainability
make mp4 _ asset _ with _ increasing _ timestamps configurable
[ tradfri ] do n ' t log warning for old firmware
refactor AjaxElementLocator class to improve code readability and maintainability
updated layout checks from InlineLayout to DefaultLayout and modified display condition in DefaultLayout to include " table - cell " display to ensure proper handling of table
refactor JsonDecoder to improve handling of token levels and add a new test for reordering fields to enhance code readability and ensure correct parsing of
updated the listener invocation in BlockCache . java to include removalCause parameter to improve clarity and control over location release process
[ hotfix ] [ test ] ignore ignore test in savepointtestbase
jbrules - 2214 : add miss @ test annotation to droolmvelparsertest .
made several fields final in ContextRegisterListener . java to enhance immutability and prevent subclassing
refactor ObjectHashSet to allow customizable iterator behavior to enhance flexibility by allowing customizable iterator behavior
added batch size tracking in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure batch processing does not exceed defined limits
updated Context modes from WORLD _ READABLE to PRIVATE in AppSettings . java and UpdateUtils . java to enhance security by restricting access
updated logging messages to clarify the context of the close ( ) method in JdbcProxyGenerator . java to improve log clarity and
updated animation state handling in Workspace . java to improve accessibility support for accessibility transitions
log4j2 - 1349 use debug log level instead of warn
updated scope assignment in UaaTokenServices . java and added a test for persist scope to ensure correct handling of scopes longer than 1000 characters and
updated import statements and modified logger initialization in AvailableJDBCDrivers to improve code clarity and ensure proper logging format
[ kie - api ] add executablecommand interface
remove jdbctableservice since it be no longer need
added padding methods in CellLayout and modified bitmap creation in Launcher to improve layout handling for different orientations
added a check for an empty StringBuilder before collecting candidate values in LineReaderImpl . java to improve robustness by handling cases where StringBuilder is empty
replaced ` SamlMetadataUIParserAction ` with ` Action ` and added null check for ` flow ` in ` SamlMetadataUIWeb
added a method to check for open ports in LdapMockMvcTests to enhance test reliability by ensuring all available ports are checked
log4j2 - 1349 log4j2 - 1349 : [ log4j2 - 1349 ] log4j2 - core
refactor URL handling in Fetcher and HTMLMetaProcessor to improve clarity and maintainability of URL processing logic
updated SolrQuery initialization and modified assertion in TestSpellCheckResponse . java to use " name : samsang " instead of " samsang " to
replaced direct instantiation of Console with conditional instantiation based on parameter types to improve flexibility in handling different Console API implementations
bugfix : meshhelper . getverticescolors ( ) do n ' t work with b - mesh compatible mesh
updated file handling in HTMLReportGenerator and improved test exception handling in HTMLReportGeneratorTest to enhance report generation accuracy and ensure proper exception
datavalidatortest : remove unnecessary junit test from datavalidatortest
pdfbox - 2852 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to ensure proper error handling for invalid binding expressions
removed debug print statement from JoglInput . java to clean up the code and improve readability
added a flag to allow extracting private fields in FieldSupport and updated field value handling in FieldSupport _ fieldValues _ Test to enhance functionality
added a replacement for device name in WebDataHandler . java to ensure the correct identification of device names in the application
refactor lookup constructor initialization and use MethodHandles for improved flexibility to enhance compatibility with Java 8 type handling to ensure correct instantiation of Lookup objects
added a deprecated method ` weights ` to ` ZParams ` and introduced a new method ` weightsByDouble ` in ` SortedSetCommandsTest ` to en
updated ` writeCustomHTML ` method signatures to include a ` Database ` parameter across multiple writer classes to enhance functionality by allowing database - specific
added assertions and simplified key serialization in BTreeMap . java to improve code readability and maintainability by reducing unnecessary type casting
replaced ` Exception ` handling with ` BalanceInsufficientException ` and added specific exception handling for ` BalanceInsufficientException ` to improve error management for deferred
bugfix : do n ' t write zero in profiler heap file
refactor Main . java to use Scope for message sending instead of stream output to improve code readability and maintainability by utilizing a dedicated
updated buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed unnecessary byte array assignment in HortonworksEncoded
added imports for ` ChunkListener ` , ` ItemReadListener ` , and ` ItemWriteListener ` in multiple Java files to enhance batch
refactor code for improved readability and structure to enhance maintainability and clarity of the code
removed unnecessary calls to getLiveDocs ( ) in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser to simplify code and improve readability
updated Test7005594 . java file to improve test coverage and functionality
updated error message formatting in ResourcesValidationProcess . java to simplify error messages for clarity
refactor TopKRollupPhaseOneJob class to improve code readability and maintainability
server : fix npe when vm be not up to date
do n ' t trigger gui size change for digital / analog trigger in gamepad
updated method names from ` iteratesOverSequence ` to ` iteratesOver ` in ` IterableSubject . java ` and ` IterableTest . java `
camel - 15836 fixed the unit test error of camel - core
added assertions to verify the count of native queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure the count of native queries is accurately
updated BarChartActivityMultiDataset to use a large value formatter and refactored value calculations to use a new LargeValueFormatter class to improve
updated character handling in CommentsParser to use INNOCUOS _ CHAR instead of hardcoded values to improve clarity and maintainability of character management
remove @ suppresswarnings from platform . java
truffle : do n ' t print allocation before register
added a TODO comment for the Auto - Generated Method in NullAssertionValidator . java to prepare for future implementation of the validation logic
added support for appending ` . buck ` to rule keys in ` DefaultRuleKeyBuilderFactory ` to enhance rule key generation by ensuring ` .
added functionality to create a system profile directory if it does not exist and refactored test methods in DLNAMediaInfoTest and SearchRequestHandler
refactor the creation of the event loop group in TestcontainersDockerCmdExecFactory to improve code readability and maintainability by reducing duplication
replaced direct instantiation of LongAdder with a method to retrieve messages from the receiver to improve code readability and encapsulate messages retrieval logic
added attribute set for " accept " in ImageFileInputDialog to allow image uploads in the image input dialog
updated ElasticIndexWriter and TestElasticIndexWriter to use a pre - built transport client instead of a static client to improve performance and simplify client initialization
added witness class and witness class names to the ForkController class to provide more detailed representation of witness instances for better debugging and analysis
added a new test file ` NullPointerAndEmptyArrayTest . java ` that tests the functionality of ` NullPointerAndEmptyArray ` to ensure that
updated ` findConfiguredGeneratedSourcePathsUsingDeps ` method to include dependencies from ` targetNode ` to enhance the handling of generated source paths
added methods to construct wildcard patterns with and without a character delimiter in UaaStringUtils . java to enhance wildcard pattern construction flexibility by allowing
added validation for aliasToWork and tableScanCount in Vectorizer . java to ensure that only valid TableScanOperator instances are processed to avoid potential errors
updated import statements and exception handling in WeatherQueryTest . java to ensure compatibility with the latest Mockito framework version
added error handling for firmware settings to improve robustness by logging warnings when setting invalid configurations
replaced specific imports with a wildcard import and modified the ` getLangs ` method to return a ` Set < String > ` instead of an
updated import statements in LazyTraceScheduledThreadPoolExecutorTests . java and modified assertions in LazyTraceScheduledThreadPoolExecutorTests . java to ensure compatibility with
hbase - 27875 disable snapshot handler should call prepare ( ) instead of throw exception
[ j2kt ] add platform null check for reference equality .
added a test for updating the HTTP RPC endpoint in DockerQuickstartTest to ensure that the explorer correctly handles changes in the HTTP RPC endpoint
added a volatile boolean ` isSuspended ` and modified thread handling logic to ensure proper thread state management and prevent illegal state exceptions
updated JavadocVisitor and ReloadableJava8JavadocVisitor to return Javadoc . Serial instead of Javadoc . Author and Javadoc . Since
camel - 16400 : added unit test base on user forum issue
removed multiple redundant @ Override annotations from several security - related classes to streamline code for better readability and maintainability
added module import for ENUM _ WRAPPER _ CLASS _ SUFFIX and modified eval expression in Java2TypeScriptAdapter . java , modified static field
fix xssf export to xlsb
added conditional logic to display badge content description based on badge presence in BubbleTextView to enhance user feedback by displaying a specific content description when appropriate
added mouse wheel functionality to the scroll pane to allow dynamic adjustment of the mouse wheel ' s rotation
pdfbox - 4892 : close all open pdfs in visualtester , a suggest by valerybokov
updated currency references from BTC _ ETH to XRB _ BTC in KucoinAdapters . java and KucoinIntegrationTests . java to
refactor VacuumController , VacuumFrame , VacuumView , and VacuumView classes to simplify agent handling and improve type safety to enhance
simplified currency return logic to improve code readability and reduce redundancy
updated JsonFormat to use ImmutableSet and modified default value handling for fields in messages to improve code clarity and ensure default values are always output
added handling for array types in JacksonXmlFormatMapper to ensure proper serialization of primitive types in JSON
refactor virtual thread handling to improve clarity and structure to enhance maintainability and readability of the code
refactor DirectoryTaxonomyWriter to use a consistent variable for term and category paths to improve code readability and maintainability by reducing repet
refactor VetoableChangeSupport class to improve code readability and maintainability
adjusted the calculation of the Y - coordinate by subtracting one column to correct the vertical positioning in the content pane
pdfbox - 2852 : remove check for ioexception , a suggest by valerybokov
added tests for setting and getting short and long support messages in ShadowDevicePolicyManagerTest . java to ensure proper exception handling for security exceptions related
[ inputbarhelp ] add close button to help menu .
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization to enhance maintainability and readability of the codebase
updated ` BackendInitializerHelper ` , ` TerminalClient ` , ` Code ` , and ` GcodeParserUtils ` to use ` ThreadHelper
updated the logic for determining the last update timestamp in SwingStartup . java to ensure proper handling of exceptions and release status in the application
added support for generate file comment in migration xml
added " < player | * > " to the argument list in multiple command - line arguments to allow more flexible command - line options for players
deleted the classes BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java to remove unused filters to streamline the codebase
fix optionprocessor to use optionname instead of name
fix testngcontenthandler for parallel test
http : / / issues . apache . org / jira / browse / amq - 4237 - do n ' t register broker with old
refactor ( ctmethod ) : remove static import of enums in ctmethod . java ( # 2451 )
added serialVersionUID fields to multiple Java classes to ensure proper serialization compatibility across different versions
updated DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated ` shaBase64 ` method to include ` CONST _ SEPARATOR ` parameter and added a test for value retrieval to enhance functionality to ensure proper
updated the handling of the SYSTEM _ ACTIONS _ ENABLED parameter to improve null safety and clarity of the parameter check
added a new class Person in the org . apache . maven . it0074 package to provide a placeholder class Person to facilitate the
move gossiper . start ( ) out of gossiper . start ( ) since it be not need
updated method call to use ` timeStr . toUpperCase ( ) . toUpperCase ( ) ` instead of ` timeStr ` for string comparison to ensure
added assertions for timeColumn and totalDocs in SegmentMetadataImplTest and integrated them into SegmentMetadataImpl to enhance test coverage for metadata handling
replaced ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` in ` SimulationPlotPanel .
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to ensure proper
changed the type of ` scopeHierarchy ` from ` String ` to ` Class < ? extends Annotation > ` to improve type specificity for scope handling
danielwagnerhall : add a test to make sure we can click on a page with a double overflow .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added support for custom JNDI location in JtaTransactionManager to enhance flexibility in JPA transaction synchronization configuration
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from Library . java to streamline code by eliminating unused functionality
replaced ` enabledCiphers ` with ` result ` in ` JSSESocketFactory . java ` for clarity to improve code readability and maintainability
[ beam - 8470 ] use microsecond instead of microsecond for timestamp in bigqueryutils
replaced multiple null checks with a single requireNonNull method for buffer validation to improve code readability and reduce redundancy
refactor : use inputmap instead of input to avoid nullpointerexception
added boundary checks for row and column indices in FlightConfigurablePanel . java to prevent index out of range errors
added scrollSelectionVisible ( ) method to ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness
[ java ] unnecessarylocalbeforereturn : fix false positive
replaced the initialization of ` scriptEngineManager ` with ` scriptEngine ` and removed the null check for ` scriptEngine ` to streamline the script engine
refactor Euclidean distance similarity tests to use assertEquals instead of assertTrue for clarity to improve readability and maintainability of the test assertions
fix npe in datetracker
refactor relativize method to improve path handling by introducing a new utility method to enhance code readability and maintainability by
updated null checks for columnSize and decimalDigits in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values and improve code clarity
[ hotfix ] [ test ] skip current writer head file in dlq test
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpcImpl
refactor ErrorHandlerController and Error404Controller to Error403Controller and update their package names to improve organization and clarity of error handling controllers
replaced ` resetTerminal ( this ) ` with ` resetIf ( this ) ` in ` UnixTerminal . java ` and ` WindowsTerminal . java `
fix for tiny . toarray ( ) not work with java 8 .
http : / / issues . apache . org / jira / browse / amq - 4237 - fix concurrentmodificationexception in connectionpool
updated method and variable names related to LDAP date conversion to improve clarity and consistency in naming conventions
pdfbox - 2852 : avoid npe , a suggest by valerybokov
include classloader in error message when fail to create config
increased thread join times and added exception variables for writer and reader exceptions in LargeStreamletTest . java to improve test stability by allowing multiple threads
updated MainActivity to increment extra pages based on page types to enhance user experience by allowing dynamic page counts
added error handling for image processing in AndroidImplementation . java to improve robustness and prevent crashes when processing images
pdfbox - 4892 : fix typo find by codespell on fossies . org
pdfbox - 4892 : avoid resource leak , a suggest by valerybokov
deleted the file TestDocInverterPerFieldErrorInfo . java to remove obsolete error handling tests
added a shell command for keyboard event handling in AbstractLauncherUiTest . java and removed an assertion in LauncherInstrumentation . java to enhance user interaction
added JSON serialization for filename to URL mapping in FileDumper . java to facilitate the handling of file names in the output directory
bugfix # 207 , do not reset result notified flag in profilerserver
blender importer : use loadimage ( ) instead of gettexturefromimage ( )
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperIntegrationTests to check for " application " instead of " application : "
updated aNewIsbnRandomizer value from " 9781797745008 " to " 9781797845005 " in multiple test
updated the sound setting logic in AlarmReceiver . java to use a configurable ringtone URI to enhance flexibility in notification settings
add a method to report loop count to the root node .
added handling for cluster version finalization in FinalizeUpgradeAction . java and updated cluster entity merging in ClusterImpl . java to ensure the correct stack version
fix findbyregionidandstatesearch to use regionid instead of rangeid
removed duplicate line of code in ItemOrientedStep . java to improve code readability and maintainability
added a new file ` CountedLoopProblem . java ` that contains a utility class ` CountedLoopProblem . java ` to implement a loop test
[ gr - 25809 ] use varargs instead of metaspace method parameter .
[ gr - 27820 ] handle jvmci error in graalhotspotvmconfig . getpendingfailedspeculation ( ) .
refactor KafkaStreamsTracing class to use ValueTransformerWithKeySupplier instead of TransformerSupplier to enhance tracing capabilities by integrating value transformer
[ # 7785 ] feedbackconstantsumquestiondetails : show received point in csv ( # 7885 )
added a call to DynamicColors . applyToActivitiesIfAvailable to ensure that dynamic colors are applied correctly when available
added thread management and stack dumping functionality in CloseRace . java to improve debugging capabilities and error handling during thread termination
updated the return value in IntPointField . java and added multiple assertions in TestPointFields . java to ensure correct handling of integer values to enhance
replaced static arcSize with a dynamic value of 0.1 to improve flexibility in determining the arc size based on the width of the component
increased the width of veryHighWidth from 720 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java to
rename minifysqlenabled to shrinkwhitespacesinsql for clarity
refactor ` waitForStateTransitionToEnd ` method calls in ` WorkProfileTest . java ` and ` AbstractLauncherUiTest . java ` to
updated import statements across multiple test files to replace ` CasCoreConfiguration ` with ` CasCoreHttpConfiguration ` to ensure compatibility with the
replaced direct calls to ` raf . readLong ( ) ` with ` DataIO . getLong ( buf , 0 ) ` for read operations to
( chore ) camel - http : fix potential npe in httpproducer
refactor classpath creation in DeclarativeHintsParser to use a builder pattern to improve clarity and maintainability of classpath handling
[ type : refactor ] fix miss scope element for script
added methods to manage and set the layer manager in the AnimComposer class to ensure proper handling of unknown layers during animation events
added a check for an empty queue in DeferredHandler and removed the showDefaultScreen method from Workspace to optimize performance by avoiding unnecessary screen updates
added null checks for mapOp and mapWork in MapRecordProcessor and TezProcessor to improve error handling and logging consistency
refactor center and center2D handling in CylinderRegion . java to use Vector2D instead of Vector to improve clarity and
updated imports and refactored exception handling in TestBadUseCases . java to improve code clarity and leverage JUnit ' s ExpectedException for
added a null check for subqueries before sending a single query in QueryExecutorImpl . java and implemented a test for multi execution in StatementTest . java
do n ' t log customized security environment if not need
added a new " rctag " parameter to the API request in ReviewInterface . java to enhance functionality by allowing users to edit app changes
refactor Test class to improve code readability and maintainability
updated PBEKeySpec to use keyLength instead of blkSize to ensure correct key length is used for encryption
fix : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
added writesectiondefinition ( ) to rtfdocumentheader .
added distance calculation and logging for large jump points in GpsLoggingService to enhance user experience by preventing large jump points from being logged
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 10 )
use weakreference instead of boolean to prevent memory leak
removed binary search for app names in AllAppsList . java to simplify the addition of apps to the list
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and removed the ` ThemedPreferenceActivity ` class to streamline the code and
updated valueClass to use " UsingUnresolvedD " instead of " HostD " to clarify the purpose of the value class generation
updated assertRootArcs ( ) method call in FST . java to ensure consistency in assertion syntax to improve code readability and maintainability
added an assertion to check if a security policy exists and is a file to ensure the integrity of the security policy before proceeding
camel - olingo2 : added miss getconfiguration method to olingo2component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution to complete successfully
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging output for better readability
added ability to publish an xmp image by http . smack - 10
camel - 16400 : camel - netty - make the producer field final
fix bug in balancedclickhousedatasource . spliturl ( ) to handle invalid host name
remove system property to disable jsr199 compilation
added support for null string values in CSVRecordReader and CSVRecordReaderConfig to enhance CSV processing capabilities to handle null values appropriately
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to skip LiquibaseService initialization for specific connection types
update variablenameutils to account for java source file
update itemcommandtriggerhandler and itemstatetriggerhandler to match new topic name
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to ensure proper exception handling for bean
deprecated the handling of " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig and TestSolrXml classes to
fix mana tablet do n ' t use mana .
added a copy of the identifier collection in P25P2DecoderState to ensure the current call event ' s identifier collection is updated correctly
removed unused imports related to DictionaryCompoundWordTokenFilter in TestRandomChains . java to improve code clarity and reduce unnecessary dependencies
updated the thread pool executor name from " deriveKeyWithScrypt " to " ScryptUtil " to improve clarity and consistency in thread naming
refactor GeneratedCode class to improve code readability and maintainability
updated assertion to include the definition parameter in TypeDefinitionRegistry . java to ensure that the assertion verifies the correct definition object
added a visibility indicator for the shareWithMeIcon in LocalFileListAdapter to improve user experience by hiding the share withMeIcon when not necessary
updated stylesheet links in DefaultLogoutPageGeneratingFilter , LogoutPageGeneratingWebFilter , and tests to use HTTPS instead of HTTP to enhance security by
updated import statements and added null checks in RouterFilter and RouterServerListFilter to improve code clarity and ensure headers are not null or empty
enhanced assertion in TestIndexWriterMergePolicy to include additional context for assertions to improve debugging by providing more informative messages
mark multiple classes as deprecated to signal that these classes are outdated and should not be used in new development
add a null check for the context in the crawling request .
added security - enabled permission to the getJspApplicationContext method to enhance security by ensuring that the application context is accessed in a privileged manner based
updated the calculation of minimum and maximum lengths in RocketComponentConfig . java to improve the accuracy of component lengths by considering minimum and maximum limits
added dependency injection for NonceService in OpenIDAuthenticationProviderModule to enhance security by ensuring NonceService is properly instantiated
added a method to update child links in FileWrapper . java to enhance link management by ensuring child links are updated correctly
refactor methods in SpringCloudPlugin for improved readability and consistency to enhance code clarity and maintainability by standardizing method parameters
fix test which randomly fail on slow ci server
added a new boolean variable ` mShiftCodesAlwaysOverride ` and modified shift code logic in ` AnyKeyboard . java ` to control the behavior of shift
[ hotfix ] [ runtime ] fix incorrect leader election
corrected formatting in NearbyActivity . java to improve code readability and maintain consistency
ambari - 20509 . do n ' t allow kerberos identity to be a reference identity ( oleewere )
modified the ` newInstance ` method to accept a ` noop ` parameter for better control over cache creation behavior
do n ' t swallow interrupted exception
updated argument handling in PatchExtensionMethod to preserve original arguments during method call processing
replaced ` Map ` with ` Set ` for managing ` RawNativeLibraryImpl ` instances and improved error messaging to enhance memory
int - 2 ' s ' apply - sequence ' and ' ignore - send - failures ' attribute should be set to ` ` true ' '
removed x509 publish URL handling from ClientKeyPublisher and JwkViewResolver to streamline code by eliminating unnecessary publish URL logic
refactor reader assignment logic in QueryComponent to improve readability and maintainability of the code
replaced ValueSourceParser with two new parsers for " max " and " min " to improve code readability and leverage more specific parsing methods
simplified return statements in the Container class to improve code readability and maintainability
removed unused variables and simplified method signature in TokenSources to improve code clarity and maintainability
cloudstack - 7505 : fix for cloudstack - 7505 : use uuid instead of string to make sure uuid be unique
replaced ` FlowBuilderServices ` with ` ObjectProvider < FlowBuilderServices > ` in ` CasMultifactorAuthenticationWebflowConfiguration ` and added
updated SQL command parameters and refactored connection handling in WriteJdbcPTest . java to improve code clarity and ensure accurate connection management
removed conditional logic for setting the look and feel in DefaultPlatform . java to simplify the code by directly assigning the UIManager without unnecessary checks
replaced calls to ` getStateEntity ( ) ` and ` getDesiredStateEntity ( ) ` with direct references to ` stateEntity ` and ` desiredState
simplified margin calculations in FloatingTaskView . java to improve code readability and maintainability
added a check for the running state in RootFolder . java and updated status line message in NavigationShareTab . java to improve error handling and user feedback
fix cpucallgraphbuilder to not increment threadid
g3d - 376 : do n ' t create a new toolbar if one already exist
updated HomekitImpl to implement NetworkAddressChangeListener and improved logging messages to enhance network address handling and provide clearer error messages for better
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster to use NameNodeAdapter ' s getLeaseRenewalTime method to improve accuracy
replaced ` Optional < SourcePath > ` with ` Optional < LinkStyle > ` in ` CxxLibraryDescription . java ` to ensure proper handling of
added null check for exception messages in ExceptionHandlerRegistryFactory and created a corresponding test in ExceptionHandlerRegistryTest to enhance error handling robustness and ensure
changed the ` nextID ` variable to be volatile and modified the ` getSize ( ) ` method to return ` nextID ` to ensure thread safety and
try to fix the test which randomly fail on slow ci server
added HasSourcePath interface and updated related classes to implement it to enhance functionality to support source path handling in the build process
replaced StringBuffer with direct string concatenation to simplify code and improve readability
added a custom index field name in ` OrdinalMappingAtomicReader . java ` and updated test cases in ` TestOrdinalMappingAtomicReader . java `
updated the ` toEpochMilli ` method to handle negative seconds and positive nanoseconds correctly to ensure accurate conversion of milliseconds to seconds and improve test coverage for epoch
use the name of the buffer shader to avoid npe
added functionality to block and manage script updates in the CopyPaste application
added a new file ` TestCMoveLimitType . java ` for testing character buffer operations to facilitate testing of character buffer operations with
added a method to check for recorders in RecordConfiguration and refactored audio packet processing in AudioPacketWaveRecorder to improve code clarity
camel - 16462 : camel - sql - stored - sql need to be able to parse sql file with thanks to jens k
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the correct vendor for Oracle Corporation
refactor console initialization and version printing logic in Main . java and VersionCommand . java to improve code readability and maintainability by encapsulating
refactor token validation logic to use EncryptionUtils for improved security to enhance code clarity and maintainability by consolidating token validation
improve handling of eofexception in http11inputbuffer
added unit tests to validate deletion of non - existent and non - existent group member .
( chore ) camel - ftp : remove unnecessary object array creation
deleted the V2ReplicationProtocol . java file to remove unused replication protocol class to streamline the codebase
updated ` compileTimeClasspathDeps ` to ` compileTimeClasspathSourcePaths ` across multiple classes to improve clarity and consistency in handling
added new files ` ConstructorArgsDemo . java ` and ` StrictDemo . java ` to demonstrate ` ConstructorArgsDemo ` and ` StrictDemo .
use threadlocal for templatefeatureiterator to prevent memory leak
updated the assertion condition for responseCount in WriteResponseHandler . java to allow for more flexible replication handling
added a null check for indexNumber in ItemRowAdapter to prevent potential NullPointerException when accessing indexNumber
corrected spelling of " areAnchestorsShown " to " areAncestorsShown " across multiple files to improve code readability and
added a check to return early if the app width is less than 12 to optimize performance by avoiding unnecessary processing
updated change log parameter comparison from ` = = ` to ` . equals ( changeLog ) ` in ` ChangeLogParameters . java ` and added a
changed the ` loggers ` map from static to final to ensure that the ` loggers ` map cannot be reassigned after initialization
updated the return statement to use ` getBasePlot ( false ) ` instead of ` p . getOriginalPlot ( false ) ` to ensure the correct plot
camel - 14284 : restserverendpoint . createuploaddir ( ) should log a warning if create externally fail .
added a ` sendStatus200 ` parameter to the ` ServerGenerator ` , ` HttpTransportOverFCGI ` , and ` ServerFCGI
added a check to ensure the comment length does not exceed zero to prevent potential errors when processing multi - line comments
added imports for BuckFileType , FileTypeManager , and FileTypeManagerImpl , and implemented file type removal logic in BuckModule . java to
replaced specific function imports with a wildcard import and changed method return types from ToLong to ToInt in ComposedUtil . java to simplify import statements and
added error handling for unsupported OS versions in ` RTMGenericCommandLineOptionTest ` and ` TestUseRTMLockingOptionOnUnsupportedCPU
reformatted code for consistency and clarity in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class to improve code readability and maintainability
added import for ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate mocking the ChannelTypeUID class for testing purposes
fix typo in polyglotexceptionimpl
added a reset method to ShadowFontsContract and initialized systemContext in AndroidTestEnvironment to ensure proper context management during tests
added a ` toMillis ` method to ` TimeGranularity ` and updated ` PinotDataSourceMaxTime ` to utilize it to improve
added null check for ` _ try ` and ` _ finally ` before processing flow analysis in ` ControlFlow . java ` to improve robustness
updated assertions in ` Assert . java ` and ` ArrayEqualityAssertTest . java ` to improve error handling for different array sizes to enhance clarity
fix switch / cases indentation .
updated index calculation in MeshBuilder . java to ensure correct indexing for short indices
nifi - 1894 : remove unnecessary ' this . controllerServiceProvider ' from standardprocessscheduler
added support for annotation processor parameters in KotlincToJarStepFactory and integrated it into the KotlinLibraryIntegrationTest to enhance
updated ` RESCROLL _ DELAY ` constant and refactored page navigation logic in ` PagedView . java ` to use ` getNextPage (
added permission checks for shortcut host in multiple classes to ensure that shortcuts are only refreshed when the host permission allows them
added handling for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to support history search functionality
added null check for core name in CoreAdminHandler and updated error handling in CoreAdminHandlerTest to improve robustness by handling null core cases
added marker selection functionality to the NearbyMapFragment to improve user experience by hiding the bottom sheet when no markers are selected
added exception handling in FileSyncAdapter . java to improve error reporting and debugging capabilities
refactor Docker test assertions in TestMemoryAwareness . java to use try - catch blocks for exception handling to improve robustness by catching
updated FeedQueues . java to simplify feed refill logic and enhance performance based on application settings for heavy loading
log warn if defaultdrmsessionmanager be call on wrong thread
added Locale . US ( Locale . US ) to packageType and resourceCompression methods in AndroidBinaryDescription and AndroidBinaryBuilder to ensure consistent handling
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure correct content type is used for XML processing
updated configuration file references from INSTANCE . confFile to INSTANCE . confFile to ensure consistency in configuration file usage across the application
removed the sleep duration from the waitUntilReadyAndTimeout method to simplify the test by removing unnecessary sleep delay
changed the data type of ` numCountDistinct ` and ` getGroupingIdValue ` from ` int ` to ` long ` in ` HiveExpandDistinct
added multiple checks for headless environment in mmm and ppp toolkit .
only allow furnace that belong to the current instance of the same instance of furnace
make move thread count configurable in defaultsolerfactory and defaultsolerfactory
fix npe when search with revinclude = false
added a new test class ` Issue582Test ` to verify the functionality of sorting and pumping features in a MapDB database to
[ native ] add e2e test for decimal overflow
refactor LoadingCache class to improve code readability and maintainability
added a new rule to avoid non - constructor methods with class names in NamingRulesTest to enhance test coverage for naming scenarios
danielwagnerhall : do n ' t return null when element be already in select state
refactor view existence check in ViewExistsPrecondition and add hasView method in JdbcDatabaseSnapshotGenerator to improve error handling and provide clearer
refactor DOMUtil class to improve code readability and maintainability
added translation handling and logging functionality in TaskViewUtils and Utilities to improve task view animations and debugging capabilities
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false to disable the fixed rotation transformation feature
added a new method ` walk ` in ` TempFSTTermsReader ` and modified ` writeVInt ` method in ` TempTermOutputs
updated create method signatures to include SolrQueryRequest parameter across multiple factory classes to enable support for SolrQueryRequest in document transformation
added trigger actions for post content validation in SingleTableMySQLTriggerTest . java to enhance testing capabilities for post content handling
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to improve code clarity and maintainability by centralizing comparator setting logic
updated query strings to use double quotes for column names in PhoenixQueryBuilderTest . java to improve readability and consistency to enhance clarity
added Spark import and initialized Spark in RequesterTest . java to ensure Spark is ready before further operations
added methods to manage total storage pool and fees in DynamicPropertiesStore to enhance storage management functionality and improve error handling
added support for streaming files from a specified source directory in AssetsController . java and updated related tests in AssetsControllerTest . java to
fix exception when map mark do not exist
added tokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance token processing capabilities to improve flexibility in handling
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` to simplify
updated file path handling in JxBrowserManager to use fullPath instead of fileName to improve clarity and consistency in logging output
added checks for the " AppVersion " property and updated image creation logic in IOSImplementation . java to ensure proper handling of JPEG and PNG formats
removed the call to getBridgeUID ( ) . getId ( ) when logging the error message in SomfyTahomaBridgeHandler . java to simplify
disable flaky test on github
refactored the OpenWireConnectionTimeoutTest class to use static final strings for keystore and password to improve code readability and maintainability by
mondrian : log nan gauge for nan value return by dynatrace exporter
added a method to remove a session ID from the session map
added functionality to set a hostname for alert instances in HeartBeatHandler . java and improved log message formatting in AlertReceivedListener . java to ensure
simplified the buffer flushing logic in ChannelEndPoint . java to improve readability and maintainability of the code
resolve split - packages : move everything from kie - api under org . kie . api : move resource to kie - api
added seekTo method in ShadowMediaPlayerTest and implemented seekTo method in ShadowMediaPlayer to enhance media playback control based on seek operations
rename createTask method to createThrowingTask across multiple classes to improve clarity and consistency in naming conventions
added border adjustments for tab close button in CloseButtonTabbedPane based on AQUA _ LAF status to enhance the visual appearance
added connection and read timeout settings in TSPTimeStampService . java and refactored test assertions in TestSignatureInfo . java to enhance
[ zeppelin - 1086 ] allow xstream to be configure with a classloader
added validation for diamond application in ` ppp Attr . java ` and created a new class ` DiamondRaw . java ` with a main method
[ hotfix ] fix checkstyle violation in reloptutil
updated validation for setting ID and value in Http2Settings . java to ensure IDs and values are unsigned to enhance input validation for unsigned 16 - bit
deleted the file mmm MapInterfaceTest . java and mmm Issue664Test . java to remove obsolete tests related to functionality
added exception handling for disposed sessions in SessionsPoolTest . java to ensure proper session management by preventing operations on disposed sessions
[ geot - 4078 ] fix jsonwms builder ( # 4079 )
updated setSelectedIndex method to use the intValue ( ) method for setting the selected index to improve code readability and maintainability
added a method to check if manually unstashing is allowed in TaskbarStashController to ensure proper handling of state checks based on application state
( chore ) camel - spring - boot : remove unnecessary check for customid
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for controlling event mismatch handling to enhance flexibility in event mismatch detection based on
added a new ` HeaderFixer ` class to handle file processing for licensing headers to ensure the correct header is included in the generated Java
added a broadcast intent for first loading completion in the Launcher class to ensure that the app widget is properly registered when the first load completes
deleted the ` SuperJumperAndroid . java ` file to remove unused class to streamline the codebase
phoenix - 4892 enable broadcast join by default
added ` KeyValuesProviderAware ` and ` ObservationConvention ` interfaces to ` Observation ` and ` ObservationConvention ` interfaces to enhance functionality
remove miss mapping from registry when remapping .
updated return statements in AtomicIntegerArray , AtomicLongArray , AtomicReferenceArray , and AtomicReferenceArray to cast to long to ensure proper handling of large
added caching for lastDateFormat and lastFormats in HSSFCellStyle . java to improve performance by reducing repetitive method calls
updated the request in the RemoteAuthenticationEndpointTests to include username to enhance filtering capabilities for user attributes in the endpoint
pdfbox - 4892 : use finished ( ) instead of needsinput ( ) , a suggest by valerybokov
updated the logging of the All Apps exit event to include container information and workspace information to improve logging clarity by including the current page index
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
deleted the DeadlockTest . java file to remove obsolete test code that is no longer needed
added null check for newInput and improved debug messages in BugContentProvider and BugGroup classes to enhance code robustness and provide cle
added a " Reopen in Browser " menu item and refactored server opening logic in JavaScriptEditor . java and JavaScriptServer . java to improve server
added error handling for multiple outputs in SemanticAnalyzer . java to ensure that specified outputs cannot be present multiple times to prevent runtime exceptions
removed duplicate entry listener methods in BasicTest . java to streamline code by eliminating redundancy
fix indexoutofboundsexception when coordinate array be empty
updated the setOpen method call in ToolbarPanel . java to ensure the method correctly handles the open state of the toolbar panel
added a variable ` first ` to track the initial state of the payloads
replaced a conditional check with a direct method call to showOverviewMode to simplify the code and improve readability
http : / / issues . apache . org / jira / browse / amq - 4237 - fix npe in networkroutetest
use integer . max _ value to prevent overflow
[ gr - 27886 ] fix checkstyle issue .
updated HttpClientRequestImpl to use a boolean parameter for adding pending components to improve performance and simplify component addition logic
updated artifact replacement logic in GetMavenDependenciesTask . java to improve clarity and correctness of dependency resolution
pdfbox - 2852 : avoid npe , a suggest by valerybokov
remove debug print statement from referenceutil
fix visibility of field predicate in field predicate .
added support for enabling and disabling JSON - RPC HTTP port configuration in the CommonParameter and related classes to enhance flexibility in configuring JSON -
added a check to ensure folder is not an instance of DropTarget before removing it to prevent potential ClassCastException when attempting to remove a drop target
refactor stub jar creation logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
added new feature descriptions for the Setup wizard in StartPageTopComponent . java to clarify the purpose of the feature in the UI to enhance
fix cassandra startup issue
removed unnecessary null check for available variable to simplify code logic for better readability
changed return attributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure all users can authenticate
added null checks for onIdleTimeout and improved failure handling in HttpChannelState . java to ensure proper callback execution to enhance robustness by prevent
updated CreateEndPoint class to extend Invocable . NonBlocking to ensure that the endpoint can be managed using blocking operations
updated TABLE _ HEADER _ SEPARATOR regex and added a new test for one - column tables to improve table parsing accuracy and ensure correct handling of
updated return value from 32.0 f to 31.5 f to improve the accuracy of the camera ' s value
added a preference for " startOnBootSetup " in GpsSettingsActivity and updated return values in Utilities . java to enhance user experience by providing
updated the client secret length in DefaultOAuth2ClientDetailsEntityService from 128 to 512 bytes to optimize the client secret length for better security
updated assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to use ` enablePassingNulls ( true ) ` instead of ` enablePassing
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race conditions
refactor input and output file system handling in SegmentGenerationAndPushTaskExecutor . java to improve code clarity and ensure consistent file system initialization
added locale checks for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is only used for non - English locale settings
added MetalLookAndFeel import and set it in UIManager to enhance UI appearance for better user experience
added synchronization to the pingAtRegularIntervals method to ensure thread safety during message sending
replaced ` throwable . getMessage ( ) ` with ` throwable ` in ` GlobalErrorHandler . java ` to simplify error handling by directly using the throwable object
updated method parameter names from ` module ` to ` from ` in ` ModuleTable ` , ` PackageTable ` , and ` ModulesHelperVM
added exception handling for CmdLineException in PinotAdministrator . java to improve error logging for command line arguments
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` in ` mmm Subject . java ` and marked ` hashCode (
reformatted code for improved readability and consistency in CustomPlaybackOverlayFragment . java and ImageButton . java to enhance code maintainability
updated zoom level settings in BasicMapViewer . java to correct the zoom level values to ensure proper rendering of map interactions
refactor admin user and group handling in DrillRoot . java to utilize ImpersonationUtil for improved user and group management to
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` across multiple files to standardize permission
added support for multiple argument extraction in DelegatedClientAuthenticationAction to enhance flexibility in handling service resolution
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to enforce immutability of the
tilesizechangelistener now properly create tile cache
removed redundant calls to removeAllViews in InfoLayoutHelper . java to streamline code by eliminating unnecessary view additions
removed the ` cleanEntryForFeedsWithoutSubscriptions ` method and refactored the ` cleanFeedsForFeedsWithoutSubscriptions ` method
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to ensure the correct authentication
nifi - 6892 : fixed unit test failure in filebasedclusternodefirewalltest
fix for conic five point ( conic )
reformatted code for better readability to improve maintainability of the code
added @ SuppressWarnings ( " unchecked " ) annotations in Fields . java and MockitoBeforeTestNGMethod . java to suppress unchecked warnings related to type safety
added native method ` createFromImage ` and refactored ` createFromImage ` to accept a list of images to enhance image handling
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to improve compatibility with byte - based comparators
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple files to improve clarity to enhance code read
replaced null checks with ` Objects . equals ` for version equality checks across multiple Java files to improve code readability and leverage built - in
updated method names and logic in ` SymbolResolver ` and ` ClasspathSymbolResolver ` to use ` @ Nullable ` annotation to improve clarity
added verification for HTML location properties in NinjaDefaultTest . java to ensure proper error handling for invalid locations in the application
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated its implementation across multiple classes to improve cl
adjusted padding for timestampsView in DetailFragment . java and modified list view position offset in ListFragment . java to improve layout consistency to enhance UI
updated exception handling to use ` Thread . currentThread ( ) . interrupt ( ) ` instead of ` Thread . currentThread ( ) ` to
added null checks for field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure proper handling of
vpc : do n ' t allow static nat rule for network that do n ' t support it
added multiple calls to resetHeaderScrollingState ( ) in OCFileListFragment . java to ensure consistent header scrolling behavior
added functionality to remove extra empty screens in the workspace
added a fixedWidth flag and modified glyph handling logic in BitmapFont . java to improve glyph positioning based on its fixed width property
removed the ` EXTRA _ SHOW _ TITLE ` parameter from the ` createFragment ` method and refactored the layout inflation
added preEvent and postTransition methods to AbstractStateMachineFactory for state management to enhance event handling capabilities in the state machine
[ hotfix ] fix checkstyle violation in configdescriptionprovider
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf handling in StorageBasedMetastoreTestBase to improve role management and ensure compatibility with
refactor facet sorting logic to use a boolean variable for clarity to improve code readability and maintainability
updated the way overriding properties are created and set in CheckstyleReport . java to ensure the correct cache file path is used for the build process
added functionality to stop Jetty instances in the test collection to improve resource management and error handling during test execution
added functionality to display a file name in the FileActionsDialogFragment to enhance user experience by allowing file actions to specify their own file name
added an INVALID _ DIRECTION constant and updated conditions to handle MODE _ ON _ DROP _ EXTERNAL mode to ensure proper handling of reorder direction to
added currency and from fields to InnerTransferRequest and updated API path annotations in AccountAPI to improve clarity and consistency in API endpoints
do n ' t wait for the job to complete in case of timeout
added a new file ` EnableAdminClient . java ` to define a new annotation for enabling the admin client configuration to enable the use of the admin client
replaced specific imports with a wildcard import and added new visitIdentifier methods to improve code readability and maintainability by simplifying import statements
added action text color to AuthenticatorActivity to enhance user interface by using a primary dark mode
added ` find ` method with ` ComparableField < ? super V > ` in ` Manager ` , ` StreamSupplierComponent ` , and
refactor ` addTestStepsForPickleSteps ` to ` createTestStepsForBeforeHooks ` and ` createTestStepsForAfterHooks
fix checkstyle issue in handler method resolver
added the ` cancelClient ` method to ` RpcServer ` and modified the ` startDriver ` method in ` SparkClientImpl ` to include error handling
added ` @ Nullable ` annotation and ` getImplicitPreCoercionValue ` method implementations in multiple classes to ensure proper handling of implicit pre -
initialize ` lastDisplayedUser ` with an empty value of ` Optional . empty ( ) ` to ensure ` lastDisplayedUser ` has a default value to
added a new method ` findAll ` to ` QueryDslMongoRepository ` and updated ` createQueryFor ` to accept multiple ` OrderSpecifier `
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl instances to prevent potential NullPointerExceptions during runtime
[ hotfix ] [ runtime ] fix switch / cases indentation in defaultplannerbenchmark . java
added xread , xreadgroup , and xreadgroup method to multistagepipeline base class .
updated calls to ` incrReadReadByteCount ` and ` incrReadOneByteCount ` in ` LinkedBufferInput ` and ` StreamInput ` classes to improve
added a new ` WebSecurityCustomizer ` bean and updated ` CasWebSecurityConfigurerAdapter ` to utilize it to enhance
added a new test class ` TestJdbcWithDBTokenStoreNoAs ` and modified ` TestJdbcWithDBTokenStore ` to include configuration
added methods to register and create ContentProviders in ShadowContentResolver and ContentProviderController , and created corresponding test cases in ContentProviderControllerTest to
update ClassReader to use ClassFile . Version instead of Version to ensure compatibility with the latest versioning scheme
set keep - alive to true by default for single connection
[ java ] make sender flow control supplier configurable .
fix npe in locus with no point
added imports for ConcurrentHashMap and modified exception handling in HttpServerTestBase and WebSocketConnectionD13 to improve concurrency handling and ensure proper resource management during
added driver selection logic to the HttpWebClient class to dynamically select the WebDriver based on user - defined configuration
replaced assertEquals statements with assertThat for better readability to enhance code clarity and maintainability by using built - in assertions
truffle : remove deprecate trufflelanguage # getcontextreference from trufflelanguage
initialized ` e ` to ` null ` in ` StubberImpl . java ` and added ` UninstantiableThrowableTest . java `
modified return statements in Actor . java and Group . java to throw IllegalArgumentException for ascendants to improve error handling by providing clearer exception messages
added location permission dialog and updated the ` getCenter ` method to use ` LocationPermissionsHelper ` to enhance user experience by allowing location access
http : / / code . google . com / p / mybatis / issues / detail ? id = 662 : add support for
added cookie specifications to the request configuration in GetHTTP . java to ensure compliance with HTTP standards for cookie management
simplify intersection logic in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java to improve audio quality quality handling
added a monitoring URL parameter to the ScrollingPanel and SystemInformationsButtonsPanel constructors to enhance user experience by providing access to monitoring
removed the SERVICE _ CREATE _ TIMEOUT configuration option to streamline the service creation process by eliminating unnecessary timeout settings
updated NearbyListFragment to set icon based on the presence of a specific place to enhance the visual representation of landmarks and city items
added a null check for the type ' s package before processing to avoid potential NullPointerExceptions during package scanning
added a new file PrintInlining . java that prints a success message to indicate a successful test execution
fix ( javadoc ) : fix nested brace in javadoc
[ java ] remove unused private field .
updated method calls to retrieve edges and meta edges instead of edges to improve accuracy in edge data representation
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to improve code clarity and reduce unnecessary dependencies
added logging for playback speed request and setting to improve debugging clarity and traceability
fixed memory leak in room remove event .
updated the minimum precision in the AutoScalingHandlerTest from ' replicas ' to ' cores ' to ensure the test accurately reflects the intended core
added texture key settings in TextureHelper . java to enable vertical and horizontal flipping for texture rendering
refactor PythonDslProjectBuildFileParser to use CloseRecordingProjectBuildFileParserDecorator instead of PythonDslProjectBuildFileParser to
[ wasm ] add library normalization pass to j2cl transpiler .
removed the ` nextResponseBodyConverter ` method call from ` GuavaOptionalConverterFactory ` and added a corresponding test in ` GuavaOptionalConverter
[ hotfix ] [ runtime ] add miss @ visiblefortesting annotation to memorysegment
added @ temporal annotation to consolesessionvo . tostring ( ) to avoid npe
added ` Hbs ` and ` HbsTest ` classes to implement a template engine for handling Handlebars in the Jooby framework
chatmessageadapter : hide hint message when no hint be give .
changed the iteration method from keySet ( ) to values ( ) for headerNameMap to use values ( ) instead of keySet ( ) to improve
wait for alert dialog to appear before confirm dialog
added a check for the number of distinct column indices in ReduceSinkDeDuplication . java to prevent processing when the number of distinct column indices is less
refactor code to improve error handling and path processing logic in MiscUtils . java to enhance code clarity and ensure proper processing of jar
regenerate client with updated copyright year ( # 6022 )
updated dependencies for the WebSocket client and server in TestOSGiUtil . java to align with the new package structure
guacamole - 161 : do not return unmodifiable map for identity attribute .
do n ' t update sketch code if they change
replaced instances of creating new Double and Float with direct return statements in multiple Java files to simplify code and eliminate unnecessary object creation
use gettimestamp ( ) instead of getdate ( ) in jdbcdatasource
updated class name handling in HtmlJndiTreeReport . java to ensure compatibility with additional binding types
refactor database options handling in StorageUtils . java to improve clarity and maintainability of the code
updated edge type check from " double " to " mutual " to ensure correct handling of mutual edges
removed the declaration of FLAG _ SLIPPERY in StatusBarTouchController . java to simplify the code by eliminating an unused constant
truffleconstantfieldprovider : fix array dimension calculation for array .
added functionality to retrieve and set the Google Drive folder path to improve user experience by allowing dynamic configuration of the Google Drive folder path
ggb - 1471 shuff down suggestion in av
added nullable annotations to various methods in Truth . java to enhance null safety and improve code clarity
updated array manipulation logic in ArrayUtil . java to improve the accuracy of new array operations
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to support it to ensure proper handling of exceptions in constructor instrument
[ flink - 18406 ] [ runtime ] fix race condition in streamin and streamout
added isKeyguardSecure method to ShadowKeyguardManager and updated its usage in ShadowKeyguardManagerTest to enhance keyguard secureness
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization of the class
updated the handling of override parts in GrblUtils . java to check for a length of ` overrideParts ` before parsing to ensure proper parsing of `
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertMultipleFailureExceptionForManyThrowables ` to
added a conditional check for ` checkDrained ( ) ` before calling ` checkDrained ( ) ` in ` AsyncFileImpl . java ` and
updated LIGHTS _ NUM and LIGHT _ INTESITY values , changed light shader from " light " to " vertexpath " , and modified sample
replaced instances of ` TestProjectFilesystems . createProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in multiple test files to simplify filesystem
updated variable types from String to PathWithLines in RuntimeOptions . java and CucumberFeature . java to improve type safety to enhance code cl
refactor Gson , JsonArray , and JsonObject classes to improve code organization and maintainability
removed the @ NotNull annotation from TEST _ DIRS array in PubRoot . java to address issue 222 .
added a call to close the ParcelFileDescriptor on the realObject to ensure proper resource management and prevent potential memory leaks
added thread - local support for prefix index management in BasisLibrary to improve thread safety and ensure consistent prefix indexing across threads
added DEBUG logging to TestDistributedStatsComponentCardinality . java to facilitate troubleshooting during HTTP connection testing
added ` throwIfImmutable ( ) ` method calls to ` IntList . java ` to ensure immutability of the list before use
updated GrpcServerRunner and GrpcClientBuilder to include @ NotNull annotations and modified GrpcClientBuilder to use URI for context path handling to
move graal . demo . demo to jline . demo . graal and move graal . demo . demo to jline . demo
fix invalidation of function array .
added platform - specific handling for XML file output in GenerateManifestStep . java to ensure compatibility with Windows systems when processing manifest files on Windows
change priority of findnullderef to high priority
updated ` getConfigDescription ` methods to include ` @ Nullable ` annotation to enhance null safety and improve code clarity
do n ' t swallow cancellationexception in masterjobcontext . createcancellationexception
pdfbox - 4892 : do n ' t try to get the cropbox if it ' s null
refactor ManagerBase class to improve code readability and maintainability
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable access to All Apps from the
replaced the initialization of FragmentActivity with a direct call to Robolectric ' s buildActivity method to simplify the activity creation process and improve code read
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and added a new method ` getDecimalCoords ` to improve clarity and encaps
rename test classes for consistency and clarity to improve code readability and maintainability
updated the parameter name from ' num ' to ' value ' in the saveEnergyPriceHistoryDone method and added a null check for the blackhole address
refactor handler initialization in OpenRocketViewer . java to ensure sims change event handling are properly managed
added a new class ` ChangeDependencyGroupIdAndArtifactId ` to manage dependency group and artifact identifiers to facilitate the updating of dependency group
refactor file path handling in IndexingJob . java and add validation for segment paths in SegmentChecker . java to enhance code clarity and ensure
updated comparison operator from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure correct
refactor PreprocessorDelegate to use memoized Supplier for replacing paths and source paths to improve performance by reducing repetitive code and
rename JsonExamples class to Examples and update package - info . java to improve clarity and organization of the codebase
added debug logging statements in ViewExtractor . java to improve traceability and debugging of the extraction process
refactor FindsByLinkText class to improve code readability and maintainability
added a new Main class to facilitate Java oop entry point hit detection in the codebase
fix concurrentmodificationexception in sipregistrar connection .
removed redundant continue statements in NativeScanner . java to improve code clarity and maintainability
changed package and import statements from ` net . pms . test ` to ` net . pms . configuration ` in ` RendererConfigurationTest . java
replaced the usage of ` ImmutableSet . Builder ` with a ` Supplier < ImmutableList < BuildRule > > ` for dependency resolution to improve
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` for remoteContainsResults in ` DistBuildArtifactCacheImpl . java `
added charset handling to metadata in ExtractingDocumentLoader to ensure compliance with content encoding requirements
updated SQL insert statements to use parameterized statements for username and domain to enhance readability and maintainability of the code
added a null check for slot in WindowListener . java to prevent potential NullPointerExceptions when slot is - 1
add -- ignore - transitive - repositories option to maven cli
removed duplicate declaration of backgroundJobManager in ContactsPreferenceActivity . java to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features
added null check before closing selection in NIOTransport . java to prevent potential NullPointerException when closing selection
added a condition to break the loop if match start and end indices match to improve performance by avoiding unnecessary processing
added a value of " server . port = 0 " to the IntegrationTest annotation in MvcITest . java to specify that the server ' s port
added a new function ` UDFReverse ` and registered it in ` FunctionRegistry ` to enable the implementation of the " reverse " operator in the Hive UDF
updated method calls from ` getContextPathEncoded ( ) ` to ` getRequestContextPath ( ) ` across multiple classes to improve clarity and consistency
refactor Tracer class to improve code readability and maintainability
[ hotfix ] [ test ] ignore flaky test in rocksdbstatebackendreaderkeyedstateitcase
replaced specific JUnit assertions with wildcard imports in XMLChangeLogParserTest . java to simplify import statements and improve code readability
added synchronization to the buffer clearing process in StarTreeRecordStoreCircularBufferImpl and implemented a clear method in TestStarTreeRecordStoreCircularBufferImpl to
updated forecast values from 0 to 60 and 24 in OpenWeatherMapOneCallHandler . java to adjust forecast parameters for better accuracy
fix flakiness in abstractpageoperationtemplatetest
updated RemoteTargetGluer and FloatingHeaderView to handle split task IDs and added fading functionality to improve user experience by ensuring split task IDs are
refactor ` parseRerunFile ` method to return a ` Stream < FeatureWithLines > ` instead of a ` Collection < Feature
add item to the botania creative tab so they can be use in the creative .
updated assertEquals calls to use ' 2 ' instead of ' 2 ' in TestRadioButtons . java to ensure correct comparison of item and options sizes
added support for file sizes in the RCFileCat and added a method to retrieve the number of rows in the RCFile class to enhance file size
refactor multiple Java files to improve code organization and readability
improve error message when mxnet be close
refactor BlobServer class to improve code readability and maintainability
fixed false positive for unused private constructor
updated variable names from lexicalScope to lexScope in Global . java for consistency to improve code readability and maintainability
added a new test method ` testAutoStartup ` to the ` InboundChannelAdapterParserTests ` class to ensure that the ` sftpAutoStartup
added a ` getLevel ( ) ` method to ` Node ` , ` getRoot ( ) ` , and ` setChildBoundables ( ArrayList
refactor version parsing logic to handle minor versioning more robustly
do n ' t write tag if item have no tag
added parseDateTimeStringToEpochMillis method to DateTimePatternHandler and new fromDateTime function to DateTimeFunctions to handle date strings with epoch time zone support
hhh - 17100 : fix nullpointerexception in stringwrapper
refactor Log4j2ConfiguratorServlet to improve code readability and maintainability
replaced instantiation of HiveException and AuthorizationException with direct return statements to simplify code and improve readability by reducing redundancy
updated CGoCompileStep to join the command prefix and added a new test for handling Cxx prebuilt dependencies in GoBinaryIntegrationTest to ensure proper
fix : allow builder package to be editable
removed the @ Override annotation from mmm Only . java and ppp Only . java files
increased the timeout duration for HTTP connections to improve connection stability by allowing a longer wait time
added configurable attributes for " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _ node _ parse
simonstewart : make the selenium server more flexible by enabling / disabling trace
removed the @ Singleton annotation from ApplicationController . java to streamline the application controller functionality
updated username retrieval in ShareActivity to use OwnCloudAccount ' s display name if available to enhance account handling by prioritizing display names
added imports for BatchStatus and BatchStatus . PAUSED , and implemented a test for resuming a paused job execution in SimpleJobLauncherTests to ensure
added a null check for cacheConfig before joining parameters in HttpSyncDataService . java to prevent potential NullPointerException when cacheConfig is null
danielwagnerhall : make localnode and dockersession package - private
fix compilationunitcontext . getqualifiedname ( ) to use default package name
pdfbox - 2852 , pdfbox - 2852 : use non sequential parser instead of manual parser
mahout - 1181 : fix test distributed lanczos solver test to work again
refactor HttpServerTestBase class to improve code readability and maintainability
refactor test assertions in PortletApplicationMapTest to use a more descriptive variable name to improve code readability and maintainability by using
added tests for dynamoDbIgnoreNulls and nested bean lists in BeanTableSchemaTest . java and NestedBeanIgnoreNulls . java to ensure
add spring boot auto configuration for spring boot 3.0 +
fix infinite loop in indicator . todouble ( )
added multiple overloaded ` execInContainerWithUser ` methods to the ` ContainerState ` and ` ExecInContainerPattern ` classes to enhance
updated WebSocket message handling logic in NettyWebSocket . java to improve clarity and ensure correct processing of WebSocket listeners
simonstewart : add more test for semgrex with negated attribute
added a broadcast intent to clear the pul - unread state in HomeFragment to enhance user experience by preventing unintended actions
removed conditional logic for setting pre - gingerbread state in TouchImageView . java to simplify the code by directly assigning overScroller as a new variable
add a flush ( ) method to ensure that data will be flush when a bean be destroy .
camel - 16400 : camel - jbang - allow to veto camelcontext in case of vetoed exception .
added ` FloatingActionButton ` and ` MainFab ` for managing floating actions in ` ShareActivity ` to enhance user experience by allowing
added a new ` InlineParslet ` class and modified ` EMPTY _ LIST ` initialization in ` ToDateTokenizer . java ` , and
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated German and Swedish error messages from " det " to " toppn " in multiple files to improve clarity and
updated server binding logic and added server checks in AuthenticatorActivity . java to ensure proper handling of server state and prevent unintended actions
updated Position constructor to use node ' s end line instead of node ' s column to ensure accurate positioning by referencing line information
added ` waitFor ( ) ` method and ` waitFor ( ) ` method to ` ManagedThread ` and ` CxxPreprocessAndCompileStep ` classes
added a boolean field ` requireAllRepositorySources ` in ` PrincipalAttributesProperties ` , implemented ` mergePersonAttributes ` in ` CoreAuthentication
increase map eviction timeout from 12 second to 2 minute ( # 18709 )
added support for enabling SSL protocols in NettyWebServer and ServerBasicConfig to enhance security by allowing configuration of SSL protocols
replaced ` AtomicBoolean ` with ` AtomicReference ` and introduced a new ` Wrapper ` class for setting objects to improve concurrency handling to enhance performance and
added a null check for property in QueryDslMongoRepository and implemented a test for empty path expression in SpringDataMongodbSerializerUnitTests to
updated assertions in RoundRectBorderTest to check for equality of RoundRectBorder ' s border attributes to ensure that RoundRectBorder ' s border properties are
fix bft acceptance test to handle empty node
[ java ] remove paralleltest for now
updated CountDownLatch initialization and added validation check for sign length in PrecompiledContracts . java to ensure proper handling of sign inputs and improve error logging
updated condition to check for non - windows windows to ensure proper handling of cases where the window state is not initialized
morecollectors : rename maxn ( ) to greatest ( )
added null checks and improved WebSocket client handling in multiple classes to enhance code robustness and prevent potential NullPointerExceptions
added validation for latitude and longitude in GeoPointField . java to ensure that latitude and longitude are valid to prevent runtime errors
refactor workflow file handling by replacing ` saveDraft ` and ` saveDraft ` methods with ` getWorkflowDrafFileName ` and ` get
refactor ResponderId class to improve code readability and maintainability
updated ` getTableDocument ` method to accept a ` withDependents ` parameter for better control over table document relationships to enhance flexibility in handling table
added a dialog to send a confirmation dialog when there are consecutive uploads without coordinates in the upload process to improve user experience by preventing unnecessary uploads
added caching for profile data in ProfileResources . java to improve performance by reducing redundant profile retrieval
updated JpaMetamodelEntityInformation to handle non - primitive and non - wrapper property values more effectively to improve robustness by ensuring proper
added index creation and verification tests in UpgradeIT . java and updated method signatures in ConnectionQueryServicesImpl . java and UpgradeUtil . java to
dropwizard - jersey - add support for register default exception mapper
bugfix : do n ' t show ` ` store field ' ' in entry editor
added an ` ownerPtr ` parameter to the ` nativeCreateNSWindow ` method and updated its usage in the ` nativeCreateNSWindow ` method to
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME to ensure consistency in database schema naming conventions
added support for a new stubbing mechanism in the game .
fixed - redissoncodec . getbuckets ( string ) method throw npe if redissoncodec . getbuckets ( string ) return null . # 3
add findunrelatedtypesingenericcontainer annotation to findunrelatedtypesingenericcontainer
refactor back animation handling in LauncherBackAnimationController to improve clarity and maintainability of back progress animation logic
changed the ` _ initialPageNo ` variable from final to non - final and added logic to handle initial page limits to ensure proper initialization of content limits
fix crc32 calculation in jedisclusterCRC16 ( # 1103 )
added comment matching logic and corresponding test cases in FormattedSqlChangeLogParser and FormattedSqlChangeLogParserTest to handle comments in SQL change log
replaced direct instantiation of JarArchiver with a dedicated variable to improve code readability and maintainability
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by using a more specific exception type
refactor aggregation logic in TSServiceImpl . java and add a multiAggregationTest method in DaemonTest . java to improve code clarity and
added support for handling unsigned byte formats and byte arrays in GwtGL20 . java to ensure proper handling of pixel data types in WebGL rendering
added a new test method ` testVarDump ` and modified method declarations in ` OutputMemoryTest ` , ` testPrintR ` , and ` Print
replaced ` UnmodifiableClassException ` with a ` Throwable ` for better error handling in ` InlineBytecodeGenerator . java ` to improve clarity and
[ gr - 27820 ] add trace for class initialization .
( chore ) camel - broker : fix typo in basebrokerrequesthandler
replaced Google Guava cache with Caffeine for loading topic routes to improve performance and reduce dependencies on external libraries
disable read - only by default for mbtiles
updated the INVALID _ SOURCE _ TARGET _ RELEASE regex to allow for additional valid targets to enhance flexibility in matching invalid source target releases
updated the URI string construction in DetailFragment . java to include a link if the location intent is not available to enhance user experience by providing a
added a null check for parameterContextDto ' s getInheritedParameterContexts ( ) before collecting referenced IDs to avoid potential NullPointerException when accessing referenced IDs
refactor ClassLoader class to improve code readability and maintainability
added a method to set origin response headers in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure proper handling of HTTP headers in the
added a new profile setting drawer item in GpsMainActivity . java to enhance user interface functionality for profile navigation
add jasper configuration to allow tld validation
danielwagnerhall : fixing firefox driver to work with javascript
added a maxRows variable and modified fetch size handling in IoTDBStatement . java to ensure fetch size does not exceed defined limits and improve error handling
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] do n ' t count optimizable filter in sql
added node and mouse - left event handling in StandardVizEventManager to enable node selection functionality in the visualization process
replaced direct calls to ` Integer . valueOf ` with a new ` zeroBuffer ` method in ` ManyToOneRingBuffer ` to improve code readability and
[ drools - 748 ] add getter / setter for xorgroup in terminalnode
pdfbox - 4892 : remove dead code , a suggest by valerybokov
refactor SourcePathResolver to simplify path retrieval logic to improve code readability and maintainability by reducing redundancy
fix dstu2 error when attribute value do not match
updated WebsocketRoutingFilter to use a static method for handling encoded WebSocket URLs to improve code readability and maintainability by reducing repet
rename external test suite configs to be more generic .
refactor CxxPlatform retrieval logic into a separate method to improve code readability and maintainability by reducing duplication
added imports for ` IndexReader ` , ` Searchable ` , ` Similarity ` , and ` Field ` in ` Token . java ` , `
added null check for the current element in ConcurrentLinkedStack and improved test methods in ConcurrentLinkedStackTest to enhance robustness by handling potential null
added ` isMatched ( ) ` and ` setMatched ( ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes to
added a null check for mDirectories before accessing its elements to prevent potential NullPointerException when mDirectories is null
updated gesture handling logic in RecentsView . java to ensure correct behavior when overview state is not enabled
added multiple package - info . java files for various Lucene packages to enhance clarity and organization of the codebase
added localization support for the visible auto leveler panel in AutoLevelerTopComponent to enhance user experience by providing context - sensitive information
added postOptimize callback handling in DirectUpdateHandler and DirectUpdateHandler2 classes to enable post - optimization functionality for Solr updates
updated the initialization of the Deflater and Deflater methods to use a boolean parameter to improve compression handling and ensure proper padding of compressed data
added a check for user data in Shaderc . java to ensure only valid user data is processed
added a check for local meta store before retrying retries in RetryingMetaStoreClient . java to ensure retry logic only applies to local replicas
updated import statements and added checks for TimeoutException and ConnectionClosedException in HeliosSoloLogService . java to enhance error handling to ensure
refactor Subject class to improve code readability and maintainability
use a strong reference type for the typemap to avoid oome .
updated color distance calculation in HSSFPalette and added a test for finding similar colors in TestHSSFPalette to improve accuracy of color
doc : generate sample code in the java microgenerator ( # 669 )
danielwagnerhall : add test for element with numeric id .
added flags parameter to the registerReceiver method across multiple classes to enable support for flags during receiver registration
fix flaky ffmpeg test
updated OggInputStream and OpenALMusic classes to manage input stream handling to ensure proper resource management and prevent memory leaks to improve memory management and prevent potential
added a constant for the response was null in AssertionResult . java to improve code readability and maintainability by using a named constant
[ te ] [ te ] do n ' t show anomaly failure count if there be no warning
refactored Toast handling in BaseActivity and DetailActivity to use a dedicated showToast method to improve code readability and maintainability by
updated the request creation in TracingFeignClient to include the HTTP method and request template to enhance the request handling by incorporating the request
updated LDAP referral handling by changing the referral scheme from follow - scheme to throw and improving error handling for invalid names to enhance
refactor code to use a new retain method for handling multiple rSockets to improve code readability and maintainability by reducing duplication
rename ` AdapterViewTest ` to ` ListViewTest ` and add a test for item click functionality in ` DroidSugarAndroidTestRunner ` to improve
[ hotfix ] [ test ] remove unused configuration from checkpointfailuremanageritcase
remove genericitemuiprovider since it be not use anymore
simonstewart : add the selectobject method to the sip comm dialog so that it ' s easy to access the selected object from the dialog
added @ Isolated annotation to MetaInfConfigurationTest . java to ensure static methods of FileSystemPool are accessed
added a line to set the server connector ' s host address to HTTP _ INFO . bindAddress to ensure the server connects to the correct HTTP server
updated access token and refresh token validity settings based on the heart mode configuration to improve token management for heart mode and ensure appropriate refresh tokens
added a ` CloverInstrumentationFilter ` class to check for candidate classes in a class hierarchy to ensure that only valid classes annotated with ` __ CLR `
added support for the Smartmi Evaporative Humidifier ( CB2 ) device in MiIoDevices and updated the write method in
fix plausibletobreak to not break anything
changed the access modifier of setScrollRangeDelta method from package - private to public to allow access to the method from other classes
ambari - 20542 . ambari should log error if ambari do n ' t have any repository .
updated the condition to check for missing values to ensure that missing values are considered in the equality check
added Serializable interface to RuleAdministratorImpl . java to enable serialization support for RuleAdministrator instances
added support for wildcard origin patterns in CrossOriginFilter to enhance flexibility in handling allowed origin patterns
updated file paths in BaseG3dHudTest and NewModelTest to replace " g3d " with " g3d / knight "
added error logging for solidified position updates in Manager . java to improve error handling and ensure robustness against negative solidified positions
updated null handling in ExecResult and refactored test cases in TestServerCustomProtocol to improve null safety and enhance test coverage for null values
added a method ` hasAccess ` to check for access permissions based on remote user and request context to enhance security by ensuring that only authorized users can
replaced the ` writeTo ` method with ` getStubClassBytes ` in the ` ClassMirror ` and ` StubJar ` classes to simplify the
added a TextView to display the internal link text based on whether the file is a folder or a regular file to enhance user experience by providing context -
updated the assertion to use Locale . ENGLISH instead of String . format for accuracy to ensure consistent formatting across different locales
updated the condition to check if the day of the week is not equal to the day of the week in ModelZooTest . java to ensure that
removed input hiding logic in AllAppsContainerView and added logging for keyboard closure in LauncherAllAppsContainerView to improve user experience by ensuring IME
fix test to use inmemory event store
refactor directory handling in BsdFileStore . java to streamline directory retrieval and improve error handling to enhance reliability and maintainability of directory
add test case for issue # 1599 add test case
added ' x ' and ' z ' parameters to the spawn command to allow for optional parameters in the spawn command to enhance functionality by allowing users to
updated content area width and height calculations in Folder . java to improve layout consistency by using a minimum value of 5
make graalcompilertest . addmethod ( ) non - final
replace ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with Windows systems
added plugin checks in UpgradeCheckRegistry . java and reformatted the addColumnsToUpgradeTable method in UpgradeCatalog280 . java to enhance plugin validation
refactor Environment class to improve code readability and maintainability
added import for LuceneTestCase and annotated the test class with BadApple to address issue SOLR - 7421 related to bug tracking
updated the file system separator handling in CodenameOneImplementation . java and removed a warning log in HashtableContent . java to ensure correct concatenation of file paths
replaced FLAG _ IGNORE _ HDMV _ DTS _ STREAM with FLAG _ ENABLE _ HDMV _ DTS _ AUDIO _ STREAMS
replaced specific resource accessor imports with a wildcard import and simplified resource access to improve code readability and maintainability by reducing redundancy
added Security . setProperty ( " jdk . tls . disabledAlgorithms " , " " ) in ComHostnameVerifier . java and JavaxHostnameVerifier
updated ` @ Value . Immutable ` annotation and replaced ` CxxDeps . EMPTY ` with ` CxxDeps . of ( ) ` in multiple files
rename ` expectedDirectory ` and ` actualDirectory ` lists to ` actualStubDirectory ` and ` actualStubDirectory ` , respectively , and update
reformatted the initialization of the resizeThreshold variable in Int2ObjectHashMap . java to improve code readability and maintainability
updated folder name hint logic to use a string resource instead of an empty string to improve clarity and consistency in handling folder names
updated ` loadClientByClientId ` method calls to include a ` " uaa " ` parameter to ensure compatibility with the latest version of the UAA
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to methods for better encapsulation
updated log messages in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to include the isClosed state to enhance clarity of log output regarding
refactor MimetypeIconUtil class to improve code readability and maintainability
rename method names from " supportsViewFor " to " supportsViewsFor " across multiple provider classes to improve clarity and consistency in naming conventions
added a test for negated instanceof in UnwrapParenthesesTest . java and updated logic in UnwrapParentheses . java to ensure correct handling of
added a built flag and modified the teleport method in the Location class to ensure that the location object is only created when it does not already exist
replaced Base64 encoding with Base64Utils for modulus and exponent in TokenKeyEndpoint to enhance security by ensuring URLs - safe strings are processed correctly
updated import statements in TranslatorManagerHelper . java to include ProjectComponent and Statistics reporting to enhance project - specific functionality and ensure accurate statistics reporting
rename the annotation ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity regarding the purpose of the annotation ' s purpose
added null check for the getId ( ) method in ObjectIdentityImpl . java to ensure that the result is not null to prevent potential NullPointerExceptions
updated setUpRevampedTweet method to accept a boolean parameter indicating whether the tweet should be muffled to enhance user experience by allowing
added conditional logic to retrieve verified text based on user theme settings to enhance user experience by allowing dynamic verification text based on theme settings
refactor AbucoinsDigest to use instance variable instead of static variable to improve memory efficiency and clarity in the code
camel - 16400 : camel - mongodb - add autowired on mongodb component so it can be use by spring boot
[ geot - 5892 ] add support for last - index attribute in complex feature
handle corrupted column statistic when alter hive metastore
added UserGroupInformation . isSecurityEnabled ( ) method to AuthParams . java to enhance security checks for user authentication
refactor multiple classes to improve code organization to enhance maintainability and readability of the codebase
[ geos - 10641 ] escape contact email in geoserver home page
[ terasology ] refactored terasologyengine . enrichreflectionswithsubsensors ( ) to be more generic
maf join modeller now use the number of feature
bugfix : do n ' t crash when input string be empty
[ hotfix ] fix checkstyle violation in singlenodekaf ResumeStrategy
updated playback state constants to use PlaybackStateCompat for consistency to improve code readability and maintainability
updated IgnitionConfigurationHandler to handle " automatic " separation and added ignition event handling in MotorMountHandler and AxialStage to
tika - 4071 -- add check for ascii name length in msownerfileparser .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to non - deterministic behavior on J
refactor lock file creation to use a dedicated method to improve code readability and maintainability
updated sync interval settings for shared preferences from version 5.3 to version 5.3 _ 1 in UpdateUtils . java to ensure compatibility with the latest
added a check for FEDERATION _ USER in AuthenticationManager to return null if the username equals the FEDERATION _ USER to ensure proper handling of
truffleobject : do n ' t execute method that be not an instance of truffleobject .
replaced ` Collectors . toList ( ) ` with ` toList ( ) ` for filtering lines in ` JakartaClientShutdownWithServer
do n ' t emit error message when filter do n ' t exist
refactor Collection and Map classes to improve code organization and readability
removed unused import of Version in CreateIndexTask . java to clean up the code and improve readability
added schema handling for Oracle and AbstractDb2 databases in MissingPrimaryKeyChangeGenerator . java to ensure proper schema management for missing primary keys in the
updated exception handling in MsckOperation and added a new test for invalid partition names in TestMSCKRepairOnAcid to improve error management and ensure
[ hotfix ] [ kafka ] retry kafka transaction if already commit
[ type : refactor ] remove ReceiptHandle from ForwardMessageToDLQActivity and update usage of it in DefaultGrpcMessingActivity
added a ` withServices ` method to ` DockerComposeContainer ` and modified the ` runWithCompose ` method in ` DockerComposeContainer ` to allow
fix : avoid concurrent modification exception
removed HtmlCleaner imports and added stack trace printing in FeedParser . java to streamline code and improve error handling
removed conditional check for AppsCustomizePagedView to simplify the null check for mAppsCustomizeContent
fix ( core ) : use double instead of int for double
added a new file ` bug4150029 . java ` that implements a temporary directory and file chooser to demonstrate the use of a
added a boolean flag ` isSparkConfigUpdated ` to manage Spark configuration updates to ensure proper resource management and prevent memory leaks
added a longPressIndicator method to AppIcon and AppIconMenuItem classes and modified Launchable and Workspace classes to include it to provide a default long press
[ geot - 6231 ] wkbwriter should not write empty polygon ( e . g . empty polygon )
refactor UnflavoredBuildTarget construction to use a builder pattern to improve flexibility in building UnflavoredBuildTarget instances
added a new file MultiplyByMaxInt . java that implements a loop that performs the multiplication operation on an integer variable to facilitate testing of multiplication operations
added a check to enable the drawer indicator based on the current file state in the file display activity to ensure the drawer indicator reflects the current file state
lucene - 4892 : move testramdirectory to the right package
replaced instances of FixedBitSet with BitSet in Automaton and Operations classes to simplify code and improve performance by using a more efficient BitSet implementation
drools - 4892 dmn : improve error message when there be no expression for a give name
replaced ` @ ContainedBy ( AC . class ) ` with ` @ Repeatable ( DC . class ) ` in multiple test files
updated the message for the file sending process to display the duration of the file sending process
updated class name handling in OpenMBeanAttributeInfoSupport . java to ensure proper package access validation during class loading
do n ' t throw illegalargumentexception if response count be less than 1
updated freeSize calculation in StoreDirect . java to improve accuracy of memory allocation
modified the areTouchesDisabled method to accept a MotionEvent parameter and updated related logic to enhance touch event handling by allowing touch events to be disabled
replace SslContextFactory with SslContextFactory . Server across multiple server classes to ensure compatibility with the latest SSL context management practices
removed the PrivilegedSocket class and simplified socket creation in PG _ Stream . java to streamline code by eliminating unnecessary privilege handling
refactor InputTest class to improve code readability and maintainability
updated ` finishRecentsAnimationOnTasksAppeared ` to accept a ` null ` parameter across multiple classes to enhance animation handling by allowing
removed unused imports and added null check for curLatLng before adding to map to streamline code and avoid potential NullPointerExceptions
updated client secret removal to use ` clientDetailsService . retrieve ` instead of ` removeSecret ( client ) ` to ensure consistent retrieval of client secrets
updated SQL query formatting and setup methods in SqlSourceBuilderTest . java to improve readability and maintainability of SQL queries
http : / / issues . apache . org / jira / browse / amq - 4892 - fix amq - 4893
added tests for handling unknown columnKey and rowKey in SlidingGanttCategoryDataset to ensure proper exception handling to improve test coverage and ensure
updated filtering logic in ShenyuTrieRuleListener . java and added return statements in ZookeeperSyncDataService . java to enhance null safety and improve
lightcontrol : rename controldir enum for clarity
added @ SuppressWarnings ( " UnusedAssignment " ) and @ SuppressWarnings ( " UnusedAssignment " ) annotations , and modified stack handling logic in StdErr
replaced direct calls to ` context . publishEvent ( e ) ` with a dedicated ` getContext ( ) ` method in ` HttpSessionEventPublisher ` to
added a semantic exception for syntax changes in CREATE CQ statement to ensure compatibility with v0.14 syntax
[ hotfix ] fix checkstyle violation in flinkio . sink
refactor custom simplification handling in CanonicalizerPhase . java to improve clarity and maintainability of the code
updated the method call to include the context parameter when setting the file type icon to ensure that the file icon is accessed in the correct context
updated the ` readIdentifierWithSchema ( ) ` method to include the schema name parameter in the ` readIdentifierWithSchema ( ) ` method to ensure
[ beam - 8470 ] support bigquery timestamp field in bigquery ui ( # 20513 )
added ` findViewWithTag ` methods to ` ShadowView ` , ` ShadowViewGroup ` , and ` ViewGroupTest ` classes to enhance
refactor enumeration usage to use generics for improved type safety to enhance code readability and prevent potential ClassCastException
removed unused import of PColumnFamily in IndexTool . java to clean up the code and improve readability
added new constants for JSON and JSON _ CREATOR in DocAnnotationConstants and updated method logic in SpringBootDocBuildTemplate and JavaClassUtil to en
[ gr - 27820 ] only include jar resource in the classpath .
updated CUDA _ R _ 16F , CUDA _ C _ 32F , CUDA _ R _ 64F , and CUDA _ C _ 8
refactor ResourceLoader class to handle multiple resource directories to improve resource loading flexibility by allowing multiple directory names for layout files
refactor getAttachedFace method in BlockRedstoneTorch to utilize SimpleAttachableMaterialData for better type checking to improve code clarity and
added support for VARBINARY data type in RelToStageConverter
removed import of DateHelper from NoteAdapter . java to streamline dependencies and improve code clarity
updated backup message handling and improved error messaging in Backup . java and Captions . java to enhance user experience by providing clearer
g3d - 195 : move element to relative position ( for ie )
updated file creation logic in ShadowParcelFileDescriptor . java to simplify file handling by removing file deletion checks
use addfirst ( ) instead of offer ( ) in stackbasedsecuritycontextholderstrategy to preserve order
fix bug in boolean inversion test
fixed bug in x = = y when x = = 0
removed the static final TYPE STRING _ ARRAY from TypeFactory . java to simplify type handling for String arrays
refactor AllAppsContainerView and LauncherAllAppsContainerView to encapsulate keyboard dismissal logic and improve logging consistency to enhance code
force bit density to fix network issue . close # 851
updated assertions in TimelineMetricCacheSizingTest and modified cache management in TimelineMetricCacheTest to enhance test clarity and ensure proper cache management
cache max texture size for performance optimization .
[ java ] call trystoplogrecording ( ) in the correct place .
added a condition to initialize startPosn when isInTransform is true to ensure proper handling of positioning in the semantic analysis logic
added a method to check if star trees should be skipped in the query context to enhance query optimization by allowing skipping of star trees based on
added a ` lockNearbyView ` flag and refactored ` refreshView ` and ` setupPlaceList ` methods in ` NearbyActivity
add convenience method for maptransformers that take a map .
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added support for loading and retrieving launcher widget information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget information management for better user experience
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector ` and updated method signatures accordingly to align with the new event handling mechanism
added methods to retrieve calling process ID and UID in ShadowBinder to enable testing of calling process identification in Robolectric
refactor Expect class to use static fields and improve null safety to enhance code clarity and maintainability by eliminating dependency on AutoValue
remove warn log for unsupported message
updated variable assignments for width and height in ImageReplacedElement . java to ensure proper scaling of elements based on their dimensions
added handling for ' \ t ' and ' \ n ' in CoreMarkdownNodeRenderer . java and updated escape handling in MarkdownWriter . java to improve
refactor password handling in SharePasswordDialogFragment to use a dedicated method for setting password to improve code readability and maintainability by consolidating password
refactor IoUtil to use a static class for mapping and unmapping methods to improve code organization and maintainability by reducing repetitive
updated method visibility from public to package - private for several test methods in AbstractAssert _ describedAs _ printed _ to _ console _ Test .
added new keytab options and descriptions in LlapOptionsProcessor . java to enhance configuration options for slider keytab settings
updated ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation control to enhance animation control and
added a mechanism to bind loader completion in LauncherModel to ensure tasks are executed only once during the workspace loading process
changed data and isFinished to be final in NodeManageMemoryMergeOperator , NodePathsConvertOperator , and NodePathsCountOperator , and updated
added a new parameter ` guid ` to the ` add ` method in ` IssueInterface ` and updated related methods in ` ValidationReport ` to
added a method to safely retrieve the cipher provider name and improved exception handling in RSAClientKeyExchange . java to enhance error reporting and provide
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration
changed log level from WARNING to OFF in CCJSqlParserUtil . java to disable logging during specific scenarios
removed conditional logic for appending output in AggregateLifeCycle . java to streamline output formatting for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow access to BITMAP _ WIDTH from other classes
removed the @ Ignore annotation from CovariantOverrideTest . java to enable testing of covariant overrides in the testing framework
pdfbox - 4892 : simplify code , a suggest by valerybokov
( chore ) camel - main - maven - plugin : refactor modelhelper to not use reflection
added space minimum and maximum settings for the X - axis in ScatterChart to ensure the X - axis starts at a defined position
corrected the syntax for " as INTERVAL " in ExpressionStringBuilder . java to ensure proper formatting of the interval string
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` StateManager ` classes
added a check for the existence of " UTF8 " in the properties file to ensure that a valid UTF8 key is provided to avoid runtime errors
updated print statements in TestReproduceMessage . java and added seed annotations in LuceneTestCase . java to improve clarity of output messages and enhance
added logging for long - press events on AllApps items in StatsLogManager and ItemLongClickListener to enhance user interaction tracking for analytics
added null check for log in StoreWAL . java and created a new test case for double commit functionality in Issue112Test . java to ensure data integrity
added a condition to conditionally display sector land information based on the rules for sector land information display
[ hotfix ] fix unchecked cast in pojoseruntimeinfo
refactor Enum class to improve code readability and maintainability
updated ` buildNearbyRandom ` method to accept a ` randomSelection ` parameter and added validation checks for distribution parameters in multiple nearby selection classes to
remove temporarycache . getlastupdateatfixedrate ( ) from temporarycache and use it instead .
do n ' t show the sql view if we do n ' t need
initialized _ availability to UNAVAILABLE in ContextHandler . java to ensure availability is set to UNAVAILABLE to avoid potential null pointer exceptions
updated ` fetchInvDataMsgHandler ` , ` PbftDataSyncHandler ` , ` SyncService ` , and ` PeerConnection `
feat : update grpc _ service _ config , add doc
replaced ` _ freeSpaceReclaimDisabled ` with ` _ freeSpaceReclaimQ ` and modified the ` freeSpaceReclaimDisabled ` method to
made KDC _ OPT _ PROXIABLE and KDC _ OPT _ RENEWABLE _ OK constants static final and updated references in K
removed redundant assignment of writer in Json . java to streamline code and ensure writer is set to null
removed unnecessary whitespace in ProfilePager . java to improve code readability and maintain consistency in formatting
rename the method ` paintBackground ` to ` paintComponentBackground ` in the ` Slider ` class to improve clarity regarding the purpose of the method
added a method ` valueFromClassConstant ` to retrieve property values from a class constant to enhance property configuration flexibility for object value constants
log error when kafka service can not be initialize
replaced ` Sets . newHashSet ( ) ` with ` ImmutableSet ( ) ` for ` RESOURCES _ TO _ ALWAYS _ ACQUIRE `
updated channel name handling and logging in MessageBus and EndpointParser classes to improve clarity and consistency in channel configuration handling
added keyword handling in HTMLDocument . java and implemented a new test for index keywords in TestDemo . java to enhance document indexing capabilities and ensure correct
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added a conditional check before initializing _ addresses to ensure only valid InetSocketAddress instances are added to the list
updated the instantiation of CorrespondenceSubclassToFactoryCall to use the correct class reference to improve clarity and maintainability of the test code
refactor Builder class to improve code readability and maintainability
[ isbn - to - bibtex ] fix isbn - to - bibtex error message
increase keep - alive timeout to 10 second .
added a null check for the text variable before accessing its length in TextField . java to prevent potential NullPointerException when the text variable is null
add a new option to simplify the model
added line trimming in SuffixURLFilter . java to ensure clean input by removing unnecessary whitespace
added a condition to return early if the player is in Godmode to optimize performance by avoiding unnecessary processing when not in Godmode
ggb - 2892 disable checkboxes / text input dialog when feature flag be set
updated constructors in LinkedHashMapCache and BoundedLinkedHashMap to include an accessOrder parameter to enhance flexibility in cache initialization
removed redundant line breaks in ChannelEndPoint . java to improve code readability and maintainability
added null check for keyIndex and adjusted validation logic in FixAcidKeyIndex . java to ensure proper handling of null keys and prevent potential
updated exception handling to use Locale . ROOT for formatting error messages in DirectUpdateHandler2 . java to ensure consistent error handling across different locales
update canonicalizerphase to use the new guardingnode .
do n ' t reach a bci if there be no successor
added get getClassificationDisagreement ( ) method to AbstractCloud and DBCloud classes , and updated variance calculations in ViewFilter to improve classification accuracy to ensure
removed unnecessary calls to ` BuildTarget . copyOf ` in multiple Java files to simplify code and improve readability by eliminating redundant calls
refactor SqlRunner class to improve code readability and maintainability
changed data types of ` date _ taken ` and ` subFolders ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java
renamed ` knownApis ` to ` knownSdks ` and updated related methods in ` DefaultSdkProvider ` and ` RobolectricTestRunner
change spinner type from progress indicator to confidence progress indicator .
updated header checks from " Cling / " to " UMS / " in RequestHandler and modified UPNPControl to utilize UMS /
fix infinite loop in blueprint when use iterator
updated CrowdfundingChatAdapter to handle different view types for message notifications to improve flexibility in displaying different message types based on user input
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in multiple library classes to ensure compatibility with ASCII encoding standards
sbarq , sbarq : sstarq : sstarq : sstarq : sstarq : sstarq : sstar
removed the ` canvas ` parameter from the ` insert ` method and refactored image handling in ` TexturePacker . java ` to simplify the
refactor ` getVisitors ( ) ` method in ` RefactorModule ` to use a new ` apply ` method for improved readability to
added methods to retrieve child elements by name in Xml . java to enhance functionality by allowing retrieval of child elements by name
updated HttpSolrServer to set the Content - Charset header correctly to ensure proper handling of character encoding in HTTP requests
added system UI controller flags and updated method signatures to use these flags to enhance UI state management by associating them with system UI controllers
removed the private field ` clientService ` from ` IntrospectingTokenService ` to simplify the code by eliminating unnecessary dependencies
enhanced error message in HiveRecordSet to include split path , offset , and length details to improve clarity of error reporting for better debugging
removed the ownerId field from NodeEntry class to streamline the code by eliminating unnecessary fields
cloudstack - 6892 : rename backupsnapshotsafertakingsnapshot to backupsnapshotaftertakingsnapshot
added score calculation in the merge method of TextFragment to ensure that the score is accurately represented in the merge operation
removed the private Digester field in Md4PasswordEncoder . java to streamline password encoding functionality
added validation to ensure maximumUnimprovedStepCount property is non - negative to prevent runtime exceptions
added a check to return early if no currently opened editors are present to improve performance by avoiding unnecessary processing when no editors are open
refactor bddmockito . verify ( ) and add test
updated classLoader initialization to use PathScanner ' s class loader to ensure compatibility with the current thread context class loader
updated ` sayHi2 ` method to return a ` CompletableFuture < String > ` instead of a ` String ` and added checks for instance type to improve
initialize test logger in abstractsplitbrainprotectiontest ( # 16400 )
added a null check for the logoutConfigurer before adding the filter in DefaultLoginPageConfigurer and ServerHttpSecurity to avoid potential NullPointer
[ giac ] make sure degree [ 0 ] = = 0 , not degree [ 0 ] = = 0
refactor DockerComposeContainer to use a centralized log consumer mechanism to improve code maintainability and reduce duplication in log handling
updated the parameter type of the testMapping method in StandardJavaTypeMappingTest . java from ResultSetMapping to Object to ensure compatibility with generic type parameters
removed unused imports from AmbariMetaInfoTest . java to streamline dependencies and improve code clarity
added a static method ` fromSupplier ` to create a ` ThrowingSupplier ` from a ` Supplier < T , E > ` to enhance
replace break statement with return statement in ConsoleActivity . java to ensure proper flow control
camel - 16400 : camel - platform - http should end the content length header when the body be a byte array
added methods to handle platform - specific file paths to improve compatibility across different operating systems
added a null check before processing authorization parameters to avoid potential NullPointerException when authorizationContext parameters are null
replaced ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ( ) ` and added a new method ` throwExceptionIfFail ( ) `
updated SDK version from " 4611349 " to " 4514284 " and added tests for stop functionality in ShadowTextToSpeech to ensure
store queue item in transactionlogkey to avoid npe
added support for enabling SQL without a profile in JdbcEnvironmentProperties and JdbcEnvironmentRepository to enhance flexibility in SQL configuration by allowing
added a try - finally block around the write method call in the ConnectHandler class to ensure the data variable is reset after writing to the server
fix eclipse compiler generics issue
updated date formatting to use ` calendar ` instead of ` date ` to ensure consistent date formatting across the application
updated the ` loadValue ` method in ` CachedThreadStatesGaugeSet ` and modified the ` getThreadInfo ` method in ` ThreadStatesGaugeSet
added a method ` prevTlogOnPrecommit ` to ` UpdateLog ` and modified sleep duration in ` LeaderTragicEventTest ` to
updated FastAsyncWorldEdit version from P2 - V6 to 1.17 in BukkitPlatform . java to incorporate new features and
updated file handling logic to ensure output directories exist before creating them to avoid potential null pointer exceptions
added a new method ` calculateNormalVector ` to ` ObjUtils ` and refactored the ` calculateNormalNewell ` method in ` Triang
updated method signatures in JdbcAuditService to use identityZoneId instead of IdentityZoneId to improve clarity and maintainability of the code
refactor SpanCollector class to improve code readability and maintainability
added a condition to check if the session manager has a valid session before proceeding to ensure that session information is only processed when the session manager exists
refactor TransactionIsolationLevel class to improve code readability and maintainability
corrected the spelling of " printLVgroups " to " printLogicalVolumegroups " in OshiController . java to improve code readability
added thread name logging to the TestSession class to improve debugging and traceability of thread usage
refactor CookieManager class to improve code readability and maintainability
replaced the manual creation of an ArrayList with a direct instantiation of a new ArrayList to simplify code and improve readability
added a new touch controller to the list in RecentsUiFactory to enhance user interaction with all apps functionality
refactor hotseat scaling logic in LauncherState and WorkspaceStateTransitionAnimation to improve clarity and maintainability of the code
added a check to exclude JUnitRule elements from stack trace filtering in DefaultStackTraceCleaner . java and a corresponding test case in StackTraceFilterTest
replaced direct buffer handling with direct byte array handling in MappedResizeableBuffer . java to improve memory management by using direct byte arrays instead of
added a balanceListener field and updated its initialization and usage to ensure proper management of balance events in the wallet service
modify color conversion logic in RealisticRenderer . java to ensure correct color representation based on edge mode
added a null check for httpClientResponse in HttpClientBeanPostProcessor . java to avoid potential NullPointerException when httpClientResponse is null
remove unnecessary patternutil . checkpattern ( )
updated last playback event timing logic in FullDetailsActivity . java to include additional logging for better debugging and monitoring of last playback events
added support for elliptic node in SpanishXMLTreeReader to handle multi - word lemmas correctly
added a condition to clear the " language " variable if the first character of the value is an empty string to ensure that the item ' s language is
updated ` ReactiveLoadBalancerClientFilter ` to use ` isSecure ( ) ` for setting ` overrideScheme ` based on server instance status to
( chore ) camel - core : use duplicate ( ) instead of duplicate ( )
remove final modifier from fullFilePathFromClassName method to allow it to be overridden
replaced custom Correspondence implementation with lambda expressions to simplify code and improve readability
updated references from ` isNonUSLangSupported ` to ` isNonENLangSupported ` in ` JRELocaleProviderAdapter . java `
remove unnecessary null check
minecraftforge / fml : use tessellator instead of tessellator for block render .
added a return statement in TxCacheDB . java to ensure proper termination of the transaction process
updated import statements from ` com . sun . xml . internal . ws . org . objectweb . asm ` to ` jdk . internal . org
refactor FastDictionary class to improve performance and readability of the code
fixed - nioconnection . close ( ) method be n ' t call if the session be close .
updated GROUND _ HIT , SIMULATION _ END , and SIMULATION _ END event types in FlightEventsTest . java and modified
[ beam - 8470 ] update protobuf to v1.26 . 0
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure namespace declaration is added correctly for the new element
[ # 7448 ] instructor : instructor : instructorfeedbackresultspageuitest : instructorfeedbackresultspageuitest
added a shortRules list and modified default rules initialization in DefaultPasswordValidator . java to improve password validation flexibility by allowing short sequence rules
added a new command class ` Command ` and refactored ` RemoteControlConfiguration ` and ` SeleniumDriverResourceHandler ` to use
[ hotfix ] [ test ] remove unused import
updated the thumbnail scaling argument format in DLNAMediaInfo . java to improve clarity and consistency in the code
remove speculative guard movement phase for now
added checks for authentication managers and disabled bean definitions in the AuthenticationManagerBeanDefinitionParser to ensure that only valid authentication managers are handled correctly
updated handling of forwarded host and server in ForwardedRequestCustomizer . java and added tests in ForwardedRequestCustomizerTest . java to
set the length of StringBuilder in ConsoleReader . java to ensure proper initialization of StringBuilder to prevent potential issues
changed allowedRoles and disallowedRoles from private to protected to allow subclass access to these roles
updated OpenIDE - Module - Specification - Version from 1.54 to 1.55 and adjusted version base values across multiple files to reflect the
hbase - 27875 add a configuration option to set the hbase server netty tl wrap size ( addendum )
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated imports and added unit tests for FixedLengthTokenizer to improve test coverage and ensure proper exception handling for incorrect length tokenization
refactor protocol binding handling in OpenSamlAuthenticationRequestFactory to use a dedicated method to improve code clarity and maintainability by centralizing
refactor DepthController to use AttachedSurfaceControl for applying SurfaceControl transactions to improve code readability and ensure proper transaction handling
use ` ` 2.5 . x ' ' instead of ` ` main ' ' for version number
updated action constants from WRITE to CREATE in AccessController . java to ensure correct handling of bulk load operations in the database operations
removed the size of unSeqMergeList from unSeqMergeList in TsFileManagement . java and updated measurement schemas from [ 0 ] to 9 to
camel - 14536 : fixed fileconverter to support fileinputstream .
added a login parameter to the DefaultShardManagerBuilder and implemented login handling in ShardManager to enhance flexibility in shard management based on user input
removed an unnecessary line break in DeleteGlobalRef method call to improve code readability
renamed the join table from " RegisteredServiceImplProperties " to " RegisteredService _ Props " to clarify the purpose of the
added a check for a marked completion before retrieving the response reference in HttpSender . java to ensure that the completion state is not modified before proceeding to
added isuserstudent check to feedback response
added permission checks for linked profiles in BMPImageReader . java to enhance security by preventing operations on non - Windows platforms
updated parameters for setSimpleCuboid calls in ClassicPlotManager . java to correct the positioning of theCuboid in the plot world
pmd : wait for pmd status when open package .
refactor gridPresenter initialization and add grid size handling in StdGridFragment . java to improve clarity and maintainability of grid presentation logic
updated return statements in ContributionsListFragment to return true instead of false to ensure correct functionality of the code
added a testSkipRange in DistinctPrefixFilterIT . java and modified scan filtering logic in BaseResultIterators . java to include limit handling to
pdfbox - 4892 : add test for acrobat checkbox group property
added a method to retrieve the last modified timestamp of a file in BlackBerryImplementation . java to enable retrieval of the last modified timestamp of a file
added a condition to check for " metaTable " property in table properties to enhance validation for metadata tables in Hive Iceberg storage handler
add ` ` select default currency ' ' popup for cash deposit form
changed catch block from IOException to Throwable in WriteFlusher . java to handle a broader range of error types
added a boolean flag ` mStartedEnterAnimation ` and modified the logic for notifying item range changes in ` IconRecentsView . java ` to
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to enable tracking of active key IDs in the configuration
rename sendmailaction to sendmailwith attachments to make it clear
made the ` isActive ` variable volatile to ensure thread safety during concurrent access
updated the ` isDesc ( ) ` method to use ` isAsc ( ) ` instead of ` isDesc ( ) ` in ` OrderByExpression
cast to charsequence to avoid npe
added a check for the OWNCLOUD _ APP _ NAME constant and updated the condition in DisplayUtils . java to ensure that the app is only
hbase - 27875 hbase master should not use secure hbase . rootdir . perms in kerberos
updated the method call from ` httpServletRequest . getLocale ( ) ` to ` httpServletResponse . getLocale ( ) ` in both ` Jakart
refactor Instant class to improve code readability and maintainability
updated the ` getStateFormat ` method to return a ` String ` instead of an ` int ` across multiple classes to ensure that the default state format is
updated logging statement to improve clarity of ticket granting logic to enhance readability and maintainability of the code
pdfbox - 2852 : add check for illegalargumentexception
reformatted conditional check for file name in AbstractFileResourceSet . java to improve code readability and maintainability
updated PluginParameterExpressionEvaluator to accept PathTranslator as a parameter to improve file path handling by aligning base directories with project structure
[ beam - 8470 ] add protobuf coder registration for bytebuffercoder .
added a false parameter to the JpaQueryParsingToken constructor in HqlQueryRenderer and a corresponding test case in HqlQueryRendererTests to ensure
updated the ` generateLaunchLugFromRASAeroRailGuide ` and ` generateRailButtonFromRASAeroRailGuide
removed the ` getNonceFactory ( ) ` method that always returns null in ` BitmexStreamingExchange . java ` to streamline the code by
( chore ) camel - mail : use placeholder instead of string concatenation
[ java ] update driver conductor test to use default timeouts .
changed the default value of ` initializeLoadedClasses ` from ` true ` to ` false ` in ` ScanSpec . java ` to disable loading of classes
added a call to grab focus on the search field in FullTextSearchPanel to improve user experience by ensuring the search field receives focus
fix npe in tlconnectionlogging
updated the assertion in StatementTest to check for random results to ensure the test accurately reflects the expected outcome of the result set
updated the assertion in TestSolrConfigHandler to include the server base URL to improve clarity of the failure message for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` for improved request handling in ` CsrfWebFilterTests . java ` to enhance test reliability
updated filtering logic in FilterResourcesStep . java to use Density enum for drawable filtering to improve clarity and maintainability of the filtering process
refactor UIID handling for ButtonGroup components to improve clarity and maintainability of UIID management
removed unnecessary import of DisplayMetrics and simplified rotation condition in RecentsAnimationDeviceState . java to improve code readability and maintainability
added two new test files , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , to
added import for LuceneTestCase and annotated the ReplicationFactorTest class with @ AwaitsFix to address issue SOLR - 6157 that requires
fixed - rfuture . get ( ) may throw npe if rfuture . get ( ) return null . # 3850
simplified the condition for updating credential needs in FileDownloader and FileUploader to improve code readability and maintainability
added a null check for the scanner before closing it to ensure proper resource management and prevent potential NullPointerExceptions
fix ( network ) : set default value of netmetricmanager : : connectionnum to zero
added a nonce parameter to the token in the TokenMvcMockTests class to ensure the test verifies the expected nonce value for the token
refactor multiple Java files related to ChartEditor and its components to improve code organization and maintainability
added formLayeredPane dimensions and layout settings to formLayeredPane to improve layout management for form components
added a method to calculate the vertical Y - coordinate of the component based on its owner ' s height to improve the accuracy of component positioning
updated database connection handling in ` SharedDatabaseLoginDialogView . java ` and ` SharedDatabaseLoginDialogView . java ` to return a boolean indicating success
updated DOCKER _ COMMAND references to use Platform class to improve code consistency and maintainability by centralizing Docker command handling
added a null check for ` is ` before reading input files in ` initializeParameters ( ) ` method to ensure robustness by handling cases where input files
updated drawLeaveBehind method to accept a customizable color for folder leave behind drawing to enhance user experience by allowing customizable color settings
show an error dialog when the canary version of android Studio do not match the version of android Studio .
api : fix npe when identityproxy table name be null
added support for enabling and disabling module persistence in StartArgs . java to enhance flexibility in managing module persistence settings
updated argument handling logic in GeminiMarketDataService . java to improve code clarity and ensure correct argument validation
replaced HashSet with LinkedHashSet for questions in VerifyPasswordResetRequestAction . java to maintain insertion order of questions in the flow scope
add unit test for http : / / code . google . com / p / mybatis / issues / detail ? id = 548
removed specific JSP and other excluded JSP files from AuthCheckFilter . java to enhance security by restricting access to specific JSP files
[ java ] avoid duplicate runnables in scheduler . postdelayed ( ) .
updated method signatures in ` AbstractCommandRunner ` , ` AuditCommandRunner ` , ` CommandRunner ` , and ` CommandRunner ` to use varargs for
refactor XML parsing logic to handle end - of - string scenarios to improve robustness by preventing potential null pointer exceptions
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to address the issue that causes overflow pages and
added pivot positioning for mArrow based on its width and height to ensure proper alignment of the arrow relative to its designated icon
do n ' t print stack trace in jabref executor service ( # 4798 )
updated thumbnail update logic to include a refresh option to enhance user experience by allowing thumbnail updates based on gesture state
pdfbox - 2852 : improve usage message , a suggest by valerybokov
updated InternetAddress instantiation in EmailFormatSpecifier . java and modified hostname validation in HostnameFormatSpecifier . java to ensure proper handling of invalid hostname formats and
replaced references to ` this ` with ` this ` in multiple activity classes to improve code readability and maintain consistency in variable usage
refactor ` SizeBasedDocIdSetBlock ` and ` SizeBasedDocIdIterator ` to use a final ` _ maxDocId `
added overloaded methods for file opening in FileDialoger . java and updated file chooser logic in FilePanelEntry . java to enhance user experience by
updated widget page calculations to use ` updatePageCounts ( ) ` method instead of ` invalidatePageData ( 0 ) ` to improve code readability and
refactor FlightConfiguration to improve coordinate transformation logic to enhance performance and accuracy of coordinate calculations
fix micrometer message history test
updated DateTimeFormatter initialization to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3441 ] add permission filter to dspaceobjectconverter to filter all permission
added a test for missing dimension and metric names in the StarTreeConfig builder to ensure that the builder correctly handles cases where dimensions or metrics are set to
camel - 16400 : camel - spring - xml - add recipientlist option to be able to specify the recipient list for routebuilder
refactor InlineLayoutBox and HoverListener to improve parent retrieval logic and enhance repaint handling to ensure proper repainting of elements and maintain
refactor AuthenticatorActivity to use OperationsService instead of DetectAuthenticationMethodOperation to improve the handling of authentication methods in the application
