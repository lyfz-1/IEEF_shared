fix deprecation warn for socketappender convenience constructor
refactor getromptHeaders method to use a new method for handling response headers to improve code readability and maintainability by reducing duplication
[ java ] : remove unnecessary method call from recorddescriptor when get message length for ontooneringbuffer .
cloudstack - 6124 : do n ' t fail with npe on compute host _ overcommit _ ratio
added anti - alias handling in the ShadowPaint class and corresponding tests to ensure correct behavior of anti - aliasing in painting and testing
update the title of the MassSetFieldsDialog to be localized to improve user experience by providing a more descriptive title
make eclipse test more stable ( make the build fail faster )
check for an empty nonce and update theWW - Auth header setting in AsyncHttpClient to ensure that non - empty nonce does not cause runtime exceptions
added a new interface RemoteInputListener and integrated it into the RemoteInput class to allow for handling input events based on their connection state
reformatted conditional statements in OrcEncodedDataReader . java for consistency to improve readability and maintainability of the code
[ homeconnect ] exclude homeconnectthinghandler for disabled thing ( # 6296 )
# 704 - check for null before call removeall / addlimit method in order to avoid npe
update JSON assertion methods to use a consistent return format instead of different Java versions to improve code readability and maintainability by consolidating similar assertions
added JSON parsing and logging for the DAG information in TezTask . java to enable better tracking and debugging of the DAG information during execution
bugfix # 183994 , show heap dump time in getheaptime ( )
replaced RxJava2Tasks with CommonsApplication ' s getMWApi for upload count retrieval to streamline code by consolidating upload count functionality within the CommonsApplication
remove redundant check to force lock even in mvcc and replace with a single if statement .
[ issue # 5882 ] fix commitlog offset overflow ( # 5883 )
added a check to ensure the folder is open before marking it as open to improve error handling when the folder is not open during the launcher
test : add test for pgproperty sortorder ( # 2131 )
remove the constant ' HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN ' that holds a value of ' this student ' to streamline the code by eliminating unnecessary constants
updated method signatures to use ItemInfo instead of Object to improve type safety and reduce casting overhead in the UninstallDropTarget class
updated assertion message in RequestBuilderTest to improve clarity to enhance error message specificity for HTTP method validation
refactor NearbyActivity to use NearbyListFragment for fragment management to improve code clarity and maintainability by reducing redundancy in fragment handling
[ gr - 41900 ] fix the constructor of flatprofilecontainerfree to use the actual session status object .
added support for zero anomaly email in EmailConfiguration and integrated it into EmailReportJob to improve user experience by allowing zero anomaly email sending only once
[ flink - 10283 ] [ kafka ] fix flinkkafkaconsumerbaseopen method that call restorestate explicitly
remove unused method from datamanager ( now no longer require )
added a constructor to BlockingResponseListener that accepts an integer length parameter to allow customization of the response size for better handling of larger data sets
refactor ( xbyte ) : move memberbroadcastsreceived to a byte [ ] to simplify code
replaced System . out . println with logger for better logging and added a try - finally block to ensure the reader is closed properly to improve code reliability and resource management during snapshot processing
fix an incorrect assertion in loginSAMLauthenticationfailurehandlertest
[ scb - 2504 ] add license header ( # 2682 )
updated import statements and refactored the updateNoteReminder method to use noteToUpdate variable to improve code clarity and maintain consistency in naming conventions
added a new ` AcceptAllFilter ` class and refactored the directory stream filter implementation to use it to improve code readability and maintainability by encapsulating the filter logic in a dedicated class
modified JdbcTestDataSet . java to enhance functionality to improve performance and maintainability of the test data handling
improve handling of classnotfoundexception in hotspotjvmciruntime . lookuptype
refactor Docker image name validation into a new class ` DockerImageName ` and add unit tests for it to improve code organization and ensure proper validation of Docker image names
updated user feedback message from " login _ failed _ username " to " login _ failed _ wrong _ credentials " to improve user feedback for the failure of the login process
fix a bug that cause some dialog to appear corrupt
added a test for verifying the configuration of identity zone properties in the SamlIDPRefreshMockMvcTests class to ensure that the correct creation and handling of SAML configurations for different identity zones
added checks for empty lists before adding new items to the list in ComparableVersion to ensure proper handling of empty lists and prevent potential runtime exceptions
updated sheet layout settings and added padding and margin properties to enhance visual consistency and ensure proper sizing in the UI
updated import statements to reflect the new package structure for ParallelUniverse and ParallelUniverseTest to ensure compatibility with internal components in the Robolectric framework
truffle - dsl : fix lookup of constructor type in nodefactory
changed fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to utilize a more efficient background style for better visual representation
added functionality to draw self loops in the graph to enhance graph visualization by allowing users to visually draw self loops
updated ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 059 across multiple files to standardize naming conventions and improve clarity in the code
renamed the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity by using a more descriptive method name
reset the translation Y - coordinate for the drag handle indicator to zero to ensure the drag handle indicator remains fully visible during all apps transitions
remove excessive logging of npe in itemviewer .
updated query optimization documentation to clarify filter merging behavior to improve user understanding of query optimization options in the operator tree
added an assumption to skip tests on OS X to address build server issues to ensure tests are only executed on compatible systems
added Maven bundles for Jetty ALPN client libraries and a debug option for diagnosing OSGi bundles to enhance compatibility with Jetty and facilitate debugging in OSGi environments
fix for http : / / issues . apache . org / activiti / browse / amq - 2587 - fix async job retry mechanism
fix typo in the javadoc of transaction . equals ( # 556 )
replaced custom field behavior with exclusion annotations for Genrule execution in the buildable class to improve clarity and maintainability of the caching behavior
simonstewart : make it possible to execute native file use the refactored executor
fix the bug that modify column family do n ' t affect table
[ hotfix ] [ runtime ] fix checkstyle violation in util / collections
phoenix - 5554 : add support for derive column from a view to ensure compatibility with client version below minimum _ splittable _ catalog
add a code to update student attributes for a specific email to improve efficiency by avoiding unnecessary updates
move the test from xssf to org . apache . poi . ss . util . testcellreference to get rid of the dependency on xssf
fix the piston block not be able to find block hardness . close # 34
fixed issue http : / / github . com / codenameone / codenameone / issues / 3049
fix wrong inlining of partial evaluator inlining ( graal - 431 ) .
( chore ) camel - base - builder : remove redundant null check
listblockparser : do n ' t ignore listblockparser indents in deeply indentlist ( fixes # 688 )
added a new abstract class AbstractOptionalAssert and refactored existing methods in OptionalAssert to extend it to centralize and simplify validation logic for optional assertions
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to mark tests as ignored due to an issue tracked in GitHub issue # 1070
[ j2kt ] remove unnecessary boxing of string . nativestring in testcaselogger .
camel - 655 fix the c error of camel - core
added a condition to check if the media format is video before processing web subs to ensure that video formats are handled correctly during web subtitle initialization
added security properties to ComHostnameVerifier and JavaxHostnameVerifier to disable TLS algorithms for improved security in hostname verification
do n ' t handle local storage in case it be a zone wide storage pool ( # 5954 )
issue # 2177 - do not log millisecond value in jdbc driver
add : skip update of manage dependency model after manage dependency ( # 3980 )
added unit test for the last intent sender request in ShadowActivityTest . java and implemented pending intent sending in ShadowActivity . java to ensure correct behavior of intent sending and improve test coverage for activity result handling
replaced GLCanvas with GLJPanel and added FBO ( Frame Buffer Object ) support for OpenGL to improve rendering performance and flexibility in graphics
update HydrawiseAccountHandler to use synchronized list for controllerListeners to ensure thread safety when modifying listener listeners
solr - 9893 : disable testcoreadminapis in java 9 until we fix it
updated year retrieval logic in TimestampUtils and refactored expected date formatting in SetObject310Test to improve accuracy in date handling and enhance test readability
fix possible npe when shut down jabber account
fix ( db ) : add current _ ws _ commit _ id to transactionhandler ' s tostring
replaced ByteChunk with ByteBuffer for buffering in BufferedInputFilter . java to improve memory management and prevent potential overflow issues
added a new method ` toSync ` to a ` CompletableFuture ` in ` AsyncUtils ` and created a corresponding test class ` AsyncUtilsTest ` to provide functionality for converting a ` CompletableFuture ` to a ` CompletableFuture ` while handling potential errors during asynchronous operations
added ActionGraphBuilder import and updated method signatures accordingly to enhance compiler functionality by integrating ActionGraphBuilder for better handling of ABI compilation
fix visibility of hidden file do not work in firefox
removed redundant try - catch block for creating tables in SQLManager . java to streamline error handling for database creation
safe localmavendir ( ) to return localmavendir ( ) if path do n ' t exist
ggb - 822 make sure algebra label be not visible if new label be invisible .
fix npe in ctelementimpl . getmetadata when there be no metadata ( # 1542 )
fix incorrect buffer flag usage in defaulttrackoutput
fix for entityiterablebase . checkisreordered when order by id
fix exception message in case of miss method call for verify ( mock )
added null check for backupFolder before logging expiration to avoid potential NullPointerException when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for creating a void array using reflection to explore and handle the behavior of Java reflection when attempting to instantiate an array of void type
added @ AddToRuleKey annotation to the ToolType field in ClangCompiler and GccCompiler classes to ensure the ToolType is correctly added to the rule key for better integrity in tool type management
replaced hardcoded timeout values with a constant PINCODE _ TIMEOUT to improve code readability and maintainability
align prometheusexemplarssample and prometheusmeterregistrytest ( fixes # 479 )
removed unnecessary @ Ignore annotations from multiple test classes to clean up the code and reduce redundancy
nifi - 5878 : remove unneeded cast to activemqconnection in test case .
updated condition to check if the table is an artificial table instead of a simple name to improve accuracy in determining the metadata table ' s validity
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and modified error handling in ` LaunchMapper . java ` to ensure correct handling of directory types and improve error messaging for file movement errors
updated session attribute handling logic in MongoSessionManager . java to ensure proper handling of null or empty attributes to improve robustness and prevent potential NullPointerExceptions during attribute updates
replaced fixed size with setSizeFromLayout for surfaceHolder to improve layout flexibility for better UI appearance
replaced direct calls to ` _ stopping ` with a ` CountDownLatch ` variable for ` stop ` in ` AbstractConnector . java ` to ensure safe execution and prevent potential null pointer exceptions
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 19425 : avoid timer in message history , use system time difference when calculate elapsed time
github # 633 - remove unnecessary errorhandling from delayedmonitest
replace assertTrue with fail if the error is not a WebSocketHandshakeException to improve error handling and provide clearer feedback on the expected exception type
refactor AllAppsTransitionController to implement OnLayoutChangeListener directly to improve code readability and maintainability by reducing verbosity
rename variable ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability by using a more descriptive variable name
int - 1700 fix the default output channel attribute in the router
updated cacheSeconds to a DurationCapable annotation and modified its handling in MessageBundleProperties . java and CasCoreWebConfiguration . java to enhance configuration flexibility and improve type safety for cacheSeconds
update openapi version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple test files to align with the latest openapi version
remove the call to append method on ByteBufferPool to improve performance by reducing unnecessary buffer processing
added a check for the Alt - rt . jar in the Main . java file to ensure the test skips execution when the alternative - rt . jar is detected
updated user identification criteria and email handling in JdbcScimUserProvisioningTests . java to ensure accurate user identification and improve test reliability
replaced ` Arrays ` with ` List ` for options in ` FlightRecorderProfiler ` to improve flexibility in handling flight recording options based on Java version
mow - 674 fix webcam image picker when stream be empty
added a condition to check if ` _ contentView ` has content before processing in ` HttpParser . java ` to ensure that the buffer is not empty when there is data to process
camel - 7518 : added endpoint doc to atmos to know the endpoint be active .
added support for " printf " and " print " methods in Java2TypeScriptAdapter to enhance TypeScript adaptation to support additional target methods
added a new file TestCapacityUntilGCWrapAround . java to test memory allocation limits on 32 - bit platforms to ensure correct behavior of metaspace capacity allocation under different garbage collection conditions
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
simplify : no need to calculate starttime for samplingstatcalculator now
camel - 8157 : added unit test base on user forum issue
fixed imageioexception on invalid icc _ profile parsing .
move terra pick up to same rod , close # 3498
removed redundant binding of Config and Environment classes and added a conditional check to ignore entries to streamline bean registration and improve application logic efficiency
remove the createloader rule since it do n ' t work that well
bug 54777 - add ability to load property from jmeter . nameupdater . properties file
fix infinite loop in ellipsoid selector ( # 8274 )
updated URLs from " http " to " https " for specific URLs to enhance security by using a secure connection
[ geos - 8199 ] getfeature : validate sortby attribute of the feature
updated the null check for the grantor variable to improve code readability by using a more concise null check
added GraphicsEnvironment for graphics configuration and modified image handling in DiagramGenerationTest . java to enhance image rendering and ensure compatibility with existing images
add a clear message if minecraft be n ' t installed but ca n ' t install
add warn about datautilities . getbytearray ( string ) and typefeaturereader . getbytearray ( string ) which be deprecate .
make lock . islocked ( ) an asserttrueeventually to fix flaky test .
added methods to calculate whole words and join tokens in StringUtil . java to improve string manipulation functionality for better token handling
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 47922 by send 404 error to the coyoteadapter
refactor command handling in SystemHighlighter to improve command highlighting logic to enhance code readability and maintainability by reducing redundancy in command parsing
update version and version date constants in Constants . java to prepare for the next release by indicating a new snapshot version and pending release date
updated buffer positioning to use dimensionSize to ensure correct buffer size handling for circular buffer scenarios
added support for dragging and dragging in the system UI to enhance user experience by allowing users to manage drag states more effectively
[ java ] add assumption that the tests run only on java 7
add test for openssl master that use tls 1.2 ( # 689 )
updated description text to use long description instead of text to improve clarity and accuracy of the place description
added Jackson @ JsonProperty annotation to ScimGroupMember . java to facilitate JSON serialization for the group member
modify HqlQueryRenderer to handle JpaQueryParsingToken and support schema scoping for function names to enhance query rendering capabilities and ensure proper handling of reserved words in SQL queries
fix null check error in subscriptionhelper .
refactor the Parser class for improved readability to enhance maintainability and ease of understanding for future developers
updated the ` offsetStreamIndex ` method to include an ` indexStartsAtOne ` parameter and adjusted the method calls accordingly to improve handling of track selection when a video stream is already selected
tika - 697 -- add mime type for ` ` application / x - cpio ' ' , base on a patch submit by stu hood ;
[ flink - 18731 ] [ table - planner - blink ] remove duplicate monotonicity getter method from flinksqloperatortable
added inheritance annotations and implemented equals / hashCode methods in OneTimeTokenAccount and OneTimeToken classes to enhance object comparison and hash code generation for better object representation
added a condition to check if the assistant is not marked as unreferenced before triggering a fling state to improve the logic for handling assistant - related fling scenarios
added a new file SolarisShortDSA . java that implements a cryptographic provider for DSA signing to ensure the application handles Solaris security issue with signature verification
added a call to toggleSearchLabel with a parameter of false to disable search label functionality in the ListFragment
bug 10689 : put back null check before execute snapshot creation in case of vm failure
refactored the FileDetailActivity to implement DetailsServiceConnection and added null checks for mConnection to improve code organization and prevent potential null pointer exceptions
refactor exception handling in HttpClientTLSTest to use AtomicReference for improved clarity to enhance readability and maintainability of the code by explicitly managing exceptions
removed the equals method from ConjunctionScorer class to simplify the class interface by eliminating unnecessary functionality
add null check before logging for null values in bindItems method to improve error handling when removing colliding items
add random retry timeout to the leader election ' s request in the cluster test [ hz - 4399 ] ( # 23399 )
fixed do so that the cache be now shrink to 90ms if it be full .
updated API endpoint from v2 to v3 and adjusted method parameters in CryptoFacilitiesAdapters , CryptoFacilitiesAuthenticated , and CryptoFacilitiesAccountInfo classes to align API version with the latest API specifications and improve data handling
added an empty ( ) method to the freenect2 class to provide a way to check if the collection is empty
added null checks and updated test cases for empty dictionary pages in Parquet reader to improve code robustness and track down potential null pointer exceptions
updated method parameters and added validation for market data types in SerumStreamingService . java to ensure correct handling of input arguments and improve error handling for invalid market data types
add config option to disable the animation when a pool be charged on top of a mana pool
[ java ] do n ' t stop aeron cluster if there be a failure to connect to the correct aeron cluster .
add well logging to help diagnose interruptedexception issue
make test more reliable on less filesystems
fix dialog style injection , need to take into account the style provider .
updated LiquibaseTask to use FileResource instead of String for changeLogFile and outputFile to improve memory efficiency and flexibility when handling file operations
fix check for world vector equality ( # 2092 )
updated LongConcurrentLRUMap . java to improve code clarity and enforce immutability of fields
escape literal in resource configuration to allow them in xml
modified the cache variable handling in FileCredentialsCache . java and updated the argument handling in EmptyCC . java to enhance cache initialization logic and improve error handling for credential caching
updated the database path in ValidateMultiSignContractTest . java to reflect the correct naming and functionality of the test
implement hassufficientpeers ( ) in default synchronizer ( # 467 )
simonstewart : make sure we always add the session to the session log before add the new one .
mob - 1564 : do n ' t expand boolean expression on polygon segment ( # 5662 )
added a check to clear the pending rendering operations if the operation is minimized to optimize memory usage when the implementation is minimized
fix junit test which randomly fail on slow ci server
delay to write - behind delay time window can not be update by write - behind
set the icon of a JLabel in GroupTreeCellRenderer to null to improve user interface clarity by removing unnecessary space
updated test method names to reflect the incorrect behavior of the strict match setting to ensure accurate testing of redirect behavior under different conditions
added ShutdownMonitor and Test classes for managing shutdown sockets and improved test methods in ShutdownMonitorTest to enhance shutdown management and ensure correct functionality during shutdown scenarios
refactor moveSize calculation and adjust chunks fill rate handling in RandomAccessStore . java to improve readability and correctness of memory management during auto - commit operations
refactor field loading logic to improve clarity and maintainability to enhance code readability and facilitate easier serialization and deserialization of objects
[ hotfix ] [ util ] move componentclosingutils to util package for coordination
bug 8215 : delete snapshot volume when vm be delete on a stopped state
cloudstack - 5945 : fixed npe on remove ipv6 address when ip6 range be empty
updated references from ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderBeanManagerConfigurer ` to standardize bean name naming and improve code consistency
updated the timeout duration in the getLeaderRetry method from 15000 to 30000 to allow more time for leader retrieval in the cloud client
refactor error message methods by removing the exception parameter and adding logging functionality to improve error message clarity and provide better logging capabilities
updated drawing parameters in URLImage class for positioning to correct the positioning of the image based on its vertical position
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure consistency in field name comparison
fix for [ calcite - 1265 ] setfolddown could throw indexoutofboundsexception
[ hotfix ] [ stream ] propagate exception into streamtaskexception .
refactor string construction logic in Preprocess . java to improve tag handling to enhance readability and maintainability of the code
removed unnecessary whitespace in the read method in MessagePack . java to improve code readability and maintain consistent formatting
added a new annotation interface named Mapper in the org . apache . ibatis . annotations package to provide a mechanism for annotation handling in the framework
fix # 171 : do n ' t encode empty extension list ( # 172 )
fix artifact extraction when there be no meta entry .
added a new alias for node _ popup _ scripting in the ScriptingMenuEntryVisitor to improve clarity and maintainability of the scripting menu entry
updated constants and methods in OverviewActionsView and RecentsView to enhance task visibility and interaction based on device profile to improve user experience by refining the behavior of action views in different device contexts
camel - 8193 : fix camel - jms after upgrade to spring 3.1 . 14
remove unnecessary ` ` throw ' ' declaration , fix some warning
deleted ` AbstractDelegatedVerb . java ` and ` FailureContext . java ` files to remove deprecated elements to streamline the codebase
modified GzipHandlerTest to allow for a micro content and updated content formatting to improve handling of gzip responses and ensure proper parsing of HTTP headers
fix for issue 2842 : repeat and distinct do not account for stack overflow
added logging functionality for component monitoring in SpeedmentImpl . java to enhance debugging by providing better visibility into component lifecycle events
add an oaiconfig servlet to load the config from dspace . cfg . xml
hbase - 10693 fix potential nullpointerexception in storescanner . run ( colin ma ) .
camel - 506 : disabling / disabling jmx during camel test when not in use
replaced hardcoded ' / ' with a constant for the current package separator in SourceLineAnnotation . java to ensure consistent handling of package separators across different operating systems
added methods for finding the YARN binary and printing application information in RemoteSparkJobMonitor to enhance the application ' s configuration and help with YARN applications
added support for " maria " database in the connection manager to enhance compatibility with additional database types
fix split - log splitting when no log directory specify ( # 343 )
added a new file ExecuteAndReturnStringTest . java to implement a test for executing and returning a string from a form to ensure that the application properly handles network errors and returns the expected string representation
added a new file ` InvokespecialInterface . java ` implementing interfaces with interfaces and demonstrating method invocation to demonstrate the use of ` invokeinterface ` and demonstrate dynamic invocation behavior in Java
refactor EvictingBoundedList class to improve memory management to enhance performance and reduce memory leaks
only create encodingmanager when turncosts be enable .
added a check for backgroundDisabled and threw an IllegalArgumentException for negative selection to ensure valid selection values are enforced before proceeding
hbase - 13606 addendum add check for null header . getmethodcode ( ) in rpcserver
update hotseatCellSize calculation to include border spacing to improve layout accuracy for better hotseat alignment
replace key comparison logic with a method call to retrieve values from a partition column to simplify code and improve readability
fix serialization of NamedTaskDecorator in cluster mode
updated directory retrieval from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct directory is used for storing new indices
modify the equality check in DisplayModeTest to initialize the equal variable as true and use a logical AND condition to ensure that all display modes are evaluated for equality instead of defaulting to
updated UnicodeToLatexFormatter to conditionally append surrogate characters to ensure proper formatting of Unicode characters to enhance accuracy in Unicode output handling
correct incorrect processing of non - iso control char in apidocument / item .
danielwagnerhall : do n ' t send webdriverbackedselenium . select ( ) if the value be an empty string
added a clear button and modified conditions in the BookmarksPanel and DataBrowser classes to enhance user experience by allowing a clear action to the active data browser
replaced dynamic port assignment with URL utility method for building the full request URL to simplify URL construction and improve code maintainability
updated date assertions in SoftAssertionsTest . java to use specific datetime formats to improve accuracy and consistency of test assertions
modified the ` adaptOrders ` method to include a ` reverse ` parameter and adjusted the handling of limit orders to enhance order management by allowing reverse order order for better flexibility
[ delombok ] fix printing of ` ` var ' ' statement for ` ` var ' '
jasonleyba : fix a number of javadoc warning in the test suite .
updated configuration initialization to use a default value of false instead of a default value to ensure that Hive configuration defaults to the desired value and improve debugging clarity
replaced a call to ` super . drawChildren ( batch , parentAlpha ) ` with a call to ` super . drawChildren ( batch , parentAlpha ) ` to ensure consistent rendering behavior in the WidgetGroup component
added unit test base on user forum issue
fix - remove use of environment . getnominalbase ( )
added tests for retrieving JMM date patterns based on locale in ShadowICUTest . java to ensure accurate extraction of time patterns based on locale preferences
updated the initialization of the object color map and added new color properties to enhance visual distinction of the plotSquared color system
added ZuulProperties as a bean dependency in TraceRibbonCommandFactory and TraceZuulAutoConfiguration to enhance tracing capabilities by integrating Zuul properties for better resource management
tika - 3821 -- make fontparsertest robust against time zone .
added new classes SampleApplication and SampleApplication , and modified BuildInfoMojo to utilize a build time parameter to enhance application functionality and improve build time configuration flexibility
update calculation of xDist to use the absolute value to ensure xDist is always positive to avoid potential negative value issues
remove the empty file guirewester . java that be leave in by mistake .
removed the @ NullableDecl annotation from the LazyMessage constructor and method parameters to simplify method signature and improve usability by removing unnecessary null checks
fix typo in the teststream exception message ( # 2167 )
rename < templateparser > to < markup > and < htmlparser > > to be consistent with < markup > .
added a new test method ` testXPathString ` to validate XML parsing to ensure proper handling of XML namespaces in XPath evaluation
added @ Nullable annotation to FutureUtils . java to improve code clarity by indicating nullable parameters
bugfix # 226 by warn when invokedynamic be not resolve
update email addresses in ContextTest . java to use ' example . com ' instead of ' gmail . com ' to ensure correct email sending for example service email
updated HTTP response handling in HttpConnectionTest . java and URIUtil . java to ensure correct response format and improve URI comparison logic
added a method ` getColumnDataType ` to ` AbstractResultSet ` and its implementation in ` ResultTableResultSet ` to provide consistent retrieval of column data types across different result set implementations
add default method stub for dynamodb client interface to throw unsupportedoperationexception ( # 4067 )
updated HSSFPictureData class to enhance image processing capabilities to improve performance and ensure compatibility with recent updates
replaced ` long ` with ` Instant ` for start time logging in ` Statistics . java ` to improve accuracy and readability of time tracking
added versioning options and improved parsing logic in LibMediaInfoParser to ensure compatibility with specific media info versions and improve error handling
remove obsolete proxy creation for ideplugindependency ( fixes # 605 )
added a new ` SerialHeap ` class and updated ` Universe ` and ` Universe ` classes to use it to introduce a specific implementation for serialing the heap in the system
added @ SuppressWarnings ( " serial " ) annotations to multiple locations in Gson $ Types . java to suppress warnings related to serialization when the class is not serializable
change mousewheelevent to use mouseposition instead of position to avoid nullpointer exception
datamongo - 1608 - fix npe in querycompositerepository . findbyfirstnameignorecase ( null ) .
[ flink - 29541 ] [ type ] change key type info from maptypeinfo to multistagetypeinfo to support replay compilation
added retrieveByIssuer method to XOAuthProviderConfigurator and corresponding test cases to enable retrieval of active and multiple identity providers by their issuer
pdfbox - 5652 : allow optional delimiter to be parse when parse cmap file
refactor ContactsBackupJob to use a OperationsService for asynchronous operations management to improve code organization and service handling for better maintainability
refactored type constraints and introduced new classes T6938454a and T6938454b with generics implementations to improve type handling and provide examples of bounded type parameters
hide account config in account list ( patch by stu hood )
added a check to compare supported display bounds in DisplayController to ensure consistency between display state and supported bounds during display updates
updated schema removal logic in PMetaDataImpl and added a test for schema validation in PMetaDataImplTest to ensure correct schema handling and validation in the metadata management process
apps - 183 use two different event handler for passive login
added a new Box2DTest class to handle Box2D test initialization and application setup to enable integration of Box2D functionalities within the application
add more information to debug output ; patch by jbellis ; review by nate mccall for cassandra - 1570
[ hotfix ] [ network ] set the default buffer request timeout to 5 minute .
doc : generate sample code in the java microgenerator ( # 36 )
add help button to window and fix typo
[ java ] add a reusable option to the tcpnodelay setting in the netty acceptance and deoding server .
updated method signatures to use wildcard generics for better type safety to improve code clarity and maintainability by explicitly defining return types
fix ( scan ) : cache the result of getclassinfo ( ) to reduce object allocation
updated exception handling in DecodeServlet . java to improve error logging and response management to enhance debugging capabilities and ensure proper resource consumption during image decoding
# 72 - bump querydsl to 2.1 . 2 to fix invalid null handle order .
added a null check for actor before processing actions in ParallelAction and SequenceAction classes to ensure actions are only processed when actor is not null , improving robustness
test : add documentation for cttypetest . java ( # 2131 )
flume - 1034 : fix spotbugs warning in hbase - connector / hdfs3 - connector / hdfsdeventsink . java
added a new interface ` Issue888 _ JavaI ` with implementations for JJ and Kotlin to establish a structure for defining various abstract methods in JJ and Kotlin
added functionality to revoke existing agent certificates in the certificate management system to improve the certificate revocation process and ensure proper error handling during the revoke process
added a check for HTTP response body codes in the AbstractHttpTest class and modified the HttpServerTestBase class to ensure correct handling of HTTP headers and response behavior when no body codes are found
refactor script initialization logic to improve error handling and ensure correct execution of scripts in Java 6 to enhance robustness and maintainability of the script execution process
updated the connection pooling type configuration and added configuration for Hikaricp database to enhance database connection management and improve error handling in tests
replaced instances of ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to ensure consistency by using the correct launcher instance instead of the device reference
added functionality to manage file locking in the file menu to improve user experience by allowing easier access to locked files
fix : lucene : core : spotlessapply failure due to 8.8 . 8 release
fix race condition when updatetemysql be apply to the master
added a new method ` waitForState ` to ` Locks ` and modified its usage in ` ThreadExecutionSynchronizer ` for better state management to improve code clarity and reduce duplication in waiting logic for thread states
refactor methods in SkylarkDescription and SkylarkDescriptionArg to use SkylarkRuleContextAttr for coercion to improve code clarity and maintain consistency in handling dependencies
introduce storage interface to allow garbage collection
fix invalid sql when replace a view ( # 2320 )
change exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to ensure broader error reporting when generating Pinot segments
updated query retrieval logic in SpellCheckComponent . java to ensure the query is used if it is null to improve robustness by preventing potential null pointer exceptions when accessing query parameters
added validation for header values to check for illegal characters and whitespace patterns to ensure that header values conform to HTTP specification and prevent potential errors in processing
[ flink - 27954 ] [ runtime ] use base offset for hybrid layout after field
[ apex ] fix javac warning with astcommentcontainer
hhh - 9549 - add fetchtype . join and fetchtype . lazy to avoid infinite loop
replaced the implementation of ` SwaggerSpecFilter ` with an ` AbstractSpecFilter ` extending ` AbstractSpecFilter ` to promote code reuse and simplify the filtering logic
added assertions to verify database name and table name in TestCompactionTxnHandler to ensure correct retrieval of database and table name from the database
camel - 12952 : added spring stop option to timer to be able to stop camel when the timer be stop .
added a conditional check before adding trace to the trace to ensure that only processed blocks are processed in the tracing system
updated the null check logic in ProviderManager to use CollectionUtils for iterator compatibility to ensure that null elements are handled correctly and prevent runtime exceptions
removed unnecessary try - catch block for database version checks in InsertOrUpdateGeneratorPostgres . java to simplify the logic for determining Postgres compatibility
added local index limit assertions and updated result filtering logic in multiple classes to ensure correct functionality of index filtering and validate result results during execution
add collection type compatibility check in altertablerestatement . addcollectionwithname + the old collection name remain in the past
adjusted cursor logic in VDUBuffer and vt320 classes to improve responsiveness to screen limits and remove unnecessary cursor change handling
added a constant USE _ RETRIES with a value of " useRetries " to facilitate easier management of retry settings in HTTP shard handler
updated the VERSION _ NUMBER regex in JavaVersion . java to ensure accurate parsing of version number format
[ flink - 16742 ] [ task ] do n ' t execute stream task if there be no input gates
int - 3509 : fix failing test , break hudson build
fix npe in getconfigurationbykey ( ) when cluster prop be null
[ hotfix ] fix nullpointerexception in filesystemblobstrategy
ambari - 21621 . add a build script to run component with plugin ( dlysnichenko )
txidtextfield : fix update freeze when receive new transaction confidence
bugfix # 128 , add support for g1 perm space in jmxsupport
removed unused imports and simplified the return statement in NearbyController . java to streamline the code and improve readability by reducing unnecessary dependencies
pdfbox - 4892 : make the class public again , a suggest by valerybokov
added checks to ensure a task is not of home activity type during gesture state validation to improve the accuracy of gesture handling by excluding home activities from swipe - up interactions
[ scb - 2243 ] rename defaultedgeclientfilter to edgeaddheaderclientfilter and make it more generic
updated methods in ShadowTelephonyManagerTest and ShadowTelephonyManager to enhance input handling for network and simCountryIso to ensure case - insensitive comparison for telephony languages
update UnfreezeBalanceV2Actuator to set unfreezeAmount to ensure the correct amount is set for unfreezing balance
fix error message in conferenceschedulingxlsxfileio ( # 10223 )
simonstewart : use fileutils in the firefox driver , too
refactor assertion classes for consistency in naming and structure to improve maintainability and readability of the codebase
clarify return value of publish ( ) in javadocs ( # 1855 )
replaced manual push operations with a method to add multiple fields support to enhance flexibility and support for batch updates
updated UUID assignment logic to ensure it is used only when randomUUID is null to avoid potential null pointer exceptions when setting the ID
added hover event handling in InputConsumer and OverviewInputConsumer classes to enhance user interaction and interaction with hovered input events
added a sleep delay based on the presence of bootstrap configuration to ensure proper handling of configuration based on server and server availability
camel - 16042 : camel - netty - http consumer should use http header size by default
hbase - 12728 hbase - 12728 fail test due to timeout ( aonishuk )
fix in - memory template file handle for source snippet
[ gr - 8217 ] retry on cache invalidation at the end of the test if graph be cache .
updated the query command in SchemaCrawlerTextCommandsOutputTest from " customer _ count " to " all _ tables " and added a new test method for querying over table names to streamline testing of query results and ensure it operates on all tables
added code to extract and set currency metadata from KrakenAssetCode to improve asset handling functionality in KrakenAdapters
fix # 112 : add a tostring ( ) method to anyof assertion condition
[ te ] email - fix empty column when group name be empty ( # 3654 )
[ beam - 10462 ] do n ' t allow measurement to be blank or not .
replaced all instances of ` doTransform ` with ` downcast ` in multiple converter classes to improve clarity and consistency in method naming
add additional filters for IP address validation in NetUtils . java to ensure only unique local addresses are accepted to enhance security
[ calcite - 634 ] fix incorrect data table reference in text formatter ( rajeshbabu )
added methods for property management and updated method names in WrapSystem and StrUtils for better functionality to enhance system property handling and improve method naming flexibility
added a constructor to UpdateRequest that accepts a URL to initialize the UpdateRequest for POST requests appropriately
changed enum declaration from static to instance in ProtoTypeAdapter . java to allow for potential null pointer exceptions during enum serialization
added a method to add experimental format warnings in RequestHandlerUtils for improved response handling to notify users about experimental format changes in the response
updated the debug log message format to include only a single value to improve clarity of debug output by formatting module names before logging them
fix row height accord to the default label font size
no - jira - fix checkstyle issue in brokerheartbeatmanager
added logic to retrieve meanPartitionSize and partitionCount from the row if it is null to ensure accurate calculation of split size based on the presence of the row
no longer check for ` ` test ' ' in junittestsshouldincludeassertrule .
[ drools - 6242 ] make ruleterminalnodelefttuple implement equals / hashcode ( )
added support for StageIDsRearranger in TezCompiler to enhance query optimization by automatically resolving the physical context
register the mbeans of type messagingservice , since it ' s not just the concurrent type . patch by jbellis
modify memory consumption check to include initial and delta values to improve debugging by providing clear memory usage during initialization
added imports for document handling and updated DimConfig initialization in various facet classes to enhance documentation clarity and maintain consistency across the codebase
polish ` ` allow an anonymous read - only by default ' '
refactor DatabaseMetaData class and associated methods to improve code readability and maintainability
[ beam - 6707 ] change code to encapsulate the echolinkofn class in the module .
added an ` finishMocking ` method to ` DefaultMockitoSession ` and its implementation in both ` DefaultMockitoSession ` and ` StubbingWarningsTest ` to improve mock handling and error verification in tests
modified parameters for dependency management in GoTestDescription and added new test cases in GoTestIntegrationTest to improve clarity and functionality of dependency handling in tests
refactor SPDYAsyncConnection by renaming buffer , handler , and writePending variables to enhance clarity and performance in asynchronous processing
fix : replace static block with slow block in liquid wrapper
updated the way background classes are retrieved from the intent in AndroidLocationPlayServiceManager and BackgroundLocationHandler to improve URL handling by utilizing URI parsing for better background location management
fix wrong endpoint doc in apr .
[ hotfix ] [ client ] properly differentiate between optimized and streaming plan
correct item hash in craftingmanager . fix #
flume - 205 . fix test which fail from time to time
removed unnecessary parentheses and conditions in TabsAndIndentsVisitor . java to simplify code logic for better readability and maintainability
added a pattern for matching " pg _ temp _ " in NeuteredLinesFilter . java to enhance line processing for temporary database files
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 322 )
added conditional handling for " INTERVAL " and " NCLOB " in DataTypeFactory and updated conditions in UnknownType to ensure correct data type processing and improve handling of additional data types
add metrics for average time and average time ( # 859 )
updated ShenyuClientRegisterSpringCloudServiceImpl to set a new handle forDivide upstreams and modified the upstreamUrl formatting to include warmup time to improve the functionality of the upstream service by incorporating a warmup time for better data representation
added a method ` registerListener ` to ` ShadowSensorManager ` for registering a listener with specified maximum latency to enhance the functionality of ` ShadowSensorManager ` for better listener management
added tests to handle SocketException and logging for SSL connection closure to ensure graceful handling of socket exceptions during SSL connection closure
camel - 5180 : fix the npe issue of camel ignite . thanks to bjoern ohm for the patch .
fix bug in client that return 0 when there be no result
pdfbox - 2530 : fix exception handling , a suggest by valerybokov
added new test methods for handling HDR capabilities in ShadowDisplayTest . java to ensure accurate functionality and error handling for display capabilities in the application
added a finally block to ensure classLoader is set to null after processing to improve resource management and prevent potential memory leaks
improved error messages for bloom filter entries and enhanced exception logging to include details to improve debugging capabilities and provide clearer context when exceptions occur
add a default constructor message to allow it use
do n ' t report serialization priority for class that be not serializable
updated ` PhoenixDecimalObjectInspector ` to utilize ` PrimitiveTypeInfo ` and improved BigDecimal handling to enhance type safety and ensure correct conversion from decimal to BigDecimal
changed the compression handling from GZIPOutputStream to OutputStream and added conditional logging to improve output stream management when the response is already committed
rename variable and method for clarity in authentication handling to improve code readability and maintainability by using a more descriptive parameter name
no need to check for ejs folder when create a dcs file
added a method to retrieve the thread group name to improve thread management by clearly indicating the thread group being stopped
sec - 2652 : add debug information for methodinvocationPrivilegeevaluator after property set
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` and updated the logger initialization accordingly to organize code under the correct namespace and avoid potential naming conflicts
removed the import of Lombok . ToString from ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to simplify imports and improve code readability
cloudstack - 4423 : add the disk to the data disk if user vm have iso attach .
[ java ] remove signal handler from sigint to avoid race condition when original handler be already add .
hbase - 10588 remove unused import of ArrayUtils from nodetool . java ( # 759 )
added Spring Boot tests and modified auto - configuration imports in AxonAutoConfigurationWithSpringCloudTest . java to enhance testing capabilities and ensure proper client discovery
added methods to set the color to interpolation and transform the current color to enhance color manipulation capabilities and improve code clarity
remove deprecate ` ` resetinitializedplanningentities ' ' ( # 930 )
add build time millisecond to ManifestRuleKeyManager and related classes to capture and utilize the build time in the caching logic
updated the method of calculating fixedRowSize and added a condition for numEntries to improve accuracy in determining row size and handle edge cases more effectively
wallet : fix another npe in ` ` if unconfirmedblock ' '
added CNC _ BTC currency pair and updated related CurrencyPair imports to support trading functionality for CNC / BTC in the application
updated skew allowance values and improved the handling of skew allowance in SAML processing to enhance flexibility and configuration options for SAML authentication flow
added sorting functionality for song items in SongListActivity and updated query settings in Utils to enhance sorting capabilities and improve code maintainability
removed the method ` readBodyToBytesIfNecessary ` from the ` Utils ` class to simplify the request reading logic and improve code clarity
replaced base block class with LegacyBaseBlockWrapper class to simplify block management by leveraging new wrapper class
replaced the method for retrieving a snapshot with a reference check in IcebergBranchExec . java to improve handling of non - tag tags and provide clearer error messages
replaced Lists . newArrayList with Collections . singletonList for external group whitelist configuration to simplify code and improve readability by using a more concise collection type
phoonmappingdemo . go ( ) now clearly specify that we do n ' t call this method
updated password change validation logic and added debug logging for unsupported operations to improve error handling and provide clearer debugging information for unsupported operations
added a method to remove all reflective fields from notInitializedInConstructors to enhance the handling of fields during initialization
added logic to handle SQL execution based on whether the connection is closed to ensure accurate error reporting by including the connection URL when possible
add test case for a case where template query return an empty body
updated regex patterns for user and password in CredentialInjector . java to ensure proper parsing of credentials for user and password
added a new menu item " Item4 " and a key binding for the enter key to enhance functionality by providing additional options in the menu
updated print statements to include the actual class name of the query to improve clarity of output and make result verification more explicit
performance improvement : string - compare be usually cheap than array - comparison , so compare the string field first to fail more quickly if possible .
changed the access modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class within its package for better encapsulation
lucene - 887 : morelikethis now correctly handle case where there be no document to analyze
refactor conditional statements for better readability in QuestManager . java to improve code clarity and maintainability
[ hotfix ] [ test ] let networkbufferpooltest extend testlogger
add miss paren for mongotsessiondatastore . query . append ( )
[ gr - 26354 ] enable customization of unsafegetlong without additional macro .
8254177 : ( tz ) upgrade time - zone data to tzdata2018d
[ java ] fix invalid id in deprecationlogger .
hhh - 15429 - if a user try to write to a lockedsession , return null rather than fail to acquire lock
update patch from johan from bug # 44636 - detect link with and without a ' / ' .
fix : menubar should be disable by default on macosx
[ giac ] add test for piecewise in cas integration
fix recent animation not get complete sometimes when use 3p launcher be : fcad20bad9 be : ee59005a19 be : 17a9fcac80
added a new configuration option ` modWhiteListPattern ` in ` HiveConf ` and created a test for it in ` TestJdbcWithSQLAuthorization ` to enhance the flexibility of configuration handling and ensure proper exception handling during SQL modification
added validation for entries in EntryLoader . java to ensure that entries are not added to the invalidClasses map
fix mobile input not be able to click on an input box ( # 1588 )
updated cookie domain initialization to use domainHelper to enhance flexibility by allowing different domain names
added checks for nullable columns and updated validation logic in MissingColumnChangeGenerator and MissingTableChangeGenerator to ensure proper handling of nullable columns during data validation
refactor SecurityTokenServiceClient and related classes to improve code organization and consistency to enhance maintainability and readability of the security token service implementation
added document deletion and query assertions in CustomCollectionTest , modified package imports and made separator static final in CompositeIdRouter , and added test cases for document retrieval in CompositeIdRouter to improve collection functionality and simplify code structure for better maintainability
added snapshot handling for PostgreSQL specific data types in ExecutablePreparedStatementBase . java to improve support for binary data writing in PostgreSQL
updated conditional checks for cache and cache size in DefaultServlet . java to ensure valid cache size values and improve logging consistency
handle tab drag - and - drop event in main tab ( # 7354 )
updated the description creation method in ExecutionUnitRunner and related tests to improve clarity and consistency in handling test descriptions
change isEmpty checks to isNotEmpty for myVersion and buildTimeString to improve code readability and reduce potential NullPointerExceptions
changed method visibility from public to package - private in TimeUtils . java and added corresponding test class TimeUtilsTest . java to enhance encapsulation and restrict access to utility methods
removed ` initializedProperties ` for compatibility with Java 9 and refactored security frame checks in ` RefectionMHTests . java ` to improve clarity and support for compatibility with newer Java versions
updated file extension checks in PreviewImageFragment . java to ensure correct file naming conventions for image files
make image debug info loadable from host method .
added ` getIcon ( ) ` method to several Data classes and updated the default value for ` ClassDisplayed ` in ` DataTableTopComponent ` to improve icon retrieval and ensure consistent icon handling across different data types
refactor code to improve handling of the last index in the request name to enhance code readability and avoid potential null pointer exceptions
fix [ dollar sign ] for dynamic text with ` $ ` . ( # 2358 )
modify to use a generic connection object instead of a generic connection object to allow for potential null pointer exceptions .
modified the SchemaExtractionProcessor implementation to improve code clarity and maintainability
added a method to copy files in directories and updated test cases in SpecWebAppTest to improve file management and ensure proper directory handling during tests
added exception handling for unknown datum classes to improve error reporting for better debugging
replaced manual ABI building with required ABI retrieval methods to improve code clarity and ensure proper ABI handling in the build system
removed unnecessary padding calculations for item height in SelectBox to simplify height calculation by removing unnecessary padding
normalize database and table names before modification to ensure proper formatting of identifiers for database and table access
added schema handling for Oracle database type in DbSqlSession . java to ensure correct schema is used when using Oracle databases
removed the old API client logout logic and added a comment to stop the activity to improve logging efficiency by avoiding unnecessary API calls
[ hotfix ] [ test ] fix the subtask name in test
added a null check for candidates before processing the privateiled element to avoid potential NullPointerExceptions when the requested element is not available
updated checks for managed beans in ContainerLifeCycle to improve accuracy in determining lifecycle state based on bean state
rename iexecutionattributesdialect to iexecutionattributecontextdialect for good clarity
added a call to ` metadata . clearUnsafe ( ) ` in the ` AlterTest . java ` file to ensure the metadata is reset before further operations
fix npe bug in gettime command when location be null
added a null check for measurement before continuing in DisruptorInsertionDataContainer . java and refactored the DisruptorQueue . java to use a new exception handler to improve error handling and separation of concerns in the queue implementation
deleted the Session2Token . java file from the media package to the functionality provided by Session2Token is no longer needed
server : clear volume state when a volume go offline ( # 5890 )
added an Install utility class for instant app support in the PopupDataProvider and SystemShortcut classes to enhance shortcut functionality for better user experience in the launcher
added a null authorities populator to LdapAuthenticationProvider and updated its usage in LdapAuthenticationProviderTests to ensure correct handling of null authorities in LDAP authentication
added logic to retrieve the retrolambda jar path using system properties and updated warnings in multiple classes to improve flexibility and error handling when the retrolambda jar is not found
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the method call and improve code readability
replaced FixedBitSet with Bits and updated the method to sort live documents to improve performance and flexibility by using a more efficient bit set implementation
[ calcite - 2840 ] fix npe in jmeospathextractor , when the user have a null value
fix for # 351 - a nullpointerexception would occur if a user have no authority configure ( jspui )
refactor assertions to use instance variable names instead of redundancy to improve code readability and maintainability
cloudstack - 6298 : fix the error message for vm snapshot with memory
updated configuration merging logic to use ` Set ` instead of ` ArrayList ` and added tests for handling ` Config ` annotations to improve performance and ensure correct configuration merging for different class types
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to improve socket performance by using a more efficient connector
added functionality to check for partial partition keys in HiveAlterHandler to ensure accurate comparison of partition keys during alterations
added a new BooleanFlag ENABLE _ ICON _ IN _ TEXT _ HEADER with a debug flag of false to allow users to toggle the icon in the text header for better user experience
added whitespace for consistency in the condition check to improve code readability and maintainability
replaced SharedBlockingCallback with Callback . Completable in multiple classes to improve handling of asynchronous operations and enhance code readability
added workspace listener to update the graph on workspace events in PreviewControllerImpl to ensure proper visualization of workspace events during initialization
updated conditional checks in ReflectionFactory . java to include checks for virtual anonymous classes to ensure correct inflation behavior for specific class types
removed deprecated methods from TransportHelper class to improve code maintainability and reduce technical debt
updated file path handling in CatalinaAcegiUserRealm . java to ensure correct resource loading by using the ResourceLoader
ambari - 20825 . add log for actionmanager startup time . ( mpapirkovskyy )
updated JSONWriter . java to ensure that initialization and modification nodes are handled correctly to enhance robustness and prevent potential NullPointerExceptions during processing
refactor ` run ` method to accept a ` FileSystem ` parameter and update user assignment logic to improve flexibility in user handling and ensure correct user context is used
add a check to avoid attaching the background if the backgroundManager is not attached to improve stability by preventing potential null pointer exceptions when the backgroundManager is not attached
updated tab navigation and positioning logic in multiple classes to improve user experience by ensuring proper tab display and positioning
fix : add good validation to basedatasource ' s constructor
refactor PebbleModuleTest to enable JRE ' s EnabledOnJre for specific JRE versions to ensure compatibility with JRE 8 and 12 environments of the PebbleTemplateEngine
added EditNameDialog to manage directory creation through a dialog to improve user experience by enabling direct directory creation through the dialog
added bar border width handling for toggle functionality across multiple activities to enhance chart interactivity and ensure proper display of bubble borders
updated SSL URI and host from OKCoin to OKEx in OkCoinExchange . java to ensure compatibility with the latest API endpoint
jbrules - 2631 : fix up some test broken after the refactoring
updated file reading and handling in Files . java and BytesAndLines . java to improve efficiency and simplify input stream management
refactor getFlattenFieldTransferPair method to accept FieldReference parameter and improve type safety to enhance code clarity and maintainability by ensuring parameters are explicitly passed during method calls
replaced ` MockHandler ` with ` MockHandlerImpl ` in the ` InvocationNotifierHandler ` and related classes to reflect implementation of the mock handler instead of the internal one
simplify conditional checks for serialization types in SerializationConfigurationParser . java to improve code readability and maintainability by reducing redundant checks
added heap limit configuration for ActivityManager on debug device to optimize heap usage for development on debug devices
refactor code to utilize a temporary variable for the sumWithCompensation function result to improve readability and maintainability by reducing redundant method calls
nifi - 12540 fixing broken test in abstractloadbundletest
updated the logic to check for top level deletion before serialization in PrecompactedRow . java to ensure that the deletion process executes only when the top level deletion is not LIVE
updated rendering intent handling and simplified color conversion logic in ICC _ Profile and ColorConvertOp classes to improve code readability and correctness in color conversion operations
polish ` ` stop metric auto configuration ' '
fix invalid config item log ( # 10726 )
test : fix up certificatefactorytest to make sure it fail if no certificate be generate
camel - 5539 : fixed simple language for binary operator . thanks to kirill dubovikov for the patch .
refactor onTabUnselected method to simplify window dismissed logic in EditorActivity and IDEEditor to improve code readability and maintainability by reducing complexity
add user name to assist with assist with the user
updated scaling and mesh name for 3D rendering in multiple Java files to improve rendering stability and ensure consistent scaling of 3D models
removed the ` throws InterruptedException ` from the ` createOrThrow ` method signature in ` DefaultProjectFilesystemFactory . java ` to simplify the method signature and avoid unnecessary exceptions
mark UpgradeResponse as deprecated to indicate that the class is outdated and should no longer be used
added functionality to generate and store d . ts files during the transpilation process to enhance the flexibility and organization of JavaScript declaration handling
[ stream ] make Kinesisconsumerfactory fetch timeout configurable
append ` ` . html ' ' to the end of the timestamp expression in the streaming dataflow worker
updated the maximum number of metastore server threads from 100 , 000 to 1000 , 000 to improve server performance by allowing more concurrent execution
change return type of onTaskSnapshotChanged from void to boolean to enable the method to indicate whether the task snapshot was successful
updated shadowRadius parameter from mMaxShadowRadius to shadowRadius to ensure consistency with the current shadow radius configuration
add a test for chain nesting and aggregation ( see int - 190 ) .
updated loop condition to use ' end ' instead of ' limit ' and added a failure assertion to ensure proper validation of the asset processing logic
make polyglotcontextimpl . clone use isInteractive ( ) instead of isinternal ( ) to reduce the chance of go into the race condition .
updated condition to check for previousCachedFilePath in CreateKeytabFilesServerAction . java to ensure proper comparison with existing keytab file paths
updated LauncherPreviewRenderer to include DisplayController in the WindowManagerProxy instantiation to enable better management of display properties within the launcher
updated tooltip text logic for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent naming of tooltip text based on directory type
changed the method for retrieving the screen size from getToolkit ( ) to getToolkit ( ) to ensure compatibility with the current toolkit architecture
updated method signatures in TensorflowRESTCaptioner and TensorflowRESTRecogniser to use generics to improve type safety and flexibility in handling different object types
added methods for inserting and removing entities and modified JPASQLBase for improved query handling to enhance functionality and testing capabilities for querying results with factory expressions
[ fix # 466 ] remove extra debug statement from freeformfinsetconfig
update moe version to 1.2 . 0 ( # 4362 )
updated error message formatting and added method call to spend all gas to improve clarity of error reporting and ensure program state is consistent
updated the string formatting in ElementsShouldSatisfy to use platform - independent line separators to improve readability and ensure consistent output formatting across different operating systems
mark Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
use registerunsafeplugins to support svm intrinsics .
added Hint annotations to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and created new Sample and Sample classes for testing to improve code clarity and ensure correct module visibility handling in the build process
change mCenterPagesVertically variable from true to false to adjust layout behavior for the component ' s orientation
fix a race condition during migration finalization on master node . also fixes # 1317 .
rename ` HOST ` to ` BASE _ URL ` and update related constants to improve clarity and maintain consistency in base URL usage across the codebase
updated the type of attributeValue from Object to List < Object > in WSFederationClaimsReleasePolicy . java and added related tests in WSFederationClaimsReleasePolicyTests . java to improve handling of multiple attribute values and ensure correct functionality in the federated claims release policy
introduced database creation and query handling methods in TestJdbcWithMiniLlap and LlapBaseInputFormat to enhance database compatibility and improve query execution based on available databases
add a new test method ` testCaseInsideBrackets ` to validate SQL parsing with expressions involving ` CASE ` expressions to ensure correct parsing and deparsing of SQL queries involving curly brackets
added copy mode handling logic to ConsoleActivity for different touch events to improve user experience by enabling copy mode when interacting with the terminal
refactor the ` writeXmlOutput ` method to use ` try - with - resources ` for XML writing to improve resource management and avoid potential memory leaks when writing XML output
camel - 498 : fix npe in abstractlistaggregationstrategy empty split if exchange be null
camel - 10743 : better log for exception from camelexchangeexception with thanks to bilgin for the patch .
move classic - related configs out of the public api
do n ' t assert in case of failure during dataflow analysis
fix javadocs @ link error for removed o . a . p . c . sharedstringsource
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with specific environment and arguments
renamed multiple classes related to box and whisker calculations and histograms for clarity to improve code readability and maintainability
[ flink - 29305 ] [ test ] migrate ReadableWritableConfigurationTest to JUnit 5 for better testing framework
changed the NormUpdate class to use ` . equals ( ) ` for field comparisons to ensure consistency in string equality checks and improve code clarity
lucene - 499 : make the internal indexfilenamefilter non - private .
refactor ifStatementTest to use local variables and simplify expression checks to improve code maintainability and readability
replaced ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure correct retrieval of the table header row for processing
refactor TypeAdapter methods for improved clarity and consistency to enhance maintainability and reduce complexity in the handling of null values
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected output after recent code modifications
fix ( exam ) : check only for exif metadata ( # 4237 )
fix : log level ' s unknown unit in CloudWatchmeterregistry ( # 3025 )
[ rhdm - 1738 ] support load model with parameter ( # 1630 )
improve fluent protocol error message when a counter currency transfer start message be send but the peer have already receive a message
added a check to ensure the bubble bar visibility before proceeding to improve user experience by preventing unnecessary processing when the bar is not visible
[ gr - 8233 ] aarch64 : fix label range emission on aarch64 .
# 646 move setting of initpending to false only after initialize the jdk log
added a new method ` find ` to the ` TicketCatalog ` interface and improved logging messages in ` DefaultTicketCatalog ` to enhance ticket retrieval functionality and provide clearer debug information
updated the formatting of string concatenation and assertions in TestSSL . java for consistency to improve code readability and maintainability
[ flink - 4082 ] [ network ] fix memory leak when distribute sort - shuffle result partition
[ beam - 569 ] define maxnumrecords default value to long . max _ value in jmsio
added a new parameter for type and sort in the query methods to enhance plugin handle management by allowing sorting and sorting based on plugin types
updated span creation method calls in DefaultSpanCreator and SleuthAdvisorConfig to ensure proper span creation to maintain consistency in span handling
added support for GLKViewDrawableColorFormat , GLKViewDrawableDepthFormat , and GLKViewDrawableMultisample in IOSApplicationConfiguration and IOSGraphics to enable customizable drawable settings and improve configurability in the application
try to make sure it be possible when one attempt to log out the test account
fix ( freezev2 ) : avoid unsupportedoperationexception for real ( )
replaced interrupted check with a do - while loop for getting lock name to ensure proper handling of thread state transitions and avoid potential null pointer exceptions
refactor implementation details in ShadowPicker . java to improve code clarity and maintainability
[ scb - 937 ] make http2 production ready ( # 3945 )
added a check for ` StructArray ` in ` Struct . java ` and modified type handling in ` SolidityFunctionWrapper . java ` to enhance support for dynamic arrays and improve error handling for missing types
updated method calls to include a default value of true for ` text _ align ` and ` font - size ` to ensure consistent behavior by defaulting to true for property retrieval
added constructor overloads for Path in CopyStep and created a test for shell command retrieval to enhance flexibility in copying files and ensure correct functionality through unit testing
add test for rseemaphore . addpermits ( ) method . # 4836
camel - 16534 : camel - core - optimize routecontext eip to reduce stack frame in use during rout . work in progress .
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to utilize it to improve code organization and enhance the parsing functionality of flavor strings
changed the type of ` witnessesAddressList ` from ` List < String > ` to ` List < ByteString > ` in ` WitnessScheduleStore . java ` to improve type safety and ensure correct handling of byte arrays
modified print statement to conditionally display results if not empty to enhance output clarity by avoiding printing empty results
refactor ConcurrentLinkedQueue to improve null checks and add a new RemoveLeak class for testing to enhance code robustness and ensure proper handling of memory leaks during concurrent queue operations
added a new method ` addSpecialTokens ` to multiple encoding methods in ` HuggingFaceTokenizer ` to allow additional handling of special tokens when encoding operations
[ hotfix ] [ runtime ] remove explicit iteration in compute resource profile
loadsingletsfilenode : account for the chunk size of the header when add new chunk .
added session storage context constant and associated actions to the BrowserSessionStorage and DuoSecurityUniversalWebflowConfigurer to enhance session management and allow for better context handling in the web flow
disabled test case that do n ' t pass yet . the method be not implement yet .
added a default constructor to TypeAdapter , and updated the Ignore annotation in Java17RecordTest and ReflectionAccessTest to improve object initialization and prepare for future record support handling
make sure we do n ' t call kill in finally block for late event
refactor AntPathRequestMatcher to improve code readability to enhance maintainability and simplify future updates
[ ds - 3769 ] authorization service : fix create a group without name ( endpoint )
added null check before releasing the deflaterEntry in GzipHttpOutputInterceptor and modified test assertions in BlockingTest to improve resource management and enhance test reliability by removing redundant print statements
added JUnit AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure cleanup occurs after each test execution
remove irrelevant unicode character from checksum ( # 547 )
refactor code to improve command handling and description generation to enhance readability and maintainability by simplifying command execution logic
bugfix # 234462 - do not register key listener in instrumentation service if not need .
updated the type of ` objectToSave ` from ` objectToSave ` to ` DBObject ` and added a new test for saving JSON strings to improve type safety and ensure correct functionality in JSON handling
added a check for multiple remote addresses in the RequestUtils class and implemented a corresponding unit test to ensure that the method correctly handles multiple remote addresses in requests and improve test coverage
updated job argument handling in JsLibrary to use ObjectBuilder instead of String to improve type safety and compatibility with JSON processing framework
refactor CookieManagerTest and UnmodifiableMaps to use a static method for retrieving the local host address to improve code clarity and maintainability by centralizing proxy address retrieval logic
modified glyph wrapping logic in GlyphLayout . java and added a test case in BitmapFontTest . java to improve performance and ensure correct text rendering during text rendering
resolve the issue of pause / resume split in pulsar ( # 5422 )
hive - 27305 : allow hive . script . operator . id . env . var to specify the id of the hive script operator ( navis via ashutosh chauhan )
refactor the getListedTermCounts method to utilize an Stream for processing term counts based on specified facet sorting to improve efficiency and clarity in counting available terms based on specified facet sorting
added a new action class ` UseSeparateStepSizeAction ` to handle the usage of separate step sizes in the JOGL plugin to enhance user experience by providing a convenient way to display step sizes in the UI
replaced private fields with final fields and added a new method to filter unlock actions based on user data to enhance code clarity and ensure proper handling of file locking mechanisms
hbase - 25823 use list instead of list to avoid indexoutofboundsexception ( # 3219 )
change default value of request headers from " false " to " 1 " in HttpClientRequestAdapter and its test to ensure headers are added with a specific starting value of " 1 "
pdfbox - 2852 : use ioutils . closequietly instead of null check
added fullscreen support and modified display mode handling in GwtGraphics to improve fullscreen functionality and enhance user experience during rendering
webfingerexchangetest : normalize resource uri to prevent url - related conflict
added unit tests for SoulApacheDubboClientConfiguration to ensure that the configuration properties are correctly initialized
updated file path resolution in SkinLoader to use the correct method for resource management to ensure compatibility with different file systems and improve code maintainability
updated log level from warn to info for missing attributes in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to improve logging clarity by using appropriate log severity
replaced calls to ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple files to improve thread safety by preventing potential interruptions during lock acquisition
changed package declaration from ` java . lang ` to ` java . lang ` to ensure consistent package structure across the project
added exception handling logic to the redundant comparison finder in NullDerefAndRedundantComparisonFinder . java to ensure proper handling of specific exception scenarios during method processing
fix onmanifesterror to work around http source in android 4
added a new configuration property for maximum prepared statements per database connection to enable flexible control over the number of prepared statements cached per database connection
change return type of the ' set ' method from WritableConfig to Configuration in multiple configuration classes to provide a more general type safety and flexibility in configuration management
added a method to check error conditions in the AutoScalingHandler class to handle errors more gracefully to ensure that errors are properly managed during command execution
updated the CombinedDataset class to improve data handling to enhance performance and accuracy of dataset operations
replaced a byte array buffer with a single byte variable for input to improve code readability and reduce memory usage
added methods to remove cryptography restrictions and check for restricted permissions to improve security handling by enabling proper removal of cryptography restrictions
add a check for cancellation before executing chunk generation in Entity class to ensure proper handling of entities that have not been cancelled before generation a new chunk
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest ` to ensure proper handling of page margins with long text transformations
added null check and context assignment for vContext in Vectorizer . java to ensure that vContext is always available before use to prevent potential null pointer exceptions
increase speed unit for windon ( fix # 484 )
hbase - 11591 metricsuseraggregatefactory default to false when disable metric user - agent ( liyin tang )
added a method ` isEmpty ( ) ` to the ` JsonObject ` class and a corresponding test ` testIsEmpty ` in ` JsonObjectTest ` to provide a way to check if the JSON object is empty and verify its functionality through unit testing
fix issue with launcher2 crash . ( bug 6742288 )
refactor HttpClientRequest , HttpClientResponse , NetSocket , ReadStream , and NetSocket classes for improved organization to enhance code readability and maintainability
fix the zadd parameter not be pass to the getclient ( key ) . zadd ( key , score , params ) method . ( # 25647 )
[ ds - 3762 ] fix test and fix some typo
rename testasyncmessages to testasyncmessagesperformancetest because it fail on jenkins
added a method to retrieve TargetNode optional and modified logic in ` VersionedTargetGraphBuilder ` to improve handling of optional targets to enhance code clarity and ensure proper functionality when dealing with target dependencies
update timezone handling logic in TimeZoneProvider . java to use specific epoch values to improve accuracy and maintainability of time zone calculations
replaced the calculation of ` field _ pictureData . length + 4 ` with ` HEADER _ SIZE ` in ` EscherBlipRecord . java ` and added a new test class ` TestOLE2Embeding . java ` to improve data length handling and verify functionality for embedding Excel files
modified the initialization of variables for ` row ` and ` column ` in ` JSONParser . java ` to ensure correct starting point assignment for JSON parsing
refactor ` findTypes ` and ` JavaType ` to use ` Pattern . aspectjNameToPattern ` instead of ` FullyQualified ` to improve type - checking logic using ` Pattern . aspectjNameToPattern `
added functionality to play trailers for a new item in the BaseItemDetailsFragment to enhance user experience by allowing users to play trailers when available
added a method to remove glyph information from the cache before freeing pointer in CStrike to improve memory management by ensuring proper cleanup of glyph information
fix for mnt - 8287 : the process instance ca n ' t be delete after termination
camel - 16189 : camel - xml - dsl - fix to use name space when xml type be not specify .
updated the endpoint in SimpleHttpClientTests from " http : / / apereo . org / scottb . html " to " https : / / a1234 . org " to ensure the test verifies the correct endpoint usage for HTTP requests
added - d option to reset all preference to default value ( for debug purpose )
changed access modifiers of several fields and methods in ThriftMetrics and ThriftServer classes from private to protected to allow subclasses to access these fields and enhance extensibility
added functionality to remove deprecated channels from the manual fan speed channel to improve user experience by informing users of the deprecated channel removal
use hamcrest assertion instead of junit in integrations / cdi / avro - backport main ( # 1749 ) ( # 6202 )
removed redundant null check for expansionHelper before stopping it to streamline code by eliminating redundant checks
added null index check and implemented equals / hashCode methods in PartitionFactory to ensure safe comparison and hash code functionality
cloudstack - 6124 : put root disk size into custom params if not present
updated visibility logic in PredictionRowView to use PreferenceExtensionsKt for mPredictionsEnabled to enhance user experience by dynamically showing suggested apps in the drawer
remove query cr from bbox bbox on api override ( untested )
added methods to validate value , position , and Merkle tree depth in LibrustzcashParam . java to ensure that shoud values are valid and prevent invalid shoud values
mark the IThrowableEntity class as deprecated to indicate that it may be removed in future versions or replaced with a better alternative
added random values for x and y in NodeDataImpl . java to enhance variability in graphical data generation
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` testRefreshToken _ should _ fail _ when _ missing _ scopes ` to improve clarity of the method and ensure proper failure handling when missing scopes are encountered
refactor variable assignments for clarity and efficiency in javacStep . java to improve code readability and ensure proper resource management during compilation
updated VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to prepare for the release of version 0.9 . 2
add a condition to check for DEEP _ SHORTCUT item type in LoaderCursor to ensure proper handling of deep shortcuts in the query results
add hashCode ( ) method to TimeGranularitySpec class to ensure proper functioning when comparing objects between time types and column names
changed access modifiers of BooleanWeight and DisjunctionMaxWeight classes from private to protected and added new fields to allow subclasses to access these classes for better extensibility and maintainability
added a boolean flag to control proxy response code behavior in HttpURLConnection to ensure proper handling of NTLM proxy when the response code is used
[ gr - 8264 ] aarch64 : use scratch register and not aarch64 .
bug 9041 : use the capacitytable for the host when calculate the total memory usage in the domr
added a null check for maxScore in JSONResponseWriter . java and updated test cases in TestDistributedSearch . java to ensure scoring is included only when maxScore is not null and improve test coverage for query execution
[ cleanup ] create a new audio recoder with backpressure . this solve the timing issue .
modify the calculation of newOriginX to account for scaling adjustments to ensure correct positioning of the component based on subject bounds
updated null and empty check for the data source in DruidQueryBasedInputFormat . java to improve input validation and ensure default intervals are set
added a new property type " Original Type " and updated the pattern pattern in CustomProperty . java to enhance functionality by allowing retrieval of additional property information
added a static method ` create ` to the ` Index ` class for creating ` IndexImpl ` with specified data to enhance flexibility in constructing ` Index ` objects from a ` Table `
simplified the return statement by removing an unnecessary boolean variable to improve code readability and maintainability
avro - 2704 : fix compatibility check for reader type ( # 2844 )
added handling for various entity types in QueryUtils to improve query processing for nested attributes in JPA
replaced the implementation of adding and accessing spans with synchronized blocks to ensure thread safety when accessing shared resources in TestSpanHandler
we now use wildcard in action method gettext ( ) , gettext ( ) and gettext ( ) .
fix ( system ) : viewcontextimpl # apply auth _ to _ local rule when fail to get default realm
refactor OAuth2AccessTokenEntity class for improved readability to enhance maintainability and clarity of the codebase
updated status messages in SCBEngine , TestInvokerUtils , HighwayServerInvoke , and ServerInvoke to indicate that the requests are rejected due to the service rather than being ready for a shutting down
added new project files for Default - 1024w - 1366h and ios - moe / resources to establish a foundational structure for iOS applications
added ConcurrentMergeScheduler to TestSearcherManager . java to improve merge performance and resource management in the test
updated null checks and improved list handling in GenericUDTFInline to enhance code robustness and prevent potential NullPointerExceptions
changed implementations of MapIterable , FJIterate , and ParallelIterate classes to improve code organization and consistency across data processing components
ticket # 2506 : prevent zspace from click on another cell in the spreadsheet input field
[ drools - 6252 ] fix memory leak in hibernate bundles ( # 2370 )
fix timeout calculation when skip unusable connection from
add voice compiler support for non - packaged resource .
updated file path handling and improved directory checks in FileOpener . java to enhance compatibility across different operating systems and ensure proper file processing
changed the return type of the row ( ) method from Cell < T > to void to simplify method interface and ensure row access is always called
validate that there be duplicate port in rpc - ws - port ( # 1443 )
added null mask functionality to the WebSocketClient class to enhance WebSocket connection handling with customizable masking
refactor genUDTFPlan method to return a Pair < RelNode , RowResolver > instead of a single RelNode to improve method usability by allowing the return of a single RelNode instance
planner - 492 add count to nodeselectionstats to avoid redundant count creation during node selection
add test case for a new person - related class that be miss some javadoc ( e . g . maven - project ) .
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to improve code clarity and ensure proper handling of the owner pointer ' s existence
added a clock setup mechanism and updated fade - in methods in PlaybackOverlayFragment . java to improve UI responsiveness and user experience with dynamic UI updates
remove some unnecessary duplicate call to markdecomparatoroutputlevel ( ) in some place .
changed the IMPL field from static final to non - static and improved exception handling for SegmentReader class loading to enhance flexibility in loading classes and provide clearer error messages for better debugging
ensure that firecellupdatedevent be run on the ui thread for responsiveness
replaced DefaultInetAddressAdapter with CollectionTypeAdapter and updated related methods to improve clarity and consistency in type adapter handling
added methods to assert and validate values in Series class to ensure proper handling of null values and provide informative error messages
updated audio time option from " -- no - audio - time - stretch " to " -- audio - time - stretch " to enable more flexible audio time stretch option
lucene - 6766 : make sure intersect ( x , y ) in geopointquery = = y [ i , 1 ] ; small improvement for minimum / maximum lat / lon ( # 1651 )
server : fix npe while update last disk offering ( # 8550 )
close hazelcast instance on test completion ( # 1572 )
add some extra check on getinstance ( ) trigger nosuchalgorithmexception
added a log statement to the QFileClient class to improve debugging and traceability of operation logs
fix wrong type for varargs in generated type . fix # 2754
fix a nullpointerexception that may occur if we be not connect to a peer .
replaced manual addition of demand with MathUtils . cappedAdd method to simplify demand handling and improve code readability
replaced the try - catch block with a try - with - resources statement for ImageOutputStream handling to ensure proper resource management and avoid potential NullPointerExceptions
refactor showSearch method calls to use Intent for SearchActivity instead of TvApp to simplify search activity creation and improve code maintainability
removed redundant ` this ` keyword from ` schemaCrawlerOptions ` initialization in ` SchemaCrawlerCommandLine ` and ` GrepOptions ` classes to improve code clarity and maintain consistency in style
http : / / issues . apache . org / jira / browse / amq - 3872 - fix web console configuration for osgi
added @ Autowired annotation to PersonRepository in RepositoryIndexCreationIntegrationTests . java to facilitate dependency injection for the repository entity
changed the exception type from ` Exception ` to ` InterruptedException ` in ` UIServer . stop ( ) ` and updated log message formatting in ` TestVertxUIManual . java ` to improve thread safety and enhance log clarity
test ( core ) : fix switch / cases indentation see camel - 14540
fix ( themeselector ) : mouse wheel not update correctly in some case
[ java ] avoid false share on rhs padding for minicastflowcontrol .
added alignment and vertical alignment parameters to the editStringAt method and related classes to enhance flexibility in text editing by allowing users to specify alignment preferences
throw illegalargumentexception instead of npe when a non - existent model file be pass .
added checks for distinct queries in multiple classes and modified grouping logic in the ` ClusterIntegrationTestUtils ` and ` QueryGenerator ` classes to improve query handling and ensure correct aggregation behavior based on the distinct query type
add method to get the closest native linkage for the native code snippet .
bug 62231 - add a space to the end of line in the file list
added null check for children before iterating through its elements to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition variables to MessagePackParser and updated JsonLocation usage in MessagePackParser to improve functionality and error handling during JSON parsing
added locale management after class teardown in AbstractSolrMorphlineTestBase to ensure consistent locale across tests by resetting Locale after tests
removed unnecessary conditional checks for ` isLauncher ( ) ` in ` LauncherFragment . java ` to simplify code logic for determining the status bar size
added a new test class MetricsReporterTest to verify metrics registration functionality to ensure correctness of metrics handling in the MetricsReporter
camel - 3126 : remove typecachemap from osgiserviceregistry since it ' s not use
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for Rectangle objects
[ stream ] add random name for sink list test ( # 5507 )
updated DSAParameterGenerator logic to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and maintain consistency in BigInteger usage
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and updated methods to retrieve the am host name to enable the use of the AM machine when submitting work to LLAP
fix eventual consistency in testclientoutofmemoryhandlertest
added a new method ` getCmoObjectId ` to multiple shape classes and updated calls to use it to improve the handling of object ID retrieval for shape types and ensure consistent behavior across shapes
added a test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of selecting distinct entities from the database
updated method names and implementations in Driver , SearchTravRetLoadFieldSelectorTask , SearchTravTask , and SearchTravTask classes to improve code clarity and maintainability by standardizing naming conventions
added methods to register and unregister extension adapters in ManagedKubernetesClient to ensure proper management of the extension adapter ' s lifecycle
updated subtitle text setting and added info row extraction method in Utils to enhance clarity and structure of media content displayed in the UI
updated JUnit annotations from ` @ After ` to ` @ BeforeEach ` in ` TestAuthHandlerBoot . java ` and ` TestRSAProviderTokenManager . java ` to utilize the newer JUnit 5 features and improve test lifecycle management
do n ' t throw exception when generate summary of bug report
removed specific boolean parameters from intPool and bytePool reset calls to simplify reset operations for improved code readability and efficiency
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding behavior
updated ShadowWindowManagerGlobal to support TIRAMISU and introduced a new WindowSessionDelegateU class to enhance compatibility with TIRAMISU and improve window management functionality
issue # 2671 - urlhelper will always link to the server port if scheme = ' http ' or ' http '
added support for MSSQLDatabase in the AddForeignKeyConstraintGenerator to ensure proper handling of foreign key constraints in MSSQL databases
hbase - 22072 fix checkstyle violation in hbase - server
moved pipe block fetching out of the world but in the event bus to a new class to improve efficiency . also remove some debug code .
allow xpath rule to be set to speed up debug
updated field names in HiveLookupTableSource and modified SQL query in HiveLookupJoinITCase to ensure consistency and accuracy in table schema representation
add more javadoc and deprecate method
updated the schema name retrieval in SequenceSnapshotGenerator to use CatalogAndSchema to ensure that the schema name is correctly associated with the specific database schema
update v _ color scaling in SpriteBatch , SpriteCache , and AlphaTest classes for better color rendering to enhance visual effects by using full opacity in the rendering pipeline
fixed - moved batchpromise . join ( ) method from redissonconnection . toCompletableFuture ( ) to redissonconnection . oncompletablefuture . fromfuture ( ) and redissonconnection . toCompletablefuture ( ) method . # 863
added base core URL normalization in SolrLoggerServiceImpl . java to ensure that only valid Solr instances are recorded in the statistic yearCores list
renamed the method ` launchTask ` to ` launchTaskFromView ` and added a new method ` launchTaskFromView ` to improve clarity and enforce non - null parameters for task handling
modified MorfologikFilter to handle dictionary resources and updated related imports for improved functionality to enhance dictionary processing capabilities and ensure proper handling of dictionary resources
updated sorting options in GridFragment to change their names from " stars " and " critic rating " to " community _ rating . " to improve clarity and consistency in user interface
added imports and visibility logic for ListRow in CustomListRowPresenter to enhance the UI by ensuring the header view is visible when no items are present
added a try - finally block around the switch statement in StressAction . java to ensure that the countDown method is called after all potential exceptions occur
clarify the header behavior for the httpclient redirect handler in the javadoc
updated ` accordingTo . isCaseSensitive ( ) ` method calls to use ` instanceof ` for DB2Database to improve type safety and avoid potential null reference issues
configure jsr310 module for java 8 date and time
replaced the import of Log4j MDC from org . apache . log4j . MDC to org . slf4j . MDC to ensure compatibility with the newer logging framework
replaced TypeBearer with Type in PhiTypeResolver . java to improve type safety and eliminate unnecessary type casting
removed unnecessary import statement from CoinbaseTransactionStatusDeserializer class and adjusted formatting in the deserialize method to improve code readability and maintainability
force target while build target in buckconfig .
[ java ] call system . gc ( ) before initialize a new idle strategy in ping . java to ensure proper resource cleanup during shutdown
replaced instances of ContentProvider with ContentResolver in OCFile class to use the more specific ContentResolver for content access in the
removed unnecessary state change checks from ReportPanel . java to simplify event handling logic for autoscale and self - loop settings
add null check to testinglogicslot to ensure slotowner be not null
added a new file ` RemoveCallsToSystemGc . java ` to create recipe that removes calls to ` System . gc ( ) ` and ` Runtime . gc ( ) ` to promote the removal of garbage collection invocations from the JVM
remove superfluous super ( ) call which compiler would do for free
added a setUIID method to the ScaleImageLabel class to ensure proper icon manipulation during UI updates
changed variable name from foundEntry to update and updated related logic to improve clarity and maintain consistency in variable naming
8009843 : sjavac should accept - cp a synonym for - classpath
ninja : fix the link to compiler in avutil . java
fix break isinitialized check from maybejoinring ( # 4679
815045 : remove flakey test from java / lang / test7196045 . java to avoid jdk - 8208690
updated the density and decay values from 1.5 f to 0.0 f and 0.9 f in ShaderParametersLightShaft . java to improve the shader ' s output for better lighting accuracy
added support for state management in OidcConfiguration to enhance the flexibility of state handling in the OIDC redirection process
# 1034 - postgres - support uuid constraint on nullable column ( postgresql do n ' t support ` ` unique ' ' )
added federated share support in UsersAndGroupsSearchProvider and EditShareFragment to enhance user experience by ensuring files are federated when appropriate
added a method ` needsDocValues ( ) ` that always returns true to ensure that the document values are always available for processing
updated BufferAlignmentInterceptor and related classes to improve alignment handling and error messaging to enhance clarity and maintainability of buffer alignment operations and error handling
added a method for iterating over integer values in Int2ObjectHashMap to enhance the functionality of Int2ObjectHashMap to support null values in key - value pairs
fix deadlock with global scoreboard data not be able to share scoreboard .
changed return type of count methods from Long to long in QueryDslMongoRepository and SimpleMongoRepository to improve data handling by using a more appropriate data type
refactor MTree snapshot creation logic to improve clarity and logic flow to enhance the readability and maintainability of the snapshot generation process
refactor VectorUtil to use a variable for the dot product calculation and add unit tests for it to improve code readability and accuracy in calculating the dot product score
added new methods for setting and retrieving the last confirmed block number in the DynamicPropertiesStore and Manager classes to improve management of the confirmation block ' s threshold in the database
refactor locale setting logic into a new Systems class for better code organization to improve logging mechanism based on user - specified locale preferences
added a new boolean flag ` wasNewDbCreated ` to track if a new database was created to ensure that the migration logic only triggers updates when the new database was created
sec - 1265 : remove redundant object remover by basicaclentryafterinvocationcollectionfilterprovider . remove ( ) .
refactor conditionals for determining if datamodel is null to improve code readability and maintainability
added thread checking in TestIndexWriterDelete . java to ensure the current thread is used before proceeding with further operations
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method for better functionality
updated import statements and refactored item handling to use ModelCompat for better compatibility to improve code maintainability and ensure compatibility with the latest SDK structure
update batikSVGDrawer to insert imported attribute to document element ( fixes # 103 )
fix error message in consolekeys . yml when parse user config fails
added logic to check and set ' WaitForResult ' based on the intent extras to ensure correct handling of ' WaitForResult ' status based on the intent data
updated the PriorityQueue and related classes to use a Supplier for lazy populating the score document to improve flexibility and reduce redundancy in the initialization process
added functionality to display widget descriptions if available to improve user experience by providing context - specific information
added a maximum attribute count limit for attribute registration and threw a specific exception if the maximum registered attribute count is reached to enforce limits on attribute registration and improve error handling
move predicate test to impl / predicates in com . hazelcast . query . impl . predicates
camel - 6395 : headerfilterstrategy should be case - insensitive by default
modified InlineLayout and Breaker classes to improve handling of unbreakable strings to enhance maintainability and prevent potential runtime errors due to unbreakable strings
added null safety and improved layout handling in ShareUserListAdapter . java to enhance stability by preventing potential NullPointerExceptions during view initialization
refine instrumentation for test to allow jdk 11 to work
added a check for insert destination before source in BrowserContentPane to ensure correct column count when necessary
fix test to account for new cgroup version ( # 1738 )
replace CxxDeps . of ( ) with EMPTY _ INSTANCE for empty dependencies to improve performance by avoiding unnecessary object creation
added a null check for the rule variable and threw a HumanReadableException for null values to improve error handling and provide clearer feedback on source configuration issues
fix loading of proxy for 1.9 . 4
remove unnecessary negative index check for ' atIndex ' in StringUtils . java to simplify the code by eliminating unnecessary logic
increase sleep time in timeouttest to allow for a longer time out
refactor TaskOverlayFactoryGo to use AssistContentRequester for better management of assist content to improve code clarity and maintainability by centralizing the management of AssistContentRequester instance
replaced the method of creating a readable string from ` vote . getVoteAddress ( ) ` to ` StringUtil . encode58Check ( witnessAddress ) ` and updated the null check logic to improve address encoding and ensure proper account validation
modified the DefaultMethodRegressionTests class to improve test coverage to ensure coverage for default method behavior validation
updated WorkloadManagerMxBean . java for consistency and clarity to improve maintainability and readability of the code
int - 1921 upgrade to spring - kafka 2.2 . 0 . beta2
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to the ExceptionThrowingTaskletStub class and corresponding unit tests for rollback behavior to enhance exception handling and ensure proper rollback behavior in the testing framework
[ beam - 10678 ] include runner type in error message ( # 10720 )
added a ` Map < String , String > extraProperties ` parameter to multiple tuner configurations to enhance flexibility in handling additional properties during table configuration tuning
bug fix : ignore segment in _ progress ( # 8807 )
added a conditional check to return null if touchable is disabled to prevent further processing when touchable is disabled
add a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure compatibility with ` precompiledHeader ` in other cells
throw exception instead of npe if non - existent cache config exists
refactor package installation check to use a dedicated method for node package installation to improve code clarity and maintainability by encapsulating the logic in ProcessUtil
added managed annotations for management of beans and operations in MBeanContainer and Destroyable classes to enhance monitoring capabilities for component lifecycle events
changed the conditional from " if ( settings . inAppBrowser ) " to " if ( false ) " to adjust the behavior of the app browser setting to improve code readability and ensure consistent behavior based on user preferences
updated equality checks for string comparisons in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` . equals ( ... ) ` method to improve code readability and maintain consistency in string comparison
modified isReifiable check logic and added new classes T6558559a and T6558559b to improve type safety and handle unchecked conversions more effectively
update worldeditlistener to show size and position
camel - 17131 : camel - kafka - addendum : ensure all task be run before submit in the consumer .
add default implementation for examples ( ) method in Schema . java to provide a placeholder for future implementation
replaced the thread interruption logic with a while loop and modified timeout handling in AgentRunner . java to improve thread management and ensure immediate termination of the loop
remove dimension from result during aggregation loading to ensure data consistency by removing unnecessary dataset elements
updated conditional logic in FacetComponent . java for better readability to improve code clarity and maintainability by using logical AND instead of bitwise AND
refactor RustBinaryDescription and RustLibraryDescription to use CxxPlatforms for parsing time dependencies to streamline code and improve dependency management for C++ platforms
added ' name ' property with getter and setter methods in JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties classes to enhance object encapsulation and allow for easy access to the name attribute
idealgraphprinterobserver : make sure to exit gracefully on error
phoenix - 5126 : do n ' t apply point lookup hint if there be a small scan threshold ( addendum )
added routeId field to the filterToStringCreator method to enhance clarity and specificity of the filter output
fix # 2631 : clone widget before update the binding
refactor ` onOverviewShown ` method to ` showForOverviewIfNeeded ` for better clarity and reuse in ` DiscoveryBounce ` to improve code maintainability and streamline overview display logic
refactor null checks in CheckIndex . java for better readability and add a new test method in TestPointValues . java to enhance code clarity and ensure proper handling of null values in index fields
updated the publish method to use ` updateLastState ` instead of ` true ` to ensure the state is accurately updated during state updates
added backslashes around the string list values in the MetastoreDirectSqlUtils class to ensure proper formatting for identifiers in SQL queries
add a null element to the exp collection in SpliteratorCollisions . java to ensure proper handling of null values in the collection
alexeibarantsev : add a test to make it case - insensitive
replaced a while loop with a while loop structure in ManyToManyConcurrentArrayQueue . java to improve clarity and ensure the loop terminates prematurely
# 165 - enh : add queryargs . forwardonlyfetchsize ( ) ... for mysql
camel - 19419 : optimize rout engine to reduce stack frame in use during rout .
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated window radius initialization to use rounded corners support to ensure compatibility with devices that support window rounding
updated the implementation of background management in DesktopTaskView to utilize View instead of ShapeDrawable and LayerDrawable to improve flexibility in handling background icons and their orientation
[ type : refactor ] initialise upstreamcheckservice in upstreamcheckservice ( # 3590 )
updated logging statements in AbstractSession and AbstractSessionManager to use debug level when debug level is enabled to improve logging granularity and reduce noise in logs during execution
[ hotfix ] return all lock instead of swallow exception
[ flink - 6542 ] activate strict checkstyle for flink - connector - kafka
added functionality to conditionally generate mipmap based on custom data to improve performance by reducing unnecessary mipmap generation when no custom data is present
change commons - compress test case to use single quote rather than double quote
added selection selection functionality to the List class to ensure the user can interaction with touch events when not selectable
removed a condition that checks if the field vector ' s value count is zero to simplify the logic for improved readability and performance
added file separator support in PolicyContext and improved printing statements to ensure consistent file path handling across different operating systems
replaced Set with ArrayList for flatQueries and expandQueries to improve performance and allow for dynamic list operations
updated TLSRestrictions . java to enhance TLS validation logic to improve security and performance of TLS operations
fix for flaky kafkamanager . close ( )
solr - 14187 : make testfsnapshotcloudmanager more robust for test suite
added a lock file deletion mechanism in RocksdbMavenPomCache . java to ensure that the workspace lock is properly managed and removed
updated NIOServerCnxn . Factory to use InetSocketAddress for client port creation to ensure compatibility with local socket handling in HBase
refactored the response handling in RestClient to utilize a new method to improve error handling and logging functionality for better debugging
fix the conversion from string to object when create the push job spec . ( # 1161 )
updated loginStudent method calls to use test properties for student accounts to enhance security by using a more relevant test credentials
added null checks for mCurrentItem before comparing its item IDs in EnhancedBrowseFragment and StdBrowseFragment to avoid potential NullPointerExceptions when mCurrentItem is null
increased the number of strings from 500 to 100 to accommodate larger data sets and improve test accuracy
replaced the custom ` ByteArrayInStream ` implementation with an empty ` byte [ 0 ] ` in ` WKBAttributeIO . java ` to improve memory handling by using a more efficient byte array stream
renamed method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity by accurately reflecting the method ' s purpose
added a check to determine if a direct substate is in the AbstractStateMachine class to optimize performance by skipping unnecessary state transitions for direct substates
add type checking and equality comparison for ListMultimap and SetMultimap in MultimapSubject . java to ensure correct comparison behavior for Multimap instances based on their type
added joinoperation marker to the postjoinoperation to reduce false alarm log while joining / merging
add a new test method ` testDataIssue258 ` to verify PostgreSQL data handling with SchemaCrawler to ensure proper functionality and output of data generation in the application
no jira - fix for http : / / issues . apache . org / activemq / browse / amq - 5035 - test that destroy durable subscription fails
updated AvaticaDatabaseMetaData . java to enhance database metadata handling to improve performance and maintainability of the database operations
updated MongoDbConnectionPoolProperties to use DurationCapable annotation for lifeTime , idleTime , and maxWaitTime to improve configurability and clarity of duration configurations
remove superfluous cast to mediumformatfactory when create mp3 stream
refactor filtering handling in FacetProcessor to improve clarity and functionality to enhance the handling of filter application status and ensure proper documentation acceptance during query execution
added a timeout handler and a enabledTimeout flag to control timeout behavior to improve control over timeout behavior in the shuffle process
update mQuickStepStartingRotation initialization and comparison to use a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code readability and maintainability by using a descriptive constant instead of a magic number
camel - 17894 : improve logging , add more descriptive debug information for xpathbuilder .
remove superfluous / data path because dataresource be no longer available
[ java ] added test to ensure that go tokenizer handles backslashes correctly in the file
added validation for the ' atlas ' property in AtlasTmxMapLoader to ensure that the required ' atlas ' property is present for map initialization
camel - 14257 : remove the propertyPlaceholders camel from component and since it be no longer use
added closeDB ( ) method call in BlockchainTest . java and removed redundant receive listener in KafkaTest . java to improve database resource management and simplify code logic
refactor line processing logic in CoreMarkdownNodeRenderer to use a List instead of a String array to improve code readability and maintainability by centralizing line extraction logic
polish ` ` remove unused import ' '
replaced ImmutableList . Builder with List for argument list handling in SQLBindings to simplify list creation and deprecate the use of immutable lists
added a check for the " OpenJDK " JVM in addition to the existing Apple vendor checks to ensure compatibility with both Apple and OpenJDK environments
[ java ] add back keepalive that be remove by
updated VertexAttribute initialization in MD5Renderer and ObjLoader classes to use constant values instead of string representations to improve code maintainability and readability by centralizing vertex attribute definitions
camel - 4752 : added propertiescomponent to defaultcamelcontext so that it can be use in a blueprint .
replace null check with accountCapsule initialization for better clarity to improve readability and ensure account existence is validated correctly
prepare for the 3.8 . 1 release : updated version number and add changelog .
replace return statements with unannotatedType ( ) for type variables in Types . java to ensure correct handling of unannotated types for improved type safety
updated the flush manager configuration in StorageGroupProcessorTest . java to ensure consistent handling of sequence ts file sizes during tests
updated class loading statements to reflect the new package structure to ensure compatibility with the new Jetty environment setup
added a call to ` params . waitbeforestart ( 2500 ) ` in the FFMpegVideo class to ensure that video processing completes before proceeding
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor to simplify the constructor and eliminate unnecessary complexity
fix accessortest a bit by remove the useless static class .
add framemap access to lirgenerator and remove some dead code from compilemethod
updated test conditions in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore instead of SpringRunner to improve test execution management and ensure compatibility with the new conditional logic
fix boat placement on water ( # 4854 )
modified the ` toString ( ) ` method in ` Directory . java ` and added the ` getLockID ( ) ` method in ` RAMDirectory . java ` to improve the clarity of object representation and ensure consistent lock management
removed the method ` allowExperimentalOptions ( ) ` that directly checks for experimental options to simplify the logic by removing unnecessary method ` allowExperimentalOptions ( ) `
added methods for path assertions in BDDAssertions . java to enhance the usability of BDDAssertions for better assertion handling
update HostPort initialization to use ` hostField ` instead of ` hp ` to improve clarity and ensure the correct port is used based on the initial value
updated log level from debug to warn for multiple Kubernetes config files and added additional logging guidance to improve logging clarity and provide more informative feedback regarding configuration validity
added file upload handling in FileUploadService and UploadListActivity to manage file uploads to improve file management and streamline the upload process in the application
added a new ProviderLoader class to handle provider loading events to streamline provider installation and error handling in the application
updated imports and references from ` Span ` to ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor . java ` and ` StreamEnvironmentPostProcessorTests . java ` to use the new header class for improved traceability in the code
updated the SQL query instantiation in StandardChangeLogHistoryService . java to use ColumnConfig for computed properties to improve query performance and simplify the execution of the query
hhh - 17672 : fix name _ qualifier in postgresql dialect for postgresql 8.1
fix potential integer overflow when ' 0 ' in member count
updated scheduler initialization method and added error handling for scheduler state management to improve robustness by ensuring scheduler state is checked before starting the execution scheduler
removed unnecessary string conversion of text to InlineBox and added parentheses for clarity to improve code readability and maintainability
fix checkstyle issue in util / statisticmap . java ( # 7 )
updated the staged rectangle slide end value from 383 to 500 to improve the responsiveness of the application window
make ` ` random ' ' button into bundle , add i18n support
updated condition in BukkitMain . java to include usage of plotArea to ensure ROAD _ ITEMS is validated against owned plot area
handle touch exploration state change notifications in shadowaccessibilitymanager more efficiently .
pdfbox5328 : fix handling of unusual character code ( # 5328 )
use getname ( ) instead of getpropertyAsString ( ) when set name in gui
refactor test since npoifs / npoifs be now share ( fixes # 597 )
updated the area retrieval logic in the Move . java file to ensure that the method correctly retrieves the appropriate plot area based on argument
update regex pattern in TestWebHCatE2e . java to ensure correct version matching to handle additional characters
updated the lower bound check for ` count ` to allow zero to ensure valid range for ` count ` when processing ` pickleEvents `
include consumer thread id in config ( # 7509 )
fix ( javac ) : if the compiledclassloader fail , the exception should be more helpful
ggb - 2334 only repaint when necessary
camel - 1037 fix the npe in camel - springbatchproducer
added a method ` isAnimationFinished ` to check if the animation has been completed to provide functionality for determining animation state based on animation timing
added a new test method to verify custom brand icon with line breaks in LoginMockMvcTests . java to ensure correct behavior of custom brand icon rendering with line breaks
added null check for otherUrl before comparing its string to avoid potential NullPointerExceptions when otherUrl is null
ggb - 2335 allow ' * ' in expression expression to be space - specific
refactor ObjectHashSet to improve performance and readability to enhance efficiency for larger datasets
updated null checks and comparison logic in DataUtilities . java to improve code clarity and efficiency to ensure accurate null handling and avoid potential NullPointerExceptions
fix creative inventory not be able to delete enchanted books ( mc - 12770 )
add test to ensure async operation return async response ( # 2539 )
rename header map from ` FLAT _ HEADER _ MAP _ SUFFIX ` to ` TARGET _ USER _ HEADER _ MAP _ SUFFIX ` and update related references to improve clarity by reflecting the purpose of user headers in the build process
add some additional debug information when send fails
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and introduce ` EMPTY _ LABEL ` to improve clarity of the method ' s purpose and ensure UI resets to a defined empty state
hive - 26495 : add batch retry mechanism for getpartitionsbynames ( miklobjects , review by krisztian kasa , attila turoczy )
added a closing brace to the FileListListAdapter class to ensure proper class structure and compilation
changed ArrayList to List for the sharees variable in OCFile . java and OCFileListAdapter . java to improve the flexibility of accessing shared data structures
corrected the index used to access child views within the BubbleBarView class to ensure proper view removal from the last child in the view
removed unnecessary package imports from JavaxWebSocketConfiguration and JettyWebSocketConfiguration to streamline visibility for internal classes and improve code maintainability
removed the boolean parameter from the S3Request constructor in S3Request . java to disable the expiration of requests by default
update jfxradiobuttonskin , fix # 226
modify DeweyNumber logic to handle zero and multiple split cases correctly to ensure proper error handling for invalid dewey number inputs and improve robustness
added a protected static variable ` categorySetString ` and modified the return statement to replace " Category : " characters to improve code maintainability and ensure proper formatting of the categorySet
updated assertions in WebSocketClientTest to use the correct close message format to ensure accurate validation of close message output for better debugging
added a null check for the classLoader and updated expected repository count in tests to ensure robust handling of null values and correct expected behavior in the WebappLoader
hhh - 12514 - if a managed class can not be annotate with a non - mapped superclass , ensure correct behavior in embeddedattributetransformer
pdfbox - 3646 : check if the base object be really a integer when convert the numbertreenode to a number
added a new test class ` TestPorterStemFilter ` to validate the PorterStemFilter functionality to ensure that the PorterStemFilter operates correctly in different file formats during analysis
modified the ` postBatchMutate ` method to ` postBatchMutateIndispensures ` and added a success parameter to control the execution of index updates when a batch operation is successful
corrected the package name from ` exlore . support ` to ` explore . support ` in multiple test files to ensure consistency and accuracy in the project structure
fix a race condition that can cause chat window to stay in sync state .
added ` Sys . touch ( ) ` import and removed it from multiple files to centralize touch event handling functionality across the application
updated command options for tracking changes in HgCmdLineInterface and removed untrackedFiles method from NoOpCmdLineInterface to enhance version control and ensure correct handling of file changes
camel - 6518 : camel - netty - avoid create a new timer for each message send to the producer
replaced ` intensity ` variable with ` range ` in directionalLight , pointLight , and spotLight classes to enforce the use of a range value for lighting calculations
added calculations for width and height in X11GraphicsConfig and WGLGraphicsConfig to ensure minimum dimensions of 1 to avoid rendering issues
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a meaningful string representation of the delegate context
added AnnoFilterTreeSet class to optimize class extension by filtering out unnecessary annotations to improve performance by reducing redundant checks during class loading
modify the logic for handling integer overflow in BytesColumnVector to ensure newLength does not exceed the buffer size and prevent potential integer overflow errors
fix testwritebehindmapstorewithevictionstest . testwritebehindmapstorewithevictions on main thread
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in MotifScrollPaneUI and XTextAreaPeer classes to enhance method flexibility to support a broader range of components
mob - 1444 : add function . isequal ( ) for check polynomial function
added null check before retrieving column class in SynthTableUI to avoid potential NullPointerException when table is not initialized
added error handling when loading custom change class to improve robustness by handling ClassCastException during class loading failures
replace ` ConfigPathGetter ` with ` DistBuildConfig ` and introduce new configuration methods to simplify the code and enhance configurability by consolidating path handling in ` DistBuildConfig `
fix double entry warn for x , qif and qif
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable the test due to a broke issue
modified the return type of ` doJoin ` and ` doJoinWorker ` methods to return a boolean indicating success or failure to improve error handling for non - join operations and ensure consistent return behavior
removed the optional < Boolean > getAutodeps ( ) method from JavaLibraryDescription . java to simplify the interface and reduce unnecessary dependencies
added FLAG _ ACTIVITY _ NEW _ TASK to intent flags in LauncherTimelineCursorAdapter . java to ensure proper handling of activity reset and new task launches
added a method checkPagingOrderBy ( ) to SpiQuery . java to enhance query filtering capabilities in the SpiQuery class
updated test assertions for repository names in RepositoryConventionPluginTests to ensure correct retrieval of URLs for Maven artifacts
add a new task to get the user ' s affiliation when a pubsub node become a affiliation
remove dependency on tomcat - http - > http - > http .
change access modifier of the method buildUserProfileByClassCompleteName from private to public to allow access to the method from other classes
added support for handling array types in CacheKey . java and improved equals method in CacheKeyTest . java to enhance cache key update functionality to support arrays and ensure proper equality comparison
updated file type detection logic to utilize FileSystemProvider for improved file handling to enhance compatibility and functionality across different file systems
fix fail websocket unit test after session closure refactoring
updated the VirtualDeviceParams handling in ShadowVirtualDeviceManager to improve callback management to enhance code clarity and maintainability by reducing reflection overhead
added a condition to check if the context is not changed before execution in HttpSessionSecurityContextRepository to ensure that the session is not duplicated when the context is executed
refactor InetAddress handling in NetUtil to improve clarity and logic to enhance robustness in retrieving loopback and non - point addresses
changed BUF _ SIZE to DEFAULT _ BUF _ SIZE and made related variables static to improve code clarity and ensure consistent default behavior during compression
updated KeyInfoReferenceResolver to include secure validation and improved exception handling in XMLSignatureInput to enhance security checks and provide clearer error messages for better debugging
added check to ensure iconChangeListener is only added if it is not already initialized to prevent potential null pointer exceptions when the icon change listener is not available
added Russian language support in the Language . java file to enable Russian - speaking users in the application
use nanosecond instead of second for duration ( # 3792 )
disable frame state verification for manually generate graph
added system property management and cleanup logic in Robolectric tests to ensure proper cleanup and reinitialization of system properties during tests
added a new system class " org . slf4j . " to the webAppContext and tested its loading in ViewClassLoaderTest to ensure proper loading of the SLF4J LoggerFactory class in the application context
add a check for " jar " in the ` ChangePackaging ` class and implement a test for removing the default packaging to enhance the handling of packaging logic and ensure correct behavior when removing dependencies
fix flaky test : filedownloadviahttpgettest ( ) and filedownloadviaproxytest ( # 1636 )
fix netbeans - 4480 : invalid error message in graphic view after save
rename defaultunits to preferredunits and update related methods to reflect this change to improve clarity and consistency in unit handling
[ log4j2 - 1263 ] patternlayout % date conversion pattern should render time in utc
removed an unnecessary whitespace in the return statement to improve code readability and maintain consistency
improve error reporting when hdfs uri be invalid
fix # 7808 remove indefinite scheduler for showtrackingnotification
camel - ftp : replace thread . sleep with awaitility in test
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve thread - safety and performance in concurrent scenarios
added ` ignore ` methods to multiple log classes to handle ignored exceptions to enhance log management by notifying users when an unhandled throwable is encountered
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential null pointer exceptions during execution
removed unnecessary type casting for item and contents in BukkitWorld . java to improve code clarity and reduce unnecessary type casting
remove the call to GraphicsUtil . cleanImage to clean an image before processing to improve image quality and performance
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing map and simpler directory implementations to enhance directory management capabilities and improve error handling in the Solr framework
[ pdfbox - 4597 ] avoid npe when there be no non - existent pdf file
fix the wrong field check in the assertion
updated ExtendedOperatingSystemMXBeanImpl to enhance performance monitoring capabilities to improve system resource management and efficiency tracking
added method to install left commands in the SideMenuBar to enhance the user interface by properly managing command additions
add a boolean variable ` advanceWindowed ` to ` AppSettings ` and conditionally calls ` setUpWindow ( ) ` in ` TweetActivity ` and ` UserProfileActivity ` to conditionally call ` setUpWindow ( ) ` based on user settings to improve control over window setup based on user settings
added support for SybaseDatabase in DropPrimaryKeyGenerator to ensure compatibility with Sybase database operations
fix version , licence and changelog for 1.0 . 8 release
[ java ] ensure that the leader be ready when await a record to avoid race with leader election .
replace ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java ` and implement the ` shouldDelayChildPressedState ( ) ` method in ` CellLayout ` and ` CellLayoutChildren ` to improve icon handling and ensure consistent state behavior in child views
added a return statement to the NearCachedClientMapProxy class to improve its execution flow and prevent further processing
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
added a method to shutdown HTTP server and wrapped the server startup logic in a try - catch block to handle potential exceptions when shutting down the HTTP server gracefully
camel - aws2 - s3 : add an option to create / update s3 producer for idempotent s3 consumer
[ flink - 1562 ] [ runtime ] correct taskmanagermetricshandler parameter name to match the key of the taskmanager
bug 10733 : fixed / added incorrect / missing key in 228 to 229 upgrade
hive - 8252 : thrift service security should not print password in log ( sergey shelukhin , review by ashutosh chauhan )
added maxEnergyLimit variable and updated energy limit assignment logic in VMActuator . java to improve energy limit handling for constant calls and ensure consistent fee calculations
added maxInMemorySize property and its getter / setter methods to HttpClientProperties , and modified WebClientPluginConfiguration to utilize ExchangeStrategies to handle memory limits more effectively during HTTP client creation
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
added new test files for Cucumber and step definitions in a Cucumber framework to facilitate structured testing of the Cucumber framework using Cucumber
fix json parser for ` array [ pow ( x ) ] ` ( # 1332 )
updated buffer appending logic in Utf8StringBuilderTest . java to ensure correct byte array handling for correct length calculation
added a check for parameter sets before processing and encoding in Params . java to ensure that only valid parameters are processed and improve robustness
camel - 7230 : camel - core - optimize rout engine to reduce the number of generated route in loadbalance from 2 to 1 .
added a configuration check for maximum buffered documents in TestIndexWriterExceptions . java to ensure that the test properly reflects the maximum number of documents tested
replaced string handling with Sha1HashCode for resource APK and string assets hash updates to improve efficiency by using a more suitable update method for hash updates
remove unused method from asmruntime ( # 2295 )
add miss biome tag ( # 9594 )
remove the asyncimageloader in favor of a fixed threadpool
refactor BaseTableUpsertMetadataManager to allow subclasses to access these members and simplify segment preload logic to enhance extensibility and maintainability of the metadata management system
replaced occurrences of " ر ر " with " ر " and updated " ر " to ensure accurate representation of data for months in Arabic locale settings
# 2324 use new hasimageequalto to check for null image to avoid nullpointerexception
camel - 18497 : camel - jbang - run command now include repository
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding invalid score processing
added cleanup method and timestamp handling in OnStartupTriggeringPolicyTest . java to ensure temporary files are removed after tests are executed
filterconditioneditor now properly request focus in the window before remove another component .
[ flink - 8954 ] [ checkpoint ] leave closed checkpointscleaner thread safe
added a new file XPathWhiteSpaceTest . java for testing XML schema parsing to ensure that the XML parser correctly handles whitespace - related errors during schema parsing
fix persistence of trie log layer ( # 5590 )
8058504 : incorrect gpl header cause re script to miss swap to commercial header for header
increase test timeouts for flaky simulator test
updated the method to check if the parentPath ends with a slash to improve the correctness of the path handling logic
added a print statement to indicate failure to load the skin file to enhance debugging by providing feedback on loading failures
added dirty flag and updated filter logic in LgoLevel2BatchSubscription and LgoGroupedLevel2Update classes to ensure the accumulator is properly managed during updates
added a new Result constant named UNDEFINED in TestStep . java to improve code readability and provide a clear representation of the undefined result
replaced PersistenceException with NullPointerException in unit tests to ensure proper exception handling for null callbacks in the database
fix the serialization issue of uploadjobmultipartitionoperation ( # 1900 )
[ flink - 23454 ] [ runtime ] add option to ignore miss journal file during recovery
fix # 724 - create new summarylevels static factory method that can be use for view
added a sizeMask variable and modified the ensureAvail method to incorporate it to improve performance by reducing unnecessary volatile keyword and enhancing the efficiency of data operations
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to potential issues with failing animations
replaced the assignment of targets with a direct retrieval from endpoints list to simplify the handling of message arrays by retaining only the first endpoint
updated spacing in the FileManager . java file to improve code readability and maintain consistency
updated TransformFunctionType to use string literals for various multiplication and multiplication functions to improve clarity and consistency in the transformation framework
javadoc fix . add method getshortname ( ) and getEnclosingelement ( ) to element .
8037550 : update rfc reference in javadoc to rfc 5280
fix : crash on decimal type with int / char
refactor ListActivity and NoteAdapter to use a for - loop and replace HashMap with SparseBooleanArray for selectedItems to improve code readability and performance while managing drawable data
reformatted conditional statements for softCommitTracker and softCommitTracker in DirectUpdateHandler2 . java to improve code readability and maintainability
fix absolute resource not work for config file of spring . home
refactor PreviewPositionHelper to accept a Context parameter and update related calculations to improve flexibility in handling screen dimensions based on context
[ java ] simplify logic in broadcastnewleadershipterm to avoid unneeded event publication publication .
updated assertions in PMDCoverageTest to improve logging accuracy to enhance clarity in error messages during tests for better debugging
refactor ByteArrayInputStream skipping logic and add a new Skip class for better error handling to improve reliability of byte skipping and provide utility for testing the skip functionality
simplified the condition for prompting updates in UpdaterTask . java to improve code readability and maintainability
make peer . max _ headers public . resolve issue 492 .
include rt . jar in the standard library jar ( # 7994 )
remove framer channel read when a local node be not ready .
updated method signatures to throw IOException and improved parameter retrieval in multiple classes to ensure proper error handling and maintain parameter consistency across the codebase
added conditional handling for response error based on whether the response is already committed to improve error logging and provide feedback when a response is already committed
modified condition checks in HttpSession . java for better readability and functionality to ensure that ' hold ' is either positive or negative , improving the robustness of the operation
modify fade - out behavior in HomeGestureTutorialController and swipe upGestureTutorialController to conditionally show or hide hotseat icons based on feature flags to enhance user experience by improving animation behavior based on feature flags
fix : log the name of an unknown preferenceab instead of the info
removed unnecessary ScimExternalMembershipManager instantiation and added additional properties for external group mappings to simplify group management and improve clarity in external group handling
added validation check for non - existent account transfer in FreezeBalanceActuator and ensured the minimum amount is 1 TRX in TransferActuator to prevent contract execution errors due to invalid amount values
( chore ) camel - file : replace hardcoded backslash with the platform - dependent file separator
ggb - 761 do n ' t duplicate keyboard button when there be an error .
updated the method to retrieve the description using session ' s description instead of an empty string to improve the accuracy of session description and facilitate event - driven communication
updated JsoupNonVisualRegressionTest to check for the correct number of pages in a PDF document to ensure the test correctly reflects the expected number of pages and verifies the expected output
* make bufferallocator implementation deprecate and add native implementation
remove the ! from flag name when add to the daemon .
add - h : + aggressiveperf ( ) to jdbccontrol to address findbugs warning
use constant instead of string comparison ( # 3550 )
priorityelement : make test more robust to check the priority .
simonstewart : add the @ inject injection of the affinitygroupdao into the unit test .
added a null check for the command before printing help and modified argument filtering to include help option to enhance user experience by providing help when no command is provided and improve command - line option handling
[ java ] reduce memory usage and only output buffer size in property data .
changed access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
updated ClassWriter to conditionally show blank options and added a new class T8032819 for testing command - line options to improve code readability and test case execution when displaying options
added assertion to verify that the length of a Person object is not zero to ensure the integrity of length validation in the Person class
provide a fix for npe on check if the file extension be null ( # 4821 )
replace ` return ` with ` continue ` in ` ContactRightButtonMenu . java ` to ensure the loop continues iterating without terminating prematurely
[ flink - 6542 ] [ runtime ] fix potential concurrency issue when scheduling or returning a slot share group
modified the loop structure in InstallShortcutReceiver . java to simplify shortcut calculation to enhance readability and maintainability of the code
updated fd handling in PlainSocketImpl to ensure proper resource management to improve resource management and clarity in socket binding operations
added functionality to track and remove removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve management of removed media items within the fragment
[ geos - 8092 ] action log improvement to clarify offset be visible on the right side of the element
added a new file ` bug4865918 . java ` implementing a GUI test for the scrollbar scrollbar to verify that the scrollbar block increment behaves correctly and raises an error when the scrollbar value is not set
replaced ` VelocityEngine ` with ` Velocity ` for velocity template evaluation to simplify the code by directly using the ` Velocity ` class without
updated import statements and added grouptriggers message handling in QuestCommand . java to improve readability and provide feedback on group triggers in the QuestCommand
fix : if no file manager available , drawer should not open app . fix # 549
add miss @ tostring ( callsuper = true ) for partitionchangeevent and tbapplicationevent
replaced hardcoded value with a constant for configuration URI to improve maintainability and avoid magic strings in the configuration
removed setting of view port and JScrollPane in BrowserPanel to streamline the user interface by eliminating unnecessary scrolling behavior
updated key handling in LwjglInput to include KEY _ FORWARD _ DEL and KEY _ BACK events to enhance keyboard input functionality for better user interaction
modified the MoreIndexingFilter to conditionally retrieve MIME type parts based on configuration to enhance flexibility in indexing behavior based on user settings
added author pattern matching for JDoc constructors and logic to retrieve the author ' s author to enhance code clarity and manage constructor parameters more effectively
updated metrics constants to use CREATE _ TOTAL _ TABLES and DELETE _ TOTAL _ PARTITIONS instead of DELTA _ TOTAL _ PARTITIONS to improve clarity and accuracy in metrics reporting
updated HiveDatabaseSchema to utilize DrillHiveMetaStoreClient and SchemaConfig for table retrieval to enhance error handling and improve schema management
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap ` for query parameters to enhance flexibility by allowing users to specify query parameters for login links
updated Hijrah calendar name and modified DateTimeFormatter locale specifications to ensure clarity in calendar representation and improve locale consistency in date formatting
michaeltamm : disabling frame selection on firefox in webaudio wrapper
added a method to append the ServerInterceptor to GrpcServerBuilder to enable interception of gRPC servers for better server configuration
added a default value " DEFAULT " to the CREATE TABLE statements and updated the corresponding test case to ensure compatibility with the specified charset configuration
corrected formatting of method calls and logic in WriterRecordBatch and StreamingAggTemplate classes to improve code readability and maintain consistent logic style
[ hotfix ] fix typo in executiongraph # doprivileged
added support for a " FROM " clause in the DELETE statement parser to enhance flexibility in SQL statement parsing based on the presence of the " FROM " clause
refactor methods for checking multi - status and improved error handling in SynchronizeFolderOperation . java to enhance code clarity and maintainability while enhancing error reporting during file synchronization
refactor RecipeScheduler to use a new utility method for applicable tests to improve code readability and maintainability by centralizing test applicable checks
updated regular expressions for log line regex in LogAnalyser . java to improve accuracy in matching log lines for better analysis
( chore ) camel - aws2 - integration : adjust integrationtest to use environment variable for test
fixed - rsearch . value ( ) and rscore . isminexclusive ( ) method be wrong in redissonsearch .
fix bug # 45937 - handle null cclicense in the select list
fix a npe when try to register the guid index without a globalid
updated comparison logic in OptionalAssert to use comparison strategy to improve accuracy of value equality checks
replaced direct assignment of font size with a boolean flag for tracking margins to ensure accurate memory management by avoiding redundant updates when font size is not available
added a new test class TestArrayCopyToFromObject for testing array copying behavior to ensure that ArrayStoreException is correctly thrown when both source and destination are null
updated Python path insertion syntax to ensure proper formatting to enhance readability and maintainability of the code
fix bz 66607 . fix socket state comparison
fix sheep stray when you should n ' t find any file , close # 3561
added an import statement for JUnit ' s Ignore annotation and annotated a test case with @ Ignore to temporarily skip the test due to an unstable issue in the test case
refactor HTTP request handling to check for null exceptions before asserting response status to improve error handling and prevent potential null pointer exceptions
slightly optimise environment . get autoloadcall to avoid lock contention
removed redundant server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController to streamline server version handling and reduce code complexity
updated localhost handling and principal assignment in KDC and Krb5Test classes to ensure correct resolution of localhost and improve test reliability
modify Jsr250Voter to handle multiple roles more appropriately in access decision calculations to ensure proper access decision handling for multiple roles in the security context
change order of import statements in MP4Parser . java to improve readability and maintainability of the code
added HS2 _ PROXY _ USER constant and modified session parameter handling in ConnectionFactory . java to ensure sessionParams include the username to avoid potential null pointer exceptions and improve session formatting
camel - 5489 : added snappy compression codec by default ( # 5758 )
added a sleep delay of 1000 milliseconds in HttpClientTest . java to ensure proper timing between asynchronous operations in the HttpClientTest
fix bug # 56737 - clear old cell before add new one to xssfcell
modify glyph offset calculation and modify buffer appending logic in GlyphLayout . java and BitmapFontTest . java to improve character handling and enhance clarity of text output
fix : remove port from istio - bin path ( # 11921 )
replaced ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . getApplication ( ) . ReportPlaybackProgress ` in ` PlaybackController . java ` and ` Utils . java ` to centralize playback reporting functionality within the application
simplify simpleauthority and make sure fileinputstream get close
fix maploader hitting on initial load ( # 16288 )
fix bitwise & to bitwise | in responseflag # tostring ( # 1756 )
more on bug and remove warning from code where no read policy be find and add to read only
7019441 : no lookup cache for internal composite font creation lead to java heap growth
modified preferred height calculation for tree node height to ensure proper spacing when adjusting height
drools - 1526 dmn feel : improve error message ` ` not find ' ' ( # 1352 )
removed unused import statements and corrected a type in the mQueue declaration to improve code readability and maintainability
changed the visibility of ` finishRunningRecentsAnimation ` from private to public and replaced direct execution with main _ EXECUTOR in multiple classes to allow external access to the method and improve thread handling efficiency
added null checks for node IDs and enhanced edge type handling in the import container to improve robustness and prevent potential NullPointerExceptions during type processing
[ beam - 8470 ] update response handle logic for grpc client cache to be more robust .
nifi - 259 : fix binfiles to be consistent with sessionfactory . createsession ( )
change algorithm to find closest neighbor on enemy , so that it no longer try to find the closest tile .
added a check to skip copy content - length in RestTemplateCopyHeaderFilter to avoid overwriting the request content length header
updated Java2TypeScriptTranslator to modify type handling and introduced new eval method in Literals to improve type conversion accuracy and facilitate testing of JavaScript output
# 825 : adjust the sample size so that the sample size do n ' t exceed the actual one .
hbase - 4813 canary to print a info on a regionserver ( liu shaohui )
do n ' t run cassandraconnectorfactory in production by default
added a call to reset the cursor position in the KahaDBStore to ensure the cursor is reset before processing new data
gh - 3496 : make call window smaller than screen size , prevent scroll
fix ' all ' state not lose when generate block placement . close # 2597
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static imports and modify test setup methods to improve test reliability and maintainability by ensuring variables are static and simplifying setup / teardown methods
updated KerberosPrincipalDAO to properly remove principal from the KerberosPrincipalHostDAO to improve resource management by ensuring proper cleanup of principal - related entities
removed the boolean parameter from the getTableSnapshot method call to simplify the method call by eliminating unnecessary argument
fix possible deadlock where the poller could get stick in infinite loop .
update error message and hint for android . licenseKey to clarify the requirements for the Monetization setup to improve user guidance and potential issues during the build process
updated the ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and removed the ` isInsideTranscodeFolder ` method from ` FileTranscodeFolder ` to ensure the correct display of the child folder name for accurate file representation
[ drools - 1225 ] look for kie - inf . classes in classpath
skip index check in release version 19
removed the ` Context ` parameter from the ` assignTargetsForSplitScreen ` method and related assignments to simplify the method signature and improve code clarity by eliminating unnecessary complexity
removed deprecated methods from LeaderLatch class to improve code maintainability and reduce technical debt
added methods to initialize zk - SNARK parameters in SolidityNodeHttpApiService to improve parameter management for zk - SNARK operations
speed up transaction . getpeerinblocks ( ) by defer enumeration of depth
added a method to create a media recorder and fixed a spelling of " longitude " in multiple classes to improve media recording functionality and ensure consistent variable naming
set the default platformName to " ios " to ensure a fallback for iOS platform configuration
fix a typo in javadoc ( # 1877 )
added braces to conditional statements for better readability in Graphics2D . java to improve code clarity and prevent potential logical errors
pdfbox - 3017 : added comment on what to explain this class
propagate error to listener , and log if failure to send the frame
replaced try - catch block with AccessController for getting the caller loader in ContextHandler . java to improve security and reduce boilerplate code
added functionality to find all child categories in a specific category to ensure that all relevant categories are removed from the database to maintain data integrity
improve localization and title of contrib manager dialog ( fixes # 3268 )
added a new BigDecimal field " vwap " to the Ticker class and updated the constructor accordingly to enhance the Ticker class with additional volume information for better market analysis
added functionality to display a " no widgets " view and updated bottom inset handling in the Search and Recommendations feature to improve user experience by providing feedback when no widgets are available
added helper class for to render graph and add some api for it to be use to api .
apply theme color dynamically in nfirebasemessagingservice .
updated ShadowUsbManagerTest . java file to improve test coverage and ensure accuracy of shadowUsb manager functionality
update to http : / / github . com / julianhyde / optaplanner / issues / 130 , add log for stats
added a call to update the selected configuration in the Rocket class to ensure the configuration reflects the current state
add a small bound to the bitmap for ARGB _ 8888 optimization ( on android )
replaced HashMap with LinkedHashMap in multiple files to ensure consistent iteration order of options in the code
replaced ClosureManager with ClosurePool in NativeClosureFactory to improve closure management and resource management
( chore ) camel - core : migrate test to junit 5 ( # 5581 )
added new classes WebsocketIngressIntegratedBootstrap and WebsocketPluginTest to implement and verify the functionality of the WebSocket WebSocket integration
dsm - 3951 - remove not essential comment from dsm . getservicebyname - test
added a method to check if two authentication objects are equal based on equality to improve code readability and maintainability by encapsulating the equality logic
added a conditional check to return false if x86asm is not enabled to ensure compatibility with different compilation settings based on system properties
refactor code to use a local variable for the type of the dynamic call node to improve code readability and maintainability by reducing repeated method calls
added a new annotation ` @ Insecure ` and modified the ` MessageBuffer ` constructor to use it to enhance clarity of the @ Insecure annotation for better code readability
added new configuration variables to HiveConf . java for various Hive components to enhance configuration options for better performance and maintainability
initialize scopes and policies with new HashSet instances in ResourceSet . java and add a null check in DefaultResourceSetService . java to ensure proper handling of null items and prevent potential NullPointerExceptions
lucene - 3258 : multireader construction must not call decref on close
7044486 : fix a misleading source comment in a test file
simonstewart : fix the fail test for the selenium - backed selenium
removed references to ` $ Gson $ Types ` for type argument retrieval in ` LinkedHashTreeMap ` and ` KeySet ` to simplify the code and improve maintainability by eliminating unnecessary indirection
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Values to improve type specificity and provide a more relevant data structure
added a duration parameter to the FlipTransition class and updated related motion calculations to allow dynamic adjustment of animation duration based on user interactions
removed unnecessary trace logging for streaming subtitle validation to streamline logging and reduce noise in the logs when subsAreValidForStreaming is false
bump version to 9.10 . 10 for # 3432
use java version - specific warning in ` stacklocator ` ( # 1760 )
refactor the parser configuration to introduce new classes Java _ 14 and Java16PostProcessor while updating the LanguageLevel constants to enhance compatibility with newer Java versions and improve modularity
adjust padding for status view based on the number of replies in the ExpansionViewHelper to improve visual consistency by adjusting padding based on the number of replies
added callback check for empty versionMap and updated callback handling in AbstractPartitionPrimaryReplicaAntiEntropyTask . java to ensure compatibility with newer V3.9 features and prevent unnecessary execution
added metadata handling functionality to SeedUrl and SeedResource classes to allow storage and retrieval of additional information related to seeds
pmd : fix npe in pmd - build when use xpath constraint
renamed TestCoprocessorWhitelistMasterObserver class for clarity and consistency to improve code readability and maintainability
ww - 4331 add package name to annotation action config
add new test method in iterabletest for null array handling
added stream and parallelStream methods to MapIterable and primitiveObjectMap classes , along with corresponding tests to enhance functionality and provide stream - based data processing capabilities in the map implementation
change return value from notifInfo to a cloned version to ensure that the original notifInfo object remains unmodified when it is returned
mow - 1035 fix for command key comparison in web
pdfbox - 4892 : fix typo , a suggest by valerybokov
added isVariableLocal method to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap ` classes , and modified the search logic in ` WebVariablesMap ` , and modified the index handling in ` WebVariablesMap ` to improve the handling of local variables and enhance search functionality
added a check to assign a default resource if the resource name is null and used it to improve resource retrieval logic and ensure the correct resource mode is used
6753173 : no need to read all the truetype ' post ' table to get underline info
refactor SignPlugin to accept a List of HttpMessageReaders instead of a static final MessageReadersS to enhance flexibility for handling multiple message readers in the sign process
refactor Int2ObjectCache . java to improve performance and readability to enhance efficiency in object caching operations
removed validation check for MavenDeployer and added validation logic for saxReader to ensure proper validation of Maven deployment before proceeding
modified AudioNode . java by changing references and functionality to improve clarity and maintainability of audio node handling
added SSL context handling for SSL connections and modified cookie store management in EnedisHttpApi to improve security handling during SSL communication and simplify cookie store access
added new imports for OracleSqlOperatorTable and refactored method signatures and updated the registration logic for HiveFunctionRegistry to improve functionality and maintainability of the registration process
fix for http : / / issues . apache . org / jira / browse / amq - 3872 - add support for xa xa xa connection to the mbean name
modified the method ` getBuildTargetForAlias ` to accept an ` possiblyFlavoredAlias ` parameter and adjusted its implementation to improve handling of possibly - defined aliases in build targets
camel - 13077 : fix poll return for feeded feed in odata2 ( # 2719 )
added support for retrieving the Hive version using a map to improve version management by using standardized lookup for version numbers
bug 11446 : do n ' t log vm expunge message for non - expungeing vm
mark multiple instances of AbstractDateAssert as deprecated to indicate that these methods are outdated and should not be used in future development
refactor methods in ONDashClockExtension and AlarmReceiver to use a new method for retrieving note titles to improve code reusability and maintainability by consolidating title parsing logic
updated GoogleAuthUserConfigTableTest to use " nvarchar / " for data type and validation to ensure compatibility with new data type requirements in the database
replaced ` commit ( ) ` method with ` apply ( ) ` method across multiple classes to ensure changes are applied consistently across the application
added TestIdleListener to the StandardSession class and modified the session creation to use it to control idle behavior during asynchronous operations
[ beam - 7720 ] add the test id to the testbigquerytable string
added background resource setting and reset functionality in HotseatPredictionController and reset the icon in BubbleTextView to enhance visual representation and maintain state across UI updates
mondrian : fix for mondrian - 1243 . rename mondrianproperties . getflushafterquery to mondrianproperties . flushafterquery .
add abstracttestnativeworker to make native query runner testable
fix LIMEExplanation . java to ensure active features are retrieved correctly from the model
added support for passing arguments to the command in the AppleSimulatorController and InstallCommand classes to enhance flexibility in running Apple targets with - r option
allow selection of specific line ( start , end ) in the parargraph to be disable by default .
do n ' t try to cast manager to lifecycle if not available . fix some unit test .
added a method to clip the background to the outline in QsbWidgetHostView to enhance the visual appearance by using rounded corners
added flag conversion logic and improved flag handling in SQLManager , PlotArea , and PlotManager classes to enhance functionality and ensure accurate flag processing in the system
fix floatingtext rendering ( fix # 4597 )
switch target _ oracle _ truffle _ nfi _ backend _ libffis _ linux to target _ com _ oracle _ nfi _ org _ frufis _ org _ oracle _ frufis _ org _ oracle _ frufis _ org _ oracle _ frufis _ org _ oracle _ frufis _ org _ oracle _ frufis _ org _ oracle _ frufis _ org _ oracle _ frufis _ org _ oracle _ frufis _ org _ oracle _ nfi _ org _ fr . nfi _ org _ oracle _ org _ oracle _ nfi _ org _ oracle
camel - 18425 : add getter / setter for propagationbehavior in jdbcaggregationrepository
add support for regularization l1 and l2 regularization in LayerValidation to enhance validation logic for improved layer configuration
solr - 5907 : restructure abstractchecker to avoid abrupt termination on failure .
changed the colorStack variable from static to instance and updated its assignment to improve thread safety by referencing the instance variable directly
updated getMappedStatement and hasStatement methods to use true for the second parameter to ensure functionality aligns with the updated statement behavior
convert the tradable identifier to lowercase when retrieving the BTCE depth to ensure consistency in data handling and avoid potential issues with case sensitivity
updated assertions in ChannelStateTests to use specific channel states instead of fixed values to ensure accurate timing metrics for command state updates
remove wrong field of versionedhashes in enginepayloadparameter ( # 5381 )
fix : reset price when create an offer
change to simplify logic and add good readability
removed unnecessary print statements in I18NPageController . java to streamline code and reduce unnecessary console output
hbase - 8237 - fix potential nullpointerexception in hstore # commit
# 804 - fix : savemanybean ( ) method to clear state when load bean ( relate to # 804 )
added a new boolean field ` _ alwaysSaveUri ` and modified the conditional check in ` FormAuthenticator . java ` to include this flag to allow control over the URI saving behavior in session management
added implementations of nSetLayerType and nSetLayerPaint methods to ShadowRenderNode to provide implementations for handling layer type and paint settings in rendering
replaced specific imports with wildcard imports and added a new method to handle the visibility of the popup menu in LWChoicePeer to improve code readability and ensure the popup menu is displayed correctly when it is shown
removed redundant null check and initialization of the insert map to streamline the insertion process by ensuring consistent formatting
replaced the usage of ` scala . collection . JavaConversions . asScalaIterable ` with a new import for ` collectionAscalaIterable ` across multiple classes to improve code consistency and reduce dependency on the scala library
added null check for requests in MockServerEventLog and enhanced logging for request handling in HttpForwardObjectCallbackActionHandler to improve robustness of request matching logic and provide clearer logging information during request processing
log a warning if a property file can not be load
added a try - with - resources statement for the SessionDataSet object to ensure proper resource management and prevent potential memory leaks
updated conditional check in SetOutgoingIf to include multicast support and NIC status to ensure outgoing connections are only established on valid and capable network interfaces
updated the constructor of sqlCommand to accept a length parameter to improve flexibility in SQL command handling
update energy consumption time methods in MarkDelegateResourceActuator and remove redundant account capsules in BandwidthProcessor and EnergyProcessor to streamline consumption time management and eliminate redundant code
added a method to create a session strategy within the SessionManagementConfigurer class to improve session management configuration flexibility by allowing custom session strategies
improve the error message if the protobuf token can not be find
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the behavior of key assertions in a map to ensure that the ` containsKeys ` method behaves correctly for map assertions
added a new interface JDBC4PreparedStatementMethods with various methods for setting ASCII stream , binary stream , and character stream to enhance compatibility and maintainability of prepared statement handling in JDBC
added a method to ensure the ServerWebSocketContainer and updated the upgrade method to use a Handler instead of ContextHandler to improve WebSocket handling and ensure proper session closure in the upgrade process
replaced ImmutableMultimap with ImmutableListMultimap in CxxFlags . java to improve code consistency and follow updated best practices
pdfbox - 1958 : avoid npe if no point be available for curvetoreplicateinitialpoint , avoid npe
replaced dynamic array creation with static final EMPTY array in MethodHook . java to improve memory efficiency by using a single empty array instead of creating new arrays
added a grantAccess flag to MockAuthenticationManager and updated authentication return logic to allow control over access permissions during authentication
updated the afterJob method to accept JobExecution parameter to improve method clarity and facilitate the handling of job execution
added a check for executable file before writing to the file permission in SharedLibraryLoader . java to ensure that the method only proceeds if the file can be write , preventing potential errors
add hastimeseriesquerylanguage ( ) method to tsquery interface ( # 239 )
bug 57193 - use event in resultcollector to get result from csv file
added new constants for bundle properties in BundleConstants . java and utilized them in CustomUrlManager . java to improve data encapsulation and access to bundle information
use stringmap instead of hashtable so we can convert to map
refactoring : move geoelement to moveobject ( fix warning ! )
updated method calls and texture initialization in JoglGraphics and ProjectiveTextureTest to improve code clarity and texture functionality by using a more suitable texture filter
modified the method signature of ` setResourceToDelegate ` to return a ` File ` object instead of void to ensure that the output resource can be written by creating a new file instance
camel - 5490 : resolve property placeholder from uri for property component . thanks to bilgin for patch .
update logic in ActionScheduler to compare the last attempt time with the last attempt time to ensure the correct time value is used for attempts in the scheduling logic
updated dbg _ zip assignment to use a temporary directory and added a null check for debug log to ensure proper path handling and avoid potential null pointer exceptions
renderingdebugconfig : move visibility update to config ( # 4558 )
make pipe . resetgates ( ) much more efficient . it ' s not necessary to mark and update the pipe ' s state .
encapsulate TestSupplementary execution in a try - finally block to ensure locale is reset to maintain consistent locale settings and prevent side effects in subsequent tests
updated the Team initialization by adjusting the random number generation range to improve randomness in the Team ' s display range and ensure adequate stability during team creation
avoid unnecessary arraylist creation in sequencematcher .
updated the condition to check for null and empty exceptions in SoftAsserts . java to improve logic to handle cases where annotation is null or empty
updated error handling in StorageResources and added exception management in StoragePluginRegistryImpl to improve robustness by providing more informative error messages and handling exceptions more effectively
[ gr - 32234 ] add call tree csv link for easy import into graph db .
added null checks and improved object handling in DetailFragment . java to enhance robustness and prevent potential NullPointerExceptions
added logic to track and calculate the number of concurrent tasks in the AssetManager class to improve loading accuracy by considering the number of tasks loaded
eranmes : make firefoxdriver . enable _ native _ events work on window .
added functionality to parse and set a custom score based on the nutch score and fetch interval to improve scoring management by allowing customizable intervals for crawling
updated import statements to use org . apache . commons . collections4 in ScimExternalGroupsTypeResolvingFactoryBean and RsaJsonWebKeyTests to ensure compatibility with the latest version of the Apache Commons Collections library
added a method to check if the zkController is null and introduced a test for schema sharing in CoreContainer to improve schema management and ensure the CoreContainer behaves correctly in different scenarios
update size calculation methods to use ` info . sizeInBytes ( true ) ` instead of ` info . sizeInBytes ( ) ` across multiple classes to ensure accurate representation of memory usage in the size calculation logic
updated assertions in VersioningTest to check for null values instead of equality to ensure version comparison is correctly validated and not null
updated SQL query to include additional fields for domain handling to ensure that the query correctly accounts for non - null domain attributes in PostgreSQL
[ java ] perform appendnewleadershiptermevent outside of loop if not need .
added a method to build the MediaType from ServerWebExchange to improve handling of media type in the WebClientPlugin
replaced multiple calls to ` fillUsingLengthPrefix ` with ` fillSlice ` in multiple classes to improve method naming consistency and clarity regarding index handling
fix out of order compaction on table ( # 5266 )
phoenix - 4601 null check for immutable storage scheme when initialise column family ( jamestaylor )
added two new files , PojoProducersCustomized . java and RestProducersCutomized . java , to implement a base class for managing producerProducers in the service registry
replaced hardcoded cache name with a constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability and reduce potential errors from string literals
fix stop - and - start registration for aeggcm - siv . proto .
fix oredictionary replace recipe for wooden _ slab ( # 3524 )
refactor and adjust session management classes in the project to improve code organization and maintainability
replaced AbstractBuildRuleWithResolver with AbstractBuildRule and removed unnecessary dependency on SourcePathResolver to simplify the class hierarchy and reduce unnecessary dependencies
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 11832 fix incorrect test name in DenormalizedTablePhysicalIncludedTableConstraintTest . java
update the positioning of the spriteBatch draw method in HelloWorld . java to correct the positioning of the sprite to ensure proper rendering within the specified world boundaries
modify the loop condition for plot searches and simplify region removal logic in PlayerFunctions . java and WorldGuardListener . java to improve code clarity and maintain correct region naming conventions
add a deprecated static final Version constant for LUCENE _ 8 _ 5 _ 0 to mark the version as outdated for future reference
modified string concatenation in the closeSocket method output for clarity to enhance readability of the output for better debugging
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL queries with signed integers can be correctly parsed and deparsed
refactor dependency type handling to use SemanticGraphCoreAnnotations instead of String to improve type safety and maintainability in processing dependency types
refactor NoSuchBuildTargetException to streamline target description creation to improve code clarity and reduce redundancy in target description generation
updated the test method from ` testFromMain ( ) ` to ` test ( ) ` in the ` MyChild ` class to streamline the test process for improved accuracy
replaced the use of ` Block . blocksList . length ` with ` 256 ` and updated the loop condition in ` Configuration . java ` to improve memory efficiency by reducing dynamic size allocation
update version checks and console messages in BukkitMain . java for better clarity and functionality to ensure compatibility with newer versions and improve user guidance
added SQL statement escaping for PostgreSQL specific characters in AbstractSQLChange to ensure proper handling of special characters in SQL statements for PostgreSQL compatibility
added methods for creating mutable bag instances from ` Iterable < ? extends T > ` to enhance flexibility and usability of the MutableBagFactory class
added HTML escape code validation to the ` title ` variable and improved attribute handling in ` BuildNavAndPDFBody . java ` to ensure compliance with HTML standards and enhance error handling during file processing
fix nhcmqttconnection2 to set broker connection parameter to false ( # 3243 )
updated the way the ChangeSet is retrieved by using the root ChangeLog if it is null to improve robustness by ensuring changeSets are fetched even when the change log is not null
[ minor ] minor refactoring to remove redundant object creation
added HiveMetaStoreClient and logging functionality to TestObjectStore for better debugging to improve database management and provide better logging for troubleshooting
added a new parameter " order _ currency " to the BithumbAuthenticated class and updated the BithumbAccountServiceRaw class to use it to enhance the API functionality by allowing users to specify an order currency
update SSEFluxWebConfig . java to remove unused class to streamline the codebase
updated method checks to use ` isVoid ( ) ` instead of ` getFullyQualifiedName ( ) ` to improve clarity and correctness in handling void return types
updated ` Yaml _ READER ` to ` YAML ` and added a new method ` listYamls ` in ` YamlResource . java ` to improve YAML handling capabilities and provide a mechanism for listing detection configurations
removed public access modifier from equals and hashCode methods in Marker . java to enforce encapsulation by restricting method visibility
8267267 : increase java / nio / channels / asynchronousgroup / basic . java ' s timeout factor to 20 second
added tests for adding lists and mapping templates in MongoTemplateTests . java and created the PersonWithAList class in MongoTemplateTest . java to enhance testing capabilities for template addition and ensure proper handling of list types
sync image view in applet size rather than screen size
updated toolbar visibility logic to use a delayed execution using a Handler to improve user experience by allowing a brief pause before hiding the toolbar
[ iotdb - 5577 ] fix overlapped page reader in series reader ( # 4954 )
save user vm password if fail to save vm password
set some configuration variables to false in Response . java to ensure proper handling of output stream and character encoding
added a check for assignment side effects in the GroupDialog to avoid unnecessary warnings when assignment side effects are not applicable
refactor JSON and JSONObjectConvertor classes for improved readability to enhance maintainability and ease of understanding for future development
updated the conditional check for icon dimensions in FileUploadApiController . java to ensure proper alignment of icons based on their maximum dimensions
refactor ` RegisteredServiceProperty ` and change method signatures in ` JwtTokenCipherSigningPublicKeyEndpoint ` to improve code readability and enhance functionality while ensuring proper handling of empty keys
added checks for file content type in Unix - specific conditions to improve user feedback on file accessibility issues
remove what we do not support and add compression back to nettyconnection
added a method ` doesClassLoaderDescendFrom ` to the ` Util ` class and modified visibility of the method in both ` Class . java ` and ` MethodHandles . java ` to consolidate loading logic into a single method within the ` Util ` class
removed the doConnect method from ChannelProvider and ProxyChannelProvider classes to simplify the connection method signature and improve error handling during connection failures
added functionality to start fields in TextReader and created a test for empty final columns in TestCsvHeader to ensure proper handling of empty final columns during CSV processing
added compass alignment to the NearbyMapFragment to improve the user interface by enhancing positioning and translation
added unit tests for the GeoPath interpolation algorithm to ensure accuracy of distance calculations in GeoPath instances
added HiveException to method signatures and improved error handling in ParquetFilterPredicateConverter to enhance error management and provide clearer error messages for better debugging
added logic to set language for video streams in LibMediaInfoParser to ensure correct language representation for video streams
added warning log for compatibility issues when microservice version exceeds the old version to provide clearer feedback on compatibility issues
replaced arraycopy implementation with addAll method across multiple array classes to improve code readability and maintainability by using a unified addAll method
encapsulate connection closing in a try - catch block to improve code readability and maintainability
added constructors and methods to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository for handling registrations to enhance flexibility and ensure that the registrations map is not null and initialized correctly
added a method to reset the UI state in SchemaUpgradeHelper to ensure that the UI state is properly reset during schema upgrade
added logic to handle failures in JUnitReporter and new test cases for strict and non - strict execution scenarios to improve robustness and ensure that tests handle pending exceptions correctly
add playerselector hook to allow command with custom player . close # 1679
added the Closeable interface to the Selector class to ensure proper resource management and allow for closing operations
added a MultiplexConnectionPool implementation to the MaxConcurrentStreamsTest . java to improve connection handling and resource management in the test
added new stringType ( ) method to CoreOptions . java to enhance the functionality of string type handling
updated HqlQueryRenderer to handle character and parameter cases more effectively to improve query processing and ensure compatibility with the EclipseLink context
updated status handling to use HttpStatus constants for consistency and clarity to improve code readability and maintainability by using defined constants
pdfbox - 4892 : reduce memory usage , a suggest by valerybokov
update test to use mock connection and set proper connection configuration to improve test stability and performance by managing mock connection properties
updated the Parquet format selection logic to handle file selection and existence checks more efficiently to improve file selection handling by ensuring accurate metadata files are used
modified the success variable initialization and added error handling for compilation in Jsr199Javac . java to enhance compilation feedback and improve error reporting during compilation
added a TableModelListener to handle table change events in DefaultSortedTableModel to improve table model responsiveness when the table changes
align serverconfig # getconnectiontimeout ( ) to enforce a maximum number of connection to the server
added document provider authority handling for newer Android versions in AuthenticatorActivity and AccountRemovalJob to ensure compatibility with new API levels and maintain accurate root URI updates
added logging call for app context in MainApp . java to improve traceability and debugging during application execution
modified error handling in FilterChainProxy to properly analyze and handle wrapped RequestRejectedExceptions to enhance robustness in exception handling to ensure the correct response to blocked requests
updated StringBuilder ' s length handling to use ' this . length ' instead of ' length ' to ensure correct buffer size management for improved performance
throw illegalargumentexception when call filter . decode ( ) on an empty list
add tbstopwatch for convenience . just like the core class .
hbase - 8042 add an initialization flag for the plliststore ( spotbugs warning )
added @ Deprecated annotations to multiple classes to signal that these classes are outdated and may be removed in future versions
[ zeppelin - 5145 ] fix context classloader for the interpreter server
remove redundant call to forge . getentity ( ) from forgehooks ( # 6230 )
update minimumSdk version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the latest features and improvements in Android O _ MR1
updated parameter names and return values in DeadlineTimerWheel . java for clarity to improve code readability and maintainability by using more descriptive names
# 1441 - enh : add simple name to the element when it be a bean
updated the URL in BasePage . java to use " static / all . css " and added a new WroSassProvider class with pre - processors and post - processors methods to streamline the rendering of JavaScript and CSS files and provide Sass - only processors
[ iotdb - 4258 ] fix ` ` show latest timeseries ' ' bug ( # 4259 )
updated configuration parameter names from " appContextLocation " to " contextConfigLocation " to standardize naming conventions and improve clarity regarding configuration management
6894461 : ocsp checker should not wrap all exception a ` ` unable to send ocsp request . ` ` ( introduce by # 6885667 )
add an option to turn off write output solution in simpler report and improve documentation
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
add test case to re - create slicesize ( ) for # 815
fix the craft transport recipe not have a slime . close # 3159
mahout - 290 : fix intersections ( ) method in vector to ensure correct ordering of iterators
added Shulker and Shulker metadata handling to BukkitMain and EntitySpawnListener to enhance entity management for Shulker entities and improve spawn event functionality
added getDebugLogger method to DIHWriter and its implementation in SolrWriter to provide access to the debug logger for better debugging capabilities
hhh - 5973 - recovery could result from name truncation if destination name be too long
refactor UpToTagChangeSetFilter to use an instance of UpToTagChangeSetFilter and add a method to check if the tag is a seen tag to improve error handling and provide feedback when a tag is not found
[ beam - 3027 ] use listlist instead of listlist to avoid type pollution
refactor BrokerRoutingManager for improved clarity to enhance code maintainability and readability
updated color constants for volumePaint and upPaint to use uppercase values to adhere to Java naming conventions for
be be25822f : add insettableframelayout layout params to easily ignore inset
added a new " duration " field to the BuildTargetDurationListener and its corresponding test cases to enhance functionality by providing additional metadata for better rule management
updated assertions in HsqlDbMigrationIntegrationTest , MySqlDbMigrationIntegrationTest , and SqlServerDbMigrationIntegrationTest to use junit ' s AssumeTrue to ensure tests are only executed when the required database profile is enabled
added null check for user before processing claims to avoid potential NullPointerExceptions when user is null
camel - 9444 : added unit test for camel - test - spring - boot and camel - spring - boot
use non - blocking set instead of concurrentskiplistset
api : listpublicipaddress - add networkid parameter to listpublicipaddress .
added methods to check for ignoring battery optimization in ShadowPowerManager to enhance testing capabilities for power management features starting from API level M
update Jetty version retrieval to use a configurable property from __ buildProperties to ensure compatibility with different build configurations when using Jetty
added unit tests for verifying invocation order in NumberOfInvocationsInOrderVerifierTest to ensure correct behavior of verification modes in order handling
fix a bug in tregex : do n ' t execute the first match twice
guacamole - 1290 : start profile in background thread , prevent data loss
replaced the executor service implementation from a named thread to a dedicated IOUtils class to improve resource management and clarify thread termination behavior
changed ` parseFieldnames ` from a ` Map < String , String > ` to a ` String [ ] ` for better data handling to simplify the retrieval of field names and improve code readability
fix exception in code editor when click ok , re - opening , and closing editor
updated file entry handling in ClassFileReader and JdepsTask to improve error messaging by including more context about skipped entries
updated Fetcher and FetcherMain to utilize LuceneStorage for document storage to enhance functionality to support linking documents and improve document management
refactor the ` populateBubble ` method to accept an additional parameter and manage existing Bubble to improve flexibility and prevent potential null pointer exceptions in bubble loading
camel - 10685 : camel - core - optimize to avoid unnecessary warn message when schedule policy be not configure .
refactor method signatures and update their usage for better readability to improve code clarity by removing unnecessary array handling
[ java ] : use the appropriate delay generator for multi - channel conductor to avoid loss .
updated Gson initialization and added properties for client information in ClientInformationResponseView . java to improve JSON handling and ensure proper serialization of client information
added a check for zero values before setting average price for openOrder to avoid potential errors when calculating average price
refactor the subscription syntax for execution reports in BinanceStreamingMarketDataService . java to improve code readability and maintain consistency in subscription handling
added a ` fail ` method to ` LdapTimeoutTest ` and updated the failure handling logic to improve error reporting and provide a clearer failure context for test failures
fix crash when load user dictionary that do n ' t exist .
ambari - 2443 . do n ' t allow password update for first time in a deployment container ( dlysnichenko )
added checks for already parsed segments in ParseSegment . java and introduced a method in SegmentChecker . java to improve segment parsing validation and enhance logging capabilities
[ flink - 11341 ] [ yarn ] allow application _ attempt _ failures - validity - interval to be configure when restart
[ geos - 10318 ] do n ' t let the datasource unload when h2 driver ca n ' t be included
hbase - 24224 [ table - planner - blink ] support snapshot - based scanner readtype configuration ( # 1725 )
add fixedheight and fixedwidth query parameter to instancelogininfo .
added cornerRadius parameter to multiple update methods across multiple classes to enable dynamic positioning of elements based on a corner radius
updated COMMANDS _ TO _ REMOVE to use a more concise format for SQL queries to enhance readability and structure of the output format
added retry logic for establishing a connection pool in TxnHandler to handle potential SQL exceptions and improve connection stability
# 219 add txnreserve check method ( # 2305 )
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class for storing and retrieving string data
updated SQL delete statements to reference " DELETE ROWS CLIENT SELECT " instead of " DELETE ROWS " and added a new test class for explain plans to ensure accurate plan generation and verify functionality through unit testing
add more test for ` ` insufficient data write ' ' exception .
added a new parameter ` rapidInstallTypes ` to several constructors and methods across multiple classes to enhance the flexibility and functionality of the AdbHelper and related classes
updated the SeedPattern to allow for negative values in the " - srand " argument to ensure flexibility in the seed formatting for better usability
updated MultimapSubject and related classes to improve type safety and string representation handling to enhance code reliability and clarity when working with Multimap
simplified the return statement by removing unnecessary conditional check for device orientation to improve code clarity and performance by simplifying the display size calculation
handle when some mediaitems require transcoding but others do n ' t
added localization support to the Picker class to enhance user experience by ensuring localized strings are properly localized
camel - 2349 fix the exception handle of cxfrsconsumer
hhh - 6725 - do not fail convert non - existent sqlstate when use postgresql
added null check for queryId and modified imports in HiveStatement to enhance test reliability and clarify query ID handling
[ beam - 8470 ] exclude beam - bind - pardo test for unbounded pcollections
updated HTML formatting in GpsSimpleViewFragment to remove unnecessary angle brackets to improve user experience by ensuring the filename is properly displayed in the UI
[ java ] remove unused leadershiptermid parameter from join log a follower .
updated HttpSender to use the instance variable ` exchange ` instead of accessing ` getHttpExchange ( ) ` multiple times to improve code clarity and ensure consistent access to the ` HttpExchange ` instance
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the ` token ` method to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` and updated its references to improve clarity and consistency in API token management
added null check for tree before retrieving markers and improved equality and hash code generation to enhance code robustness and prevent potential NullPointerExceptions
try to improve handling of default run style , and font size be now double in some case
[ adam szita ] remove maybewrap for email address book ( # 10818 )
replaced the handling of exclusions in RawMavenResolver to utilize a set of exclusions to improve the management of exclusions based on task configurations
added null checks for ` dsxExchangeInfo ` and enhanced currency handling in ` DSXPairInfo ` to improve robustness and ensure proper handling of currency pairs during exchange initialization
renamed multiple test classes for consistency in naming conventions to improve code readability and maintainability
[ drools - 90 ] fix incremental compilation when there be no kbase ( # 4324 )
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` to ensure proper handling of the object when ` sobj ` does not contain the key ` k `
refactor JacksonDataFormat and JacksonXMLDataFormat classes for improved code organization to enhance maintainability and readability of the code
[ gr - 21163 ] do not use unreflect getter / setter in hostfielddesc .
add annotation to indicate that @ completable be not allow to be null
update freeze checkpoint duration calculation in PlaybackController . java to adjust timing criteria for improved synchronization during playback
added internal state setting for ` fAnnotations ` using ` Whitebox ` in ` AbstractCommonPowerMockRunner ` to streamline the code by removing unnecessary dependencies and improving clarity
fix slow unmarshalling of anyimpl with wrong type
modify TabsAndIndentsVisitor to handle specific conditions for obtaining the last indentation indent to ensure accurate indentation information is maintained for method invocations and improve code clarity
replaced the extension of TestSingleTokenTokenFilter from LuceneTestCase to TestCase to align the class with JUnit ' s testing framework and eliminate dependency on Lucene ' s testing framework
fix pour issue 62 : indexoutofboundsexception on mysql
added execution context management in JdbcStepExecutionDao and MapStepExecutionDao to improve handling of execution contexts and enhance job repository functionality
added a conditional check to prevent setting the child on a new media folder configuration to ensure the child folder is only added when not hiding the new media folder
added null checks for actor before setting and removing widgets in SplitPane to improve error handling and prevent unsupported operations when actor is null
add miss type parameter to remove unused import ( fixes # 922 )
updated the logging statement to use the ` this ` object ' s version method and improved null and empty checks for ` getModInfos ` to enhance code clarity and prevent potential NullPointerExceptions
updated logger initialization to use the class reference instead of the instance to improve memory efficiency and ensure correct logging context for the TicketGrantingTicketImpl
updated SQL string to include a new version of SNAPPY . 81 + 12 to ensure compatibility with the latest schema changes in the timeseries
added a method to check if a value is already in the AttrData class and updated Converter logic to use it to improve value checking and handle enum ordinal cases more effectively
modified the keyboard lock logic to include support for US International PC keyboard type in CPlatformResponder . java to enhance support for US International PC keyboard layout inputs
[ java ] add a system property that set the publication connection timeout in ctestmediadriver .
added a check for request URIs starting with " / css " , " / images " and " / favicon " in GTVGFilter . java to ensure that only valid request URIs are processed
improve diagnostics when can not install wellbeing test
no effective change - add test for oracle
update unit tests in TestSimpleBodyHandler and TestVertxTLSBuilder to expect to validate the correct number of enabled transport protocols to ensure accurate validation of server options in the tests
updated paths in DiffRuleKeysScriptIntegrationTest . java to use the correct Java version to ensure the tests reference the correct and current dependencies
added a flag to track if dismissed haptic is being monitored to improve user experience by preventing unnecessary dismissal of the task view
add projectile source support to losioneventworldexplosion cause initialization
removed unused import and modified the getItemId method in SymbolInputAdapter . java to streamline code and improve clarity by eliminating unnecessary suppression
updated the API endpoint from query parameters to query parameters in Bitfinex . java and increased the limit sizes in BitfinexPollingMarketDataService . java to enhance API functionality by allowing more flexible data retrieval
added a check to replace single quotes in the result string if it contains single quotes to ensure proper handling of escaped backslashes in string processing
[ hotfix ] [ runtime ] fix zookeeperleaderelectiondriver ' s tostring method to contain the configmap name
no effective change - javadoc update for sqlsessionfactorybean
[ 3.0 ] fix tri timeout bug ( # 9451 )
replaced error logging with a runtime exception throw in PolygonRegionLoader . java to improve error handling by providing a clearer exception message
added a method to check if the current deadline is a deadline and updated timing in RawStoreProxy to improve timer management and ensure proper handling of timeout exceptions
handle closed channel exception in nettyrequestexecutor ( # 4262 )
updated textView assignment to handle null genres before setting text to avoid potential null pointer exceptions when accessing genres data
[ flink - 27022 ] [ checkpoint ] reset hooks in region will be execute after a restart
fix : added support for ` ` collection of mapped container ' ' field ( # 4792 )
[ flink - 26490 ] [ wal ] fix npe when check and try to get the current unpinned memtable version
fix httpclient retry with same host on callback failure
fix typo in package - info . java and remove blank space .
added a new test class SQLServerEscapeQuestionCharacterTest for SQL server escape character handling to ensure proper functionality and validation of query parameters in Hibernate
updated method signatures of CamelModule to enforce non - null parameters to improve code robustness and prevent potential null pointer exceptions
use Util . wait instead of synchronized block to improve code readability and performance
updated package and import paths from ` com . kenai . jaffl . ParameterFlags ` to ` com . kenai . jaffl . provider . ParameterFlags ` to better organize the code structure under the provider module
support crop from image object ( # 837 )
removed the appName parameter from the configure method in InputRC to simplify the method signature and focus on essential application names
add unit test for catalog install and uninstall command which ignore dependency
update chrome test to pass headless argument to chrome driver .
replace direct assignment of value with its interned version to ensure memory efficiency by reusing string literals
added a new condition to check for " MOVE " in the response status checks to ensure proper handling of additional resource types in the database
updated US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY _ YEAR4 _ TIME formats in FixedDateFormat . java to ensure consistency in date representation across different locales
updated import statements to use the non - shaded version of Google Commons Lists instead of shaded version to resolve dependency issues caused by the current version of the Google Commons libraries
[ flink - 28946 ] [ runtime ] optimize the handling of spill buffer in hsSubpartitionmemorydatasmanager
fix # 2001 : do n ' t visit untrusted visit for plot that have permission .
disables jabber telephony until it ' s actually active
updated URL normalization logic to allow additional characters such as 0x5B and 0x7D to enhance URL normalization validation to accommodate additional character sets
change access modifiers of methods related to remote animations and transitions from protected to private to enhance encapsulation and restrict access to method
added comparison logic for tick rate in EncodingConfiguration . java to ensure correct lock rate values when processing enc1 and enc2
added a method to retrieve the project path and modified the generateProjects method to return an ImmutableSet of generated projects to improve project generation and ensure proper handling of generated projects
removed unnecessary check for native locale in HostLocaleProviderAdapterImpl . java to streamline code and ensure proper handling of calendar IDs
added a new class MSwingUtilities for scaling images and handling exceptions to provide a centralized utility for image scaling and error handling in the application
camel - 6377 : mailproducer should use async so it can be able to block in high load system .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable refresh scope for these configurations for better data management
added unit test base on user forum issue
added new Main and ScriptRenderer classes for scripting processing to facilitate the implementation of scripting in the application
added a check for ` _ inputState ` in the ` Request . java ` condition and implemented a test case for reading parameters in ` RequestTest . java ` to ensure proper handling of input parameters when reading form data
added checks for glyph dimensions and introduced isDescendant method for better touch focus handling to improve robustness and prevent potential null pointer exceptions when interacting with UI components
replaced direct calls to ` reportFailure ` with ` context . runCloseHooks ` for handling close hooks to improve context management and ensure proper handling of shutdown actions during context close
make change in lexicon a bit more strict by use item damage for save action .
replaced a fixed sleep duration with a constant timeout after an interval to improve reliability of the test by reducing the number of sleep calls
updated import statements to use wildcard imports and modified conditional check for shortName to improve code readability and ensure valid title validation before using it
update to late change in jollyDayholidays and add some debugging code
added a new file FieldUtils . java with utility methods for accessing private fields and reflection to provide utility functions for accessing private fields and reflection in a framework
updated the assertion check in DeferredAttr . java and added a new DoubleStaticImport . java file with a test method to simplify the validation logic and introduce utility for double static imports
updated layout inflation from ` custom _ content ` to ` screen ` and added padding for custom content to improve the visual appearance and alignment of the workspace widget
added a method to update settings with saving the last account in XabberAccountManager to improve account synchronization handling by notifying when an invalid token is loaded
added a new method ` setvar ` to handle variable setting options to provide users with instructions and help documentation
fire catevent . onanimaltame when damage be take from a player . close # 2670
windowframe : fix bug and more informative debug output for unsigned range
pdfbox - 4892 : add a test to make sure that the signature have font there
apps - 2358 set mode before opening image
added support for build arguments in the ImageFromDockerfile class to enhance flexibility in image processing by allowing users to specify build paths
add null check before initializing threadInfos array and avoid unnecessary assignments to improve code efficiency by avoiding unnecessary object creation
fix a bug in the piechartrenderer that cause the full - circle circle to be draw
[ hotfix ] [ checkpointing ] add log for recover input channel
added new schema constants to the mmm Schema . java and ppp Schema . java files to enhance support for additional data types in the application
added minimumSimilarity parameter to FuzzyQuery and updated related classes to utilize it to improve query flexibility by allowing customizable similarity calculations
rename ` addActionsView ( ) ` method to ` setActionsView ( ) ` in ` RecentsView . java ` to improve method naming consistency and clarify its purpose
logback - 1349 - allow configuration of the immediateflush = true on the outputstreamappender ( fixes # 15 ) .
added additional auto configuration classes to ZipkinAutoConfiguration to ensure compatibility with the latest Spring Cloud auto - configuration features
added null check in JLayer ' s remove method and introduced a new test case to address bug6875716 to ensure proper handling of null components when removing a component
updated import statements to use the non - shaded version of Google common libraries to resolve dependency issues caused by shaded imports
avoid duplicate processing of constant return / unwind block when create graph builder phase
refactor renderer methods for better readability and organization to improve maintainability and allow for better control over the rendering behavior
replaced custom byte array conversion methods with Google ' s Ints utility for byte array conversion to improve code maintainability and leverage existing functionality for better performance
added null check for mObserver in NavigationModeFeatureFlag . java to ensure mObserver is not null before proceeding with the operation
fix compilation error on jdk 8
refactor DocIdSet class and update related imports to improve code readability and maintainability
updated the method to set the end time unit using bucketMillis instead of null to ensure the anomaly results use the correct timestamp data for the anomaly timing
fix visualscoretagtest . testdoubleformatvalue ( ) on macos
added class loader initialization for the MockFactory class to ensure proper class loading for mocking functionality
add the original format to the formats list in ConverterWithEnumFormat . java to improve data handling for enum serialization and deserialization
updated date formatting to use a constant for better readability to improve maintainability and reduce the risk of errors related to string literals
add a comment setuptextureparams in jawtrenderer about the switch with miss break
camel - 15836 - camel - aws2 - * : enable autowire on the lambda client , regen component
update uservmmanagerimpl to validate or replace mac address ( # 4248 )
updated string header name handling in ProxyServlet . java to ensure case - insensitive comparison for authorization headers
change method from submit to execute in TraceableExecutorService class to improve task execution handling in context - aware scenarios
added a ` getDetails ( ) ` method to various authentication classes , including details to provide access and modification capabilities for authentication - related data
updated the randomness logic for generating random use points to improve variability in test cases
replace the ` appendDot ( ) ` method with ` endSentence ( ) ` in multiple classes to improve clarity and accuracy of sentence endment handling
updated ` formatForConsole ` method to accept ` Locale . US ` as a parameter to ensure consistent formatting regardless of the default locale settings
groovy parser - well handle sequence of consecutive name argument in method call . add more documentation
added calculations for bottom and right inset pixels based on bounds to ensure proper rendering of border elements within defined corners
refactor gesture state initialization to use a default constant to improve code clarity and ensure consistent state usage across the TouchInteractionService
replaced ` DateTime ` with ` Instant ` for version formatting in ` LlapServiceDriver . java ` to improve compatibility with modern Java time API
update openblas and openblas _ nolapack files for consistency in naming conventions to improve code readability and maintainability
remove dependency on apache common io to close resource
added synchronized keyword to the initTxnMgr method to ensure thread safety during initialization of theTxnManager
increase the wait time in the waitForRecoveriesToFinish method from 120 to 480 to improve stability and allow for longer recovery times in the test environment
added a new class ` SearchResults ` for managing search results to facilitate the retrieval of search results using Lucene ' s Lucene framework
bugfix # 60726 - do not initialize cpuft timer if it be not available
[ gr - 36813 ] initialize body if possible to allocate temporary primitive array .
added new version identifiers for " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " while deprecating old ones in the Version class to ensure compatibility with the latest version releases and deprecate the old ones
updated feature flag in FeatureFlags . java and modified package name comparison in AppIcon . java to enable two - line labeling and improve app icon filtering logic
add an API endpoint to retrieve tenant pools for the current instance to enhance the application by providing access to instance - specific configurations
added methods ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` to improve the termination logic for search searches and enhance code clarity
fix mock generation for enum class with tostring ( ) method .
added logging statements for compiling and processing commands in CxxCompileStep and CxxPreprocessStep to improve traceability and debugging of command execution and error handling
util . removecharacter ( string , charToRemove ) will now throw a npe if the char be remove already .
fix : metadata service protocol config do not take effect ( # 10385 )
drools - 2309 - add datatransformer interface for compile ( ) and transform ( ) with parameter ( )
change from Object [ ] to Number [ ] in DistributionGraph . java to improve type safety and ensure compatibility with the expected data type
simplified the conditional structure in FormatStringChecker . java by removing unnecessary interesting check to improve code readability and maintainability
solr - 965 : make sure core be initialize before use it in createraftrecords ( )
refactor ITestDbTxnManager class for improved clarity to enhance maintainability and readability of the test code
refactor database connection handling to use try - with - resources for better resource management to improve code reliability by ensuring the connection is closed automatically after use
added tests for MapModel functionality in CodeFirstPojoClient . java to ensure correct validation of map model initialization in the service map
pdfbox - 1656 : handle the case where a stream or stream be create when validate a resource
updated item listener logic in ScaleDialog . java for improved selection handling to ensure proper selection state management and prevent potential null reference issues
fix npe on forge and do n ' t use step height
pdfbox - 4877 : avoid exception when appearance stream be empty
replaced SortedSet with LinkedHashSet for keys in ExecuteSqlCommandStep . java to improve performance and maintain order of keys
updated time interval from 1500ms to 1000ms in CancelEventTimer . java for drag - and - drop functionality to improve user experience by allowing more time for drag - and - drop
* fix md5 asset for new dc device
added conditional check before setting allConstructorsToPublic in MainMockTransformer and created two new test classes StaticWithPrivateCtorTest and StaticWithPrivateCtor to ensure that all constructors are only set when not agent support and validate the functionality of static methods
pdfbox - 5239 : reduce the decryption process if the object be a cosstring or cosarray
define java . awt . xtoolkit . setwindowtitle so that it work on macos
updated depth calculation based on pixel size for better transparency handling to ensure correct depth value is assigned when using a 32 - bit color model
added errorResponseBody to InvalidResponseCodeException and used it in the OkHttpDataSource class to improve error handling by providing more context about failure responses
added a new static method ` exit ` to ` TopLogging ` and removed redundant ` exit ` calls in ` TopThreadGroup ` to streamline exit handling and improve error logging consistency
updated the calculation of the start index for regex matching to ensure proper handling of cases where the regex is not global
planner - 468 ignore fail test for upgrade to optaplanner 6.3 . 1
updated the assignment of highAllocation from lowIndex to highAllocation to ensure the correct allocation context is used for the high index
added a method to clean database entries without feeds to improve the management and deletion of feed entries
return this to allow counter to be add to the label .
[ java ] change idle strategy to noopidlestrategy so that it can be use only for medium driver .
added handling for HTTP status NOT _ MODIFIED in CacheControlHeadersWriter and related classes to ensure headers are only written when the response is not modified
truffle / instrumentation : rename the test listener to toolEvalnodefactory
removed the paintTabArea method from SynthTabbedPaneUI to correctly render the tab area with appropriate dimensions and dimensions
refactor the ` getKrakenDepth ` method to accept an argument instead of using a direct argument to simplify parameter handling and improve code readability
camel - 1446 : add fileendpoint . getfileseparator ( ) to allow for specify a file separator a an absolute path
added new JavaProvenance method and updated MavenProjectParser to utilize it for building Java proposals to improve the handling of classpath and provide a structured way to construct JavaProvenance objects
added logging for registered Hive functions and their non - deterministic UDFs , and updated the conditional check for deterministic types to improve debugging capabilities and ensure correct functionality of deterministic UDF registration
updated loop iteration count from 100 to 200 to improve testing coverage and performance metrics
patch by jbellis ; review by jbellis for cassandra - 1420
added a check for writable output files to handle root permissions to avoid errors during test execution when files are writable due to root access
added package info retrieval and fallback for package name retrieval to ensure the application info is available when the package is unavailable
cloudstack - 10495 : fix miss error message during upgrade
updated error handling in AbstractFaultTolerantChunkOrientedTasklet and added a test for RethrowNonSkippableException in FaultTolerantChunkOrientedTaskletTests to improve robustness in handling skip policies and ensure robustness against write operations
replaced startsWith checks with regionMatches for better matching to improve robustness of input validation to enhance user experience by allowing case - insensitive matching
added imports and modified dataTables handling in Recipe . java to utilize GLOBAL _ DATA _ TABLES to improve data structure management and ensure all relevant data tables are included
added a check to dismiss all tasks in the overview to ensure tasks are properly dismissed when in the launcher
cloudstack - 8593 : db upgrade : add dbupgradetemplate api to db upgrade path
removed unnecessary null checks and improved connection handling in LdapClient . java to simplify the code and enhance readability while maintaining functionality
refactor action index handling in SequenceAction . java for improved clarity and maintainability to enhance code readability and ensure correct action evaluation logic
add where we do n ' t want to start the same keyspace multiple time in cassandraserver .
added a check for synthetic fields in ReflectUtils . java to skip processing for synthetic fields to ensure that only non - synthetic fields are processed further
added LoggerProvider class to handle logging functionality to enable better logging capabilities and output management in the application
updated ` ServerStatusCommand ` to use ` ImmutableMap < String , Object > ` instead of ` String ` for port handling to enhance type safety and improve handling of varied input cases
added deprecation warning message for multiple glue class configurations to inform users of the deprecation to ensure users are aware of potential misconfigurations
added a new method ` deepStart ` that accepts a list of ` Startable ` arguments to facilitate easier handling of multiple startables
removed the deprecated method reservePrimitiveExtensionArray from Shape and ShapeImpl classes to eliminate outdated code and improve maintainability
fix # 1544 - laser table should not depend on it ' s target
refactor conditionals for object name validation in AbstractJdbcDatabase to improve clarity and maintainability of the code logic
removed unused imports related to CachingTokenFilter and TokenStream in TestSolr4Spatial2 . java to improve code clarity and reduce dependencies
added a call to setExpireMessagesPeriod on policyEntry in MemoryLimitTest . java to prevent the test from triggering 2 * pageSize overhead
removed null checks for handlerName and added a check for norm length before processing to simplify the condition for handling handlers
modify the way the servlet name is formatted in the ProxyServlet class to ensure that the log name is properly formatted for further processing
exclude the python module search path from the project search output if available
modified audio processing logic to ensure proper handling of frame sizes and improve error reporting for oversized audio data
[ type : fix ] nullpointerexception if enums be null ( # 25788 )
include the segment identifier in the error message when encounter unexpected end of segment
added assignment of the policy from containerScope to ensure the WebSocket session uses the correct policy configuration
removed unnecessary static field check and simplified the initialization logic in Java2TypeScriptTranslator . java to improve code clarity and efficiency by simplifying logic
added a webroot argument to the UserService constructor to allow dynamic configuration of the web root directory for improved user experience
[ scb - 2466 ] migrate swagger - invocation - validator module to junit5 ( # 3056 )
use netbeans api instead of reflection to check if monitoredvmutil be inaccessible
renamed the method ` createHeader ` to ` createHeader ` in multiple classes for consistency and clarity to improve code readability and maintainability by standardizing method names
replaced multiple specific imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and prepare for future stop order functionality
added multiple buffer resets in ReduceRecordProcessor . java to ensure the buffer is cleared before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when mOriginalForeground or mOriginalBackground is null
updated comparison in FloatingDecimal . java to use a strict less than operator to correct the range check for decimal exponent values
update property type comparison in PropertyDescriptor . java and add a new Test7189112 . java file with a test case to ensure proper handling of property types and validate introspection functionality
removed the maxVersion parameter from the getVersions method call to simplify the version retrieval process by directly using the latest updates
set the origin header with the original url if it be not already set ( # 6154 )
updated animation properties and visibility logic in RecentsView and TaskView classes to improve visual feedback and ensure correct behavior of modal animations in the user interface
updated error messages to include field information in ORCRecordReader . java to improve clarity and debugging by providing additional context around field types
added sample for clear HLS information in DemoUtil . java to enhance functionality by providing additional metrics for the demo
removed the HIBERATE52 reference from the PersistenceProvider class to simplify the code and improve maintainability
hbase - 13906 - move execrpcinvoker and rpcengine log from rpcinvoker to rpcengine . ( chengxiang li via xuefu )
added diagnostic listener to support multiple fields in TestSpecificCompiler to enhance error handling and reporting of compilation warnings
websocket component : fix race condition when close the websocket session ( # 509 )
increase delay in second after batch processing and rename method to improve clarity
add jdk 1.1 . xwork 1.0 . dtd support for struts
modified the stop method logic in WebCamInputPanel to handle both stop and getVideoTracks conditionally to ensure proper stream management based on the state of the stream
changed the data type of ` chartData ` from ` List ` to ` ArrayList ` in ` BittrexChartDataResponse ` and added a new ` BittrexChartDataPeriodType ` enum to improve data organization and enable better handling of different chart data types
update geoserver example to reference new data api
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` g ( ) ` method call to fix a bug related to handling a specific edge case
hhh - 10956 : implement ability to load property identifier generator from entity value
fix : rename findfulltextaction to downloadfulltextaction ( # 3738 )
modified the URIRegisterExecutorSubscriber to dynamically register URIs based on the available host and port to improve the handling of URI registrations by ensuring all relevant information are registered
refactor WebSocketMapping and WebSocketUpgradeFilter classes for improved clarity to enhance maintainability and readability of the WebSocket implementation
fix npe , log warn if no osdb hash be available
added token transfer logic and validation checks in RuntimeImpl and MUtil classes to enable token transfer functionality within the contract processing engine
camel - 6056 : ftp - copy file in current directory if stepwise be set to true on temp directory . thanks to kirill dubovik for the patch .
camel - 14284 : fix camel - jackson to use correct search bind password
added checks for matching match results and improved hybrid hash join configuration in MapJoinOperator and HybridHashTableContainer to ensure correct handling of join results and maintain database integrity
updated ServerHTTPSPDYAsyncEndPoint to accept a AsyncEndPoint parameter and modified related methods to utilize it to enhance clarity and maintainability of the asynchronous endpoint handling
added an extra key " id " to the intent for tweet IDs in multiple adapter classes to ensure correct identification of tweets within the intent
added handling for proxy authorization in HttpURLConnection and refactored disconnect logic to improve clarity and maintainability of the connection handling process
replaced the integer variable ` _ numChildren ` with an ` AtomicInteger ` for thread - safe incrementing to ensure accurate tracking of the number of children in the trace trace
updated JWT initialization in multiple Java files to ensure consistent syntax and improve code readability
disable the test for a value type issue in ValueTypeTests to prevent the test from running due to potential null pointer exceptions
change implementation of resourcenotifierserviceimpl to implement kieresources instead of internal one
replaced IN predicate types with NOT _ IN in multiple predicate classes to clarify the distinction between various predicates and enhance code readability
updated exception handling and improved account creation logic in OwnCloudAccount handling to enhance error handling robustness and provide clearer account information in the user interface
added null check for witnessService before validating permissions to avoid potential NullPointerException when witnessService is not initialized
hive - 420 . fix non - determinism in joindesc . java ( gopal v , review by jesus camacho rodriguez )
added a conditional check before setting the JavaDoc ( ) item to avoid unnecessary null assignments to ensure that a valid Javadoc document is always set
renamed ` holderMethod ` to ` holderMetadata ` and updated related methods in ` CompiledICHolder . java ` to accurately reflect the purpose of the metadata in the context of the holder operations
fix potential npe and ensure tab animation be cancel or cancel
[ flink - 31977 ] [ connector / avro ] drop unsupported metricgroup exception
updated the calculation of the y coordinate in the Polygon class to improve accuracy in positioning by using the old coordinate directly
fix compiler error due to remove compiler warning
fix for false positive on string . getresource ( string ) in inheritanceunsafegetresource
refactor ShadowCookieManager for improved code organization to enhance maintainability and readability of cookie management logic
added a configuration option for storage - based authorization checks in Hive to ensure secure access to external tables to enhance security by preventing operations on managed tables
added braces to conditional statements in Stage . java and modified the draw method in ProgressBar . java to improve code readability and correct positioning of background drawing
sulong : cache the byte order of active platform capability to get it byte order on the platform
updated PING _ TIMEOUT _ PROPERTY _ NAME from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " to align with the correct configuration for Windows client provider
modified the initWebViewLogin method to accept a baseURL parameter and updated the logic for loading the login URL to enhance functionality by allowing webview login to utilize a specific URL if available
corrected a typo in the exception message related to the JDBC type in CallableStatementHandler . java to improve clarity and accuracy of the error message for better debugging
updated the ` after ` parameter in ` AuditEventsMvcEndpoint ` and modified its usage in tests to ensure the ` after ` parameter is required and correctly handle missing date formats
[ timer ] rename exponentialtimer to preprocessthroughputtimer ( # 558 )
remove a soft body from dynamics world and reset the soft body to null to ensure proper resource management and prevent memory leaks
[ hotfix ] [ table - common ] make interface public for reuse
zeppelinhub : fix websocket error message ( # 3250 )
add test to ensure that a jingle namespace do not contain the redundant namespace .
fix potential npe , and clean up checkstyle .
more change to pipeline to support http / 2 . simple greet sample work now .
refactor condition checks in Remove . java for improved readability and consistency to enhance code clarity and maintainability by organizing conditionals
updated the string concatenation syntax in SimpleReport . java to correct the spacing and improve formatting to enhance readability and maintain consistent output formatting
removed the option to ignore symbol files in the JavapTask and updated related classes accordingly to streamline code and improve consistency in handling symbol file preferences
renamed ` TickerDemo ` class to ` StreamingTickerDemo ` and removed its associated method from ` TickerDemo ` to improve clarity and functionality by better reflecting the purpose of the class in streaming ticker processing
refactor exception handling in ContractValidateException to include null checks and exception messages to improve error handling clarity and ensure proper contract validation
ggb - 720 : only create input3d when not in applet
temporarily ignore this test while investigate failure in release build
flv : ignore invalid scriptdata name type , rather than fail playback
added an override annotation and changed the return type of getRepositoryFactoryClassName method to @ Override to ensure compatibility with the method that overrides the interface method
updated the return type of ` getExecutableCommand ` methods to ` List < String > ` instead of ` String ` across multiple classes to improve flexibility in handling executable command formats
updated assignment syntax for IOSGLES20 attributes to improve code readability and consistency in accessing instance properties
removed the UploadPathActivity class from the ComponentsModule and related components to streamline the codebase by eliminating unused components
modified return statements to conditionally return total term frequency based on index options to ensure correct handling of term frequency when the index options are not DOCS _ ONLY
fix : only add implicit constructor to constructor declaration ( # 2936 )
added a database parameter to multiple methods in ColumnSnapshotGenerator for better database handling to ensure proper processing of validate constraints based on the database type
refactor Database class methods for improved readability to enhance maintainability and ease of understanding for future developers
update springapplicationbuilder javadoc to reflect api change
updated the initialization of the iterator in PointInSetQuery to ensure proper usage of the iterator for sorted packed points
removed the substring operation from the SchematicHandler class to simplify the processing by eliminating unnecessary substring
added specific class name handling for collections in AbstractCollectionAssert to improve type safety and support for specific collection types
changed enum declaration from ' static ' to an instance method in ProcessExecutor . java to allows for potential subclassing of the Option class
added a confirmation dialog for a twitlonger action using an AlertDialog to ensure users confirm the necessary input before proceeding with the twitlonger action
refactored the ` toggleKeepInSync ` method to utilize ` CheckBox ` for asynchronous file operations to improve code organization and maintainability by consolidating keep - in - sync functionality
replaced DatatypeConverter with Base64 decoding in ImageUtil and added new test cases in ImageUtilTest to improve base64 image handling and ensure proper functionality through unit testing
added new classes ControllerCounter and DBCallback for MongoDB document tracking to enable better tracking and functionalities of MongoDB operations in the application
added final modifier to the ticketId parameter in the deleteTicket method to improve code clarity and enforce immutability of the ticketId parameter
added a new FlywayMigrationRunner class to initialize database configuration to facilitate the initialization and migration of Flyway database
updated size checks in HashMap and added a new class NotEmptyHashMap to improve handling of empty maps and provide a test for unimplemented functionality
update the version number from 0.6 . 0 to 0.7 . 0 to reflect the new release and include recent updates or bug fixes
add some warn log if orc compression modifier be miss
added null check for mainValue and introduced a new method createJar in Arrrghs . java to improve error handling when the main jar is missing and ensure proper jar creation
updated test class names by removing an unnecessary space to improve consistency and readability in test file naming
avoid create hotspotvmconfig . getcompilationgraphsize ( ) for unsupported graal compile method
bug 59864 : fix arrayindexoutofboundsexception in cellcopypolicy
added a method ` resetIconLoadResult ( ) ` to ` FloatingIconView . java ` and refactored its usage in ` Launcher . java ` to improve clarity and maintainability of icon loading result handling
[ cap ] use the raw character set from form field when caclulating the hash
updated the layout calculations for top and bottom in IconRecentsView for landscape orientation to ensure proper layout behavior for landscape mode and task items
deleted the AddAdapter . java file to the functionality provided by AddAdapter is no longer needed
guard against empty list return from lifter . getfromconstructorcode ( ) .
modified the constructor and logic in OpTraitsRulesProcFactory . java to enhance the handling of bucket column names and improve code readability
updated assertions in TestLogWatcher to improve clarity and structure to enhance error reporting when a new watcher is registered twice to ensure correct behavior when a watcher is already registered
added a print statement to the Java2TypeScriptTranslator class to enhance the output format for better readability
updated the SDK version from 4799589 to 4913185 to reflect the latest stable release identifier
add conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor to ensure that the proxy target class is always set to true during processing
updated the initialization of the singletonLock variable in TypeCachingBytecodeGenerator . java to simplify logic by removing unnecessary configuration for singleton lock
realism : added example for use callbackaction with class as well
fix : patch a bug i introduce into previous commit
updated the condition to check if Maven settings are not equal and modified the return logic to return the original MavenRepository instead of an empty list to improve the accuracy of repository retrieval based on user settings
added a name parameter to several constructors and methods in BuildRuleSourcePath , PathSourcePath , and related classes to enhance the functionality of SourcePath by allowing specification of the name of paths
updated the OAuth callback redirect URI matching logic to use ` matches ` instead of ` equals ` to improve accuracy in matching service redirect URIs
refactor annotation handling by replacing the static empty annotation array with a dedicated AnnotationParser method for converting annotations to improve code reusability and maintainability by centralizing annotation conversion logic
updated method calls in UserManagerCompatVL to use correct method parameters to ensure compatibility with updated API requirements for better functionality
[ flink - 21725 ] [ core ] default output . defaults to os default on window .
fix a bug report by beluga behr .
refactor the request handling to sanitize input values before passing them to the model to enhance security by preventing exposure of user input
chore : update java and python dependency ( # 679 )
updated the test method signature to include an IOException and added a new test for retrieving primary and secondary file names to improve error handling and ensure correct file listing in integration tests
refactor CountersReader class for improved readability to enhance maintainability and reduce complexity in the codebase
updated the methods in AllAppsRecyclerView to directly set containerType values for SEARCHRESULT , PREDICTION , and ALLAPPS to improve code clarity and ensure consistent logging of container types
hbase - 25905 ( add hbase . ipc . server . allocator . initial . max and hbase . ipc . server . allocator . buffer . size into the heap allocator ( # 547 )
[ native ] fix fail unit test due to miss join
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types correctly to improve the accuracy of obtaining parameter types in the presence of synthetic or implicit parameters
updated TestFSTs . java file to improve test coverage and fix existing issues
apps - 4237 only use label / height to avoid infinite recursion
hbase - 16545 increase the max flush size for the region split policy ( vladimir rodionov )
fix bug where launcher be n ' t load properly sometimes
removed initialization of keys and updates lists and initialized them to immediately after initialization to improve code clarity and ensure consistent date - time handling
added a method to exclude multiple datasources in SpringDataSourceBeanPostProcessor to enhance flexibility in handling excluded datasource instances
apps - 2636 add undo point after column deletion , not before
( chore ) camel - aws : use non - deprecated kinesis client configuration
updated channel handling to use a channel mask for events to improve flexibility in handling multiple channels within the Velbus sensor
updated cache configuration to disable tests due to unfavorable benchmarks and modified conditional logic for delayability to improve cache performance and ensure correct behavior during testing
added test for illegal database names and exception handling in the IoTDBSessionSimpleIT class to ensure proper validation and error handling for invalid database paths
add a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are reset before processing garbage collection
replaced desiredWorkspaceLeftRightPx and desiredWorkspaceLeftRightMarginPx with desiredWorkspaceHorizontalMarginPx in DeviceProfile . java to accurately reflect the purpose of the vertical margin in layout adjustments
refactor CharTokenizer . java to improve formatting and structure to enhance code readability and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 560 )
cloudstack - 8190 : fix xenserver traffic label for backward compatiblity
updated libgdx version and libgdx nightly version in DependencyBank . java to incorporate the latest features and fixes from the newer release
removed the metricNames field and its associated method from SolrCore . java to streamline metric name management and enhance performance
refactor URI handling in MavenManifestFactory to use Fs . fromUrl for path resolution to improve compatibility with URI - based API and simplify path management
replaced the direct check for macOS with a static final boolean variable to improve code readability and performance by avoiding repeated method calls
fix javadoc issue with miss closing parenthesis
ensure slotList is always updated in addition to another instance to improve memory management and prevent potential null pointer exceptions
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predicate count for accurate testing
added a method to merge properties from configuration in ConfigurationSpringInitializer . java to improve configuration handling by enabling property merging for better application context
updated the logging setup method to use the root logger instead of a direct logger reference to improve flexibility in logging configuration by allowing the use of a specific logger
replaced HashMap with LinkedHashMap in multiple Java files to maintain the order of operations in the application
added logic to retrieve the superclass of a Class from TYPE _ HANDLER _ MAP in TypeHandlerRegistry . java to ensure proper handling of null types and avoid potential NullPointerExceptions
added debug logging when writing items in Hibernate , JpaItemWriter , and JmsItemWriter to improve traceability and debugging by providing insights during item writing operations
modify the parsing logic for Locale . LanguageRange to handle semicolon correctly to ensure accurate parsing of language - specific values from the wellformed string
replace direct handling of closeHandler with an execution using handlerContext in Http2ServerResponseImpl and ensure proper server context management in Http2Test
improve xssfevaluationworkbook by cache xssftable ( relate to bugzilla 4687 )
updated schema text formatting checks and improved variable naming conventions to enhance clarity of detailed schema output and ensure consistent naming conventions
updated bean references from MongoFactoryBean to MongoClientFactoryBean and added import for MongoClient to improve clarity and align with the updated MongoDB client management system
replace HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain the order of elements in the roots and leaves
removed the assertion for cloning table scan operations in SkewJoinOptimizer . java to improve error handling by ensuring the correct operator tree is cloned
added a null check for the client ID before returning the registration client to ensure that the client details are only retrieved when the client ID is not already set
clear exception when statlist clear an e . g . on shutdown for easy debugging
initialize userName , productName , productVersion , and driverClassName variables to empty strings in MutableDatabaseInfo and MutableJdbcDriverInfo classes to avoid null reference issues and ensure default values are set
updated references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in multiple files to align naming with the new share view functionality
added support for reading long values from ByteBuffersDataInput to improve performance and memory efficiency during long buffer operations
refactor UnixFileAttributes to use separate sec and nsec variables for file time calculations to improve clarity and maintainability of file time representation
8014182 : [ testbug ] jtreg / test / compiler / whitebox / testnoeagerreclaimofhumongousregions . java fails due to bad reference to the humongous region
added visibility logic for the search bar in AllAppsContainerView based on user preferences to ensure the search bar is shown dynamically based on user preferences
updated the method call from ` env . router ( ) . get ` to ` env . routes ( ) . get ` to ensure consistency in accessing the router configuration
added null checks for ' cur ' and ' next ' in LineChartRenderer . java to prevent NullPointerExceptions during rendering
added a new action for reloading a page in the menu to enhance user experience by allowing users to refresh the page display
replaced ` info ` logging with ` warn ` log level in ` SQLManager . java ` to improve logging granularity for non - existent entries to better visibility and debugging
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest security features and security improvements
ambari - 18305 . throw an exception if configuration type do n ' t have a version .
geos - 7768 , use serviceloader instead of factoryregistry to lookup the extension point
added a closeTable ( ) method to HiveHBaseTableInputFormat to ensure resources are properly closed to prevent memory leaks
added a method to stop the statement executor in JdbcConnector and integrated it into HiveViewImpl to notify players when stopping the statement executor and improve logging capabilities
refactor hints to use HashMap instead of Collections and update method signatures for clarity to improve code readability and ensure consistent type safety
replaced ` jdb . command ` with ` jdb . contToExit ` and added ` OutputAnalyzer ` for better output handling to improve the reliability of the database exit process and ensure the expected output format
added getType method to ShadowContentResolver and corresponding test cases in ContentResolverTest to ensure correct handling of content providers and validate expected types during type retrieval
refactor Future handling in ExpressionThreadPoolManager for clarity to improve code readability and maintainability by explicitly defining the variable
updated the default HTTP port property from " port " to " vertx . httpPort " to ensure accurate retrieval of the HTTP port configuration
replaced ` addCaptureListener ( new ChangeListener ( ) ) ` with ` addListener ( ) ` for the buttonTable to improve the functionality of event handling related to the buttonTable
updated the DEFAULT _ BATCH _ SIZE constant to use available processors instead of a fixed value to optimize resource usage based on the number of available processors
[ hotfix ] [ coordination ] log invalid error when start the resource manager connection in taskexecutor
small fix to lambdarewriter so that it return a fallback when unable to load class
updated error message to include min and max values in IllegalArgumentException to improve clarity and specificity of validation constraints
updated method signatures to include ' owner ' and ' telegram ' parameters across multiple classes to improve code clarity and ensure correct handling of telegram transactions
added new interfaces and classes for managing database operations to provide a structured way to handle database operations and improve code organization
renamed multiple assertion classes including AbstractIterableAssert , AtomicPathAssert , AtomicReferenceArrayAssert , and InstanceOfAssertFactories to improve clarity and consistency in the codebase
# 339 - enh : add setbeanid method to ebeanserver ( # 339 )
updated the method to retrieve the add - to - site descriptor XSL to use a dynamic method instead of a hardcoded string to improve flexibility and maintainability by allowing the use of different xslt directories
replaced the direct usage of ` requestMatcher ` with a new list of ` RequestMatcher ` instances to improve efficiency by consolidating request matchers
added hashCode and equals methods to ContactResource class to ensure proper comparison and hashing of ContactResource instances
simplify getrequest method in abstractprocessor since it ' s not use
updated log messages and improved error handling in FileManager . java to enhance clarity of log messages and ensure accurate error reporting during saving operations
added a reset method call to MockControl in TestJdbcDataSource and implemented tearDown method in TestIndexSearcher to ensure proper resource cleanup during test execution
updated syntax tests to improve clarity and consistency to enhance code readability and maintainability by standardizing source file retrieval
updated connection management logic in ConnectionModel and ModeledConnection classes to improve application performance and maintainability
tika - 825 and tika - 825 : switch parserdecorator to use multiple parser instead of single parser for good performance
update fml security manager to account for Minecraft specific class loading .
changed variable declarations from individual to individual in AccountUtils . java for improved readability to simplify variable declaration and enhance code clarity
updated the parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME constructor in CoreApiMapping . java to ensure consistency in method naming and improve data handling in CoreAdminMapping
fix # 262 , and add test for jsx comment
added ScreenRecordRule import and annotation in AddWidgetTest . java to enable screen recording during the test execution for better debugging
added error handling tests and improved environment management in BuildEndToEndTest and CxxEndToEndTest classes to ensure tests correctly handle missing Buck configurations and provide clearer error messages
added physical memory checks in TestStringBufferAndBuilderGrowth . java to ensure tests do not run if there is insufficient resources to maintain resource availability for better resource analysis
doc : update custom converter doc to use conversionservice bean ( # 8638 )
set success flag to true in HiveMetaStoreClient to indicate successful operation of the metastore client
updated condition checks to use ' . equals ( " * " ) ' instead of ' = = ' to ensure proper string comparison and prevent potential null pointer exceptions
added support for handling " vine . co " and " twimg . com " links in tweet validation logic to enhance compatibility with additional media formats in the application
deprecate AreaReference . java in favor of AreaReference . java to signal that the class should no longer be used
refactor ElementType and Target classes for improved code organization to enhance maintainability and readability of the codebase
modified reference kind handling in MemberName . java to include additional assertions and clarify reference kind changes to enhance code robustness and ensure correct reference behavior in method handling
change default value of SUBMIT _ KEY _ UPDATES from " false " to " true " and ensure proper synchronization during change execution
corrected the conditional check for MouseEvent in EditNodeTextField . java to ensure proper handling of mouse events within the text field
camel - 3944 : fixed issue where xml dsl do n ' t use bean expression with type = ' ' type : ' ' .
no - jira : update miss license header
refactor exception handling in AgentRunnerTest . java for clarity to improve code readability and maintainability
added descriptions to multiple classes for better clarity to enhance the understanding of project dependencies and improve user understanding
refactor faces and activeGroup management in ObjLoader . java to improve clarity and maintainability of activeGroup management
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future development
correct typo : ` reentrantlock ` - > ` lock . lock ( ) ` ;
added a new parameter ` mavenPackaging ` to the ` getBomReference ` method and updated related methods to accommodate it to enable better handling of dependencies in the Maven Maven AsCyclone DxBom printer
updated the back method to utilize the event getComponent ( ) instead of a hardcoded back ( ) to improve event handling by passing the event to the parent component
fix incorrect conditional checkstyle violation in saslauthentication
updated method signatures to use ` < T extends @ Nullable Object > ` instead of ` @ Nullable [ t ] ` to improve type safety and consistency across the codebase
updated configuration retrieval methods to use ` getConf ( ) ` instead of ` NutchConf ` to improve consistency and ensure consistency in configuration management
bug fix on displayed board ( race condition between sheet )
added a method ` getSessionId ( ) ` to return the session ID to provide access to the session ' s identifier for external use
added null checks for node and edge time interval before setting them to ensure that the time interval is only set when it is not already set
remove hardcoded log level set on mockserver ( # 4798
updated error logging to include exception message to improve error reporting by providing more context about resource loading failures
do n ' t use robothonoringpolicy from crawldumper , but rely on metadata from crawldumper
test : ignore flaky it - system test ( # 100 )
( chore ) camel - base - engine : fix incorrect test on window
added alternativePath method to retrieve a ByteArrayInputStream from a try - catch block to handle potential runtime exceptions and improve robustness in file input stream processing
fix input . init ( ) to firstfilter ( ) . init ( ) so that it do n ' t run multiple time .
added a new parameter ` protectionDomain ` to the method signature in ` BufferAlignmentAgent . java ` to enhance security by managing the protection domain during operations
fix the water ripper to clear the batch and texture when dispose
added a configuration option to disable external table optimizations in Hive to enhance performance by preventing external table operations
updated the authorization header description in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
modified wallpaper offset settings in Workspace . java to set the vertical offset to zero to improve the aesthetic placement of the wallpaper during scrolling
changed return value from false to true in SybaseASADatabase and updated sequence query handling in SequenceSnapshotGenerator and CreateSequenceGenerator to ensure correct sequence generation logic for Sybase ASA database
nifi - 1617 : fixed issue in putsql when the autocommit be set to false
added checks for the existence of the sub directory for the file in SnapPuller . java and validated its creation in TestReplicationHandler . java to ensure the necessary directory is available before proceeding to prevent server errors during file creation
updated the target ID in AppTarget creation from " id : launcher " to " launcher : launcher " to ensure consistency in target identification across the application
refactored framer . frame and framer . framer . frameandreleasemessage to use a bytebuffer parameter instead of the bytebuffer itself .
removed redundant parameters from several constructors in the OAuth2LoginConfigurer and OAuth2LoginAuthenticationFilter classes to simplify parameter handling and improve code readability
updated the description of the map creation method and improved spacing in the conditional assignment to enhance clarity of the map creation process and improve code readability
updated PlainFormatter to truncate time to milliseconds instead of a fixed value to improve precision of time representation in the output
updated the timeout duration in the AgentRunner class from 1000ms to 3000ms and refactored the close method to improve thread handling and ensure consistent timeout behavior during agent closure
hhh - 16973 avoid reflection from classloadingstrategyhelper # getprivatelookupbyname ( )
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
updated debug log message to indicate the new event file instead of closing it to improve clarity of logged event messages for better debugging
added JUnit Ignore annotation to SamplingNamingTest to mark the test as ignored due to its very frequent result
updated the error message to specify that rows and columns must be greater than zero to improve clarity and correctness of the exception message
fix string concatenation in xmlagoncpart , and make sure exception be handled
added sorting functionality for BoundSheetRecord instances in XLS2CSVmra to improve the organization and retrieval of BoundSheetRecords based on their position
modify calculations for average impulse values in ThrustCurveMotor . java to improve the formula for determining impulse over time
apply patch from hadrian zbarcea to fix a problem with input system .
[ gr - 44217 ] make sure we always have a valid instanceidentityhashcodefield in the test .
remove block . getnom ( ) , deprecate since 0.9 ( # 4947 )
renamed keytabPath to localKeytabPath and updated logging statements accordingly to improve code clarity and maintain consistent naming conventions
added an option to handle empty words in LineReader and updated matcher logic to improve user input handling and ensure proper matching behavior
fix view replica update when writecommitlog be true
issue 504 : add option to enable auto - open web from resulthandler
added a test for batching in JoinedTableTest . java and modified properties handling in Hibernate to enhance testing coverage and ensure proper configuration for batch size and update properties
added handling for EntityExistsException in JpaPersistenceService to improve error logging and provide more context for EntityExistsException
removed deprecated format method and updated CucumberOptions to use a plugin instead to simplify code and encourage the use of the updated command - line option
added save ( ) method to PMS . java to ensure data is saved before processing
simplified the back key handling logic in ExtendedEditText . java to improve code readability and maintainability
formatted the capacity method in AbstractStringBuilder and added a new Capacity class for testing to improve code readability and facilitate randomness in capacity calculations
replace goHome ( ) method with onNoteSaved ( noteTmp ) method to improve save handling after saving notes
insert a ' endnotes ' field into xwpfworddocument when fetch the footnote id
updated CasAuthenticationManager to include clientInfo parameter when publishing the successful event to enhance event details for better context in authentication transactions
added a test method to verify the version of the OgrLibrary to ensure the version retrieval functionality is functioning as expected
added a new file ` Lifecycle . java ` to implement a basic UI with network error handling to demonstrate and manage network events in the application
fixed deviantart ' s ` ` not find ' ' bug
remove unused import statements and clean up code in BodyTubeShapes and RocketFigure classes to improve code readability and maintainability
added support for retina scaling and surface scaling in PJOGL . java to improve user experience by allowing more flexible image scaling options
show online option only when pub be available ( # 923 )
replaced direct value writing with a block size calculation and simplified buffer management to improve performance and reduce memory usage during write operations
camel - 3057 : route should use sort ( # 3657 )
removed unnecessary data list and related data frame handling in GoAwayTest . java to streamline data processing and eliminate unnecessary data release logic
added support for setting properties for maps in ReflectionUtils and created a new FluentSetterBean class to enhance functionality for proper bean handling and testing for fluent setter registration
updated method signatures and return types in BlockingHttpEndpoint , HttpEndpoint , and HttpEndpoint to use HttpResponse instead of ByteStreams to enhance type safety and improve handling of HTTP responses
fix test to respect new preparefolder method
updated the print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity by using a more descriptive variable name
added writing image scaling information into rtf settings .
added conditional logic to display the aggregate function name based on the SQL parameter to enhance the data retrieval accuracy by including the aggregate function name when applicable
replaced LuceneTestCase with WithNestedTests and updated test class inheritance to improve test consistency and leverage JUnit ' s built - in testing framework
added logic to set the X -cap server URI based on the registration state to ensure the user is informed of the XCap server URI ' s enabled state
ww - 3883 add option to handle exception and improve error log
provide an api to simplify text edit on android . this should fix issue # 110 .
nifi - 6331 : fix handling of non - existing group attribute in control rate
updated the parameter names and logic in the showDialog method for better clarity and functionality to enhance the user experience by allowing users to choose whether a component can be opened based on user preferences
add synchronization when send message to the client .
added a condition in HTMLDataFlavorTest to check for Windows OS before executing the test to ensure the test is only run on Microsoft Windows , clarifying that it is considered passed on other operating systems
added SQL _ SERVER _ SNAPSHOT as a new parameter in TransactionIsolationLevel to enhance compatibility with SQL Server SNAPSHOT format
replace the method of adding new recids with a loop that waits for seconds to ensure proper handling of waiting periods during asynchronous operations
[ ci ] use java . util . zip . zipfile instead of jrecompat . jarfile
added a check to ensure the command class is not null before creating the RegisteredServiceImpl object to improve service registration logic to prevent potential null pointer exceptions
use ignore disk failure policy from cassandra to prevent a graceful shutdown
removed public access modifier from method declarations in RipperInterface . java to follow encapsulation standards
[ java ] exclude local address from peer address in high load scenario . resolve issue # 849 .
resolved - issue batch - 145 : jobexecutor should not have to define a jobexecutor .
fix the partition rebalancer under heavy load ( # 2244 )
[ grid ] do n ' t allow docker container to delete container .
simonstewart : fix parsing of pipe - separated command in the selenium - e
add retry rule for createglossarytests ( # 1953 )
fix some use of wrong variable ( see https : / / bugs . eclipse . org / bugs / show _ bug . cgi ? id = 46754 ) ( # 3594 )
replaced the use of a private field ` deleted ` with a direct reference to ` source ` in ` EntityDeletedEvent ` and improved JSON serialization to enhance code clarity and maintainability by standardizing the handling of deleted entities
added GOP support validation in FormatConfiguration . java and updated related imports in DLNAMediaInfo . java and LibMediaInfoParser . java to improve error handling and logging for GOP format issues
added a new file TestProfileReturnTypePrinting . java with performance testing methods to evaluate the return type printing performance of different class instances
cloudstack - 2120 : fix concurrentmodificationexception cause by parseconfigutils # refreshconfig
added functionality to release and acquire columns segment operators in MinMaxValueBasedSelectionOrderByCombineOperator to enhance resource management by ensuring proper release of segment operators during query execution
simonstewart : remove the invalid ignore annotation from the firefox test
updated method signatures and return types in HasAndroidDeviceDetails . java to improve clarity of return values and enhance data structure for better usability
do n ' t add to project stats if we be not dead
fixed color of disabled text for GTK import panel ( # 2084 )
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code clarity and maintainability
added logic to return the date in the future when the recurrence is empty to ensure that the future correctly adjusts the date range for week actions in the future
refactor upload button to use an action menu for handling a single upload action to improve code organization and simplify the upload button setup
Refactored multiple classes related to message security and metadata handling to Improve code clarity and maintainability by standardizing naming conventions
added ` loadMetaData ` method implementation to ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading of exchange metadata for improved data handling
added a new WritableSerializer class to handle Writable types in CrawlDbReader . java to enable proper serialization of Writable types in the JSON format
no need to create a test request , it ' s not need .
camel - 12448 : camel - mdns - add discovery service to registry
fix an npe in chatviewerfragment when messageitem be null .
updated ForkJoinPool initialization to include a ForkJoinWorkerThread to improve thread handling for better concurrent execution management
removed assertions for dependencies that contain blocker roles in the RoleCommandOrderTest to streamline test validation by eliminating redundant checks
added a new method ` restoreLocalInfoFromTableInfo ( ) ` and modified the ` writeObject ` method to include it to improve code clarity and ensure local information is restored from table information
standardized spacing in conditional statements across multiple files to improve code readability and maintain consistency
added matrix transformation and modified logo rendering in BitmapFontTest . java to improve rendering accuracy and ensure the logo is rendered correctly
[ flink - 20737 ] [ python ] [ table - planner - blink ] exclude built - in agg from python group window agg
add miss follow on fix for 7816 only apply to cassandra - 2.1 branch in
fix a method to check if a host be there before start a storageproxy .
apps - 4889 only use unwrap for the left expression to avoid a classcastexception
updated content type handling in FormAuthenticator and SavedRequest classes to ensure correct content type is set based on request content type
refactor XToolkit . java to improve variable access and cleanup methods to enhance code clarity and ensure proper null checks for graphics environment variables
updated RecommenderJob and AbstractJob classes to improve code organization and clarify job purpose
refactor lock management to use ReentrantReadWriteLock instead of synchronized methods to improve performance and flexibility in concurrent environments
added a test method to verify the reading of identity providers across different identity zones to ensure correct handling of identity providers in different identity zones
fix time out null pointer exception and improve javadoc
removed unused import of Service from SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
send heartbeat to all broker when rebalance be change ( # 5708 )
chore : use ca . detached . mk . mode config to set detached mkdir mode ( # 5069 )
[ java ] add test to ensure that there be no slow follower .
fix [ author3 ] [ year ] should have [ auth ] [ year ]
refactor CxxPlatform dependency handling in DBinaryDescription and DLibraryDescription classes to improve dependency management and maintain consistency across C++ platform dependencies
camel - 14946 : camel - google - cloud - api - add a dispose ( ) method to ensure that the share authorization service be deactivation . ( # 14946 )
camel - 708 : fixed bug that can trigger use dynamic finish file with thanks to rene
added a new boolean field ` reopenReaders ` in ` SolrConfig ` and modified the condition in ` SolrCore ` to use it to enable automatic reopening of readers when configuring the index directory
include freeplane version in mapwriter for easy debugging
added methods to retrieve and set the current date and timestamp in the Update class to enhance functionality for handling date and timestamp data in MongoDB updates
added a new method ` ResultInfo dup ` and a test class ` PrimitiveTypeInBoundForMethodRefTest ` to handle method reference mapping to improve the handling of generic types and ensure correct context propagation in method references
refactor condition classes to use an interface instead of an abstract class to simplify the code structure and improve readability
replaced TermQuery with ConstantScoreQuery for querying to improve query performance and type safety in the test implementation
removed several unused imports related to Java ' s invoke package from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability by eliminating unnecessary dependencies
added a method to provide SharedPreferences for direct nearby upload preferences to enhance the upload controller ' s capabilities by providing access to shared preferences
improve support for derby mode ( base on http : / / github . com / internetarchive / sql / issues / 238 )
updated formatting and added conditional properties for tracing in ` TraceGatewayEnvironmentPostProcessor ` and ` SamplerAutoConfiguration ` to enhance code readability and allow flexible tracing behavior based on configuration
added lastPid to poifsproperties and updated getlastPid to return it corrected value
geotiffreader : check for infinite infinity instead of nan and handle negative float point in nodata
updated the driver execution method to improve argument completeness and clarity to enhance code readability and ensure consistent process status reporting
replaced ` Executor ` with ` Scheduler ` for handling asynchronous tasks to improve task execution efficiency and error handling in the MockRestAdapter
refactor ` selectByRuleIdSet ` method to accept a list of ` List < String > ` instead of a single ` Set < String > ` to improve code efficiency by eliminating the need for intermediate list conversion
added a method to the ExitStatus class for adding exit descriptions to improve error handling by preserving stack trace information for better debugging
fix right - click - click action for multiple player session
rename ` ` cf ' ' to ` ` cfColumn ' ' in ` SliceReadCommand . java ` to improve clarity by specifying the purpose of the column name
fix a bug in plotconfiguration # setrangelength ( ) , fixes # 2643
refactor input handling in DefaultIOSInput to use a UIAlertController instead of directly accessing the UIAlertView to improve modularity and encapsulation of the alert functionality
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to ensure correct usage of the native linkable build target
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more descriptive parameter name
[ adv ] fix adservicetest ( fail on window )
updated key handling in MappingMongoConverter for improved type conversion to enhance key processing logic and ensure proper string representation
updated Timber logging format for image titles and descriptions to improve clarity of image data for debugging purposes
camel - 9065 : correct documentation to use thymeleaf / thymeleaf - spring3
lucene - 1790 : handle npe in fuzzylikethisquery . extractterms when field not exist
modified the ` writeApplicationsLinks ` method to accept a boolean parameter ` tabularList ` to enhance flexibility in displaying application links based on the state of the application list
[ ds - 2894 ] replace usage of deprecate dspace . getservicebyname ( ) with identifierservicefactory . getinstance ( ) .
update assignBytes method to use the buffer length from StringBuilder to ensure accurate byte assignment by using the correct length from the buffer
changed the method signature of getDisplayScript to return a String instead of being abstract to provide a default implementation that returns null for the method
updated the sequence usage in RemoteWebDriver and BasicKeyboardInterfaceTest to improve code clarity and maintainability by using a consistent sequence reference
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
added synchronization and null checks for the dbus connection in NetworkConfigurationWatcher and NetworkManagerListenerImpl to improve synchronization handling and avoid potential null pointer exceptions
fix bug # 45538 - work around a bug in hssfworkbook . getallembeddedobjects where it do n ' t handle nested workbook
removed an import statement for Shdr from ShaderNodeLoaderDelegate . java to eliminate unused dependencies and streamline the code
replaced ` hostParams ` with ` roleParams ` for storing roles to ensure consistent handling of role - related parameters in the management controller
fix for bug # 582 : the word ' s font would not be convert to a text type .
fix to modelHourglass use gl11 . popattrib instead of glstatemanager . popattrib
adjusted calendar initialization and modified duration handling in LiveTvGuideActivity and ProgramListAdapter to use currentGuideStart instead of Activity to improve accuracy of start date checks and ensure thread safety against timeline updates
updated method invocation to use Whitebox ' s method and added new classes ChildA and ChildB for testing to improve method handling and establish a more structured mock structure for testing
ensure ffmpeg be load with libfreetype . so and libfontmanager . so ( # 1790 )
trig : fix parsing of multi - variable function
add some guard support to the loop begin node to allow for safe arithmetic operation on the range guard .
do n ' t change value number dataflow so that it do n ' t loose the recursive call .
added a new ` LocalizedString ` class and modified several files to utilize it for message formatting to improve code readability and maintainability by centralizing message formatting logic
hhh - 3879 - turn off classpath search in defaultcontainer
replaced mutable arrays with final ones for formats and formats in DataLine . java to ensure immutability of audio format properties and improve code readability
mondrian : set default retries to 1 on disconnect to avoid infinite loop .
added settings initialization and modified usage instructions in TexturePacker . java to improve configuration handling and ensure default settings are used when not provided
added text view bindings for uploaded images and used byWikiTextView and null - checking for imagesUsedByWikiTextView to improve UI consistency and avoid null pointer exceptions when displaying upload counts
added mock and logger annotation processing calls in TranslatingJavacPhaseTracerTest . java to improve mock handling during annotation processing
fix ( sql ) : remove unused property ` ` allcategories ' '
updated assertion statements for username and password in AuthzAuthenticationRequest . java to ensure correct syntax by removing unnecessary quotes
added accessibility checks and modified timeout handling in TaskbarStashController to improve accessibility support and ensure proper timeout behavior for taskbar operations
added support for the ' ^ ' character in signature parsing to ensure that a NoSuchElementException is thrown when a ' ^ ' character is present
updated access flags handling in ClassVisitorDriverFromElement and added tests for stubbed jars in StubJarTest to ensure correct access level management and verify functionality of stubbed jars
added null checks for input in IntervalFilter and LowpassIntervalsSource classes to ensure robustness by preventing null pointer exceptions
added two test methods for iterating over entries in a Map interface to ensure correct behavior of entry set iterators when interacting with the map
added a serialVersionUID field to the TreeMap class to ensure compatibility during serialization and deserialization
updated the method to return the second created time instead of the milliseconds to ensure accurate time representation in the ImageData object
# 2896 simplified usage of singularws ' s locuslib and add f2m command to the command
added import for EncryptionUtils and invoked deleteKeyForAccount method to remove private and public key entries for accounts within the arbitraryDataProvider
refactor keep - alive header setting to use a new method in AsyncHttpProviderUtils to improve code maintainability and readability by centralizing keep - alive logic
fix postjoinmapoperation when no interceptorlist be present ( # 1605 )
removed multiple inlined inline processor additions for text , JavaScript , and CSS modes to streamline the code and enhance enhancement of inlining functionality
removed the spillEnabled parameter from several constructors and methods in BinaryHashTable and LongHybridHashTable classes to simplify constructor and avoid unnecessary configuration for spill usage
refactor environment variable retrieval logic and introduce new methods for case - insensitive access to improve the handling of environment variables and enhance code maintainability
ww - 4887 add javadoc for new method
added SerializableMode import to Mockito . java and modified PluginSwitch . java to include an import to enable serialization support while cleaning up unnecessary code formatting
hhh - 7114 : bean define with @ field injection can not be annotate with @ nullable be set on a bean .
added isolation level in select statement in the database schema to enhance compatibility with different database modes
replaced usage of HiveConf with static final constants for hive server2 transport settings to improve code readability and maintainability by reducing repetitive configuration calls
added a method isCacheable ( LeafReaderContext ctx ) that returns false to enforce that caching is not allowed for these query implementations
added a new file TestStrangeControl . java that implements a thread that runs a StrangeControl test to facilitate testing of StrangeControl functionality within a multi - threaded environment
update file extension for JSFile and JsLibrary to use " . jsfile " and " . jslib " instead of " . json " to ensure compatibility with new JSFile format
added selection start and end properties to ShadowEditText to support setting and retrieving selection positions in ShadowEditText
refactor grpc - related server initialization to use try - with - resources for better resource management to ensure proper closure of gRPC server resources to prevent potential memory leaks
added a method ` use ` to the ` Jooby ` class and updated the ` Router ` class to include an optional path parameter to enhance flexibility in route handling and ensure path validation
added null check for fst in FreeTextSuggester . java to ensure lookup is not supported before proceeding
replaced usage of line separator with system - dependent newline to ensure consistent newline formatting across different operating systems
added abiWriterClass loading and processing logic to JavacInMemoryStep . java to enhance abi writer class management and provide debugging information when loading processors
suppress a warning about stable usage of boolean method in pub root
[ issue # 7030 ] add warn log when service be not stop
refactor EnergyEndpointer class for better error handling to improve robustness and prevent application crashes
refactor ` ComponentPresetChooserDialog ` to use an array of displayed columns instead of a fixed array for improved filtering to enhance flexibility when determining the position of component presets based on their indices
remove unused import ( # 1114 )
camel - google - sps fixed switch / cases indentation see camel - 14540
added a method to retrieve the exported header style in CxxLibraryDescription and updated related references in CxxLibraryMetadataFactory to allow customization of the exported header style for better compatibility
remove empty file :constants . java and distanceutils . java , which be no longer use
refactor diskDelimiter handling in RandomPartitioner to improve clarity and efficiency to enhance key processing logic by directly extracting the next character of the key
[ gr - 36493 ] initialize image class at build time if need .
added a test for creating inline role bindings and refactored the role binding creation logic to improve test coverage and simplify the creation process of RoleBinding
added debug logging statements to UaaSessionCookieConfig for session cookie configuration to enhance traceability and debugging during session configuration
updated file name generation to use the current year from the calendar instead of a simple log value to improve accuracy in determining the file naming based on the current time
add check for null value in observeblockingsubscription ( ) ; fix arrayindexoutofboundsexception
added error handling for invalid javap options and introduced a new class T8033711 to ensure proper usage of the option in the javap output
replaced all instances of ` collect ( Collectors . toList ( ) ) ` with ` toList ( ) ` across multiple classes to simplify the code and improve consistency in list handling
[ flink - 2594 ] do n ' t log error when get acquiring task on shutdown
[ flink - 32663 ] [ network ] [ gate ] enable tiered storage when appropriate for hybrid shuffle
replaced a static constant ` SUCCESS _ CODE ` with a new method ` isNotSuccessStatus ` for status checking in multiple services to improve code readability and maintainability by centralizing the status code logic
added OpenGL20 configuration and changed the Cubocy application initialization to enable OpenGL 2.0 integration and ensure proper application behavior
remove unnecessary type check in j2jimplebody . getmethodreturntype ( ) .
updated imports and refactored the OutputMacroExpander class to utilize new functionality and improved argument handling to enhance code maintainability and clarify the handling of command line arguments
wait for any job to be light ( # 21843 )
updated condition in MergeWordsListTask to include both " / build / " and " \ build \ \ \ " to ensure the correct handling of duplicate words in the file paths
make response comment use string instead of responsequestionattributes to avoid npe
removed unnecessary whitespace in the return statement to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java with methods to handle escape operations to facilitate testing of object escaping in method calls
replaced direct stream skipping with IOUtils for reading bytes to improve code reliability and maintainability by using a centralized utility for file reading
added interceptor support for connection pool start and close connections to improve error handling and provide clearer logging for connection pool initialization issues
change exception handling from Exception to Throwable in CoreContainer . java to improve error handling to capture a broader range of exceptions
hbase - 16579 fix the incorrect block size calculation in the cache
removed redundant check for zero task count from RecentsView . java to simplify the code by assuming taskCount is greater than zero
added instance config change listener in HelixBrokerStarter and increased sleep duration in HelixServerStarter from 1000 milliseconds to 5000 milliseconds to ensure proper routing table updates and reduce wait time for server stability
added CoinmateMetadataServiceRaw interface and implemented remoteInit method in CoinmateExchange to retrieve and initialize exchange metadata for the Coinmate exchange
[ mng - 5734 ] added warning for unresolved $ { project . basedir } and $ { project . basedir }
pdfbox - 4892 : keep object key unchanged if the key change
[ beam - 8470 ] add displaydata support to ptransform ( # 9441 )
replaced instances of ` DefaultSubject ` with ` assertThat ` for null checks to enhance clarity and maintainability of test assertions
disable the MD2 and RSA key size algorithms in ClientJSSEServerJSSE to enhance security by enabling stronger algorithms
fix invalid check for new subcommand group with optiondata # usubcommands ( ) ( # 1696 )
update module - info . java files for mmm and ppp modules to ensure proper module dependencies and organization
added error handling for server connection errors in IOSImplementation . java to ensure proper error reporting when an unexpected server error occurs
corrected the assignment of sCheckingEvents and added a finally block in LogEventChecker to ensure proper resource management and prevent potential memory leaks
refactor error handling and resource management in FileSinkOperator . java to improve error logging and ensure proper closure of writers and record writers
added diagnostic handling in SchemaGenerator by printing diagnostic information to enhance debugging by providing detailed diagnostic information during task execution
replaced SemanticException with OptiqSemanticException for handling invalid column references to improve error handling for optiq columns in the semantic analysis
updated test cases in DataSourceMonitorTests . java to improve test coverage and ensure accuracy of data source monitoring
added a loadedResourcePaths set to track loaded resource paths to improve efficiency by preventing redundant scanning of the same resource path
[ type : fix ] fix nullpointerexception in testserviceutil ( # 5100 )
always return a mutable response and throw an error if the object be null
add ip address to eckey config ( # 1539 )
fix arrow buffer allocator break on netty 5
add miss license header ( # 474 )
added null and length checks for header and body buffer in HttpConnection . java and implemented a test for unexpecting HTTP requests with body to improve robustness of HTTP parsing and ensure correct behavior with missing header or footer
[ java ] fixed multiple timeout request for the same upstream and request on the parent subscription .
avoid start the same sstables multiple time . patch by brandonwilliams , review by jbellis for cassandra - 1479
added a test annotation to the TestOrcTimezone1 class to ensure that the test methods are recognized and executed locally
consolidated string matching logic into a single method called findMatch to improve code readability and maintainability by consolidating string - related logic
add error handling for retrieving instance segment map in PinotSegmentRestletResource . java and update JsonUtils usage in TraceContext . java to improve robustness by catching JsonProcessingException and providing clearer error messages
update JTable rendering logic to handle null column classes and add a new test class Test6888156 to ensure proper rendering of null values and validate the functionality of the JTable model
modify argument handling to check for the existence of the SHELL or BUSYBOX before adding it to ensure the application can handle cases where the SHELL environment does not available
updated the delete method parameters in DatabaseCleaningService from ( 10 ) to ( 1 ) to optimize the deletion process by reducing the number of subscriptions
replaced ` List ` with ` Set ` for ` testInstances ` and updated related method signatures to utilize ` Set ` to improve performance and ensure uniqueness of test instances
updated FieldMonitor class to enhance field tracking functionality to improve performance and accuracy of field monitoring
updated fileMmapEnableIfSupported ( ) method calls in BTreeMapTest . java to ensure proper management of file mmap and transaction settings
modified the iterator initialization in SortedIntList and added a reset method to improve iterator management and ensure proper resetting of the iterator after creation
remove unregistration of the object from the remote proxy and update the exception handling to improve resource management and simplify error handling
[ flink - 11178 ] [ rocksdb ] set default writebuffer size to 64mb
updated the constructor call to use the style ' s background color directly to simplify the object initialization by eliminating unnecessary parameters
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to omit encoding of the message when adding it to the request
[ beam - 10620 ] fix beam runner json graph dump issue ( # 10489 )
* fixed an issue with the demo audio not show up on the left .
add loopRotatebadnodebalancerequested to comment explain bad node budget
added a method to convert objects toMongoType and updated related classes to utilize TypeInformation for type conversion to enhance data handling and improve type conversion functionality
apps - 4414 : show ' i ' instead of ' i ' in inputboxrenderer
simonstewart : fix sendkeytotactiveelement to always return a string
add a method to scale images into a buffered image and use it in the AddAndScaleMultiImage class to improve image processing capabilities and ensure safe scaling of images
removed duplicate extendArgumentCheck and extendWrapStore methods from DBMaker . java to streamline code by eliminating unused functionality
fix issue with shift state not be update when press ok
removed the DETECTED _ ACTIVITY constant and related functionality from multiple classes to simplify the codebase and prepare for backward compatibility with activity detection
updated import statements to reflect the new package structure for ExtensionConfig to improve organization and clarity of WebSocket - related classes
added import statement for Buildable in AaptPackageResources . java to enable the use of Buildable in the build process
added a comment to the short - circuiting comment for unused variables in multiple classes to improve code clarity and maintainability by documenting unused variable usage
updated the exception message to specify the status code for the invalid upgrade protocol to provide clearer feedback on the status of the upgrade process
update blockMode initialization in P11Cipher . java for clarity to improve code readability and maintainability
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
updated permission checks for plot ownership in Merge . java to ensure proper handling of permissions for players lacking admin commands
remove deprecate getConversationID ( ) from httpcontentresponse , httpresponse , and response . java
fix for ticket : 382 : use a url instead of a file by default
updated the ` stripQuotes ` method to use ` PlanUtils ` for stripping quoted values to streamline string handling and improve code maintainability
refactor rendering handling in DLNAResource to improve clarity and structure to enhance maintainability and allow for more flexible updating of rendering context
replaced the resolution group getResolutionRepositories ( ) and getRemoteArtifactRepositories ( ) with a new list of repository instances to ensure that the plugin manager correctly uses the resolved and remote artifact repositories
camel - 8014 fix the test error of cxfrsproducerclientfactorycachetest
fix ( bullet ) : remove misplace greek character in
added JUnit @ Ignore annotation to SessionTest . java to mark SessionTest as ignored due to frequent failures
added a new File object instantiation in the ZipFile class to enable file handling based on the provided name parameter
add trytype . handleall for backwards compatibility
made channel default constructor non - null safe . added test case .
added stack trace logging functionality to GenericDAOImpl and introduced StackTraceUtils for reflection filtering to improve debugging capabilities by providing detailed stack trace information during operations
added a test annotation to FormLoginIntegrationTests . java to ensure proper test execution for integration tests
modified unparse method calls in FunDefBase , ParenthesesFunDef , and BasicQueryTest to handle specific argument cases to ensure correct parsing behavior for single - line functions and improve test coverage
updated the GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY query to include cluster names and improved the handling of configs to enhance functionality by allowing selection of multiple configs in a cluster context
[ gr - 43663 ] ensure compatibility with jdk 11 .
refactor JsonTreeReader to enhance the validation of JSON element names and add a test for it in JsonReaderTest to improve error handling and ensure correct functionality when reading JSON objects
added support for passing additional arguments when using the internal runner to improve error handling and ensure proper execution of external test commands
added dedup methods to SolrDeleteDuplicates and updated indexSolr method signatures in SolrIndexer to improve handling of duplicate deletions and indexing paths for Solr
[ flink - 29694 ] [ example ] add planner parameter support to streamsql example
added a call to ` clearDatabase ( ) ` in ` MssqlIntegrationTest . java ` to ensure the database is cleared before each test case execution
updated progress handling to allow dynamic display of progress and added dispose method to improve resource management and ensure proper disposal of the progress indicator
added a check to ensure the parent file exists before proceeding to prevent potential errors when accessing file properties
tika - 475 -- add apis to ioutils for 2.0 - rc1 page , see bugzilla 48571
updated print statements to use new line breaks for run options , name , and exportClassPath to improve readability and maintain consistent output formatting
replaced ` Box ` with ` BlockBox ` and added getter methods for ` dotsPerPoint ` to improve type safety and provide access to the root box and dots per point
updated the CustomQueryFilterFactory to improve LDAP query handling to enhance user authentication process and ensure correct authentication behavior from custom user search queries
improve route builder to support port . fix # 483
updated the status update logic in SnmpTargetHandler and related tests to ensure accurate reporting of thing status based on initialization status to improve reliability and clarity of thing status assertions in tests
[ # 8452 ] instructor : edit session : do not allow instructors with submit privileges to edit session
added an @ Incubating annotation to AvailableSettings . java to indicate that the class is outdated and should no longer be used
refactor FileResolverImpl to improve path parsing logic and add a new WarFileResolverTest class to enhance path handling and ensure correct functionality for WAR file resolution
added inclusion of docstores in the flushing size log message to improve debugging by providing more detailed context about the flushed size
use unlocalized name , for diff . close # 264
fix typo in imageprocessor ( # 5262 )
updated locks initialization to use seconds instead of milliseconds in FeedRefreshUpdater to improve concurrency handling for better resource management
[ iotdb - 6125 ] fix first series metadata not be correctly recover in tsfile reader ( # 7252 )
[ te ] remove unused parameter from csvsaveservice . geteventfromtimestamp ( )
added preferred size configuration for the pane in NavigationShareTab . java to ensure the pane displays correctly in the user interface
replaced ` OffsetAttribute ` with ` State ` in ` BeiderMorseFilter ` and added a test for custom attributes in ` TestBeiderMorseFilter ` to enhance state management during processing and validate the functionality of the BeiderMorseFilter
[ upnp ] fix javadoc issue in UpnpAudioSinkReg and UpnpServerHandler classes
fix flash flash when hit a burst ' s position ( # 3472 )
[ flink - 24486 ] [ test ] add test for json conversion of issue .
refactor MutableContextDataSupplier class for improved readability to enhance maintainability and reduce complexity in the codebase
change exception handling from ` Exception ` to ` Throwable ` in ` CoreContainer . java ` to improve error logging by capturing a broader range of exceptions
updated the KubernetesMockServer constructor to include an HTTPS parameter to enhance security by enabling secure communication for the Kubernetes server
use the stamp of the foreigncallnode to compute the stamp of the call node .
update response status from METHOD _ NOT _ ALLOWED _ 405 to GET , POST , OPTIONS in DefaultServlet and DefaultServletTest to accurately reflect the allowed HTTP method and enhance response clarity
tika - 3827 -- use locale . us by default
refactor ShowFileRequestHandler to return responses for failed requests and add a test for handling 404 scenarios to improve error handling and coverage for file not found scenarios in the Solr server
added reflection - based try - catch blocks to handle exceptions in ReflectorClassWriter to enhance error management during reflection operations and ensure proper exception handling
added a clamp method to the Vector and Vector2 classes for clamping to provide functionality for performing mathematical operations on a given min and max values
added OAuth2 authentication handling and requested scopes management in ChainedTokenGranter . java to ensure correct user authentication when creating access tokens
updated BC _ instanceof . java file to improve code readability and maintainability
removed the setSaveFlags method call and added a Logger instance to improve logging mechanism and eliminate unnecessary state management
updated UaaUrlUtilsTest to use JUnit 5 annotations and integrated PollutionPreventionExtension to enhance test structure and maintain compatibility with updated testing framework
hhh - 14444 fix cast exception in nativequery when use scalar return type
added caching mechanism for font anti - aliasing information using WeakHashMap to improve performance by avoiding redundant calculations for previously checked fonts
fix TypedSet to use IntArrayList instead of IntBigArray and adjust blockPositionByHash accordingly
simonstewart : applying patch and fix the issue with the remotewebdriver
updated the BrokerRequestUtils class to improve request handling to enhance performance and maintainability of the broker request processing
refactor InjectorBuilderImpl to use a more descriptive map for instances based on their initial order to improve code clarity and maintainability by using a more descriptive data structure
updated ` RawTargetNodeFactory ` and ` BuildTargetToRawTargetNodeTransformer ` to use ` getBasePath ( ) ` for path resolution to improve code clarity and ensure accurate path representation for build targets
[ rocketmq - 6 ] added null check for input parameter in echekessage . getint ( )
fix possible memory leak when remove jabber connection ( connection fail )
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 to ensure consistency with data type practices
added method to retrieve all data typePhysicalVariations in multiple classes to improve type information handling during vectorization operations
fix : move everything from the zxing package to the client package .
refactor condition logic in OverviewState . java for vertical bar layout handling to improve clarity and maintainability of the overview action logic
added entity annotation import and annotation to BaseActivityEventEntity class to enable the use of entity - specific data persistence in the entity
added tracing functionality for touch intents in NavBarSwipeInteractionHandler and modified the system trace flag in TouchInteractionService to improve debugging and control over touch interactions in the application
added a new class InvalidOptions to handle Java options to provide clearer error messages for unsupported options in the javap tool
added a check to compare supported display bounds in DisplayController to ensure consistency between display state and supported bounds during display updates
refactored getClientIdAndClientSecret method into OAuth20Utils for clarity to improve code organization and promote reusability
enabled unwrapServletException by default in ErrorPageErrorHandler and added it to AsyncContextTest to improve error handling by defaulting to unwrapping the servlet exception
added a condition to set the status of the ShortcutInfo to DEFAULT to ensure correct representation of shortcut status updates
camel - 10451 : fixed seda endpoint to handle unbounded queue size .
mob - 825 : add touch event for batch update , start and end batch
added HttpClientConfiguration to ThirdEyeApplication . java to enable HTTP client management for improved request handling
added a new ` getSort ` field and modified the ` JobInstanceFetchRequest ` to include it to enhance job sorting capabilities by allowing retrieval of sorting based on specified criteria
updated the CryptoFacilitiesTradeService to return a specific currency pair from open orders instead of throwing an exception to improve error handling and provide more informative feedback on order cancellation
make sure keyboard be close when click on web in chrome
[ gr - 3555 ] memmove . memmove ( ) should be use by the c++ code .
reformatted code for better readability by adding a space before the comma in method declarations to improve code maintainability and consistency
make internal tooltip optional ( fix # 3053 )
updated DefaultDateTypeAdapter to accept a specified date style and modified related methods for better date handling to enhance flexibility in date formatting based on user - defined styles
changed the playerSet formatting from " < UID : " to " ( " ) " to ensure proper representation of the player ' s UID in the player list
added a check for empty lists and returned the current instance to ensure that the method handles empty lists gracefully without unnecessary operations
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper command exception wrapping when invocationtarget fails
modified the getLikeExpression method to accept a boolean parameter for handling regular expressions to enhance flexibility in expression evaluation based on whether the expression is like or not
added start and stop methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide functionality for starting and stopping stream suppliers
modified the runChild method to update locale settings in LuceneTestCase to ensure consistent locale handling during tests
doc : fix html5 error in the javadoc
refactor context handler initialization into a separate method ` initContextHandler ` to improve code readability and enforce type checking for ` ServletContext `
camel - 5211 : add miss test for camel - blueprint with routebuilder reference
nifi - 5836 : fix a bunch of test failure when the execution error attribute be empty
refactor the return type substitutability methods in Types . java for improved clarity and functionality to enhance code maintainability and ensure consistent type checking practices
added throttling type enum and modified processing logic based on its value to improve flexibility in throttle handling for different character types
fix spritebatch , colorbleedeffect and colorbleedeffect now work correctly when blend function change .
refactor Annotation and AnnotatedElement classes in the codebase to improve code readability and maintainability
added a new interface ` Model ` and modified ` Sheet ` and ` Workbook ` classes to implement it to improve code structure by establishing a model hierarchy for sheets
camel - 4054 : fix issue with camel - http4 use file pattern .
added ability to clear the entity manager in JpaItemWriter and JpaItemWriterBuilder classes to provide configurable behavior for entity management in item writing
added null checks for ` info ` before displaying a toast message to prevent potential ` NullPointerException ` when handling shortcuts
updated TwoDimensionalCollectionValuedMap instantiation to include a parameter to enhance functionality by allowing dynamic collection configuration
updated exchange specifications to reflect the correct host and exchange name for Wex to ensure accurate representation of the exchange being used in the application
added null checks for columnReaders and reader before processing in OrcEncodedDataConsumer and EncodedTreeReaderFactory to avoid potential NullPointerExceptions during buffer setting
added a null check for segments in SegmentInfos . java and implemented a test case in TestIndexReader . java to ensure robust error handling when no segments are found and verify that the IndexReader opens correctly after deleting a directory
upgrade to sell - 3.0 . 1 ( # 4649 )
modify the return statement to handle a negative percentValue more gracefully to ensure that the calculation does not result in negative values as expected
updated limit validation from " < 1 " to " < = 0 " in RangeInputStream . java and RangeReader . java to ensure that the value of limit is valid and prevent potential errors
camel - 19287 : camel - jbang - log event when load route from directory
make the calculation for next chunk and playlist start in period to be more accurate
refactor NumericRangeFilterBuilderTestCase and NumericRangeQueryBuilderTest to extend LuceneTestCase instead of TestCase to improve code organization and leverage LuceneTestCase for better testing support
added StatefulOperator2 to manage groupCounter during operator state updates to enhance functionality and ensure correct state updates in streaming operations
shader tiling : remove unneeded null check
remove dbexists logic , a now rely on the dependency injection for blockdb
trim whitespace from the matcher group after processing to ensure consistent formatting and avoid potential issues with leading or trailing spaces
fix for the apr connector . setasync ( false ) issue on the apr connector .
ticket # 3703 : the divider location should be update , not the new divider location .
added health check metrics and updated the health check method in the ControllerMetrics class to improve monitoring capabilities for service health checks
hide the share avatars when there be no file to do so .
mow : fix typo in mow and mow resource ( scss )
updated conditional statements from " > = " to " > = " for argument length checks to ensure correct evaluation of command - line arguments
added logging level check before executing commands in LogInterceptor to ensure commands are only executed when the logging level is FINE
replaced CountDownLatch with assertWaitUntil to validate span completion to improve reliability and readability of the event bus tracing test
removed the locale parameter from the QueryParser constructor and added a method to set the locale to streamline locale handling and improve code clarity
fix concurrentmodificationexception with fieldsetcomponent . getalltypes ( )
- fix bug in builder where it would not take into account the beta node constraint
added a new class ` OcspUnauthorized ` for handling unauthorized certificates in ` PKIXRevocationChecker ` and ` OCSPResponse ` to implement a more structured and structured way to manage OCSP unauthorized scenarios
added serverState variable and modified control flow for server failure handling to ensure proper synchronization and error management during server state transitions
expose the number of active connection in source counter so that the statistic be not miss when the source be stop
expose fielddefinitions from executionstrategy and fluent interface ( spec 0.30 , # 16 )
added a new method ` getSrcRoots ( ) ` to return a set of source root paths to improve code clarity and facilitate testing by providing access to source root paths
replaced the Writer instantiation with PrintWriter for better output handling to improve compatibility with PrintWriter for better output formatting
remove superfluous ` . tmp - ` suffix in favor of ` . tmp - `
added support for DataTable in JRubyStepDefinition to enable proper handling of DataTable in JRuby step definitions
fixed author visibility for some media renderer ( # 2596 )
fix a typo in the doc of readSentimentdataset .
enhanced error message in the FormulaParser to provide clearer context for parsing errors to improve user feedback during formula parsing errors
added methods to get and set the bind address in the WebSocketClient class and modified socket binding logic to enhance the flexibility of WebSocket connections by allowing custom bind addresses
[ java ] deleting aeron directory on close to ensure it be run before close the driver .
refactor width and height setting logic in WidgetGroup . java to simplify conditional checks to improve code readability and maintainability by reducing complexity
replace sessionFixationAttribute comparison with Boolean . valueOf method to ensure proper conversion of sessionFixationAttribute to Boolean
fix # 854 add edge option to digital channel ( # 855 )
danielwagnerhall : reinstate the backoff factor to allow for good speed up the chrome
added HTTP request route handling to ClientResponseWrapper for enhanced request processing to improve flexibility in processing requests by allowing route - specific configurations
use min _ value to remove compacted row when shouldpurgecontrol be true
updated rendering intent handling and simplified color conversion logic in ICC _ Profile and ColorConvertOp classes to improve code readability and correctness in color conversion operations
[ # 9297 ] student : contribution question : add isnotsureallowed parameter ( # 9287 )
added multiple calls to PublicMethed . waitProduceNextBlock calls in ContractInternalTransaction003 . java to ensure proper synchronization of block production and production state
[ hotfix ] [ kafka ] remove implement serializable from kafkarecord
added PGConnection support to the connection pool and created a test for PGConnection method to ensure proper handling of PGConnection connections in the data source
refactor PropertyTable and CloseIgnoringInputStream classes for improved code organization to enhance maintainability and readability of the code
changed log level from warn to info for missing token encryption secret in TokenAuthenticationHandler . java to provide clearer feedback on configuration issues related to token encryption usage
mark the Hazelcast class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
added topology management functionality to the Kerberos server action classes to ensure proper event handling during Kerberos server initialization
tika - 362 : namedlistcodec should support iterator and not tostring ( )
fix npe in migration commit when there be no member assign lost partition
added import for InclusionRule and set schema inclusion rule to " public " to ensure proper handling of schema inclusion in the example
updated the mean value from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test reflects the correct expected value
[ geot - 6548 ] fixed invalid coordinate sequence in a single - point basis of a polygon
added methods to retrieve base name and dimension count in ConstantPool . java to improve data handling and support for array - type operations
bug 57840 : add method setdebugevaluationoutputfornexteval to formulaevaluator and make previous commit happy
test : migrate test to junit 5 ( # 4531 )
remove isLiveTv from exoplayerprofile when use live tv .
added a return statement to the DynamicStyleBar class to ensure proper exit from the methods during execution
added logging statements for setting and resetting properties in the Utils class to improve traceability and debugging of repl dump operations
modify ReactiveAuthorizationManager . java by modifying method implementations and imports to enhance security features and improve access control
added support for boolean type in MethodEmitter to enhance type handling for better flexibility in object serialization
restructure stackframenuller so that it can be reuse by other class .
chore : integrate new gapic - generator - java and rules _ gapic ( # 477 )
add a test to ensure that caffeinecacheconfiguration respect transaction aware cache
added a method to calculate the bounding box for a mesh to improve geometric bounding box calculation for better rendering performance
added a new TargetHashFunction enum and modified hashing logic to utilize it to improve flexibility in hashing by allowing users to choose between sha - 1 and murmur hash
refactor DefaultConfigurationProperties class for improved clarity to enhance maintainability and readability of the configuration logic
updated highlight color settings and added arrow drawing functionality in ListViewMultiChartActivity and BarChart to enhance visual clarity and flexibility in chart appearance
added a mapping for temporaryPg to sgPathPlanMap in ClusterPlanRouter . java to improve the management of group plan paths in the cluster plan routing
( chore ) camel - infinispan : fix incorrect case number in camel - infinispan
added file locking mechanism and refactored artifact fetching logic in MavenArtifactFetcher and MavenDependencyResolver to improve thread safety during artifact fetching and ensure proper locking mechanism
updated fragmentShader string to include conditional compilation for GL _ ES to ensure compatibility with OpenGL ES by properly defining shader properties
hbase - 27257 fix concurrentmodificationexception in rsgroupinfo ( # 4257 )
added a try - catch block to load the JspPage class and changed log level from warn to debug if no TLDProcessor is configured to improve error handling and reduce log verbosity for better debugging
added a new test method and modified version handling in CustomAnalyzer to improve testing accuracy and support for version - aware filters
add unit test to validate the retrieval of package archive information to ensure that the application correctly retrieves and updates the package archive information
replaced direct method invocation with MethodUtil . invoke for consistency and access control to enhance method access safety by utilizing ReflectUtil for package access checks
added new import statements for ProjectConfigurationStartEvent and ProjectConfigurationStartEvent , and modified progress listener initialization to enhance progress tracking functionality and provide clearer event types
removed synchronization block around synchronization to improve performance and reduce unnecessary synchronization overhead
only throw poolinitializationexception if initializationfailtimeout > = 0 .
removed the timeout parameter from the getResult method and added an error method in the HttpResponse to simplify method interface and provide an error response handling mechanism
changed isNative variable to transient and updated related method entry handling to ensure thread safety by preventing unnecessary serialization
[ java ] fix typo in centrypointcallstubmethod
rename rule enable handler to ruleenablementactionhandler ( # 2278 )
fix the order of access modifier in javadoc and a few typo .
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity on credential handling and enhance request logging for better debugging
[ flink - 24842 ] [ test ] fixed typo in kafka connector test
added a null check for the registrant repository before verifying ownership to improve error handling and provide clearer feedback when the registrant repository is not found
added support for parsing font names with extensions . otf and . OTF in addition to . TTC to improve compatibility for various font file formats
updated the logic for determining match type to use a fully qualified argument type to improve accuracy in determining match type for better annotation matching
minor change ( change to " SEVERE " ) to " SEVERE " to clarify the purpose of the feature
updated debug logging statements to check if debug level is enabled before logging messages to improve performance and avoid unnecessary string concatenation when debug logging is not enabled
replace list of includes with instance and excludes to ensure that only specific files are included based on the number of entries
added methods to handle home intent navigation to ensure consistent behavior when navigating to the default screen
reduce the maximum bitrate to 30 for an o ( n ) stream from 110 to 30
simplified the getOptions method to return a collection of options from the CommandLineParser to improve performance by reducing unnecessary options retrieval
trim whitespace from the description before returning it to ensure consistent and clean data handling by removing leading and trailing spaces
replaced the file path construction with a direct string reference to simplify the filename format for improved readability and maintainability
remove redundant pid from log message ( # 1043 )
added a method to retrieve loaded music and sound in MusicLoader and SoundLoader classes to provide access to these methods for other classes
updated import statements for clarity and consistency to ensure proper type casting for better code readability and maintainability
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording during tests for better debugging and analysis
fix # 1392 : disable lr pause button when not need
replaced the ` accountsPreferenceCategory ` variable with a ` mAccountsPrefCategory ` variable for better encapsulation to improve code readability and maintainability by using instance variables instead of local variables
[ core ] send available presence immediately after connect to server .
updated StringBuilder initialization in ObjectInputStream to use a calculated initial capacity based on utflen to optimize memory usage by initializing StringBuilder with an appropriate capacity when possible
disable statsd reporting in WebEndpointsAutoConfigurationIntegrationTests to improve performance by reducing unnecessary statistics reporting during tests
updated the InterruptedException class to improve thread handling to enhance the reliability of thread interruption management
refactor ServiceTicket class to improve method organization to enhance code readability and maintainability
refactored SSL handling logic in ConnectionCheckOperation . java to improve clarity and simplify SSL connection logic to enhance the maintainability of the SSL connection process
int - 3290 add additional check for map type when determine if a value can be convert to string
add an additional condition to the test to ensure that the test only execute when the indexable object is of type IndexableDSpaceObject and adjust the status code accordingly
fix launcher crash when try to launch the authenticatoractivity
refactor : remove deprecate method from patternparameterconfigurator ( # 2892 )
modify the ` beginDraggingWidget ` method to return a boolean and update its implementation to handle null cases to improve error handling when the widget ' s drawable is not available
lucene - 4488 : add comment relate to this class for now
added a null check for the root variable and collected all components in the tabbed pane to ensure safe handling of null root and avoid potential NullPointerExceptions
tagger : write confusion matrix in debug mode
bug 62155 - remove redundant check of result . isignore ( ) when calculate for sampling result
added unit tests for connected device management in ShadowBluetoothHeadsetTest . java to ensure correct functionality of Bluetooth device handling in the shadow implementation
make propertybindingsupporttest more intuitive
added " clone " to the objectMethods set and introduced a final final method check to improve object method handling to prevent unnecessary property loading for finalize methods
added null checks for counters object and warning log messages in IntegrationTestBigLinkedList . java to clarify potential null pointer exceptions and improve logging clarity
make sure to return a reply when getinstanceinfo ( ) be not unsupported .
updated the setRegisteredServiceFilter method to include a matching check for the registered service to ensure that the registered service is validated for both SAML - registered and SAML - registered services
added a null check for getActivity ( ) before running the Runnable in PhotoFragment . java to prevent potential NullPointerException when accessing getActivity ( )
fix style issue with log name
added a stringType property and its getter / setter methods to DatabaseAdaptor and modified its visibility in JDBCSessionDataStore to allow external configuration of the string type used in database operations
updated test cases to use " suggested _ category " instead of " language : english " and added exception handling for the addDoc method to improve test accuracy and reliability while managing potential exceptions during updates
hive - 4324 : avoid clash with current thread name if session be drop ( jimmy , review by siddharth seth )
refactor TaskletAdapter class for improved readability to enhance maintainability and reduce complexity in the codebase
drools - 4821 dmnruntime . evaluateall ( ) return null if negative ( # 2867 )
[ macos ] make splash screen texture map create before move on any system
added a tooltip text to the showCGCP checkbox to enhance user experience by providing context - sensitive help
replaced calls to ` getTypes ( ) . add ( e ) ` and ` InterfaceFactory . java ` with ` addType ( i ) ` in ` EnumFactory . java ` and added a new test method in ` TypeTest . java ` to improve code clarity and ensure the correct type handling is tested
add text and mnemonic to hotreloadflutterapp ( # 4269 )
fix for # 1394 spreadsheet label : use default template
fix bug in bind constant bRIGHTNESS _ FACTOR ( # 7421 )
add ` ` context ' ' and ` ` date ' ' to start with ` ` currentid ' '
added an ` isAdmin ` parameter to the ` createUser ` method and implemented an ` listUsers ` and ` userIsAdmin ` methods to enhance user management by allowing admin users to be listing users directly
added null checks for ` indexedWriteMethod ` and ` writeMethod ` in ` IndexedPropertyDescriptor ` , ` Introspector ` , and ` PropertyDescriptor ` classes , and created a test class for verifying behavior to ensure that void return types are properly handled and validated in the introspection process
fix useless list creation of timer and timer ( # 2599 )
added a new ContextHandler interface and rearranged method signatures in Context . java to improve clarity and consistency in task handling within the application
fix miss capability object for bukkit compatibility
[ scb - 944 ] fix a unit test error of lifecycleutilstest
refactor contract creation logic to validate both CreateSmartContract and TriggerSmartContract types to ensure transactions are only created with existing smart contracts and improve error handling during contract creation
added package - info . java files for multiple packages to improve organization and clarity of the dtfj package structure
lucene - 3990 : fix deadlock in docswriterdeletequeue
updated JavadocTool to handle duplicate JavaFileObjects using a HashSet to improve efficiency by preventing unnecessary parsing of duplicate files
change the default value of STRIP _ IPV6 from true to false and adjust substring logic accordingly to ensure accurate parsing of IPv6 address details based on updated configuration
add a new parameter to the LoginServerTokenEndpointFilter and update its constructor to utilize a list of parameters to enhance flexibility in handling user credentials during login
added a key for language configuration and updated language checks in the LanguageFactory and CPPParserTokenManager classes to ensure correct handling of specific language keys during language parsing
replaced instances of ` MoreFutures ` with a new class ` MoreExecutors ` and updated the thread pool executor implementation to improve code organization and encapsulate the thread pool creation logic
added caching headers and expiration settings to the FormAuthenticator response to enhance security and control over caching behavior in the application
added exception message to log message when an error saying fails
replaced allHSSFUtilTests with individual TestSuite and added new test classes for improved organization to enhance test coverage and ensure compatibility with the latest HSSF library structure
updated FetchHTTP2Test and FetchHTTPTestBase classes to improve code organization and maintainability
added null check for the output before retrieving the class directory to avoid potential NullPointerExceptions when the output is null
added access control priorities for resource processing in Java2DRenderer to ensure proper access control behavior during resource loading
skip test on window because it fail
modified variable and method visibility and introduced CPU time testing logic to improve thread CPU time validation and enhance error handling
added a check for empty whitespace before verifying whitespace in TabsAndIndentsVisitor to ensure that comments are not present when the space ' s comments are present
updated assertions in TestTriggerIntegration to allow values of 100.0 instead of 5.0 to improve accuracy of rate comparisons in tests
updated equality checks to be case - insensitive in DatabaseChangeLog , RanChangeSetFilter , and NotRanChangeSetFilter to ensure case - insensitive comparison for author and id comparisons
added a method ` getString ` to retrieve a string value from a map to improve functionality by allowing retrieval of default values from the map
updated date formatting logic to support locale - specific date representations to ensure consistent date and time display across different locales
nifi - 1204 make sure to return an empty list when there be no active connection in the standardprocesssession
refactor keyboard handling in DetailFragment for improved readability and flow to streamline focus request logic for better maintainability and clarity
another attempt at fix the classpath issue on window for tools . jar # 718
make solve ( ) method synchronize ( it use only one )
added import statement for Message class in GenericMessage . java to utilize Message functionalities in the messaging package
refactor SQL query construction in PostgresConnector and MapReduceJobHistoryUpdater for improved query handling to enhance code readability and maintainability by reducing duplication
update file filtering logic in AquaFileChooserUI to ensure selected filter is valid to improve user experience by preventing invalid file filter selections
[ rocketmq - core ] fix synchronization issue with p2p transport
updated the ` toFormulaString ` method to return a boolean value instead of a string representation to ensure accurate string representation of boolean values in the ArrayPtg class
fix : remove deprecate method after upgrade to jdk 19 ( # 2950 )
updated type variable handling and translation logic in Java2TypeScriptTranslator . java to improve clarity and correctness of final variable assignments for anonymous and non - class contexts
added support for PostgreSQL sequence creation in the AddAutoIncrementChange class to enable users to update auto - increment columns programmatically
updated byte manipulation and comparison logic in DataInput . java to ensure correct handling of byte values and improve read performance
[ ci ] fix imageparsertest after image parsing change
updated parent assignment to ensure proper parent component is used to improve data integrity by preventing potential null reference issues
format code for improved readability and maintainability to enhance code clarity and maintainability
replace engine _ finish with engine _ free in NativeCryptoTest . java and add ENGINE _ init method call to ensure proper resource management and initialization for the engine
add for iterlistener . iteration ( ) ; issue # 259
fixed memory leak in fileupload / formdatahttpcontentprocessor ( # 7590 )
added a call to deleteLogs ( ) in TestRecovery . java to ensure that logs are properly cleared during the recovery process
modified the URL loading mechanism in BrowserActivity to handle " twitter : / / " URL to enable redirection to the Twitter service directly from the URL
[ test ] finish first run of DeploymentGroupTest . java on circleci
api : fix visibilitycontroller label filter ( # 2321 )
increase maxautattempts in resttemplateretrytests from 0 to 25
remove debug print statement from TranslatorSupportTest . java and add @ Override annotations in StandardTypeMapperComponent . java to improve code clarity and ensure proper method overriding
added support for parsing fraction resources in various classes to enhance resource handling capabilities and facilitate fractional values in the application
removed redundant check for file writing in BasicFrame . java to streamline the code logic for better readability and performance
retrieve tagGroupId and artifactId from the resolution result before finding the newer dependency version to ensure that the correct value is retrieved and prevent potential null pointer exceptions
hbase - 19099 ( addendum ) do n ' t retry table quota in namespace ( sergey shelukhin )
lucene - 9338 : fix javadoc error in module org . postgresql . sspi . tokenizer
8274245 : [ testbug ] jdk / jfr / lib / fuzz / testfuzzpreloop . java have wrong @ bug id
add a check to convert negative value f0 to 0.0 in HTSVocoder . java to ensure f0 is always positive for consistent value representation
updated logging message to retrieve catalog names and added null checks for foreign key columns in SchemaRetriever and TableRetriever to improve logging clarity and ensure safe access to foreign key columns
- remove clearencaps on request . setencoder , and move away from inputbuffer . clearencaps ( ) to inputbuffer . getencoderas ( charset ) .
added support for allowing empty pages in LawnchairPreferences to enhance user experience by preventing unnecessary processing when no pages are available
added deprecation warning for cucumber - needle in favor of cucumber - cdi2 or cucumber - jakarta - cdi
updated theme handling and runtime logic in ShadowThemeTest , ShadowArscAssetManager , and ShadowVMRuntime classes to improve consistency and simplify theme management in the codebase
updated error messages in VerifyFast . java to use ` Arrays . toString ( ) ` for array conversion to improve clarity and debugging of field mismatch messages in tests
# 2401 - remove @ dbmigration annotation for not use with h2
added additional checks for IdentNode in CodeGenerator and made getter / setter methods public in ScriptObject to improve functionality and accessibility of prototype property handling in scripts
modified the shuffle method to include a random seed parameter to improve variability in random number generation for reproducibility
updated the userName handling in UsersAndGroupsSearchProvider to use a specific string resource for remote clarification to improve user experience by providing a more descriptive display for the share user
updated path formatting in CookieRetrievingCookieGenerator to ensure that a default path is provided to avoid null pointer exceptions and improve robustness
remove redundant closing braces in Jvm * classes to improve code readability and consistency
do n ' t set backup if total _ backup _ count be miss
pdfbox - 3906 : do n ' t compare down subfolders if the subfolders flag be false
stop the windowed / fullscreen change dropdown from break the
fix checkstyle issue in util / soundutil . java ( # 777 )
add a new method to retrieve the Apple Cxx platform flavor domain and refactor related logic to improve code maintainability and clarity by encapsulating the retrieval of flavor domains
add test for show ololo view with tab - separated name and type
corrected the method name from onConnect to onAccept in ServerSessionListener and AbstractHTTP2ServerConnectionFactory to improve clarity and consistency in session handling
fix a typo in the pptbtreebankcorrector javadoc .
8020675 : add a test to verify that logger . getlogger & logmanager . getlogmanager do n ' t throw npe when system . out = = null
added a data field using ConcurrentHashMap in PathSharingContext and updated related imports and methods in ActionDirectory , ScriptedDecideRule , and ScriptedDecideRule classes to improve data management and ensure consistent access to appCtx across the engine
[ gr - 21196 ] modification to the test suite to support compilation during test .
added support for next value syntax " FOR " using a case - insensitive approach to enhance flexibility in next value expressions and improve code clarity
add more information to unsupportedfeatureexception message
modified the expiration and removal logic in BoundedLocalCache . java and added a test for clearing pending writes in BoundedLocalCacheTest . java to improve cache performance and ensure proper cleanup of pending writes
added exchange - specific parameters for Leverage _ Level in QuoineExchange and implemented order direction handling in QuoineNewMarginOrderRequest to enable dynamic adjustment of margin order based on user preferences for improved performance
added bound initialization method and a new test class for handling properties to ensure proper initialization of beans and validate listener functionality
replaced the ` failsafeWidth ` and ` failsafeHeight ` methods with an ` SetDisplayModeCallback ` interface in ` LwjglGraphics . java ` to simplify display mode configuration handling and improve error reporting
fix issue with tabs be remove in the wrong place when a tool be move .
adjust wrap width calculation in LineCell and update wrapWidth usage in StyledTextAreaSkin to improve layout responsiveness and ensure proper handling of wrapping
fix typo in an error message from " argomento del parser non de deve essere nullo . " to " argomento del parser non decallo . "
use linkedhashmap in custompreconditionwrapper for deterministic iteration
fix string concatenation in c++ : string . format ( ) should use string . format ( ) instead of string concatenation
removed unnecessary namespaceContext usage in StaxXmlPullParser . java to simplify the code and improve readability
added support for nested joins configuration in TestBase and TestLimit classes to enhance test configuration flexibility and eliminate unnecessary conditional checks
cloudstack - 5938 : allow root admin only to be listusergroups
added caching for ` JavacFileManager ` and modified constructor to accept a cursor parameter in ` CompletionProvider ` to ensure proper caching of Java files and to enable the association with cursor positions during compilation
added configuration variables for Hive configuration and authorization manager to ensure proper initialization for Hive security settings and authorization handling
[ beam - 1348 ] use hamcrest assertion instead of junit in xmliotest ( # 13807 )
add the nullable source to the handler for text / metadatarenderer and textrenderer .
fix ( ilp ) : fix off - by - one error when read symbol from ilp ( # 3997 )
removed print statements for termFilter and otherTermFilter to clean up the test output and reduce unnecessary console output
removed the Reflection class and TypeConverters class from the jooby . internal package to streamline the codebase by eliminating unnecessary reflection - related functionality
refactor ThreadlessExecutor to use boolean methods for finished , waiting , and update test cases accordingly to improve code readability and maintainability by encapsulating state management
removed unnecessary try - catch block in DateTimeFormatter . java and added a test for null handling in TestDateTimeParsing . java to improve code clarity and ensure proper error handling during date formatting
[ flink - 2498 ] [ core ] rename chunk _ length to chunk _ length _ kb for consistency
added a new class T7034495 with generic interfaces and handle wildcard cases to prevent crash related to wildcard types as referenced in issue # 7034495
fix possible infinite loop issue with key input validation
updated conditional checks in TransclusionDecideRule for handling specific HOP characters to ensure correct behavior when encountering certain patterns in the serialization process
drop version print out from micronaut . java ( # 8998 )
added assertions to verify the correctness of name handling in the Area3DPtg formula to ensure proper functionality and accuracy of name definitions in the excel framework
modify MindIconFactory to conditionally include a slash in the name when retrieving the description to ensure that the description is valid and simplify the icon creation process
updated onHomeIntent method to accept internalStateHandled parameter to enable handling of home intent based on the state of the internal state
replaced direct usage of ` getPreferDependencyTree ( ) . orElse ( false ) ` with a variable ` preferDependencyTree ` to improve code readability and maintainability by reducing redundant calls
implement showDetails method across multiple activities to dynamically display file details based on the active tab index to improve user experience by allowing dynamic tab navigation during file operations
removed the ` $ apply ` method and related constants from multiple Java files to standardize function naming conventions and improve code readability
added randomization logic to the MinimalEncoder and updated test assertions in HighLevelEncodeTestCase to improve performance by ensuring variables are dynamically generated based on symbol size
updated the formatting of the conditional statements in SourceBuilder . java to include additional parameters to enhance the output by separating headers and parameters for better readability
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the UI reflects the updated data state
removed the method setDefaultWALSyncMode from ShadowSQLiteConnection . java to simplify the class and avoid unnecessary synchronization behavior
update type checking in RemoveJavaDependenciesAdapter and add assertions in Collections to enhance type safety and ensure correct handling of specific expression types
remove unused method from defaults3crtasyncclient
updated dudPasswordTest messages to reference " corrupted stream - out of bounds length " to improve clarity and accuracy of the test cases
add more information when this test fail on jenkins
make sure if ( x , y ) be always the same if ( x , y ) in the graphbuilding phase
mow - 399 fix for npe on click
refactor SQLXML class for improved readability to enhance maintainability and ease of understanding for future developers
updated the getOrderBook method to accept a limit parameter and modified related calls to allow for limit - based order book retrieval in the YoBit market data service
8300688 : change GotWrongOOMEException to HeapOOMEException across multiple files to improve exception handling clarity and organization
nifi - 1990 - ensure streamreadconstraints be available for the json flow as well .
updated the method for retrieving the engines string and adjusted the lock acquisition to ensure safer retrieval of engine configuration and prevent potential null pointer exceptions
updated method signatures and class definitions in TimerWheel and TimerWheelTest to improve clarity and consistency in the implementation of the TimerWheel iterator
1 . add error message if we ca n ' t generate a bug annotation
[ flink - 11935 ] [ test ] increase timeout in localchunkprovidertest
hide the uncomplete checklist menu item instead of the general menu to improve user experience by preventing unnecessary UI elements
refactor DefaultResultSetHandler to resolve nested result maps more effectively and add a new Contract class to improve result handling and ensure proper mapping functionality for nested constructors
refactor conditional checks for handling null defaultHome and unregistering the receiver to improve null safety and correctly manage receiver registration
added VertxGen annotation to PumpImpl . java to enable compilation for Vert . x code generation
removed unnecessary type casting when sending file operations to simplify code for improved readability and maintainability
remove leading space from token in configattributeeditor ( remus rusanu review by peter vary )
rename classes and classes related to auxiliary management to improve clarity and maintain consistency in naming conventions
[ gr - 39963 ] fix lazyloaders for jdk9 +
updated the condition to determine the relation type based on the string being used to ensure correct identification of the relationship between " SYSTEM TABLE " and " SYSTEM TABLE "
chore : [ cloudstack - service - api ] update error - prone to 2.15 . 0 ( # 825 )
updated the position of the RQST field in ThriftHiveMetastore . java and modified exception handling in HiveMetaStore . java to improve code clarity and error management for better debugging
added a new module - info . java file for the core module to define module dependencies and dependencies for better encapsulation and modularization
added handling for flushing and processing in SslConnection . java to improve output management during SSL connection handling
updated Log4j2LogDelegateFactory to return true when the logger is not available and improved logger initialization logic to enhance the reliability of lazy initialization and provide a clearer error handling mechanism
modified the execution environment and test logic for server and server VMs in various test files to ensure tests accurately reflect server VM availability for improved reliability
renamed and modified related MongoDB operations classes for consistency to improve clarity and maintainability of the codebase
added " org . postgresql . ssl . LibPQFactory " to the PGProperty enumeration to support secure communication in the PostgreSQL SSL context
disable this test for now ( see also https : / / issues . apache . org / jira / browse / amq - 3670 )
sorted the keys used in the theme processing in EditableResources . java to ensure consistent ordering of theme keys for improved user experience
added a new class OSvTerminal and modified TerminalFactory to support OSV to enhance terminal functionality to support OSV environments
added support for both . gs and . gr files file extensions in the ClassType class to ensure proper handling of additional file formats for gs files
replaced HashMap with TreeMap for combinedVectors to ensure consistent iteration order of vectors in the test execution
updated loop condition to include a check for both names and values in XPathEntityProcessor . java to ensure that the loop does not exceed the intended size of the names collection
updated WebSocketPolicy implementation with new configuration settings to improve flexibility and performance of WebSocket connections
updated variable names and methods in ShadowTelephonyManager , ShadowWifiManager , and WifiManagerTest to non - static to improve encapsulation and allow for easier reference to instance variables
add the method resolvemessage to it ' s own implementation , and add some javadocs .
fix generic for java 9 compatibility
added a new LoggingAuditService class for logging user authentication events to provide structured logging for better debugging and monitoring during audit processes
added nullability annotations to the method parameters and improved validation logic for temperature values to enhance robustness by preventing null pointer exceptions and ensuring valid temperature range
do n ' t generate bean definition for non - abstract bean . fix # 2742
camel - 588 : http consumer should support use proxyhost option for http proxy . thanks to matthias humbert for reporting .
nifi - 7219 : bump bump max _ encoding _ version to 1.2 . use version 1.4 .
added a call to jdkSerialFilter in System . java to utilize the JDK serial filter for improved functionality
camel - 6518 : improve log for when to reduce object pool size for camel
replaced the ` forceFinishedScroller ( true ) ` method with ` forceFinishScroller ( ) ` in multiple animation classes to simplify method signature and improve code readability
fix the problem that check whether a realtime table config be pass in ( # 4388 )
added error handling methods in ValidationReport , DisallowValidator , RefValidator , and associated tests to improve the validation process by providing clearer error reporting and allowing for better reporting of validation failures
refactor inline QSB handling to improve clarity and maintainability to enhance the logic for determining display options based on device profiles
updated createClassPath method to utilize URLDecoder and improved charset handling to ensure proper URL encoding and enhance robustness when processing paths
updated regular expressions in TransformSteps . java to allow for partial matches on method parameters to enhance flexibility in input handling for method parameter matching
added null checks for the ' retinaProp ' variable and modified fillRect method to handle null images to improve robustness by avoiding potential NullPointerExceptions when ' image ' is null
make wait for external node timeout configurable , rather than hardcoded value
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
fix # 301 : set default image url for environments
- remove a few unnecessary garbage collection statement from the test .
renamed classes related to answers and InvocationOnMock for consistency to improve code clarity and maintainability
updated the method ` createHardLink ` to ` copyFile ` and added error logging for directory and file existence to improve code maintainability and provide clearer error handling during file copying operations
rename ` appendToDescription ` method to ` getDescription ` in ` AsyncOperationDocProvider ` and ` SyncOperationDocProvider ` , and modify its implementation in ` SyncDocProvider ` to improve consistency and clarity in description handling for operations
move engine out of onnxruntime for functioninfo to be deterministic ( # 1975 )
added a check to ensure the XML is an instance of Xml before processing to prevent potential null pointer exceptions when handling XML elements
refactor test classes to use JUnit 4 annotations instead of InstrumentationTestCase to improve compatibility with newer Android testing framework
removed conditional checks for frontier configuration in CommonConfig . java to streamline rule addition and eliminate unnecessary complexity in the configuration
changed the access modifier of the setupData ( ) method from public to private and added a static block to ensure the setupData ( ) method is called only once during tests
rename variable ` autocommit ` to ` runInTransaction ` in ` ChangeSet . java ` and update related references to improve clarity regarding the purpose of the variable in transaction handling
[ 3.0 ] do n ' t close the deframer when there be no listener ( # 9904 )
updated URL paths in JobManagerOptions and RestartStrategyOptions to ensure proper documentation formatting to ensure accurate references in the documentation for better clarity and maintainability
added a new test method ` testIssue154 ` to ` SelectTest . java ` to verify SQL parsing and deparsing to ensure correct handling of SQL syntax and improve test coverage
modified Common . java files to enhance functionality to improve code efficiency and maintainability
refactor Launchable to use try - with - resources for better resource management to improve code reliability and isolate context layer handling
refactor StreamExecDeduplicate class for improved code clarity to enhance maintainability and readability of the code
add warn log when send kafka message to topic ( # 5320 )
dataes - 987 - fix compile with spring data
make sure setcoord ( ) return true for setcoordinate ( ) in spatial
add a scroll listener to the keyboard if it reach a single tap gesture . issue # 234
mahout - 1371 fix compareto for greek in estimator .
updated import paths for ScenarioScoped to reference the new package structure to ensure compatibility with the new package structure in the io . cucumber . core . runtime
updated method calls in StatsLogCompatManager to retrieve folder icon properties to enhance clarity and functionality by accessing the correct attributes of the folder icon
updated the method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure consistency in accessing the server naming convention
8152789 : c2 : assert ( b - > is _ pointer & & b - > is _ pointer & & b - > is _ pointer & & b - > is _ pointer ) fail : miss some predicate
added a setter method for the handler and modified equals / hashCode methods for improved readability and functionality to enhance code maintainability and ensure proper handling of view model comparisons
added a new ` StringResultConverter ` class and refactored several files to utilize it for string conversion to improve code organization and maintainability by separating string result conversion logic
camel - 19751 : disable camel - test due to unstable test
inverted the condition checking for object waiting in JansiWinSysTerminal . java to ensure correct behavior when waiting for a single object execution
added null checks for buffer capacity in setInBuffer method and updated method name for clarity to improve buffer handling robustness and maintain consistent method naming conventions
update assertion to use File . separator for data path to ensure compatibility with file path handling across different operating systems
[ grid ] add support for macos 10.15
replace ` lockFile ` with ` lockName ` and update related references to improve clarity in representing the lock ' s name instead of a file reference
changed the icon retrieval method from appIcon to allApps in Overview . java to ensure the correct view is visible for all apps in the user interface
replaced ` Invocable . InvocationType ` with ` ClientDatagramEndPoint . this ` in the ` getInvocationType ` method to improve code readability and maintainability by standardizing invocation type references
swapped the order of execution IDs in the GET _ STEP _ EXECUTIONS query to ensure the correct execution order is used for querying step executions
modify button return value and update event assignment logic in LwjglInput . java to improve handling of unknown buttons by ignoring unknown ones
add the ability to validate the reject response on claimedtasks
refactor logger usage to use a static final logger instance in OpenIdServiceResponseBuilder and GoogleAccountsServiceResponseBuilder to improve consistency and maintainability by standardizing logging approach across response builders
modified the time - based logic in ` SsoAccessTokenProvider ` and updated test method visibility in ` SsoAccessTokenProviderTest ` to ensure correct expiration handling and improve test coverage for token file expiration logic
[ geos - 8902 ] skip test that fail on macos
add new monitoring request and sample code for graalvm module ( # 3872 )
refactor the order of conditional checks in the JFrame class regarding the default close operation to ensure that the exit operation consistently triggers the expected behavior during the close operation
fix potential npe in LibraryScanner . java when no medium database is available
refactor SuggestComponent to use solrMetricsContext instead of metricsContext directly to improve metrics handling by using the superclass ' s metricsContext
adjust the footer generation logic in OCFileListFragment for better folder representation to improve clarity and user experience by providing appropriate file and folder counts
use resourcehelperkeypairprovider . loadkeys ( ) instead of array .
updated SourceVersion . java with new import statements to improve code clarity and maintainability
add a new test class ThreadFactoryTest to validate thread creation and handling to ensure proper functionality and error handling of threads in the ThreadFactory using MyThreadGroup
updated lockPeriod calculation to use a dynamic properties store and adjusted expiration time logic to improve flexibility in handling lock period based on dynamic properties
initialize TicketModel in EditTicketPage . java to create a new ticket model for future ticket management
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the dimiss apps feature for better user experience
updated constructors in multiple assertion classes to accept a Class parameter for improved type safety to ensure correct type handling and prevent potential ClassCastExceptions
added support for quoting dialogs in the TweetActivity to enhance user experience by enabling quote functionality in the menu
fix a race condition when start jmx
renamed ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and updated related methods to enhance clarity and functionality of audio playback handling
added a conditional check before offering failure and closing the consumer in ServerHTTP2StreamEndPoint . java to ensure that failover handling is only triggered when a result is
updated German and French error messages in XSLTErrorResources to improve clarity and accuracy of error messages in localization files
[ hotfix ] annotate checkpointscleaner with @
updated subscribe / subscribe methods from ` Subscription ` to ` Subscriber ` across multiple classes to improve code consistency and support unsubscribed subscribers in the adapter
refactor code for creating the components . yml file within a try - catch block to improve clarity and maintainability of error handling related to component configuration
hive - 26044 : enable hive . resultset . use . unique . column . names by default ( ashutosh chauhan via thejas nair )
small refactoring . use the input field in the voice selection code .
added validation to check if a session is invalid before proceeding to ensure that an invalid session cannot be accessed , improving error handling
hhh - 8515 - refactor exceptionhelper so that it ' s no longer use
fix securerandom for x25519 domain . relate to github # 1577
added a codec using Lucene41PostingsFormat to TestBlockPostingsFormat3 to ensure compatibility with Lucene41PostingsFormat for improved testing accuracy
[ hotfix ] [ checkpointing ] log empty header from checkpointrangeheaders
add use of oaep and rsa / ecb / oaeppadding to provide good support for sunjce ( relate to github # 1277 )
updated architecture references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple files to ensure compatibility with macOS architecture
douniaberrada : fix error handle for securityexceptions .
modify conditional logic to return values only for UNIX OS in AbstractTest . java to ensure correct processing of UNIX - specific data structures
avro - 2739 : fix flaky test : retry send file to original file ( # 3233 )
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory freeing functionality to improve memory efficiency and ensure better memory management
use pipe download by default ( # 637 )
modified the calendar DST offset handling in SimpleDateFormat and added a new test class Bug7130335 for date formatting to ensure correct date handling based on the timezone and verify the correct time zone behavior
refactor variables in AllAppsView . java to use local definitions instead of accessing mRollo . mState directly to improve code readability and reduce repeated accesses to object properties
cloudstack - 3737 : fix npe in listvolumes command - when vr be in stopped state
updated StringBuffer . java to improve performance to optimize string manipulation for better efficiency
added a line to set the rule UID in RuleResource . java to properly associate the rule with the corresponding UID
fixed an issue with npe when unsubscribing from registry ( # 4467 )
add a property to force pretty print formatting to jolttransformjson ( # 4197 )
make access _ table public for use in instrumentBranchesphase
updated error messages in DataSourceInitializer and DataSourceInitializerInvokerTests to provide clearer context for missing resources to improve clarity and specificity of error reporting
make sure we throw an ioexception when an error occur during the XMPP transport run .
rename multiple Java classes related to event management to improve clarity and maintain consistency in naming conventions
added a new variable ` effectiveClusterVersion ` and ` isUpgradeSuspended ` to method calls to improve handling of upgrade suspension state in the cluster
simonstewart : after a code grant , the code be copyright the sfc and the selenium committers . start to update the copyright header
added a final List < Field > named ` wfields ` to the Resolver class to improve code clarity and reduce unnecessary variable declaration
added a constructor to OAuthProperties that initializes encryption and signing properties to initialize the security settings for OAuth configurations
hbase - 16693 fix check for column family ( addendum )
remove the restriction of allowedresourcealiaschecker that be accidentally enable in test .
updated serialization methods in ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info classes to improve consistency and maintainability of the serialization framework
[ java ] allow to reset cluster ' s idle strategy so that a single idle can be reuse .
updated the writer initialization in ChunkedWriter . java to ensure proper tracking of the current chunk ID during writer creation
added a new class AbstractJobExecutor for executing job executions to provide a base class for job execution in batch processing
refactor replay method to assign a variable before returning to improve code clarity and maintainability
renamed ` hugeStaticBase ` to ` staticBase ` for consistency in naming conventions to improve code readability and maintainability by using a consistent naming convention
return empty publishers list when no discovery be available ( # 6353 )
replaced ` Float . floatToIntBits ( ) ` with ` SecureRandom . nextInt ( ) ` for hashSalt in DB . java to ensure hashSalt remains within the valid range and avoid collision attack
introduced concurrency in runtimecompilationfeature to diagnose problem with permanent bailouts
updated calculations for ` currentStart ` and ` baselineStart ` to include aggregation time milliseconds to ensure accurate time alignment during time comparison
added abstract method handling and corresponding tests in CallRealMethods and CreatingMocksWithConstructorTest to enhance functionality to support mock interactions with abstract methods in mock creation
refactor checkPackageAccess methods to accept Class instead of String and update its visibility to improve type safety and encapsulation by using the class context directly
updated ContextPathPluginTest to extend AbstractPluginDataInit and added new error configuration setup methods to enhance test structure and improve error handling for plugin initialization
fix bug # 203991 - do n ' t update the table model when update the contribution
added handling for " has - touch - interaction - service " requests in multiple test handlers to improve testing capabilities by correctly reflecting the presence of touch interaction service
removed unnecessary try - catch block around action listener assignment in ConnectAction . java to simplify code structure and improve readability by eliminating unnecessary exception handling
updated data structures and methods to use ` BuildTarget ` instead of ` String ` to improve type safety and ensure consistency in handling build targets
added three new classes : ArrayHelper , Asserts , BigInteger , BigInteger , and Objects , to the internal package to organize and manage internal components effectively within the package
added handling for the HOME and END commands in the Less . java file to improve input processing for home and end operations in the user interface
removed unnecessary synchronization around the retrieval of connected plots to simplify the code and improve performance by eliminating redundant synchronization
refactor Utilities . java to simplify intent creation and selection logic to improve code readability and maintainability by consolidating repeated logic
modified the constructor visibility of the Roster class to ensure encapsulation by restricting it to the class level
add basicconstraints to trust anchor to avoid certpath issue .
added a test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to ensure proper handling of transformation offsets and skip failing due to incorrect transform offsets
replaced conditional assignment of precisionStep in TrieDateField and TrieField classes to streamline code and improve readability by using a consistent variable assignment
removed the TaskbarStateHandler class and its references from BaseQuickstepLauncher to streamline the code and eliminate unused components
added a new class ArrayLength to test field accessibility in different array types to ensure that the methods in different array types do not return zero - length arrays as expected
make sure hazelcast process be destroy before we start it
replaced Singleton with PostConstruct annotation and added an initialization method to ensure application settings are persisted after initialization to improve encapsulation and ensure a fresh state before reinitialization
fix safepoint so that negative value do not lead to infinite loop
update thread name field type from char array to string to improve data type consistency and method usage for thread name retrieval
avoid use system . currenttimemillis ( ) in constant for good readability
fix ( graphics2d ) : reuse font and stroke object between draw
refactor expandDynamicStar logic into a separate method called expandDynamicStar in SqlValidatorImpl . java to improve code readability and reuse by separating the expandDynamicStar logic into its own method
added a method to find nested Comment2000 records and updated Comment2000 class to include it to enhance functionality by providing a method to parse and manipulate nested comment data
added a method to set the HTTP status to a warning icon to improve user feedback by indicating a warning - related issue
remove deprecate method from pgraphicsopengl ( opengl2 support )
node cost : add miss cost for rootnode cost on amd64
camel - as2 fixed the npe when disposition header be set for send a message .
refactor Locale class for improved readability to enhance maintainability and ease of understanding for future developers
added a button ` clearLog ` to ` ErrorConsoleController ` and implemented it in ` ErrorConsoleViewModel ` to provide functionality for clearing log messages and facilitate easier debugging
set mRecentsAnimationController to null to ensure mRecentsAnimationController is cleared after initialization
fix the crash when use the renderer for own caption
updated connection pooling behavior in multiple test classes to ensure proper resource management and prevent potential memory leaks
[ java ] adding opera driver class to default set for opera driver .
added error dialog for failed downloads in managejournalspanel . close # 259
added new Lifx product definitions while updating an existing product entry to enhance the product catalog with additional models for improved user selection
solr - 10990 : the collection api : use the async flag to initialize the collection api .
refactor PostgresDatabase and PostgresDatabaseTest to use a new method for generating primary key names to improve code readability and reduce redundancy in primary key retrieval logic
updated LogPanel initialization to use the repository ' s reference ID if available to ensure consistency in repository references across the application
changed the unit from unit _ Y to unit _ XYZ for the boneTail vector in SkeletonInterBoneWire . java to ensure that the model space is properly scaled during the creation process
added a method to stop the browser component and modified the deinitialize method to call it to improve browser lifecycle management and ensure proper cleanup on the application
added a call to waitForActiveCollection for " readApiTestViolations " in AutoScalingHandlerTest . java to ensure that the test environment is confirmed to proceed before proceeding
refactored the conditionals for processing terminal attributes in ScreenTerminal . java and Tmux . java to improve performance and maintain consistent color rendering based on screen positioning
updated the condition in SoftResetAction to use getControllerState ( ) instead of isIdle ( ) to improve state management by allowing for additional controller states
disable imageio cache to speed up texture pack reloading .
added fallback for parentFolder initialization in Request and RequestV2 classes to ensure proper resource retrieval for media requests based on the media renderer
cloudstack - offering : fix mislead apidocs link ( # 7078 )
fix issue with android write file on window do n ' t delete the file on window .
added error handling for HTTP 403 responses in StandardGitHubRepository . java to improve robustness by logging specific error details when posting requests
[ log4j2 - 2978 ] add miss getter in messagefactory2adapter for the original messagefactory2adapter
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress serialization warnings related to BanSerializableRead operations
updated regex pattern in Version . java to allow version numbers to reflect the latest release version
updated tooltip delay settings in ExtractionModelFrame . java to improve clarity and user experience during tooltip display
refactor project command execution to utilize ` passedInTargetsSet ` for improved handling of build targets to enhance code clarity and maintainability by reducing redundant method calls
added timezone handling and assertion in TimeTest . java to ensure correct formatting of time values in the application
add note that islastmodified may return null .
fix the sslengine initialization on the endpoint rather than use a javascript engine .
updated the accuracy display in the GpsLoggingService to ensure accurate information is accurately displayed for better user experience
added a check for futures enabling in the BinanceExchange class and modified related methods in BinanceTradeService and BinanceTradeService classes to ensure that futures are only processed when enabled , improving the control over future account management
continue issue 715 [ admin : listinstructors -- > do not include instructors in admin page ]
hive - 27420 : thrift http server reset the accept queue size ( prasanth jayachandran review by gopal v )
replaced repeated calls to getClass ( ) . getName ( ) with a constant for the watch service enabling to improve code readability and maintainability by reducing repetitive calls to getClass ( )
camel - 2155 : fix camel - jms to not complain about ssl protocol
replaced the parseErrorHelper method with validationError in DrillSqlWorker . java and updated test methods accordingly to improve error handling by using the more appropriate validation error type
consolidated duration calculation in GCInspector . java to ensure that the duration is accurately represented for a really fast collection
fix a bug in nodewithJavadoc that could lead to a classcastexception .
added OS detection method and modified memory handling capabilities in ReserveMemory . java to improve cross - platform compatibility and enhance memory management functionality
added multiple calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of region closing and splitting operations
hbase - 7790 fix hbaseadmin ' s procid field ( aihua xu , review by yongzhi chen )
updated method signature in CxfEndpoint and added a constructor to wsdlServiceFactoryBean to enable dynamic service selection based on the specified service class
refactor YamlChangeLogSerializer to use a container map for serialization to improve the handling of YAML change logs by utilizing a dedicated map for serialization
add a newline after the print statement to make the output consistent for better readability
remove regeneration of all road in liquid , a they should never be use
updated HomeFragment instances to use ` getActivity ( ) ` instead of ` getContext ( ) ` when initializing playing and footer rows to ensure compatibility with the current fragment ' s lifecycle
updated Hibernate annotations to use GenericGenerator for generated values to improve dependency management and reduce type safety in generated values
removed the country parameter from the getSystemTimeZoneID method and its usage to simplify the method signature by eliminating unnecessary dependency on user . country
fix bytebuffer npe in zip2codec ( # 1079 )
[ web ] restore internal logging after exam start
added a constant VALUE _ TYPE _ EMPTY to the Type class and modified the Value class to use it to improve type handling for empty values in the Value class
updated group comparison from ' = = ' to ' . equals ( ) ' in GroupManager . java to ensure proper string comparison to prevent potential null pointer exceptions
rename Liquibase and LiquibaseDropAll classes for consistency to improve code maintainability and readability
modified SimplexNoise . java file to improve code readability and maintainability
added a new method newInstanceExact to TargetGraphFactory to create new instances of TargetGraph for flexible graph creation to improve usability and maintainability of the graph construction logic
fix typo in nodetool patch by jbellis
fix possible npe when serialize invalid json for modmetadata . json .
added logic to manage the state of the previous element in the object array before setting or deleting it to ensure proper management of the current element in the object array
replace direct file saving with parent file upload in FileUploader . java to improve file management and ensure correct parent - child relationships during uploads
added a new test class UTF8ReaderBug to validate handling of supplementary characters in XML parsing to ensure proper parsing of Unicode characters in XML
added unit test base on user forum issue
updated Binance integration tests to use full version of ethbtc @ depth20 to ensure tests align with the latest API changes
added a method to reset initial and max allocation in the Wrapper class and invoked it in SimpleParallelizer to ensure proper allocation management and prevent potential memory leaks
removed unused import of AssertTree from AmbariManagementControllerTest . java to clean up the code and reduce dependencies
replaced direct calls to System . getProperties ( ) with synchronized blocks when loading configuration properties to ensure thread safety when modifying system properties
o tweaked source to compensate for bug
rename AbstractDoubleArrayAssert in the files to improve clarity and consistency in naming conventions
fix out of bound box ' s size on large screen
added methods and test cases for delay and abort handling in the CodeFirstSpringmvcIntf and CodeFirstSpringmvc classes to enhance test coverage and improve exception management functionality
updated method to retrieve values from a string using an array and added a loop for processing term frequencies to improve efficiency by processing multiple terms sequentially
replaced the use of CxxLink with a new BuildTargetSourcePath implementation to improve code clarity and simplify target source path management
add disable botania . versioning . to commanddownloadlatest help message
replaced Collection with List for filePaths in MediaFolder . java and added numberOfFiles variable to enhance type safety and clarity in the code structure
removed the " - b " argument from the AidlStep and GenAidlTest command to streamline command execution by eliminating unnecessary command line options
# 773 delete result set on comparison if possible
added a TODO comment to the FakeHttpLayer class to temporarily disable the test due to an unrelated issue
replaced error handling with revokeLeadership method to improve error management by explicitly revocationing leadership
fix ( net ) : use list instead of stream ( # 5478 )
replaced ` applySystemConfiguration ` method with ` applyQualifiers ` throughout the code to standardize method naming conventions for configuration handling
[ flink - 21490 ] [ doc ] improve jobmanager option ' s failure reporting
updated method names and visibility handling for widget views in WidgetsFullSheet . java to improve clarity and functionality of UI based on adapter type and search mode
fix npe when woodstxoutputfactory ( ) be not on classpath
refactor test initialization in AuditAliasCommandIntegrationTest to use setUp method to improve test setup efficiency and maintainability
removed debug logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up unnecessary logs that are no longer needed during runtime
( chore ) camel - cxf : fix incorrectly disabled test
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging exceptions during periodical refresh failures
refactor ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and improve the addition of providers to the providers list to enhance code clarity and ensure mandatory parameter validation for the providers
fix bug # 49464 - a fall back to a default color when save a palette
modified ZonedDateTimeFormatterBenchmark . java file to improve clarity and maintainability of the test code
refactored the update processing logic to improve buffering checks and added a new test class for validation to enhance code clarity and ensure correct functionality when buffering updates
added a null check for the stage index in the SimulationListHandler to ensure that the rocket can have a stage before proceeding with further operations
add back the replacement of all exist block in the edit session , which be now possible
refactored the ExtendedMasterSecretExtension class to improve code readability to enhance maintainability and simplify future updates
changed the declaration of the processor variable to be final to ensure immutability of the processor reference and prevent accidental reassignment
add event to WritableKeyProcessor to notify when a write operation fails due to end of stream
added " CUBE " to MySQLDatabase . java to support interaction with CUBE database
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException when rm fails
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and introduce new test runner functionality to enhance support for multiple API versions in Robolectric tests
refactor tests in DefaultOkHttpClientFactoryTest to use reflection for field access to improve test clarity and maintainability by reducing reflection overhead
refactor BatchUpdateException , PreparedStatement , and Statement classes for consistency to improve code maintainability and readability
added a null check for the os variable to prevent potential null pointer exceptions during execution
ticket # 3875 : pass only the parent split pane into drawindexedstring . ( relate to trac - 55 )
modified the jailerMain method to include a new parameter ` fromCli ` and adjusted the exception handling accordingly to allow for conditional execution based on the ` fromCli ` parameter before throwing a RuntimeException
updated documentation to include initial content on callback - still more to add
added functionality to store the unread pull notification in shared preferences to ensure that the unread message reflects the latest status
fix possible npe in isnullnode . equals ( )
updated Box2DTest . java , OrthographicCamera . java , and other classes to improve memory handling and camera initialization to ensure accurate rendering and enhance performance with dynamic memory allocation
fix a crash when comment footer be invisible in landscape .
[ gr - 37130 ] cliservice should log aborted operation on warn instead of trace .
bugfix : do n ' t register abstract method in interface , but it can not be resolve
mow - 574 fix mouseuppopups on ie 10 +
filter user by device id during the get notification request ( # 4823 )
change base url for cgiar to the new srim package
removed specific action listeners and added a new bug6520101 class for testing JFileChooser behavior to improve resource management and prevent potential memory leaks during file selection
make the hollow diff ui api more consistent ( # 638 )
refactor ` getRuleOptional ` method to ` getRuleOptionalWithType ` and update its implementation to improve type safety and error handling when retrieving optional values
added conditional visibility for transportSpinner based on makingShortcut condition to ensure transportSpinner is not visible when makingShortcut is true
added null check for attributes _ field and created two new classes with annotations to ensure proper handling of null values and implement demonstration of annotations
modify back press behavior in multiple fragment classes to return boolean values to ensure consistent behavior when the back button is pressed based on media details
added support for long view index configuration in QueryServices and QueryServicesOptions to enable flexible control over view index behavior in query services
remove space before the space in the string builder to ensure consistent formatting of the output
fix private keypath test to work on window
remove unnecessary columnposition parameter from diffDropColumn method to simplify method signature and improve code readability
update IndexWriter and IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the testing environment for indexing purposes
hbase - 27883 - disable column family check when - dfell - conf be use for importtsv ( # 5225 )
[ java ] use logsubscriptionid instead of logrecordingchannel when prepare for replay .
replaced startActivity method with startActivitySafely for launching activities and added voice button visibility management to improve user experience by ensuring the keyboard appears when the activity is opened
added a conditional check to return early if JSON nodes have a single text value to improve processing logic for single - node JSON nodes
hbase - 25872 add comment to procedure . getprocedure ( ) ( # 2538 )
updated resource bundle retrieval to include default locale and system class loader to ensure correct resource loading based on the default locale settings
[ j2kt ] implement normalizearraycreationskotlin pas which do not require kotlin .
lucene - 3892 : fix persegmentsingleValuedfaceting to avoid off - by - one errors
fix mod metadata not load correctly . close # 406
added a new test class ` OSGiTest ` and modified module - info . java ` to include a static dependency on ` com . google . gson . annotations ` to ensure compatibility with Java ' s annotation package handling
nifi - 5944 : added unit test for false positive on controller service enablement
hbase - 7690 make sure we do n ' t have to clear the failed row buffer on fail in htreemapping ( ted yu )
fix : add miss type cast for ` scandle ` ( # 3078 )
added ` hasUserData ` method to ` SimpleFeatureImpl ` and its corresponding test to ensure user data is validated correctly in the feature
removed ` HiveException ` from method signatures in ` DDLPlanUtils ` , ` ExplainTask ` , and ` DDLPlanUtils ` to simplify method signatures by removing unnecessary exception handling
refactor RelyingPartyRegistration class for improved clarity to enhance maintainability and readability of the code
7096170 : should remove unused support for enable javac logging
added a new class ` InJavaSourceSet ` and modified imports in ` UsesJavaVersion ` to enhance source set handling and improve code clarity by utilizing Java source sets
tika - 2422 -- skip gdalinfo resource in testGDALparser ( thanks to jason dere )
add a new method ` createGetter ` to the ` ReflectionHelper ` class for creating getter objects with specified attributes to provide a convenient way to create getter objects with specified attributes
removed a boolean check for external storage in the conditional statement to simplify code logic for better readability and performance
added a new constant for Indexer configuration and modified ObjectCache initialization to improve handling of Nutch configuration for indexing operations
cloudstack - 8243 : do n ' t accept either disk offering id or snapshot id when create volume
updated content assignment in ToHtml . java and modified assertion in BaseTestCellComment . java to ensure null checks and improve clarity of assertion failure messages
Enhanced date and time manipulation logic to include checks for non - null values to ensure robustness by preventing null pointer exceptions when adding and subtracting periods
added a new file for handling error types in the server feature to ensure that specific error types are handled correctly in the response
replaced the custom ` signum ` method with a static import of ` Integer . signum ` and simplified the annotation retrieval logic to improve code readability and reduce redundancy in the comparison logic
added visibility management for text holder in AttachmentAdapter to ensure text is not displayed when certain conditions are met
fix : search for method / field on reference ( # 1437 )
[ java ] removing the reference to firefoxoptions : : profile from the firefox driver
add a block bucket pickup hook to liquidblock ( # 8614 )
http : / / issues . apache . org / activemq / browse / amq - 2902 - prevent test failure on slow machine
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate time zone configuration for applications using the appropriate time zone
[ java ] improve error log to be more concise .
updated TEST _ MONSTER to use the TestGroup annotation instead of a hardcoded false value to enhance flexibility in test configuration for different test scenarios
fix the memory leak of sqlexecutionloggerimpl ( # 1922 )
[ gr - 8759 ] graalcontext do not need reflective access to these class .
when remove pixel update , use getpixels ( ) instead of updatepixels ( )
update HiveAbstractReader to verify and add transactional properties from partition to ensure transactional properties are validated correctly for the table and its partition
refactor the shouldScrollOverlay logic to separate variables and add mLastOverlaySroll to improve readability and maintainability of the code
hhh - 1308 make jdbc batch size for unmodifiable query consistent
add more information when we fail to reach
added a new MockWithStaticStateDemo class and a test for spying on a class retains state to facilitate testing of state retrieval in partial mocking
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure proper parsing and deparsing of SQL queries involving brackets and ordering
added null check and exception handling for ugi before executing action to improve robustness by handling potential null values and ensuring proper exception management
fix ( openal ) : log audiobuffer error
camel - 14263 : camel - endpoint - add method to resolve the parameter from a string value to keep the endpoint alive
[ calcite - 1638 ] when create expect decimal type in rexnodeconverter , use default precision and scale ( jin xing )
refactor null handling for vendor and device properties to use Optional to improve code robustness by preventing potential NullPointerExceptions
updated the parameter in the updateAccount method from " testName " to " now " to ensure accurate account updates based on the current time
refactor component selection logic and introduce mouse adapter for better performance to enhance efficiency and maintainability of the component selection process
added long running time configuration with getter and setter methods in Args . java to allow dynamic configuration of the long running time based on the VM ' s configuration
updated priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW in FindRefComparison . java and added a new class Ideas _ 2012 _ 05 _ 21 . java to improve comparison logic and introduce a new class for better performance evaluation
modified method signatures to use ` java . util . ServiceLoader ` instead of ` sun . misc . Service . providers ` to simplify the import statements and improve code readability
use toPlainString instead of tostring for decimal to avoid conversion from decimal to string .
refactor assertion statements in TestRestClientRequestImpl for clarity to improve readability and maintainability of the test code
added a condition to check if the reference database is equal in the MissingUniqueConstraintChangeGenerator to ensure correct handling of unique constraints when the reference database is already present
added a method to set Android constants and refactored proguard path handling to improve clarity and streamline configuration of Android project
replaced multiple assert statements with await statements in multiple test files to improve test reliability and ensure proper synchronization of tests
add user _ args and timestamp fields to ChromeTraceBuildListener and its test to improve the build process by providing additional context for better traceability
substitute j . l . resourcebundle to avoid lookup cache
fix the typo in the log message ( # 10708 )
added new file TheRockMetaDataDemo . java to demonstrate fetching exchange metadata to enable users to access and print exchange metadata for TheRockExchange
changed ` FloatingDecimal ` to ` strictfp ` and ` FormattedFloatingDecimal ` classes , and added a ` testStrictness ` method to improve precision handling in floating - point conversion and enhance testing accuracy
replace unparseIdentifier method with columnName in ColumnStatsSemanticAnalyzer to simplify column name handling and improve code readability
added a test for replacing a field declaration in Java code to ensure proper handling of variable declarations in the rewrite process
added a check for synthetic properties in the static class implementation and tested it in Bug1282 . java to ensure that the static class is not incorrectly analyzed as non - synthetic and to verify its functionality through testing
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` from ` WorkspaceAndProjectGenerator . java ` to simplify the path handling and improve code readability
added logic to register and unregister pending Rescues in IkStepDefinition to improve handling of resource constraints and enhance error management in the ioke process
made equals and hashCode methods final in multiple type classes and added implementations for equals and hashCode methods to ensure consistent behavior for object comparisons and improve usability in collections
added a method ` getSyncLevel ` to retrieve the default SyncLevel based on the specified ` level ` parameter to enhance functionality by allowing dynamic adjustment of the sync level based on configuration
test : use ` assertthat ( ) ` instead of ` commitmillis ( ) ` ( # 1372 )
added a condition to check if the slice is a recovery state to prevent further processing when the slice is in recovery state
* fix typo in opencv _ core . java ( # 750 )
added SDKPath field and modified makeProcessExecutorParams method to accept ExecutionContext to ensure the SDK path is correctly set and utilized in process execution
[ flink - 17373 ] [ runtime ] fix deadlock in transientblobcleanuptask
server : change ' 1 - 1 nat ' to ' static nat ' when fail to create firewall rule
rename PasswordEncoder and StandardPasswordEncoder classes for consistency to improve clarity and maintainability of password encoding components
added conversion of row type to sort and union in SortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct handling of row types during query execution
add some javadoc to betterblockpos class so i can understand it .
fix embeddensitytoolboxview . getparametervalue ( class ) which return the wrong type
added a method to retrieve the nightly build status and updated related version handling to improve clarity and maintain consistency in version management across the application
added OracleDatabase handling to improve statement parsing by ensuring trailing spaces are removed correctly to enhance compatibility and prevent issues with Oracle SQL commands
add findbugs . nullderef . assumensp system property
fix port problem on window ( # 1067 )
ggb - 1965 refactored the slider a bit to reduce the chance of long tap on the slider .
added a method to add a duoSecurityPrincipalMultifactorAuthenticationProvider bypass to enhance the multifactor authentication provider bypass configuration
refactor method signatures in MaxRectsPacker for clarity and maintain consistent formatting to improve code readability and maintainability
[ drools - 725 ] move osgi kbase into a separate module ( # 4410 )
added help page functionality to the PMS class and refactored related components in HelpTab to improve user accessibility and maintainability of help page management
created GeocodeProviderFactory and Constants classes to implement geocoding functionality and define constants
updated import statements for CharArraySet from util to CharArraySet to ensure compatibility with the latest Lucene library structure
refactor tests to use static assertions for NullPointerException and ResourceManagerException instead of static expect exceptions to improve test clarity and maintainability by consolidating exception handling logic
[ java ] add protocol . entry _ point _ object _ id to prevent duplicate object deletion .
modified the conditions for handling document values in SegmentsInfoRequestHandler . java and updated the collection creation test in CollectionsAPISolrJTest . java to improve the logic for validating document handling and ensure accurate test coverage
modify the calculation of numPredictiveAppCols to be conditional on phone device to ensure that numPredictiveAppCols is set correctly based on device type
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated its usage across multiple classes to streamline condition checks for scalar subquery inputs in join logic
force item to be store in buildcraft . only , need for item that be remove later .
modified layout positions and width settings for search bar in DeviceProfile . java to improve layout handling and ensure proper responsiveness of the search bar
[ bugfix ] fix yahan - command line option not work in yahan backend .
initialized ms to null in HiveMetaStore and removed standAloneClient condition in HiveMetaStoreClient to ensure proper cleanup and avoid potential null pointer exceptions during shutdown
update getDisplayScript method to use Category . DISPLAY instead of getDefault ( ) for Locale to ensure correct behavior for display scripts in different locales
removed unnecessary static imports for BASE _ URL _ PROP and CORE _ NAME _ PROP in Replica . java to improve code readability by reducing unnecessary imports
replaced ThreadLocalRandom with a Random instance for generating random values to simplify code and improve performance in random number generation
added a check for launcher readiness before backuping files to ensure resources are only released when the launcher is ready to avoid potential errors during backup operations
improved exception messages in Cell . java to include actual space values to enhance clarity and usefulness of exception messages
camel - 2537 : added unit test base on user forum issue
renamed methods and variables related to bar space from " BodySpace " to " barSpace " across multiple chart classes to improve clarity and consistency in naming conventions related to bar space management
refactor ShadowProcess class for improved readability to enhance maintainability and reduce complexity in the codebase
refactor FileMessageHistoryTest to use TemporaryFolder and improve assertion checks to enhance test reliability by ensuring required dependencies are validated before assertions
added multiple logger configurations to the Grasscutter class to enhance debugging capabilities by setting the logging level to DEBUG
lucene - 8068 : fix nullpointerexception in solrj . lucene . metrics . spanscorer
added a condition to check workspace state before exiting overview mode to ensure workspace state is validated before exiting overview mode
rename various assertion classes and constants across multiple files to improve clarity and consistency in naming conventions
fix : snippettemplate cache be no longer update when cache be disable .
added a new constant ` SCOPE _ SOLR _ CORE ` and updated related variable handling in the data import classes to support new core scope management in the data import process
added a new primary key reference in the database schema and verified the result of the measurement table to ensure the table correctly returns the expected primary keys for accuracy
fix -- permissions - config - path option typo ( # 353 )
refactor session handling logic in HttpSessionContextIntegrationFilter for clarity and consistency to improve readability and maintainability of the session management code
added a new class TestIfWithDeadRegion with a Supplier for string operations to demonstrate the use of Supplier < String > in a lambda expression
rename english ud to usd ( for consistency & fix a typo )
refactor test execution to enable and disable HighResolutionTimer in SnowflakeIdGeneratorTest to improve concurrency handling in the test execution flow
added a staticUi flag and modified toast bar visibility behavior in the MainFragment to allow users to toggle the static UI option instead of hiding the toast bar
replaced the existing Privilege implementation with a try - finally block to ensure proper resource cleanup to improve resource management and prevent potential memory leaks
updated parameter handling methods to use ` putIfAbsent ` and added null checks for the client ID to improve code robustness and prevent potential NullPointerExceptions
updated message dialog presentation to use localized messages instead of hardcoded strings to improve user experience by providing clearer error and user feedback
tika - 3864 -- add magic match for tika - poi and xls - ooxml , and xls - poi - ooxml to mimetypes .
refactor Cucumber logging to improve clarity and consistency in glue loading and feature path handling to enhance maintainability and readability of the code
camel - 8373 : fix xml encode for eip documentation . thanks to stephan siano for the patch .
do n ' t wait for migration from remove node , mention flag to skip
ensure we do n ' t get a null pointer when there be no capture device
added WebsocketConfig and updated WebSocketPluginConfiguration to manage WebSocket connection limits to enhance configurability and improve flexibility in WebSocket connection handling
update ` cachevalidationlistener ` to only run if ` isuite ` or ` testrunner ` be the same
trim whitespace from the content string before adding it to the document to ensure that the content is only added if it is not empty
fix race condition in close ( ) of solverjob
[ iotdb - 3662 ] ignore pathalreadyexistedexception when concurrent insert a non - exist time series ( # 547 )
added a method ` check ` to return the result to provide external access to the ` check ` method for improved functionality
changed access modifiers of methods from public to protected in multiple classes to enhance encapsulation by restricting access to these methods
bug 12899 : in deployvm fail to reach the domain of allocated record , if the caller be in allocated state , not the caller of the domain
updated HttpParser to set a default value for _ valueString and modified test case names for consistency to ensure proper handling of null values and improve clarity in test cases
refactor the initialization process in J9VMInternals to streamline the thread initialization process to improve code readability and maintainability by reducing redundancy
added methods to create and verify external storage directory in ShadowEnvironment and created corresponding tests in EnvironmentTest to enhance testing capabilities and ensure proper functionality of external storage state management
[ drools - 376 ] fix type coercion in executable model ( # 3762 )
updated generic type declarations and corrected syntax in logging code to improve code clarity and maintain consistent formatting
added exception message to the logging statement in ActionNode . java to improve error logging clarity by including exception details
fix error with number format in conference wizard . report by emil ivov .
updated visibility logic for shared file icon in FileListListAdapter to ensure correct visibility of shared file status based on file type
removed deprecated configuration for dynamic partition optimization in HiveConf to streamline code and encourage the use of new configurations
hive - 7594 : allow to pass the conf overlay into the operation ( gunther hagleitner , review by prasanth jayachandran )
updated method calls and imports in BTCMarketsStreamingAdapters and BTCMarketsStreamingService to use standard Java collections to improve code clarity and reduce dependency on external libraries
changed type name from getName ( ) to getTypeName ( ) in OGRDataStoreTest . java to ensure consistency with type naming conventions
added a method ` onErrorInStep ` that returns null to the StepListenerSupport class to provide a placeholder for error handling in step execution
fix link in wallet . notifytransactionisinblock ( ) javadoc .
camel - 7594 : fixed the issue that camel - netty - http consumer do n ' t respect the configured charset
use log instead of system . out . println , a we do n ' t want to write to stderr .
added a check to ensure the row index is within the valid range of the connection list to prevent potential ArrayIndexOutOfBoundsException during database operations
pmd : add new rule to check for method with the same name as the enclosing class .
added the ExtendedPlatformComponent class and updated ManagementFactory to utilize it for retrieving platform - managed MBeans to improve the handling of platform - managed beans and enhance code organization
replace single quotes with double quotes in SQL queries to ensure proper handling of double quotes in SQL queries
updated resource paths in Bleutrade DTO tests to reflect the correct directory structure to ensure tests reference the correct DTO object for accurate data retrieval
refactor TextEscapeUtils to improve code readability to enhance maintainability and ease of understanding for future developers
added a filter parameter to the FunctionQuery instantiation and modified the filter creation logic to utilize it to improve query flexibility by allowing dynamic filtering based on user - defined parameters
added a progress message before sending the email in GpsLoggingService to inform users about email notifications when the main form is visible
replaced ` ArrayList ` with ` HashSet ` for better iteration over elements to improve performance and prevent concurrent modification issues during iteration
[ tradfri ] fix discovery result eviction ( # 4854 )
hive - 15602 : addendum : fix hivemetastoreclient . testfilterforpartition to fail with blocking mode at server . ( vihang karajgaonkar , review by ayush saxena )
add ` ` abandoned ' ' to the list of status in each page .
refactor columnAliasPrefix from a default value to a variable across multiple platform classes to improve code clarity and maintainability by eliminating unnecessary null assignments
updated data types from Text to BytesWritable in LlapRowRecordReader and LlapRowInputFormat to improve efficiency and support for binary data handling
test : add a non - native detection on a 32 - bit jvm .
fix a problem with the top page parent of a pdfcopy where it would return the wrong reference to itself instead of always the top page one .
added a new optionDAEMON to the OptionEnum and implemented daemon behavior in TerminalClient to enable daemon mode integration for better management of UI components
added a new FlushIndexTask class to handle flushing operations in PerfRunData to improve performance by executing flush operations in the index writing process
use unlimited disk flush size for memtables / binarymemtables / memtables
added support for SEASONS output in MediaLibraryFolder . java to ensure proper handling of text sorting operations in the MediaLibraryFolder class
added a new file LocalSocketAddress . java to initialize a DatagramSocket with IPv6 addresses to enable testing of IPv6 binding on a DatagramSocket instance
updated grid size coordinates in GridSizeMigrationTask . java to align grid size points with new configuration requirements
updated method calls from ` getName ( ) ` to ` name ` in ` SerializerPojo . java ` to improve consistency by using a direct reference to the object ' s name
added read - only context options and modified transaction handling in Context . java to ensure operations are only performed when not in read - only mode
renamed LookAndFeelCommand class for clarity to improve code readability and maintainability
update the calculation of lastRunEnd to use ceiling method and correct the offset check in the condition to improve accuracy in determining the last run position and correct the boundary check for child offsets
added support for EOFException in GracefulStopTest to enhance exception handling to accommodate additional error scenarios
removed concurrency control for HTTP connection and listener management to simplify code and improve manageability of HTTP requests
networkparameters : remove obsolete reference to acceptableaddress in javadoc
removed account asset optimization check and associated logic from DynamicPropertiesStore . java to streamline account asset optimization handling and improve code clarity
added a new constant J9 _ GC _ POLICY _ NOGC with a value of 0 to enable the option to disable garbage collection in the JVM
remove transaction base contract validation logic in TransactionCapsule . java to improve error handling for invalid contract procedures
pmd : remove unused class exceptiontypeChecking , a it be n ' t really need
add fallback to english for html - help when no localization be available
added a new file ProcessorInfo . java to handle CPU CPU configuration to provide a mechanism for reading CPU executors based on available processors and permissions
add - html option to print bug reporter ( default . xsl )
fix : bring back xml logback configuration ( # 6548 )
updated ` HostLevelParamsHolder ` and ` ServiceComponentRecoveryChangedEvent ` classes to improve code clarity and data updates by utilizing the ` Event ` interface
updated the configuration and testing for ` TagPropagationFinishedSpanHandler ` in ` SleuthTagPropagationAutoConfigurationTests ` to enhance support for tag propagation in Spring ' s user configuration
refactor rustDepType handling into a switch statement for SHARED and STATIC types to improve code readability and maintainability by consolidating similar logic into a switch statement
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap ` for query parameters to enhance flexibility by allowing users to specify query parameters for login links
hbase - 6807 optimise halfstoresplitter . readremainingkey ( ) by seek first kv up to the hfilescanner
modified several classes to implement the new ` timing ( ) ` method and deprecate the old method to improve consistency and clarity in timing management across the application
fix ( sample ) : optimize the layernorm ( ) ' s performance
refactor method calls to use FileOperationsHelper for file sharing functionality to improve code organization and simplify the sharing process
added a new test class LiquibaseUpdateMojoExecutionTest for verifying the behavior of relative CLOB files during Liquibase updates to ensure correctness of plugin execution and validations for Liquibase updates
convert proxyType to lowercase when setting it to ensure consistent handling of proxy type values when converting to lowercase
new minecraftforge class to allow mod to use forge ' s minecraftforge .
refactor JdbcDatabaseSnapshot to enhance filtering logic for database columns to improve performance by reducing redundant key retrieval
added a new container instance and updated the border setting method in CSSBorderTest . java to enhance layout management by allowing customizable border appearance
allow to specify status code for the load balancer interceptor
replaced FILL _ PARENT with MATCH _ PARENT in CellLayout to ensure layout adapts to layout requirements
updated the calculation of parentTaskName by replacing System . nanoTime ( ) with System . currentTimeMillis ( ) to improve clarity and accuracy of task name generation
added error handling for invalid Add Service Request info body in ServiceResourceProvider . java to improve robustness by ensuring a valid input is processed before proceeding
refactor return statement logic in IndexDatabase . java for improved readability to streamline the checks for index versioned files before processing and enhance logging clarity
make sure round ( x = 3 ) consistent across case for giac
anoncipherwithwantclientauth : add comment to explain why it wo n ' t work
deprecate producertemplate method that be not really in use and encourage use of alternative method
refactor JLayer class for improved readability to enhance maintainability and ease of understanding
improve eviction test reliability by account for time
change method name from ` encodeInternal ` to ` saltedPass ` and update its usage in ` Md5PasswordEncoder ` to improve clarity by using a more descriptive variable name
updated method calls for adding and removing a global layout listener in IconRecentsView . java to improve code readability and maintainability by reducing temporary variable usage
updated Response class for improved error handling to enhance reliability of response processing
fix : sstablemetadata . getmaxtimestamp ( ) . max _ value should refer to long . max _ value .
set the preferred size of the securitypanel to avoid truncation problem .
do n ' t generate a reply for conversation if there be no reply
[ hitbtc ] fix assert exception in hitbtcAdaptersTest ( # 447 )
fix ( sql ) : fix wrong order by in clause for order by
hbase - 16631 fix the exception return value of retriesexhaustwithdetailexception ( jiang xie )
replaced direct action handling with OpenCookie opening in EditGcodeFile . java to improve code clarity and manage cookies more effectively
updated import statements to use the latest version of the HTTP client library to ensure compatibility with the latest version of the HttpClient library
pipe : do n ' t send energy to battery every time ( # 1043 )
added a check to delete the tmp output file if it exists to ensure that temporary output files are properly cleaned up before execution
updated the constructor parameter name from " id " to " id " in BitstampWebSocketTransaction and added a new test method in BitstampStreamingMarketDataServiceTest to improve clarity of parameters and enhance test coverage for fetching trades
added time limit calculation in ReplayProcessor and ReplaySubject classes and corresponding tests in ReplayProcessorTest and ReplaySubjectTest to ensure proper handling of time states and their values during playback
update citeproc dependency to 1.0 . 10 ( # 61 )
migrates sip over to neomedia . ( # 1579 )
ggb - 2391 show definition for equation in exam , not only for equation style
fix an npe in the chat window when the user click on a notification button in the chat window .
added caching behavior when startrow is null and scanRoot is false to optimize scan performance by controlling caching based on scan configuration
[ flink - 6782 ] [ table - planner - blink ] use init script for minimr SQL file
refactor mathematical functions to improve performance to enhance computational efficiency in critical calculations
added a new BooleanFlag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to allows the transient taskbar feature to be enabled or disabled in a debug environment
[ hotfix ] correct typo in accessexecution and archivedexecutionvertex javadoc
added density default value for scale = 3 in IOSGraphics . java to ensure consistent density across different screen densities
rename the boolean field from ` optional ` to ` vararg ` in the ` Parameter ` class to clarify the purpose of the variable as its purpose in the builder
hbase - 15392 addendum add exception to the log when start regionstatestore in case of failure
[ hotfix ] [ test ] remove unnecessary anonymous inner class in testclusterupgradeutils
updated log messages and refactored async context handling in AsyncHttpConnection and LocalConnectorTest to improve clarity of log messages and enhance async request processing
[ ql - v2 ] searchuimanager : accept title and subtitle to be show arrow .
fix for bug in read _ lock ( ) in mvstore .
[ gr - 29427 ] skip lb test only on linux / amd64 platform .
updated type checks in Scalars . java for better handling of StringValue and IntValue to improve robustness and ensure proper conversion of Integer to string
modified validation logic for primary keys in CreateTableStatement . java to provide clearer error messages when require primary keys are provided
added conditional logic to set drawable resources based on LMP status in multiple classes to improve app visuals for devices running the LMP theme
fix an npe from vmservicemanager . getflutterviews ( ) when no isolate be query ( # 5467 )
add more method to HeadersConfigurer for header writing to improve header management and security configuration
updated methods in ObjectEnumerableAssert for improved clarity to enhance code maintainability and readability
[ grid ] move smoketest to the new package
added type attribute to @ aggregateroot to fis test failure
added prebuilt libraries path handling to Python binary configurations to improve the management of prebuilt libraries in the build process
added functionality to handle client authentication in NetServerOptions and updated HttpServerOptions accordingly to improve server option handling and ensure consistent behavior when client authentication is required
updated REPLCMDIR paths to include the user ' s name in both HiveConf and MetastoreConf to ensure correct path formatting for the repl cache based on the user ' s name
simplify task visibility logic by retrieving primary and secondary task view IDs to improve code readability and maintainability by reducing redundant checks
no - jira : add timeout for stabilize test
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
[ netbeans - 5970 ] renaming variable ' controller ' to ' flowcontroller ' ( # 2935 )
fix wrong receiver exchange num report in operatortreegenerator . consumeallchildrenpipelinebuilder ( # 15688 )
added import statement for ClassLoaderHandler in mmm module - info . java to utilize the ClassLoaderHandler for improved class loading management
avoid endless recursion when update the bestsolution
added JsonIgnore annotation to ApplicationSettings . java to exclude sensitive fields from JSON serialization
inverted the condition checking for the throwable variable to ensure that the code executes only when throwable is not null
refactor queryInfo retrieval in QueryTimeManager for improved readability to enhance code clarity and reduce repeated method calls
fix an npe with empty crafting result . check for empty crafting slot .
fix gl200 text decoder ( fix # 497 )
store time column name in incoming time field ( # 7007 )
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20Token004 . java ` to ensure proper synchronization of block production operations
ww - 3770 add initializable interface to allow container to be inject in a container
include timer tag for active / error timer ( fixes # 2450 )
updated calculations for delta and ref time in AdaptiveFetchSchedule . java to improve accuracy of fetch time and interval handling for better performance
log a warning when an unfragment expression be use in a template instead of log a warning .
updated the type of the _ attributes variable from HashMap to ConcurrentHashMap to improve thread safety when reading from the input stream
fix for amq - 1976 - activemqproducer when there be only one message ( e . g . oncompletion ) .
added new color constants and improved extractInto method to handle fallback color extraction to enhance color processing logic and support for dark text hints
fix : add sketch project data folder to source folder
updated ` appendContent ` method to accept a boolean parameter ` includeTitle ` and modified related logic to handle it to improve flexibility in displaying notes based on the provided title or content
removed instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl to simplify sessionRegistry management
updated the connection scheduling to include logging for reconnection success and error to improve debugging by providing clearer logging of connection status
replace Factory with Proxy in multiple test files to improve code consistency by utilizing the javassist proxy implementation
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` for the thread pool implementation to improve performance and reduce contention in concurrent access
modify exception handling to include host address information in the exception message to improve error reporting by providing more context on address details
added a method to check if the view directory is within the repository directory to improve error handling by ensuring the view directory is within the specified repository directory
remove dead code with drag from header area ( # 4795 )
8120565 : serviceability / dcmd / gc / testdumpandloadclasswith * test fail on window due to ` ` - xx : + usecompressedclasspointers ' ' option
remove error log that be n ' t need because it be in active or replay state .
deleted the ConnectionHook . java file to eliminate unused code to streamline the project
removed unnecessary TestInjection . waitForReplicasInSync variable and related test files to simplify the code and improve consistency across the test classes
camel - 9445 fixed the test error of camel - swagger - java
[ core ] allows access with external apex .
fix javadoc error in jdk 17
refactor AggregateEngine to use a singleton instance and improve thread management in OverflowQueryEngine to enhance performance and resource management by utilizing a dedicated thread pool
updated WebSocketAsyncConnection to accept a ByteBufferPool parameter to improve memory management and simplify buffer reuse
added scrollToPositionWithOffset method calls for LinearLayoutManager and adjusted bounds for index access to enhance thumbnail scrolling experience by ensuring proper positioning during scrolling
fix ( sql ) : fix sample by timestamp overridden by other column in sql
refactor animation handling in LauncherAnimUtils to improve animation flow to enhance animation performance and readability in the launcher transition animations
set httpclient . disabledefaultuseragent to true on new connection
added a conditional check for pubsubhubbub before handling feed updates to ensure that feeds are only processed when a pubsubbub setting is active
changed the access modifier of the finalize method from public to protected to enhance encapsulation and restrict overriding capabilities
fix stub generation for synthetic class ( # 1738 )
[ ds - 2058 ] - move dspace - webapp . java to spring - managed dspace - app . java
added a check for table aliases in CalcitePlanner and implemented a method to retrieve them in RowResolver to ensure that the table does not contain non - existent columns and provide clearer error handling
[ flink - 23452 ] [ runtime ] make trigger key unique in jobconfiguration .
updated log level from info to warn for transaction broadcasting messages and added detailed transaction information to improve clarity of log messages and enhance transaction error handling
improve BasicMapTest . java by replacing wildcard imports with specific assertions to enhance readability and maintainability of the test cases
hive - 24975 : add backward - compatibility for rcfile optimization ( mahesh kumar behera review by prasanth jayachandran )
added a new enum ` TlsClientCertPolicy ` and modified ` GitBlitServer ` to utilize it for managing client certificate policies to enhance code readability and maintainability by centralizing the handling of certificate policies
remove logic for sending a new message if subscription fails to improve the efficiency of the subscription handling in the KrakenFuturesStreamingService
added support for custom WebSocket protocol headers in the WebSocketRoutingFilter to enhance the flexibility and security of WebSocket communication throughout the application
added debug logging for HiveQueryResultsFetchReq to improve visibility into the fetch operation for debugging purposes
removed unnecessary width formatting in dimension dimensions and labels to simplify the dimension display and improve readability
updated test methods and logic in FinalizePrivateFields to handle inner classes more effectively to improve code clarity and functionality by focusing on inner class visibility
rename UnexpectedJobExecutionException class for consistency to improve code maintainability and readability
deleted the ` jdk . internal . loader . java . extra ` file and simplified the ` AquaLookAndFeel ` class to streamline the code by eliminating unnecessary dependencies and simplifying button visibility logic
updated dimension handling to utilize ` docsEnum ` and modified maxFreq to ` maxCost ` in ` DrillSidewaysQuery . java ` to improve code clarity and ensure proper handling of dimensions based on the cost of operations
added GeoDegeneratePath class to the classRegsitry collection to support geometric geometric data handling in the application
modified constructors in various pool classes to remove the preFill parameter and adjusted the constructor calls accordingly to simplify object creation and ensure consistent behavior during object creation
added a condition to update the taskbar state if not in the launcher to ensure the taskbar state is correctly applied when not in the launcher state
added null check for ` li . getDefaultStyle ( ) ` before comparing style to avoid potential ` NullPointerException ` when the style is null
allow the fullscreen width of the marqueelabel when the icon be too big . fix # 483
refactor file icon assignment logic to improve clarity and efficiency for directory and image types to enhance code maintainability and ensure consistent icon representation based on file types
updated assertions in ParallelUniverseTest to use contains instead of isEqualTo to improve test readability and allow for additional resource checks
add synchronize when iterate over synchronizedmap
make native probability function query runner a bit easy to debug
de - register the shutdown thread when the daemon thread leave . fix # 459 .
hhh - 6755 : drop temporary table after use for sybase 15
simonstewart : start to make the htmlunit driver more consistent with the chrome version
refactor SolrCore , XMLWriter , DocIterator , and QueryParsing classes for improved organization to enhance code readability and maintainability
updated LinksIndexingFilter . java to enhance indexing logic to improve performance and accuracy of LinksIndexing operations
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve readability of memory allocation logs for better debugging
allow empty ad group to be timeline without timeline
replaced direct equality check with a variable for clarity and added a suppression warning for UndefinedEquals to improve code readability and maintainability by addressing compiler warnings
updated the string resource used for retrieving wave frequency values from ` deg _ text ` to ` unit _ hz ` to ensure consistency in the displayed quality of the wave button
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 625 )
replaced the method of initializing a TreeMap with a constructor that initializes it directly to improve code readability and efficiency by reducing an unnecessary method call
optimise creation of formatelement for null ( # 5933 )
added tracing tags for grpc message sending and message refactoring across multiple interceptor classes to ensure proper visibility of messages and improve tracing in different tracing contexts
updated the conversion from ZoneId to TimeZone . getTimeZone in ScheduledTrigger . java and added a test case in ScheduledTriggerTest . java to improve clarity and ensure proper timezone handling in the code
added AsyncBucket and InMemoryExtension classes and refactored related classes for better organization to improve code clarity and facilitate handling of asynchronous operations in bucket - related operations
refactor class path handling in resexhaust003 . java to use regex for finding the test class directory to improve robustness by ensuring the classpath is found in the test . class . path
removed unnecessary whitespace and improved formatting in the AbstractConnector class to enhance code readability and maintain consistent formatting
rename OngoingStubbing class files for better clarity to enhance code readability and maintainability
added web server handling logic to the Main class for determining and retrying WebServer instances to improve reliability by allowing web server deployment based on configuration
refactor HttpClientUtil to use a more consistent variable name and add SolrHttpClient initialization in SolrTestCaseJ4 to improve code readability and maintainability by using a more descriptive name
ww - 3988 clearing allowlist after each request in isthreadalive ( )
changed method name from ` setOutputSource ` to ` setItemWriter ` to ensure consistency with naming conventions for output source handling
[ dmt ] prevent hit policy pollution when out - of - sync ( # 4010 )
add a test for slidingWindowsCombine and update the Combine implementation to ensure correct handling of accumulators and input lists
added conditional check for ` allAppsDirty ` before binding all apps and improved logging message format to ensure apps are only bound when necessary and to provide clearer log output
camel - 13618 : camel - management : remove unstable test of managedfilewatchertest
reformatted the import statements and modified the ` Solution ` class to correct the import statements and logic to ensure accurate counting of values in the input stream for better readability and maintainability
8048549 : [ macosx ] disable usage of system menu bar if awt be embed in fx
fix fall glow location issue ( # 655 )
replace the query implementation in SimpleJpaRepository to use criteria for querying the example to improve query efficiency and readability by utilizing criteria
added additional fields for difficulty , parent hash , nonce , and number in the BlockUtil class to enhance blockchain configuration by incorporating additional genesis parameters
remove separate loop safepointsafepointinsertionphase to simplify code
hbase - 14880 fix potential npe in rsgroupinfomanagerimpl and zkprocedurememberrpcs
make some accessors public so they can be use by test - framework
clean up linger thread ( # 4844 )
added a validation check for maxBufferedDocs in IndexWriter . java to ensure that maxBufferedDocs is at least 1 to prevent illegal argument exceptions
added state management for login handling in LoginActivity to ensure proper handling of user login state during configuration changes
added null checks for source and value extractor in Pump . java and introduced a new test method in PumpTest . java to improve error handling and ensure robustness against null values during sorting
added methods for creating load balancer and managing HTTP client in HttpShardHandlerFactory and changed access modifiers in LBHttpSolrServer to protected to enhance accessibility and flexibility for subclasses and better integration with the HTTP client
updated the order in ` BaseAuthenticationServiceSelectionStrategy ` from ` LOWEST _ PRECEDENCE ` to ` HIGHEST _ PRECEDENCE ` and added unit tests for ` DefaultAuthenticationServiceSelectionStrategy ` to enhance authentication ordering and ensure proper testing of the authentication service selection
added Jetty server handler setup in TestJNDI . java to enable handling of asynchronous requests for improved server functionality
hive - 8373 : fix a nullpointerexception in sortedpartitionoptimizer . ( siddharth seth , review by prasanth jayachandran ) . ( denys kuzmenko )
[ hotfix ] [ file ] replace nioeventloop check with true return from filestreamchannel . open ( ) .
modify handling of null values in StatsUtils to ensure that newNumNulls is consistently set to optimize memory usage by avoiding unnecessary calculations
camel - jbang - fix camel - jbang for export to different kamelets .
updated OSMJob . java to handle authorization and authorization events to improve error handling during upload to OpenStreetMap by properly managing authorization and task completion
add log to help track down test failure .
[ iotdb - 3651 ] rest service config : add option to configure client auth for trust store ( # 7979 )
remove unnecessary set creation in injectmockcandidate ( ) , add test to increase code coverage
bloom : make bloomuriuniqfilter not depend on hardcoded value
updated getCursorAdapter method to true and added a preference for refreshing in TweetPager to enable navigation after refreshing content
updated the intermediate header height ratio from 1f to 75f to improve layout responsiveness for better user experience
updated imports and introduced a new RecompilationEvent class for event handling to improve event categorization and enhance logging for recompilation events
added support for managing pre - installed hosts in the Ambari system to enhance the system ' s installation capabilities within the agent
do n ' t parse changelog format if logEveryunknownfileformat be true
added logic to delete leading slash from the location character to ensure no leading slash is present in the location
added properties support for entity scores and refactored StaticPipeline constructor to improve data handling and initialization flexibility in the pipeline system
modified file handling to support multiple paths to ensure the application correctly identifies and maintains accurate source of paths
[ geos - 5769 ] make catalogrepository lookup more robust ( # 4854 )
updated assertions in Assert . java to improve accuracy and performance of assertions
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added tests for multi - line text editing to improve test organization and ensure proper functionality of text modifications
camel - 9569 : fixed unit test on the bamboo server .
refactor writeMeasurementScheams to use measurementSchema directly instead of using IMeasurementSchema to simplify the code and improve maintainability by reducing redundant measurements
updated memory management in TestPromotionFromTenuredAfterMinorGC to correctly calculate expected memory usage to ensure accurate memory calculations during the Survivor alignment testing
updated the logging classpath from " log4j - log4j12 - . jar " to " reload4j - . jar " in LoggingOptionsTests . java to ensure the correct logging class is used for reloading4j
[ hue ] wait for thing status detail to account for dynamic change in sys prop ( # 12509 )
updated package names and import paths for various activities to ensure consistent package naming and avoid conflicts in the project
deactivate kie - server test until droOLs - 1276 be fix ( # 1276 )
added a new method ` PullRequestMergedEventsStream ` that initializes ` _ service ` with relevant parameters to enhance the functionality of ` PullRequestMergedEventsStream ` for handling Avro schemas and personal access control
no effective change - add javadoc for method planningpart
[ hotfix ] remove ' null if not allocate ' from taskslot comment
replace the ` FIRE _ EXCEPTION _ ON _ FAILURE ` listener with ` CLOSE ` listeners in WebSocket - related classes to standardize the handling of exceptions during the close operation
added lock release logic to handle exceptions when attempting to release a lock to improve reliability and error handling during lock release
replaced properties loading with resource bundle retrieval in JRubyBackend . java to simplify code and improve maintainability by using ResourceBundle for loading properties
transaction : do n ' t use zero for receive address .
fix ClassGraphClassLoader . java unnecessary initialization of classInfo after initialization
[ flink - 7373 ] [ test ] fix jobmanagerstartuptest to account for blob - storage directory change
chore : [ clouddatastream ] update go _ package to match open source code ( # 93 )
added a new bundle instance and updated the builder to include extras to facilitate the handling of additional data during file display
fixed issue where an npe may occur if a particle be null .
updated test expectations in AmbariManagementControllerImplTest . java to change cluster operation timeouts from 2 to 1 to ensure tests behave correctly under specific conditions
removed the nullable attribute from the database column in TransientSessionTicketImpl . java to allow the column to be optional in the database schema
updated Bug4823811 . java file to improve functionality related to bug4823811 processing
refactor argument handling to utilize a path - relativizer to improve accuracy in modifying file paths during execution
[ deconz ] improve deconz request performance ( # 10829 )
updated ShibbolethCompatiblePersistentIdGenerator to include an attribute attribute attribute attribute to enhance functionality for better attribute management in the application
removed duplicate @ Inject annotations in RequestValidationService . java to improve code clarity and maintainability
replaced direct message handling with a bundle for keyboard hiding messages to improve code maintainability and streamline keyboard message management
removed redundant line breaks in FileNodeProcessor . java and added clear / flush methods in MManagerBasicTest . java ; added database cleanup in MTreeTest . java to improve code clarity and ensure proper resource management during tests
updated NavigableMap and NavigableSet classes to improve code readability and maintainability
move testslurpfile ( ) to itest , since not quite a true unit test ( relies on classpath contain data file )
added @ FunctionalInterface annotation to several classes and modified visibility of the client variable to enhance encapsulation and indicate that the client interface is intended to be functional interfaces
refactor span retrieval logic into a dedicated method for improved code clarity and maintainability to enhance code readability and reduce duplication in span management
added support for DateWritable in Hive - 6384 and integrated it into the Hive schema to enhance date handling capabilities in Hive
updated regex pattern splitting in StyleConverter . java to improve readability and maintainability of the code
apps - 187 only parse positive double instead of parse error message
refactor column mapping logic in SemanticAnalyzer to improve clarity and maintain correct column count checks to enhance code readability and ensure accurate mapping of columns during query processing
refactor conditionals in WandScorer . java for improved clarity and correctness to enhance code readability and ensure correct score updates based on document conditions
clarify the example of exception handling in correspondence . compare by use an explicitly cod correspondence create with the new connection factory .
updated import statements in PaintSetEnabledDeadlock . java to use specific AWT classes instead of wildcard imports to improve code clarity and maintainability by specifying required AWT classes
initialized ` curPixVal ` to a default value and created a new test class ` WhiteTextColorTest ` to ensure consistent pixel value handling and verify the proper rendering of white text on a black background
replaced subTypes with supertypes for better clarity to improve the accuracy of type handling in the biome dictionary
change variable name from ` withinTolerance ` to ` exceedsTolerance ` in the cache write logic to clarify the purpose of the variable for better readability and maintainability
added test stability rules for specific flavors in TaplTestsLauncher3 . java to improve test stability tracking for specific platform scenarios
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
added a check to ensure logFileSuffix is not only non - null and not empty to prevent potential issues with empty log file suffixes
updated PythonBuckConfig . java for improved configuration handling to enhance performance and maintainability of the code
added methods to manage system shared library names in ShadowPackageManager to improve testing coverage for the addition and clearing of shared library names
fix meiligao decoder ( fix # 328 )
fix a nullpointerexception on power diode ( # 4341 )
modified the cache removal process to utilize an asynchronous task for triming the cache to improve user experience by providing feedback on cache size during operations
update the project to use the newer google common library , fix import issue .
fix issue while build access control unit test ( # 1935 )
add a new method scheduleperiodically ( ) to support anonymous call method in the scheduler
updated the file display activity to respond to item click on the list to improve user interaction by ensuring the file list is updated correctly when an item is clicked
added random file matching logic and improved exception handling in StreamUtil . java to enhance robustness by ensuring streams are always closed even when only one file is found
refactor create _ table _ with _ environment _ context to create _ table and remove unnecessary environment context parameter to simplify the table creation process and improve code readability
added an aborted flag to ensure thread safety in the start and abort methods to prevent potential race conditions when the track task is not started
updated indentation logic in multiple parser classes to ensure correct handling of indentation values to improve code readability and correctness in block parsing logic
fix : autoplay after autoplay in postfragment .
remove unnecessary check on opcode in framegenerator . java
added visibility for the collapse handle view in WidgetsBottomSheet to improve user interface by hiding the collapse handle when needed
added two new files , Issue475 . java and XSS . java , for handling HTML and JavaScript in the Jooby framework to support additional character escaping for HTML and JavaScript in the application
added a check for zero unit to prevent further processing when units to scroll are zero to improve performance and avoid unnecessary processing
updated condition in Manager . java to check for non - empty contract lists to ensure processing occurs only when there is contract lists and improve logic accuracy
added methods ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes for handling null values to enhance flexibility in adding and storing enum values in the JSON object
added hashCode method to IPPPrintService and created TestRaceCond class for validation to ensure consistent hashCode implementation for print services
call getversion instead of getinstanceversion in db2ddialect to make sure getversion always return the current databaseversion
added a condition to check if a transaction fee is greater than zero before verifying connection status to ensure that transactions are only attempted when a valid transaction fee is available
refactor BatchUpdateException , PreparedStatement , and Statement classes for consistency to improve code maintainability and readability
clear first subsample by adaptivereconfigurationbytes when buffer be empty .
removed public access modifier from several classes and methods inAntn classes to enhance encapsulation by restricting access to these classes within the same package
added import statements for Retrofit in Part and PartMap classes to enable Retrofit functionality in the Retrofit library
refactor JsonBuildHelper and ParamsBuildHelper for improved handling of generic names and object parameters to enhance the API parameter processing and ensure proper handling of single object types
added a new constant ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to ` AbstractFloatingView . java ` to enhance functionality by enabling overlaying features in the application
fix : update gapic - generator - java with mock service generation fix ( # 412 )
update alpha calculation logic in ClipAnimationHelper and add hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on task states
removed the boolean parameter from the createRenderScript method call to simplify the method signature for better readability and usability
whitespace change to trigger full ci build ( incl . regression test )
refactor code to encapsulate system bundle checks into a separate method for better readability to enhance code maintainability and reduce duplication when handling system bundles
reordered and rearranged import statements in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
replace some randomness value with a constant , and fix a typo
updated configuration handling in Overview . java to allow dynamic selection of specific motor configurations to enhance user experience by ensuring the most relevant configuration is displayed
ambari - 19066 . remove duplicate thread on agent host if host be remove ( dlysnichenko )
recordstore : prevent npe if the store do n ' t contain the value
kvm : fix npe in kvm agent setup ( # 4547 )
improve error message for miss name and value attribute
refactor constructor of BaseStubbing and ConsecutiveStubbing to accept an Object instead of InvocationContainerImpl to simplify object initialization and improve code readability
fix # 824 locationopener . getmethodline ( ) to strip params that may use a method
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the latest build and ensure version tracking accuracy
make sure we do n ' t iterate multiple get command for a single element
[ geot - 6542 ] symbolmblayer : use constant instead of string literals for option
apps - 2379 center and resize popups when there be no overlap
remove ` ` : ' ' from tool error message ( # 14202 )
added a new ` StartingWindowListener ` class and refactored the initialization of ` QuickstepTransitionManager ` to improve code organization and maintainability by encapsulating state management
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code documentation and maintain consistency with inherited methods
updated exception messages in CheckPackageAccess . java to specify PackageAccess and PackageDefinition security exceptions to improve clarity and accuracy of error handling in package access security checks
increase the termination time in the ThreadSafetyTest from 30 seconds to 90 seconds and added an assertion to verify that the test does not proceed after a specific timeout duration
changed the type of loggingEnabled from boolean to Boolean and added a null check before setting its value to allow dynamic configuration of logging logging based on user - defined settings
added @ JsonIgnore ( true ) annotation to Schema . java to prevent serialization of sensitive fields during JSON processing
phoenix - 5636 increase timeout for some test method in testnontxindexbuilder
modified the train method and updated the logLikelihood calculation in SimpleNaiveBayesClassifier . java to improve accuracy in classification results and ensure consistent logarithmic calculations
renamed CheckHelperModule to CheckHelperControllerModule and added CheckHelperAuditModule to enhance clarity and functionality in the audit / audit process
refactor Prototype class methods for better organization to improve code maintainability and readability
added a check for tableIsTransactional and assigned it to the SemanticAnalyzer to ensure that the table is transactional if it is not already set
[ java ] refactored recordingwriter . writefragment to use onblock instead of writefragment .
return empty cue instead of 0 when no cue be find
added alias field to datastoremetricqueryimpl to support query with alias .
updated currency pair types in VaultOfSatoshiBaseService from BTC / CAD to USD and added a new CurrencyPair for various cryptocurrency pairs to align with current trading practices and enhance system accuracy
hhh - 8526 : fix a classcastexception issue on the hibernate 5.3 test
move kafkaclient from kafka11 to zipkin ' s own package
added two new integration test classes , GwtBinaryIntegrationTest and A , to implement basic GWT binary building and compilation to ensure that the Gwt toolchain behaves correctly in the build process
modified conditional logic for loading cause label visibility in BrowserContentPane . java and refactored ResultSetRenderer initialization in SQLConsole . java to improve UI responsiveness by ensuring loadingCauseLabel only visible when needed and refactoring ResultSetRenderer initialization to handle potential exceptions during query execution
reformatted code in EnhancedRandomImpl . java for consistency to improve readability and maintainability of the code
added XMLSecurityPropertyManager initialization to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enhance XML processing capabilities by ensuring proper initialization and usage of XMLSecurityPropertyManager
added default methods to interfaces and implemented them in subclasses to demonstrate inheritance and method overriding with default interface methods
updated SQL query matching logic to handle " * " correctly to improve the handling of special characters in query matching
chore : change access modifier of dmlassemblerservice . getdmlProfiles ( ) from private to protect ( # 3668 )
fixed - node be n ' t execute on slave node . # 1378
refactor espressolanguage and static method for clarity and efficiency to improve code organization and enhance maintainability
replaced debug log statements with verbose log statements across multiple project generator classes to improve log granularity and provide more detailed logging information
fix queuing of fml packet payload . they be lose and release .
drill - 6510 : override the number of number of thread in web server to avoid hardcoded value
replace the handling of shortcuts to manage removed shortcuts more efficiently to improve shortcut management and ensure proper deletion of unpinned shortcuts from the workspace
remove redundant type check ( # 4340 )
removed the case for navigation back to the home button in DetailFragment to streamline user experience by eliminating unnecessary navigation functionality
added a check for AndroidMarket before proceeding withPlayServices to ensure play services are only included when the Android market is available
update TableBlockParser to handle leading spaces after a header to ensure proper parsing of tables containing spaces after the header for improved data handling
add bridgingHeader field and related methods to NewNativeTargetProjectMutator and AbstractAppleNativeTargetBuilder to support BridgingHeader handling during project generation
update the handling of unused methods and improve source path construction in PotentiallyDeadCode . java to enhance the clarity and functionality of source file management for better code maintainability
added diamond finder functionality and new classes for handling inferred types to enhance type safety and demonstrate the use of generic types in Java
replaced calls to ` getInvocationStageTrace ( ) . startSend ( ) ` with ` onStartSendRequest ( ) ` in multiple client filter classes to improve clarity and consistency in logging messaging
added a debug log statement to register cachemetrics using Solr ' s utilities to improve visibility into cache metric registration for better debugging
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error management by propagating authentication exceptions
modify the condition checking for zero in the float comparison to ensure accurate detection of zero difference between two float values
added " logback . dev . xml " to the list of paths in JoobyMojo and Main classes to ensure configuration files are correctly included in the build process
add a new class JaasEventCheck to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent to facilitate event logging for authentication failures and successful events in the application context
refactor animation logic in QuickstepTransitionManager to use a list of visible views to improve code maintainability and streamline view management during transitions
refactor ` ConjunctionSolrSpellChecker ` to use ` . equals ( ) ` for string distance comparison and add a new test class ` ConjunctionSolrSpellCheckerTest ` to improve string comparison logic and ensure correct exception handling for identical string distances
replaced HashMap with Map in ShadowSystemServiceRegistry . java to improve data handling by using a more appropriate data structure
[ hotfix ] remove unused constant in defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
agent : make script . timeout configurable ( # 9208 )
hhh - 5956 - fix regression due to fix for amq - 6903 - add schema name to table parameter
updated SQL update syntax in multiple classes to ensure consistency and correctness in SQL syntax
avro - 2657 . java : fix concurrency issue in schema type cache ( # 721 )
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy by preventing duplicate header additions
latticedemo : ignore the slow test due to file availability ( # 2709 )
added directory creation for storage in TestCollector to ensure the storage directory is available during tests
added a call to set chunked streaming mode in StarTreeJobUtils to improve performance by allowing larger data stream sizes
[ jsonschema ] add type validation test for jsonschema syntax
hbase - 27486 use protobuf library instead of protobuf from hbase - thirdparty
add a test for recursive structure with structural bounds in BeanPopulatorTest . java and create a Node class Node . java to ensure that stack overflow exceptions are thrown during node population in the populated Bean configuration
added IOException to getRemoteName method signature to ensure proper error handling for potential IO exceptions
updated error handling to include IllegalArgumentException and improved HTTP client creation in the UserAccountManagerImpl and ConnectivityServiceImpl classes to enhance error handling robustness and simplify client creation process
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to ensure proper registration and handling of method security interceptors based on aspectj mode
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by implementing proper hostname verification for SSL connections
added a ` remove ` method to the ` OHLCSeries ` class and modified the ` getDataItem ` method in ` OHLCSeries ` to enable removal of items based on their indices , enhancing data management capabilities
[ scb - 758 ] fix invalid usage of join method and fix test case
removed redundant variable assignment and improved joint handling logic in World . java to streamline the process of ensuring joints are properly managed and removed
fix nullpointerexception when there ' s no phone number filter
[ flink - 3798 ] [ test ] move sourcereaderbasetestbase class to testutils
added multiple error checks for document retrieval in DocumentsStorageProvider . java to improve robustness and error handling when documents are not found
added two new HookDefinition and JavaHookDefinition classes , including HookDefinition and JavaHookTest to provide a structured approach for defining hooks and testing within the Cucumber framework
refactor flushIfDeadlockRisk method for improved clarity and reuse of this method to enhance maintainability and reduce duplication of the code
updated setExoOptions method to accept a boolean parameter for live TV support to allow flexibility in setting exo options based on user preferences
remove the user from the identifier collection in DMRDecoderState . java to eliminate unnecessary user role references
added a constant INVISIBLE to the Color class and modified the toString method to improve code readability and ensure consistent color usage
fix count aggregation to ignore null handle query option ( # 7230 )
initialize deep variable to - 1 to ensure state consistency during transaction processing
added XML escaping to the name assignment in StreamInitiation . java to ensure that special characters are properly escaped in XML format
updated the work directory initialization to use a configurable work directory from the config to allow dynamic configuration of the work directory used in benchmarking
[ drools - 732 ] make deprecated rule set default
use codebuffer . position ( ) instead of label . newlabel ( ) to save memory
lucene - 5241 : add constant for min _ time , max _ time , and all _ time in timerange
refactor BitDocIdSet class for improved clarity and maintainability to enhance code maintainability and readability
refactored metric emission logic into a separate method called emitMetricsJson to improve code readability and reduce duplication in the connection handling logic
formatted code for better readability and consistency in DetailFragment . java and GalleryActivity . java to improve code maintainability and adhere to coding standards
block tank use fluid instead of fluid container ( # 3303 )
updated CsharpLibrary . java to include additional checks for RuleAnalysisLegacyBuildRuleView and modified Preconditions handling to ensure proper handling of rule analysis legacy rules and improve code clarity
of - 883 : when a user join an account , send an empty pep service to the system .
ensure that intrinsic graph be not null if no runtime be available
fix and re - enable metric tracking when active be not empty ( # 2782 )
pdfbox - 3656 : keep track of object id , a suggest by miroslav holubec ; close # 15
added constructors to LwjglApplet that initializes the canvas directly and removes the canvas from the application to facilitate the application lifecycle management and ensure proper application restarts
docker : remove registration of registry host , registry port , and registry email from log
modified the password policy handling logic in LdapAuthenticationHandler to streamline the authentication process to enhance code clarity and maintainability by consolidating password policy application logic
refactor Int2ObjectCache . java to improve performance and readability to enhance efficiency in object caching operations
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to utilize it to improve the handling of LDAP attribute resolution in LDAP authentication
refactor Readable class to improve code readability to enhance maintainability and reduce complexity
updated the method of loading a PDF document by replacing the custom builder with TestSupport for font handling to improve code clarity and simplify the document generation process
updated the icon resource for the share menu in CaptureActivity . java to improve consistency and maintainability of the menu ' s icon
jdk - 83130 : only check if jdk version be 1.8 or 1.9
fix # 634 - get this work for a non - jdbc 41 compliant driver .
genericcontainer : fix typo in javadoc ( # 3684 )
replaced Set with List for filteredList and updated import statements to improve performance and flexibility in handling collections
added multiple @ Override annotations to various classes to ensure proper implementation of interface methods
added new line parameters for consistency in ChartProvider . java to improve code readability and maintainability
fix : pick up the working directory in bibtex folder preference ( # 1499 )
modified JavacParser to return an empty list instead of a block statement to streamline the code by eliminating unnecessary empty block creation
added methods for querying users by time and after keyword in the User class to enhance user retrieval functionality based on creation time
8150433 : [ testbug ] jdk / math / biginteger / test15floatjniargs . java should be same - vm friendly
replaced hardcoded version strings with dynamic version identifiers to improve maintainability and clarity of version information
nifi - 7281 fix substring index calculation in mockprocesscontext . decrypt ( )
[ java ] make aeronarchive use ensurenotreentrant ( ) to enforce unentrant call to avoid incorrect resource allocation .
refactor dependency merging logic to check for null before merging dependencies to avoid potential NullPointerExceptions when merging dependencies
added a timeout of 10 seconds to the @ Test annotations in SslBytesServerTest . java to ensure tests have sufficient time to finish under heavy load
fix typo in peer peer description . resolve issue 284 .
updated ` RealtimeIndexingCoordinator ` and ` RealtimeSegment ` to improve segment management and naming conventions to enhance code clarity and facilitate better management of indexed segments
modified FailureWatcher to check if exportedData is null before calling writeTo to improve null safety and prevent potential NullPointerException during data export
update method for calculating scroll bar position and touch height in RecyclerViewFastScroller . java to improve accuracy of touch positioning and ensure proper visibility of the popup
update error messages to reflect restarting IntelliJ and add tool window initialization check to improve clarity of action running process and ensure actions are only executed when the project is properly initialized
added a check for Windows operating system before creating a JCheckBox to ensure the sleep feature is only enabled on Windows to avoid potential null pointer exceptions
updated servlet package imports from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java ` to ensure compatibility with the Jakarta EE specifications
refactor window cropping calculations in QuickstepAppTransitionManagerImpl to support vertical bar layout to ensure proper resizing of app transitions across different screen orientations
added full screen exclusive mode handling methods to XWindow and related classes to enhance fullscreen mode management for better user experience
clean up empty duration string and add unit test
added credentials handling for DAGs based on path aliases to enhance the functionality of managing credentials in different DAG types
camel - 7205 : use entryset to avoid inefficient use of keysetset ( )
trim whitespace from thread names when setting the name to ensure consistent and clean user experience by removing leading and trailing spaces
updated the warning message to indicate that the next point has been logged to a file to improve clarity by providing a more accurate link to the file being logged
refactor Job class to improve code organization to enhance maintainability and readability of the code
add two new abstract methods ` testUnusedType ( ) ` and a new abstract class ` Unused ` to demonstrate the use of ` AutoValue _ Main _ Unused ` to improve testing capabilities for unused type handling in the code
ambari - 21635 . upgrade hbase - server to 2.6 . 0 for ambari - server upgrade ( aonishuk )
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused interfaces to streamline the codebase
modified the return type of the performJoin method to List < GenericRecord > instead of GenericRecord to enable handling multiple output records for further processing
updated the maxDelegateLockPeriod validation and usage across multiple classes to ensure that the maxDelegateLockPeriod is always greater than or equal to 10512000 and maintain consistent behavior in the dynamic property storage
fix a miss nullpointerexception in the nics tab .
removed initialization from CmcExchange and added applySpecification method to CmcExchange to streamline the code by eliminating unnecessary service initialization and applying specification functionality
updated the seed configuration handling to check for IP addresses and changed the corresponding constants to improve flexibility in processing seed addresses and ensure the correct configuration is used
[ backport ] make hazelcast . client . tpc . enabled configurable and default it to false .
bump swagger - ui version for cve - 2019 - 17495 ( # 7902 )
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality of big integer operations and facilitate modular arithmetic
refactor the key initialization in NamedObjectList . java to initialize the buffer with an empty string if the name is blank to improve clarity and ensure a default key is used when the name is blank
replaced ` cleanupEmptyDir ` method calls with ` cleanupEmptyTableDir ` for better clarity to enhance code readability and maintainability by standardizing directory cleanup methods
refactor AsyncCache and Cache classes for improved readability to enhance code maintainability and ease of understanding
added import for RCFileInputFormat and registered it in SerializationUtilities to enable support for RCFileInputFormat in the serialization process
added default methods for retrieving Java types and categories from a column in TypeMapperComponent to enhance functionality for handling column types in the database
added error handling for invalid host headers in the Request class to ensure proper server response and informative error messages when the host header parsing fails
updated the test method to use ReflectionHelpers for TimeZoneFinder and modified the timezone retrieval logic to improve test accuracy and maintain compatibility with newer SDK versions
remove dead code , dead code move to standardop
lucene - 2618 : remove unnecessary field . segment , dir , and cfsdir from segmentreporter
hhh - 16979 use session . exists ( ) to check if the main transaction can be query
added error handling for invalid annotation declarations in InterfaceValidator . java to ensure proper validation and provide clearer feedback on annotation requirements in Buck rules
corrected the capitalization of " greek lowercase " , " irish lowercase " , and " turkish lowercase " in multiple filter factory classes to ensure consistent naming conventions for better readability and maintainability
fix javadoc warning from r1715839 bug 58365
[ ds - 4.0 ] replace lucenesearchrequestprocessor with discoverysearchrequestprocessor since 9.0
8254982 : ( tz ) upgrade time - zone data to tzdata2020c
updated SurfaceSyncGroup instantiation to include a specific " TaskBarController " to improve clarity by associating SurfaceSyncGroup with specific application context
datamongo - 2392 - fix delete method in gridfstemplate . deletefile ( ) implementation .
make shadowdownloadmanager aware of size and byteSoFar .
refactor the character handling logic in TextField to use a boolean variable for clarity to improve code readability and maintainability by simplifying conditional checks
groupnodeviewmodel : do n ' t update group cache when target = = null
added a method to handle statement termination logic in the block lexical context to improve statement processing accuracy and ensure proper termination status
added hashCode implementation in IntervalXYDelegate and HashUtilities for better object comparison to ensure consistent and correct hashing behavior for instances of XYSeriesCollection
fix the clientqueuereandexceptionstest to pass locally .
refactor logging methods and rename test methods for clarity and consistency to improve code readability and maintainability
replaced ` GsonBuilder . serializeSpecialDoubleValues ( ) ` with ` GsonBuilder . serializeSpecialFloatingPointValues ( ) ` in the specified method to ensure compatibility with float point data serialization
added multiple calls to ` HttpTestZenToken002 . java ` and ` WalletTestZenToken007 . java ` for block production handling to ensure proper synchronization of block production during tests
modified language tag canonicalization and added tests for language tags to improve accuracy in language tag processing and verification
cloudstack - 4438 : added configuration for kvm . ssh . to . agent global setting
refactor access modifiers in the ScheduledAction class and SchedulerWhen classes for encapsulation to improve code readability and maintain encapsulation
fix : wrong extension in emoji keyboard ( # 1104 )
added a condition to exclude comments from the filter in SimpleSearchQueryConverter to improve filtering accuracy by ignoring irrelevant terms
updated sort column labels to indicate the order of columns in BrowserContentPane . java to improve clarity of displayed labels for better user understanding
added a call to Arrays . copyOf ( in , 6 ) in Utils . java to ensure the input stream is properly configured for further operations
replace direct remote address writing with HTML encoding to ensure proper handling of non - space characters when writing remote address
[ type : fix ] fix item state trigger check ( # 3234 )
removed unnecessary synchronized blocks in FastHttpDateFormat . java to streamline code for improved readability and performance
added thread management for moving files to a concurrent map to improve performance by allowing concurrent execution of file movement operations
added two static methods for triggering a timer with a specified period in the WrapTimer class to enhance the timer functionality and flexibility in task execution
[ flink - 33546 ] [ table ] support localtimestamp and localdate type in generic interface
added verbose option to error handling in AbstractStatusReporter to provide more detailed error information during execution
update ClickHandler and ItemControls to include menu state checks to ensure better user interaction with the application menu when menu is displayed
s2svpn : do n ' t allow vpn connection to be esitablished between s VPN gateway and customer gateway
removed redundant exception handling in CursorReadingTask and updated test cases to improve error handling consistency to enhance code clarity and ensure proper exception management during exceptions
pdfbox - 3131 : check for encryption when create thumbnail , add log
[ 3.0 ] fix race condition when shutdown zk watcher
rename AnomalyDetectionResource and AnomalyDetectionResourceTest files for consistency to improve code clarity and maintainability
fix URI handling in HostsList . java for better functionality to ensure correct URI execution and improve item deletion behavior
refactor Java7Assertions and Conditions classes for improved clarity to enhance maintainability and readability of the code
changed the return type of the ` replaceOrderBulk ` method from ` Collection < ReplaceOrderCommand > ` to ` List < String > ` to improve method flexibility by allowing multiple order commands
refactor the ` enterDefault ` method to ` enterIdentNode ` and add a method to the ` Lower ` class to improve method clarity and handle different node types more effectively
added a new class J9ConstantHelper for accessing a long field and modified ObjectHash to utilize it to improve accessibility and maintainability by encapsulating the logic for retrieving long values
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent invocation behavior to ensure proper handling of exceptions during multi - threaded operations in Mockito
1 . when remove a user from the roster of a roster leave a session . move to the transport class .
updated properties retrieval in MapOperator and added a method to PartitionDesc to support overlayed properties in the metadata processing
updated method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency in method signature handling
added null check for extTypeCustomDesers in MessagePackFactory and created a test for the copy method to ensure safety against null extensions and improve test coverage for the copy functionality
# 396 fix issue with log no longer be controllable by - d jvm system
added a test annotation to AbstractRegistryFactoryTest to ensure that the test methods are recognized and executed by the test suite
removed the redundant JettySolrRunner instantiation from AbstractSolrMorphlineZkTestBase . java to simplify the code and improve maintainability by eliminating unused components
lucene - 6262 : fix testgroupsearch ( ) to actually update score map on hit
updated bitwise operations in U64 . java for better clarity and correctness to improve code readability and ensure proper comparison functionality
fix the font size in the mainviewmodel ( # 5358 )
updated notifyChange logic to include support for dark text to enhance notification behavior to account for additional dark text support
[ hotfix ] [ checkpointing ] checkpointing : remove redundant call to getlastpriorityrequest ( )
updated the maximum pool size and processor pool size in Parallel . java to optimize resource usage and improve clarity in thread management
changed the filter mechanism to anyMatch for providers in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver to improve performance by reducing unnecessary processing of input
[ github - 355 ] increase coverage of opencv factory test on window .
resolve http : / / issues . apache . org / activemq / browse / amq - 2840 - activemqconnectionfactorytest . java fail with integration test
fix the returnvalue ( ) method to throw a throwable
added a Repeatable annotation for Issues with a type and method to Issue . java to provide a mechanism for repeating issues with specific method and type annotations
updated userProps key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified import statements in BlueprintConfigurationProcessorTest . java to improve clarity of user property naming and enhance code readability
modify socket connection to use a unresolved address if socksProxyHost is not set to improve flexibility in connection handling based on system properties for connection settings
[ hotfix ] [ runtime ] fix checkstyle violation in slotstatus
removed the import of ClassUtils from ReflectionUtils . java to streamline dependencies for better code clarity
replace HashSet with LinkedHashSet for protocols and cipher suites in SslContextFactory . java to ensure insertion order is maintained for better predictable iteration behavior
added caching logic for system resource in Resources . java to improve performance by avoiding redundant resource fetching
increase the buffer size for plaintext segment in the channel to 16kb .
added a test for circuit breaker invalid fallback exceptions in ServerMvcIntegrationTests . java to ensure that the application properly handles and throws appropriate exceptions during circuit breakage
fix an issue with use sslcontextfactory in apppage ( # 3618 )
updated the PeranceTest class to set a setSizeLimit with a maximum of 0x7FFFFFFF to improve layout handling and prevent potential issues with reading the counter
moved the ` isPreferAES ` and ` setPreferAES ` methods to ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to consolidate functionality and improve code maintainability
( chore ) camel - opentelemetry : use logger instead of print to stdout
chore ( elb ) : remove no longer used test ( # 12979 )
fix the method name from ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to correctly reflect the method ' s purpose and improve code clarity
added error handling for file creation in DiacriticTest . java to ensure graceful failure and inform users about file creation configuration issues
hhh - 11553 - fix ioexception in ojdbc6 when use a driver other than oracle
added error handling for file not found in TextureUnpacker . java to ensure that the application does not crash when the atlas file is missing
added locking mechanism to ensure thread safety when modifying changed services in AmbariManagementControllerImpl . java to improve concurrent access handling and ensure accurate service state management
renamed FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes for clarity to improve code readability and maintainability
added test cases to verify that the ResultSet does not close the statement and modified query closing behavior to ensure proper resource management and prevent potential resource leaks in query result sets
increase bufferinputstream length and fix chunkedtest to also handle large image file .
added logic to remove previously deleted database entries from the schema map to ensure that only active schemas are retained in the system
fix bz 64467 - avoid flush empty chunkedwriter when send to h2c
updated the conditions to ensure the current item ' s ID matches the base item ID in EnhancedBrowseFragment . java and added a deleteItem method in FullDetailsFragment . java to ensure proper item deletion functionality and improve user experience with a confirmation dialog
refactor RuleFinder to implement RuleBank and update its instantiation to improve code organization and simplify style management
improve error message for jcatlscrypto # dofinal ( )
added new classes TestMonomorphicObjectCall and Object to implement and test JVM finalization using TestMonomorphicObjectCall to facilitate testing of object finalization and ensure proper cleanup of native objects
renamed the ` removeMetaDataSource ` method to ` toFront ` and refactored its usage in the DataBrowser and Desktop classes to standardize the method names for better clarity and maintainability
hbase - 24790 scanquerymatcher should check column family time range when seek ( # 1899 )
[ flink - 5008 ] [ network ] remove the need for root of a local state directory when use the network api
modified ` AlterTimeSeriesStatement ` to accept a boolean parameter for ` isAlterView ` and made it final to enhance flexibility in determining the type of view alteration
michaeltamm : correcting search of condition . matchtext ( ) , add test
added error handling when retrieving the routingTableBuilderKey from routingTableBuilderConfig to ensure robustness by handling potential exceptions when retrieving the routingTableBuilder
allow @ client with null value in parammap . putifabsent ( )
[ camel - sjms ] use char instead of string for password in test
bug 9665 : search for domain in subdomains do n ' t allow to specify subdomains ( domain be search ) .
modified the equals and toSortedListWithCounts methods to use ` ! = ` instead of ` Math . abs ` and added unit tests for count comparisons to improve correctness of count comparisons and ensure unit tests validate expected behavior
refactor the ` initialize ` method to accept a ` original ` status instead of a ` status ` object to improve clarity and maintainability by allowing the original status to be created
sulong : fix getcurrenttimemillis in llvm64sulong .
[ jdk9 ] prettyprinter : fix for ` ` var ' ' expression
added null check before initializing indexToNode when necessary to ensure indexToNode is properly managed and avoid potential NullPointerExceptions
8053963 : ( dc ) use datagramchannel . receive ( ) instead of read ( ) in connect ( )
updated JUnit imports and annotations from ` org . junit . Before ` to ` org . junit . jupiter . api ` in ` TestQueryDNS . java ` to utilize the newer JUnit 5 framework for improved test structure
added a new class NutchServerInfo with properties for start date , configuration , and running job information to provide a structured way to access Nutch server configuration information
replaced custom token attributes with AttributeSource instances in EdgeNGramTokenFilter . java to improve code maintainability and simplify attribute handling
added timestamp handling to CqlInserter and ThriftInserter for tracking and writing to ensure correct timestamp representation based on user - defined settings
updated DSAParameterGenerator logic to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and maintain consistency in BigInteger usage
more readable code to make some bit more precise for numberutils ( ) / getlongbits ( )
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for new IP address ranges
added logic to check for constraints in DefaultJdbcOptimisticLockingExceptionMapper to improve handling of constraint violations in database operations
[ issue # 5630 ] fix bug for delete request header ( # 5631 )
added overloaded methods for creating and inserting tabs with specified parameters in a single method to improve code organization and facilitate easier tab management
[ iotdb - 5734 ] fix some ide warning and array creation in hdfs module ( # 7765 )
[ flink - 20594 ] [ runtime ] inject taskmanagerruntimeinfo to mockenvironment for testing
refactor return statements in MavenVisitor . java for better clarity and consistency to improve code readability and maintainability by standardizing conditional checks
updated test strings from " MOCK _ NAME2 " to " MOCK _ NAME _ UPDATE " and added new test cases for this to improve clarity and consistency in test naming conventions
added a new test class FormatCheckingTest for verifying class format errors to ensure that the application correctly identifies and reports illegal class names during execution
updated line number assignment logic in CodeGenerator . java to enhance clarity and maintainability of line number handling
added a try - catch block around the retrieval of configuration properties to handle potential exceptions when accessing configuration properties
added methods to create toggle components for a RadioButton to enhance user interaction with RadioButton components
updated LinkedHashMap initialization to use a specified cache size and increased chunk metadata cache size to improve cache management and optimize memory usage for better performance
int - 1257 , int - 1263 updated org . springframework . integration . bus . internalmessagebusparser to allow cap to be set on channel
camel - 13067 : avoid potential npe in osgiservicenamestrategy ( # 2729 )
add the parameter ` ` usemode ' ' to applet and base mode contrib ( fixes # 950 )
[ flink - 22085 ] [ yarn ] add additional logging when add shutdown hook to iomanager
rename ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` and related classes to improve clarity by explicitly indicating the purpose of the manifest path
updated AbstractMessageProducingHandler to ensure selectiveHeaderPropagation is set only when notPropagatedHeaders is not null to improve null safety and prevent potential NullPointerExceptions
refactor CompareMode class to improve comparison logic to enhance performance and maintainability of the comparison algorithm
added HasTests interface implementation to Arg class and introduced tests field to enhance test management capabilities within the Rust build process
updated placeholder and error drawable resources in FileMessageVH . java to improve consistency and visual appearance of the recent image placeholder
updated OnExitTest . java file to improve test coverage and fix existing issues
added a method to recreate the taskbar when user preference changes to improve user experience by ensuring the taskbar is refreshed when the user preferences change
updated heap dump methods to accommodate IBM VM to ensure compatibility with different JVM implementations for heap dumps
camel - 2077 : ensure camel - example - mybatis should ensure the session be close even if an exception occurs .
simonstewart : fix gump build for ie . need to rework gwt to work on window .
refactor iteratorsToFor annotation to use the @ TriggerPatterns annotation and remove redundant null initialization to improve code clarity and ensure consistent variable initialization
properly set state of jmxapplicationprovider to unavailable
updated buffer manipulation methods to ensure correct position and limit checks to improve code robustness and prevent potential assertion errors
removed unnecessary ` toUri ( ) ` method call from ` split ` method in ` ConditionalResolverMergeFiles . java ` to streamline code and improve readability by eliminating unnecessary URI conversion
added setEmpty methods for various array handling classes to improve array management and ensure consistency when setting empty states
[ java ] make protocol and transport enum public to allow to work with osgi .
testmultipointquery : fix broken test by check if a field exists
# 818 improve handling of offline payment method in reservation controller
added a timeout thread check to ensure the onTimeout callback is called on the correct thread to enhance thread safety and prevent potential race conditions during timeout events
replaced printStackTrace ( ) method calls with detailed logging in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , ServerTimeoutsTest , and ServerTimeoutsTest to improve log detail for better debugging and traceability
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
fix ( storage ) : use local _ quorum when read from storageproxy
added a check for " Home " in the model manufacturer condition to ensure compatibility with additional service models in the discovery logic
added a new ` Wait ` class and related functionality to support SQL parsing with a specified timeout to enhance SQL statement handling and allow customizable wait time in SQL syntax
refactor Neo4j to utilize AttributeController for managing node and edge attributes to improve code maintainability and enhance attribute management capabilities
added null check for serverName in SessionManager . java to ensure robustness by avoiding potential NullPointerExceptions
nifi - 6703 - move rocksdb metronome class to controller . repository so it can be reuse and prepare for migration .
updated the method to retrieve the grantable boolean from results to improve code clarity by leveraging result handling
fix issue with url in window . fix http : / / github . com / codenameone / codenameone / issues / 2208
( chore ) camel - cxf : fix the test on macos
hbase - 7710 loadtesttool do n ' t use default cf when load column for non - existing cf
added implementation of Disposable interface to Texture class to ensure proper resource management and prevent memory leaks
updated WebappRegistrationCustomizerImpl to use WebBundleDeployerHelper and added null checks for tldBundleLocation to improve robustness and ensure proper handling of null values
update goquorum compatibility check for genesis file ( # 6269 )
replace IOException with Throwable for handling errors in HttpInput . java to improve error handling by suppressing suppressed exceptions during HttpInput failures
added a condition to skip the " JP " pattern in the locale checks to address potential issues with era representation
updated API operation references from ` HostResponse . Wrapper ` to ` HostResponseWrapper ` and ` ViewPrivilegeResponseWrapper ` to improve consistency and clarity in API documentation
updated equality and hash code calculations in FilteredQuery to include boost value to ensure proper comparison and hash calculation based on boost factor
formatted the constructor of FileMenuFilter for improved readability to enhance code clarity by applying consistent formatting
ticket # 4810 : optionally show symbol editor element , generalize geos in a text editor
add a new Java file for testing CMS class unloading behavior in a garbage collection scenario to verify that the CMS class unloading is disabled and the full GC is triggered correctly under specified metaspace and young generation sizes
fix npe from empty spongepowered . api . entity . entity
updated ` ColumnMapKeyPreparedStatementSetter ` to ` ItemPreparedStatementSetter ` across multiple files to standardize the naming convention and improve code clarity by using a more appropriate class
make sstablesstablescanner more strict by use identityqueryfilter
added error handling for invalid resource attributes in MiniAapt . java to improve robustness by providing clearer exceptions when parsing invalid resource attributes
add spel support to soul plugin ( # 1074 ) ( # 1074 )
fix type comparison for ordinalitySymbol in localexecutionplanner .
bugfix # 209243 , make sure that defaultprofiler be load by the event dispatch thread in the event queue
updated Conscrypt - related classes and modified the import statements in ConscryptTest . java to improve code clarity and maintainability by utilizing consistent assertion methods
remove warning log when fail to resolve attribute lookup in assetmanager9
updated the source and target options in SetupHid . java from 1.5 to 6 to align with new version requirements for HID configuration
[ calcite - 3733 ] pushprojectanddocasrule optimization change to only push project - to - table - scan
updated AboutActivity to sort localized names before setting the layout to improve user experience by displaying relevant names in a sorting order
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 725 )
added a conditional check for live streaming before saving the refresh preference in HomeFragment to ensure the refresh action is only triggered when live streaming is active
hhh - 12192 - add cause to the exception to be log when a custom auditstrategy can not be create
( chore ) camel - file : fix flaky test ( # 12488 )
updated generic type declarations to use wildcard generics in CompositeType and related tests to enhance type safety and eliminate raw type usage
added transport support check in GitClientApplication and modified repository URL handling in RepositoryUrlPanel to enhance protocol validation and ensure repositories are validated correctly
added a new logging mechanism for long press navigation handle enabled and updated the delegation name retrieval in various input consumer classes to improve traceability and clarity of gesture handling in the application
refactor availableVersions initialization to handle null MavenMetadata and apply upgrade logic to improve code robustness and avoid potential NullPointerExceptions
8235435 : gc / g1 / testlargepageuseforheap . java fail when there be no page support
bug cs - 15425 : do n ' t create event migration for cloud _ usage db if the db do n ' t exist
bug 54161 - add windows specific path to test parameter directory
implemented a new test class for ObjectStreamClass functionality to verify serialization and deserialization behavior with custom objects
simplified null checks in ZoneAwareDiscoveryFilter to improve code readability and maintainability
changed log level from error to warn for OpenTracing failures to better reflect the severity of the tracing issue
added a toString ( ) method to the Generator class to provide a meaningful string representation of the generator registered count
refactor URI handling logic to improve quote extraction logic to enhance code readability and maintain correctness in URI parsing
added a check for null or empty resource lists in ClusterControllerImpl . java to improve error handling for missing resources and ensure proper exception management
refactor response handling in AccepttoApiUtils . java to improve error logging and return a new HashMap to enhance response error handling and ensure proper decoding of API responses
remove unnecessary allocation in vertexbufferobject for app version below 5
applied patch from oliver jowett to well handle null value in the javadoc
hive - 7594 : skip eager negation of join for hashjoininfo ( vineet garg , review by gopal v )
added a method ` getStringDistance ` to return the value of the ` sd ` variable to provide external access to the ` sd ` variable for improved functionality
added new flags for PendingIntent and modified methods to use mutable PendingIntent to improve permission handling and ensure proper push notifications on supported Android SDK versions
hive - 24446 : insert / modify modify read column id into filesystem if not already set ( ashutosh chauhan via prashanth j )
updated method calls to use the IPv4 multicast address instead of the UPNP address to ensure compatibility with IPv4 multicast functionality
added multiple instances of DisplayTemporaryToast ( ) with multiple calls to display a toast message to improve user experience by providing temporary toast messages
add version handling logic to ServiceModule and a unit test for it to ensure correct service version resolution when both parameters are null
added a new test class RawSerializationTest for Gson functionality to ensure correct JSON serialization of various collection types with Gson
simonstewart : implementing ssl cert generator for selenium server to allow the generation of ssl cert
updated the iteration method for displaying replies in the ExpansionViewHelper to use an index - based approach to set padding for the view to improve readability and ensure proper layout spacing
increase expiry time in test .
added a new test method ` testNGramFilterPayload ` to validate the functionality of token processing with the NGram payload attribute to ensure that the token processing correctly handles and processes the expected payload format
modify AclImpl . java file to enhance functionality to improve user authorization checks
added a new test method to verify different array sizes in EasyRandom to ensure correctness of the array size generation logic
bug 10385 : fix a nullpointerexception in citrixresourcebase . java when stop a vm
added a ThreadLocal for managing tryWriteAgain during SSL connection handling to improve thread safety and prevent redundant running of SSL operations
refactor actor handling and add ancestorsVisible method to improve clarity and functionality of visibility checks in the Actor class
log roll - update step failure for easy troubleshooting
[ flink - 13227 ] [ table ] add miss @ nullable annotation to sinkfunctionprovider . of ( ) javadoc
added exception handling for username not found exceptions in DaoAuthenticationProvider and introduced a new event in LoggerListener to improve authentication error management and provide better logging for user password issues
refactor AtMostXVerificationTest class for improved clarity to enhance maintainability and readability of the test
update default QType references to use the new default name and improve sorting functionality to ensure consistent defaults and improve test accuracy regarding query parsing
updated SimpleDateFormat instantiation in WeekDateTest . java to specify locale for date formatting to ensure consistent date formatting across different locales
fix ( demo ) : missing isinitialized method in ilanguageserver
updated the test to use a boolean parameter ` shouldHaveIdToken ` instead of ` idToken ` and modified the assertion logic accordingly to improve clarity and correctness in the test by making the assertion more descriptive
added transaction management methods to the DatabaseAdapter and enhanced error handling in GncXmlHandler to improve transaction management and ensure robustness against database operations
replace byte array with ByteArrayOutputStream for reading from input to improve memory efficiency and reduce memory usage
no - jira - update messagingtemplate so that the reconnection loop can be control by the handling of exception message
fix autoformatvisitor do not work on file that be already in compilationunit
updated TestIndexWriterMergePolicy to set maximum buffered documents and RAM buffer size to improve performance and resource management during indexing operations
clear the witness list in Manager and add a test for updating witnesses in ManagerTest to ensure proper functionality and testing of witness capsules
fix arrayindexoutofboundsexception in copyonwritemap # getvalues ( ) when there be no key
mahout - 887 - eliminate duplicate logging of version and environment
added collection reindexing and updated metric assertions in BasicAuthIntegrationTest , modified stream processing in DaemonStream , and improved authentication handling in BasicAuthIntegrationTest to enhance test accuracy and performance by utilizing multithreading for stream submission
replaced HashMap with LinkedHashMap for nodes in DependencyUtil . java to maintain the insertion order of nodes
add internalerrormapper to jerseysupport to return 500 when unable to retrieve internal error
replaced repetitive header validation logic with a new method ` validateHeader ` to improve code readability and maintainability by centralizing validation logic
added a switch - case structure to systemProperties for handling different Java class types to improve property management by accommodating additional system properties
changed method parameters from ` String ` to ` CharSequence ` in ` StringSubject ` and added tests for character sequence handling to enhance flexibility in string comparisons and improve testing for character sequences
8272137 : [ testbug ] enable jfr intrinsics for checkgraalintrinsics
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated DataSource assignment logic to use ds2 instead of ds to ensure that the correct data source is used for compaction and improve configuration handling
refactor DeploymentOptions to improve code readability to enhance maintainability and facilitate future development
fix invalid position in updatetextbuttonwithdrawable ( ) .
updated resource management in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream to improve performance and reduce memory usage when parsing YAML files
added support for the coalesce function in RexNodeConverter and SqlFunctionConverter to enhance the functionality for processingalesce expressions in Hive
camel - 7028 : camel - hlv7 : cleanup unused test method from camel - unmarshal to camel - unmarshal
updated JavassistProxyFactoryFactory to use the context class loader and restored the context class loader to ensure proper class loading and improve error handling during proxy factory generation
modified DefaultDateTypeAdapter constructor to accept the format parameter and synchronized the serialize and deserialize methods to improve thread safety and reduce the risk of race conditions in date handling
refactor method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to encapsulate URI handling and query initialization to streamline code for better readability and maintainability
added a method to filter old entries based on specified entries size to ensure that the size of old entries does not exceed the specified limit of 50
hbase - 8594 close ( ) log level should be warn ( liu shaohui )
[ gr - 4906 ] make nodemap . getvalues ( ) a class of nodemapiterable .
updated import statements for RouteDefinitionLocator to reflect the new package structure to improve clarity and maintain consistency in naming conventions
added a check for non - empty fields before adding operations in MongoRecordReader . java and modified return value logic in RexToMongoTranslator . java to ensure operations are only added when fields are not empty and improve SQL type validation for limit operations
of - 2030 : display admin panel name when there be no admin
replace MultiFields with SolrIndexSearcher for term retrieval to improve performance and memory efficiency in term handling
improve tostring method of the bean to include also the identity hashcode .
removed unnecessary line number check before obtaining the primitive type in GroovyParserVisitor . java to simplify the return statement and improve code readability
remove uninterruptible ` hashcode ( ) ` , not need .
test fix : do n ' t hang on slow machine sometimes .
add a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level documentation and improve code organization
update read length calculation in MessageUnpacker . java to ensure correct buffer size handling to improve readability and prevent off - by - one errors in buffer processing
align test with new io . micrometer . core . lang nullability
updated SQL query to include user filter in IconDB to ensure icon retrieval is user - specific for data integrity
[ issue # 2800 ] fix the async send size npe ( # 2800 )
make the resource whitelisting logic more robust by only accounting for whether the resource be only whitelisted
fix baremetal foreign key after upgrade ( # 441 )
removed the IJava2DRenderer interface from the Java2DRenderer class and modified its implementation to streamline the class structure and eliminate unnecessary dependencies
add ontearDown to audio sink listener for offload buffer empty
added scheduling functionality for upstream tasks using a ScheduledThreadPoolExecutor to improve task scheduling efficiency and manage execution time based on dynamic delays
refactor StreamType class to improve method organization to enhance code readability and maintainability
updated assertion message to include context for the assert condition to improve clarity of assertion failure message for better debugging
updated FilestorePage and RootPage to use UserModel and improve message formatting to enhance code clarity and ensure proper user handling during view authentication
camel - 9014 : ignore the test till i figure out why it fail on ci box
updated method signature to use the declaring class of the Lifecycle class to improve type safety by ensuring compatibility with inherited classes
updated resource keys for leftButton and rightButton in OfferBookChartView . java to reflect the correct functionality and focus on the pressed offer book
camel - 7767 fixed the issue that methodbasedrouter do not work in osgi environment .
update comment and method signature of block . ( # 450 )
removed Serializable interface from BTreeMap and updated tests to use NotSerializableException to improve exception handling during serialization and enhance test coverage for serialization scenarios
improve error message if a startup exception occurs ( # 2921 )
reformatted conditional logic for command mode checks in Main . java to improve readability and maintainability of the condition
replaced the method call to ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` to ensure the correct file index is retrieved from the list
deleted the PlainVerifier . java file to the functionality provided by PlainVerifier is no longer needed
added a condition to close system windows when triggeredFromAltTab is true to ensure proper handling of system windows related to the Alt tab
updated dialog handling in DialogFragmentIT . java and OCFileListBottomSheetDialog . java to improve dialog management and ensure proper visibility during interactions
updated charset parsing to use UTF - 8 encoding in RestAdapter and MimeUtilTest to ensure proper handling of special characters in mime types
added a call to the superclass ' s deinitialize method to ensure proper initialization of the TextField component
replaced serialization logic in LogFormatTest . java with a utility method from TestUtilities to simplify the serialization process and improve code maintainability
fix : wrong interval in group by ( # 737 )
modify array size validation logic and add handling for negative lengths in JAXWSExceptionBase . java to ensure proper exception throwing for negative array sizes and improve argument list management
test : migrate ctunresolvedimporttest to junit 5 ( # 4422 )
updated thread join duration from 10 seconds to 60 seconds to allow for a longer wait time before the thread execution completes
[ flink - 24370 ] [ test ] change the default scheduler scheduler scheduler to pipelined region
added support for setting and retrieving the title in ShadowActivity and updated @ Implementation annotations to use i18nSafe = false to improve functionality and ensure consistent behavior of UI components
replaced Apache Commons Logging with POILogFactory for logging in POIFSFileSystem . java to improve logging functionality and maintain consistency with POI - specific utilities
improve clarity and functionality of motion detection handling in ipcamerahandler .
add removal latency to map - delete task ( # 19594 )
refactor status handling in Response . java to use a switch statement to improve readability and maintainability of the code
updated CheckResourceKeys to find and process JavaFileManager locations for finding Java files to ensure accurate javac locations are found and improve error handling during file retrieval
add project - name for stable channel support ( # 1235 )
added a new test class DeprecatedStubbingTest to verify the functionality of stubbing and interaction in Mockito to ensure that deprecated methods are properly implemented and tested in the mocking framework
updated import statement from org . eclipse . jetty . server to javax . servlet . DispatcherType to ensure compatibility with the latest Jetty API and improve code clarity
add coverity test for doi + add test for new structure element
add boolean system property to allow rsa key exchange in fips mode
close the bufferedreader after parse it . this fixes # 264
refactor OAuth service initialization and deletion methods to use an oAuthService and its handleId to improve code consistency and facilitate access token deletion management
updated interpolator methods in TaskbarEduView to use EMPHASIZED instead of AGGRESSIVE _ EASE to enhance animation smoothness and consistency with the new animation framework
added UpdateRegionLocationPlan to manage region migration logging and improved logging visibility to enhance monitoring capabilities and provide clearer insights during region migration
added a new file ` FileDialogLeakTest . java ` that tests the finalization of ` FileDialog ` to ensure proper resource management and prevent potential memory leaks during file dialog finalization
hbase - 9870 add test for the new coprocessor ( addendum )
[ gr - 37130 ] prevent access to uninterruptible implementation method in svm .
[ flink - 30397 ] [ protobuf ] fix out - of - order byte exception in pbcodegenrowserializer
updated condition to check if the dimension ' s disi is not null before proceeding to ensure that the dimension validation logic correctly handles cases where the dimension is not available
updated methods in ExoPlayerTest , DynamicConcatenatingMediaSourceTest , and FakeMediaSource to improve synchronization handling and source info updates to ensure thread safety and improve consistency in media source updates
fix tck failure on jdk 9 - ea
updated FileReporterTest to cast null to String and to ensure proper type handling when passing null to the FileReporter constructor
updated the condition for checking end - to - end encryption keys in SettingsActivity . java to ensure correct logic for end - to - end encryption functionality
added menu item handling in DirectMessageConversation to improve user navigation and back navigation based on the selected item
added GET _ USER method and updated PROTOCOL _ VERSION from 5 to 6 in multiple files to enhance user handling capabilities in the application
mssql : add @ enableifsystemproperty to testjdbcpluginwithmssql to account for 64 - bit platform
updated the handling of class not found in WhiteboxImpl to maintain the original start class reference to improve code clarity by using a temporary variable for the original class
add local to try - with - resource to be able to support try - with - resource
replace ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl . java ` to ensure consistency in accessing the correct asynchronous context
failure to change look and feel of drool to the nimbus look and feel ( # 3749 )
patricklightbody escale the regex use , so that the version number be always 1.2 % valid
updated animation listeners in LauncherAppTransitionManagerImpl to improve animation handling to ensure correct visibility and state management during app transitions
updated the exception message from ` base58 ` to ` version ` in ` DumpedPrivateKey . java ` to provide more context for the error by including the version
fix a typo in the code block to ensure the correct data reference is used
updated the milestoneParameters initialization to use WicketUtils for handling open tickets or repositories to ensure the correct parameters are instantiated based on whether the milestone is open or not
pipe : remove max _ fps for item pipe ( # 4317 )
added a helper method to get a cluster key with both cluster name and blueprint name to improve code clarity and facilitate access to cluster - related data in the state machine
added a default value of ` downgradeAllowed ` to ` UpgradePack ` and created a test for its downgrade functionality to ensure upgrades are correctly validated and validated in the upgrade process
updated XML scanning methods to use NameType . ATTRIBUTENAME instead of NameType . ATTRIBUTE to ensure correct identification and processing of XML elements and attributes
add a configuration for emulate system load library to allow emulate system loading behavior in the application
updated sorting and sorting methods to use a custom comparator instead of a static comparator to improve code maintainability and consistency in app name comparison
added code to ensure the output stream is created if it doesn ' t exist to enhance resource management and prevent potential file creation issues
improve the failure message for testsecretkeyCredentialhandler . testsecretkeyCredentialhandler ( ) .
camel - 14745 : camel - example - spring - xml and camel - spring - xml now use the spring context in the finder .
[ hotfix ] [ doc ] improve documentation for metric - based reporter configuration
hbase - 185207 fix the test case which be break by the refactoring of testfulllogreconstruction
added override methods for DatagramSocketOptions to support buffer size and traffic class to enhance flexibility in DatagramSocket configuration by allowing specification of reuse address
fix serverconfig . shutdown - message typo ( # 768 )
[ java ] remove a deprecate locatable interface from the internal package
updated error message formatting to clarify field specifications to improve error messaging for better readability and debugging
replace the ` equalityPredicateColumns ` variable with ` predicateColumns ` for improved naming consistency to enhance clarity and maintainability of the code by using a more descriptive variable name
no changes made to the code logic in HandshakeHandler . java to maintain consistency in code formatting and improve readability
fix formatting of closing brace in Navigator . java to improve code readability and maintain consistency
fix access modifier of constant in recordreaderfactory ( # 7042 )
added support for ` GREATER _ THAN _ EQUAL ` and ` LESS _ THAN _ EQUAL ` query criteria in ` MongoQueryCreator ` to enhance query capabilities for handling date - time comparisons
refactor SQL parsing logic to simplify group by expression checks and improve error handling to enhance code clarity and maintainability by reducing complexity in group by expression validation
add safe unmap / close method to filechannellinespliterator to release memory
refactor code to utilize a validator object for improved readability to enhance code clarity and maintainability by reducing repetition
added a schedule method to CircuitBreakerImpl and updated related test cases in CircuitBreakerTest to improve control over asynchronous execution and timeout handling in the circuit breaker logic
removed the FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS flag from intent flags to simplify the intent configuration for better readability and maintainability
rename configuration to be consistent with the name of the property in the section .
updated the @ DisplayName annotation and added a @ Disabled annotation for column privileges in TableExtRetrieverTest . java to clarify the test ' s purpose and ensure proper test execution
fix concurrent issue with entitygraph export count
updated import statement for IntRangeUtil1 to IntRangeUtil . requireNonNegative to ensure compatibility with the new static method for IntRangeUtil
modified HttpParser to handle illegal characters more accurately to improve error handling and ensure correct byte conversion in HTTP header processing
updated the content view from trends _ activity to configuration _ activity to reflect the correct activity design for the configuration settings
fix for nutch - 108 : print the srw document everywhere
updated the ` ForceLeaderTest ` to utilize ` TimeSource ` for testing and added a new test class for verifying the use of Tlog replicas to enhance the reliability of leader document assertions by allowing timeouts during tests
update Thread class to improve thread management to enhance performance and stability of concurrent operations
add an option to force the template mode for html , html , text , and atom ( # 605 )
camel - 8034 fixed the issue of camel - cxf with the namespace attribute set
formatted code by adding spaces in YamlRepresenter . java to improve readability and maintain consistent formatting
updated date formatting in ToChar . java to use String . format for better readability to ensure consistent date representation and avoid potential null pointer exceptions
added configuration validation for transaction lists and write IDs in GenericUDTFGetSplits . java to ensure transactions are correctly set based on valid and writable IDs
replaced ArrayList < String > and ArrayList < TypeInfo > with Collections . emptyList ( ) for column and column types to improve code efficiency and readability by using emptyList ( ) method
refactor book path handling and add a method to check for null book path before loading to improve robustness by ensuring the path is valid before attempting to access it
refactor SSTDeserializer for better readability and consistency to improve code maintainability and ensure proper handling of Unicode strings during data processing
introduced a default grid column constant in AppPreferencesImpl and updated usages in ExtendedListFragment to improve code clarity and ensure consistent handling of grid columns
updated the return message format in Platform . java and ComparisonFailureWithFieldsTest . java to clarify that line contents matches but but line - break characters are mismatched
add back waitingforkeys to decoderinputbuffer .
fix the api path for the account cli
replaced repeated calls to ` line . getX1 ( x1 ) ` and ` line . getY2 ( y2 ) ` with ` line . getX1 ( y1 ) ` and ` line . getY2 ( y2 ) ` in ` LineUtilitiesTests . java ` to improve the accuracy of line positioning checks
updated varargs handling in JavacParser and added new classes VarargsAndOldArraySyntax and T6569633 to improve syntax correctness and clarity for varargs and old array syntax
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
added support for method references in the VariableContext to support method expressions to enhance the flexibility and correctness of variable manipulation in the JavaScript engine
[ gr - 27433 ] make sure we can parse invalid profile string .
updated buffer limiting logic in Piece . java and SharingPeer . java to ensure correct buffer size based on the current position
added HttpClientProperties and responseTimeout property to NettyRoutingFilter and related classes to enhance HTTP client configuration and timeout handling
updated NativeLinkTargetGroup and NativeLinkTargetGroup to improve code clarity and consistency to enhance maintainability and ensure correct usage of native link targets
camel - 15581 : camel - rest - add unit test base on user forum issue
added field access handling in ASTConverter and RexNodeConverter for better expression processing to enhance the functionality and correctness of field access in Hive queries
[ log4j2 - 1349 ] querylogger : avoid allocate temporary object ( # 10780 )
check for no proxy when generate relative uri ( # 8703 )
updated PKCS12KeyStore and StoreSecretKeyTest to handle certificate entries more effectively to improve certificate processing logic and ensure proper handling of certificate collections
refactor reflection access checks and introduce a new method for determining reflection access to enhance security by ensuring proper access control for reflection operations
removed the public access modifier from the constructor of CollisionMap to enforce encapsulation within the package
deprecate getrawrawtransactioninput ( transactioninput ) , with a proper null check
[ scene2d ] use a switch statement for level name to avoid a npe .
server : remove the need to pass the region id into the user insert statement
bug 60284 : give a good error message when try to encrypt an old Excel file
[ gr - 34801 ] enable native - image - builder on travis ci .
removed unnecessary else block when setting visibility of image to streamline layout management for improved user experience
increase sleep time to avoid all failure .
refactor file handling in ShadowContext and improve directory deletion logic in ContextTest to enhance code clarity and maintainability while ensuring proper directory management
replaced the custom exception factory implementation with a generic class loading mechanism to improve exception handling and simplify the code
updated WAIT _ TIME _ MS from 10000 to 60000 to extend wait time for improved synchronization
updated ConnectOAuth2RequestFactory to utilize an AUD parameter and modified JWTClaimsSet builder to use the new audience specification to enhance request handling by incorporating additional audience information for better authentication support
camel - 14171 : camel - kafka - add conf to break on first error
added a new constant selectableItemBackground to the R . java file to provide a standard background color for selected items
replaced multiple specific imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and prepare for future stop order functionality
updated the assignment of eventType to use the existing record conditionally to ensure accurate event handling for empty entries
[ gr - 29062 ] add resumable random accessfilelistener to throttle request .
replaced " AccessLogValve $ 3 " with " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java to ensure correct package naming for access log functionality
fix bug # 54533 - when format a sheet , set the format to the first row of the workbook
[ flink - 33060 ] [ kafka - connector ] deprecate messageid - producer in favour of kafka producer
[ java ] check max compress length within inputstream when need .
camel - 11794 : camel - spring - data - redis : add idempotent operation to camel - spring - data - redis component
fix patch in containerrepair to use metadata instead of damage .
[ mng - 6377 ] only apply version to local repository in legacylocalrepositorymanager
add a check whether ` localtaskmanager ` be fully initialized before start it ( # 1850 )
added detailed informational options for deployment in AbstractArtifactResolutionException to enhance clarity and provide useful information during artifact resolution
refactor file path construction to use a new method ` getInternalTemporalPath ` to improve code clarity and maintainability by centralizing the temporary file path logic
updated FeedEntryStatusDAO to use Commons libraries and added a new method for retrieving feed entries by their entries to improve code maintainability and align with the latest library structure
added methods to execute blocking in VertxThread and refactored corresponding tests in BlockedThreadCheckerTest to improve thread management and ensure proper execution behavior in Vert . x
updated the ` FormatterConverter ` methods to accept a ` String ` instead of a ` Class ` argument and added a new ` convertOrNull ` method to improve clarity and enforce input validation for the ` formatter ` argument
updated file input handling in LoadContactsTask . java to support different Android SDK versions to ensure compatibility with newer Android versions while maintaining functionality
refactor setter methods for remote address and hostname to use instance variables instead of separate setter methods to improve code clarity and maintainability by relying on instance state
added a null check for realClass in Robolectric . java to ensure that the shadow class is properly annotated with @ Implements to prevent runtime errors
added a condition to check if TLS mutual authentication certificate chain is required in NettySslContextFactory to ensure proper handling of TLS mutual authentication certificates when required
added a test to verify that requesting plain HTTP endpoint over HTTPS throws SSLException to ensure that the server correctly handles SSL exceptions during HTTP requests
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance accessibility for consumer and producer components in the KafkaResumeStrategy class
added an import statement for ArrayList and modified conditional logic in PageChangeListener . java to enhance readability and maintainability of the code
fix wrong warn message in Communicationsmanager ( # 2038 )
# 167 - enh : add query process when use draft query for live bean
added error handling for IO exceptions in MultipartBody . java to improve stability and debugging when file transfer fails
fix : fix checkstyle issue in generator / java / util / zipfolder . java ( # 772 )
add some more javadoc relate to camel - core , and fix some typo in camel - core
fix # 3550 ' s default working directory when attach file ( # 3551 )
added LoadOptionsBuilder to SchemaCrawlerOptionsBuilder for enhanced schema loading options to improve flexibility in schema information handling
refactor TestLoadLegacyLibrary to use TestNG and rename the main method to improve test organization and clarify the purpose of the test
replace ` throw new TestParseException ` with ` return null ` in ` TestReader . java ` to improve error handling by avoiding unnecessary exceptions for unknown operations
added methods to set the name and enabled states from the prototype object to ensure the project ' s properties reflect the current prototype state
refactor connection handling to use try - with - resources for better resource management to ensure proper closure of database connections to avoid potential resource leaks
refactor DataStreamJob class to improve code readability to enhance maintainability and reduce complexity in the codebase
avoid close fileoutputstream in testcontentprovider ( # 2046 )
camel - 5403 fixed the unit test error of camel - cxf
fix # 274 - http / 2 support for h2 - 14
updated symbol handling and added parameter symbols in LambdaToMethod and ClassFileVisitor classes to improve symbol management and ensure proper bridge behavior for lambda expressions
add a few more < p > tag for the sbar expression , and fix a typo in the comment .
sample : increase timeout in dl4jinceptionv3net to 5 second ( # 1516 )
added a method to set the slop phrase in the mpq to enhance query processing accuracy by allowing customizable phrase results
increased the sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to allow more time for mouse event handling in tests
increased the threshold value used for parsing metrics from 8188 to 6188 across multiple sink classes
change screenscheduler to use parallel scheduler instead of lambda , add test
updated visibility logic for the compound view to ensure the compound view respects the availability of edit options
added a progress calculation to the DepthController to ensure progress does not exceed 1.1 f
remove the packetreceived ( ) method from clientsession and session interface
refactor authentication handling logic in ` DelegatedAuthenticationGenerateClientsAction ` and add debug logging in ` DefaultCasDelegatingWebflowEventResolver ` to improve clarity of log messages and enhance error handling during authentication attempts
fix potential npe in saml idp metadata accord to saml spec
added the hidden attribute to the messages in PantheonCommand . java to provide the option to enable account level permissions in the smart contract
added doNotInstrumentClass method to exclude CoroutinesRoom $ Companion class to avoid unnecessary instrumentation for Room Room classes during instrumentation
modified the ` isSupported ` method to synchronize it properly to ensure thread safety when checking the support of ` HttpCallerInfo `
removed the setInitScript method from InitializingDataSourceFactoryBean . java to simplify the interface and reduce unnecessary coupling
camel - 5489 : fix a potential issue with camel - core when use a concurrent queue with a producer . thanks to bilgin for the patch .
updated the AuthenticationProvider and TargetObject classes for improved functionality to enhance security and maintainability of the authentication process
added code to open and close blocks for tagged elements when opening and closing PDF documents to ensure proper handling of PDF documents when usingTagged mode
log4j2 - 3104 add test for patternselector in log4j2 - log4j2 - log4j2 - log4j2 - log4j2 - log4j2 - core
simonstewart : start the selenium rc test suite without selenium - core . html
changed the method signature of ` thank ` from ` @ NonNull ` to ` @ NonNull ` in ` Service . java ` and created a new ` MwThankPostResponse . java ` file to improve method clarity and enable MwThankPostResponse handling functionality
updated ChannelEndPoint to implement SocketBased interface and introduced a new SocketBased interface to improve code clarity and facilitate socket - based operations for better handling of endpoint connections
updated revokingStore enable / disable behavior and adjusted the maximum size calculation in the Manager class to ensure proper resource management and improve the handling of revoking store properties
added test cases for handling implicit joins in HQL query to ensure correct functionality of query handling for multiple calls and timestamps
normalize line breaks in the expected and actual text assertions to ensure consistent comparison across different operating systems
lucene - 6842 : add an option to disable reference to a temporary file during indexwriter commit .
replaced the ' final ' modifier with ' @ Final ' for several methods in BaseError . java to improve method visibility and encourage subclassing of the class
added a check for the consumption of user resource percent in ConsumeUserResourcePercentActuator . java to ensure the percentage is within the acceptable range of 0 to 100
updated the condition for displaying legacy login based on resource settings to improve user experience by allowing toggling of legacy login visibility
[ hotfix ] [ test ] fix the naming of the test StreamNetworkThroughputBenchmarkTests
redirect to the UsersPage instead of the EditTeamPage when certain conditions are met to improve user experience by ensuring the response page is properly updated
updated logging message to provide more descriptive error context for plugin credential initialization to improve error reporting and clarity during startup
refactor connection management to ensure proper shutdown and resource cleanup to improve resource handling and prevent potential resource leaks during shutdown
remove fixme since this seem to be the best place for it .
refactor dynamic partition creation logic into a separate method ` createDynPartSpec ` to improve code readability and maintainability by centralizing the logic for determining dynamic partition creation
forbid round hack for string template to use scientific notation
added a visitDirectory method implementation to JarDirectoryStep and modified DirectoryTraversal to call it to improve directory traversal handling and ensure directories contain directory entries
added a new file JWKSetEditor . java that implements a property editor for setting text to enable customizable JWK set input in the application
remove unnecessary BytesRef parameter from finish method in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to simplify method signature and improve clarity of pending term handling
remove boundary since some instrumentation method do n ' t have to deal with it in the instrument api .
changed default value of ` byIP ` from true to false in ` Fetcher . java ` to disable IP fetcher threads by default for improved performance
simplify timeout logic in StatementUtil . java to improve code readability and maintainability
added imports and logic to resolve target configuration hash if specified in Buck paths to ensure proper handling of target configurations when building the HaskellGhciIntegrationTest
refactor ReplicaPosition class for improved clarity to enhance maintainability and readability of the code
cloudstack - 3467 : do n ' t schedule stats update task immediately if the initial delay be < 0
replaced hardcoded interpolator values with a constant value of FINAL _ FRAME in animation configuration to improve code readability and maintainability by centralizing the interpolator definition
adjust the height parameter of navBar ' s visible bounds based on display density to ensure navBar ' s visible bounds reflect the current display density
added a new module - info . java file for the Jetty HTTP3 server module to define module dependencies and improve code organization
[ smart ] fix npe with json type variable ' myjsonobject ' , thanks to martin graf for reporting .
removed unnecessary parentheses in the assignment of ` ctx ` to improve code readability and maintainability
[ hotfix ] [ checkpointing ] checkpointconfig . get ( executioncheckpointingoptions . throwable _ failure _ number ) should throw meaningful exception
updated the ` reportInnerClassReferences ` method to use ` Element ` instead of ` TypeElement ` to improve type safety and handling of inner class references within package annotations
8197588 : jdk / jfr / tool / test / timestampcheck . java fail with ` ` test . tool . vm . opts ' ' miss from stdout / stderr
replaced FluentIterable with Java Streams for file listing to improve code readability and performance by using modern Java features
[ 3.0 ] support export to external dubbo service ( # 9594 )
add check to ensure otr session be end if security _ otr _ mode be disable .
added new properties for node label outline size and transparency in NodeLabelRenderer to enhance customization of node label rendering based on visual properties
refactor ProxySelector , URL , and URLStreamHandler classes for improved readability to enhance maintainability and clarity of the codebase
changed the boolean parameter from false to true in Win32FontManager . java to enable or disable font loading functionality
added null check and cursor setting for the visit method in TreeVisitor to ensure the visit method respects the cursor if it ' s not null
fix ( jdt ) : do n ' t attempt to call stopfirsterror on empty classpath
added text alignment and related methods to LabelBlock for better text alignment support to enhance the label rendering flexibility in graphical applications
updated Class and Parameter classes for improved functionality to enhance performance and maintainability of the code
refactor IndexReader class to improve code readability to enhance maintainability and ease of understanding for future developers
8259766 : npe fix in NetworkInterface isloopback ( ) when the networkinterface be null
add locale parameter to dateutils . fromRfc1123datestring ( ) to specify the locale . us
fix test : explicitly specify file extension when download miss file
dataes - 944 - add property to output no hit for query in elasticsearch
fix # 3448 quota calculation for monthly tariff ( # 5517
[ java ] ensure the atomicity of workcount be always update regardless of failure .
fix infinite loop in readfilesp and streamfilestop ( # 22372 )
simplified conditional logic for skipping widgets in PageChangeListener to improve code readability and maintainability by reducing complexity
added ` isWriteProtected ( ) ` method to ` Workbook ` , ` FileSharingRecord ` , and modified ` FileSharingRecord ` to handle file sharing checks to improve file access control and enhance error handling during input reading
added error handling around unregisterInvalidatedSessions ( ) method to log warnings when an exception occurs during session checking
refactored CategorizationFragment to improve code readability to enhance maintainability and ease of understanding for future developers
[ hue ] fixed … ( # 12722 ) … ( # 12722 )
add a loading flag to fmlclienthandler and prevent crash when settle on them
fixed some typo in the millions / thousands description , added dependency
refactor MessagePackParser to use a switch statement for byte type handling and add a test for reading strings as BinKeyPojo to improve code clarity and ensure correct handling of different message pack types
added parameterized tests for querying reserved words as identifiers in HqlQueryTransformerTests to ensure compatibility and correctness of SQL queries involving reserved words as identifiers
added tests for serialization and deserialization of a Map using HashMap to ensure correct handling of nested maps in JSON representation
added boundary checks for x2 and y2 in GeometryUtils . java to ensure proper coordinate adjustment during rendering
refactor sort order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and maintainability by consolidating sort order functionality
log an error and exit 1 if no testplan can be find
updated method names in GeneratedEntityTranslator and JdbcManagerSupportImpl to use LazyReference for better lazy handling to improve code efficiency and reduce memory usage when accessing database properties
updated the initialization of argIdent to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is only added to parameters when not null
change default protocol from " SSL - HTTP / 1.1 " to dynamically from scf to enhance flexibility for protocol configuration
cloudstack - 9685 : set volumedisk to true by default
updated the version method to accept a boolean parameter and improved the handling of the full version flag to enhance clarity in versioning and provide a clearer error message
modify the condition checks and introduce a loop for processing ChangeLogParameters to enhance the robustness of the change log parameter handling logic to improve robustness and correctness of the change log processing logic
change log level from warn to debug for transaction retrieval failure message to reduce log verbosity for better troubleshooting
hhh - 14077 skip test org . hibernate . ejb . test . setoperationtest . testformattedsqlstring on oracle
moved the startHandshake and setSoTimeout calls to maintain socket timeout settings before establishing SSL connection to ensure that the socket timeout is preserved during the handshake process
updated action bar size calculation to account for popup mode to ensure proper layout behavior for popups in the navigation drawer
updatedCSA option from false to true and adjusted class declarations to enforce immutability and ensure proper resource management
fix for amq - 856 - ensure activemqresourceadapter always set the context classloader .
replaced multiple test cases with simplified assertions in JodaTimeRangeRandomizersTest to enhance test readability and maintainability by simplifying test logic
ensure compatibility with jakarta ee 9.5 ( # 1074 )
fix : improve readiness to consider node that need readiness
fix a race condition that could lead to indexoutofboundsexception
added a null and empty check for creationStatements in IdTableHelper . java to avoid potential NullPointerExceptions during execution
phoenix - 3282 update user rpc version due to change in rpcfailure behavior . ( rajeshbabu )
added a null check for System . getSecurityManager before verifying package access checks in ObjectStreamClass . java and ObjectStreamField . java to enhance security by ensuring access checks are performed within a security manager
removed unused imports and simplified method implementations in Utils . java , and made UGSCommandCount private in XLCDCommunicator . java to improve code clarity and encapsulation
fix tag collection ( close # 759 )
add test to suite and fix the order of the ci test run
change default logging level from OFF to ERROR in the launcher to ensure that the application does not crash on unexpected events
changed variable access modifiers to final and corrected string concatenation syntax in the IconNormalizer class to enforce immutability and improve code readability
added optional parameter ` firstCallPrepareDo ` to ` PrepareInterceptor ` and updated invocation logic accordingly to enhance flexibility in preparation method invocation handling based on user preference
clean up home / back behaviour in overview mode ( issue 10965421 )
removed eager singleton bindings from Auth . java and AuthWithStoreFeature . java to simplify the binding process and improve code clarity
modified the incomingAssociations method to accept a boolean parameter to allow control over visibility of associations in the model
bug 7615 : remove a private ip from the db when the host be remove .
include diagram and linux 4.6 + with completion message
fix miss required field for ref field ( # 97 )
updated class names in multiple configuration classes for consistency to enhance code clarity and maintainability by standardizing class names
updated the implementation of feature flags to enhance functionality and improve performance of feature management
fix wrong identifier for large id . do n ' t include ' demouuid ' a prefix .
added image handling for picture in TimeLineCursorAdapter and TimelineArrayAdapter to ensure images are set appropriately based on cache
clarify default value for compaction on full CRUD table ( # 2277 )
added a null check for storage path in the condition of mWaitingToSend to prevent potential null pointer exceptions when accessing storage paths
updated condition checks in VectorMapJoinFastBytesHashMap , VectorMapJoinFastBytesHashMultiSet , VectorMapJoinFastLongHashTable , and VectorMapJoinFastBytesHashMap to use a new checkResize ( ) method to improve code readability and maintainability by centralizing the resize check logic
( chore ) camel - ldap : remove superfluous comment about ldap connection
camel - 8243 : remove @ xmlattribute ( required = true ) and deprecate the aggregator eip
remove debug log for flaky test
added a condition to check if the class name starts with " com . intellij . rt . junit " in AbstractSoftAssertions . java to address compatibility issues related to IntelliJ IDEA build
update assertions in TestMultiSearcher to use ` hits2 ` and ` hits3 ` instead of ` hits ` to ensure accuracy of the count of hits in the test
added a new file LucenePackage . java that defines a static method to access Lucene package to provide a mechanism for accessing package information in the Lucene package structure
adjusted the calculation of sizeInBytes by removing an extra space to correct the logic for updating sizeInBytes
stats : add estimate to bloom filter ( # 3101 )
added a null check for the drawable toggle before animating the drawer slide to avoid potential null pointer exceptions when initiating drawer animations
added a suppression warning annotation to the convertToAuthentication method signature to silence the warning about an unused subject
fix a bug in scanner . getclasses ( ) where we would always call enableSystemJarsAndModules ( ) when classloaders be null .
fix export format for office metadata ( # 7634 )
added a method to cancel core recoveries based on ZooKeeper awareness to improve stability and error handling during core shutdown in a ZooKeeper - enabled environment
refactor time measurement and position difference calculations to use a custom method for getting current time in milliseconds to improve precision of time measurements and clarify the output calculations for better readability
fix issue with multiple credential dialog show up on startup ( # 438 )
doc : fix javadoc error ( # 1935 )
added trust resolver , permission evaluator , and default role prefix to the SecurityExpressionRoot object to enhance security configuration by ensuring default values are set for trust resolver and permission evaluator
added a condition to set the exponentSize if it is zero to ensure the exponentSize is always correctly defined based on primeSize
refactor file usage checks to use a new method for obtaining the available space to improve code readability and reduce redundancy in file storage operations
modified the combination method in DistinctSqlAggregation to use an accumulate for each value instead of just the delegate to improve handling of accumulate operations for multiple values
added a test method to verify post - login activity execution for users on successful authentication to ensure that the UserService correctly handles user authentication and post - login process
retain separate stripped verb for extractorspanishtimperfectErIrSuffix and allow it to be reuse by the common case
refactor CharArraySet implementation and add test methods in TestCharArraySet to simplify logic and improve test coverage for object containment checks
moved validation for audio and video track types to a method call to improve clarity and maintainability by using requireNonNull for track type checks
updated JsBundleGenrule to support AndroidPackageable and refactored related tests to improve code clarity and ensure accurate testing of JS bundles
fix stringindexoutofboundsexception when use utf - 8 encode in client
updated resource references and added tile icon resources in InstrumentsFragment . java to improve clarity and organization of resource elements for better user experience
lucene - 10020 : avoid unnecessary creation of new vector instance in abstractvector .
added syncMetaLeader ( ) method call in CMManager . java to ensure proper synchronization of the meta leader data
refactor feedbackquestiondetails to return empty response instead of null
added TestLoggingExtension import and annotation to DiagramRendererTest to enable proper logging for test execution
updated the ` findProperty ` method signatures to include a ` useCamelCaseMapping ` parameter to enable customizable mapping behavior when applying automatic mappings
added support for the VIOMI Internet electric water heater 1A device to enhance compatibility with additional systems
updated the retrieval of SSL session data to use a local variable for clarity to improve code readability and reduce repetition
added a new file CreateNewSpreadsheet . java to implement a test case for creating a new spreadsheet using HSSFWorkbook to facilitate sheet creation functionality in Apache POI
updated ` CacheProperties ` to replace ` Duration ` with ` long ` for ttl and modified method return types to improve type safety and clarity in cache configuration
be c5fb59fb : fix loadworkspace be call multiple time use right intent when refresh shortcut icon
updated the version number in the testCompileGroup from ' 2.14 . 0 ' to ' 2.27 . 2 ' to include the latest version improvements and fixes
replaced synchronized block to use ' this ' instead of ' lucidaFontName ' to ensure thread safety against the current instance
updated condition to check for ' < ' in DocClassUtil . java to ensure correct handling of nested structures when checking ltLen
removed unnecessary String . format call from Workspace . java to simplify code and improve readability
added import for Scope and sendMessage method to inform users about validation errors to enhance user feedback by informing them when validation errors occur
added web resource loading logic and modified import statements in IntegrationTestContextLoader . java to enhance resource handling and improve configuration flexibility for application context
updated method calls from ` getResponderAt ` to ` getComponentAt ` and adjusted scroll handling logic to improve accuracy in component positioning and handle edge cases
updated the conditional check for UUID class type in RamlType . java to ensure proper type alignment for UUID handling
added a new class ClientStat and updated related methods to use String instead of Long for client IDs to improve code clarity and maintainability by using a more descriptive type
replaced multiple instances of ` $ 1 ` and ` $ 2 ` with a single string in ` CellContentConverter . java ` to ensure consistent string formatting across different operating systems
patricklightbody ignores \ r and \ n when run globbing on s1glob , fix issue 670
mondrian : fix for bug # 1743819 , document mondrianproperties . jdbcfactoryclass
8027163 : sun / management / jmxremote / bootstrap / customlaunchertest . java should be update for jdk8 removal of solaris - 32bit support
added a test method for embedded image in TumblrRipperTest . java to ensure proper functionality and validation of the Ripper
added a conditional check for slot availability before converting storeType to ensure method conversion is only attempted when a valid slot is available
load data source in extractorwrapper and set sample offset when the position be 0 .
added a custom ` PrintStream ` method and modified the indexing configuration to use ` IndexWriterConfig ` to improve output handling and support UTF - 8 encoding for better compatibility
patch from bob paulin from tika - 1700 - allow set the service loader dynamic flag and load error handler from the tika config
added package - info . java and file handling in DocLint . java , and created test classes in DocLintTester . java to enhance error handling and improve code organization for better maintainability
added an additional command constant IMPORT _ CMD in DataImportHandler and updated the conditional check in DataImporter to allow for additional commands in import processing
add a test to verify that inner classes do not modify declaration when ignoreDefinition is true to ensure that modifications are not performed on inner classes when their definitions are ignored
removed import of android . util . Log from JettyService . java to eliminate unnecessary dependency on Android ' s logging utility
modified the ` checkItemPlacement ` method to accept an additional ` ArrayList < Long > ` parameter and updated related logic to utilize it to improve flexibility by allowing items to be added to the workspace screens list
add a kill switch servlet to kill the jvm on o x
fix npe in lRealtimesegmentdatamanager when consume segment ( # 4803 )
added a check to skip processing for Windows environments in Tests . java to ensure that Teredo resources are not processed in Windows environments
fix a nullpointerexception if no protocol provider be register when add a contact .
replaced bean registration with bean component registration in AuthenticationConfigBuilder to improve clarity and maintainability of the registration process
be dee6975a : be 8a196351 : fixing issue where fastbitmapdrawable be not scale the draw into the correct bound . ( bug 9075810 )
fixed typo in meitrack and totem protocols as per http : / / forum . liquibase . org / topic / meitrack - 837
changed method access modifiers and updated method calls in SunFontManager and X11FontManager classes to enhance encapsulation and improve font path retrieval logic
added @ Deprecated annotations to EnhancedRandom . java to indicate that these elements are outdated and should not be used in future development
fix build with jdk 11
added configuration to keep emptySentences and updated related conditions in DocumentPreprocessor , SentimentPipeline , and MaxentTagger classes to allow users to control whether to keep empty sentences during processing
added error handling for artifact subdirectory creation and modified method return type to boolean to improve robustness by providing clearer exception messages when artifact extraction fails
refactor JavaCompiler and JavaLanguageServer to use the new NO _ MODULE _ COMPILER service instead of a static loader to streamline the compilation process and eliminate unnecessary complexity in the codebase
bug 10733 : DirectagentAttache . java : fix null answer message in case of wrong answer return
[ ci ] remove try - catch block from Emails . sendemail ( )
add api documentation and fix null check for pipetobidian
updated date parsing methods to accept Locale . ROOT for consistency across classes to ensure consistent handling of locale settings across different date formats
added a boolean property ` includeDecals ` to ` StorageOptions ` and integrated it into ` StorageOptionChooser ` to allow users to choose whether to include decal data based on user preferences
updated Liquibase documentation generation to include a null argument to ensure proper documentation generation and suppress warnings for unused methods
updated HiveProtoLoggingHook to store performance values in a HashMap and refactored test assertions in TestHiveProtoLoggingHook to improve efficiency handling and clarity in logging tests
updated log message formatting for consistency in SolrIndexConfig and DocExpirationUpdateProcessorFactory to improve clarity of log output and ensure uniformity in log message formatting
updated version check in ignoreRecordAttribute to use MAJOR _ VERSION to ensure accurate version validation for record attributes
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP user authentication testing to ensure correct functionality and validation of LDAP user attributes in the LDAP context
replaced OrcInputFormat with BasicStatsNoJobTask for input format checking to improve statistical accuracy in determining input format usage
fix an issue with the ' save all ' action on reload ( # 1928 )
updated VisibleAdvance class to improve functionality to enhance user experience by providing better accessibility features
fix # 4065 : handle ` ` reflector . start ( ) ' ' with auto reconnect
added support for dynamic number columns in ` EdgeDataTable ` and ` NodeDataTable ` classes to enhance data handling for dynamic number columns in better compatibility
added null checks for groupId and getVersion , and updated method calls in RawPom . java to ensure proper handling of null values to improve code robustness and prevent potential NullPointerExceptions
updated API assignment to ensure fallback to the existing API when apiInfo is null to improve robustness by preventing null assignment to the API variable
renamed HeadersConfigurer and CacheControlHeadersWriter classes for consistency to improve code maintainability and readability
added lighting and shader management features in PhotoPanel and FlameRenderer classes to enhance visual effects and improve texture handling during rendering
fix # 3846 and edit link in list editor ( # 4847 )
( chore ) prevent indexoutofboundsexception when escape control character
new property add - ` ` islookandfeeldecorated ' ' , which indicate if we use the java look and feel or the system look and feel
removed unnecessary ` this ` references from SQL query in ` HostRoleCommandDAO . java ` to simplify the code and improve readability
issue # 9012 - fix all message type in camel - lj1200
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience based on swipe direction and conditions
replaced HostDatabase with ColorStorage in ColorsActivity to utilize color storage functionality in the ColorsActivity
refactor methods within String class to improve code readability and maintainability
removed unused imports and initialized logger variables in multiple classes to improve code cleanliness and ensure consistent logging practices across the project
added a method ` getGlobals ` to return an array of ` Entry ` objects from the map to enhance functionality for accessing global entries in the map
added assertions to verify the successful sending of witnesses in MultiSign34 . java to ensure the correct cryptographic parameters are enforced for the witnesses key validation
test : migrate cufiltertest to junit 5 ( # 4463 )
use system property ` path . separator ` to define path separator .
change method visibility from static to instance to allow for subclassing of the method in AbstractServiceValidateController
added assertions to validate field presence of a field in inheritance for AbstractEntity and Person classes to enhance test coverage for field presence validation and improve code clarity
removed unnecessary configuration parameter from Outlink constructor calls in multiple parser classes to simplify code and improve readability by eliminating unnecessary dependencies
removed the ` LexicalContext ` parameter from multiple methods to simplify method signatures and improve code readability
updated the method to properly handle lambda expressions and removed unused imports in the UseLambdaForFunctionalInterface and TypesInUse classes to improve code clarity and ensure proper cleanup of unused imports
replace appendClassSelector with createFileSet in TestNGAntTask . java to streamline class file selection handling
removed unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to streamline code logic and reduce unnecessary logging
make registry aware of the registry pool ( # 8561 )
reformatted the assignment of x3 and y3 in Intersector . java to improve code readability and maintain consistent formatting
added methods to get decoded length and limit from SBE in MessageDecoderFlyweight to establish compatibility with the latest SBE API
updated the Elasticsearch version used in the ElasticsearchContainerTest . java file to use a dynamic version instead of a fixed value to allows for dynamic configuration of the Elasticsearch version used in tests
fix incorrect loading of peermessage when torrent file be full
added support for version ID in the ClusterDefinition and updated related classes to enhance the cluster management functionality by allowing support for version identification in the application
camel - 8563 : remove duplicate method in camel - ftp ( # 3907 )
zeppelin - 3243 . fix error message when dependency be not resolve
modified local variable handling in ` Gen . java ` and added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest . java ` to ensure correct scope of locals in static methods and validate that them are reserved for DCEed variables
added a check for basic constraints in ` ForwardBuilder . java ` and created a new class ` BuildEEBasicConstraints . java ` for certificate validation to ensure proper handling of certificate constraints during certificate construction and enhance certificate management functionality
added a method ` initAfterFirstDbConnection ` to ` JdbcPostgresqlDAO ` for database initialization to ensure compatibility with PostgreSQL version 9.4 and above when initializing the database
updated WebSocket configuration to include a maximum message size and added a validation check for input buffer size in AbstractWebSocketConnection to improve performance and ensure input buffer size does not exceed defined limits
removed boolean flags for deleting all documents and added assertions for pending deletes in SegmentReader to streamline the deletion process and ensure correctness in the undeleting process
updated null checks for scopes and improved test cases in ClientRegistration and ClientRegistrationTests to ensure robust handling of null values and enhance test coverage for authorization scenarios
added null checks for orderBy before adding the parameter in CartesianProductStream . java to avoid potential NullPointerExceptions when orderBy is null
[ hotfix ] [ test ] replace assertthat with matcherassert . assertthat in clusterentrypointtest
cloudstack - 6369 : do n ' t try to snapshot volume on kvm when vm be in stopped state
replaced direct initialization of LogUtils with a variable assignment for better readability to improve logging clarity and maintainability
added a check for empty tasks before proceeding with asset loading to avoid potential null pointer exceptions when accessing tasks
return success status of delete node to allow easy debugging
fix bug and add support for kventry in relation entity
throw a ReaderException when an empty barcode is found , code39 or code128 crashes .
replaced TreeSet with LinkedHashSet in SSLContextImpl . java to maintain the order of cipher suites in the processing logic
added a method to check if a code point is a control character and modified the logic for handling control characters in the Escaper class to improve code readability and ensure proper handling of control characters in the representation
modified SqlSource to support CharSequence types in method invocation to enhance flexibility and maintainability of SQL provider methods
updated the handling of aliasChildren in InternalMNode . java to improve null safety to avoid potential NullPointerExceptions when accessing aliasChildren
be 3c729910 : be 564a2e71 : fix custom content state for scroll in rtl ( issue 11068877 )
renamed variable ` synthetic ` to ` pruned ` and modified formatting logic in the JavaTemplate . java file to improve code clarity and ensure proper formatting of generated templates
set the accessibility of the method in WidgetInterceptor to ensure that the method is accessible from other classes
added a conditional check to exclude " database . server . id " before setting the literal initializer to ensure that the default value is only set for unsupported database configurations
update ripper url for w3c and chrome
added a menu item that opens a web service service in BasicSystemUtils . java to enhance user navigation by providing a direct URI for the web application
refactor HandleGetter . java to utilize a local variable for the actual value and improve inner statement assignments to enhance code readability and maintainability by clearly defining the reference to the actual value
added error handling for Record creation in EncryptedSlideShow . java to ensure graceful handling of array access and prevent application crashes
add some more debug logging to help diagnose test failure
load battle pass manager to avoid null pointer exception on avatar post load
updated Docker image version in PortForwardingContainer . java and improved echo command formatting to ensure compatibility with new SSH daemon features and enhance container functionality
8267105 : jvmti / thresholdtest / thresholdtest . java fail due to miss call to system . gc ( ) prior to oom
updated log name checks and modified debug output assertions in StdErrLogTest to enhance log handling accuracy and improve test coverage for debug conditions
fixed - spring data redissonclient can not be use . # 3025
added methods to determine and set the selected state of the emblem to improve functionality for better user interaction with the emblem
updated the target activity from UpNextActivity to NextUpActivity to ensure that the playback functionality operates correctly for the NextUpActivity
[ issue # 4059 ] remove useless if statement in brokercontroller
polish ` ` ensure redis connection close after health indicator ' '
refactor theme color retrieval to use a dedicated method for obtaining brand colors to improve code clarity and maintainability by centralizing theme color logic
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
remove type adapter that be no longer need for tool api
ninja : fix flaky testpayloadcheckquery . testpayloadcheckquery ( ted yu )
updated ConsoleReader to allow mask handling in print statements and added a test for reading lines with mask to enhance functionality and ensure correct behavior when masking is null or empty
added user handling and command line information to the BaseCommand class to improve user interaction and context display within the application
rename org . graalvm . compiler . test to org . graalvm . compiler . api . test for good organization
[ hotfix ] [ test ] remove unnecessary constructor of slotsharinggroup
updated the comparison logic for Java 9 - specific stream handling in StreamExInternals . java and modified hasDropWhile logic in StreamExTest . java to enhance compatibility with Java 8 and improve code readability by simplifying method checks
updated texture paths and music duration from " data / cloudconnected . ogg " and " data / os . ogg " to " data / sys . png " and " data / sys . png " to utilize the latest assets and improve audio quality
be d26bad51 : be b8139ab6 : be b8139abe : fix 2300792 - all apps zoom when you come back from an app .
updated import statement for Cluster in HostsRemovedEvent . java to ensure correct usage of the Cluster class in the imports
added support for introspection and modified client token validation logic to enhance token introspection capabilities and improve error handling during client introspection
replace direct calls to ` write ` with HTML encoding for user and session attributes in ` HtmlSessionInformationsReport . java ` to ensure proper handling of special characters in internationalization
added PhrasePrefixQuery link to PhraseQuery to improve query linking capabilities for better user experience
fix java 1.6 memory leak in commentparser ( alexander pivovarov via jason dere )
fix # 1846 - do not use literal string concat in tostring ( )
refactor method parameters and interfaces to use generic types instead of specific types to improve flexibility and support for more flexible data types
updated the ThrowingFunction interface to use generics for type safety to improve type safety and clarity in handling exceptions within the plugin
updated methods for accessing uploaderBehaviour from static to instance context to improve code maintainability and allow for better instance management
fix : fix bug in typefactory . getallelements ( ) ( # 1677 )
replaced BitmapDrawable instantiation with Robolectric ' s newInstance method to improve compatibility with Robolectric ' s utilities
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and removed an unused variable ` char ` to improve method clarity and eliminate unnecessary code for better readability
updated PageMarkerResources to use a different drawable resource for the current page indicator to improve visual clarity by distinguishing the current page indicator
added a volatile integer variable ` reinvocations ` and updated the logging messages to include its value to track the number of reinvocations during the execution of method calls
modify the calculation for topPadding in DefaultLookAndFeel . java to ensure accurate vertical alignment by using the inner height of font height
fix : miss break might have cause recognize failure
added preference - based locking for home screen locking in multiple classes to enhance user experience by allowing customization of home screen locking behavior
added additional condition to handle string cell types in ExcelBatchReader and created a test for text formula functionality in TestExcelFormat to enhance cell type handling and ensure proper functionality for processing different Excel formats
fixed bug 1079947 - immutablefield no longer flag anonymous inner class .
added a user agent field in CommaFeedConfiguration and updated HttpGetter to use it in HttpGetter to ensure user agent is correctly set based on application settings for proper configuration
added required = true to the @ XmlAttribute annotation in AvroDataFormat . java to ensure that attributes are required for XML processing
changed log level from info to debug for file not found error message to improve log granularity for better debugging insights
renamed the class QueueTest to QueuedPipeTest to clarify the purpose of the test regarding queued pipe functionality
update version check logic for OfflinePlayer to ensure compatibility with server version 1.7 . 6
camel - 6373 : camel - core - optimize routescollector to avoid lock contention
added a vertexColor property and modified color binding logic in PShape3D to enhance flexibility in color customization based on user input
added a boolean parameter ` isPkColumnFiltered ` and updated related method signatures to improve filtering logic to enhance foreign key handling and distinguish between filtered and partial database objects
removed unnecessary ShadowMatrix extraction from ShadowMotionEvent . java to simplify code by directly using the matrix object
removed the package declaration of MetaRules from multiple Java files to streamline the code structure by eliminating unnecessary imports
groovy repl : simplify class detection , default to ` ` null ' '
forward http : / / github . com / hawtio / hawtio / issues / 1049 to the branding module . ( # 1049 )
removed redundant println statements from NativeCodeGenerator . java to streamline output and improve code clarity
replaced updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) to streamline event firing process for improved responsiveness
added unit test to verify behavior when actual and expected cause have different types to ensure proper assertion error messaging for mismatched exception
replaced flattenName and pack variables with direct model and package names to streamline dependency management and reduce unnecessary complexity in the code
rename requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to ensure clarity and consistency in scope handling logic
simonstewart : fix the mariadriver test that break in firefox 9 .
camel - 4452 : added route . description so we can easily add a route to a route .
modified the implementation of JavacTreeMaker to improve code efficiency and readability
added edge weight setting to ImporterCSV . java to ensure edge weight reflects the updated weight value
inform the hours per month when calculate the cost per month ( # 4080 )
added ' d . adsrc ' to ' d . adrelid ' in postgresql ( support for postgresql at the moment )
if no binarized document do not exist , throw an error instead
added detailed user information to the User class to enhance debugging and logging capabilities for user status updates
updated method to retrieve message body using ` getMessage ( ) ` instead of ` extractBodyAsString ( ) ` to improve clarity and handle null cases more effectively
[ hotfix ] [ runtime ] [ task ] rename executionvertex to execution
of - 1601 : make group visibility check optional for the roster access
added a classpath reference to the project in AbstractJRubyMojo . java and removed unnecessary suppression in CucumberMojo . java to ensure the correct classpath is included in the project configuration and eliminate unnecessary warnings
updated MethodHandleImpl . java to ensure consistent type checking and added a new test method in MethodHandlesTest . java to improve code reliability and ensure correct behavior of MethodHandle methods
added imports for NamedSPI and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilterFactory to enhance functionality and maintain consistency across query processing components
increase width and height comparison conditions in URLImage class to ensure images are only processed if they are equal to their dimensions
added a check to ensure the name ends with " META - INF / " and modified package name extraction logic to improve class name validation and ensure proper package path handling
added new import statements and modified method signatures to include final parameters for better immutability to enhance code clarity and enable asynchronous image loading in the download service
updated assertions in StackWalkerTest to use a variable for expected value based on version check to ensure compatibility with newer Java versions and improve clarity in error messages
changed method visibility of ` addViewportJob ` from protected to public to allow external access to the method for improved functionality
remove partition parameter from flow builder ( # 765 )
modify server shutdown behavior and configuration in TestDatabase . java to ensure server correctly handles server restarts and server status updates
added null and empty check for block in NodePathsConvertOperator and modified child child retrieval logic in SchemaQueryMergeOperator to improve robustness by handling potential null and empty blocks appropriately
add callinfo frame to display total harvesting time for ice and transport manager .
updated font draw parameters for fps and maximum active count in ParticleEditor . java to improve visual clarity and consistency in rendering
added logic to update the keyserver port from the Hadoop environment properties if it is not already set to ensure that the Hadoop environment can dynamically set the keyserver port
added a transparent transparent color to the SvgViewerFactory to enhance visual effects by allowing transparent backgrounds
removed the minSdk parameter from the @ Config annotation in ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the code and reduce unnecessary configuration
refactor the ` containsExactly ` method to accept an ` varargs ` parameter instead of an accumulate function to simplify the method signature and focus on essential arguments
updated Bandwidth builder to use capacity and refill temperature , and added a check for non - empty keys in AsyncBucketProxy to improve bucket creation logic to ensure proper capacity and key validation while restricting access for better security
fix # 264 , add some miss javadocs , and one unnecessarily
added hooks for executing Hive queries and modified transformation handling in the query processing classes to improve query optimization logic and ensure proper lineage evaluation
added handling for NoClassDefFoundError in REngine . java to ensure default behavior is set when no class definitions are found
refactor TraceWebFilter and TraceWebFilter to integrate SpanAndScope for improved span handling to enhance observability and scope management in web applications
add a null check for the cause before retrieving the message in AbstractUpdateCommandStep to avoid potential NullPointerException when getCause ( ) is null
updated SolrServerException instantiation to include the base URL to improve error handling by providing more context about the base URL
modified the landscape setting and return statement in HSSFPrintSetup . java to correct the logic for determining landscape orientation
updated the return statement to handle null values safely to ensure that the method returns null safely when ' o ' is null
added validation to check for bad argument names in ArgDesc . java to improve error handling for invalid argument names and prevent runtime exceptions
added background location update functionality to AndroidLocationPlayServiceManager to enhance location tracking and improve application responsiveness
changed the condition for handling primitiveType in MeshBuilder . java to ensure correct logic for processing different primitive types
[ gr - 21274 ] fix a corner case in the trufflestring . execute ( byte [ ] data , int offset ) .
added a method to set the command list in ComboBox to ensure the command list is correctly handled during initialization
nifi - 6334 : fix invalid filename in tl client
updated zkcli command syntax to use " localhost " instead of " cmd " to ensure consistent command execution across different environments
updated comparison methods for progress in FirmwareUpdateProgressInfo and BridgeHandler to use ` . equals ( ) ` instead of ` ! = ` to ensure proper equality checks for progress values
added a conditional check for remoteGrpcStatus before posting the build warning message to ensure that the build failure logs only when the remote Grpc status is OK
refactor method signatures in XYItemRenderer and related classes for consistency to improve code readability and maintainability
fix null pointer exception in entityid loading , close # 1951
added a method to retrieve error strings from GLSurfaceViewAPI18 to handle multiple error codes in the application
mary - 430 : display error message when request be invalid in some case
updated server URI handling in RFC2616BaseTest . java to ensure correct formatting to improve test reliability by using correct URI format
added a method call to add helper lists in the Construction class to enhance functionality by providing a centralized helper list
add a condition to skip the first element of " [ [ ] ] [ escape sequence ] " to the GlyphLayout class to improve handling of specific character sequence cases
added security context handling for setting the context class loader in Transport and TCPTransport classes to enhance security by using AccessController for privileged
refactor the file retrieval logic in ReceiveExternalFilesActivity to improve clarity and ensure proper structure to enhance code maintainability and prevent potential null pointer exceptions
fix potential npe during shutdown of java _ test .
removed a debug log statement from BarrowmanCalculator and modified the calculation of deltap in TubeCalc to streamline code for better performance and readability
modify column assignment logic in TimelineControllerImpl to handle Node instances more effectively to ensure correct column assignment based on the type of node and edge in the aggregate
added a method to register additional components for the broker admin application to enable the registration of additional services for better service management
added a test method for bug4658 in MultiCfQueryExecIT to verify the correct behavior of upsert operations on different table names
peergroup : do n ' t announce for client version less than minimum . resolve issue 463 .
fix builder not reset if they ' re corrupt .
[ iotdb - 5956 ] remove simple consensus snapshot trigger threshold config from confignodeconfig ( # 5940 )
remove @ version that use svn revision a it make useless difference when compare svn with github
improve performance by only register jmxhelper in managed service
tika - 629 : packageparser now extend abstractencodingdetectorparser and add encode detection for non - unicode entry .
8239804 : c2 : c2 : c2 : div should not throw sigfpe error during computation
added methods to lookup generic interface types and superclasses using reflection to improve template retrieval efficiency and flexibility in template registration
updated the default constructor in ByteArrayOutputStream to use new parameters to optimize memory usage and improve performance
add note about no symbols available to the language exclusion list
modified byte array initialization and handling in TransferCompletionHandler . java to improve memory efficiency by using a loop for buffer size adjustment
remove the focus listener from the menu , it do n ' t like the action bar
add a check for null source before throwing a SemanticException for invalid table aliases to improve error handling by providing clearer exception messages when the source is null
bugfix : fix a bug in meshrenderer for skeletal mesh .
solr - 4817 : use solr . solr . home system property so that test can pass when run in an ide
added @ ComponentScan annotation to SpringWebConfig . java to enable scan - related functionality in the Spring framework
removed the getAccount method from UserListItem class to streamline the code by eliminating an unnecessary method
added unit test for package installation and improved null handling in ShadowPackageManager to ensure that the installation process name is set correctly when it is null
update AvailableSettings . java to improve configuration handling to enhance the application ' s flexibility and maintainability
added TransactionCapsule and its properties to the TransactionTrace class to handle TransactionCapsule instances in the TransactionTrace class
add client property to shuffle member list . fix # 4562
replace ` Text ` with ` CrawlDatum ` in ` SegmentReader . java ` to improve type specificity for better data handling
refactor JsonDeserializer for improved readability to enhance maintainability and reduce complexity in the codebase
updated configuration paths and changed fetch size handling in QueryProcessExecutor to improve config organization and ensure fetch size is thread - safe for concurrent execution
updated the method call from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to correct the argument order for trunc functionality
removed the import of ExecutionContext from TaskletStep . java to eliminate unused dependencies to streamline the code
initialize the title variable to an empty string instead of null to avoid null pointer exceptions when the title is not set
fix null body for empty response in asynchttpclientcall
reintroduce the deprecated io . micronaut . runtime . server . embeddedserverinstance to avoid micronaut warn
fix # 5266 . change macadapter to avoid any side effect .
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated relevant references to improve clarity by reflecting the focus on the token fetching functionality
added a return statement for Enum type conversion in the HandlerLibrary to ensure proper handling of enum types without unnecessary type conversion
make hideunprivilegedobjects final ( # 1639 )
fix audio test when there be no audio file
added a check for Android Q to save GIFY format compatibility to ensure proper handling of media previews on Android 10 and higher
in servicetaskvariablestest , make sure we keep track of variable instance in session
renamed multiple classes related to EhCacheTicketRegistry , Google AccountsService , and SamlService to improve clarity and maintain consistency in naming conventions
refactor logger retrieval logic to use computeIfAbsent for improved readability and efficiency to simplify the if - else branch
hbase - 27658 remove unused class dataoutputoutputoutputstream from hbase - api - java ( # 4320 )
updated configuration for Hive ' s autogather column in TestAcidOnTez . java to ensure accurate testing of column statistics in Hive
updated log level from info to debug for successful enhanced class logging to improve logging granularity for better debugging insights
added a method to get the default provider name and updated references to use it to improve flexibility in provider name management for different platforms
added Captor annotation processing to MockitoBeforeTestNGMethod . java to enhance functionality to correctly annotate Captor fields in Mockito
added error handling for cases with missing class and method names in TestSuiteBuilder . java to ensure that generated test cases are informative when specified classes or methods may not exist
updated GroovyAutoComplete and GroovyLanguage classes to improve prefix handling and added utility methods to enhance code readability and ensure proper validation of identifier patterns
use graphhopperosm for import java code example ( # 1538 )
[ java ] faster selenium server response handling : do not create the selenium client instance
changed the visibility of ` mHideSysUiScrim ` from final to non - final and added preference handling for showing the top shadow to enable dynamic updating of the UI based on user
updated method signatures and logic in Call and OkHttpCall classes to improve cancellation handling and ensure proper cleanup of rawCall instances
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience based on swipe direction and conditions
updated the RequestMatcher interface to extend from Spring Security ' s web . util . matcher . RequestMatcher to ensure consistency with the Spring Security framework ' s matchers framework
added a new class ` ImplicitLambdaConsideredForApplicabilityTest ` with multiple interfaces and modified ` DeferredAttr ` to include it to enhance functionality by allowing conditional handling of lambda expressions
remove boxed and boxed primitive equality test and add new boxing constructor test for kotlin
fix displaymetrics initialization bug ( # 4358 )
replaced IOException class with RuntimeException and modified timestamp initialization in tests to improve error handling and ensure accurate timestamp initialization
fix crash when click on an item in the db
added a method to set the content text in the error builder to improve error handling by setting the content text for better user experience
refactor ConcurrentHashMap for improved concurrency handling to enhance performance and reduce contention in concurrent scenarios
added methods for adapting user trades and retrieving user trades from an array to enhance functionality for handling user trades in the trading service
fix a few bug in setblockfast _ 1 _ 8 and setblockfast _ 1 _ 8 .
simonstewart : make the htmlunit driver able to automatically determine the browser version .
added handling for VARBINARY database type in BlobType . java to ensure proper data type handling for VARBINARY definitions in the database
apply patch from jboynes to improve cookie handling .
added synchronization to the registration of simpleTypeMap and arrayTypeMap in LibFFIContext . java to ensure thread safety when accessing shared resources
updated InboundBuffer to use ContextInternal instead of Context and added a check for thread type to improve clarity and ensure proper context handling in the buffer implementation
refactor LDAP timeout tests to utilize a new method ` deadServerNoTimeout ` to improve timeout handling and enhance test coverage for timeout scenarios
corrected the spelling of " Unicode " in the usage message to ensure accurate usage of the Unicode data file
try to fix the unit test error of camel - cxf
initialized ` textRect ` and ` iconRect ` fields in multiple UI classes to ensure consistent instantiation and avoid potential null reference issues
added handling for BoosterSet in ComponentAssemblySaver and modified the return value in BoosterSet in BoosterSet to ensure correct processing of boost sets and improve logic clarity
http : / / issues . apache . org / jira / browse / amq - 6470 - add support for use proxy authentication with jabref http proxy server
updated metrics handling in multiple classes to use a unified time measurement approach to improve code clarity and maintainability by standardizing metric naming conventions
replace ` InternalError ` throwing with ` return false ` in ` Class . java ` to improve error handling when compiling stubs fails
hbase - 5920 remove reference to mortbay from testipcutil ( huaxiang sun )
removed chunked transfer handling from NettyRoutingFilter to simplify request processing when handling chunked transfer headers
added a call to ` clearAttributes ( ) ` in ` PatternTokenizer . java ` to ensure any residual attributes are cleared before processing a new input
updated VerificationAfterDelayImpl to include a polling period parameter and improved error handling logic to enhance the flexibility and reliability of verification delays in Mockito
added Hive authorization manager configuration and compaction checks to enhance security measures during query processing
zeppelin - 451 : do n ' t copy docker interpreter if they do n ' t exist
hbase - 9289 addendum fix the warning in hbaseadmin # gettableregions ( )
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to instability
updated the calcXBounds method in BarLineScatterCandleBubbleDataProvider to improve chart bounds calculation to ensure accurate graphical representation of data according to axis modulus
added error handling to resource management for the reader parsing process to ensure proper resource management and prevent potential memory leaks
fix # 6372 - memory leak in httpclient when send over http / 2 . x
added a new test class UseDiamondOperatorWithVarTest for testing Java code to ensure correct behavior of diamond operator with var arguments
added null and closed check for ResultSet before closing it to prevent potential NullPointerExceptions when closing the result set
updated driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 to reflect the latest version compatibility in the DerbyDatabase class
fixed bug 1371980 - usestringbufferlength no longer flag string without buffer
removed error logging statement from RemoteSparkJobMonitor . java to improve performance by reducing unnecessary error logs
modified the createDb method to return a Connection object and added resource closing to ensure proper resource management and prevent potential memory leaks
8209028 : generate sample code in the java microgenerator ( # 4207 )
hbase - 23352 avoid off - heap compaction for large store ( # 4565 )
modified BitstampDepositAddress to handle both " address " and " address " when unmarshalling JSON to improve functionality and ensure correctness of deposit address handling
replace IllegalStateException with IllegalArgumentException when buffer capacity exceeded to improve error handling by using the response ' s abort method
updated the method call to use ` toAbsolutePath ( ) ` on the ` linkPath ` parameter to ensure accurate path representation when checking for deleted directories
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` and renamed ` operationType ` to ` InvocationType ` to improve event categorization and align with new metrics handling features
modify the return statement to iteratively check for multicast support in the NetworkInterface to ensure that multicast support is respected during network connection handling
add a loop to validate all valid checksums before returning true to ensure that only valid checksums are considered for processing
added a clone method that throws an UnsupportedOperationException to the BufferedChecksumIndexInput class to enforce immutability of the IndexInput instance
replaced manual square root calculation with a radius - based calculation in Circle . java to improve the accuracy of circle positioning
added a condition to assign the frequencyBand to the channel only if it is the correct identifier to improve the accuracy of frequencyBand assignment and avoid unnecessary data loss
rename ` tapSquareSize ` to ` tapRectangleSize ` and update related references in ` GestureDetector ` to improve clarity and consistency in representing tap rectangle dimensions
fix the default _ replication _ on _ write from true to false
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated class and implemented date formatting in Util class to enable precise date representation and improve date handling in the trading service
added ` getDelegate ( ) ` method to ` TraceCallable ` and ` TraceRunnable ` classes to provide access to the delegate for callable and runnable implementations
updated synchronization logic in FileActivity and FileDisplayActivity to improve error handling and user feedback to enhance file synchronization experience and ensure appropriate user feedback during synchronization
added methods for writing to the connection stream in both ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to enhance functionality to enable direct writing to the specified stream in a more efficient manner
michaeltamm : fix issue with context . getattribute ( ) return null when the value be null .
updated the TableCell constructor to accept both a string and a style class for the output format to simplify the table cell initialization and improve readability
added a new configuration file ` TracingAutoConfiguration . java ` with various bean definitions and configurations to enable automatic tracing configuration for improved trace management in the UAA service
fix # 141 : add miss tag to submission list
fix the exception when execute multiple queryable segment in serverqueryexecutor ( # 23232 )
refactor VertxBufferTest . java for better code organization to improve maintainability and readability of the test cases
fix arrayindexoutofboundsexception on hsmf message submission ( issue # 494 )
changed mContext from private to protected in PredictionAppTracker . java to allow subclasses to access mContext while maintaining encapsulation
removed unused imports for SortedSet and TreeSet in ShowTablesOperation and ShowViewsOperation to streamline code and improve readability by eliminating unnecessary dependencies
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` and tests to use it to improve error handling specificity for MongoDB integration in the application
[ hotfix ] fix compilation error in jobcoordinationservice
updated the bitsToHumanReadable method to use a HashMap for better handling of media types and corrected a typo in the corresponding method to improve maintainability and ensure accurate representation of media types
updated the merge policy initialization and added a test case for cases with no pathological merges to improve merge behavior and ensure proper testing of edge cases
added a check for mOverviewStateEnabled in RecentsView . java to prevent further execution to ensure code does not run when the overview state is not
clarify the error message about no binaries when it be run on a CPU
allow specify the input stream for the reference . properties file ( issue 91 )
added null checks for incoming fields and fields in FilterLeafReader to ensure robustness by preventing NullPointerExceptions when passing null values
add secret key size provider to the cryptographic builder . relate to github # 1572
updated IOException handling to include the exception message in NetSocketReader and SoftEndOfStreamException to improve error reporting by providing a more descriptive exception message
use default @ inject instead of @ inject for 1.0 ( # 1699 )
updated the size and attributes in BundledDistributionTest and added assertions in PostgreSQLTest to enhance test coverage for database user properties and improve code validation
[ flink - 33954 ] [ pipeline ] add pipeline . name option to allow user - defined job name
updated scaling logic in OverviewState . java to account for two - panel layouts to ensure correct layout behavior for different UI configurations
make itceplainsbiome extend Snowy biome instead of grassy one
removed zone parameters from getMaxTime and getMinTime methods in DataUpdateManager and StorageUtils to simplify method signatures and improve code readability
[ j2kt ] use the qualify field in which the field belong to the class .
fix crash when check for gallery url . close # 192
use getall ( ) to save entity ( may fix bug )
hhh - 14332 fix oracledialect when use a non - existing table name
fix console filter for path with space ( # 5444 )
added a new parameter ` mNumberOfAllFiles ` to the ` FileMenuFilter ` constructor and updated the constructor to accept an additional parameter to enhance functionality by allowing selection of all files in the menu
[ java ] do n ' t account for window length in network publication .
fix a typo in the javadoc of GuildUpdateOwnerEvent . java
make indicate that we do n ' t need to increment in portal tick on creative ( # 1838 )
updated spacing and text fill settings in ClusterMonitorTileSkin to use compressed color to enhance visual consistency and support for compressed chart data
refactor code in ResponseTemplate , TransactionalMapCodecTemplate , TransactionalQueueCodecTemplate , and TransactionalSetCodecTemplate to improve code organization and maintainability by standardizing naming conventions
change variable types from int to long for length calculations in Base64 . java to prevent potential integer overflow when handling large binary data sizes
removed the null check for header in the renderer configuration to simplify the condition since header is guaranteed to be non - null
cloudstack - 8563 : make new disk offering use same service offering if both be the same and custom service offering be use
updated import statements and builder instantiation in HitbtcAdapters . java to improve code clarity and ensure better type safety with specific classes
fix a race condition in the idle sync code ( # 459 )
updated the service annotation for JRuby scripting in JRubyScriptEngineFactory . java to improve clarity and consistency in service naming
fix a bug in configcategory ' s tostring ( ) , it be use the wrong variable name
updated condition for precise exchangeAmount in ParticipateAssetIssueActuator . java to ensure correct handling of exchange amount boundaries
removed an unused loop and condition from FeedUtils . java to improve code clarity and eliminate unnecessary iterations
add a test case for the HDF4 file parsing in HDFParserTest . java to ensure correct handling of HDF4 files under different Java versions
added a static final boolean flag ` CALCITE _ 6092 _ FIXED ` and modified test cases to use it to conditionally check for invalid time values to ensure that the SQL syntax is consistently implemented and tested as expected
fix a syntax error in the return statement to ensure consistent coding style
added a method to quietly close all AutoCloseable resources to improve resource management and prevent issues with closing resources
replaced multiple string resource variables with a single string resource string in RemoveFileDialogFragment to simplify code and improve maintainability by using a centralized string resource
added null checks for srcWidth and dstWidth before setting the drawing context to avoid potential errors when srcWidth or dstHeight are invalid
replaced ReflectionHelpers with Java ' s Unsafe for defining class methods to improve security and simplify method invocation handling
simonstewart : allow wildcard matching on mynode . example . com and mynode . local : 63
refactor conflict handling in CachedRowSetWriter to use a long variable for conflicts to improve clarity and maintainability of conflict tracking logic
fix an npe from delete the version file ( # 4750 ) . ( # 4750 )
refactor reference handling in ReferenceMemory to include reference equality check to improve reference management by ensuring reference is always the same instance
modified the injection logic to handle seed files more effectively to improve error handling and control flow when there are no seed files to inject
added a condition to hide the original view in the FloatingIconView to improve user experience by allowing the original view to be visible when hidden
fix infinite loop when maximum iteration hit max iteration .
added logging for unsupported texture coordinates in CombinedTexture to improve error handling and debugging for texture coordinates
added error handling for file deletion and improved variable naming for product retrieval to enhance robustness and prevent potential runtime exceptions
( chore ) camel - trace : added seek and close method to consumer and producer
[ findbugs ] fix stringindexoutofboundsexception in handledaoimpl
replaced the addition of elements to the convertedValsList with a constructor initialization to improve code readability and efficiency by using method chaining
add a deprecated constructor to the AbstractTimer class to signal that the constructor should no longer be used
added a warning dialog for nightly builds in MainWindow . java to inform users of potential issues when the Universal Gcode Sender is a nightly build
added sorting of response attributes by recipient and email , so that the order of response come first
updated return statement to include ` throws ` declarations to improve clarity of the code by removing unnecessary throws
deleted CacheApplication . java and renamed CacheController to CommonsApplication . java while updating references in ShareActivity . java to streamline cache handling and improve code clarity by consolidating cache - related operations
replaced calls to ` realObject . getApplicationContext ( ) . startActivity ( intents ) ` with ` RuntimeEnvironment . application . startActivity ( intents ) ` to streamline code and ensure consistency in accessing application context
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future development
updated configuration update logic to use ResourcesManager for devices running KitKat or higher to improve compatibility and ensure proper resource handling on devices running newer Android versions
added a new constant VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS to manage the existence of stack repository links to ensure that resources can be updated only if they already exist
updated ApplicationImpl , NodeImpl , and Witness classes to improve code structure and maintainability
fix race when load cf metadata that do n ' t exist
added new import statements for internal resolver functions in CheckPackageAccess . java to enhance access control for XML utility classes
rename ` persistExecutionContext ` methods to ` add ` and ` updateExecutionContext ` across multiple classes to improve clarity and consistency in method naming
remove loop exit from loop after add new entry .
updated ` SearchAndRecommendationsScrollController ` to use ` WidgetsRecyclerView ` instead of ` RecyclerView ` and added vertical margin calculations to improve layout responsiveness and ensure consistent height measurement based on scroll position
added a check for terminal support before proceeding with further operations to ensure compatibility with systems that do not support the terminal
changed variable types from ` long ` to ` int ` for ` fiveSeconds ` and ` timeAllowed ` to improve flexibility in handling time values and reduce potential overflow errors
added session validity check before flushing session data in AbstractSessionCache and modified session attribute handling in RemoveSessionTest to ensure sessions are valid before processing and enhance test coverage for session management
core - 2329 support drop index for unique and non - unique constraint
replaced Vector with ArrayList for buttons and added action listeners to enhance flexibility in handling RadioButton actions
refactor UserManagerCompat to extend UserManagerCompatVM and update related utilities to improve compatibility with newer Android versions and enhance user management
added getDatabaseMajorVersion and getDatabaseMinorVersion methods to multipleDatabase classes and updated their implementations in ReorganizeTableStatement to ensure compatibility with different database versions and improve error handling during operations
updated ActionGraphCache to include mismatched rules and modified action graph handling to improve mismatched rules reporting and enhance clarity on warning messages
hive - 14444 : add explain plan for lock database ( owen o ' malley , review by miklos gergely )
refactor RankingTopComponent and associated UIModel to use setter methods for graphical properties to improve code readability and maintainability by consolidating variable assignments
added handling for disconnect messages in HandshakeHandler and updated logging in NodeImpl to improve disconnect message consistency and enhance logging clarity
added a test method for setting and deleting storage groups in IoTDBAuthorizationIT . java to ensure proper authorization checks and functionality of managing storage groups in the IoTDB
chore : update google - cloud : coordinate system to match open source code ( # 9365 )
fixed issue # 2747 - wrong detection of miss type for named variable
added methods ` afterTestClass ` and ` beforeTestClass ` to ` StepScopeTestExecutionListener ` to handle test lifecycle events for improved test management
[ java ] refactoring : remove redundant check when initialise counter .
updated log messages in MultiSteps and SendEmail for clarity to improve readability and maintain consistency in logging
added a new initialization of joinKeys from joinDesc to ensure that joinKeys is properly instantiated to avoid potential null pointer exceptions
added PrincipalResolver parameter to registerAuthenticationHandler method to improve authentication handling by utilizing the provided PrincipalResolver
modified the ` addSettingsFromFile ` method to accept a ` ImmutableList < Path > searchPaths ` parameter to allow users to specify search paths when managing XC configuration settings
replaced mutable fields with final ones for better immutability to ensure immutability and prevent accidental reassignment
[ flink - 21954 ] [ runtime ] fix incorrect behavior of unaligned checkpointing .
[ multistage ] do not throw unsupportedoperationvisitor if table be invalid
add the ability for the graal . compiletheworldtest log option ( base on system property )
removed a check for LocalVariable in LambdaRewriter . java to ensure proper exception handling for unbound variables
added support for MySQL timestamp column in CreateTableGenerator to ensure proper handling of NULL values for MySQL in the generated SQL statements
ensure correct class loader be used for environment configuration after class loading completes
set ejection delay when stageNr is zero in SimulationListHandler to improve responsiveness by reducing delays
polish ` ` fix @ order ' ' comment in springapplicationtests
updated TransactionUtil2 . java for transaction handling to improve transaction processing efficiency
updated the ` validateIssuerClaim ` and ` getIssuer ` methods to accept ` OAuthRegisteredService ` as a parameter to enable more flexible issuer resolution based on the service context
updated string concatenation and added null check for coll in ClusterState . java to improve clarity of collection state representation and handle potential null references gracefully
updated alignment setting to use getAllStyles ( ) instead of getStyle ( ) to ensure all styles are applied for alignment
added foreign database and schema names to ForeignKeyColumn and related classes to improve flexibility in configuring foreign database and schema names
[ java ] use ` aeronexception ` to mark election a warning when timeout occur .
replaced static import of Shadows . shadowOf with a private method shadowOf in ShadowActivity and ShadowBluetoothDevice to improve encapsulation and maintainability of shadow operations
modified FileSelection . java to throw DrillRuntimeException for null or empty root paths and updated root handling logic to ensure robust error handling and improve path resolution in file selection process
reintroduce iforgeitem . oninventorytick for backwards compatibility .
fix export to native resource for export ( fixes # 797 )
add null check before calling invalidateOptionsMenu ( ) on getSherlockActivity ( ) to prevent potential NullPointerException when getSherlockActivity ( ) is not initialized
updated widget binding logic to include a success flag to ensure the application widget ID is correctly resolved based on the provided bind options
add new capability constants for air and quality models in EcobeeSensorThingHandler . java to enhance clarity and usability of capability handling in the code
code review for r provider implemnetation . fix numerous javadoc conflict .
added environment variable " AAPT " and " AAPT2 " to the Genrule class and updated tests accordingly to ensure correct execution of AAPT and AAPT2 tools in the build system
only dump safer access table if truffle _ compiler _ options be set
added null check before disposing of the message to avoid potential NullPointerException when message is null
changed the access modifier of the db variable and added initCache method visibility to improve encapsulation and ensure the db is immutable after being used
log4j2 - 1013 log4j error message should be clear that logwatcher be not support
replaced printStackTrace ( ) calls with fail ( ) method for cloning failure to improve error handling by replacing stack trace with a more descriptive return statement
fix issue with pipelinio telnet connection fail due to ` ` can not get data ' ' exception .
* fixed an issue with shader attribute lookup when the vertexbuffer . type be not string .
removed the " territory " variable from the connection string in the AbstractDIHJdbcTestCase . java file to simplify the connection setup and avoid potential issues with stale data
ww - 3907 handling of null firstexchangetimestamp ( )
updated language handling and documentation in TestHtmlTag . java and TestUseOption . java to ensure consistent language usage and improve test coverage for new functionality
updated condition to check if the result is not incomplete and the size exceeds 10 items to ensure complete items are validated before proceeding with operations
updated command usage message and logic for handling time column names in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and accuracy of the command for better user experience
updated output format handling to set the appropriate extension based on the output format to ensure correct file extension is used for different output formats when using HTML
inverted the condition for QSB margin in DeviceProfile . java to ensure proper handling of layout when not in a QSB context
add equal and hashcode method to animationlist ( # 4177 )
added date handling functionality to the AbstractGenerator and related classes , and updated related classes to utilize this feature to improve date management capabilities in HTTP responses
replaced Adler32 with CRC32 in Store . java to replace crc - based checksum implementation with a more efficient implementation
cloudstack - 4438 : xen . heartbeat . interval do n ' t default to any of second
added a new warning constant for zero area in FinSetCalc and updated related checks to use this constant to improve clarity and maintainability of warning handling related to fin area calculations
[ beam - 6395 ] fix npe when serialize documentmetadata on jackson ( # 6211 )
hhh - 2725 add sql . add date _ trunc function ( e . g . insert date )
added a check for " Memory Pool not found " in MetricUtils and modified error handling in MetricUtilsTest to improve error messaging and ensure proper handling of memory - related issues
fix compilation error due to miss call to completablefuture . completefuture in fileaccess
update validationtask error messages to reflect proper invocation of types using annotated with @ RuntimeType to improve clarity and maintain consistency in documentation
[ te ] use ` / replay ` endpoint instead of ` / generateanomaliesInRange ` ( # 4499 )
replaced instances of DataWord ( ) . getData ( ) with new DataWord ( 1 ) . getData ( ) across multiple files to ensure the correct data is returned for the latest proposal number
update badges logic in AllAppsContainerView to handle BubbleTextView and ItemInfo more effectively to improve badge application consistency and ensure proper state application for UI components
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 826 )
updated method calls in ResourceHandlerTest to start the handler correctly to ensure proper handling of context startings after the handler initialization
added a condition to return false when mDrawIdentifier equals WORKSPACE _ CUSTOM to ensure proper handling of the custom workspace identifier
remove assertion that could cause nullpointerexception when run trufflejdkservices without a lookupmodule .
add @ ignore to ClassicsuperHandlingTest . java regarding the test ' s behavior until call - through is set to default for unshadowed classes
updated import statements to reference ItBit classes directly to ensure compatibility with the latest version of ItBit library
ww - 3442 solves problem with profile activation
made classes more final and added private constructors to enhance encapsulation and prevent subclassing
cloudstack - 946 : fix : create user account from archive fails due to lack of a file descriptor in the stream
replaced usage of Class . forName ( ) and Class . forName ( ) with direct string comparison for Vector and Hashtable to improve code readability and reduce potential null pointer exceptions
added tableWithType parameter to log warning for invalid retention time to improve debugging by providing more context on the retention time source
trim whitespace from fragment list before checking for content length to ensure that leading and trailing spaces are consistently managed in the application
fix invalid file not find error message in resourcepack ( # 7688 )
refactor TransformerBuilder usage to streamline the addition of buttons in TransformerBuilder instances to improve code readability and maintainability
removed unnecessary condition for showAsGrid ( ) and added checks for task view focus and visibility to improve task view handling and ensure proper visibility before proceeding
updated calculate methods to return BMIViewObject instead of Map < String , String > to enhance type safety and provide additional context about the BMI view object
removed the comparator . comparing method call in QueryCommand . java to simplify the comparison logic by directly using the entry
fix hang when damage be track ( # 1034 )
refactor environment symbol handling and introduce a new constant for Java command line to improve code readability and ensure consistent handling of environment variables
added support for custom plugin properties in OptionsParser and corresponding tests to enhance the flexibility and functionality of the plugin configuration handling
updated condition to check if hashTable is not null or the joinType is not empty to ensure that the hashTable is valid before proceeding with the condition
updated timestamp handling logic to ensure seconds are non - negative and improved test method names for better clarity to enhance validation logic for timestamp types and improve test readability
[ java ] clone archive context after use in service container to avoid potential deadlock .
added a condition to check if compile is false before proceeding with the compilation check to ensure that compilation logic only executes when appropriate
add some test for image 2 and join and geotools .
refactor TogglableFlag class to improve default value handling and add a change listener to enhance feature flag functionality and ensure responsive updates when configurations change
fix : do n ' t log error when docker initialization fails
added a conditional check to return early if the platform is running to optimize performance by bypassing unnecessary processing on Android OIDs
refactor routesTest to use assertThat for better readability and maintainability to improve test clarity and provide more expressive assertions
added multiple functional interfaces for various data types in the codebase to provide functional programming constructs for various data types in the codebase
updated getSubsColor methods to return a String instead of an int and improved logging for bitrate limits to enhance flexibility in color configuration and enhance debugging with better bitrate handling
added a conditional check before deregistering the future to prevent potential null pointer exceptions when deregistration the future
replaced control frame byte handling with a output method for WebSocket output to streamline output stream management and improve code clarity
added a check for ` extras ` before initiating ` WelcomeActivity ` and handling the ` redirect ` flag to ensure ` WelcomeActivity ` is only started when the ` redirect ` flag is true
added a new class ShadowCheckedTextView that extends ShadowTextView to facilitate testing of CheckedTextView behavior in Robolectric
made ParserState class implement Serializable and added serialVersionUID to MethodHandle arrays to ensure proper serialization and prevent potential serialization issues
8225072 : add expiry exception for identrustdstx3 alias to verifycacerts . java test
removed redundant setting of temporary directory attributes to streamline code by eliminating unnecessary duplication
fix occupant to parse nick from presence message . smack - 69
updated the constructor of QuicSession to include the context parameter throughout the session to streamline the session initialization and eliminate unnecessary volatile keyword
updated merge policy configuration to use LogMergePolicy to ensure proper merge behavior based on the type of merge policy configuration
refactor method names and parameters in ICU4JImpl and TextPosition classes for clarity and consistency to improve code readability and maintainability
added support for ComputedDateValue in default value handling to improve type safety and functionality for default value calculations
fix : document nbtscoreboardioservice return null when scoreboard be empty
fix bug when resolve saml2 metadata from classpath ( # 898 )
make graphprinterdumphandler . createprinter ( ) protect so that it can be overridden
updated average price calculation for open orders in HuobiAdapters . java to ensure accurate order status representation
updated projection handling to use ` Field ` instead of ` String ` and switched from ` List < String > ` to ` List < Field > ` to improve type safety and consistency in aggregation operations
modified the ` addViewer0 ` method to return ` false ` based on a player ' s presence in the ` viewers ` list to ensure the player is only added when the corresponding viewers exist and improve code clarity
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable to improve memory efficiency and drawable state handling
refactor SPDYClient . java to streamline connection creation and handling to improve code readability and maintainability by reducing redundancy in connection setup
[ dubbo - 3914 ] fix protostuff object serialization bug ( # 3911 )
pdfbox - 4892 : improve the formatting of the code , a suggest by valerybokov
refactor the BarrowmanCalculator class for improved readability to enhance maintainability and clarity of the codebase
ggb - 1948 npe fix : do n ' t draw ` ` 0 ' ' if there be no number or number of axis in the view
replaced setFilter and setWrap methods with unsafeSetFilter and unsafeSetWrap for filtering and wrapping to enhance security by preventing unintended side effects
amq - 9221 : fixed typo in xmlWorkflowServiceImpl . java after fix it
updated the SSL connection implementation to handle HTTPS protocols and added a new class for trusting mechanisms to enhance security by enabling HTTPS verification for URLs that require hostname verification
take into account the user ' s preference with mediastream stats on g722
refactor TextureAtlas class methods for better readability to improve maintainability and ease of understanding for future developers
update method to return the module name instead of the product name for Swift library generation to ensure correct module naming during the build process
[ iotdb - 54 ] fix potential deadlock in testslot # finishreleaseprocess
# 427 - enh : add test for findids ( ) and findids ( ) with inheritance
replaced the variable ` closeFrame ` with ` rbuf ` for reading the response header to ensure the correct buffer is being read and validate the response header
fix infinite loop with object reference creation .
[ type : fix ] add ttl to log collection client
updated serialization logic to use NAMED _ FIELD instead of NESTED _ OBJECT and improved field name handling to enhance serialization consistency and support additional fields in the serialization process
added server and handler collections for managing server states in DeploymentExceptionTest to improve server management and ensure proper resource cleanup during tests
replaced direct initialization of Timber . DebugTree with a try - catch block to handle potential Resource . NotFoundException to improve error handling and prevent application crashes due to missing drawable resources
update return statement to handle null and empty objectName to ensure that objectName is properly trimmed when trimming is not null or empty
8220595 : jfr tool show potentially misleading message when it can not access a file
[ flink - 20537 ] [ table - planner - blink ] move planner / executor class definition to static final constant
renamed the variable ` owner ` to ` issuer ` and modified the subject assignment logic to improve clarity and consistency in handling certificate subject names
updated RuntimeOptions . java to mark the class as deprecated and mark it for removal to mark the class as outdated and discourage its use in future development
replace manual byte array conversion with string . getBytes method to simplify code and improve readability
added a new interface PermissionEvaluator in the Spring Security framework to provide a flexible permission evaluation mechanism for authentication objects
added an ERASE _ LINE _ ON _ FINISH option to LineReader and implemented cleanup logic in LineReaderImpl to handle prompt completion in the user interface
fixed - masterfs . connect ( ) method may throw npe if master server name be not find . # 538
replaced ` CALC _ MERKLE _ ROOT _ FAILED ` with ` BLOCK _ SIGN _ ERROR ` across multiple exception types to standardize error handling related to block sign and merkle root errors
fix resource leak in expandwar ( issue : http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 50727 ) .
handle error type when decode response ( # 6296 )
add absolute center to the spinner container to allow for the spinner to be positioned absolute
[ flink - 3462 ] [ runtime ] fix potential overflow when request memory segment in global pool
no need to create a new mbeanserver before rebalancing
replaced JUnit 4 runner with RetryTestRule in AbstractIT . java to improve test reliability by allowing retries on failures
refactor QueryStateMachine constructor and related conditions to remove auto - commit functionality to simplify state machine management and improve code readability
upgrade to jdk 1.6 . x and improve error handling in csv test .
added support for " javax . microedition . khronos . opengles . GL " as a valid name in the InstrumentationConfiguration to ensure compatibility with multiple SSL distinguished names in the application
[ flink - 24594 ] [ stream ] [ test ] minor cleanup of the timer test code
refactor request URI handling and add a test for connection methods in RequestTest . java to improve code clarity and ensure correct request processing for different HTTP methods
update code to use correct variable names and enhance storage point retrieval to improve code clarity and ensure compatibility with newer Android SDK versions
added methods to check and set priority for client sessions in SessionManager to improve session management by centralizing session status checks
added a package to scan for Liquibase . pro to facilitate scanning of Liquibase pro packages
refactor deleteSyncFolders method to deleteOtherSyncedFolders instead of updating an ArrayList to simplify the method signature and improve clarity by removing redundant list checks
updated the ` loadWithNewGlobal ` method to accept an additional variable - length argument to enhance functionality by allowing additional parameters to be passed when loading a new global context
updated FastPathResolver to adjust directory path normalization to ensure correct handling of path separators across different platforms
updated HiveClientModule to use toIntExact for maximum buffer size handling to improve accuracy in processing footer and stream sizes
renamed methods and variables related to randomization from ` isExceedRandomizationDepth ` to ` hasAlreadyRandomizedType ` to improve clarity and ensure accurate terminology in the randomization process
added support for handling LEAD and LAG functions in UnsupportedOperatorsVisitor and corresponding tests in TestWindowFrame to ensure proper functionality and error handling for unsupported operations in the query execution
added a line to clear headers in the proxy request in AbstractProxyServlet . java to ensure that the request headers are retained for proper usage
added a conditional check for SA attach in CompressedClassSpaceSizeInJmapHeap . java to skip tests when SA attach is not expected to work
added null check for bgColor and introduced a new TranslucentWindow class for full - screen window translucency support to enhance code robustness and provide a test for window translucency functionality
modified user info handling in UserInfoActivity to include error messages when a user info is missing to improve user experience by providing appropriate feedback when no information is available for the user info
added a new class ` PrecompiledHeaderSerialization ` to handle Boolean serialization to ensure compatibility with different machine configurations and prevent serialization errors
[ flink - 24770 ] [ table - planner - blink ] fix update - mode not correctly set in append mode
added a new integration test class MultipleOutputsIntegrationTest to validate the build and handling of multiple output groups in the project
updated string concatenation to ensure content equals oldContent when updating settings to maintain content integrity during updates
nifi - 7345 adding copy of versioned flow snapshot to processgroups ( nifi - 6309 )
replaced usage of new Object [ ] { } with ArrayUtils . EMPTY _ OBJECT _ ARRAY in encode and decode methods to improve code readability and maintain consistency in object management
added TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent mode for taskbar rendering
added new device status entries for leaving - dock and energy - save - mode in DeviceStatus . java to enhance user interface clarity regarding device functionalities
add a loading exception to the modelloader so that it can be use in the ui .
added JUnit Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable the test due to instability issues
pixeldensity ( opengl ) : fix getcurrentsurfacescale on macosx
modified RussianLowerCaseFilter . java to enhance functionality to improve handling of case - sensitive text for better user experience
removed unnecessary server and client properties configuration in CsvBulkLoadToolIT . java and QueryUtil . java to simplify the test setup by using an empty property and improving readability
replaced file separator characters with ' _ ' in displayName to ensure proper display formatting of file names across different operating systems
made the ` in ` and ` inRead ` variables public and added ` ResettableInputStream ` functionality to improve stream handling and enable seeking for audio files
added a new method ` repeatFirstLineIndent ` and modified indentation logic in ` ColumnText . java ` to allow control over indentation behavior for better text formatting
cast the ` oid ` to ` Object ` before comparison to ensure correct type handling and avoid potential ClassCastException
ensure that metrictrackerfactory be set before call getconnection ( ) in hikaridatasource . getconnection ( ) ( # 436 )
[ gr - 2918 ] fix controlflowanchored handling of controlflowanchored .
added a call to set focus painted for buttons in WindowsPlacesBar to ensure buttons do not use focus during rendering
updated the backing index check to include UniqueConstraint and ForeignKey to ensure compatibility with additional object types in the database snapshot handling logic
add support for getaccountledgersparams to the kucoin api
added comment and validation for dc . title metadata to ensure we do n ' t contain a dc title
fix an npe in gapinsertiondetector when there be no utterance
added test base on user forum issue .
updated thread management logic to use a new database update thread setting to improve efficiency by allowing dynamic updates of the number of database threads
adjust the fast scrolling threshold from 40 to 10 milliseconds to improve scrolling responsiveness and performance
update the SystemClassName initialization to use " Ljava / lang / System " instead of converting the class name to a internal representation to ensure consistency in the representation of the system class in the codebase
hhh - 13644 - return resultstream from getresultstream ( ) . getstream ( ) when call with no nullargumentexception
updated the initialization of the APIProperties map to handle null cases to avoid potential NullPointerExceptions when accessing API properties
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text frame data to improve WebSocket message handling for binary and text data
[ java ] disabling test that flaky test for firefoxdriver
updated random double generation logic in RandomGeo3dShapeGenerator . java to use a simpler simpler simplification of randomness to enhance readability and maintainability of the random angle generation logic
added a keepAlive method to manage ClassLoader references to prevent premature garbage collection of the ClassLoader
changed the return value from false to true in SQLiteDatabase . java to ensure the method indicates successful execution of the operation
add workaround for jsr166 ' s util concurrent signature issue
added MkdirStep functionality to multiple classes and updated steps in FatBinaryTest to ensure that output directories are created during project structure and improve test validation
fixed an issue with the lwjgl3d test be fail though : http : / / github . com / codenameone / codenameone / issues / 2977
[ kie - issues # 305 ] ensure the jpmml module be available before compile it
replaced locationMode with thermalStatus in ShadowPowerManager . java to accurately reflect the purpose of the thermal status in the power management system
use tmp directory on macos to avoid warn log ` ` java . io . tmpdir ' ' ( # 1787 )
geot - 5573 : make it possible to disable memory map on window for primitive file reader
added a null check for the organization in the pom . xml file to ensure that a required organization is present before proceeding
update license information in SepPostingsWriterImpl . java to ensure compliance with licensing requirements for the project
deleted the TerminateWebSessionListener . java file to remove unused listener to streamline the codebase
updated the executeChildProcess method to use a system property for the class path to ensure correct execution of child processes based on the system ' s classpath
replaced ArrayUtils . EMPTY _ BYTE _ ARRAY with new byte array arrays for cryptKeyInit , cryptKeyPriv , and md5Salt to improve memory efficiency by avoiding relying on ArrayUtils for empty arrays
added JUnit Pioneer annotations and a test method in AddLicenseHeaderTest . java to ensure that the test method behaves as expected to fail and is linked to a specific issue
update LAUNCHER3 _ PHYSICS flag from false to true to enable the launcher 3phySICS feature for improved user experience
added a closing tag for the div in HtmlThreadInformationsReport . java to improve the layout by preventing unnecessary HTML elements
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and removed LUCENE _ 31 from Version to reflect the latest version updates and improvements
added macOS symbolicator and task handles while updating OS condition check for compatibility to ensure proper handling of macOS - specific functionality in the
use the weak reference to prevent memory leak in inboundpacket . should fix some memory leaks .
fix network dispatcher exception . just print a debug log , not error .
[ java ] allow the aderon client to be disable by default when there ' s no conductor .
added a break statement in the TouchImageView class to ensure control flow exits the switch case properly
chore : [ native ] update go _ package to match open source code ( # 957 )
comment out sslengine . flush on handshake complete because it ' s not need .
fix : add typeutils . isassignableto in case where the generic parameter be bind to the generic parameter of a class
use concurrenthashmapset instead of nonblockinghashset in memtablespendingflush .
added null check for errs before memberEnter and modified error return logic to include unconditionally check to improve error handling and prevent potential null pointer exceptions
fix # 1477 by remove invalid no _ background
replace ` finish ( ) ` method with ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure the dialog is properly closed after a cancel action
check that the value of a division be non - negative and adjust the calculation accordingly to ensure that the calculation considers positive range scenarios
added a method to read a stream from an InputStream and updated image loading to use it to improve handling of large image stream data and ensure consistent image loading
added variable declaration and undefinite access methods to CaseStmtToken and updated related classes for handling contextual variable declarations to improve the handling of variable declarations and enhance code maintainability
updated the initialization logic for the cipher provider in RSAClientKeyExchange . java to handle exceptions during the handshake to improve reliability and error handling during the cipher provider initialization process
added " psapi . lib " to the addition of additional dependencies in WinGammaPlatformVC10 . java to ensure compatibility with additional libraries in the platform
updated comment formatting in StringUtilsTest to use system property for consistency to ensure proper line separation across different environments
added compatibility and encoding configurations in TemplateEngineFreemarker and updated script alert syntax in ApplicationController to ensure proper handling of HTML characters and improve JavaScript syntax integrity
8274259 : sun / awt / datatransfer / crdgeneratortest . java fail with java . io . bytebufferexception : marshal error to string
bug 54777 - potential nullpointerexception when send sampler without parameter
add a system property to allow customization of the EmailableReporter used in TestNG
408904 enhance commandlinebuilder to not escape string inside single quote
removed public access modifier from multiple interfaces and classes to align visibility within the same package for encapsulation
added a line to set the number of reduce tasks in FreeGenerator . java to allow configuration of reduce tasks based on number of fetchers
fix : handle object field with default value ( # 2729 )
change checksum of saveproperties to stay in sync with the correct typo .
updated texture extension checks in FloatTextureData . java to ensure compatibility with OpenGL 3.0 and improve error handling
implement write / close file in fileserver ( per jmeter suggestion )
added null check for outputDirectory and jarStream before setting output directory to ensure output directory is set only when both input stream is null
replaced direct return statement with performance measurement using PerfStatsCollector to improve performance tracking and reporting of sqlite - related operations
updated usage of JDK tools from the current JDK to the test JDK in JMapHProfLargeHeapTest and JDKToolLauncher to ensure the tests use the appropriate JDK tool configuration
add resourceerrorhandlingexceptionhandling enum to avoid ogcexceptionhandling
modified buffer position calculation in RAMInputStream and added EOFException handling in TestRAMDirectory to ensure proper buffer handling and validate end - of - stream behavior in tests
add message to illegalstateexception on miss resource
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added AccessControlContext class for permission testing to enhance thread behavior control and facilitate security permission testing in the ForkJoin framework
updated the handling of recycle memory and added logging for HardRefCache to improve memory management and provide better insights during debugging
hbase - 7568 addendum fix testsplittransaction . testsplittransaction fail on hudson
added null check for currentSelectionArea in CompatibilityEngine . java to ensure safety against potential NullPointerException during selection checks
remove unused ee10 - demo - realm file and add distro test ( # 9886 )
added logic to adjust folder layout based on span dimensions to ensure proper alignment of folder items when spacing is applied
refactor CacheOffHeap class for improved performance to optimize memory usage and reduce execution time
not all ddl create table require this to prevent the database from load the data
added conditional logic to handle potential corrupt XML gid values in TiledLoader . java to improve error handling and prevent potential issues with invalid tiles
tilecache : synchronize setworkingset to avoid concurrent modification
added a new Java class to calculate the minimum and maximum number of steps based on specified conditions to implement a solution for a specific problem that determines if a certain number is equal to a given point
fix nullpointerexception report in minecraft .
fix potential crash when rendertype be never set ( # 8976 )
add a new method to remove specific tags from the tooltip in GuiConfigEntries to improve tooltip formatting for better clarity and user experience
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` and updated its assignment method to ensure compatibility with String representation in the module type
added null check for recieptents before mailing the email and replaced milliseconds with milliseconds to improve code robustness and ensure accurate time measurement
refactor the ` isSingle ` logic into a new method ` isSingle ` to improve code readability and maintainability by centralizing the single - value checking logic
docker - image : fix race condition between the docker - image process and the docker - client .
added resourceMode field to AndroidMetadata and updated related methods to utilize it to improve resource management by allowing the specification of resource modes for better resource handling
replaced DateUtils . truncate with Calendar . getInstance ( ) for date manipulation to improve code readability and leverage existing utility for date manipulation
updated method call from ` importProject ` to ` importProjectCore ` in ` OpenAndroidModule . java ` to improve clarity by using the more appropriate method for importing project core files
added error handling for CommandFailedException in LiquibaseCommandLine to improve user feedback when a command fails
refactor TreeMap implementation to improve performance to enhance efficiency of string - to - map operations
added methods to enable asynchronous stack traces and improved exception handling in the Display class to enhance stack traceability and debugging capabilities during exceptions
added a method to set the glow color in BubbleTextView and updated the Folder class to use this method to allow dynamic color adjustment for folder items
add ` ` file - row - text ' ' style class to link and description table of the linked file editor
added a test method to verify class name matching in ResultSetMetaData to ensure accurate retrieval of class names from the database for improved functionality verification
removed the use of IOUtils . deleteFilesIgnoringExceptions during file writing in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify the file deletion process and improve code clarity
updated the upgrading check to ensure null safety when _ info is not null to improve robustness by preventing potential null pointer exceptions
added a constructor to the ShadowLocation class that initializes the provider variable to enable initialization of ShadowLocation instances with a specified provider
modify maxRAM calculation to include a check for 32 bit device to ensure it can accommodate larger device ram values
add stats for empty map if no data be included
added logging functionality to FileProfileActivator for file existence and missing checks to enhance debugging and monitoring of file profile activation process
use invalid name instead of noname1234 to improve error reporting when writing to pdfs
fix a concurrentmodificationexception in the guilddetails api ( # 1152 )
update condition in ExpandableUploadListAdapter to use MAX _ NUM _ UPLOADS _ SHOWN instead of a fixed length to ensure that the array size does not exceed the constants for better usability
added test cases to verify the deletion of records in DashboardUserMapperTest . java to ensure that the delete method behaves correctly and returns expected values
update parameter name to match the new parameter name ( # 3907 )
[ gr - 45196 ] improve handling of manage pointer in llvmbean .
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for better control and performance
chore ( facade ) : add link to launcher in help
updated action bar title handling in DrawerActivity . java to improve user experience by providing clearer messaging about new interactions
rename CommandLineParserTest . java file to improve clarity in test naming conventions
added interpolators for animating apps content FADE based on defined thresholds to improve animation responsiveness and visual feedback during state transitions
updated the return statement in DefaultJavaLanguageNamer to use javaNameFromExternal to improve clarity and consistency in the naming conversion
8018173 : [ macosx ] remove native method setframe and release from cwrapper
added constant value checks in the Checker class and created a ValueTest class for testing to ensure proper handling of constant values and validate functionality through testing
8152098 : [ backout ] make intrinsics flag diagnostic
removed null check for constructors in PojoUtils . java to simplify the code by assuming constructors are not null before checking for empty
remove unnecessary import that be break the build of camel - jira
updated string concatenation syntax in UploadBuild . java to improve clarity and consistency in output formatting
modify bounds settings in DeviceProfile . java to adjust layout parameters to improve layout positioning and accommodate search bar offset
improve javadoc of connect timer behavior ( # 1046 )
refactor the overview command handling to run on the UI thread to ensure that UI - related actions are executed on the main thread for better responsiveness and performance
added the method ` getSourceGroupOptional ( ) ` to the ` AppleSource ` class to ensure that the source group is properly initialized and not null
increased timeout values for triggerFiredLatch in TestSimTriggerIntegration . java to allow more time for trigger firing and improve synchronization
ninja : fix source of integer overflow in float reader
fix a possible nullpointerexception in abstractnodecostsearch
added logic to skip form and dialog components in ResourceEditorView to ensure that only essential UI components are processed in the resource editor
fix crash when launch some apps which require icon to be load on
use the most recent commit point to get the most recent one
added unit tests for IMEI and measurement methods in ShadowTelephonyManagerTest and ShadowTelephonyManagerTest to ensure correct functionality of IMEI - related methods in the telephony manager
removed the debug method from SimpleHostRoutingFilter to streamline debug output for better traceability to improve debugging capabilities by providing detailed request information when requested
added a destory method to multiple classes and implemented it in the IndexSegment and IndexSegmentImpl classes to ensure proper resource management and prevent memory leaks when closing components
[ issue # 6996 ] add test for consume stats to all message send and receive ( # 6997 )
use standardcharsets . utf _ 8 instead of charset . forname ( ` ` utf - 8 ' ' )
hbase - 27090 small fix in hregion # testbulkload ( ted yu )
added a nullable annotation for the commission parameter in DefaultWithdrawFundsParams to enable better handling of fund transactions withdrawal parameters
removed unused import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and reduce unnecessary dependencies
updated exception handling to consolidate exception creation into a single block statement to improve code readability and reduce redundancy in exception management
throw error with a clear error message if someone try to invoke a abstract method that be not in interface
replaced direct disk sweep with a StacklessLogging for better debugging to improve disk management and traceability of the file session handling process
added Serializable interface and refactored Entities class to use static maps for XML , HTML32 , and HTML40 entries to improve data handling and encapsulation by restricting access to static fields
modified test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added null check for claimRequestString before parsing to improve robustness by handling potential null values gracefully
hive - 23702 : hivilteroptransposerule should use relbuilderfactory to initialize filtersetoptransposerule ( daniel dai , review by thejas nair )
updated the ` processTypeHintForNestedDocuments ` method to handle null values more effectively to ensure proper handling of null values in the update entity context
refactor CoreAdminRequest to use CoreStatus for improved status retrieval to enhance clarity and consistency in handling core request states
fix npe on reload when there be no config file
corrected string concatenation syntax in AbstractQuerydslProcessor . java to ensure proper concatenation for better readability
more debug output to diagnose possible deadlock issue
rename setOf methods to copySetOf for better clarity to improve code readability and maintainability by using descriptive method names
camel - 7634 : camel - mail : do not use slow tostring ( ) method . thanks to stephan siano for the patch .
http : / / issues . apache . org / jira / browse / amq - 4868 - fix null pointer exception in connection factory
modify the return statement to check if the identifier name is a property name to ensure proper retrieval of the identifier ' s name
added a new ` WaveGeneratorActivity ` to handle the lifecycle of the wave generator activity to streamline the user experience by providing a dedicated activity for app features
bug 62166 : fix npe when sheet not present in the map return
fix # 4238 : add test for log and exec event
added a new test method ` testNoWriter ` to ` TestReplicationHandler . java ` and modified the ` useFactory ` usage in ` TestReplicationHandler . java ` to ensure that the HDFS factory is used during node indexing and creating a new index
do n ' t dispatch method _ okra on gingerbreaders that we do n ' t use , so we can exit
updated DnsClient and DefaultMxRecord classes to implement Comparable interface and modified record handling to ensure consistent ordering and priority management when processing records
refactor thread creation in XToolkit to use a privileged action for improved security and encapsulation to enhance thread management and maintain a hierarchical thread group structure
added validation to the SelectBox and set the dropdown selection to " Linux6 " to ensure proper user interaction and improve user interaction
replace IllegalStateException with Collector . printStackTrace for exception handling to improve error reporting by providing stack trace information when an exception occurs
improve flowbuilder ' s handling of parent flow ( # 2906 )
change connectionState variable to be volatile and update its usage in the return statement to ensure thread safety for connection state access
camel - 13402 : camel - core - poll : increase defaultpolling - period for integration test
use mmapalloc ( ) instead of malloc ( ) to avoid unnecessary allocation .
6978886 : javadoc show stacktrace after print error result from disk full
[ java ] unusedmodifier : false positive for static enum
refactor logging statements to use method reference syntax instead of lambda expressions to improve code readability and maintainability
test : add name to parameterized parameter name for ssl = { 0 }
transformer : fix transformhelper to handle illegalformatexception
updated the method name from ` getUserPermissions ( ) ` to ` getActiveConnectionPermissions ( ) ` for clarity to ensure the correct permission is used for accessing active connection permissions
refactor equality check in Point . java using EqualsBuilder to improve readability and maintainability of the equals method
fileprocessor : fix npe if outputroot be null
pdfbox - 3863 : add annotationfilter to ease the use of annotation for page drawer
modified StackTraceCleaner . java to improve stack trace handling to enhance stack trace accuracy and maintain code consistency
updated content type handling for CSS and JavaScript files in PluginServlet to ensure correct content type is assigned based on the file extension
hhh - 14077 : skip testliteralprojectionandquerytest on oracle , sql server and sybase
renamed the parameter ` slot ` to ` slotSize ` and modified conditions for updating parameters in ` ForkController . java ` to improve code clarity and ensure proper handling of empty stats array
added ` getStats ( ) ` methods to ` AbstractDataImportHandlerTest ` and ` ContextImpl ` classes , and changed ` docCount ` and ` deletedDocCount ` to ` AtomicLong ` in ` DocBuilder ` to improve performance tracking and provide detailed statistics for document counts
[ scb - 2338 ] make kie client wait more aggressive ( # 2349 )
added scrolling functionality using AccessibilityManagerCompat and updated gesture margins in BaseOverview and LauncherInstrumentation to improve user experience by enabling smoother scrolling with appropriate touch events
added unlock dialog functionality to the UI and updated the PausedDialog to include it to enhance user experience by enabling users to unlock unlocks easily
clear the drag - and - drop event crop on touchup
ww - 3692 add default value for name parameter of streamresult
updated the exception type in the testNormalizeOrder method from MalformedURLException to IOException to improve error handling specificity and maintain consistency in exception handling
updated the print statements in TsFileSketchTool to include the chunk type to ensure accurate marker output by including chunk type information
added headers exclusion for Swift file names in UmbrellaHeader . java and updated ProjectGeneratorTest . java to validate header contents to exclude specific Swift files and improve test assertions for header handling
formatted the method signature by adding a space before the comma in the onHttpError method to improve readability and maintain consistency in method formatting
added encode method . encode ( ) to RequestPlugin . java to ensure proper handling of special characters in HTTP requests
mondrian : fix ' mondrian . sql . spurious ' use FLOAT ( ' ' ) in the sub - query .
added validation for null or blank password in LdapAuthenticationProviderImpl and introduced a test class for LDAP authentication to ensure that a valid password is provided before proceeding with LDAP authentication
pdfbox - 4892 : remove unnecessary boxing , simplify string concatenation
clear the complexWriters in ProjectRecordBatch . java to ensure proper resource management when the condition is not met
added @ SuppressWarnings ( " serial " ) annotations to multiple classes to suppress serialization warnings for specific classes to ensure proper serialization behavior
fix npe in classpath scanning when lass class not find
add error type handle for location _ errors and modify return statement formatting to improve error message formatting and ensure empty location returns
add a constructor to eventsourcingrepository that take an optional event store , snapshot definition and repositoryprovider .
refactor symbol handling logic for binary nodes in mmm Attr . java to improve clarity and maintainability of symbol definition and scope handling
updated the text setting logic to handle and format search text in SearchedPeopleCursorAdapter to improve efficiency and clarity when displaying user input
improve message handle in standby mode ( # 1429 )
pdfbox - 2576 : set correct planar region to chunk - oriented type
close thumbnail file stream after use - fix for leak that leave open
move averageutil class to buildcraft . utils module to reuse averageutil class .
added new classes SigInt and SigIntBarrier for signal handling in the game mechanics to provide a mechanism for system interruption signal management in the application
refactor graph handling to utilize hierarchical graph structures in ExporterGEXF . java to improve compatibility and performance when processing different graph types
replace byte buffer with Text for handling null values in TCTLSeparatedProtocol . java to improve efficiency and error handling during string encoding
[ # 7294 ] fix error in rubric question detail ( # 7289 )
updated condition in CatalogComparator to check for CatalogAndSchema case instead of DB2Database to improve accuracy in determining catalog comparisons
simonstewart : start a browser mob proxy by default in test .
fix intellij error message formatting ( # 4477 )
fix issue with text change event not get fire when the edit be recreate with the last edit .
trufflestring : fix typo in javadoc .
[ flink - 1741 ] [ gelly ] fix compile error due to generic
updated Java version assertions in multiple Java files to ensure compatibility with the latest assertion framework changes
8025076 : fix for jdk - 8017248 break jprt submission for non - unicode locale
[ java ] use periodic barrier instead of a countdownlatch in cluster membership test .
added error handling for WorkspaceReader lookup and modified workspaceReaders initialization to improve stability and ensure workspaceReader is only added when necessary
[ scb - 2766 ] enable ssl by default and allow ssl config in service center
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
removed the " database " argument from the Jdbc3Connection constructor to correct the alignment of parameters within the constructor
added a new method ` ensureInstance ( ) ` to ` ServletHolder ` for ensuring the servlet is properly instantiated to improve thread safety and error handling during servlet initialization
added logging and modified server time handling in BinanceExchange and BinanceBaseService to improve accuracy of server delta tracking and enhance debugging capabilities
[ ci ] update javadocs for tomcat 8.5 and 8.5 adapter
change the way the component form is deregistered in InfiniteProgress . java to ensure animated is not null if the component form is unavailable
added options parameter to Bitmap decoding methods in ShadowBitmapFactory and implemented drawBitmap methods in ShadowCanvas to enhance flexibility in bitmap handling and improve usability
[ java ] : fix broken subscriber example due to change to make addsubscription block . made examplepublisher use the number of message config for consistency
added click handling for tweet links in the TimelineArrayAdapter to enhance user interaction by providing immediate text updates
added " text " to the list of data types in PostgresDatabase and updated conditions in NumberType and ColumnSnapshotGenerator to accommodate new numeric data type handling to enhance data type management and ensure accurate data type representation
make entryprocessorbouncingnodetest less flaky ( # 3683 )
updated state checks and error messages in AmbariManagementControllerImpl and AmbariManagementControllerTest to improve clarity and accuracy of state validation for host components
updated conditionals in CreateBridgeServlet to check for null before adding to inbox to ensure that the method does not return null when the bridge is already in use
fix race condition in http : / / issues . apache . org / jira / browse / nutch - 453 - refactoring
updated display name retrieval in network interface checks to handle potential null values to ensure safe execution and prevent possible NullPointerExceptions in Windows - specific conditions
[ add ] spritebatch , allow set the default shader at the end of the spritebatch constructor .
added property - c synchronous _ commit = on to TestUtil . java to ensure consistent synchronous behavior in test cases
added elementTypeCoercer to SortedSetTypeCoercer for coercing elements and improved builder pattern for reading sorted sets to enhance type coercion error handling and simplify code structure
fix ` ` remove file dialog not trigger ' ' bug
add a check for negative character range in URLPathEncoder to ensure safe access to input values without triggering exceptions
updated InetSocketAddress initialization to use a dynamic port based on the current time to ensure that the fragment storage is registered on a dynamically assigned port rather than a fixed one
updated the test to expect and return an empty map for clusters to ensure that the test correctly reflects the expected state of clusters
[ hotfix ] remove unused logger from yarnentrypointutils . loadconfiguration
fix the size of the last window after change the size of the window .
deleted the ShadowHtml class and updated assertions in HtmlTest to simplify the code structure and improve test accuracy
added a new class StarTreeRecordStoreFactoryBlackHoleImpl to facilitate the creation of StarTree record store instances with specified dimensions and metrics
replaced the logger setup with a dedicated h3Logger for HTTP3 and HTTP3 to improve clarity and maintainability by consolidating logger configuration
made the ` addListeners ` method public and updated its implementation in ` MockSettingsImpl ` to allow external access to the method and ensure proper validation of listener input
[ flink - 3131 ] [ runtime - web ] add checkpoint statistic to web frontend
updated import statements for security Constraint from org . eclipse . jetty . util . security to org . eclipse . jetty . http . security . Constraint in multiple test files to ensure compatibility with the latest security framework structure
added ' section ' constant to all the constant ( # 9590 )
use try - with - resources to prevent resource leak
camel - 1145 : make it easy to use portless attempt for test .
added a new method to retrieve library jar parameters and refactored jar parameter retrieval in JarBuildStepsFactory to improve code readability and streamline the retrieval of jar parameters for better maintainability
do n ' t use an anchor in the message ( they change too often )
bug 9452 : remove the overridden getpagesizeval function in listcapacity and use it from baselistcmd which have the change for default pagination to unlimited .
added a case for CLOSED in IteratingCallback to prevent further processing when the callback is closed
added isAuthorized flag and modified isAuthorized logic in AccessControlContext . java to ensure proper handling of access control context creation
add a try - catch block to handle failed events in OSGiDeployer . java to improve error handling and prevent potential ClassCastException during event processing
added handling for " tiff " media type in DLNAMediaInfo . java to ensure correct MIME type is assigned for Tiff media files
optimizedcalltarget : save assumption and type for each call in a thread - safe manner
added a new file ` CubocDesktop . java ` and modified the main method in ` Cubocy . java ` , while updating the rendering logic in ` MapRenderer . java ` to implement a new functionality for better camera management and enhance rendering performance
updated PolicyMonitor initialization to use the target directory for tests instead of test resource directories to improve accuracy and organization of test resources within the test suite
added a method to remove all files from the trashbinListAdapter to improve user experience by clearing unused trashbin files
updated import statements to use the correct package path to ensure compatibility with the current package structure
fix invalid savepoints for check _ global _ variable _ storage node and use the truffle tester instead .
updated the ` createLauncherEvent ` method to accept an ` Intent ` parameter and adjusted related calls to improve event handling by associating components with intents for better event data management
limit burn to a maximum between 1k and 13k ( # 3669 )
updated imports and added a method to snapshot objects for UniqueConstraint and H2Database to enhance database compatibility and streamline snapshot handling for unique constraints
updated item assignment logic in DMLTransformer . java to handle empty values gracefully to ensure correct formatting of SQL queries based on the schema and value list
updated import statements and modified method names in ServiceValidateControllerTests . java for clarity and consistency to improve code readability and ensure proper validation of service URL parameters
modified function name handling to include a boolean parameter for statement checks to enhance flexibility in function name display during statement operations
refactor JarLauncher class for improved readability to enhance maintainability and ease of understanding for future developers
upgrade to asm 4.0 . 5 , address unchecked warning
fix a problem with jingle call crash if one of the peer be unknown and the connection have n ' t be establish .
added a test method for updating a PostgreSQL date in ResultSetTest . java to ensure correct functionality of date updates in PostgreSQL
updated the request handling logic in PasswordResetEndpoints to include validation for user email addresses to ensure that only valid user data is returned to maintain data integrity
( chore ) camel - xml : fix an issue with camel - core when load xml
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
rename ` timeInSec ` to ` timeMillis ` in ` Isochrone . java ` , and update related references to improve clarity by reflecting the time unit in milliseconds
fix the force relay to work properly when a light relay be already bind . might need to re - bind later if one of the world be already set .
added a new ` Chainer ` class and updated the ` contains ` method to use it to improve the integration of ` CollectionSubject ` with JUnit ' s truth framework
o tweaked source to compensate for bug in note
updated the recordedTime calculation to include a portion of the00000L value to ensure accurate tracking of the recorded time for better resource management
added a condition to resize the status if the terminal type starts with AbstractWindowsTerminal . TYPE _ WINDOWS to ensure proper layout management for non - Windows users
updated logging message to clarify repository version state validation to ensure that host versions are only set when the state is not required
move some file in integration test to ` java _ src ` under ` java _ src `
mng - 2879 : use setorder instead of hashset to preserve order .
removed unnecessary try - catch block when parsing an operation to simplify code and improve readability by eliminating unnecessary exception handling
[ hotfix ] [ knative ] fix style violation of method call
make commitlog archiver thread pool name consistent
added connection and upload methods to CloudSolrClient and a test for cloud client uploads to ensure proper functionality and validation of Solr client connections in the cloud environment
synchronize on the add / remove operation of allbindings to avoid potential race condition when multiple thread access the same binding
added methods to clear temporary files and refactored file handling in ShadowContext to improve code maintainability and readability by consolidating file creation logic
fix # 423 - java . lang . nosuchelementexception : can not use linkedhashset in securexstream
[ drools - 787 ] allow kiehelper to work with kiemodulemodel ( # 2701 )
updated block event handling logic to utilize new data types for finemland behavior to improve accuracy in drying behaviors based on the specific data type
added a default implementation of the method getLocalIp ( ) in FinishedSpan . java to provide a default implementation for better usability
in progress - batch - 662 : fix persistence of step _ execution for integer
update comments in multiple dictionary classes to improve code readability and consistency to ensure accurate representation of character data and maintain consistency across the codebase
* add ` python37 ` to the ` resource ` list for cpython
refactor plugin tab to improve table refreshing and provide a refresh button to enhance user experience by allowing refreshing plugins dynamically
change log level from debug to warn for file - reloading and saving operations
cloudstack - 6369 : do n ' t try to attach the vm to a stopped volume when there be no vm for the volume .
camel - 7324 fixed the test error of sftp
renamed ` ExperimentalMockitoJUnitRunner . java ` to ` isLocalMockitoJUnitRunner . java ` to improve clarity and maintain consistency with naming conventions
updated serial handling in GpsSettingsActivity and Session classes to use Utilities . GetBuildSerial method to improve robustness and maintainability of the build serial retrieval logic
update the implementation of the SwapGBuffers class to improve performance and maintainability of the code
update AnimControl . java to ensure skeletonControl is properly removed when it is null to prevent potential null pointer exceptions when managing skeleton control data
added methods to set and get smart replies using reflection in ShadowRanking and ShadowRanking classes to improve code modularity and reusability for managing smart reply properties
[ java ] only list the archive segment file when need .
refactor initialization of carrot2ResourcesDir for clarity to improve code readability and maintainability
added null check for testRect in WindowsTreeUI and created a new file bug8004298 with GUI testing functionality to improve stability and verify the behavior of the WindowsTreeUI with the tree component
updated method signatures and constants in ScriptUtils and CompilationConfig to improve consistency and ensure compatibility with the latest ASM API version
do n ' t stop return null ; throw tasteexception if the key be null
added a setup method using ClientInfo to SurrogateAuthenticationEventListenerTests to ensure the test uses the correct client information for surrogate authentication events
added a isUserView flag initialized to false in CardPresenter . java to ensure the user view is appropriately initialized for processing
replaced the GraphvizJavaExecutorUtility method with a new GraphvizUtility utility method across multiple files to streamline the code and enhance maintainability by centralizing diagram output format checks
fix the crash in logdispatcherthreadmetrics when close the system ( e . g . logging ) .
added a new module - info . java file for the SQLite connector module to define module exports and dependencies for better encapsulation and dependency management
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper timing between asynchronous operations in the test
removed condition checking for " new " in permissionsManager initialization to simplify permission management logic for improved clarity
renamed DateParser and TestDateParser classes for consistency to improve code readability and maintainability
added a method to return a value of 0.5 f in SpringLoadedState . java to provide a default depth value for testing purposes
replaced buffer size validation with a minimum size constant for data initialization to improve code maintainability and scalability by using a minimum size constant
[ hotfix ] [ javadoc ] fix typo in executiongraph
removed swipe - and - drop notification handling from NotificationActivity and removed swipe layout from NotificationRenderer to simplify the notification rendering process and improve code readability
[ scb - 2748 ] update swagger definition to be compatible with openapi 3.0 . 1
fix npe in ` glowcontainer . setlock ( ) ` ( # 697 )
replaced MethodHandle with MethodReflection for setting the target field to improve method accessibility and maintain compatibility with Java ' s reflective API
changed query results from int to Integer for two integer literals to ensure consistent handling of integer values in the query execution
remove StringUtils . join call and simplify return statements in BaseEmailContentFormatter . java to improve code readability and maintainability
added a new panel to display the provided panel in the layout to improve user interface by ensuring the panel is properly displayed and removed
updated condition to check if the location is null before verifying if the server is dead to improve null safety and prevent potential NullPointerExceptions
remove incorrect comment that break the build
added a check for missing key parameters in DSAPublicKey before generating a public key to ensure that the key parameters are properly validated before proceeding
refactor MediaTypeRequestMatcher to use a separate method for ignoring media types to improve code readability and maintainability by centralizing the ignore logic
hive - 13086 : llap : print the task attempt number in debug log ( siddharth seth ) ( gopal v , review by sergey shelukhin )
polish ` ` allow bean definition override = true ' '
added null check before closing indexReader to prevent potential NullPointerException when closing
refactor package structure and rename BTCMarketsStreamingService to BTCMarketsStreamingService to improve organization and clarity of the streaming service hierarchy
added a new test method ` issue151 ` to validate rendering logic in ` FencedCodeBlockParser ` to ensure correct handling of specific syntax in HTML rendering
added a new file CompatibilityTest . java to test DTD compatibility to ensure that the correct property values are loaded from XML for compatibility purposes
added new utility classes for push notification and security handling to enhance the application ' s capability to manage push notifications and improve security measures
rebalancer : fix the logic for detect current and target replica ( # 12227 )
release note + version bump for 2.7 . 0
fix stack trace in test when run on window .
throw a sockettimeoutexception if ajp processor be wait for a read operation .
initialize friction , restitution , density , and isSensor variables to 0.2 f to ensure default values are set for better clarity and prevent null reference issues
[ te ] separate fetchsaclingFactors into a single call ( # 3301 )
added a try - catch block to execute a shell command for broadcast idle to handle potential IOException when waiting for broadcast idle
added tests for retrieving font and link tags in ResourcesTest . java to ensure correct resource retrieval for text attributes in resource strings
fix guistatscomponent ' s patch point at wrong location .
added permission handling for phone call permissions in Launcher . java to ensure that the application properly manages necessary permissions when adding items
updated the return value and added a new label for the zoom feature in SimulationPanel . java , and modified warning handling in BasicEventSimulationEngine . java to improve user experience by providing a clearer indication of zoom issues and flight data handling
updated GeoPointDistanceQuery and GeoEncodingUtils to improve bitwise operations and simplify byte handling to enhance code readability and maintainability while ensuring correct bitwise operations
added a method ` isDockerAvailable ( ) ` to check if the Docker client is available to provide a way to determine if the Docker client is available
added a static final String VPX constant to the CodecTypes class to support additional character encoding options in the application
added a coordinatorAddress option to DistBuildRunCommand and updated its handling in DistBuildFactory to allow configuration of the coordinator address for remote coordinator connections
added new utility method ` match ` in ` FsUtils ` and refactored timer setup in ` WrapTimer ` to improve path matching functionality and ensure consistent timer usage across different components
lucene - 5958 : ignore empty tag in testtaxonomyfacetsumvaluesource ( it be no longer relevant , to avoid potential null pointer exception )
ggb - 858 fix : sometimes false for getboolean ( ) return when the function return nan
added a test annotation to the TestPerfBenchMarkDriver class to ensure proper functionality of the tests through automated testing
added materialization time setting in ObjectStore and created a test for updating creation metadata in TestObjectStore to ensure that the creation metadata is correctly set and validated during schema updates
feat ( voskstt ) : add catch for unsatisfiedlinkerror in ndosttservice
remove the ' is _ one _AY ' property and replace with a plain string in JMSSampler to improve readability and maintainability of the code
updated break weight logic in GlyphView to handle edge cases more explicitly to improve the accuracy of break weight evaluation for better text rendering
refactor sync reading logic to use a buffered buffer for improved efficiency to enhance efficiency by reducing the number of I / O operations
added an annotation to AutoAddReplicasPlanActionTest to indicate a pending fix for issue SOLR - 13028
refactor ToePool to use a LinkedList for sorted by counts instead of retrieving steps and processors separately to improve clarity and maintainability of the data structure
remove duplicate code and remove unused method in datatransferer
hbase - 15390 thrift # testthriftserver fails due to port already in use
added a check for EOF at the end of the regular expression to ensure proper handling of end - of - file conditions
fix possible npe when different system property name begin with ` ` enable metric ' '
fix npe on receive message with no ` ` jid ' ' parameter .
fix for bug # 746 , also add quote to error message
refactor refresh token creation into a separate method called createRefreshToken in OAuth2ProviderTokenService . java to improve code organization and readability by encapsulating refresh claim logic
simplify error message formatting in BuckConfig . java to improve readability and maintainability of the error message
[ flink - 32951 ] [ yarn ] remove unnecessary job clearing
added a method to return the hardware buffer in ShadowNativeImageReaderSurfaceImage to provide a mock implementation for memory management in the native implementation
added SSL URI configuration for BTCChinaExchange to enhance security by enabling SSL for market data retrieval
use base file in cpdtask to save patch from bennie lohma
added OauthController and Oauth2PluginTest files to implement a basic OAuth2 endpoint and corresponding test cases
make a semgrex reference an actual link for use in javadoc
added ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx ` and removed it from ` EntryStream ` and ` StreamEx ` to consolidate functionality into ` AbstractStreamEx ` for better clarity and maintainability
( chore ) camel - rest : add detailed error log when illegalargumentexception occurs
updated the conditional logic for determining if a class name is compatible with Maven Surefire to improve clarity on project compatibility with Android Surefire
invert the condition for transmittableAudioEncodings in MediaControl . java to ensure that the condition is met only when transmittableAudioEncodings is not equal to the sdp
changed the type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java to ensure compatibility with DatabaseFunction interface instead of SequenceNextValueFunction
test : add test forStation 3 and 4 gml 3 format in normalizedmultivemultiplematchers
added a method to check if the HTTP response handler was invoked and updated proxy test methods to include a flag for handler invocation to enhance test verification and clarity by distinguishing between HTTP and HTTPS response
add an unmodifiable view structure to ` expandRegexMapping ` and ` RowProcessor ` classes and modify return types for ` expandRegexMapping ` to enhance immutability and thread safety of the map and feature processors
refactor ` CustomSeekProvider ` to use a constant for seek position and update related methods for clarity to improve code readability and maintainability by avoiding magic numbers
added XLCDCommunicator and XLCDController classes , and refactored firmware checks in FirmwareUtils to improve firmware handling and simplify command processing logic
drools - 2292 : allow to load different kmodule schema from the same classloader ( # 825 )
# 563 - query * : add retry logic for empty transactionmessage and blockmessage
replaced the use of ` awaitThreadState ` with a constant ` WAIT _ FOR _ TEST _ THREADS _ TIMEOUT ` for thread synchronization to simplify the code and improve readability by reducing complexity in thread state checks
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest ` to ensure correct method behavior and validate functionality of ` DelegatingMethod `
updated hex constant values to 10000 in EnergyCost . java to increase the balance and resource limits for better resource management
updated the command method to throw ConfigurationException and removed redundant save and reload calls to ensure proper handling of configuration updates during command execution
deleted the SpringTransactionHooks class and migrated it to AbstractSpringTransactionHooks to simplify the codebase by consolidating transaction hooks into abstract classes
refactor AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValueTarg . java ` that demonstrates the use of ` StringReference ` and ` ThreadReference ` to validate the uninitialized string value in a thread - safe manner to ensure that the uninitialized string value is correctly initialized during execution
added logic to resolve and set provided dependencies in AndroidLibraryDescription to improve dependency management and query handling in the library description
added a new BooleanFlag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to allow users to enable or disable keyboard synchronization during transitions between home and all apps
added a static boolean variable ` sSavedBugreport ` and modified the logic for saving bug reports to ensure bug reports are saved only when appropriate
added a constant for " cinepack " format in FormatConfiguration . java and utilized it in LibMediaInfoParser . java to improve code readability and maintainability by centralizing format definition
add a camera bobbing feature to enhance player ' s bobbing experience based on configuration settings
changed the method of obtaining the digest from data to digest in GrpcCasBlobUploader . java to ensure the correct digest representation is used for storing metadata
deleted the HSQLDBServerFilesFilter class and updated its implementation to use the new FilenameFilter implementation to simplify the code structure and improve maintainability by encapsulating file filtering logic
walletappkit : fix restorefromseed null pointer if restorefromkey be null
fix : use correct api version in mediatabletvseries ( # 1541 )
added a method to retrieve method invocations for a type ' s fully qualified class name to enhance the functionality of method invocation management in the presence of type names
updated AmbientCubemap . java to use a constant for the number of values instead of magic numbers to improve code maintainability and readability by avoiding magic numbers
bugfix # 207354 - add informative warning when method be not configure properly
Standardized the handling of zero values in GenericUDFMask classes by returning appropriate data types to ensure consistent data representation for zero - length inputs by converting to appropriate data types
derbyblockstoretest : use temporary folder instead of cleanup after tests be run
add itemstack . gethassubtypes and change itemstack . isdamage to itemstack . gethassubtypes . close # 802
fix renderstate ( ) for mc - 167447 ( # 3821 )
simonstewart : force the firefox driver to start a single browser on startup
updated the condition to check for HTTP status codes in Http1xClientConnection to ensure proper handling of HTTP connection upgrades and connection status codes
change task acceptance from " compile " to " process - classes " to ensure compatibility with the new process requirements
update to httpclient4impl to use closeIdleconnections ( ) instead of shutdown ( ) to avoid a npe
modified metric creation logic to check if aggregate function suffix exists before adding new metrics to optimize metrics collection by avoiding unnecessary updates when metrics are not needed
added a method to set fullscreen parameters in TaskOverlayFactory and updated relevant references in TaskThumbnailView to improve functionality by allowing fullscreen parameters to be passed directly
added a new Java class named Solution that counts occurrences of a given integer to implement a frequency analysis tool for user input
initialize SocketChannel to null in ClusteredAgentManagerImpl . java to ensure channel initialization before use to avoid potential null pointer exceptions
fix a typo in the comment , not the line with the comment .
added error handling for readToStartFragment and readToEndFragment in StaxEventItemReader . java to ensure graceful failure and prevent application crashes during file reading
replaced specific imports with a wildcard import and modified return logic in ` ShadowTextView . java ` , and added null checks in ` TestAttributeSet . java ` to enhance code readability and prevent potential NullPointerExceptions
updated import statements to use ` net . minidev . json ` instead of ` com . nimbusds . jose . shaded . json ` to align with the minimum IDE library structure
modify platform compatibility checks from Linux to AIX to ensure proper handling of AIX systems in the OS implementation
fixed api call to router . getprivip ( ) on sparc
added a method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to enable asynchronous execution of runnable tasks without blocking results
int - 231 , int - 229 remove now - redundant test class PresenceMessageComboTests
updated rectangle calculations to use Math . round for width , height , and primarySnapshot dimensions to improve accuracy and readability of layout calculations
mahout - 687 : fix random failure in testclusterdumper
hbase - 16013 fix npe in getnumpartitions ( ted yu )
camel - 2184 : added type converter in defaultcamelcontext to be able to know if a component type converter can be use for camel .
added support for handling ConditionalTask in SparkCrossProductCheck to enhance task management by dispatching additional tasks
reloading model and setting default profile action on manager creation to ensure proper reload behavior in the handling of managed profile action
add a conditional check for ' jsonResponse ' in the LoginInfoEndpoint and implement tests for active OAuth providers in LoginInfoEndpointTests to ensure correct handling of account confirmation and discovery behavior when active OAuth providers are active
hbase - 5342 add descriptive string to assist debug
changed the ` message ` field to ` result ` in the ` HuobiAccountInfo ` class and updated related methods to improve clarity by distinguishing between message and result processing
added reserve words for " PERIOD " in MariaDBDatabase to ensure proper SQL generation for storing period columns in the database
[ beam - 5921 ] include java 11 in documentation of portablepipelineoptions
added informative messages about Launcher shortcuts in VersionChangeLogs . java to provide users with updates to the dictionary loading mechanism for Android 7.1
made the constant NUM _ MILLIS _ IN _ DAY public and updated its usage in IndexExpressionIT to allow external access to the constant NUM _ MILLIS _ IN _ DAY
removed System . out . println statement from ImageResourceLoader . java to improve code cleanliness and reduce unnecessary console output
[ java ] ensure that client be connect to the correct aeron client when use consensus module and default .
updated validation logic for implicit lambda parameters and added a new class for testing raw merging to enhance type safety and demonstrate implicit parameters in lambda expressions
replaced the hideMenuItem method with showMenuItem and hideMenuItems methods in FileMenuFilter . java to streamline menu item handling and improve code readability
[ btc - e ] added new transaction type into btc _ deposit withdrawal
[ scb - 1737 ] fix retryfilterfunctions to avoid duplicate error ( # 1738 )
added a deprecation annotation to the PluginLoader class to mark the PluginLoader as outdated to discourage its use in future development
[ iotdb - 2143 ] fix bug of last query with seqtime greater than seqtime ( # 4344 )
removed a newline character from the request string builder in HttpResponse . java to ensure consistent formatting of the output
added a static block to set the logging system property for Apache Commons Logging to ensure consistent error logging across different components
make sure titlebar textbox have safe area
updated the loop structure to iterate over the series metadata lists to improve performance by avoiding potential index out - of - bounds errors
added SQL syntax to alter table and deparsing to ensure correct parsing and deparsing of specific SQL statements
make copystate ( ) public so it can be use from the agent .
fixed - moved execution of rbatch object into redissonexecutorservice . asyncexecution ( ) method . # 5345
the file name extension in the file name will be use , not the file extension of the . part file
refactor Orc - related classes in the project to improve code organization and maintainability
added null check for valueArg before assignment in CompareFunctionsProcessor . java to ensure proper handling of potential null reference to avoid potential NullPointerExceptions
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task before reduce scope
removed redundant ` toString ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to improve code clarity and reduce redundancy
added checks for invalidated states and unregistration in AbsSwipeUpHandler and TaskAnimationManager to ensure proper handling of gesture states and prevent potential null pointer exceptions
refactor ` getLockTimestamp ` methods to accept ` AppPreferences ` instead of using ` Context ` to improve code modularity and facilitate direct access to user preferences
fix crash when parse medium info that do n ' t have any artist
nifi - 7196 fixed npe in getremotemessage method
nifi - 308 : fix npe in splittext when there be no header or flow file
added support for handling Windows key store type in HttpsConnectorFactory to ensure compatibility with Windows by loading the correct key store
change default check timeout from 400 to 1 _ 000 in tests to allow for longer wait times during testing
added a condition to handle cases where FILE _ NOT _ FOUND is ignored in FileSyncAdapter . java to ensure appropriate handling of file not found scenarios in the file synchronization process
added animation support and interpolation features to the Slider class to enhance visual responsiveness and introduce smoother transitions in the application
updated assertions in LineSeparatorProcessorTest to maintain consistency in line separator checks to ensure consistency in line separator validation logic
updated maxWidth and maxHeight from 512 to 1024 in TexturePacker . java to improve layout flexibility for texture packing
added a test for ensuring that negated Ternary does not unwrapping parentheses to ensure correct handling of nested parentheses in the rewrite process
camel - 5566 : fixed the hazelcastproducer to handle the case where a null body may not be process .
added a new ` TextFeedbackTest ` class and modified the ` AllTests ` and ` TestRunner ` to include it to enhance testing capabilities for text feedback functionality in the JUnit framework
solr - 6692 : do n ' t round highlight fragment score for order
fix for image with non - english locale ( bug with resourcelocator )
fix arraycopysnippets . copyarray to use correct offset value for array creation
[ scb - 1544 ] default metric printer should not print 0
added support for remote SCM in Configuration and RuntimeEnvironment classes to enhance configuration management for remote SCM support
[ fix ] enable state _ end and state _ rinSE _ hOLD in the on - off channel
replaced instances of StatsLogCompat with SysUiStatsLog for event logging to centralize statistics logging and improve code maintainability
updated variable name from ` log ` to ` LOG ` for consistency to improve code readability and maintainability
add tests for ProjectGenerationEvent handling in EventSerializationTest to ensure correct serialization and deserialization of ProjectGenerationEvent states
ggb - 2118 make sure spec point be visible after selection ( arrow key be not select at the top )
modified the implementation of the JavaCompiler class to improve compilation efficiency and performance
hbase - 15410 addendum add error message when no time leave for the test run
updated Java files related to heap DumpHeap , TimSortStackSize2 , TestPollingInterval , and DeadlockDetectionTest to improve code organization and maintainability across related test files
added gc sections and nocopyreloc command to the ldflags command to enhance the build process for better garbage collection management
updated circuitbreaker filter to expand fallback URI and adjusted URI construction logic to improve circuit breaker handling and ensure fallback URI format is consistent
simonstewart : on behalf of alexandr scherbatiy : applying patch with thanks to sergey .
[ bug - 63294 ] add special handling for sst and t attribute to all attribute type
added a method ` getAccountNet ` to ` HttpMethed ` for retrieving account accounts via HTTP requests to enable better account management and testing of account addresses in the application
added a check for available text width before returning clipString and modified the test to handle GTKLookAndFeel exceptions to improve text layout handling and ensure robust test execution when GTKLookAndFeel is set
modified flatteningIterator implementation to remove the use of object references and introduced a new FlatteningIteratorTest class to improve code clarity and ensure consistent handling of blank values in iterator tests
remove non - html tags from title and body in NotificationUtils to ensure proper HTML formatting by removing unnecessary elements
doc : generate sample code in the java microgenerator ( # 419 )
add a test method to reload and delete any existing question from the feedback edit page to ensure that a clean state for existing questions before proceeding
update return values in HSSFSheet and add tests for firstRowNum and lastRow in BaseTestSheet to ensure correct handling of row numbers and improve test coverage
added permission checks for launcher activities to enhance security to prevent malicious intents from being executed without proper permissions
[ java ] send initial event to consensus module when cluster session be init .
updated hashCode method implementations and condition checks in AbstractParquetMapInspector . java to improve hash code accuracy and ensure correct comparison for instances of AbstractParquetMapInspector
added handling for remotelyClosed state in HTTP3StreamConnection to ensure proper resource management when the stream connection is closed
added AutoCloseable interface to SplitReader interface and removed close method from SplitReader to ensure proper resource management and allow for automatic closure of the reader
remove the deepCopy method from GsonBuilder . java to this method was deemed unnecessary or redundant in the current implementation
make sure we do n ' t return null from lscanner . getit ( )
fix # 3373 - duplicate file boundary info when request be empty
updated the dispatchStatusString method call to ensure proper handling of controller status updates
added a new SearchingClassLoader class to combine multiple ClassLoaders and updated MockFactory to use it to improve class loading efficiency in the Mockito framework
add a test refresh flag bug to jme3test scene that check that refresh flag work correctly
added LEFT _ SEMI _ JOIN condition to the condition checks in ConstantPropagateProcFactory to ensure proper handling of LEFT _ SEMI joins alongside INNER _ JOIN
updated conditions for handling response completion in HttpReceiver and HttpSender classes to improve response handling based on the status of the exchange
replaced ` arrayLengthOffset ` with ` arrayOopDescLengthOffset ( ) ` across multiple files to ensure the correct length is computed for array operations
fix for http : / / issues . apache . org / activemq / browse / amq - 2576 - make sure the test case use the configured policy
refactor multiple Java files to improve code organization and maintainability to enhance readability and facilitate future updates
added a check for running appCtx before stopping it to ensure that the appCtx is not stopped prematurely before stopping it to avoid potential errors
changed the return type of the drawItem method from void to GlyphLayout to enable retrieval of the rendered item ' s layout directly
added MetricsPublisher implementation to SpringmvcClient and threw a specific exception in CodeFirstSpringmvc to improve metrics handling and provide clearer error propagation
removed the static final integer for account age category in the AccountAgeWitnessService to streamline the code by directly using the optional for account age witness retrieval
refactor StructureHeader and StructureReader classes for improved code formatting and clarity to enhance maintainability and readability of the code
added a new ResourceUrlProviderExposingInterceptor to the CasWebflowContextConfiguration and updated related tests to enable exception handling for null resource URLs during web flow
add a dexreturninliner which allow dex body to be transform into a dex return statement ( e . g . for example )
rest api : add support for json schema ( # 3740 )
removed the NOFOLLOW _ LINKS option from the directory check in PathResource . java to simplify the method call and improve code clarity
[ flink - 26016 ] [ table ] [ sql ] remove the sqldialect configuration option from executioncontext
replaced ` rDotJavaPackages ` with ` Supplier < ImmutableSet < String > > ` for adding resources to improve clarity and efficiency in handling resource dependencies
add a test to ensure that package - info annotation be visible
added min _ cross _ compaction _ unseq _ file _ level configuration to support dynamic configuration of the unseq file level
[ hotfix ] [ resourcemanager ] move activeresourcemanager into active package
disable a new test method from TestScanWildcardColumnTracker to improve test coverage by indicating it should not be skipped
updated ZipResource to utilize URISyntaxException for URI creation and added unit tests for handling spaces in paths to enhance robustness of URI handling and ensure correct parsing of feature files with spaces
format modifications in ExpandableUploadListAdapter for consistency and clarity to improve code readability and maintainability
refactor RobolectricTestRunner to handle inheritance and configuration more effectively to improve code robustness and ensure that configuration merges correctly into parent classes and method configurations
replaced Lists . newArrayList with Lists . newArrayList that filters blocks and items based on their registry names to ensure that only valid registry data is processed to avoid potential null pointer exceptions
refactor AbstractDataChangedListener methods to be non - abstract and update WebsocketCollector and WebsocketDataChangedListener to improve method visibility and integrate new session handling features
modify JSONPojoConvertor to handle enum types and enhance color management to improve robustness and clarity in handling numeric values during conversion
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper ` to inform users of the deprecation and recommend using an alternative error message
changed originalPayload from String to byte [ ] and updated its implementation to improve memory handling by using ByteArrayOutputStream instead of StringBuilder to enhance performance and flexibility in data stream processing
added orientation handling and event listener functionality in GyroControl to enable dynamic movement on sensor changes and improve responsiveness to sensor events
replace hardcoded BIOME _ LIST _ SIZE with dynamic retrieval from BiomeGenBase to ensure the correct size of the biome gen array is stored
rename interfaces from ` println ` to ` print ` in ` GetInterfaceTest . java ` to improve clarity and consistency in method naming
remove redundant line of code which could result in an npe .
added a new interface ByteToLongCollector in the codebase to provide a generic framework for handling generic types in the codebase
added preload parameter to MMapDirectoryFactory to allow customizable preloading behavior for the map directory
added custom metrics for various enabled components in BukkitPlatform to provide detailed metrics on various enabled components
updated QuickConnectREST class to enhance connection handling to improve performance and user experience during data transmission
added aspect ratio and default card image initialization in CardPresenter . java to enhance image display for improved user experience
allow to use the wrong authentication method when calculate the count of the current page ( # 1252 )
fix array out of bound exception for empty array of vectorgroup
added tests for System . nanoTime ( ) in the TimeChangeTest . java file to ensure correct functionality of System . nanoTime ( ) in various scenarios
added trimming of lines after processing in MultiPartFilter and printed the parameter in MultipartFilterTest to ensure clean input handling and improve debugging information during request processing
fire elicidevent . dropexperiencedrop in entitylideventfactory . ( # 7680 )
updated error messages to provide localized messages for configuration issues to improve user experience by providing clearer error feedback and informative status updates
[ beam - 13054 ] remove unsupportedoperatorsvisitor class , a it ' s not need
added preconditions and improved dependency handling in GraphEnhancementQueryEnvironment . java , and created a new test for Rdeps functionality in GraphEnhancementQueryEnvironmentTest . java to enhance code reliability and ensure correct behavior of dependencies and testing
refactor Character class to improve code readability to enhance maintainability and ease future modifications
added a check to ensure selection options are set only for all rocket components to improve user experience by preventing unnecessary selection of all rocket components
( chore ) camel - core : remove redundant array # tostring ( ) call
fix the pinot endpoint issue where pinot - pinot table could not be find in pinot table . ( # 4328 )
fix remain issue with connector . getpoller ( ) add to the poller
updated regex pattern in EightmusesRipper and added URL handling functionality to improve image extraction accuracy and enhance user experience with better media selection
refactored wait methods to use TestHelpers for consistency across tests to improve code maintainability and centralize wait logic in TestHelpers
updated conditions in QuickstepLauncher to include phone profile check to ensure proper layout behavior for phone devices in non - landscape orientation
refactor query assertions in PartTreeJpaQueryIntegrationTests to use unwrapping on QueryImpl for better type safety to improve query handling efficiency in the test cases
8297269 : [ testbug ] jcmd / nsk / system / subsystem / subsystem . java fail with internal error due to un privileged access
implemented dynamic check for the result stream in JpaQueryExecution to enhance query execution capabilities for better performance
check for null entity before iterate over it ( # 1853 )
add test to show that predicate cache be clear when value attribute be set to indexed
add support for join jitsi - meet contact header . smack - 356
[ scene2d . ui ] fix minor color change in utils , change color to cs style .
allow you to disable symbol ( # 4746 )
updated path generation for the link tree in Aapt2Link . java to ensure correct resolution of generated link files
replaced mock instances of ` Capture < Supplier < Tool > ( ) ` with ` Capture . newInstance ( ) ` to improve the simplicity and efficiency of mock creation in the test classes
ggb - 2118 selected geos should be update once need
fix error handling in camel - ysld ( # 11253 )
added ` isCanceled ` method implementations across multiple classes and modified the ` isCanceled ` logic in ` ExecutorCallAdapterFactory ` to improve cancellation handling and ensure consistent behavior across different call adapter implementations
refactor multiple classes to implement a default method for checking annotation presence to improve code consistency and reduce redundancy across these classes
change uILayout . removeallwidgets to be default implementation ( e . g . plain text )
[ flink - 29720 ] [ yarn ] [ test ] add testappender to yarnsessionfifoitcase to avoid flaky test
fix opensslcipher . getoutputsizeforfinal to avoid unnecessary allocation .
added logic to handle video stream selection based on Fire TV Stick status to ensure proper transcoding of high - res content when using a video profile based on device type
[ beam - 8470 ] use mock data source for read stream to avoid null pointer exception
remove the preference for attaching the gps log listener , which seem to be useless
changed the parameter type of ` putString ` from ` boolean [ ] ` to ` byte [ ] ` and modified the handling of wide width to use ` byte [ ] ` to improve performance and compatibility with Bicu native libraries
added support for BaseItemDragListener in FolderIcon . java to handle drag - related events in the drag component
- add createemptyartifact method to repositoryconnector and filesystemconnector to create empty repo artifact .
removed unnecessary comments from configuration retrieval in RabbitMQPublisherImpl . java to improve code cleanliness and maintainability
removed unnecessary date check logic in VideoViewerActivity . java to simplify the conditional logic for getting the loaded video link
camel - 6056 : fixed sftp consumer to respect path normalization . thanks to joerg karlsen for reporting .
camel - 9819 : fix the unit test error of camel - base - weather
renamed variable ` groupSortStr ` to ` sortWithinGroup ` for clarity to improve code readability and maintainability by using a more descriptive variable name
fix a bug with bound box when absorb a block , and give tall - grass absorb feature to large
changed tree focus from focusable to requestFocusEnabled in TranscodingTab . java to ensure the tree focus is not visible during user interaction
java . lang . runtimeexception : add miss throw to virtualmachinemanagerimpl # doprivileged method ( # 1583 )
updated DB2 test system checks and import statements in DockerDatabaseWrapper and TableIsEmptyGenerator to improve code clarity and ensure proper handling of DB2Database in the test system
fix optifine not update seek value when user click ' apply optimization
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC / ZMW on the new currency pair
added functionality to set the number of samples in TestPBRLighting . java to ensure that the system uses the latest audio formats when available
updated test assertions to use string literals instead of string literals for step identifiers to improve code readability and maintainability by reducing redundancy
changed variable declarations to use ` final ` in CentralAuthenticationServiceImplTests . java to ensure immutability of variables to prevent accidental reassignment
make sure tab be always present in ggbabs ( )
added multiple calls to addServiceOutput ( ) in DDLSemanticAnalyzer . java to ensure that output updates occur only after pool changes
[ drools - 2225 ] support bigdecimal type in executable model ( # 2975 )
added a new import statement for " org . eclipse . jdt . " to hide jdt used by jetty to improve code clarity by reducing unnecessary dependencies
changed the return value from ` super . useAuthCache ( ) ` to ` false ` in ` NegotiateAuthentication . java ` to simplify authentication logic by removing unnecessary delegation
standardized the namespace assignment from segments [ 0 ] to ensure consistent namespace handling by removing leading and trailing spaces
camel - 6190 : direct component - direct force full exception if direct consumer be unavailable
added null check for ZooKeeper before setting its state to avoid potential NullPointerExceptions when the ZooKeeper is not initialized
[ java ] update progress bar message to be more concise .
refactor vibration handling to use a helper thread for UI updates to improve code organization and prevent UI thread - related issues
added a method to update the last remote stream ID in HTTP2Session . java to ensure the remote stream ID is correctly updated for proper data handling
remove antialiasing for swing laf ( fixes # 3770 )
[ java ] : update calculation of available window size when seek to a term in the driver publication .
refactor : remove static import of enums in ctannotationimpl . java ( # 2564 )
update exoplayer . builder javadoc to mention buildexoplayer ( )
updated the method to retrieve pixel data using a rectangle instead of a native method to improve performance and ensure compatibility with a wider range of pixel values
add a new method ` newPrintStream ` to handle specific encoding for output streams to improve flexibility in setting output stream encodings based on system properties
touchablemovementmethod : vibration increase to 25 on touch
added import statements for Date , Key , and TestEnvironment in multiple Java files to enhance functionality and improve code clarity by explicitly defining required dependencies
reordered constructor parameters in WebSocketClient for clarity to improve code readability and maintainability
simonstewart : back out the page rewrite for the i18n test because it have move the page .
handle load constant exception and javadoc correctly ( # 4645 )
[ ds - 2058 ] fix xmlwfserviceit by restore auth system state
added a new ` LowercaseComparator ` class and modified the constructor calls in ` CoNLLUFeatures ` to use it to improve sorting functionality and ensure consistent behavior when using superclass methods
refactor parsing logic to improve file handling and trace logging to enhance clarity and maintainability of file parsing feedback
simonstewart : fix a failing test in the formhandlingtest . java file , and actually do nothing .
added validation to check if the length of keys is 9 to ensure correct number of keys to prevent processing errors
added error handling when retrieving attributes in HDF5BatchReader to ensure robust attribute retrieval and provide a clear warning message when the requested attribute is not available
update return type to writeresult to avoid usepDone . in
[ scb - 2711 ] add a new annotation to processgroupresource that specify the content type of the template file be upload .
8014138 : [ testbug ] need to be update for jdk - 8014188
cloudstack - 4438 : remove global configuration for secondary storage in non - management server zone
refactor headID assignment logic in SyncBlockChainMsgHandler . java to handle duplicate IDs to improve code clarity and ensure proper management of head IDs
added a line to set the theme for the preview tab ' s content to ensure the correct theme is applied for the preview tab
added null check and close method for the reader in VectorizedParquetRecordReader to ensure proper resource management and prevent potential memory leaks
add a unit test for the idle timeout setting in the ConnectorTimeoutTest class to ensure that the idle timeout functionality works correctly under various conditions
add a new property and an option to the dictionaries class , for the configurers
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve clarity in parsing tag names and enhance code readability
simplified the instantiation of JpaPagingItemReader and updated parameter values for clarity to improve code readability and maintainability by removing unnecessary type casting
log warn when find a node with the same name in distributedqueue
refactor color extraction logic to use a dedicated method for fetching hotseat palette to improve code clarity and maintainability while handling different Android versions
added default data table entry and cell transformation methods to TypeRegistry to enhance type safety and flexibility in data table operations
added assertion to check if newAvailableShared is equal to initShared to ensure the integrity of the newAvailableShared state
doc : fixed docstring formatting ( # 869 )
removed the projectGenerated variable and its associated getter method from ProjectGenerator . java to simplify the code by eliminating unnecessary state management
updated conditional check to use ` containsKey ` instead of ` contains ` for USER _ PROPERTY and AUTH _ HEADER to improve code readability and reduce potential errors in key - value lookups
fix parse error for name and description of contact , and add post to controller
guac - 587 : improve performance : cache permission instance in simpleuser and internally wrap them in objectpermissionset .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the new version of the IconCache
tracerfactory : fix compilation error when use executable model
updated method names to use ` findWhereNameOrAliasAndActive ` instead of ` findWhereNameLikeAndActive ` to improve clarity and functionality to support alias matching in SQL queries
replaced a loop for closing per - document consumers with a utility method to ensure safe resource management and prevent potential memory leaks
: memo : add license header for data revised listener
added an OnClickListener to the menu display method to handle menu display events to ensure menu behavior is consistently displayed when an overflow button is triggered
updated error messages to clarify null references and improve exception messages to enhance clarity of error messages for better debugging
# 4810 : update line height for help button ( e . g . on web )
protobufbufferutilstest : move test to core / util package
fix the divider width of split pane from width of it .
improve aux file handle on file which have multiple cross reference ( suggestion by daniel dai )
[ geos - 7082 ] wo n ' t use map wrapper for store in geoserverfeaturesource
rename ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity and consistency in variable naming
fix possible npe when select a contact from the list of available contact .
updated import statements for Command class to the correct package to ensure compatibility with the latest version of the SSH server command class
added a test method to cleanUpAuditLogTablePostParametersByPosition in AuditLogTest . java to ensure proper cleanup of audit log table parameters after a specified position
add a suppresswarnings ( ` ` unchecked ' ' ) to the inject method in componentcontext .
refactor comment parsing logic by introducing regex patterns for handling empty and invalid comment lines to improve parsing accuracy and flexibility in handling comment lines
updated MapRDBFormatMatcher to include DrillTable and modified FormatSelection return type to enhance functionality by allowing users to specify the storage engine name and user name
added ` ancestorDimensionValues ` map and modified node name construction in ` StarTreeImpl . java ` to improve handling of ancestor dimensions and enhance logging details for better debugging
added a check for user unlock state before dumping plugin manager data to ensure that plugin manager dumps only when the user is authenticated for better security
fix a typo in the variable name from ` widthStr ` to ` positionStr ` to ensure proper validation of the ` positionStr ` variable
refactor PKIXValidator logic to improve certificate validation structure to enhance readability and maintainability of the validation process
[ flink - 26011 ] [ hadoop - fs ] [ test ] add archunit test for the test code
corrected package names for AlibabaDubboIntegrationBootstrap and ApacheDubboPluginTest to ensure consistency and clarity in package naming conventions
cloudstack - 2120 : use get: ( ) instead of getprojectnetworks ( ) to do the search
updated the method used to retrieve the label JSON element by changing the order of elements from remove to get to improve clarity and ensure the correct retrieval of the shape type information
added methods to store undo information for properties in App . java to enable flexible handling of undo information for application properties
7127827 : jre8 : javaws fail to launch on oracle linux due to xrender
fix flaky test ` streamclostest ` by add timeout
replaced the ` doAfterFlush ( ) ` method with an ` doAfterFlush ( ) ` method in ` DocFieldProcessor ` and modified the handling of ` perFields ` initialization in ` TermVectorsConsumer ` to ensure consistency in field processing and prevent potential hangs on previous documents
added deprecation mapping and filtering logic to configuration properties to enhance error handling and ensure proper mapping of deprecated properties
[ java ] : remove field capacity in biint2objectmap and use length - 1 instead
updated the number of threads in HiveConf from 25 to 15 and corrected a syntax error in HiveImpl to improve resource management and maintain code consistency
add some logging to help diagnose rare crash
added a null check for the context parameter in SchemeAndroidIDE to prevent potential NullPointerExceptions when context is null
use application classloader from native - image generator instead of custom one
change method return type from ` void ` to ` List ` and update its usage in ` SwitchUserAuthorityChanger ` , ` SwitchUserProcessingFilter ` , and ` SwitchUserProcessingFilter ` to enable proper handling of multiple authorities in user authentication processes
renamed JaxrsIntegrationTest to JaxrsIntegrationTestBase and created new test classes for better organization to improve test structure and organization for better readability and maintainability
fix # 770 add support for jdbc 4.4
added DataProviders for general and supplementary character tests in XslSubstringTest . java to improve test coverage and organization for XSL substring functions
replace eventWriter . close ( ) with delegateEventWriter . close ( ) in StaxEventItemWriter . java and implement the close method in NoStartEndDocumentStreamWriter . java to ensure proper resource management and prevent potential memory leaks during writer closure
added support for MariaDB sequences and updated handling of sequence parameters in the CreateSequenceGenerator to enable proper sequence functionality in the MariaDBDatabase implementation and enhance sequence creation logic
corrected spacing in error messages and formatted lambda expressions across multiple Java files to improve code readability and maintain consistent formatting
added TableDataManagerProvider import and set server metrics in multiple test files to integrate metrics for table data management and improve test reliability
enable jsse extension by default ( # 6476 )
updated ObjectIterator to use generic type and simplified iterator initialization to improve type safety and code clarity
updated character count calculation in Compose and TweetFragment classes to adjust the character count to improve user experience by ensuring the correct character count is updated based on the attached URI
add data datapoint ttl configuration for cassandra ( # 550 )
updated the checkForAndKillXcodeIfRunning method to accept a boolean parameter and modified its logic to include an option to allow control over Xcode process prompt behavior when prompt is not set
add gettileatcell method in terraingrid to get correct grid location
added default value handling in expression printing and implemented a new Java class for compiling annotations to ensure default values are printed correctly during annotation processing and facilitate testing of annotation compilation
added error handling for missing QuestEncryptionKeys JSON in ResourceLoader to improve robustness by logging an error message when the configuration file is missing
modify the return statement to exclude push support for non - push scenarios to ensure that push functionality remains consistently enabled for supported protocols
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
update ` blockCapsule . sign ` method call in ` BlockUtil . java ` to ensure the correct signing mechanism is used for the local witnesses
return the first root or null if no roots exist in FileSystemView . java , and added security checks in Win32ShellFolder2 . java to enhance robustness by handling empty root cases and enforcing read permissions during folder access
fix a bug when split table use the last row of the table . also fix a bug where the last row of the table be not be update properly .
added a new SparseArray for undo notes and updated the note removal logic in ListFragment to improve the management of unsaved changes to note selections
add logic to adjust the feedback response id based on the feedback question and comment .
remove null check and exception handling for non - null data to improve error handling by throwing an exception when data is null
# 441 - remove pstmtdelegate ... unused interface
replace custom Padding class with Rect from AppWidgetHostView for widget padding calculations to simplify padding retrieval and improve compatibility with widget framework
refactor static MethodHandle initialization to a static block and add consStringFilter method to improve code organization and enhance argument filtering for ConsString type
fix typo in javadocs ( # 2952 )
rename latch to goAwayLatch and update its usage in IdleTimeoutTest . java to improve clarity and consistency in thread management
refactor assertions in IterableSubjectTest to use hasMessageThat ( ) instead of getMessage ( ) repeatedly to improve clarity and readability of failure message assertions
replaced ` ThreadLocal ` with a direct reference to ` Workbook . currentBook ` to simplify the code and ensure consistent handling of the current book instance
added support checks for MethodInvocation and Object types in ContactSecurityVoter to ensure proper handling of method invocations and enhance type safety
removed unused import statements for GachaHandler and Tools in DataLoader . java to clean up the code and improve readability
include row affect in update command console output ( dat - 14929 ) ( # 4485
ggb - 2186 consistent and layout of scaler style in html5
initialize foregroundFPS and backgroundFPS with a default value of 60 to ensure default values are set for proper rendering
added assertions for ObjectReleaseTracker in HdfsTransactionLog and TransactionLog classes to ensure proper tracking and releasing of objects in transaction logs
replaced the DefaultWebSocketFrame with a ChannelFutureListener for WebSocket closure to improve the handling of WebSocket closure events
updated test cases to replace ` TestApplicationEventListener ` with ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` to enhance event handling test coverage for state machine errors
replaced the activity launch method with a new method setListBackground and added a method to set the background color to streamline the setup and improve code readability
updated import statement from org . apache . commons . lang3 . StringUtils to org . openhab . core . StringUtils and added null check for the line to ensure compatibility with OpenHAB utilities and prevent potential null pointer exceptions
added a method to calculate the average accumulator ' s value based on a string to enable dynamic adjustment of the accumulator ' s count based on string input
ninja fix a couple of typo in the javadoc of replicationsink
refactor RegExpFactory to use a Map for cached RegExp instances instead of a Set to improve performance by reducing unnecessary computations for regex patterns
added a static method ` reset ` to the ` GameThread ` class to enable resetting the instance of the game thread
added a login method to verify if the realm matches the login service name to enhance security by preventing authentication attacks using the same realm
refactor parameter handling in SavedRequestAwareWrapper to improve retrieval of combined request parameters to enhance code clarity and maintainability while ensuring correct behavior when handling parameters
- fix for npe when internal _ debug _ attribute be not set .
replaced notification logic with a wakeup method in CommitLog . java and HAService . java to streamline code for better readability and maintainability
added a check for Android O in the image view condition and introduced a method to check for Android O to improve image handling and ensure compatibility with Android O features
updated schema info level from minimum to basic in SchemaCrawlerTest . java to ensure compatibility with new schema requirements
fix : savemodel . close ( ) now use bufferedoutputstream
refactor TestPayloads to use random byte arrays for UTF - 8 encoding to improve efficiency and reliability of byte handling for payloads
fix misalign patch in entity ( # 4414 )
add " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter " to the list to support integration with Tomcat container adapters for improved performance
[ drools - 4339 ] use deephashcode instead of hashcode when combine with accumulate
reorder case statements in NowSearchTerm . java and SearchTermBuilder . java for consistency to improve readability and maintainability of the comparison operations
pdfbox - 3280 : make class package private , a suggest by valerybokov
added HTTP request and headers support in RemoteEndpointServiceAccessStrategy to enhance flexibility in making requests for service access
add a new method ` newResponseBuilder ` to encapsulate response building logic to improve code readability and maintainability by centralizing response building logic
added a call to notify command start in AsyncBackgroundTaskManagerTest to ensure that the command starts appropriately in the test environment
updated the ` recomputePreviewDrawingParams ` method to include a null check for ` mReferenceDrawable ` before applying the drawing parameters to avoid potential null pointer exceptions when ` mReferenceDrawable ` is null
replaced the tokenizer factory retrieval with a char filter factory retrieval in LukeRequestHandler . java to improve handling of character filter factories for better token processing
replaced null checks for plot , generator , and hotspot with a utility method from ParamChecks to improve code readability and maintainability by centralizing null - checking logic
added verbosity handling to the ` createSubContext ` method in ` JavacStep ` and ` ExecutionContext ` classes to ensure consistent output when verbosity is enabled
modify to convert oracle schema to uppercase for good compatibility
[ log4j2 - 1033 ] asyncloggerallthreadcontextimplementationsstest : add class name to the context of logmanager when run test
added a new file TestShrinkToOneRegion . java that demonstrates garbage collection to test the behavior of the system with garbage collection
replaced customPackages splitting implementation with Splitter for better code readability to improve performance and maintainability by utilizing a standard library for string manipulation
update AnalyzingInfixSuggester and its test to ensure proper encoding of byte arrays and improve test coverage for binary context handling
updated the attachment handling in PushsaferMessageBuilder . java to use a local variable for local attachments to improve clarity and maintainability of the code by explicitly defining the encoding format
fix a bug in the stripprovenancetest and add a comment about the output histogram
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
changed the access modifier of the FORMATTER function from ' final static ' to ' static final static ' across multiple field test classes to ensure proper syntax evaluation for formatted functions
updated the evaluate method to handle both Double and Integer parameters to improve rounding behavior and ensure proper handling of null values
[ jsscripting ] use config . valueorElse ( ) to avoid npe
changed class declarations from package - private to public in Test1 . java and Test2 . java to allow access to Test1 . java from other packages
replace ` permission . no _ permission _ event ` with ` deny . no _ enter ` for a plot to improve user experience by providing a more concise permission message
fix sql where condition in constant set be not take into account .
replaced instances of ` doTestNormsStoredFields ` with ` doTestNormsVersusDocValues ` in ` BaseNormsFormatTestCase . java ` to ensure the correct handling of norm document values in the test
added tests for box and circle generation logic in Box2DCharacterControllerTest . java to enhance test coverage and ensure proper friction reset for contacts
8257334 : fightbufferize / threadbuffersize should not throw an error when the value be large than configured memory size
updated ObjectAlignment and Options classes to enforce stricter validation checks to ensure output adheres to expected power of 2 and improve error handling
added a method to retrieve the target package name from the manifest in multiple classes to improve the ability to extract the target package from the manifest for better accuracy and usability
rename DocHelper . java to improve clarity and consistency to enhance code maintainability and readability
fix a concurrent modification exception in setting initialization .
replaced explicit type casting with explicit type casting for boolean , character , int , short , int to improve type safety and avoid potential ClassCastExceptions
reformatted code for better readability and consistency in MessageHandler . java to improve maintainability and adherence to coding standards
infotection : fix typo in call relate method
add methods to access and set locale in EvaluationContext to improve locale management in the application context
removed unused import of Plugin from SummaryPrinter . java to clean up the code and reduce unnecessary dependencies
added a ` break ; ` statement in the ` DrawerActivity . java ` to correctly terminate a switch case in the switch statement
updated import statements to use wildcard imports and improved debug log message formatting to enhance code readability and provide more informative debug information for query creation
add a system property xwork . loggerfactory to allow user to define the loggerfactory
remove unnecessary test for p2pDisabled acceptance test
update to new auto configuration name for ` liveness * ` and ` readiness * `
add localpstoreprovider . putifabsent to avoid overwrite exist localpstore
change visibility of the deleteFiles method from public to private and adjust its implementation to enhance encapsulation and restrict access to the method
replaced ` Provider < T > ` with ` ServiceProvider < T > ` in the ` ServiceLoaderSpliterator ` class to improve clarity and consistency in service provider management
simplify and improve performance of javainteropref # findfield and javaobjectmessageresolution
added toolchain creation checks to AbstractCell and ToolchainProvider classes , and implemented Android SDK change parser in DaemonLifecycleManagerTest to ensure proper toolchain behavior and prevent runtime errors when multiple toolchains are present
fix do n ' t remove the context if context be already add to engine .
replaced - 1 ! = with ` contains ` for string comparison in ` AbstractCheckDescriptor . java ` to improve code readability and reduce potential null pointer exceptions
updated PrebuiltCxxLibraryDescription and related classes to use exported linker flags instead of linkers to improve the flexibility and clarity of managing linker flags in the build process
refactor ` updateRecentsRotation ` method from ` onConfigurationChangedInternal ` to ` updateRecentsRotation ` and streamline the method to improve code clarity and maintainability
updated type checks in multiple classes to use generics for better type safety to enhance type safety and eliminate compiler warnings related to unchecked operations
fix abstractblockchain . getchainheader ( ) . gethashAsString ( ) return wrong value
[ issue # 4048 ] fix defaultmessagestore fail to initialize the store path - commit log
register jvmgracemetermetrics in micrometermanagermetricmanager to avoid deadlock
[ issue # 5244 ] fix compaction log erroneously report miss message
hhh - 13067 mark certain kotlin query a deprecate and deprecate for removal in 9.0
added a method to check for a system UI object and executing shell commands if it exists to improve integration with the system UI by enabling keyboard input handling
changed logger variable from static to final and made sessionIds in SessionRegistryImpl . java to allow for subclassing and improve immutability of the fields
another patch from jboynes to improve handling of empty cookie jar .
add debug log to bonsai world state update process ( # 5039 )
optimize text repository to accept any charsequence
[ java ] ignoring again a test fail because of marionette regression
add a try - finally block that returns the connection to ensure that the destination is always returned to prevent resource leaks during connection handling
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references across related classes to improve clarity and functionality when handling command execution on Windows
added synchronization to heartbeatExecutorService initialization in DbTxnManager to ensure thread safety when accessing shared resources
refactor ` CachingBuildEngine ` to improve asynchronous execution handling and build cancellation logic to enhance code readability and maintainability by separating tracing and cancellation logic
textfield : fix bug for drag - selecting text out of the area ' s bounds
added Hadoop file path configurations to TestInformationSchemaWithPrivilege to specify temporary and staging directories during testing
refactor graphics configuration retrieval logic for clarity and efficiency to streamline the process of obtaining the graphics configuration and enhance readability
tika - 2135 -- upgrade to tika 2.1 and fix issue with oom in legacy mode
camel - 19459 : camel - core optimize pipeline to reduce call method in critical path
refactor PrintTagList to accept multiple arguments for the model file and update tag retrieval logic to improve error handling and simplify tag processing logic
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test for alias handling in ` InsertTest . java ` to improve consistency in table name retrieval and ensure SQL syntax correctly handles alias extraction
http : / / issues . apache . org / jira / browse / amq - 4135 - fix test and add test for eof event
[ java ] increase timeout and try to make startfromtruncatedrecordinglogtest more resilient .
updated the calculation of the arc variable and adjusted its value in LineBorder . java to improve accuracy of rectangle positioning and ensure consistent rounding behavior
added null and empty check for galleryImages in PostGalleryTypeImageRecyclerViewAdapter to ensure the method handles empty galleryImages gracefully without causing a NullPointerException
added functionality to generate and reset the DEPLOYMENT _ ID in the StandardChangeLogHistoryService and CreateDatabaseChangeLogTableGenerator to ensure that the DEPLOYMENT _ ID column is not nullable in the database schema
pdfbox - 829 : update pdfbox example to match new version
remove unnecessary boolean parameter from ` canUseIndex ` method and related calls to simplify method signatures and improve code readability
added quickfixjcomponent so the provision engine can be use multiple time .
added displayZoomControls functionality to RoboWebSettings and updated setMixedContentMode method to improve usability and provide additional configuration options for zoom control display
add corporea block and slab block registration support . close # 974
refactor ConnectionFactory class for improved readability to enhance maintainability and clarity of the codebase
added a method to disable menu items in GpsMainActivity to enhance user experience by providing appropriate icons based on logging conditions
updated the message displayed for empty favorite lists in the ExtendedListFragment to improve clarity and user experience by distinguishing between empty and favorite lists
hhh - 13664 fix test failure on oracle .
updated MotorMountConfigurationPanel to use subpanel instead of itself and added auto - resizing settings to improve UI layout and ensure proper component initialization
updated LINE _ SEPARATOR initialization to use System . getProperty for consistency to allow for potential different system line separators across different environments
add method to xwpfproperties for access the creation , subject , and subject from xwpf
added whitespace in the doStop ( ) method call to ensure consistent code style and improve readability
[ java ] avoid an infinite loop when there be no cnc file .
replaced marker classes with FooCommand classes and updated related method signatures to improve clarity and consistency in type handling within the code
added jmod class path handling in ClassFileSourceImpl . java to improve the processing of jmod files for better compatibility
updated parameters in TreeBackedElement and TreeBackedEnter to use null instead of PostEnterCanonicalizer to improve null safety and ensure canonicalizer is not null before use
replaced direct assignment of getClientId with a new PublicTokenRequest instance and set request parameters in Saml2TokenGranterTest and UserTokenGranterTest to ensure proper handling of request parameters for token requests
update parameter from arrayLength to valueRangeObject in AbstractFromPropertyValueRangeDescriptor to ensure correct range object is used for adding elements
hbase - 8413 add zk . sync ( path ) for easy debugging
fix ( gl ) : check if no context be available when load gl context in glexception .
jbrules - 2250 : avoid infinite recursion when remove activation ; add test case for deactivation
added a return statement to the HystrixDashboardConfiguration . java file to ensure proper exit from the method during processing
removed the try - catch block for ` PipeNotExistException ` in ` DropPipeProcedure . java ` and added an assertion in ` IoTDBPipeIT . java ` to handle potential exceptions more gracefully during pipe drop operations
fix the clientqueuereandexceptionstest to pass locally .
refactor : use defaultjavaprettyprinter in ctreferenceimpl . getsignature ( )
make registrationtest protect for subclassing
updated GeoPointField , GeoPointInBBoxQuery , GeoPointInPolygonQuery , GeoPointNumericTermsEnum , and GeoPointPrefixTermsEnum classes to improve clarity and maintain consistency in the codebase
added a new class FakeBuildable and modified OnDiskBuildInfoTest to utilize it to improve the testing framework by providing a mock implementation of Buildable
use empty check for itemstack instead of null check for non - empty bucket .
update name references from " path " to " timeseries " in TSParser . java and SQLParserTest . java to improve clarity and accuracy of variable naming conventions
fix ( cubecalc ) : workaround for integer overflow in cubecalc
refactor methods to use ` _ storage . create ` instead of ` gcs . create ` for creating blob instances to improve consistency and clarity in storage access within the code
removed duplicate call to VertxUtils . blockCloseVertxByName in TestHighwayTransport . java to ensure proper cleanup and avoid potential resource leaks
# 2274 - db - history ddl - add view name and sysperiod for trigger - based view
updated test to check for clustering engine with a different parameter value to ensure functionality with the new expected behavior of clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark test as ignored due to its needs to be refactored
introduced ` ParserStateObjectInputStream ` to improve class deserialization handling to prevent deserialization of ` ParserState ` objects based on their names
added null checks and initialization for ` objectQuotingStrategy ` in ` ChangeSet . java ` and used it in ` DatabaseChangeLog . java ` to ensure proper handling of object quoting strategy based on the change log configuration
updated the method from ` parse ` to ` fromXmlStream ` for parsing ` Metainfo ` to improve compatibility with XML stream data processing
deleted the CsrfControllerAdvice . java file to remove unused code related to CSRF token handling
6995858 : antcompiler should quote path in - j - start / endorsed . dirs when run with a - djava . home
added scrim animator functionality to the Launcher and AllAppsBackgroundDrawable classes to enhance user experience during drag - and - drop operations
updated the long value requirement in TypeInferenceUtils from 2 to 1 to correct the interval for long string inference
regenerate client with updated copyright year ( # 4382 )
added validation logic for Windows path separators in WindowsPathParser to ensure correct handling of path separators and prevent invalid configurations
fix multicast socket creation in Promiscuous . java by removing redundant parameters and using a direct instance
fix a bug in the testquestionmark ( ) test due to the order of closing .
changed return statement to clone nBits instead of returning it directly to ensure that the original nBits array is not modified externally , preventing unintended modifications
changed access modifier of ` deriveCollectorName ` method from private to protected and added a new test method ` testProfilerCollectorCustomName ` in ` TestProfilerCollector ` to allow subclasses to access the method and ensure correct behavior of the collector ' s name generation
datamongo - 2043 - fix type hint issue when write document .
replaced the direct initialization of the factories with performance measurement using PerfStatsCollector to enhance performance tracking during proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation for improved code clarity
updated exception handling to include the exception cause to improve error reporting for connection failures related to port binding and network issues
refactor reinflateWidgetsIfNecessary ( ) method to the Workspace class for better organization to improve widget management by encapsulating widget inflation logic within the Workspace context
added a new file named DeleteInsideFileDialogTest . java to test file deletion in a dialog to ensure functionality of the right - click deletion feature in the file dialog interface
* fix for deadlock in abstractdisplay when it should flush the display
[ fix # 72504258 ] show photo in instructor student list page ( # 72504 )
add back ability to ignore test without environment variable .
removed the ' pointer ' parameter from the fling method in ScrollPane to simplify the method signature and focus
added a null check for ` pageable ` in ` QueryDslJpaRepository ` and created a test for it to ensure that the repository correctly handles null pageable cases
added a new method ` computeMemorySize ` to ` MemoryManager ` and corresponding tests in ` MemoryManagerTest ` to compute memory size with specified fractions to enhance memory management functionality and ensure robust error handling for invalid parameters
camel - 9244 : avoid duplicate shutdown of the connection factory by this test
updated the implementation of the SnowballAnalyzer class to improve code efficiency and readability
updated the handling of the previousIndex variable in StreamingAggTemplate . java to ensure that the previous index starts from a defined state instead of null to avoid potential null reference issues when accessing the batch
change how null check be handle bytecodeparser and throw graalerror if null check fail .
added a default stream method to StreamSupplierComponent for processing entities to provide a simplified stream creation approach using default concurrency
updated logging messages to clarify and added sleep mechanism for file movement to enhance error reporting and ensure file movement only proceeds if the file has been played
8068624 : use newinstance instead of setaccessable to support additional constructor parameter
[ flink - 10731 ] [ python ] remove duplicate close ( ) call from flinkstreamingcreatedfunction
added tests for parsing and parsing SQL statements for various tables in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest to ensure correctness and correctness of SQL syntax in various test cases
return an empty list instead of null in AppleTest . java to ensure the method returns an empty list instead of null
updated the string format in NamedSetTest . java to include a quality distribution and Inc . to ensure the test accurately reflects the current implementation
added a new condition to handle the disconnection state and improved the WebSocket connection logging to enhance the management of WebSocket connections and provide clearer debug information
replaced ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` ACEGI _ SECURITY _ TARGET _ URL _ KEY ` in ` AbstractProcessingFilter . java ` to improve session cleanup by removing unnecessary null references
hbase - 21111 addendum avoid testregionreplicastorexception if table creation fails
added initialization and configuration settings to PMS in FormatRecognitionTest . java to ensure consistent initialization and prevent potential null reference issues
engine : create ovum data disk template when create ovum
updated test class imports and annotations for PrincipalAttributeRegisteredServiceUsernameProviderTests to use JUnit4 framework to improve compatibility with JUnit 4 features and enhance code clarity
added @ Override annotations to multiple classes to ensure proper method overriding and improve code readability
updated metric table and UPSERT statements to include a new parameter name ` metricVal1 ` to ensure consistency in metric handling across the application
added a check to ensure the document count consistency between deleted and segment doc counts in SegmentReader to prevent corruption during document count mismatches between segment and segment data
add log name and trace to siplogger ( issue # 845 )
updated FilamentFactory . java to replace 1.0 with 0.9 to ensure correct length for staves w / no starting barline
change initial value of handleFileUploads from true to false to enable the handling of file uploads by default
added a case - sensitive test for the default CSRF protection matcher in CsrfFilterTests to ensure that the filter correctly handles scenarios with case - sensitive CSRF procedures
remove unused static class fields . ( graal - 490 ) . use field instead
replaced direct add method calls with addFrequency method calls in spell check components to improve clarity and separation of concerns in spelling functionality
replaced the direct calls to ` Instant . now ( ) ` with a call to ` withWatermark ( ) ` in the FileIO class to ensure the element ' s watermark is accurately recorded during file matching
fix possible npe when use sqlexception from spring context
added import for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData functionality in the test cases
updated library output format to include root path to ensure correct initialization of the library at runtime
updated slider positioning in RailButtonConfig to use Math . PI instead of a fixed value to ensure proper positioning of the slider relative to the current screen
tidy up saveio save loop and some formatting
ambari - 24224 . enable expression language in kerberos property ( rlevas )
remove redundant code and fix typo in remotemountpointcomponent
updated the setupViews method to accept a ScrimView parameter and adjusted related animation animations to enhance the animation behavior and visibility control of scrim transitions
[ flink - 20772 ] [ state ] add an option to disable periodic materialization in the changelog backend
added a ` value ` field with getter and setter methods in the ` ProtocolParameter ` class , and updated attribute handling in the ` List ` and ` ParamTagHandler ` to enhance functionality by allowing direct access to the ` value ` attribute in XML serialization
add test for chunked and non - date header for chunked chunked request .
bug 54161 : add boolean value to the router answer to be able to return either false or false on the response
added a Content - Type header for form submissions in SwitchToPostInterceptor and updated SearchRequestUnitTest to ensure proper handling of form submissions
update javadoc for the embedclientconnector to reflect that the description of the h2 be about .
added logging functionality to ignore SQLFeatureNotSupportedException in PhoenixResultSet to improve debugging by providing a warning instead of throwing an exception
[ fix ] androidDaydream now use new net instance when request
fix ( core ) : fix syntax error in lRealtimesegmentdatamanager ( # 6557 )
updated the deposit addresses initialization by removing the unnecessary boolean parameter to simplify the method call and improve clarity
hbase - 7340 addendum remove unused import of prefixtreecodec from tablemapreduceutil
added inflation failure flag and modified the root variable declaration in XMLLayoutInflater to improve handling of back navigation in the DesignerActivity and ensure immutability of root in XMLLayoutInflater
refactor PushbackInputStream class for better memory management to improve performance and reduce memory leaks
make loweringphase extend loweringtoolbase to allow lower ( ) to work for multiple node
corrected a typo in the error message format from ' download _ folder _ failed _ content ' to ' sync _ folder _ failed _ content ' to ensure consistency and accuracy in user feedback
update Makefiles . java to improve parsing of additional character sets to enhance robustness by ensuring correct handling of newline characters and managing additional input formats
updated import statements to use MultiFields for retrieving deleted documents to improve code compatibility and prevent potential null pointer exceptions
updated refresh flag handling in SimpleBatchNode to include RF _ TRANSFORM to ensure proper binding and transformation of batch updates
[ gr - 36213 ] do not insert safepoints for method which be not uninterruptible .
added a framebuffer size callback to manage window size changes in LwjglWindow to improve efficiency by ensuring framebuffer size is correctly set when necessary
replaced translation calculations with offscreen translation calculations in LauncherAppTransitionManagerImpl . java to improve animation behavior when transitioning to the right translation for better visual consistency
updated ` LiteralNode ` implementation to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` and modified the static methods accordingly to enhance type safety and functionality by accommodating null values
added a method to set the length of files in both FSDirectory and IndexOutput classes to provide functionality for managing file size and length during writing operations
updated manifest handling in AndroidNdkScriptGenerator and added new test classes in LwjglDebugStarter to improve compatibility with NDK and ensure proper functionality of tests
camel - 16065 - camel - aws2 - s3 : fixed positioning of source and destination key from copy source
added permission check in RuleBasedAuthorizationPlugin and refactored test cases in TestRuleBasedAuthorizationPlugin to improve authorization handling and reduce code duplication
updated ZookeeperClientServerRegisterRepository to improve JSON processing and event handling to enhance robustness and maintainability of Zookeeper registration logic
renamed methods and updated mock creation logic in ReturnsDeepStubs . java for clarity and consistency to improve code readability and maintainability by standardizing naming conventions
added a check for an empty callValue before converting it to a Byte to handle empty call values appropriately
fix logging of date parse failure ( # 4059 )
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and modified the algorithm string representation to enhance compatibility with the new cryptographic algorithm and improve clarity of the algorithm usage
remove length from trim in tiffread ( ) . patch by stu hood ; review by jbellis for cassandra - 263
added parameter validation in CommandLineJobRunner and improved error messaging to ensure that invalid job parameters are provided to enhance error handling and provide clearer feedback when job execution fails
updated assertions in SmtpTests and MailTests to expect string as " foo \ r \ n " instead of " foo \ r \ n " to ensure correct comparison in message content verification
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve code readability and maintainability
replaced synchronized method with atomic updater for lastSequenceId to improve thread safety and reduce contention in sequence ID management
added a new file Test . java with a static sum function to provide a performance test that calculates and outputs the sum of two loops
updated method configurations in ShadowWifiManagerTest and WifiUsabilityStatsEntryBuilder to use protected variables instead of private ones to enhance flexibility and compatibility with different SDK versions
added a new Java class named Solution that reads two integers and computes their sorting according to specified parameters to implement a solution for generating valid input based on specified criteria
fix race when iterate cf during startup for the same time
refactor taskbar configuration handling to improve clarity and maintainability to enhance code readability and ensure taskbar behavior aligns with device orientation changes
update synchronization documentation in SyncFutureCache . java to improve performance and maintainability of concurrent operations
updated the default DUBBO protocol version from " 2.0 . 1 " to " 2.0 . 2 " and marked the release version for consistency to support new features and improvements in the latest version
[ java ] uselessstringof : fix false positive with literal
added a test method for ellipse no - secone drag in SymmetricComponentCalcTest . java to ensure correct calculation of symmetric components when dragging an element ' s position
reduce target type shard size during producer creation
added support for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to ensure compatibility with new configuration options
refactor CompilationTask class to improve code organization to enhance maintainability and readability of the compilation process
update location assertion in TestSemanticAnalysis and simplify conditional logic in DDLTask to improve clarity of test output and enhance code readability
added a call to ClearDatabaseChangeLogTableStatement for clearing database change log tables to improve database performance by executing clear operations on the appropriate executor
[ feature request - added version support in callpath similar to all the other platform . ( patch with thanks to benjamin )
add synchronization and closed state management to the close method in PhoenixDriver . java to ensure thread safety and provide clearer error messages when the driver is closed
fix javadoc warning ( mislead javadoc )
added integration test and UI updates across various activities to improve test coverage and ensure proper UI behavior during tests
[ gr - 26247 ] fix read phase failure in non - dev mode .
added a method to remove leading and trailing quotes in StringHelper to improve handling of long arrays and enhance test coverage for the method
refactor JpaQueryCreator to use type comparison and simplify type checking in the search logic to improve code readability and maintainability
fix a problem in sipsecuritymanager . putbranchid ( ) which be cause it to go negative on certain system .
added the dispatch method call to P25MessageFramer for copying messages to enhance message processing by ensuring all relevant data is dispatched after being filled
added null checks for the handler before invoking checkClosed ( ) in WebSocketImpl . java and introduced a new test method in WebsocketTest . java to ensure proper handling of null handlers and validate WebSocket client behavior when the socket is closed
[ ds - 2058 ] scrap integration test , use indexablepooltask instead of pooltask where possible
replaced fixed padding values with dynamic padding retrieval from resources to improve flexibility and maintainability of widget layout
added a method to hide all apps in ` LauncherTaskbarController ` and updated the ` closeOverlay ` method in ` BaseActivityInterface ` to improve the control over taskbar visibility and streamline overlay closure process
removed synchronization from the launch method and replaced Thread . sleep with launcher . join to simplify the launch method and improve responsiveness
updated the calculation for point zoom level in JavaSEPort . java to ensure accurate mouse positioning to improve accuracy in zoom functionality
replaced ` notificationManager . notify ` with ` startForeground ` for notifications in ` UploadService . java ` to improve the handling of notifications in the upload process
fixed bug 1244480 - added assertion for ' public static final '
hbase - 25736 set retries to 3 on testthrifthbaseservicehandler
lower the log level from info to debug for transaction offset logging to reduce verbosity of log output during normal operations
add some temporary fix to trace ( # 4497 )
added a new ` BittrexTickersResponse ` class and updated ` BittrexMarketDataServiceRaw ` to utilize it to improve the API for retrieving tickers from the Bittrex API
refactor enumConstants retrieval to improve type safety and clarity to enhance code maintainability and eliminate unchecked cast warnings
remove the unnecessary getclass ( ) call , the endpoint class be no longer need .
added additional characters to the character array in FileUtils . java to enhance the representation of special characters for better user experience
added stylesheet management and HTTP content handling in ResourceService and ResourceHandler to improve the management and retrieval of stylesheet information in the web application
added a call to ` clearIndex ( ) ` in the ` TestFiltering ` class to ensure the index is reset before processing new data
replace ObjectParameterStrategy with PointerParameterStrategy in the invokevirtual method call to ensure compatibility with pointer - based method requirements
fix issue with skip start with be incorrectly apply to
simplified conditional check for the name " java . lang . String " by removing enum check to streamline the code logic for clarity and
replace UnsatisfiedLinkError with SymbolNotFoundError in Library . java and add a new SymbolNotFoundError class to improve error handling for missing dependencies
modify BinaryResponseWriter to handle onlyPseudoFields conditionally to optimize document retrieval based on available fields when generating a document
added WebSocket ' s PING and PONG handling to the WebSocketImplBase class and created a test for pinging and ponging to improve WebSocket connection management and ensure proper handling of ping events
updated NON _ IDENT _ ESCAPES string by adding the hyphens " - " to correct the regular expression handling to ensure proper matching functionality
updated DnsResolverProvider to utilize a new DNS cache configuration and modified server selection tests to enhance server selection accuracy and improve test coverage for different scenarios
added conditional on class for messagingTracing to enable tracing functionality only when MessagingTracing is present
mondrian : quote sql to prevent test failure on db2
updated import statements in multiple Java files to reflect the refactoring of event and action classes to ensure compatibility with the latest library structure and improve code clarity
fix issue with close tag in ` ` / ' '
fix [ input ] : make char input field always visible
added a null check for the current user before comparing IDs to avoid potential NullPointerExceptions when accessing the current page
updated JSObjectLinker to handle index calculations for setting members properly to improve robustness by ensuring proper assignment of members based on index
refactor DefaultUniqueTicketIdGenerator to remove the suffix variable and use it directly to simplify constructor and avoid potential null reference issues
mark the SecurityConfig class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
deprecate each of these configs a they be almost entirely supersede by looppool ( # 3695 )
deleted the JoglDebugAdaptor class and its associated method from RocketFigure3d . java to eliminate unused code to streamline the project
added tostring methods for ExtraFieldPropagation and implemented necessary utility methods in AWSPropagation to enhance debug output and ensure correct retrieval of AWS trace information
added a PendingIntent to the mNotification ' s contentIntent in FileDownloader and FileUploader classes to ensure that the notification updates asynchronously during file operations
lucene - 80docvaluesproducer : fix the incorrect index order on the lastord
refactor DateTimeFormatter class to improve readability to enhance maintainability and ease of understanding for future developers
removed unnecessary try - catch block for loading desktop properties to simplify code structure and improve readability
added null and empty checks for the administratorCredentials parameter in the setAdministratorCredentials method to ensure proper authentication handling by throwing exceptions for null or empty credentials to improve error handling and provide clearer authentication errors
added a maximum width scale for tablets and two - panel layouts in BaseWidgetSheet . java to ensure proper resizing for tablets on different screen configurations
remove the call to pgl . beginrender ( ) and pgl . endrender ( sketchwindowcolor ) from jogl
update the hashing algorithm in Hashing . java to improve performance and accuracy of data hashing
refactor the accept method to use a more flexible filename parameter to enhance code readability and maintainability by using a more descriptive method
added user info strings to the addToListIfNeeded method and corresponding calls to improve localization and enhance user experience by providing descriptive information
added null checks for ` newType ` and initialized it to ` this . type ` to ensure proper handling of method invocation and avoid potential null reference issues
be 6a3c89ac : decrease launcher activity start delay . ( bug : 5134903 )
added a static final WEBAPP _ HOME constant and updated the solr home path configuration in SolrJettyTestBase . java and JettyWebappTest . java to improve code maintainability and ensure the correct web application path is used
reset selectedmotorset to null when update the selection view to ensure that the selection list is cleared when the motor is mount
added import for BufferUtil and invoked clearToFill method to reset the buffer in ByteBufferPool . java to ensure buffer is properly reset before usage
update notification rule api to use entityid when create via rest api
ambari - 2422 . remove authorization from configuration for ldap - related group property ( mgergely )
fix for http : / / issues . apache . org / activemq / browse / amq - 2840 - deleting an exchange can cause test to hang
[ hotfix ] [ test ] remove timeout from testbulkslotprovidersimpltest
[ issue # 1059 ] fix npes when connect to server fails . ( # 1059 )
updated CompositeHandlerAdapter . java for code optimization to improve performance and maintainability of the composite handling logic
renamed Quartz2Adapter . java to align with new naming conventions to improve code readability and maintainability
sulong : do not crash on illegalstateexception from lookup . execute ( )
update Spring Security schema and version references from 6.2 to 6.3 to ensure compatibility with the latest Spring Security version
updated the ` newNameResolver ` method to accept ` Args ` instead of a deprecated helper and modified the handling of ` DiscoveryClientNameResolver ` to use ` AtomicReference ` to improve argument management and ensure thread - safety in concurrent operations
add annotation position handling in JavacParser and create TestAnnotatedAnonClass to ensure accurate annotation positioning and provide a test for annotated anonymous
add " com . sun . naming . internal . " to package imports in CheckPackageAccess . java to ensure access to the correct package structure
change the strict variable from false to true to enable strict processing in StaxEventItemReader
updated OfflineSorter to handle excessive I / O operations using an array to improve efficiency in reading and writing partition data
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
added a boolean variable ` isInXYMode ` to check if the state is in a XY mode before converting it toHSBType to improve code readability and handle potential null values gracefully
refactor CellLayout to enhance folder creation and visibility control based on cell coordinates to improve the accuracy of layout rendering based on cell visibility and icon visibility
removed duplicate calls to showLoadingDialog ( ) in FileOperationsHelper and OCFileListFragment to streamline loading dialog handling across different activities
added a null check for ` uigestureFile ` before loading logs to avoid potential NullPointerExceptions when accessing ` xmlLogs `
updated assertions to use ` Locale . getDefault ( ) ` for case - insensitive comparisons to ensure consistent behavior across different locales in the comparisons
fix xml test : ensure that listener be register before set the result
added a new method ` loadWithNewGlobal ` and modified existing methods in ` Global . java ` to include it to Enhance functionality by allowing flexible loading behavior with global context
added JSON serialization and deserialization methods to ` StarTreeIndexSpec ` to enable conversion between JSON and string representations for improved data handling
added import for ObjectPostProcessorConfiguration in HeadersConfigurer . java to integrate ObjectPostProcessorConfiguration for improved security configuration
replaced double quotes with single quotes for consistency in string replacement across file handle classes to improve code readability and maintain uniformity in string representation across the codebase
[ drools - 5330 ] avoid npe on inoperator when null
added import for FieldCache and modified field cache management to ensure the code does not insufficient for multiple segments in a single segment
act - 54 add testcase to reproduce bug in messagerevent .
add the method resolveinterfaceorvirtualcall to resolve the call site directly .
http : / / issues . apache . org / jira / browse / amq - 3394 - rework queue - add new attribute to prefetch size of message group
added slot ID constants and modified constructor parameters in Secmod . java to improve code clarity and facilitate handling of slot IDs in the nss internal module
added alignment support and modified layout management in mmm Layout . java and GdxRenderer . java to enhance layout handling and improve user interaction with the dialog
[ hotfix ] [ test ] ignore unalignedcheckpointitcase in unalignedcheckpointitcase .
6738524 : jdk13services allow read access to system property from untrusted code
fix inconsistency between keyword and html filename when update mode
camel - 19099 : fix a potential classcastexception in multicastprocessor .
remove dead code , fix warning
escape special character in flavor statsd view ( fixes # 644 )
add an udp port to member serialize on the same multicast address to be able to specify the udp port .
rename the multicast class from OperatorMulticast to OperationMulticast across multiple files to better reflect the class ' s purpose and improve clarity on its functionality
increase send timeout in eventbustracertestbase due to intermittent failure
wrapped the latch logic in a try - finally block to ensure that the latch is always synchronized to improve resource management and prevent potential thread leaks
hhh - 14316 clear cachedeventlistenerregistry cache on destroy
simonstewart : use the localstorage driver to open the local host test .
add ivalueutilstest and remove ptndarray from ivalueutilstest ( # 2241 )
added a listener for task stack animation start and unregistered it from BaseActivity to ensure the UI reflects the correct state during the animation
add extra guard to avoid stringindexoutofboundsexception ( possible fix for invalid split character )
camel - 5403 fixed the npe issue of camel - cxf when use producer from spring
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability
add log to debug playtime crash and band aid fix for release build .
added conditional logic to handle exceptions during C1X compilation to provide flexibility in exception handling during compilation
removed hardcoded signup and password values and initialized them to null to simplify configuration and ensure default values are set for signup and password
[ hotfix ] [ runtime ] rename ` previousexecutiongraphallocations ` to ` reservedallocations `
replace the ` onlyFormat ` variable with a ` format ` variable and introduce a new method ` getOnlyFormat ( ) ` to improve clarity and encapsulation of date formatting logic in the code
make nodatacontainer available in tiff ( for consistency )
[ gr - 38507 ] sulong : fix possible nullpointerexception when initialize source section .
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and its tests to ensure proper serialization of output data
replaced blocking behavior with CountDownLatch for PathChildrenCache connection state handling to improve synchronization and ensure proper state management during connection states
refactor ArrayTypeHandler to handle null cases more effectively to ensure that null values are correctly retrieved from the ResultSet to avoid potential NullPointerExceptions
replaced the RegexpTunnel class with a reprogram for prefix retrieval in JakartaRegexpCapabilities . java to improve performance and simplify the registration process for regex prefixes
fix application pick when overlay config be load from classpath ( # 1043 )
[ drools - 376 ] avoid npe on mutable global when execute a rule
added validation checks for asset name , URL , and description in AssetIssueActuator . java to ensure that asset names and descriptions are valid before processing transactions
mow - 499 fix copy copy with ` ` copy ' ' in ca
[ lcwebos ] add default translation for unknown host ( # 12931 )
replaced direct node setting methods with bulk addition of nodes to ensure all nodes are added to the configuration
updated assertions in BaseTokenStreamTestCase to include additional debugging information to improve test clarity by including additional context for assertion failures
camel - 11345 : patternprocessor now use the modulus when incrementing calendar interval . thanks to joao loureiro for the patch .
added methods for clicking items in ShadowAdapterView and removed from ListView to enhance flexibility in item click handling and improve code organization
pdfbox - 3353 : avoid classcastexception when update the appearance dictionary
[ gr - 37130 ] fix pe graphdecoder to avoid infinite loop
updated HttpSessionDestroyedEvent to utilize getSession ( ) for retrieving security contexts and added unit tests for it to improve session attribute handling and ensure correctness through unit testing
added a unit test to verify the service name change in Zipkin using a manually provided name to ensure that the tracer correctly reflects custom service names in span reporting for improved observability
added logging statements to track exclusion of specific classes from the Jar to improve debugging and monitoring when handling spooling to JARs
renamed ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` for clarity to improve code readability and maintain consistency with project generator naming
test fix : increase timeout in try - lock
added DEFAULT _ CACHE _ CAPACITY constant and modified return statements in ConfluentSchemaRegistryDeserializerProvider to include cache capacity to improve flexibility in handling schema registry cache capacity configuration
renamed the JCheckBox variable from ' remind ' to ' checkAtStartup ' and updated its usability to improve clarity and provide a translation option for the startup time
avoid unnecessary generation of node factory method ( # 653 )
hhh - 14444 : fix regression for # setpropertyvalue ( … ) that occur when use a proxy with a propertytype . transient
added methods to handle prototype properties and modified invocation logic in ScriptObject to improve object handling and support for prototype properties in the scripting process
updated the default read mode from " heap " to " mmap " and added logging for segment loading in ImmutableSegmentLoader to improve clarity of the default read mode and enhance debugging capabilities
added support for ByteArrayTemplate in ArrayTemplateBuilder to enable handling of byte data type in the array template process
added Hipchat support in SamlServiceProviderProperties and created CasSamlSPHipchatConfiguration class to enable integration with SAML for Hipchat service provider configuration
replaced List with Set for commandRegistryUrls to store URLs as a HashSet to improve efficiency in managing command registry resources
updated warning log to include the current context and added debug logging for uncovered HTTP methods to improve log clarity and traceability during uncovered HTTP methods
camel - 6056 fix the issue that sni be not able to change the session log in via jmx .
camel - 5568 : fixed bug in activemqconfiguration . gettransactionmanager ( ) .
summary : fix npe when hyperlink host be null
updated method implementations in Timers . java to improve performance to enhance the efficiency of time series data retrieval
updated the import statements and output stream references in DefaultDefectReporter . java to ensure compatibility with the new application structure and improve zip file handling
remove deprecate option ( lucene - 9569 ) from the tokenizer
removed unnecessary overrides from ScriptObject and updated test assertions to use ScriptObject directly to simplify code and improve clarity by using a more general naming convention
refactor EventBusMetrics class for improved clarity to enhance maintainability and readability of event bus metrics
[ ds - 4231 ] use the eperson ' s language when retrieve the appropriate locale in a subscription
added @ InitializingBean implementation to JaversTransactionalDecorator and removed dependency on PostConstruct annotation to ensure schema validation occurs after properties are set
removed null check around the put operation for pgNameToSQLType in TypeInfoCache . java to simplify the code as pgTypeName is directly stored without unnecessary checks
added server assignments and set servers for handler0 , handler1 , and handlerC in ScopedHandlerTest . java to ensure consistent server assignment across multiple test scenarios
fix calltimeoutexception bug ; call timeouts should not increment retry count and should not be delegate to caller .
added a check for empty password before verifying the login request ' s username to ensure that a valid password is provided when no password is provided
change permission node check from an empty string to a wildcard string to ensure that the permissionNode is validated as a valid string before proceeding
rename ` encoding ` to ` sourceCharset ` and introduce ` setCharacterEncoding ` method to enhance clarity by clearly indicating the purpose of setting source charset
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` in multiple classes to facilitate the representation of the postLogin data type
refactor simulation and parameter handling in GeneralOptimizationDialog . java to improve clarity and maintainability to enhance error handling by clearly defining the simulation and its parameters during optimization
camel - 17206 : camel - core - optimize and allow to disable context reload for property placeholder .
[ flink - 15672 ] [ build ] migrate production log4j configuration to
updated PrologSizeSanityCheck . java for improved validation logic to enhance the efficiency of the PrologSizeSanityCheck class
updated NearbyListFragment to improve functionality to enhance user experience with better data handling and user experience
add a condition to invokeSafely on nonCloseable markSupported in RequestBody . java and implement a test for non - mark supported input stream content type in RequestBodyTest . java to ensure that the input stream is only invoked when the method is supported , enhancing functionality
do n ' t run out of port when disable ( # 9461 )
update movementdebugcommands to reflect health and jump speed when change
updated the ` random ` method to include a ` halfLengthTotalWeight ` parameter and adjusted the index calculation for weights to improve the flexibility and accuracy of the random number generation logic
fix error message that be not clear when a timestamp be equal to zero .
added comments to the parameters for sorting by and direction to improve code clarity regarding the sorting behavior based on the specified parameter
replace checkTransactionSynchStatus ( ) with pulseTransactionCoordinator ( ) across multiple classes to standardize transaction handling and improve clarity in synchronization management
pipe : fix the deadlock in pipe taskcoordinator ( # 11509 )
add a robolectric property to allow user to build robolectric without the preinstrumented jar to allow for good testing of new feature
modified the conditional from " if ( ! isSilent ) " to " if ( isSilent ) " to correct the logic for execution when the silent flag is true
added checks for default and required fields in IndexSchema and threw SolrException for unsupported attributes to ensure proper error handling and provide clearer error messages for invalid dynamic fields
removed unnecessary random read repair check from StorageProxy . java to streamline code for better readability and efficiency
replaced ImmutableSortedSet with Iterables for system include roots and added a test for including specific paths to improve code clarity and ensure correct handling of include directories in the prebuilt C++ library
refactor ` AdaptableX509CertSelector ` by initializing start and end dates without default values and introducing flags for sensitivity to enhance clarity and control over sensitive key identifiers and serial numbers
refactor nosqlappender to use abstractappender . parseInt instead of try / catch block
added a deprecation annotation to GuiScreenEvent . java to mark the class as outdated due to its removal in version 1.16
added methods to manage adding , removing , and adding categories from a list to improve functionality for managing categories in the RecyclerView
# 227 - enh : add type to servercachemanager ( allow for cache with different type )
update massOverriddenBy and CDOverriddenBy fields from a single component to a loop for better readability to improve code structure and maintainability by eliminating redundant assignments
replaced the ` doCompile ` method with ` destroy ` and introduced a ` destroy ` method in ` JavaCompilerService ` to ensure proper resource management by closing the compiled task when it is destroyed
refactor MultiThreadedBuildRuleResolver to use a Supplier for task creation to improve code readability and maintainability by reducing boilerplate code
make wanreplicationserviceimpl thread - safe
added null checks for tPartition and getTTable ( ) methods in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to ensure robust handling of null values and improve driver initialization logic
refactor code to use lambda expressions for creating ScheduledThreadPoolExecutor in LocalServiceRegistryClientImpl and RemoteServiceRegistry to improve code readability and reduce boilerplate code
added a new test class ` FilesTest ` and implemented functionality to delete files in ` Files ` to ensure proper functionality and reliability of file operations in the application
removed unnecessary try - catch blocks when closing socket resources in ServerSocketAdaptor and SocketAdaptor to simplify resource management by directly closing sockets without catching exceptions
update conditional check to use ` Logger . class . getName ( ) ` instead of ` System . class ` to improve accuracy in identifying logger class names
refactor current working directory handling to use ` addWorkingDir ( f ) ` instead of clearing it and adding it to improve code clarity and streamline the process of adding working directories
added null check for cn in ItemInfo and set insets in Workspace to ensure proper handling of null values and maintain proper layout adjustments
changed access modifier of the GeneratedEntityDecorator class from public to private to restrict access to improve encapsulation
updated Java file type configuration in SimplePostTool . java to ensure correct file type usage for CSV and JSON files
apps - 2606 fix bad logic for issymbolicdiffers
websocketclientcontainer should deregister it on stop so that it clean up gracefully .
updated conditional check to use ' | | | ' instead of ' && ' for type validation to ensure correct logic for handling null types in the code
ensure a clean - up in order to avoid test flapping
added a method to retrieve a search string from query parameters and updated resource retrieval logic to enable dynamic searching of resources based on user input
hide the neutral button in SetupEncryptionDialogFragment to improve user interface by reducing unnecessary visibility
move countitems ( ) to itemdao so it be more efficient
modify CREATE TABLE statement formatting in DDLTask . java to properly escape table names and column descriptions to ensure correct syntax for better readability and correctness in database schema generation
added logging and exception handling for OAuth2 exceptions in CheckTokenEndpoint to improve error reporting and provide better debugging information for OAuth2 exceptions
updated multiple Java classes to improve consistency and clarity in method implementations to enhance maintainability and readability of the codebase
updated IdentityZone integration tests to use a more standardized API and HTTP response handling to improve code clarity and maintainability when dealing with identity zones
updated tooltip delay values in ExtractionModelFrame , DataBrowser , and SQLConsole for improved tooltip formatting to enhance user experience by providing clearer tooltips and ensuring correct SQL syntax
update actionproviderimpl to support run single test method with junit 5
changed the exception handling from ` Exception ` to ` RuntimeException ` in ` WorkerShellStep . java ` to provide a more specific exception that is not intended for unexpected errors
[ hotfix ] [ core ] annotate some class in flink - core with @ experimental
[ minor ] correct a typo in the doc of streamcepstrumsource
added a check to ensure the index is within bounds before proceeding to prevent potential IndexOutOfBoundsException when accessing an invalid index
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure test cases reflect the correct type of expression handling
added confirmation type to the DebugPaste class to enhance user experience by preventing accidental debug paste actions
simplify . throw an exception when no handler or endpoint be find . ( # 3913 )
ticket # 4810 : do not re - focus mathquillggb when create a new radio button
updated GoBinaryDescription to replace Arg with GoBinaryDescriptionArg and modified related method signatures to improve consistency and leverage immutability in argument handling
updated the environment variable retrieval logic to use a configuration file to ensure the application uses the correct environment specified by the application context
updated the ` SimpleRetryExceptionHandler ` to use ` RetryListener ` instead of ` RetryListenerSupport ` and introduced a new ` SecondDummyRetryListener ` class to simplify the retry listener implementation and improve code clarity
double return precision for count ( fixes # 498 )
findbugs : avoid declare field if it be null
refactor JUnitFormatter to use a do - while loop for appending delimiters to improve efficiency and readability of the string builder
updated the way elements are assigned in Subject . java to handle non - LinkedList subclasses to ensure compatibility and prevent potential issues when retrieving elements from a LinkedList
enhanced exception messages in StaxEventItemReader to include the resource URL to improve clarity of error messages for better debugging
* testmultitagetarget now use pie light instead of phase 2 ( jme3 - ext ) .
updated the way the current client is found and added debug logging for cases where the current client cannot be found to improve robustness and provide informative feedback when the current client cannot be found
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
added BigInteger instances for cryptographic parameters in KeyStoreManager . java to enable computation of cryptographic parameters for secure key store
updated method call from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` MeshCollisionShape . java ` to ensure compatibility with the updated mesh indexing approach
set engine version on deployment and test ( # 3998 )
updated resource loader property names and modified property settings in the SpecificCompiler class to improve clarity and align with new resource naming conventions
make check that a newly add thread can be attach if another thread be already mark a uninterruptible
added null check for map values in GenericUDFMapValues and created a test for it to ensure robust handling of null maps and verify functionality through unit testing
align test with change in spring framework 4.0
added new properties for oil well generation rate and enabled oil spouts in BCEnergyConfig to enhance the configuration options for oil generation behavior and improve code encapsulation
added a cleanup directory check in ImportContext and adjusted directory conditions in JobQueue to ensure a clean - me directory is used for operations and improve file management
fix tika - 451 : if no memory can be read xml , use a message format string .
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability by ensuring only necessary dependencies are included
updated static final constants in ZipConstants and ZipEntry classes to organization to improve code organization and clarity by grouping related constants into a single class
refactor newFileSystem method to improve file handling to enhance robustness by ensuring the path is a regular file before proceeding
fix # 3829 incorrect width / height calculation in ifcontroller
jetty - 9 fix intermittent test failure - add @ override
added Gson annotations for certain fields in ServiceOsSpecific . java to enable better serialization and deserialization of JSON data for the service
added method to delete a database entry from a specified book to improve clarity and functionality when deleting book data
refactor multiple class names for consistency and clarity to improve code maintainability and readability
fix regression in previous fix for bz 56181 .
fixed - admin console : restart of context if it be not available .
removed unregisterHandlers ( ) method and refactored binary and text handler assignments in WebSocketImplBase . java to streamline code and improve resource management
add configuration properties for device ID transformation and enable ID table configurations to ensure proper initialization of IoTDB configuration settings for improved functionality
reduced the number of documents in the ExitableDirectoryReaderTest from 2000 to 100 and added a new DelayingSearchComponent class to improve test flexibility and extend search response handling
correct the condition in the method call from ` = = null ` to ` ! = null ` to correct the logic for determining the mock TSP status
fix test : use new scriptbuilder instead of create one internally
updated the expression to include " / schema / types / fieldType " to accommodate additional field type handling in the schema
updated completer logic to include NullCompleter and added a new test class OptionCompleterTest to enhance functionality and ensure proper handling of null values in option completions
fixed checkstyle issue due to commit 0b6c540a203453580bb76a0a0d0a0fccfa0e
[ iotdb - 3662 ] change peer id to int ( # 7936 )
modified FtpHelper to conditionally upload files based on file type to enhance file handling to support zip file uploads efficiently
added alpha settings for the reply button in TweetFragment . java to improve the visual appearance of the reply button
updated expected string formatting in AccessLogSupportTest . java to include a timestamp to improve clarity and ensure accurate time representation in tests
use tmp folder for marycachetest ( temporary ) to prevent ci failure
remove null check and initialization for subscribers in settingimpl . java to simplify code and improve performance by eliminating unnecessary null checks
replaced initialization block with an IllegalArgumentException in AbstractSamlObjectBuilder . java to improve error handling by providing a more informative exception message when the marshaller is null
replaced printStackTrace ( ) method calls with LogUtil . warn ( t ) for stack trace logging to enhance error handling and maintain consistent logging style
added checks for file existence in dev mode and updated tests for asset serving to ensure correct directory handling in development mode and improve test coverage for static directory path resolution
[ flink - 6773 ] [ rocksdb ] write state write option to rocksdb backend before re - saving
updated the default format string in CoreLabel . java from " value - tag - index " to " value - index " to ensure consistency in the default format representation
fix dijkstrabi hint and setalgorithm break by # 1472
enable native driver by default ( # 5686 )
rename ` DuclsSandboxTest ` to ` SandboxTest ` in ` DuclsSandboxTest . java ` to standardize naming conventions for test classes
( chore ) camel - cxf : do n ' t log error when camel error occur
make forwardpropagatetree public so it can be use by test
jdbcexample : fix the count ( * ) example for the time dimension
o add warn if project activation use $ { project . basedir } for file
refactor Style class to improve code readability to enhance maintainability and clarity of the codebase
added zoom handling functionality to ShareActivity to improve user experience by enabling quick zoom out of the activity
added logic to ignore deprecated fields during JSON processing to improve handling of deprecated fields during deserialization
added animation listeners for sending and hiding animations in LauncherFragment to improve user experience by providing smoother transitions when interacting with the activity
[ hotfix ] fix checkstyle violation in yarnutils
added Progressable parameter to multiple methods in Utilities and related classes to improve progress tracking during file operations
[ issue # 5115 ] check the coordinator executor thread to exit early ( # 57130 )
remove an contribution from the ContributionListPanel to ensure the panel is updated correctly after contributions are removed
changed the class name from ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and updated its usage in the code to ensure consistency in class naming and avoid potential naming conflicts
added a default value for dPath if it is empty to ensure the application uses the user ' s current directory as a fallback
fix # 778 : ensure defaultaudiosink have a valid sample rate
log4j2 - 2283 add mapfilter . filter ( ) method to find out which message match in a map
updated VerificationInOrderWithCallsTest . java file to improve test coverage and ensure accuracy of verification outcomes
updated the method call from ` setFromAxis ` to use ` x ` instead of ` z ` to ensure correct axis positioning in the quaternion
corrected the constant name from " colelction . delim " to " collection . delim " to ensure accurate naming for collection data source
curator - 388 add unit test to cover curator - core change listener .
do n ' t show union type for an empty string ( # 578 )
refactor one - handed mode check to use a boolean flag for compatibility to improve code readability and maintainability by reducing system property checks
added onDetachedFromWindow method to manage running tasks of AppsCustomizeAsyncTask to ensure that tasks are properly canceled when the window is detached
added dictionary resource handling to MorfologikAnalyzer and MorfologikFilter classes to support custom dictionary resources for Polish language support
replaced the integer count variable with a boolean variable thrown to simplify exception handling logic for improved clarity and maintainability
updated the initialization message to include an empty string instead of a hardcoded " debug " to ensure consistency in project initialization format
phoenomena test : avoid mislead ` ` fail to acquire resource ' ' exception
refactor to apply tooltip text logic for components in ComponentTreeRenderer . java to improve code readability and maintainability
updated await condition from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the zipkin server to become up during tests
added config option for deviantart . username and deviantart . password for basic authentication
refactor GoogleSignedPackages ( ) to utilize constant strings for google package keys to improve code readability and maintainability by using named constants instead of hardcoded values
fix test : create correct solutionBusiness instance
add a method to notify window state changes in WWindowPeer . java to improve event handling for window state transitions and enhance logging
added email description to the EntityGroupKeyContentFormatter and a test case to improve the handling of email - related configurations in the renderer
updated the return statement to use ' data ' instead of ' sel ' to ensure the correct data data is handled during the removal process
modify the language code retrieval logic in Locale . java and LocaleTest . java to enhance functionality to return correct language codes based on the length of the locale
refactor ChangeLogParser usage and introduce a new method createUpdateVisitor to improve code organization and encapsulate the creation of UpdateVisitor
added a conditional check to return early if screen pinning is active to improve performance by avoiding unnecessary processing when screen pinned
added functionality to set and retrieve a text description when no chart data is available to improve user experience by providing context - specific information when no data is available
synchronized the checkHeadWritten method and adjusted cookie handling in Http1xServerResponse and Http2ServerResponseImpl to improve thread safety when accessing the response head state
fix race condition introduce by netty 4.1 . 76
added " : scheme " header configuration and updated test method names for improved header limits to ensure the tests accurately reflect the correct scheme usage in HTTP / 2 operations
fixed - rlocalcachedmap . entryset ( ) method . should return cachedvalues ( ) if localcachedmap . storemode . localcache
camel - 6583 : fixed npe when start jpa endpoint with thanks to ingo
fixed issue with physicscharacter jump speed not be set correctly .
added a condition to check if reparsedFunction is null alongside the existing syntax extensions check to ensure the function is only processed when reparsedFunction is not set
updated BitstampPusherService to use the correct logger naming and added order handling methods to improve code clarity and ensure proper error logging for better debugging and maintainability
restore removal of old segment uri method ; deprecate since 3.0 . 8 ( # 5471 )
updated the database query to include a filter parameter to enhance the tracking mechanism by filtering results based on the specified filter
add a method to languagetestsupport to check the behavior of the predicate .
added a call to bound the alpha value of 0 to 1 to ensure the alpha value is within the valid range of 0 to 1
fixed space in import - package attribute when version = 1
refactor DataSyncConfiguration class for improved clarity to enhance maintainability and readability of the code
added initialization for JavaSnippetRepository in JavaLanguageServer . java to ensure proper initialization of the snippet repository for processing
fix update time bucket for circular buffer ( # 4854 )
simonstewart : point to the new domain url for the chromedriver service
refactor event handling in PgEventConsumer and PgEventProducer to use prepared statement with formatted SQL strings to improve code readability and maintainability by using try - with - resources for database connection
fix for tika - 1435 : unit test for rome feed fix
added a check for the " Content - Length " header in TransferCompletionHandler and updated the NettyTransferAdapter to use FluentCaseInsensitiveStringsMap to improve handling of request headers based on the content length in the transfer process
modified Dialog . java to update its implementation to enhance user experience by improving dialog interaction
removed the overridden constructor from EnhancedRuntimeException to simplify the code and improve readability
int - 1830 add debug code for the socketappendertest
camel - 14504 : remove camel - eventadminendpointbuilder from camel - spring - boot - events
modified method signature and logging in ByteArray . java for consistency and clarity to enhance code readability and maintainability by standardizing method parameters
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve touch event handling to prevent erroneous input interactions
camel - 6770 : fix camel - restlet domain - service ' s test
removed the currentIdx parameter from the resizeAndRehashIfNeeded method to simplify method signature for better usability and code clarity
move com . hazelcast . tests to com . hazelcast . test . modulepath ( # 18079 )
added source directories retrieval in JavaServerConfiguration and updated the compiler method in JavaLanguageServer to improve configuration flexibility and enhance clarity on source paths
updated menu item handling in TweetPager to remove conditional logic for web page visibility to streamline menu item management for better clarity and functionality
renamed methods to reflect ancestor / descendant logic and updated assertion checks to improve clarity and correctness of node identification logic
change / descend to be more lenient about position
[ iotdb - 2442 ] fix nullpointerexception in insertnode ( # 4821 )
removed extraneous quotation marks from the end of a method to correct syntax and ensure proper compilation
[ flink - 12963 ] [ table ] improve performance of abstractstreamoperatorfactory # setmailboxexecutor
hbase - 26343 add precheck for tablestate in meta and fixmeta ( # 5294 )
updated method reference for retrieving meter IDs and improved output formatting to enhance code readability and maintainability
fix the initialization of blockjunit4classrunner ( fixes # 794 )
replace ` remoteItems ` with ` lastTimeData ` in the ` handle ` method call to ensure the method uses the correct data data structure
updated calculation for cell width and padding in DeviceProfile . java to improve layout by accounting for additional padding
[ hotfix ] [ core ] introduce configuration option flink . internal . properties
replaced instances of ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure consistency in accessing the document method
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to optimize the merging process of multi - phrase enums
hhh - 11553 - implement new closeable interface and remove return value from session . close ( )
refactor GetLocations class for improved clarity to enhance code maintainability and readability
avro - 2696 : print stack trace for null exception
stop swallow ioexception in Contents . addlength ( )
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features and support libraries
ruby flavor : fix parsing of multiple literal
updated log level from warn to debug for error messages and added null checks for username , password , and referenceDriver in BaseLiquibaseTask to improve logging detail for better troubleshooting and prevent potential null pointer exceptions
remove usecaches on nio channel and processor cache ( socket property be now off ) .
refactored the ` readCityDatabase ` method to accept ` Resource ` instead of ` MaxmindProperties ` to simplify database reading logic and improve dependency management
remove deprecate html tag for helper view
phoenix - 3872 : skip use encoded qualifier list optimization for raw scan ( jamestaylor )
removed the public access modifier from several methods in the ApprovalStore class to enforce encapsulation within the same package
added a boolean flag to track if a download has started in the FileDownloader service to improve user feedback during downloads by notifying when a download has completed successfully
replaced ` getOpenView ` with ` getAnyView ` in ` AbstractFloatingView ` and added a method to retrieve a view to simplify view retrieval logic and ensure views are open only when necessary
updated project version from 1.0 . 11 to 1.0 . 13 and corrected a typo in the string in JFreeChartResources . java to ensure compatibility with the latest project and accuracy of the documentation
replaced multiple instances of ` yield ( ) ` with ` Thread . yield ( ) ` to ensure consistent usage of the standard ` yield ( ) ` method
updated GsonBuilder class functionality to improve JSON handling to enhance performance and maintainability of JSON parsing
theorem proving : fix npe when center = null
remove -- java . espressohome option and deprecate -- java . path
doc : fix issue relate to javadoc in javax . lang . model and ctqueryable
[ ci ] remove unused delete session functionality
rename ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to improve clarity and accuracy in error handling
solr - 2521 : testjoin . testrandom fails , improve effective test
updated triggerMediaScan method to include the file parameter to ensure the media scan is triggered on the correct media file context
removed conditional logic for posting test results based on verbosity to simplify result printing logic and reduce code duplication
updated custom G - code settings to retrieve text from custom variables to ensure consistent handling of custom G - code settings across the application
camel - 1569 : fixed encode issue in additionaljbmappingproducerimpl
refactor JsonElement class to improve code readability to enhance maintainability and ease of understanding for future developers
added imports and exception handling for SolrTestCaseJ4 in TestBadConfig . java to enhance test reliability by ignoring and resetting exceptions
added a method to remove fragments and action bars to improve fragment management and action handling in the MainActivity
replaced the assignment of ` spanishTokens ` with parentheses in ` TokenizerAnnotatorITest . java ` to improve readability and maintainability of the token list
change Range . java type from Range . Range to Range . Byte and adjust related methods for consistency to improve handling of single - byte range data types and enhance code clarity
updated the file name from ` shapeoko . txt ` to ` line _ skip _ test . gcode ` and modified various print statements in ` VisualizerCanvas . java ` , ` GcodeViewParse . java ` , and modified regex matching in ` GcodeViewParse . java ` to improve clarity of file names and enhance the robustness of G - code parsing logic
added 8.4 . 0 - cfs and 8.4 . 0 - nocfs to the test cases to ensure compatibility checks for the latest versions
fix : fix syntax error in assertions _ sync _ with _ instanceofassertfactories _ test
added a check to close the exchange client if the output stage is null and the output state is completed to ensure proper resource management when no output stage is available
fix # 1689 : integrity check fail with ` ` invalid file path ' '
added import statement for SolrClient and removed shardToClient from ChaosMonkey . java to streamline dependencies and improve code maintainability
added null check for fas before initializing cs in ConfigurationActivator . java to avoid potential NullPointerException when fas is null
no effective change - code cleanup - remove whitespace
made constructor of ExtensionTypeHeader public and added validation checks to ensure the extension type is within the acceptable range to 127 to allow external access and validation of the ExtensionTypeHeader
pdfbox - 3353 : remove unnecessary try / catch usage , a suggest by valerybokov
camel - 10418 : camel - prometheus should use pushonshutdown by default
added reactive sink error handling for trigger queue errors in ReactiveStateMachineExecutor to improve error management and provide better handling of job failures
add a test for setting the first path on a Python interpreter in BuckConfigTest . java to ensure that Python executable settings are correctly set on the first path
added a default button to the root pane in the InitialAccountRegistrationFrame to enhance user interface flexibility during account registration
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and modified TezCompiler . java to use it to improve performance by allowing semi - joins during map - joins
improve error log message so that exception be n ' t mislead
remove redundant package - info . java because it be no longer a prefix
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding test cases to enhance the ` OidcIdTokenClaimCollector ` functionality and ensure proper handling of claims
removed private Vector2 fields from multiple geometric classes to streamline the code and improve readability by eliminating unused parameters
modify the conditional logic for checking PCollection validity to ensure it executes only when pcollection is not null and it is not equal to the expected value
update SslContextFactory configuration parameters to enhance security and compatibility with latest SSL / TLS standards
fix max expect and max log entry from 5 to 5000 . patch by jbellis
update return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more specific error description for access confirmation errors
fix classloader issue of refconfig [ 3.0 ] ( # 9452 )
added a boolean parameter ` copyRowHeight ` to the ` shiftRows ` method and adjusted the logic accordingly to provide functionality for row height management during row modifications
updated the rollover icon assignment from `RolloverIcon ` to ` pressedIcon ` in ` FontImage . java ` to correct the icon positioning for better visual feedback
refactor grid translation handling and update methods in TaskViewSimulator and RecentsView to improve code clarity and maintainability by consolidating translation logic
assertion # bylessthan : fix javadoc warning
added null checks for currentDateTimeFunction in multiple database classes to ensure that the returned currentDateTimeFunction is only returned when it is not null
added an anonymous path method in IOUtils . java and updated log message formatting in Log4jUtils . java to improve path handling and ensure accurate logging of merged log files
updated the parameters and lambda expressions in DigitalWellBeingToast . java to include content description details to improve clarity and context of task descriptions within the UI
send timeout to meta - available wait when timeout be 0 . patch by jbellis
updated LineNumberTagAggregator and TestDominance classes for improved functionality to enhance code readability and maintainability
fix genericitem not be able to convert state to a float
added new test methods and modified import statements in BidirectionalOneToOneNPlusOneTest . java to enhance functionality for fetching post details and improve code organization
added a method to remove extra screen from the workspace and modified the index initialization in the LauncherModel to ensure proper search behavior when there are no workspace screens
[ trivial ] optimize performance , a suggest by valerybokov
change string delimiters from single quotes to double quotes in GoogleLineChart and GooglePieChart to ensure consistency in string formatting across the codebase
refactor wait loop logic in SendingAccountor . java to improve clarity and correctness to ensure proper handling of the wait time when sending batches are complete
add position to help track how much memory would be write to a file .
modify the connection timeout in the NettyTransceiver initialization from 1 to 0 to ensure that the transceiver is initialized with a defined connection closure
added sorting functionality to log events before generating a report to ensure the events are sorted by start time for better user interaction
add a test to ensure that CSV parsing with escaped quotes works correctly to ensure proper handling of CSV lines containing double quotes in the description
added a new file in the corefChineseBenchmarkSlowITest . java file and refactored method signatures in AbstractSequenceClassifier . java for clarity to enhance test coverage and improve code maintainability by consolidating functionality
of - 880 : iqhandlers must be create for remote user only .
removed the @ JniImpl annotation from VM . java to simplify the code and avoid potential compatibility issues
updated configuration constants and improved method calls in Fetcher2 . java to enhance clarity and maintainability of the code
added a condition to check if the video format is not " dolbyvision " in FFMpegVideo . java and removed multiple print statements in MediaInfoParser . java to ensure compatibility with media formats and reduce unnecessary console output
fix : incorrect test to account for new package
fix behavior of worldborder # setdiameter ( ) and getdiameter ( ) . fix # 715
hbase - 26943 check that the client be run on the master when get the replication status ( # 4388 )
modify checkOpen method to include caller parameter and adjust conditional logic to improve event handling by incorporating additional logic for better functionality
replaced the usage of ` ArrayList < InstanceConfig > ( ) ` with a new method ` generateInstanceConfigs ( ) ` for generating instance configurations to streamline the code and enhance clarity by encapsulating instance configuration retrieval logic
changed the access modifier of the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
[ mng - 4207 ] add test case to demonstrate bug with miss version of maven project
removed redundant null checks for protoGetSwitches and protoHistory in PropertyMap . java to simplify the condition for better readability and maintainability
refactor getControllerId methods to accept an optional configId parameter and simplify the retrieval process to improve code readability and maintainability by reducing complexity in the handling of controller IDs
replace sessionFactory . close ( ) with session . close ( ) to ensure proper resource management by using the session object
removed a condition that checks if the service generate a refresh token in the consent verification logic to streamline the consent verification process by focusing on essential refreshes
removed the System . out . println statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced the propagation extractor method with a NoopGetter implementation to simplify the handling of null values in the propagation process
refactor conditional on enabled resource chain to improve clarity and maintainability of the code
added a condition to check if treeRoot contains children in BarrowmanCalculator . java to ensure that the treeRoot is a Rocket instance to avoid potential errors
pdfbox - 2852 : fix call to deprecate method
updated log messages and refactored method signatures in FacebookImpl . java to improve clarity and ensure proper handling of result listeners during login processes
updated return values in ShadowICU to return a skeleton instead of a hardcoded string to improve flexibility and maintainability of date picker handling
removed dependency on KeyguardManager in TouchInteractionService to simplify the condition check for device lock status
cloudstack - 8631 : fix npe in delete volume volume with custom disk offering
replaced FileChannel with AsynchronousFileChannel and added position handling to improve file writing performance by utilizing asynchronous processing capabilities
refactor the SigInt and SigIntTest classes by modifying method declarations and formatting to improve code readability and consistency across the class definitions
mow - 498 show text box in text tool ( unnecessary update )
- changed default return value of asset # getsafefile ( ) from - 1 to 0
updated the scoring logic in ComputeBenchmark . java to use a new callable and a mapping function to improve code readability and maintainability by reducing magic numbers
added setOnRefreshListener to UploadListFragment to notifyDataSetChanged to ensure the UI reflects the updated data set upon refresh
fix exception on empty file path ( # 8407 )
replaced direct assignments to ` emitters . items ` with direct access to ` emitters ` to improve code readability and maintainability by using getter methods instead of direct assignments
update tomcat engine to be able to support parallel build . also fix a bug in tomcat8 .
updated error message formatting to include a period before the desired file reference to ensure consistency and improve readability of error output
added a check to return early if playback state is not PLAYING to prevent further processing when playback is not playing
replaced the retrieval of the ServiceComponentDesiredStateEntityPK with a direct ID retrieval to simplify the retrieval process and improve code efficiency
refactor Java2TypeScriptTranslator and introduce InnerClassFieldClash with a test for inner class field clashes to enhance functionality and ensure correctness in referencing inner class fields
add configuration for docker log filter ( # 1395 )
replaced direct call to displayChanged with awtUnlock and awtLock for better resource management to ensure thread safety and prevent potential deadlocks during display changes
hhh - 10183 : skip testationalizedScalarquerytest on postgresql 2008
properly close input stream in ziphelper , see bugzilla 48571
make storeclassfile ( ) public so that it can be use by other client .
updated assertions in SingletonSortedSetDocValues and added a new test class TestSortedSetDocValues to ensure correct handling of missing values and improve test coverage
[ gr - 3885 ] clean up invalid port error message in cgi
added additional line ending conditions to the LineReaderImpl class to ensure proper handling of additional line structures
replaced List < String > with Set < String > for hashCodes and related variables in multiple classes to improve performance and ensure uniqueness of source code hashes
android renderer : fix issue where an ogre3d mesh have no vertex
updated test methods and added handling for verification order errors to improve error reporting and ensure correct behavior of mock interactions
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` for folder creation to ensure correct handling of folder creation during delete operations
remove unnecessary import that break the build
updated JsonObject class to improve data handling to enhance performance and maintainability of JSON operations
updated idle time comparison logic in SelectChannelEndPoint . java and added a condition in HttpConnection . java to ensure correct idle time handling and avoid unnecessary resource fetching
fix farmlandblock . cansustainplant use local variable instead of state
added support for multi - tenant primary keys in the database schema to enhance functionality and ensure correctness of key retrieval in the database
updated date formatting in HttpCookie to use Locale . US to ensure consistent date formatting across different locales
removed multiple redundant duplicate close calls of the database connection to optimize resource management and improve code readability
increase wait interval for message to be process in a test .
[ gr - economy ] provide more information when allocate stage be use with tracera .
fix : double - click to save database during search
modified ObjectMapper initialization to use a static block and added system property for line separator to ensure consistent JSON processing across different operating systems
fix window path on window in cygwin
refactor test classes to consolidate Application initialization in BaseTest and remove redundant references to improve code maintainability and ensure proper resource management during tests
[ java ] remove redundant validation of record log that have be add in the archive .
chore : use errorgroupname instead of groupname in it system test ( # 759 )
test : remove superfluous ci failure relate to http : / / github . com / h2 / h2 / issues / 1034
fix issue when reverse image preference be disable ( # 5489 )
updated string comparison methods from ` equals ( ) ` to ` equals ( ) ` for string comparison to improve code readability and avoid potential null pointer exceptions
[ triple ] fix match link to npe ( # 9221 )
updated test class imports and method visibility from ` org . junit . Before ` to ` org . junit . jupiter . api ` to improve test structure and compatibility with the latest JUnit framework
refactor SetTypes to use a dynamic list initialization with a constant COUNT and streamline type retrieval to improve performance and reduce memory usage
refactor methods in TypeUtil for improved readability to enhance maintainability and ease of understanding for future developers
updated the way triggerTime is formatted by using LocalDateTime and TimeZone to ensure accurate time zone handling for alert dates
added a method to handle AbstractMethodError during method invocation to improve error handling by providing a more structured way to manage method invocations
camel - 5344 : simple language now support $ { body } and $ { xxx } .
remove unnecessary check for empty toExplore in AbstractParser . java to streamline code logic for better readability and performance
camel - 8905 : fix a problem with camel - jclouds
remove the @ ignore annotation from camelconsultest .
added a check for the ACC _ STRICT flag on a default method in Check . java and created a new test class CheckACC _ STRICTFlagOnDefaultMethodTest . java to ensure compliance with Java ' s specified access flags and provide clearer error messages when methods have the ACC _ STRICT access flag
[ java ] add driver timeout to aeron connect in channelvalidationtest .
added a new file ` FileExtensions . java ` with constants for language - specific file extensions to provide a centralized mechanism for managing file extensions and their corresponding headers
replace custom ThreadLocalDateFormat with a static final instance of ISO8601CanonicalDateFormat to simplify date format initialization and improve thread safety
8182235 : deprecate the option vm . options . fasttlabrefill , the value of usecgroupmemorylimitforheap be set to true
added displayName property and updated related classes for configuration to enhance the display of client properties in the CAS server setup
added EarlyTerminationException to multiple operator classes and replaced RuntimeException with a new exception class to provide a more specific exception handling for early termination scenarios
removed redundant whitespace in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
added jmx support for request / response . jm - 1034
fix a npe in the forge event factory , when there be no cap
removed KeyCrypterException from the catch block to simplify error handling by focusing on essential exceptions
deprecated the ` SubmitOrderedCompletionService ` class in ` AsyncCompletionService ` and marked it as deprecated to indicate that the class should no longer be used in future development
adjust the length calculation in HyphenationTree . java to ensure the length is correctly updated during hyphenation
make sure to wait for user input before post a connection to create an iq connection .
move service so that it be available only from the bundle in a bundle .
updated the description of PARAMETER _ NEEDS _ TO _ BE _ NAMED for query parameters in ParameterBinder . java to clarify the need for parameter names in Java 8 and improve user understanding
added a boolean flag providersChanged to ConfigurationManager . java and initialized it to false to reset provider state after loading configuration
added a method to store and format quoted tokens in the Hive lexer to ensure proper handling of quoted tokens when using Hive query parameters
pdfbox - 5339 : avoid npe if no name entry for postscript in font
removed unnecessary type casting and improved code clarity in SolrResourceLoader to enhance type safety and reduce unchecked cast warnings
modify hit condition in Window . java to check if the current actor is not null before proceeding to improve the accuracy of hit detection within the window ' s parent area
added a null check for appManifest before retrieving the targetSdkVersion to avoid potential NullPointerException when appManifest is null
updated the ` ConfigurationMetadataGenerator ` and ` CasConfigurationMetadataCatalog ` classes to streamline configuration handling and improve code readability to enhance maintainability and simplify the metadata generation process
added userName parameter to Driver and related classes to enable tracking of user identification in the query processing context
add method to xsltbuilder for set the transformer source and inputstream .
added HadoopShim initialization to ContainerRunnerImpl and TaskRunnerCallable classes to utilize the Hadoop shim for improved Hadoop compatibility
updated URI handling in tests and removed redundant variables to streamline code for better readability and maintainability
fix npe on servlet side even if no mapping be available
modify the logging behavior in ThroughputLogger to return early if startTime is zero and update message formatting to include the total message received to improve performance by avoiding unnecessary logging and clarify the message details
8305750 : update update . dont use system . getproperty ( ` ` java . vm . version ' ' ) when debug build be disable
refactored statistics management by replacing MeterStatisticsManager . statisticsOperationMap . clear ( ) with a new map implementation to enhance code clarity and maintainability by consolidating metrics handling
fix ( logback ) : resolve system property for configuration
added null checks using ` javax . validation . constraints ` across multiple classes to ensure that required fields are not null and improve code clarity
replace BASH _ ESCAPER with SHELL _ ESCAPER in multiple files to update the command handling mechanism to support shell command execution on Windows environments
fix httpwaitstrategytest . testwaituntilreadyandtimeout with try with resource
updated the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to reflect the correct functionality and ensure it operates with recent changes
corrected the closing brace formatting in RelativeDateFormatTests . java to ensure consistent code styling and improve readability
added a method to generate a shield address in the RpcApiService class to enable the shield address generation process within the RPC API
changed the return type of readConsoleInput ( ) methods from byte [ ] to String and updated related implementations to improve consistency by returning an empty string instead of byte array representation
updated regex patterns and variable declaration for sRunFlavor in TestStabilityRule . java to improve pattern matching accuracy and ensure consistent run flavor assignment
added a condition to limit fragments for multi - valued fields in DefaultSolrHighlighter . java to ensure that the highlighter behaves correctly for multi - valued fields when the number of values is available
updated the tryToLogin method to accept credentials and return the result of the tryToLogin method to enhance functionality by allowing authentication with credentials and determining exit status
fix cherry pick issue from drown
minor clean - up . no functional change .
removed wrapCollection method from update method in DefaultSqlSession to simplify the update process by eliminating unnecessary collection wrapping
added logging for unknown currencies in BTCEAdapters . java to improve error handling and provide better logging for currency - related issues
do n ' t create a new one for each subscription when it ' s create
pdfbox - 4892 : adjust default value , a suggest by valerybokov
fix the build and add test for broker - tenant and server - tenant
simplified the return statement in HasSettings . java by directly casting the response value to a map to improve code readability and reduce unnecessary complexity
added a check for non - empty ` attrs ` before validating the size of elements in ` attrs ` to ensure that the size of ` attrs ` is not less than or equal to 4096
added methods to retrieve project JDK name , type , and language level in AbstractIjProjectConfig to enhance flexibility and clarity in managing project configurations
corrected a typo in the log message from " Experimenal " to " Experimental " to enhance clarity and maintain consistency in messaging
added a new test method to verify the resolution of ACLs based on user details to improve test coverage and ensure correct functionality for handling user details in ACLs
avoid create an illegalaccessexception by use the solvejavaparser ' s constructor instead of the new sourceloader
added button count and support configuration to XToolkit to ensure buttons are always available for better user experience
updated import statement for assertion methods from ` jdk . testlibrary ` to ` com . oracle . java . testlibrary ` to ensure compatibility with the updated test library structure
add a MessagePackFactory class and refactored MessagePack . java to use it for creating MessagePacker instances to improve code organization and facilitate structured message packing
add is _ desert and is _ cave tag to tag provider ( # 1349 )
changed method names from ` present ` to ` draw ` in multiple screen classes to improve clarity and consistency in the API design
added condition checks for horizontal and refined layout initialization in ComponentGroup . java to ensure proper layout behavior based on horizontal orientation and facilitate UI updates for toggle buttons
removed redundant URL pattern matcher check in DOIServiceImpl . java to simplify matching logic for old URL forms
fix androidinput . hasmultitouch ( ) for multitouch only on android .
[ java ] remove unnecessary volatile from clustered service agent and move commit position check into close ( ) to reduce boilerplate code
fix : add example - records for query bean @ idclass
added URL parsing logic to handle default port retrieval in HttpConverterRegistrar to improve robustness and error handling for invalid addresses in the application
bug 9452 : listcapacity - when the host > 200 the host _ id and storage _ pool _ id start colliding , to workaround that also compart the capacity type .
replaced the method of opening input with file length in NRTCachingDirectory . java to improve file handling by utilizing the correct method for file length
lucene - 9068 : remove lucene internal compile method from the lucene compiler ( # 2354 )
removed synchronization from the store method in UISettings to improve performance by reducing unnecessary synchronization
added a conditional check to return early if native text input is enabled and changed the access modifier of the fireDataChanged method to public to improve input handling and enhance method accessibility for better visibility
add one more test for spannerio to cover both concurrent and one - transaction error
replaced explicit generic types with the diamond operator in various Java files to improve code readability and reduce redundancy in type declarations
updated the handling of short arrays in ObjectInputStream and added a new CloneArray class for testing to ensure correct serialization behavior for short arrays in ObjectInputStream
updated nonce handling methods in OIDCAuthenticationFilter . java to improve clarity and consistency to enhance code readability and ensure appropriate logging behavior during ID token replay attack detection
apply patch from oliver jowett to deal with the new edge case
added capability for server logan management and updated logging messages to enhance user experience by providing clearer feedback on capabilities
updated conditional statement to handle menu item selection correctly to ensure correct drawable tinting based on menu index
updated test execution to use ` System . out ` and added assumptions for network connection and exception handling to improve test output clarity and ensure the test operates without exceptions
added a check for empty symbols in missingSymbolsHandler to prevent further processing when there are no symbols to process
updated string concatenation in StringHelperTest . java to improve clarity and formatting of output data
added warning log for empty data provider returned to improve visibility and debugging when the data provider is empty
( chore ) camel - karaf : replace usage of collections . empty _ list by collections . emptylist ( )
fix : set correct style for selection style if not in applet
- fix typo in physicsrigidbody method
added a new file AutoFtpActivity . java to implement an FTP test activity to facilitate FTP functionality within the application
refactor token handling in BaseSemanticAnalyzer for better readability to improve code clarity and ensure correct unescaping of string literals
added methods to retrieve and set component state in various classes to improve flexibility and functionality for managing component state
added a new class RemoteExecutionEnabled for handling remote execution settings to implement a custom exception handling mechanism for disabled remote execution
pdfbox - 4892 : fix typo find by codespell on fossies . org
updated file reading method to use UTF - 8 encoding for improved compatibility to ensure proper handling of character encoding in file input streams
assert workingscore from scratch do not stale ` ` workscore ' ' when assertion be enable .
updated SEMIJOIN _ CONVERSION configuration to use " hive . optimize . semijoin . conversion " instead of " hive . enable . semijoin . conversion " to clarify the purpose of the configuration for semi - joins
add debug logging to datagrampacketbytebufferdecoder , datagrampacketbytebufferencoder , datagrampacket objectencoder and remove registration of the byte [ ] instance .
replaced ` removeFile ` with ` removeDirectory ` and updated related logic in ` FileDisplayActivity . java ` to improve directory removal handling and enhance synchronization logic for the current folder
added assertion to verify that the transaction hash is present and the transaction hash is correctly validated to ensure that the transaction hash is correctly populated and not null after processing
deprecate and fix broken test ( # 5496 )
throw illegalargumentexception when try to set a null samplemimetype
replace instances of ` this . notify ( ) ` and ` this . wait ( ) ` with ` notifyAll ( ) ` and ` lock . notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc23PoolingDataSource . java ` to improve clarity and consistency in notification handling
updated the @ AllArgsConstructor annotation to include a onConstructor parameter to improve flexibility in initializing the JSON object initializer based on the specified mode
added a check for SQLFeatureNotSupportedException when creating an index on a view to ensure that the system properly handles operations on unsupported table types
added a new class Website with methods for name , URL , and URI in PopulatorImplTest to implement a specific functionality for managing Java net types in the Populator
set default locale to ' en ' for bsformattertest .
add a check to the der plist in the coremodmanager . init ( ) . this should help debug problem with miss jar file .
updated the assertion in MultiPartParsingTest to use Matchers for exact match to improve accuracy in summing matches against case - insensitive values
added checks for parameter ' s isSingle ( ) and type checking before adding it toassedLocal to ensure proper handling of parameters that are a scalar expression
added a volatile boolean field ` createdVertx ` to track if the Vert . x instance is created to ensure that the vertx is only created once to avoid potential null reference errors
usermodel : fix npe in attribute writer when user be null
updated log messages to indicate synchronization state instead of synchronating to improve clarity in log messages for better debugging
added a read status flag to the Entries class and updated related components to reflect this change to improve handling of unread entries in the request
replaced ` MavenTestingUtils . getTargetDir ( ) . toURI ( ) ` with ` MavenPaths . targetDir ( ) ` for resource resolution in multiple test classes to standardize the resource path management and improve code readability
[ type : refactor ] optimize the availability and processing of register data ( # 4367 )
modified the playback state check to exclude paused sounds when determining if a sound is playing to ensure that playback is not triggered when the sound is pinned
added a new permission _ admin _ SUDO _ AREA constant to the permission checks in MainCommand . java and added a new permission in Captions . java to enhance permission handling for admin spending operations
replaced ImmutableMap with a HashMap for query options and introduced a new method to update query options dynamically to enhance traceability and simplify query options management
simplified path comparison in ReloadableJava11ParserInputFileObject and ReloadableJava17ParserInputFileObject to improve clarity and maintain consistency in URI handling
refactor assertions in ResourcesTest to use intermediate variables for emoji and text to improve code readability and maintainability by reducing duplication
8072301 : [ testbug ] test java / awt / base / nmt / whitebox . java fail due to miss method
[ flink - 30913 ] [ serializer ] migrate javaeitherserializersnapshot to javaeitherserializersnapshot for general use
updated AddressResolverOptions to use a new default addresses resolver option and refactored related code in AddressResolver to improve configurability and maintainability by centralizing option handling
added a call to ` super . __ associate ( context ) ` in ` RequestRockerTemplate ` and created a test for it in ` RequestRockerTemplateTest ` to ensure proper initialization of the ` DefaultRockerTemplate ` during association
pdfbox - 2852 : return an empty string instead of null when detect non - terminal field
updated references from " liquibase / parser / xml / dbchangelog " to " www . liquibase . org / xml / ns / dbchangelog " across multiple files to ensure consistency in XML namespace usage across the project
[ gr - 26684 ] move commondatatatypelocator to test package for consistency with other test .
feat : set default value for repositoryversionstate to not _ required ( # 8461 )
updated the comparison method to include additional schema comparison details to enhance comparison accuracy by associating catalog and schema with specific differences
updated import statements from JUnit to TestNG in TestBackwardAnoamlyFunctionUtils . java to leverage TestNG ' s testing framework for improved testing capabilities
added a new file ProgressiveJPEGTest . java to implement a progressive JPEG testing framework to provide a basic example of how to render progressively on the application
fix crash in materialloader due to change in alpha
make window native - toolchain target architecture error more user - friendly
added a null and empty check before setting the setSize for the label to avoid potential null or empty text when setting the size
convert variable integer to integer in relation to ensure proper handling of variable integer values within the range of 1 , 000 000
[ core ] prevent singleton with the constructor of pushutils
remove unnecessary check for empty ( zero ) bound in rocket panel
removed unnecessary cast to MockDirectoryWrapper when setting enableVirusScanner to simplify code and improve readability
updated the pattern for loading presets from " . * " to " ( ? i ) . * " in the componentPresetDao . load method to ensure compatibility with different input formats when loading presets
added conditional checks for duration and updated drawable array handling to improve accessibility announcement and ensure compatibility with different Android SDK versions
replaced Args . getInstance ( ) . getMyKey ( ) with RefreshTask . getNodeId ( ) in NodeManager . java to utilize the RefreshTask class for node identification
add test to ensure that pmd - task work only on jdk 1.3 +
[ te ] remove mockito usage in quotaresponsebuilderimpltest ( # 5345 )
added custom output and error streams for System . err and PrintStream in TestSchemaToolCatalogOps . java to improve error handling and maintainability of the code
flume - 1979 : clear dfsclient when close sasl
updated MongoQueryMethod and related classes to accept RepositoryMetadata as a parameter to enhance query handling by allowing metadata - based contextual information
add wrapper to allow replace property source in tomcat
phoenix - 4957 update pom . xml and remove unused import .
updated ALLOWED _ REPEATED _ DEADLOCKS value from 5 to 10 and added deadlock retrying logic to improve transaction management and prevent interference with new transactions
changed variable name from ' xl ' to ' xAxis ' for consistency and clarity to improve code readability and maintainability
added methods to validate and validate printable characters in FsUtils . java to improve handling of special characters and enhance system compatibility
refactor ( driver ) : rename ' in ' method to ' use ' because selenide . in ' be deprecate .
o delayed injection of plugin default configuration until the project be actually execute to allow for plugin resolution from the
[ fix ] issue 847 , byte instead of short .
test : fix itystemtest to pass on window
guacamole - 524 : get the remote host from the authenticateduser object , if any .
fix for ds - 22 and ds - 2369 , show the admin button if you try to access the list of user
update compact thread name to include counter to reduce CPU usage
update package name retrieval from application context to resource to ensure compatibility with different resource management frameworks
updated method to retrieve players in a plot ' s visibility context to improve code clarity and ensure only visible players are considered in the plot
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity files to improve code organization and maintainability
refactor MlibOpsTest to improve test clarity and organization to enhance maintainability and readability of the test cases
add warn about out of order native image .
changed reference container attribute from " referencedContainer " to " referencedContainer " in SchemeGenerator . java and added a new test for buildable reference properties in SchemeGeneratorTest . java to ensure correct handling of referenced containers and validate the expected properties during buildable reference generation
remove unnecessary encoding logic for file key and IV in UploadFileOperation . java to simplify code and improve maintainability
added @ Stability annotation to WorkProfileTest . java for specific flavors to improve test stability regarding platform - specific profiles
remove check for bucketing version in TezCompiler . java to streamline code logic to focus solely on the bucket version
updated method call to use the input object for setting cursor position to improve clarity by explicitly referencing the input object
refactored LockFreeBucket to extend LockFreeBucketContendedTimeMeter and added a new class LockFreeBucket _ FinalFields _ CacheLinePadding to improve extensibility and organization of bucket management in the codebase
add info to print the thread pool stats . patch by jbellis
updated maximum bitrate retrieval to use user preferences for maximum bitrate to ensure the correct bitrate is updated based on user preferences
updated ZipkinHttpSpanExtractor and added new utility methods for handling trace and span IDs to improve code clarity and ensure proper handling of span debugging conditions
refactor : move getuserpaymentAccounts ( ) method into be the abstract class
fix an npe from fluttercompletioncontributor ( # 5443 ) . ( # 5462 )
fix a bug where project name be not set when load the default image
updated JsBundle and related classes to use ProjectFilesystem for improved path handling to enhance build process by allowing the use of project - specific root paths
updated multiple Java files related to envelope and databinding functionality to enhance code organization and improve maintainability of the data handling components
fix incorrect doc for metricsDSLcontext ( # 2150 )
removed the implementation of VersionBuckConfig and modified entries handling in VersionBuckConfig . java to simplify the code structure and improve performance by utilizing ImmutableSet
added a try - catch block around the bindShadowClass method call in Robolectric . java to handle potential TypeNotPresentException gracefully during shadow class binding
adjusts grammar to make error message more descriptive
fix : update gapic - generator - java with mock service generation fix ( # 959 )
added SLF4J logger imports to SimulationStatus . java to enable structured logging capabilities for simulation status updates
updated VERSION _ POSITION _ Y and VERSION _ FONT to use 150 and changed font size to improve layout consistency and accommodate new font properties
replaced direct addition of notifications in UserInterfaceComponentImpl with runLater call to ensure notifications are added on the UI thread to maintain thread safety
updated the implementation of ` ReturnsElementsOf ` to include new test cases to improve test coverage and ensure correct behavior of the mock functionality
fix typo in error message of drop partition command
add a test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to validate the functionality of stored fields in line - file documents
added a method to get the version code from the MainApp class and updated relevant references in FeatureList and WhatsNewActivity to improve version checking and ensure consistency in data handling throughout the application
fix for http : / / issues . apache . org / jira / browse / amq - 4213 - beancomponent should support methodinvocations with type string
updated method calls from ` getContentDispositionFilename ( ) ` to ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamTest . java ` to ensure consistency in naming conventions within the test cases
added a boolean flag ` bufferOwned ` and modified buffer disposal logic in both ` IndexBufferObject ` and ` VertexBufferObjectWithVAO ` to manage buffer ownership to improve buffer management and ensure proper handling of buffer properties during object initialization
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through the login form
chore : integrate new gapic - generator - java and rules _ gapic ( # 377 )
int - 772 : consoleoutboundmessageadapterparser no longer depend on the class .
updated print statements to use consistent variable names and simplified return statements in multiple test files to improve code readability and maintainability
fix arrayindexoutofboundsexception in stringutf
added a deprecated annotation to the ` GenericContainer ` class and implemented custom command hooks in ` GenericContainerRule ` to improve code maintainability and allow for future customization of container creation commands
changed log level from info to error in MediaInfo . java and refactored test methods in RendererConfigurationTest . java to improve error handling and simplify configuration loading
added support for a schemapattern option in the BundledDriverDatabaseConnector to enhance database connection configuration flexibility
return empty byte array for null id in ProvSSLSessionImpl . java to ensure correct handling of null values in session ID
refactor ratio calculations and bitmap creation logic in AndroidGraphics . java to improve clarity and maintainability of bitmap creation logic
update Base64 . java file to enhance encoding / decoding functionality to improve data integrity and performance
[ gr - 29514 ] use explicit assumption when look up fallback in llvm .
jasonleyba : suppress more test on the iphone for unimplemented feature .
refactor FlowBuilder and FlowJobBuilderTests for improved clarity to enhance code maintainability and readability
replaced ` ResName ` with ` int ` for resource identification in ` AttributeResource ` and removed the ` ResName ` class to simplify the code and improve performance by using a primitive resource ID instead of a wrapper class
fix # 1741 : always resolve docker tl file when use tl
fix test that occasionally fail on window
modified conditional handling in ` ppp Attr . java ` and added a new class ` T6450290 . java ` with generic class definitions to improve type safety and clarify the intended use of type variables in the type system
[ java ] add option to set default logging level ( # 6445 )
added logging statements for package removal and refactored deleteItemsFromDatabase method to use Collection instead of Iterable to improve debugging and performance of item management in the application
added ` allFilesOption ` method to ` FileActivity ` , ` FileDisplayActivity ` , and overridden it in ` PreviewImageActivity ` to standardize file handling across activities and improve user experience
add new backwards compatibility method for backwards compatibility
modify the calculation of numPredictiveAppCols to be conditional on phone device to ensure that numPredictiveAppCols is set correctly based on device type
updated the initialization of the value variable to use UTF - 8 encoding to ensure proper handling of text encoding in the application
added a new RequestMatchers class and corresponding tests for validating request matchers to enhance request matching functionality and ensure correctness through unit testing
mow - 169 fix problem with click on input box after drag drag
adjust position calculations in the ProgressBar to account for background height and width adjustments to ensure correct rendering of the knob position relative to updated dimensions
[ native ] fix the path to json - based function definition for nativefunctions
made fields final and updated the permuteArgs method to use it to improve immutability and ensure consistency in argument handling
added a condition to check if the handler is invalidated during gesture state checks to ensure that the handler does not process gestures when in an invalidated state
updated layout conditions and metrics calculations in CellLayout and Workspace classes to improve layout handling for different screen orientations and enhance metrics accuracy
added a condition to check if the redir file is " / robots . txt " in the conditional statement to ensure that the redir URL matches the expected file format
remove reference to ` ` . java ' ' ( replace ` ` . java ' ' by ` ` . java ' ' ) .
updated subscription methods in AdvancedGameSetupScreen to use " createWorld " and " return " instead of " continue " to improve user experience by providing a more relevant game design
updated UDFOPDivide to handle zero values in null checks and added unit tests for it to ensure correct handling of zero values in UDF calculations and verify functionality through unit testing
updated formatting and structure in FlowJob . java for consistency and clarity to improve code readability and maintainability
updated bean definitions in FormLoginBeanDefinitionParser and LogoutBeanDefinitionParser to use construction for FilterProcessUrlRequestMatcher to streamline bean definition management and improve maintainability
added onDestroy method to ShareActivity and ContributionsActivity to ensure proper resource cleanup when the activity is destroyed
updated variable names from ` thumbNail ` to ` thumbnail ` for clarity to improve code readability and maintain consistency in variable naming
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
[ ratisconsensus ] fix request timeout problem ( # 8963 )
fix ( iotdb - client ) : remove exception in resourcemanager ' s lifecycle ( # 6179 )
added system property configuration to the MavenModuleLoader to ensure that the model source is set correctly for better module loading behavior
added metrics for measuring readiness status in multiple classes to enhance monitoring capabilities for health checks and improve code clarity
fix not to break animation torch in the client
added null check before closing the writer resource to prevent potential NullPointerException when closing the writer
refactor HiveConf initialization to use UtilsForTest for dynamic configuration paths to enhance flexibility in accessing Hive configuration settings during testing
added a new link " Muting Users " to the FeaturesActivity to provide users and provide access to the most recent features
added initialization for jdk . reflect . useDirectMethodHandle to disable direct method handle support to improve performance by eliminating unnecessary method handle overhead
hbase - 22589 replace constantizeregionsplitpolicy with steppingsplitpolicy ( # 4844 )
[ flink - 6022 ] [ yarn ] fix invalid path exception in archive deployment with lib folder
updated method calls in BuildTranscriptHMM and TrainerDictionary for better encapsulation to improve code clarity and maintainability by using consistent method calls
remove the redundant newline characters from JSON string construction to ensure the correct formatting of the output for better readability
added an extra key for tweet ID in TimeLineCursorAdapter and TimelineArrayAdapter to store the tweet ID for further processing
print a warning to help track down intermittent failure
do n ' t wrap and re - throw an ioexception if we ca n ' t analyze class
replaced ` Key ` import with ` PublicKey ` import in ` KeyFetcher . java ` to utilize a more secure key management approach
replaced the ` isIncompatible ` variable with a new boolean variable ` isIncompatible ` to ensure the resource is marked as compatible by default
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` to improve clarity on the specific functionality related to account creation
pdfbox - 2852 : check for size of array to avoid nullpointerexception
resolve http : / / issues . apache . org / activemq / browse / amq - 2840 - do n ' t set original exception cause in messageconsumerredeliverytest
enable off - heap format by default ( # 1437 )
modify title handling in FeedUpdateService to ensure a maximum length for the title to improve user experience by ensuring the title does not exceed database limitations
updated JColorChooser and BasicColorChooserUI to initialize the preview panel before reassigning it to improve code reliability and ensure the preview panel is properly initialized before redrawing
changed log level from info to debug for extension checking messages to reduce log verbosity and improve performance during extension scanning
check that bitmapFactoryOptions . inBitmap is not null before setting it to avoid potential null pointer exceptions when decoding bitmap
added a new import and a method to retrieve layout parameters in FakeView . java to facilitate access to layout parameters for testing purposes
add check for whether the cursor be already close to avoid illegalstateexception
pdfbox - 5599 : fix regression in pdfpagedestination when kids and page dictionary be n ' t present
( chore ) camel - jms : disable failing test
add message . ts field to allow multiple message with same timestamp
add some utility class for good logging ( # 3075 )
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
fixes broken request hint when query with legacy params
replaced public classes with package - private imports for several test classes to enhance encapsulation and restrict access to these test classes
refactor CSRF token setting into a separate method called setCSRF to improve code organization and reusability
fix lombok warn about lombok bootstrap when load class
added support for numeric disabled flag in sheet listener to enable accurate parsing and reporting of numeric values in data files
hive - 25391 : fix hiveconf default value log ( # 2201 ) ( # 2201 )
added null checks and polled controllers management in Lwjgl3Controller and Lwjgl3ControllerManager to improve stability and prevent resource leaks when controllers are already active
updated ObjectFactory import statements from ` cucumber . api . java ` to ` io . cucumber . core . backend . ObjectFactory ` to align code with the latest Cucumber library structure
refactor code to retrieve HostDatabase before saving port forward information to improve null safety and ensure accurate exception handling during port forwarding saving
added a method to determine if Liquibase snapshot data should be enabled based on configuration settings to enable users to choose whether the snapshot data should be generated based on configuration settings
added a null check for the synced folder before scheduling a job to avoid potential null pointer exceptions when the job fails to start correctly
refactor LocationMarshaller class methods for improved clarity to enhance maintainability and readability of the code
simplify gesture detection logic for trackpad interactions to improve code readability and maintainability by consolidating conditions
hive - 12699 : llap : remove vectorreaderimpl from it ( prasanth jayachandran review by gopal v )
updated import statements to use org . mockito . Matchers instead of org . mockito . ArgumentMatchers to improve code consistency and maintainability by using the updated Matchers class
updated path handling methods to use ` getRelativePath ( ) ` instead of ` getRelativePathName ( ) ` to simplify the path path retrieval process and improve code clarity
updated the ` completeMapAndTransformRow ` method to use ` RecordReaderFileConfig ` instead of ` RecordReader ` to improve code clarity by centralizing the configuration of record readers
fix argument extractor to only deal with specialized extractor , and fallback to original extractor
cloudstack - 9685 : bump vol describe api to use resource _ limit table for account and domain
fix not be able to shift the inventory effect ( # 6215 )
deprecate ` cold _ reads _ to _ omit ` option and remove it from uncheckedOptions
added a call to stop the leech service to ensure proper resource management and prevent memory leaks
[ issue # 5896 ] remove duplicate if statement in popmessageprocessor ( # 5997 )
renamed KeyboardAddonSettingsFragment . java to follow naming conventions to improve code readability and maintainability
replaced the ` @ Test ` annotation with an ` @ Ignore ` annotation in ` ShadowDateUtilsTest . java ` to mark the test as ignored due to its pending implementation
polish ` ` avoid hold eventloopgroup ' '
added UpgradeRequest and UpgradeResponse handling in UpgradeConnection and created a test for UpgradeRequest and UpgradeResponse to improve handling of upgrade requests and validate websocket upgrade functionality
added connection timeout support to the AndroidImplementation class to enhance network connection management and allow customization of timeout behavior
fix nullpointerexception when get user / team permission for a repository
added a test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure proper parsing and deparsing of SQL statements involving ` CastExpression `
fix test that fail on window due to the ` ` can not read ' ' permission
added logging for executor groups and refactored executor selection logic to improve debugging and maintainability of executor management
added null checks for field before checking for " catalogname " to prevent potential NullPointerExceptions during field validation
updated event listener class references from ` CasEventListener ` to ` RegisteredBean ` to ensure compatibility with the latest framework structure and improve event handling consistency
refactored the animation end handling into a separate method called endAnimation ( ) to improve code readability and reusability
avoid leak file descriptor when write to a regionfile ( # 1568 )
add a new file ` gsp001 . java ` that includes native methods for system property retrieval to facilitate testing of system property access in the JVMTI framework
fix # 2890 : @ injecteop now properly handle nullable bean .
* jme3 export : add cameracontrol and lightnode schema to the jme3 exporter
refactor PopupNotificationPanel to utilize SwingUtilities for window ancestor retrieval to improve code readability and maintainability by reducing redundancy
7187104 : inference cleanup : remove redundant exception class in infer . java
added a method to retrieve the feature value from the FeatureField class to provide access to the feature value for external use and improve data encapsulation
changed the parameter type of the after method from int to long to improve method flexibility by accommodating larger time values
added onBuild and onBuild properties to ContainerConfig and Info classes to enable better handling and configuration of the build status
modified the icon rendering logic in Toolbar . java and FlowLayout . java to differentiate between rtl and regular layouts to enhance visual consistency and user experience based on the layout direction
added functionality to enable position increments when creating the StopFilter to allow customization of the stop processing behavior
refactor InternetAddress initialization in EmailsTest and SystemErrorEmailReportTest to use a dedicated InternetAddress class to improve code maintainability and facilitate easier testing of email addresses
added a new boolean variable mTryShareAgain and initialized it to false to prevent attempting to share a file while managing potential conflicts
use tty name if it be available in the local classpath
refactor byte size calculation in BandwidthProcessor . java for improved clarity and consistency to enhance code maintainability and ensure correct byte size handling based on dynamic properties
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests . java to improve test stability and allow for asynchronous task completion
add easee bind url for server side ( # 4193 )
[ beam - 13430 ] [ kafka ] increase default read timeout to 3 second ( # 16788 )
refactor matchers to simplify matching logic in SearchResultMatcher . java to improve readability and maintainability of the code
added SSL trust mechanisms and modified import statements in OkHttp . java to enhance security by trusting all certificates for testing purposes
refactor long click handling in navigation buttons to improve clarity and organization to enhance maintainability and ensure correct behavior when dealing with different button types
added a new file HyperlinkFormula . java and modified StringPtg . java to update field length handling to improve modularity and correctness of string extraction from Excel sheets
initialized ` stdout ` and ` stderr ` with optional values and added null check for working directory to improve handling of optional values and prevent potential null pointer exceptions
increase asyncappendertest timeout from 1 second to 2000 second
updated the escapeDatabaseObject method parameters and their usage to accommodate variable naming to improve the clarity and correctness of database object escaping logic
add inputchanged flag in MaterialRenameDialog . java for condition checking card title to improve validation logic for input fields based on card title
added state change functionality to ShadowDisplay and corresponding test in ShadowDisplayTest to ensure state changes work correctly for different display states
[ geos - 7930 ] make directinvocationservice optional and handle exception more robust
apps - 978 fix symbolic asymmetry for x and y ( gwt )
fix : add pg _ catalog . pg _ dependency dependency ( # 792 )
[ hotfix ] [ runtime ] add nullable to message in queuechannel
modified the ` getPathsFromResource ` method to throw ` URISyntaxException ` and updated URI creation for file paths to improve error handling and ensure accurate URI formatting for resource paths
added support for monitoring Jenkins nodes in the CollectorServer to enhance the application ' s ability to collect data based on Jenkins applications
modify header processing logic to use a resolution method to ensure correct handling of disabled and default values based on the element ' s context
refactor error handling and logging in ProtobufLogReader . java to improve clarity and maintainability to enhance code readability and provide clearer feedback on seeking behavior during eof scenarios
nacos registry close on shutdown ( # 11843 )
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to use a dedicated method for version handling to improve code clarity and maintainability by centralizing status code logic
formatted the ` AuditEvent ` and ` AuditEventTests ` classes for better readability to improve code clarity and ensure consistent formatting for better maintainability
added checks for FLOAT _ ROUNDING _ ERROR before returning 0 in Interpolation . java to ensure that infinite recursion does not lead to incorrect rounding behavior
fix default path for world editor default ( # 6301 )
refactor the way the dx executable is added to the builder to improve code readability and maintainability by storing the result of the build process
added multiple assertions to check the equality of PointRangeQuery instances to ensure correctness of point position comparisons and improve test coverage
hbase - 27113 fix the testhfilecleaner issue on window ( # 4897 )
updated file label setting logic in ReceiveFileConversationComponent . java to ensure the filename is displayed only when the download file is not the same name to improve user experience by providing context - specific file selection
remove throw jce from jce constructor ( # 388 )
[ flink - 11543 ] [ runtime ] enable chaining by default for rowtimeminibatchassginer
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ( ) ` instead of ` RegExpBasedFilterInvocationDefinitionMap ( ) ` and added new test for regular expression parsing in ` FilterInvocationDefinitionSourceEditorTests ` to enhance URL parsing functionality and ensure correct behavior with regular expressions
fix size of the query map in hmap ( # 1045 )
added a new HashMap for G _ SCH _ B in HybridPlotWorld . java to store game state for further processing
added a check for empty fields and updated method identification logic in GroovyEngine . java to improve handling of empty fields and avoid processing unnecessary identifiers
mob - 825 : make sure color ( ) not draw a slider ( relate to color # 433 )
hive - 2025 : make server connection timeout configurable ( prasanth jayachandran review by sergey shelukhin )
change method name from ` getRenameEmptyFiles ( ) ` to ` isRenameEmptyFiles ( ) ` to improve method clarity and consistency
no effective change - code cleanup - remove unused import
remove joda - time dependency for segment relocator ( # 4894 )
cloudstack - 3788 : fix the build error in createvpccmdbyadmin
updated window alpha calculation to use Math . max for progress tolerance to improve accuracy and avoid potential errors when calculating window alpha
update the schema references from Spring Security 3.2 to 4.0 in SecurityNamespaceHandler . java to ensure compatibility with the latest schema requirements for Spring Security
removed redundant return statement from ProtoSubjectTest . java to simplify test logic and improve readability
camel - 14534 : camel - disruptor - add final modifier to protect field
added a new file TestConfigureUDF . java to test UDF configuration to provide a test implementation for configuring UDFs in a Hive environment
updated LogMessageWaitStrategy to accept wildcard matching in the regex and added parameterized tests for improved functionality to enhance pattern matching accuracy and ensure test coverage for different input scenarios
simplified the retrieval of logger instances by removing unnecessary variable declarations to improve code readability and reduce redundancy
replaced SQL update statements with delete methods in ShardDao and ShardCleaner classes to standardize the deletion process and improve code clarity
added support for Java 17 to the JavaLanguageModule version 17 - preview to enhance compatibility and features of the JavaLanguageModule
make fileappenderresiliencetest more tolerant , add code wait for compression job in timebasedrollingpolicy
[ gr - 29394 ] avoid unnecessary assertion in volatilereadnode when there be no usage of the memory type .
added a method ` getSteps ( ) ` to return an unmodifiable list of steps to enhance encapsulation and prevent unintended modifications of the steps list
removed unused base58 fields from TronJsonRpc and TronJsonRpcImpl classes to streamline error handling and avoid redundant variable assignments
refactor the creation of CurrencyPair to assign it to a variable before checking its existence to improve code readability and maintainability by storing the currency pair in a variable
fix duration in longtasktimer with current value ( fixes # 548 )
# ! [ euphoria - guava ] avoid compute partition by key for hashkey
change handling of host color preference in HostEditorActivity to improve efficiency by directly using CharSequence instead of an array
fix # 1455 change the way the database version be store in the file system property .
limit the number of replies processed in the query loop to a maximum of 50 tweets to ensure that the query does not exceed predefined limits for tweet display
nifi - 7262 : fix unit test which fail on slow machine
fix persistence of tail page for fully acked deleted tail
fix checkstyle issue in server / glowserver . java ( fixes # 722 )
added a new grow method and modified the existing buffer handling logic to improve code organization and ensure proper resizing behavior
added import statement for DataOutputStream in GdxSetup . java to enable proper resource management and output stream functionality
camel - 10560 , add getsubmittedfilename ( ) into partdatasource to retrieve file name specify by the client
added markReadForLoad ( ) method to LauncherFragment . java to enhance functionality by allowing mark reading for loading state
modified the instrumentation methods to handle negative array size exceptions and removed unused failed classes to improve error handling and reduce unnecessary logging during instrumenting
added a method to check if the current partition is a safe operation to prevent OutOfMemoryException when attempting to flush a partitions
updated the handling of segment file names in IndexWriter . java to improve code consistency and maintainability in the indexing process
added a default name ID format when no supported nameFormats are provided to ensure compatibility with systems that do not include name ID formats
change password : do n ' t go back to the original password page on an error
added a semicolon to the end of a block in Deadlock2 . java to ensure proper syntax and prevent potential compilation issues
added getmaxidletime to nioremoteaddress . this be necessary for jmx support in tomcat .
deleted the FontScalingTest . java file which implemented a font size comparison between Metal Look and Feel and the system ' s Look and Feel to eliminate an obsolete test that is no longer relevant to the project ' s requirements
[ rrd4j ] improve validation of filter ( # 15808 )
added checks for negative vector numbers in GenericUDAFComputeStats . java to prevent potential errors when computation statistics are invalid
test : migrate ExecutableRefTest to JUnit 5 framework to improve test structure and maintain compatibility with the latest testing framework
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java to ensure that the view and glassPane are only null when they are not null to avoid potential NullPointerExceptions
camel - 5384 : fixed wiretap eip to support wire expression . thanks to aurelien for patch .
solr - 5907 : change method visibility of collectionadminrequest ' s action to protect
added support for topn planner configuration and validation in the PushLimitToTopN and SystemOptionManager classes to enable or disable top navigation based on user settings
[ java ] remove unused aerondirectoryname variable in archive and driver test .
fixed - batch - ping race condition . # 1794 fix
replaced InputStream with URL for configuration variable URL handling to simplify the code by removing unnecessary byte array manipulation
fix model parameter pass to createloader in case device do not exist ( # 2041 )
added onCreateOptionsMenu method and overridden onMenuItemSelected method in SimulationViewer . java to ensure proper menu handling and selection events are managed within the user interface
pdfbox - 3017 : add comment that a ` ` fail - fast ' ' check
http : / / issues . apache . org / jira / browse / amq - 4213 - add hawtio . dirname system property - allow to override hawtio . home
add handling for empty comments in Space . java to ensure that a single space is returned when there are no comments to whitespace
made several fields volatile in the Dictionary , UserDictionary , BinaryDictionary , ResourceBinaryDictionary , and SQLiteUserDictionaryBase classes to ensure visibility of changes to these fields across multiple dictionary implementations
added printStackTrace ( ) method to Throwable for error handling to improve debugging capabilities by providing stack trace information
make customitemdroptest a integration test
added optional ' ifNotExists ' parameter to multiple classes and methods to provide functionality for conditionally creating partitions only if they do not already exist
fix datainputstream read in nfs secondarystorageresource
[ java ] remove invalid controlrequeststreamid from echekeservicenode and basicauctionclusteredservicenode
[ geot - 6048 ] wfs wfs getcapabilities demo : add support for spatial operator
added import for LuceneTestCase and annotated BasicDistributedZkTest with AwaitFix annotation to address issue SOLR - 2161 that requires a fix
updated condition checks in Http11InputBuffer . java for improved handling of client previews to ensure proper parsing behavior when no client previews are available
[ java ] disable thegress exclusive check in aeron cluster .
hbase - 3776 remove region cache from jobProperties ( srikanth srungarapu )
added methods to track and update the running record count in JSONRecordReader to improve accuracy in tracking the number of records processed
added filtering logic to remove items from mergedItems in CategorizationFragment . java to improve item management by filtering out outdated year ranges
updated drawColor method calls to use the full opacity value of Mode . CLEAR instead of a fixed color value to ensure consistent drawing behavior in the cache canvas
added a check for OpenGL 2.0 availability before using the render method to ensure compatibility with OpenGL 2.0 and avoid illegal state exceptions
ww - 3990 reset the actioncontext after each test
updated method signatures and logic to handle database names in insert and insert operations to improve consistency in database name handling and support for default database names
use connection timeout in unit test , make count final in stubconnection
added multiple assert statements for " approx _ percentile " queries in TestHiveAggregationQueries . java to ensure that the query behaves correctly for various percentile expressions
updated DEFAULT _ IDLE _ TIMEOUT to DEFAULT _ IDLE _ TIMEOUT and introduced new instances for idleTimeout and writeTimeout to ensure consistent timeout handling and simplify connection management logic
replace account name with user ' s platform account name when fetching shares to ensure the shares are associated with the correct user context
refactor type handling and scope ID assignment in Inet6Address . java to improve type safety and avoid potential runtime exceptions
refactor methods in PlaybackControlView to use a new setButtonEnabled method and update visibility logic to improve code clarity and maintainability by standardizing button enabling / disabling logic
updated method signatures and variable assignments in Session and Token classes to improve clarity and consistency in session handling logic
updated method call from ` getTransitiveClasspaths ( ) ` to ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to ensure that the exported class paths are correctly included
[ gr - 27373 ] use exception probability by default for the new feature .
updated the newPlateColor initialization to use color dynamically based on icon type to improve visual consistency for themed icons in the user interface
ticket # 269 : simplify mysqluser init method and remove unused service dependency .
added " centre " alias to the aliases in the Middle . java file to provide an alias for the center component
added DirectUpload class import and injection method to CommonsApplicationComponent to facilitate dependency injection for managing direct uploads
added axis space space to left and right axes in BarChartActivity and updated axis position calculations in BarLineChartBase to improve visual spacing for chart elements and enhance code readability
added additional flavor checks in ` AndroidLibraryDescription . java ` and updated the flavor set in ` JavaLibraryDescription . java ` to enhance flavor compatibility with Java ABI features and improve modular library
add operation event status type to OnlineHubService and initialize services list in CompositeLogService to improve handling of operation events and ensure services list is ready for use
add visibility annotation if method parameter do not have annotation
( chore ) camel - jms : replace some annotation on setup with setup
log classpath in ` SortedArrayStringMapTest . java ` to improve debugging by providing more context about the classpath used
updated documentLoader path handling in PackageResourceLoader . java to ensure correct path separator for Android resource files
[ hotfix ] [ dataset ] remove unnecessary ' this ' keyword from method call
added JUnit Ignore annotation to WorkProfileTest . java to temporarily skip the test due to a known issue ( b / 243855320 )
updated error message formatting to escape percentage to improve readability of error messages by removing AssertJ default String formatting
fixed - jcache . close ( ) method throw unsupportedoperationexception . # 5114
small refactoring in commandcontext to reduce log verbosity
refactor the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code structure to enhance readability and maintainability of the connection setup process
fix disappear attribute value on save ( # 2067 )
[ fix # 10334 ] dismiss the sound uri when thing be not initialize ( # 10348 )
camel - spring - context : fix test which randomly fail on slow ci server
changed log level from info to debug for effect light type logging to provide more granular logging for better troubleshooting
cloudstack - 4910 : make async - job manager thread pool size configurable and add db property to configuration
updated method signatures and import statements in Reporter and ReturnsSmartNulls classes for consistency and clarity to improve code readability and maintainability by standardizing method parameters and error messages
simplified the method signature of ` generate ` by removing unnecessary casting of ` DataFrame ` to improve code clarity and reduce redundancy
update multiple package - info . java files for consistency and clarity to improve code maintainability and readability across multiple packages
add check for empty physicalColumnNames before matching the column name pattern in OrcPageSourceFactory to avoid potential NullPointerException when processing orc files with empty column names
added a method call to mixPlay in the Engine class to handle the mix function input correctly during the processing
renamed JComponent and SynthTextPaneUI classes for consistency to improve code maintainability and readability
simonstewart : try to make the QR code cleaner a bit more by remove double negation
removed unnecessary checks for leadingIncludePaths in PreprocessorDelegate . java to simplify the condition since leadingIncludePaths is not serializable
[ mondrian - 2203 ] fix nullpointerexception in stringtemplate when materialize view fails .
add additional search for ` ` find all ' ' , ` ` find all ' ' , ` ` find all ' '
fix # 778 : ensure defaultaudiosink have a valid sample rate
add reference to xssfname , see bugzilla 49725
updated the calculation of the target variable from 60000 to 90000 to adjust the scaling factor for improved accuracy in scaling calculations
[ geos - 9752 ] fix arrayindexoutofboundsexception in gmlparser
added a new test class ClassPathXmlJobRegistryContextTests for testing job registration to ensure proper functionality of job retrieval in the job registry context
changed mHistoricTimes from float to long in MotionPauseDetector . java to improve precision in time measurements for better analytics
camel - 12320 camel - restlet : deprecate endpoint with advanced option ( # 5620 )
( chore ) camel - log : remove unused method in logendpointbuilderfactory
extracted the metadata handling logic into a new method ` writeChromeTraceMetadataEvent ` to improve code organization and maintainability by encapsulating related functionality
added checks to ensure only non - canceled , filled , and rejected limit orders are added to the limitOrders list to improve the accuracy of the order management by filtering out irrelevant order statuses
added pixel offset calculations and validation to ensure correct image layout to improve image processing accuracy and handle potential layout errors
fix # 1057 : convert timestamps to ruby timestamp .
added a check to handle the presence of a real path in WebAppContext to ensure that the application correctly handles paths ending with a " / " in the web context
updated ScriptFunctionImpl to use TYPE _ ERROR _ THROWER _ GETTER instead of TYPE _ ERROR _ THROWER _ SETTER to fix a typo in the function name for improved clarity and functionality
[ scene2d . ui ] fixed error when edit text in jedittextarea with mouse wheel
issue 905 : avoid nullpointerexception in graphdecoder when callerloopscope be null
test : migrate spoperjavaprettyprinterjavaxtest to junit 5 ( # 4524 )
refactor URLOutputStream instantiation to use try - with - resources for better resource management to improve code reliability by ensuring proper resource closure and avoiding potential memory leaks
added Entity annotations to the Mail class to enable entity persistence for better code modularity
updated default settings and default values for tablespace in Main . java to enable tablespace display in the console for better user experience
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to these buffer properties for external use
added a check to clear empty file values in ScanBatch and created a test for handling empty JSON directories to ensure that the application properly clears empty values from the JSON directory during processing
enhanced failureStrategy to include custom name in failure reporting to improve failure reporting by providing clearer context for string comparisons
added a LIB _ PATTERN regex pattern to validate the LIB function and modified conditional checks for Cuda to ensure compatibility with specific library naming conventions and improve error handling
changed catch block from ClassNotFoundException and NoClassDefFoundError to Exception and Error in JrtJavaBasePackages and PackageHelper to simplify error handling by consolidating exception management
hbase - 6668 block write past block write in fsutils . checkddfsafemode ( # 4377 )
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name and message to improve clarity of error reporting for unsupported compiler failures
o removed unused method from defaultplugincache , since we do n ' t use defaultplugindescriptor now .
fix presence status event for group contact when use mobile
fix # 5783 - remove outdated comment ( # 5782 )
added integration test for fetching account information in the BTCE exchange to ensure the PollingAccountService correctly retrieves account info from the BTCE exchange
added mouse wheel methods to VDUInput , vt320 , and TerminalView classes for improved mouse input handling to enhance user interaction experience by allowing mouse wheel input in terminal interface
fix native extraction for native file
# 427 - remove @ columnhstore annotation , no longer use
fix ( maybe ) : restore playerkin flag when player be disconnect
replaced RequestFieldMatcher with SLF4J logging and updated service DSL configuration to improve logging clarity and simplify service request handling
stop nullify member when update cluster data
replaced System . getProperty ( " os . version " ) with AccessController . GetPropertyAction for OS version retrieval to ensure secure access to the operating system property
added a new configuration file suffix constant and updated the fileSuffix initialization logic to allow dynamic configuration of the templating engine ' s file suffix based on application properties
updated hash code calculation in SelectMessageQueueByHash and added new test cases in SelectMessageQueueByHashTest to ensure correct message insertion order and validate the selection behavior in message queues
make dock panel visible when it should be animate
fix # 180 : caret column property stay empty in yledtextareavisual
added declaredPlatforms field and related imports in PrebuiltAppleFrameworkDescription , CxxBinaryDescription , CxxGenruleDescription , and CxxGenruleDescription classes to enhance platform management and filtering capabilities in the C++ build system
replaced instances of SimpleParameterAccessor with ParameterAccessor across multiple files to update to the new parameter type for better compatibility and performance
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerExceptions when passwordAttribute is null
added handling for byte and string arrays in DataUtilities and created corresponding tests to ensure correct initialization of byte arrays and default values in data operations
update SslContextFactory to handle null addresses more gracefully to ensure correct host name verification when address is null
updated assertions in TestFSTableDescriptors to use assertTrue for cache hit count to improve clarity and correctness of cache hit validation logic
simonstewart : add the ability to delete a browser cookie by domain
added a boolean flag to track if the launcher transition is completed in AbsSwipeUpHandler to ensure that the launcher transition state does not interfere with the current gesture state
added UTF - 8 charset to HTML tags in HTMLListWriter and HTMLWriter to ensure proper encoding of title and head tags in the generated HTML
refactor IndexReader class to improve code readability to enhance maintainability and ease of understanding for future developers
updated the default value of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH and refactored path handling in multiple classes to optimize key length handling and improve code readability
added a new class ` bug6337518 ` that manages the ` arrowButton ` in ` BasicComboBoxUI ` to address a bug related to arrow button UI behavior
refactor TestRandomAccessBuffer class for improved readability to enhance maintainability and reduce complexity in the testing code
updated UserInfoActivity . java by modifying method implementations and variable names to enhance code clarity and maintainability
added HomeContentProvider import and notification calls in multiple services to ensure content URI is updated when changes occur
added a new private boolean variable ` mStayPressed ` and modified its usage throughout the ` BubbleTextView ` and ` Launcher ` classes to manage background state more effectively to improve background handling logic when pressed and focused , enhancing user interaction responsiveness
added a Throwable parameter to the getFallbackResponse method across multiple classes to support additional error handling during fallback policy operations
8057551 : let the - d flag dump _ all _ generate class to disk and work outside -- compile - only mode
[ java ] add null check for tag array .
updated regex pattern in RegexpUtil and renamed test method in TestSqlPatterns to improve pattern matching accuracy and clarify test purpose
added a method to save and restore the action bar title in FileActivity and updated the action bar title in FileDisplayActivity to ensure the action bar title reflects the currently selected file
updated the method to use ` Iterables . getLast ( convertedElements ) ` instead of ` Iterables . getOnlyElement ( convertedElements ) ` , and added a new test for combining lists with select in ` ConfigSettingIntegrationTest ` to ensure correct element retrieval and validate the functionality of the ` concatList ` command
remove all schedule for a cleaning service because of all the time window
hive - 10774 : validate the structure of partitioned table in transactionvalidationlistener ( alan gate , review by yongzhi chen )
updated ReplicationHandler and SnapPuller classes to enable polling functionality to improve replication performance and reduce polling overhead
changed the type of generatedKey from int to long and updated PreparedStatement execution to handle auto - increment keys to ensure unique keys and improve database compatibility for auto - increment operations
refactor code to simplify the retrieval of the proxy object using a lambda expression to enhance code readability and maintainability
add fail to inline test case for improved error reporting
camel - 17962 : set default keep - alive timeout to 10 second by default
deleted the HttpTestAccount001 . java file to the test suite is no longer needed in the project
changed exception handling from ` Exception ` to ` Throwable ` in the ` Dispatcher ` class to improve error handling by capturing a broader range of exceptions
camel - 4324 fixed the npe in camel - cxf when cxf data format be not configure
added a case for ' ~ ' in ClientUtils . java to handle user input appropriately in the application
camel - slack : make delay a long type for consumer and keep consistency
added miss drop chance check to a function . close # 2438
updated layout parameters in TranscodingTab . java and corrected the concatenation syntax in JCheckBox to improve UI layout and ensure proper string concatenation for clarity
added a new file ` bug8057791 . java ` implementing a GUI that tests a specific JList layout with a NimbusLookAndFeel to verify the behavior of JList components when interacting with a NimbusLookAndFeel
updated flags logic for lambda handling in LambdaToMethod . java and added a new LambdaInterfaceStaticField . java file to improve clarity and organization of lambda interface references
fix engine builder for new interface ( # 3943 )
replace length check with null check for ' to ' in ComposeActivity . java to improve null safety and prevent potential NullPointerException
drill - 761 : fix bug in parquet ' s fixed width dictionary reader .
updated layout adjustment logic for landscape orientation in PortraitPagedViewHandler . java to ensure proper layout rendering based on device orientation
added a new annotation for logging in the aop examples to enable unified logging before and after method execution , enhancing monitoring and debugging capabilities
updated string concatenation syntax in QueuedThreadPool . java to ensure that trace is not empty before logging thread information to improve robustness and prevent potential null pointer exceptions when trace is empty
add implementation type to cachegenerator for specific implementation . ( # 2131 )
[ gr - 8356 ] fix npe in framemap . createreferencemap ( ) .
refactor TypesafeConfigurator for improved clarity and structure to enhance code maintainability and readability
camel - 8014 add karaf feature test for camel - graphql component .
added two static methods to demonstrate BigDecimal initialization to ensure that the variable values are set correctly for accurate results
remove url encode from entry key and value . fix # 2959
replaced the unsupportedPlatformTool method with a dedicated UnsupportedPlatformTool class to improve code organization and maintainability by separating the unsupportedPlatformTool into its own class
solr - 9755 : use short wait time instead of double for loopcount in recoverystrategy . onrecoveredretry
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide functionality for retrieving the size of the map
[ scb - 2687 ] fix addressmanagertest fail on jdk 9
updated layout specifications and component sizes in VLCVideo . java and VLCVideo . java to improve the visual layout and ensure proper component alignment
replace reference to bisq with bitsquare / bitsquare
updated the AUTHORITY string in HomeContentProvider from " com . klinker . android . talon . provider " to " com . klinker . android . twitter . provider " to reflect the correct application context for Twitter integration
make sure user . home always end with ` ` / . m2 ' ' when parse user . xml
added buffer binding functionality to VertexBufferObjectWithVAO to ensure proper buffer management for efficient rendering performance
updated ServerHttpSecurity configuration methods to enhance security features and improve request handling
added a JUnit 5 @ Disabled annotation to the PostgresStoredProcedureIntegrationTests class to temporarily disable tests during ongoing development
added default headers handling in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP request configuration flexibility
bug fix : return detailed error message on password validation exception
deleted the NoOpConfigPathGetter . java file to the class was deemed unnecessary for the current implementation
replaced Base16 decoding with Bytes . fromHexString for signingKey to improve performance and reduce memory usage during key processing
updated FloatUtil to use CSSName for float value and added checks for null or empty values to improve flexibility in rendering and ensure proper handling of float properties
planner - 2274 : incorrect import in planningfactcollectionproperty ( ) and planningfactcollectionproperty ( )
updated method signatures and header retrieval in RestUtils to utilize MultiMap for case - insensitive header handling to improve code consistency and simplify header management
update code to replace ' enc ' with ' charset ' , no need to convert to string .
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to provide functionality for retrieving the job ID while ensuring proper handling of job instances
simplify comparison logic in ExpandableUploadListAdapter and FileStorageUtils to improve code readability and maintainability
improve httpclient log , avoid unneeded error log
updated import statements in LegacyAuthenticationHandlerAdapter . java to use NamedAuthenticationHandler and UsernamePasswordCredentials to streamline authentication handler and improve code clarity
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
handle null filter in case the filter be not our own by the security manager .
move wrap method back to relate to github # 1313
replaced ` dataOut ` with ` BufferedOutputStream ` for better resource management to ensure that the output stream is properly flushed and closed even if an exception occurs
hive - 6517 : fix handling of column qualifier in selectall ( ) method ( chaoyu tang , review by aihua xu )
refactor FocusTransitionTest to improve test clarity to enhance maintainability and readability of the test cases
fix fail qa build ( miss import )
added a null check for sourceTask before retrieving counters to avoid potential NullPointerExceptions when handling MapRedTask tasks
corrected a syntax error in the assignment of the _ readListener variable to ensure that the readListener is not null to prevent potential NullPointerExceptions
added a method to change the color in the AppearancePanel using a ChangeListener to improve the color selection handling during the color change process
fixed typo in taskhelper constructor ( # 1579 )
fix for http : / / issues . apache . org / jira / browse / amq - 4698 - failovertimeouttest timing issue
pdfbox - 3017 : add test for createfromfile and filelock , add unit test for it
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize default parameter handling in scripts
lsra spill optimization : do n ' t spill in the loop depth .
bump to micronaut 3.6 . 0 and fix test with it
fix : pgresultset # closeinboundsexception ( # 893 )
initialize serviceAdvisorType from null to PYTHON to ensure a default value is provided for service advisors
modified the handling of the resolver in GenericDatumReader to use a ThreadLocal for thread - local resolution to improve efficiency and resolution in multi - threaded environments
internal cleaning : put the buffer in an arraydeque instead of the collection .
replaced inline byte array instantiation with a random byte for memo generation to improve code maintainability and reduce redundancy in generating random byte arrays
add new method setspersonisation ( date , locale , distinguisher ) to spoonparameterspec . ( # 966 )
removed redundant code block from CodeGenerator to streamline logic to enhance code clarity
removed unnecessary parameters from the scroll method signatures in multiple classes to simplify the scrolling function signature and improve code readability
changed the pointer variable from private to public and added reset and resetTo methods to allow external access and enable resetting functionality for the pointer variable
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` for clarity to distinguish between the BDB and other related classes for better maintainability
remove unnecessary type cast from boolean expression
replaced the ArrayList with a boolean flag to track if the accept list is empty after processing the request to improve efficiency by avoiding unnecessary list creation
removed a redundant import statement and added a default value of false to streamline the code for better clarity and functionality
added isAutoIncrement method to LiquibaseDataType and corresponding implementations in various data type classes to implement a consistent way to check column auto - increment behavior across data type implementations
added default value for errorText when it is null to provide clearer feedback on command failure due to Internal Server Error
updated import statements and modified argument handling in LocalManagementTest . java to improve code clarity and ensure compatibility with the JDK testing framework
replace ` add ` method with ` push ` method for ` toSimulate ` to improve method consistency and clarity in handling state updates
added AjpSocketConnector configuration for server listening on the specified port in GitBlitServer . java to enable flexible configuration of the connector based on the provided port
added type coercion handling for compound types in TransTypes . java and created a new Intersection03 . java file to improve type safety and demonstrate assertion behavior in the handling of generics
camel - 4357 : split unit and integration test for camel - spatial ( # 530 )
modified thread initialization logic to conditionally start the toolkit thread to improve efficiency by avoiding unnecessary thread creation
[ gr - 20735 ] compress the bundle content of a part of a forked thread .
added multiple calls to hide the surface surface based on the Windows platform to improve user experience by preventing unnecessary surface visibility
get the temp directory in test to match the actual class name , rather than a hardcoded value
added configuration options for fullNodeHttpEnable and solidityNodeHttpEnable , and updated service registration logic to allow dynamic configuration of fullNodeHttpEnable and solidityNode HTTP usage based on new settings
added a new property for the service in GoogleCloudFirestoreTicketDocument and modified the GoogleCloudFirestoreTicketRegistry to utilize it to improve ticket management by associating service - specific tickets with their respective tickets
updated implementation details in Generate . java to improve code maintainability and readability
json : remove the nullable parameter of the json _ format ( ) function and add some test
updated BadgeRenderer to use a new flag for DOTS _ ONLY and modified related conditions in its logic to improve the handling of badge rendering based on the DOTS _ ONLY flag
made ` ConfigurationConfiguration ` method package - private to allows for subclassing of ` FreemarkerManager `
add a unit test for invalid excluded package patterns in OgnlUtilTest to ensure that invalid excluded package patterns are properly handled and raises configuration exceptions
modify the initialization of ` deviceUdid ` to use ` platformName ` based on the presence of ` sdkName ` to ensure compatibility with macOS by using the appropriate device UDF
updated DefaultHttpClientFilter and TestDefaultHttpClientFilter to modify error handling and response creation to improve error logging clarity and ensure proper response handling for forbidden status
refactor the binding and execution of the root script and state saving logic to ensure scripts are correctly initialized and executed during the initialization process
added support for text shadowing in the Utilities class to improve text rendering quality when using bold formatting
added teardown method for dropping tables and views in TestColumnAccess and TestReadEntityDirect to ensure proper resource management and prevent potential memory leaks after test execution
added a retrieval of the parser using the specified name in SecurityNamespaceHandler . java to ensure the parser is properly instantiated for security operations
fix logic issue in boundelocalcache . movecount ( ) and expireafterwrite ( )
modified RawConnection to extend WebSocketConnection and added methods for complete and flushing to improve connection handling and enable better management of complete frames in the WebSocket connection
added multiple test methods for ` all _ assertions ` and removed the ` @ Ignore ` annotation in ` SoftAssertionsPerfTest . java ` to improve coverage and functionality of the soft assertion methods
added a new constant for test failure codes and updated the ` execute ` method to return a success status based on it to improve error handling by allowing tests to exit on specific exit codes
updated positioning logic in GlyphLayout to account for markup support when wrapping or truncateing to ensure proper rendering of text when markup is disabled
fix flaky testbooleanrerites ( # 15444 )
updated the class assignment for enumClass to use the superclass instead of the enclosing class to ensure correct class handling for anonymous classes in type handlers
replace conditional connection flush logic with direct PlayerSocketConnection flush method to simplify code and improve performance by removing unnecessary type checks
added an initialization check and modified the removal of OnDrawListener in Launcher and LauncherAnimUtils to ensure listeners are only registered once and are removed correctly
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements in ReplicaAssigner . java to use wildcard imports and added a new condition to check for NOT _ APPLICABLE to improve code readability and ensure proper handling of match statuses
updated the return condition in RendererConfiguration . java from false to true to ensure that media info parser is validated by default
do n ' t visit adviced type in aop proxy if they have atereotype
added permission checks for deleting tables in FolderPermissionBase . java to ensure correct permissions are enforced for data integrity
fixed status publishing of provider after a provider change state .
updated the color calculation to use a configurable base color to enhance flexibility in color value distribution for better visual distinction
updated implementation of ScriptEngineFactory to improve performance and maintainability of the code
updated the image rendering logic in HolographicViewHelper to use original and outline bitmaps to improve rendering quality by ensuring correct bitmaps are applied for different view states
refactor request method handling to use Gson . fromString method to improve code readability and maintainability
infer the phrase of a phrase in the multiwordpreprocessor ( one of the second , maximize the number of call ) for the first time .
added import statement for IOException in IOChannelUtilsTest . java to handle potential IOException more effectively during test execution
updated class loading logic in mmm Table . java to handle specific output formats to ensure correct class loading behavior when using HivePassThroughOutputFormat for enhanced compatibility
refactor ChunkListener , AfterChunk , BeforeChunk , and UpdateListener classes for consistency to improve code readability and maintainability
fix for issue 806 : arrayindexoutofboundsexception throw arrayindexoutofboundsexception
updated the method calls and return names in several UI classes for consistency and clarity to ensure correct functionality and improve user experience by using more descriptive names in the UI
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , fixed c
added a new file ` InterfaceWithStaticInterfaceMethodHandling . java ` that implements a static method and demonstrates the use of static methods in Java to provide a demonstration of handling static methods in Java
camel - 6569 : added support for resolve property placeholder for the key store use in camel - core .
removed unnecessary type checking for ThreadDeath in LogResolverBean . java to simplify code and improve readability by reducing unnecessary type checks
updated multiple Java classes to improve consistency and functionality to enhance code maintainability and clarity across the security framework
updated JGit version from " JGit 1.0 . 2011060707 - r " to " JGit 1.1 . 0 " and improved jar sorting to ensure compatibility with the latest JGit version and maintain correct artifact order
add logic to retrieve the correct client path from the client annotation to ensure the application can handle cases where the client path may not be provided or missing
int - 1272 add a transformer a an alias for the ' transformer ' property within the namespace .
replaced BACK _ FACTOR with REWIND _ TIME and modified conditions for duration checks to enhance code readability and introduce a temporary fix for duration comparisons
added a method to check if scrolling is wheeling and modified action event firing logic in buttons to improve user experience by preventing unnecessary action events when scrolling is disabled
fix usage string bug in readme . md
fix for bug sf # 640404 . correct setting of collection . map - fix .
removed unused methods for setting seq and unseq files in CrossSpaceCompactionResource to streamline code by eliminating unnecessary methods
remove unnecessary @ override in Observation . java to improve code clarity and maintainability
pmd : fix # 1074 ( # 1074 )
fix a synchronization issue . when two thread resolve sootfieldrefs with phantom field , this could lead to a concurrentmodificationexception .
make the elasticsearch name / tag configurable ( fixes # 2789 )
added methods for listener management and Gcode command creation in IController and its implementation in TinyGController , and updated BackendAPI to use IController instead of AbstractController to improve flexibility and functionality of the controller interface while standardizing the controller type used throughout the application
added a test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to ensure that the rendering functionality works correctly with the newly defined horizontal rule
replaced System . out . println statements with TTY . print for consistency to improve the maintainability and readability of the output
changed various classes from " Response " to " Response " and added a new method signature in RevokedCertificateException to improve code organization and provide a consistent way to retrieve the revocation date
updated frame length check from ` frameLength = = 0 ` to ` frameLength < = 0 ` to ensure proper handling of frame lengths that are negative
updated IntFloatMap and IntIntMap to assign a variable for zeroValue and defaultValue to improve code clarity and ensure default values are returned correctly
attempt to fix image size bug on mac
added null check for the registered variable to prevent potential NullPointerException when registering or receiving a registration
remove duplicate hasnextSibling method . it be not be use and be useless .
added null check for results before checking the size of results to prevent potential NullPointerException when results are null
nifi - 1294 updating log message for mobfilecache initialization and removal of deprecated cache size log
refactor ColConvCCMTest class for better readability to improve maintainability and clarity of test cases
replaced instance variable declarations with local variables for ` target ` and ` allowCovariantReturns ` , and updated method calls accordingly to enhance code clarity and maintainability by reducing instance variable usage and improving scope handling
pdfbox - 4321 : add constructor to pdftextstripperbyarea to avoid the use of raw type
replaced ` Float . toString ( ) ` with ` asString ( ) ` in ` Json . java ` and added a new class ` X ` with JSON formatting to improve performance and simplify data handling for JSON serialization and deserialization
added a return statement to the GenericFileConsumer class to ensure proper termination of the method under specific conditions
added a new Runnable inside EventQueue . invokeLater for asynchronous execution to improve UI responsiveness by ensuring tasks are executed on the Event Dispatch Thread
hbase - 28013 fix the max size calculation in compressextension ( # 1489 )
fix steeringvalue comparison in test
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve code readability and utilize built - in security functionality
updated JdbcSerDe to utilize LocalDate and LocalDateTime for better date and timestamp handling to improve code clarity and ensure accurate conversion of date and timestamp data
updated version number from 2 to 3 and modified metadata handling logic to support different versions to ensure compatibility with versions below 3 and improve metadata processing
fix flyway jpa when use spring - based jpa
added sorted ( ) method to ClassesImpl . java to ensure elements are processed in a consistent order
added a method to retrieve the current stable state and updated the launcher state comparison logic to improve code clarity and ensure accurate checking of launcher state
refactor SharedInformer class to improve code readability to enhance maintainability and reduce complexity in the future
refactor TestCloseScope0 to utilize a memoryOrResourceScope for differentiating between createShared and close methods to improve compatibility and maintainability across different versions
updated the test method to use 5000 instead of 500 to improve testing accuracy by allowing more time for server interactions
updated CaptchaChannelProcessorTests . java with new test cases to improve test coverage and ensure reliable validation of Captcha channel processing
metadata import : update collection on change to ensure proper owner collection on update .
retry to save registry cache file after a maximum of 3 second ( core - 688 )
replaced ` mergeDirectory ` with ` directory ` in ` TrackingDirectoryWrapper ` initialization to ensure correct directory tracking functionality
fixed bug 124867 - unusedimports no long report a false positive on import which be use inside an interface
added validation to prevent insert overwrite queries on bucketed Iceberg tables to ensure that operations on bucketed tables throw semantic errors
updated assertions in BootstrapTests to expect 2 keys instead of 3 and added a check for legacy SAML keys to ensure the test correctly reflects the expected default zone configuration
updated methods in Excluder to include non - static local checks for anonymous and non - static fields to ensure accurate identification of field types in non - static contexts
refactored the ` getAddressVector ` method to improve variable naming and add a check for an additional variable ` theAddress ` to enhance code clarity and handle unexpected email addresses more effectively
removed two unused constants from CommentsParser . java to streamline code and improve readability by eliminating unused constants
lucene - 3878 : do n ' t swallow exception when release lock
changed package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align DataSourceInitializer with the correct batch testing context
updated SpelExpressionTransformer to conditionally transform the operator based on the unary operator status to ensure correct handling of unary operations in the Spel expression evaluation
updated ByteBuddy initialization to include TypeValidation . DISABLED to disable type validation for improved type safety during bytecode generation
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` and add a new file ` ErroneousAnnotations ` to improve type handling and introduce erroneous annotation examples for testing purposes
updated lock handling in tests to set global innodb _ lock _ wait _ timeout to 1 to ensure proper exception handling for pessimistic entities in tests
polish ` ` allow log file to be reference by application pid ' '
enhance URL handling in ServiceApiRequest for redirect logic and ensure proper management of HTTP redirects
added service mapping constants and modified configuration retrieval logic in MicroserviceFactory to improve flexibility in configuring microservice application environment
use getBeanName ( ) instead of getName ( ) to ensure accurate step identification in the ToeThread class
updated database path regex to use a static prefix and modified database operations to enable easy access to the database and ensure accurate test validation
update return statement in HomeFragment to use unread count from HomeDataSource to ensure accurate tracking of unread count for the current account
added a new test method ` testVirtualThreadPoolPreview ` to ` DistributionTests . java ` and disabled it in ` JRE 20 ` to improve test coverage and ensure compatibility with Jetty 20 features
added a limit limit feature to the getAllOrder method in MarketOrderIdListCapsule and updated related logic in Wallet and MarketOrderIdCapsule classes to limit the number of market orders based on a specified limit
added null check for the user before retrieving user settings to prevent potential null pointer exceptions when accessing user settings
updated the file matching logic to use ` getAbsoluteFile ( ) ` for better accuracy to ensure that the correct absolute file path is used for file matching
added maximum width and height limits for instance bounds in ComponentBuilders . java to ensure that instance bounds do not exceed defined limits
added logging functionality to ` CommonsHttpSolrServer ` for connection manager timeout settings to improve debugging and maintain consistent connection management practices
removed the import statement for ExceptionHandler and added error handling for document creation to streamline error reporting and improve code clarity
refactor CrateType . java to use a more concise method for generating filenames to improve code readability and maintainability by reducing the use of Optional
added input validation for spell checking in SpellChecker and created a test for i53643 numbers to ensure proper handling of input strings and validate functionality for varying input formats
no changes were made to the message formatting in HelloWorld . java to ensure consistency in message formatting
added methods to retrieve and display file actions from the OCFileListFragment to enhance file action handling and improve UI responsiveness
set daemon mode of ReplicationHandler and log replication time and configuration files with exception handling to improve application stability and error reporting during replication processes
updated method call formatting in StoreCachedTest . java to improve code readability and maintain consistency
renamed the constructor parameter from ` materials ` to ` theMaterials ` and removed the ` MaterialColumnParser ` from the ` fileColumns ` array to improve clarity by using a more descriptive parameter name and ensure proper cleanup of component file columns
add some miss component to the dependencybank file ( # 6049 )
added dynamic view pool configurations for AppsContainerRecyclerView to enhance performance and resource management for better user experience
added a new test method to build binaries in AndroidBinaryCrossCellIntegrationTest . java to ensure proper functionality of binaryaries in the build process
fix invalid place for now , cancelling and cancell
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating necessary parser and resource handling
add null handling logic to the FilterOperatorUtils to enable filtering of null values in query context
validate bootstrap method signature parameters in JDynamicInvokeExpr . java to ensure correct signature parameters are enforced for bootstrap method invocation
try to fix the ci test error on the ci box
removed the call to getContextClassLoaders ( ) . clear ( ) in CucumberInstrumentation . java to ensure cleaner code and avoid unnecessary object creation
changed ` contacts ` to ` DefaultRegisteredServiceContact ` and modified return statements to use ` List < DefaultRegisteredServiceContact > ` to improve type safety and ensure compatibility with the new service structure
updated workspace label visibility logic in DeviceProfile . java to ensure proper spacing based on cell padding and icon size
updated assert statements in ReplicationFactorTest to use a consistent format to improve clarity and maintainability of the assertion statements
[ gr - 38505 ] llvm be pre - initialized by auxiliaryenginecache because it define llvm # patchcontext ( ) , but llvm do actually not support pre - initialization .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to enable tests that were previously ignored
replace RuntimeException with JsonIOException in error handling to provide a more specific exception for JSON - related issues
fix integer . valueof for second value in visualscoretagtest .
update error messages for copying files and adjust directory path handling to improve clarity in error reporting and ensure correct directory traversal
[ pinot - 2847 ] reduce duplication of islowlevelconsumersegmentname ( ) method ( # 922 )
added methods to startActivity and startActivityForResult in ShadowFragment , and corresponding tests in FragmentTest to ensure proper handling of fragment activities and prevent potential null pointer exceptions
updated date return statement to use the current time instead of the current time to ensure accurate time representation for date calculations
[ gr - 39972 ] set x86 _ 64 - none - linux for ddr - related build .
added a method to delete file files associated with a specific account to improve file management capabilities within the application
updated command line option for help to remove unnecessary line breaks to improve user experience by providing a more concise command line option
added a method to create a suite description and updated equality checks for the description class to enhance functionality and ensure proper handling of unique identifiers during description comparisons
replaced Hashtable with MultiFormatReader for decoding bitmaps to simplify the decoding process by removing unnecessary hint handling
removed the ` sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the object creation process by eliminating unnecessary dependencies
add some test case that show the issue with zoom context finder . range do n ' t work for end of range
added a dependency tracking configuration to JRubyScriptEngineConfiguration and modified dependency activation logic in ScriptEngineFactory to ensure dependency tracking is enabled only when specified in the configuration
updated the request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure the correct path is validated for servlet context
make creation of system _ { auth , trace } keyspaces less
- introduce antialiasing for welcome window to force fullscreen on the screen
updated tuner configuration handling and error logging in the TunerManager and RTL2832TunerController classes to improve resource management and ensure proper handling of tuner availability during execution
added HasTests interface to AbstractShBinaryDescriptionArg and created a test method for shbinary functionality to enhance functionality by allowing tests to be recognized in build processes
added default database include string for HSQLDB in TestFilter . java to ensure compatibility with HSQLDB database setup
removed extra whitespace in the if statement in JavabinLoader . java to improve code readability and maintain consistent formatting
add a check to ensure that materializeHostException is only called when the stack trace is empty to improve error handling by avoiding unnecessary exceptions when no stack trace is available
servicetest : export jvmci to graal only on java 8 .
add test to ensure that update command handler subscription be correctly trigger
[ flink - 20865 ] [ cluster ] move fine - grained resource management outside of batch mode
fixed fish not be able to place block more then once . close # 2597
camel - 8561 : better component doc summary of component - ftp component
rename all instances of ` getCommandRunner ` to ` getStepRunner ` for consistency to improve code clarity and maintain uniform naming conventions
add option to compress package name in gangliareporter ( # 2600 )
added a check for empty items in AppsContainerRecyclerView to prevent potential NullPointerExceptions when accessing an empty list
ensure ZipkinAutoConfiguration uses a conditional bean for REPORTER _ BEAN _ NAME to prevent potential conflicts when the bean is missing
- add support for mdc property in xmllayout a find in lbclassic - 22 contribution
added a static final String omitHeader to CommonParams and implemented its removal in NamedList and XMLWriter to allow customization of the response header based on request parameters
fix sulong bug in Escherproperty , see bugzilla 48407
updated return statement to use Description . getBuildRuleType for consistency to improve clarity and maintainability of the code
added method call to modify theHierarchy after updating the method numberer to ensure the method hierarchy is updated correctly after modifications
added null check for ` disputesPerTradeId ` and ` disputesPerDepositTxIdItems ` in ` TradeDataValidation ` to improve code safety by avoiding potential NullPointerExceptions
added a ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified method signatures in ` DatabaseSchemaCrawler ` and ` TableRetriever ` to include a ` NamedObjectList ` parameter to enhance object hash handling and improve method signature for better functionality
wallet : send tx ' s confidency type should be not _ seen _ in _ complete when create a new transaction .
support header to be derive from request body and header . fix # 3934
filter out invalid json condition . fix # 4043
hbase - 13952 fix potential hang in hregion # close ( )
updated null checks and comparison logic in Credential . java to improve code readability and maintainability
[ java ] change order of check for image subscription before assert to avoid redundant check .
8289949 : make sure to call process . destroyforcibly outside testjvmprocess
mondrian : fix testdefault for oracle , do n ' t support testdefaults .
camel - 3908 : do n ' t assume the store be connect when get the store . thanks to donald for the patch .
if we have a stop token in the document , throw parsecancellationexception instead
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` el ' ' complete
added a method to retrieve the data file name and modified the model initialization logic to improve data file handling and ensure correct model initialization
added support for setting and retrieving an email domain in LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enhance flexibility in email domain management for identity providers
added configuration constants for request timeouts and methods to retrieve them to improve configurability and allow for flexible timeout settings in the application
do n ' t process undeferred uri if we do n ' t have any concept link
added RedisCategory import and categorization annotations to RedisServiceRegistryTests to enhance test categorization for Redis service registry functionality
fix npe when use finddeprecateduses with empty typepattern
added a call to the superclass ' s paintComponent method in WaterfallPanel . java to ensure proper rendering of the component during rendering
removed unused import statements from multiple configuration classes to improve code cleanliness and maintainability
updated event signature handling in ContractEventTriggerCapsule and LogEventWrapper classes to improve event naming clarity and provide better context for event signatures
updated file name filtering to include the " _ " suffix to ensure consistent file naming conventions across the application
correctly use the background color in clear / fill method of mapview component . # 2174
jbrules - 3063 : fixing syntax error when compile a rule fails
removed unnecessary print statements and improved formatting in multiple Java files to streamline code and enhance readability by reducing unnecessary console output
added a check for NaN values before assertions for scoreDocs [ 0 ] and scoreDocs [ 1 ] to ensure that NaN values do not cause test failures
[ gl ] fix npe in devicestate . getentitykeys ( ) .
added handling for zero - time strings in ColumnSnapshotGenerator and created a new test for date default value in MySQLIntegrationTest to improve database value processing and ensure default value behavior is correctly defined
update the symbol table to be consistent with offererbtcpubkeys
updated the type of ` vsContext ` from ` Map < ? , ? > ` to ` Map < ? , ? > ` in multiple collector classes to enhance type safety and prevent potential ClassCastExceptions
[ drools - 3379 ] fix initialization of sessionconfigurationimpl when use multiple kbases
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure proper reference to the current configuration object
added a conditional check to prevent redundant processing when modalness matches mModalness to improve efficiency by avoiding unnecessary operations when modalness matches mModalness
added a test for creating a video codec profile level and implemented native _ getGlobalSettings method in ShadowMediaCodecList to ensure correct handling of video codecs in the media codec functionality
fix : pressing key do n ' t work in dialog , close # 5460
added validation for width and height , handled potential OutOfMemoryError , and ensured valid XRSurfaceData instance is used to improve robustness and error handling in image creation processes
standardize thousands separator in FormatData _ uk . java to ensure proper representation of thousands characters
replaced array manipulation with AtomicInteger for loops across AsyncStressTest and StressTest classes to improve thread safety and ensure correct synchronization in concurrent environments
added visibility and Toast messages for unavailable beta flavors in AchievementsFragment and LeaderboardFragment to improve user experience by informing users when a flavour is unavailable
added access , name , and desc fields to SearchMethodVisitor class to ensure proper initialization of the context object
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling to include InterruptedException to improve synchronization during exception handling and ensure robustness against InterruptedException
removed unnecessary line breaks in DLNAResource . java to improve code readability and maintainability
camel - 18629 : remove the required attribute from the schema doc for consistency
bugfix # in good control over transaction allocation , it be use after a query ( # out - of - memory )
refactor key manager and trust manager type handling in ThriftSource and ThriftRpcClient classes to improve code clarity and reduce redundancy in key manager and trust manager type retrieval
replaced JavaIsoVisitor with Applicability and updated test implementation to utilize Applicability for enhanced type checking to improve code maintainability and readability while ensuring correct type usage in the visit method
fix blockmania tabbing problem ( e . g . double click )
replace ` PACKAGE _ PRIVATE ` with ` NONE ` in multiple files to update access specifier references to improve clarity and maintain consistency in access requirements
renamed the method ` unHandled ` to ` unhandled ` and introduced a new class ` T6199153 ` to improve method naming consistency and enhance error handling logic
updated OrcInputFormat to retrieve stripe statistics from orcReader and orcTail to improve efficiency by utilizing stripes and stripe statistics during processing
added a null check for the exception before proceeding with further operations to prevent potential NullPointerExceptions when the exception is not initialized
switch from http to https for the image source ( # 4995 )
add ' v ' option to help track down version of jdk . jar
fix stringindexoutofboundsexception on export from applet
added support for default rotation rotation in ConsoleActivity and enhanced input handling in TerminalView to improve user experience across different keyboard types and enhance text editor behavior during automated testing
updated the type of the ` hq ` variable and its declaration to use a more specific type to ensure type safety and improve code clarity
fix npe if there be no ownerconnectionaddress ( # 10022 )
camel - 4948 : add the jmx headermapfactory into the jmx console
add a single quote to the end of a block in JavaCompiler . java to ensure proper syntax for better code readability
jmstobooleangateway now support configuration for ' outbound - gateway ' ( int - 129 ) .
updated index used in the expecting method call from ` i + 1 ` to ` i2 ` to correct the logic for array replacement
[ scb - 2046 ] fix npe when add script engine to classloader ( # 3465 )
added support for the PGStatement class in PooledConnectionImpl and created a test for it in ConnectionPoolTest to enhance connection management by ensuring proper handling of PG statements within the connection pool
flush memtables and refresh size after each test ( cassandra - 2390 )
updated log level from error to warn for fragment limit message to better reflect the severity of the log message
make sure that expiry be always less than or equal to the min timestamp ( cassandra - 8984 )
fixed - rblockingdeque . polltimeout ( ) method invocation incorrectly use unit . toseconds ( ) .
refactor JobInspectCommand to remove the final format parameter for formatting output to simplify string formatting for improved readability and maintainability
fix documentation for miss engine class ( # 6800 )
use class name in child stream to make test more robust
[ issue # 5540 ] remove remoting feature a it do not work ( # 5541 )
updated variable name from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to improve clarity regarding the purpose of the variable
[ zeppelin - 5192 ] fix nullpointerexception in notebookserver when no interpreter be available
andreastolftolfsen : fix typo , use lt instead of funn
removed the public access modifier from the ` verifyIdsAreStable ` method and the ` getNodeId ` method in ` NodeIdAccessor ` to enforce encapsulation by restricting method visibility
cloudstack - 3892 : improve the error message when attach a volume to a vm to use the exist snapshot policy
removed public access modifier from method declarations in ItemWriter . java to improve encapsulation by restricting method visibility
updated the mock Thing ID from " " to " test " in RoombaHandlerTest . java to ensure the correct Thing type is referenced for testing purposes
override tostring on imagenamesubstitutor to prevent ` ` not find ' ' exception ( # 5229 )
replaced FSDirectory with RAMDirectory for directory creation to improve performance by using in - memory directory for tests
increase the height of the text in utils . ontouchevent ( issue # 542 )
renamed WalletAppKit . java to align with new naming conventions to improve code readability and maintainability
bugfix # 208274 , make sure hat . js and nashorn engine can be load by profile
[ fix ] clear menu item on a chat transport selection box
added resolution and replacement methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes with default methods to enhance data handling capabilities for template resolution and token replacement
add miss bsqblockexplorer builder check for set bsq ( # 452 )
added attribute management methods to StandardSession and Session classes to enhance attribute handling capabilities in the session management system
added assertions to verify the name and alongside the AL peer bean in TestDbJson _ List to ensure that the getPlainBean method returns the expected JSON representation
fix # 95 - use the correct initial page count when calculate averages for buffering
refactor BatchCommandLineLauncher class for improved readability to enhance maintainability and simplify future updates
added database - specific beans for HSQL and JDBC transactions in BatchMetricsApplication to enable efficient database connectivity and transaction management in batch processing
replace UnauthenticatedHttpService with HttpService in GlowrootLogHttpService to improve HTTP service handling capabilities
pdfbox - 2852 : apply patch from peter fassev from issue # 2636 . fix regression from pdfbox - 3647 .
removed redundant ` notifyAll ( ) ` and synchronized ` close ( ) ` calls from ` DocumentsWriter ` and added synchronized block for ` deleter ` in ` DocumentsWriterPerThread ` to improve performance by reducing unnecessary method calls and ensure thread safety during writer operations
added methods for handling multiple option options and validation constraints in UiBinding . java to enhance configuration flexibility for UI components
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency in builder configuration to ensure proper usage of string representation when setting reflective operations
if full save , do n ' t update the subtree of the tree for a full save
refactor Affix and Dictionary classes to utilize a map for condition patterns instead of a string to improve flexibility and maintainability of condition management
replaced explicit type specification with diamond operator in KrakenAdaptersTest . java to improve code readability and maintainability
removed unused import of CharTermAttribute from DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
remove incorrect comment that break the build in sourceforge . net
removed unsupported encoding check from VectorizedPrimitiveColumnReader to simplify the code and reduce unnecessary complexity
added logging logic and improved marker handling in HttpSolrCall . java to enhance logging clarity and provide more contextual information during Solr execution
[ scb - 2177 ] fix destroy instance bug ( # 2177 )
add test and fix defaultqueryrepository for level 0
updated message formatting in HubChangeExecListener . java to handle null values for databaseChangeLog and improve user feedback regarding communication failures
add decode hint to blackbox test ( e . g . plain text )
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompileStep . java ` and added a new test method in ` BuildReportIntegrationTest . java ` to improve type safety and ensure proper handling of compilation errors in the build process
update event handling logic in ObjectStore . java to simplify event count checks and improve query range handling
refactor validation constraint checks in ValidatedLocalValidatorFactoryBean to streamline logic to enhance readability and maintainability of the validation validation validation process
fix issue where world save / load on the wrong entity ( # 2105 )
[ intrinsification ] remove redundant type check
enable debug log to investigate gump failure
removed the WantedAnywhereAfterFollowingInteraction class and updated stack trace assertions to simplify the code structure and improve clarity in error reporting
validate owner and key addresses in PermissionUpdateActuator and PermissionAddKeyActuator to ensure transactions are only executed with valid permissions and improve error handling
make sort of command in scriptlauncher easy for user
chore : [ cloud ] update go _ package to match open source code ( # 93 )
refactor ` BaseSingleTreeBuilder ` to use ` setProperty ` instead of ` addProperty ` for properties to improve clarity and consistency in property management
updated AsmLoader to accept a ClassLoader parameter in its constructor to ensure the correct class loader is used for loading classes
pdfbox - 3640 : r8 , rrcurve now handle uninitialized point ; add warn to type1charstring class
updated Java2TypeScriptTranslator to conditionally export class declarations based on whether the scope is defined to improve the formatting of generated TypeScript code for better readability and structure
updated the HttpClientTest to use AbstractHandler and added an import for OutputStream to improve handling of request streams and ensure proper resource management during tests
simplified the syntax for adding listeners in HelloInput . java to improve code readability and maintainability
hhh - 13850 make sure where the synthetic square path be find , not the root square path
move test case to owncloud scope to allow eclipse to run the ' test ' module
fix for # 3001 , create new image when different color component
refactoring libgraal initialization to allow user to set the jvmci native library location qualifier
[ beam - 6642 ] remove dataflowportabilityapiUnsupported from pardotest
fix npe when request be null ( # 5626 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization of objects
renames occurrence of callstack . getcallstack to callstack . getcallstack to well reflect the callstack ' s actual state
log warn when max - size per _ node config do not allow any data in map
change return value from AST to LST in multiple Java files to accurately reflect the purpose of the elements in the recipe
- fix a bug in the threadedacousticscorer ( # 33 )
[ java ] do n ' t throw from an assertion failure in nethooks . runlock .
make test more robust by use window ( # 355 )
added overloaded ` makeString ` methods to ` ParallelIterable ` , ` RichIterable ` , and ` AbstractMultiReaderParallelIterable ` classes to provide a unified way to generate strings with specified parameters for function names
updated the order calculation in OidcServicesManagerRegisteredServiceLocator to use a static final constant to improve code readability and maintainability by centralizing the order definition
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor to allow for customizable weak associations based on provided rules
refactor Deflater class for improved performance to enhance compression efficiency and speed
added exception handling for ` Throwable ` in ` Font . java ` to ensure that ` IOException ` is properly thrown when an error occurs during font loading
return empty version if type binding can not be find
refactor the ` place ` variable and its handling in ` NearbyListFragment ` to streamline attribute loading and improve code clarity by reducing unnecessary variable declaration
changed content type check from case - sensitive to case - insensitive in MailConverters . java to ensure accurate matching of content types regardless of the original case
update the AUTH _ MAGIC constant to public and modify the OpenSSH private key formatting in OpenSSHPrivateKeySpec to allow external access to the AUTH _ MAGIC and ensure the private key format is consistent with the expected format
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter and updated related logic to enable dynamic updates of suggested folder names based on the state of the folder name binding
replaced specific Hibernate annotations with a wildcard import and modified entity retrieval logic to streamline import statements and enhance entity management functionality
updated import statements for DefaultOAuth2RequestFactory and added a new method to TofuUserApprovalHandler to ensure compatibility with the new request handling framework and enhance user approval functionality
fix name convention not apply to tag value ( fixes # 645 )
test : add dump function for fast path ( # 2214 )
6986400 : change cookie to cookie2 in 6980004 fix
added a static method ` charCodeAtUnsupported ( ) ` to ` Platform . java ` and updated references to it to centralize the method logic for determining unsupported operation across platforms
added functionality to toggle the " Clear All " button in OverviewActionsView to enhance user experience by providing a feature toggle for clearing all tasks
updated desiredRepoVersion variable to be final and modified cluster version creation logic to ensure immutability of repository version and optimize cluster version creation logic
remove memoryleaktest since that be a fragile way to check memory leak . we can detect memory leak in our stabilizer test
modify the return statement in ServletTester to include the local host address to enhance URL handling to include local host information for better diagnostics
added a setting option for MVDWAPI in the ServerListener and Settings classes to enable MVDWAPI integration in the environment for better configurability
fix partition assignment test by assert cluster size before terminate node
added SingletonHolder class to facilitate singleton retrieval for FFIProvider based on JNA availability to improve performance by allowing for instance creation when JNA is not available
tika - 3227 -- add test for hierarchical wFileList ( ) in batchprocesstest
added null checks and improved handling of collections in MongoTemplate to ensure robustness and prevent potential NullPointerExceptions during object saving
fix wrong position when directinputcount and directsuccessorcount be false .
added a new private BigDecimal field ` accTradeValue ` and its getter method in ` BithumbTicker ` , and updated the parameters in ` BithumbTradeDemo ` to use ` CURRENCY _ PAIR ` to enable tracking of trading trading values and ensure proper initialization of trade history parameters
fix thread - safety issue of update segment log ( # 1972 )
replaced hardcoded maximum parallel tasks with a constant value of a constant to improve maintainability and readability of the code
replaced ArrayList with CopyOnWriteArrayList for managing header and data readers to improve thread safety and performance in concurrent scenarios
updated multipleDict - related Java classes to maintain consistency in class naming and structure to ensure compatibility with the latest updates in the dictionary implementation
- fix a npe in the clip ( ) method when destbuffer be null .
add a sleep to make sure camel - jbang work consistent across vm
updated conditional check to use ' > ' instead of ' = = ' when verifying if the startCycle is greater than the currentCycle to ensure correct handling of the currentCycle state in the DelegationService
tweak jdbcexpiringcodestore to have 10 char instead of 6
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure correct matching of UniqueConstraint instances based on their table name
refactor code to improve clarity and efficiency in handling language codes and descriptions to enhance maintainability and readability of the code
do n ' t collect stacktrace for unlikely arrayindexoutofboundsexception .
add listimagesbyreferencefilter ( ) and withfilter ( ) method ( # 801 )
camel - 12562 : camel - core - optimize and allow to configure bridgeerrorhandler on jms endpoint
added checks to ensure proper handling of specific conditional statements in OpExclusionUtils . java to improve robustness by preventing unnecessary operations when no conditions are met
added return false to DatabaseCommand . java to ensure the method indicates a successful operation
updated Politicianian identifiers in HonestPoliticianExample . java to reflect new Politician parameters and session management to improve the accuracy and functionality of Politicianian handling in the application
[ zeppelin - 1887 ] . too much performance improvement for read configuration file
camel - 7045 : camel - restlet should use port a 0 by default .
remove case . wal _ sign from schematicformat ( # 1391 )
set a maximum query length to 100M in QTestUtil and remove overridden configurations in SessionState to optimize query performance by limiting the maximum allowed length
refactor WebServer to encapsulate fields and introduce a base method for configuration creation to improve encapsulation and ensure consistent server version handling
[ hotfix ] [ s3 ] rename sink name to reflect the new name of the kafka source
modified the conditional logic in HiveConf and HiveSparkClientFactory to use appName variable instead of a hardcoded value to improve flexibility in configuring Spark application names and ensure a default value is used if none is specified
polish ` ` remove use of object . equals ( ) ' '
simonstewart : add a more reliable way to restores a window in the chrome server .
refactor embedded cell path handling in filesystem classes to improve clarity and structure of path resolution
updated the assertion in TestXMLEntityExpansion to check for null messages to ensure that entity expansions are correctly identified in the exception message
update table offset and length calculations to mask out sign bits to ensure consistent handling of integer values within positive range
remove the customize method that assertions the custom field to ensure that the custom field is properly initialized before use
refactor buffer allocation and boundary checks in LineChartRenderer . java for improved clarity to enhance code readability and maintainability by using local variables for coordinate coordinates
refactor flavor checking logic in AndroidBinaryDescription to improve handling of flavors to enhance code maintainability and simplify error messaging for unsupported flavors
updated buffer assignment to use ' i ' instead of ' offset ' to ensure correct buffer indexing in the rendering process
added new classes Property , PropertySuper , and TestClassResolutionFail with a test case to establish a structure for managing properties and validate class resolution errors
fix possible deadlock when terminate node
replaced ` FilterChainProxy ` with ` FilterChjainProxy ` and refactored the ` VirtualFilterChain ` constructor to remove unnecessary ` url ` parameter and improved logging syntax to streamline the code and enhance clarity by using ` UrlUtils ` for URL construction
[ flink - 22842 ] [ aggregation ] fix the bug of percentile function that return the wrong value
added checks to load tables in MetaDataBasedSQLCompletionProvider and modified how the MDTable is retrieved in QueryTypeAnalyser to ensure that the schema is loaded before proceeding with operations , preventing potential errors
initialize ` baseType ` to null and initialize literal prefixes and suffixes in ` MutableColumnDataType ` to improve memory management and clarify initialization of column data types
8151014 : clean up some javadoc warning in javax . swing . plaf package
refactoredequality and readability of the EvaluatorFactory class to use singleton instances instead of static methods to improve performance by reducing redundant object creation
updated configuration paths from " / : osx _ x - 64 - 64 " to " / : osx _ x _ 64 _ 64 " in multiple integration test files to ensure consistency and correctness in target requirements across the build process
added sound effect handling in AllAppsView . java to enhance user experience by enabling sound feedback on interactions
updated exception type in the main method signature from ` Exception ` to ` IOException ` to provide more specific error handling for input / output operations
added granularity support for leftAxis in BarChartActivitySinus to improve precision in chart representation
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by consolidating version comparison logic
updated test structure and assumptions in ContextHandlerGetResourceTest . java to support multiple operating systems and ensure correct directory structure to enhance test robustness by ensuring compatibility with different operating systems
added close methods to various classes to ensure proper resource management and prevent potential resource leaks
improve mockappender to reduce time sensitivity
[ beam - 4142 ] improve error message when get a resource from a directory
isometrictiledmaprenderer . added license info , small cleanup
fix re - binding of the item handle twice
refactor Config and Attribute classes for improved readability to enhance maintainability and clarity of the codebase
simplified condition checks in OtherActivityTouchConsumer . java for handling downHitTarget to improve code readability and maintainability
replaced the theme checking logic with a configuration - based approach to improve flexibility in managing navigation buttons based on the current device theme
bugfix : throw to help with miss language
6996563 : 6984311 change forget to update vmstructs . cpp for new field _ operands
added a new method to calculate the position of elements within a block formatting context to improve the layout handling by incorporating block formatting context for better positioning
added a method to get standard error output and modified process launching to improve error handling and provide user feedback on process errors
added null checks for operator and improved error handling in CheckedListReplaceAll to ensure robustness by preventing null operator exceptions and providing clearer error messages
added tests for blocking write operations and improved callback handling in SslConnectionTest . java to enhance connection stability and ensure proper handling of asynchronous write operations
added and removed listener registration in DeviceFlag and updated the visibility of defaultValue in FeatureFlags to improve listener management and ensure consistency in device configuration handling
added import statement for JUnit Ignore in GatewayRSocketIntegrationTests . java to temporarily disable tests due to an import issue with version 2.2 . 0
added import statement for MalformedURIException in StandardRequestHandler . java to handle malformed URI exceptions effectively
[ # 8550 ] instructorfeedbacksession : click on ` ` delete ' ' on ` ` delete ' ' should not delete the last element
refactor KrakenStreamingTradeService to improve synchronization handling to enhance code readability and maintainability while ensuring proper synchronization
updated print statement from ` System . err . println ` to ` System . out . println ` in ` ChangeableUrls . java ` to ensure consistent output style for better readability
mahout - 633 : add option to randomaccessrow since it ' s now possible to do the same operation a clone ( ) .
bug cs - 15648 : for volume delete volume , create usage event after successful volume
modify Hive job configuration handling to dynamically set the execution path based on the settings to improve flexibility and ensure correct file system management based on the job configuration
[ beam - 6305 ] upgrading beam - guava to version 2.6 . 0 ( # 7939 )
register internal cctprovider when reset internal state . resolve issue # 259 .
fix npe when receive a multi - user chat message ( smack - 324 )
save should check if the file can be write and mark it a dirty when saving .
added FolderSyncActivity to handle folder sync navigation in DrawerActivity to enhance user experience by providing a dedicated navigation for folder synchronization
[ flink - 24042 ] [ test ] fix the unstable ut in sequentialchannelstatereaderimpltest
fix a bug in spanishtreenormalizer that could lead to an off - by - one error
simplify binary point writing by using packed value slices to improve efficiency and reduce memory usage
added LocaleRandomizer and its test class for managing locale randomization to ensure consistent behavior and test coverage for locale - related randomization functionality
add unit test for mime type detector ( patch from daniel )
update to late version of hwpf version ( # 494 )
move the ` AccessController . doPrivileged ` call to encapsulate the ` run0 ( ) ` method execution to enhance security by ensuring ` run0 ( ) ` runs with elevated privileges
make http / 2 async parser . read timeout default to 0
updated the initial delay value from 120 to 600 in TimelineMetricConfiguration . java to improve the performance and responsiveness of the application
corrected the spacing in the primary key key validation error message to ensure proper formatting for better readability and correctness
added date formatting functionality using Joda - Time in ThirdEyeJiraClient . java to improve date handling capabilities for issue tracking
[ java ] apply the patch provide by thomas dubovikov .
added a constant for maximum scalar replacement code size and updated the boolean condition to ensure that scalar replacement is enabled only when the entire class length supports it
added DATE _ TAKEN to the projectionTest and fileSortOrder assignments in MediaProvider . java to incorporate additional media data format for better sorting accuracy
updated image positioning calculations in TexturePacker2 . java to correct image positioning to ensure correct image positioning for image rendering
issue # 3468 - jetty - websocket - filter should re - enable the present websocket upgrade when it ' s need
added shutdown calls for validateSignService and trxHandlePool in Manager . java and initialized nodePersistTaskTimer in NodePersistService . java to ensure proper resource management and prevent potential memory leaks
added support for RawJsonRequestBody in the Swagger generator and created a corresponding processor to enable processing of raw JSON data in the service generator
added a new method ` newTarget ` that initializes ` Target ` objects with specified parameters to facilitate the creation of ` Target ` objects with specified target types and extensions
updated ListBeanContainer to accept an ArrayList instead of a List to ensure compatibility with the expected data structure when returning an list
hbase - 27343 addendum fix the typo in testmetricsregionserver
camel - 5388 : fix camel - cachedoutputstream to ensure temp file be delete on completion . thanks to dan revel for the patch .
set deviceid foreltonika ( fix # 567 )
fix build file parser to use correct character source
added null check for operator before assignment in JCAssignOp and created a new Test class to ensure proper handling of null operator assignments and demonstrate usage of UnknownClass
added enableAccountHandling flag and conditional post - creation callback in BaseActivity to allow dynamic enabling of account handling based on the new flag
[ geos - 8920 ] use heuristic _ find _ main ( polygon ) to avoid infinite loop
refactor DrillViewTable to use List < String > instead of View for path handling to enhance flexibility in handling different types of views within Drill
updated the constructor of PooledByteBufAllocatorL to include additional configuration options to enhance flexibility and control over the allocator ' s configuration
updated the handling of short arrays in ObjectInputStream and added a new CloneArray class for testing to ensure correct serialization behavior for short arrays in ObjectInputStream
added a new configuration variable for the IO thread pool size and updated the executor initialization to allow customization of the IO thread pool size for improved performance
adapt to removal of debug class from jdk 11
added minimum range checks and updated polygon creation logic in LatLonGrid . java and TestLatLonGrid . java to ensure valid geometric data handling and improve testing robustness
simonstewart : adding a method ` ` invisibilityofelementwithtext ' ' to the expectedcondition class to easily refresh the content of a condition .
added an additional parameter for insertOverwrite in the replaceFiles method and updated related logic to enhance file management during insert operations by accounting for overwrite behavior
added a test method for obtaining the enclosing object of a class in ReflectorTest to ensure proper functionality of the reflector in handling inner classes
added " auto _ generate _ android _ facet _ sources " configuration and modified its value retrieval in IjProjectBuckConfig to enable auto - generation of Android facet sources for improved configuration management
updated log messages to include descriptive information to improve clarity and context of communication failure messages for better user understanding
added properties property handling and corresponding getter / setter methods to Link class , and created a test for correct configuration in QuickLinksConfigurationModuleTest to enhance functionality and ensure correct behavior of link resolution in the new configuration
updated ` InitialConfig ` and ` YamlConfigFileDTO ` classes to implement ` toString ` and ` toString ` methods to improve object representation for better debugging and logging
fix generic on briding server and client call ( # 5194 )
refactor class loading methods to include CallerSensitiveAdapter and improve ClassLoader handling to enhance security and clarity in class loading operations
fix requestitemrepositoryit fail when authentication fails
[ 3.0 ] use ` ThreadPoolExecutorEx ` for threadpoolexecutor ( # 9740 )
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from outside its package
replaced deprecated imports and refactored the TimeStepdefs class to utilize Jchronic for better functionality to improve code maintainability and leverage existing features for better clarity
add the ` ` spark _ isolated ' ' and ` ` spark _ recessive ' ' tag for scala . close # 44
updated RestProxyFactory and related classes to use the URI from the exchangeSpecification to streamline proxy creation and improve code clarity by eliminating unnecessary parameters
updated print statements to simplify output formatting for better readability to improve code clarity and maintainability
camel - 20297 camel - kafka : allow kafka autocommit to be disable by default .
removed lock release method and added output statement call in LoggingExecutor and StandardLockService to streamline lock management and ensure proper handling of database change logs
add more information to suppress warning and minor ide warning
make database . closefiles ( ) , synchronize to avoid concurrency issue
camel - 10141 : fixed property order for spring - boot auto configuration
updated the ticker adaptation to use the correct symbol symbols to ensure accurate representation of trading data in the VirtEx market data
fixed compile error due to miss package
replace UUID generation with system property retrieval for testId to improve flexibility and ensure unique test IDs are generated
[ flink - 23402 ] [ runtime ] fix concurrentmodificationexception in defaultjobparametersconverter
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
set the height scale of the heightmap using heightScale instead of 256 to ensure consistent behavior across different screen sizes
modify the equality check in SecurityConfig and update tests to assertNotSame for clarity to ensure that the attribute is not considered a string and improve test accuracy
# ! fix default value for dump - partition - id
added tests for TronTXOutput and TronTXOutputs classes in UTXOSetTest . java to ensure proper functionality and validation of UTXO outputs in the test environment
[ java ] fix unusedformalparameter false positive with new name
pdfbox - 4892 : avoid a nullpointerexception find via oss - fuzz
added a test for overriding previous restart parameters in JsrJobOperator to ensure correct behavior of job restart properties when parameters are overridden
added a new boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` to provide functionality for managing batch cascade behavior in the database platform
removed redundant initialization of Principal before initialization to streamline the code for better readability and maintainability
refactor core closing logic to use a multithreading executor instead of a single thread to improve handling of multithreading to prevent potential blocking issues during core shutdown
added visibility logic for mActionsView based on fullscreen progress to ensure mActionsView is visible when fullscreen is true
refactor parameter handling in RunIdIncrementer to use a default constructor to improve code readability and ensure parameters are always initialized before use
update BasicEntity and TestUtil classes for functionality improvements to enhance code organization and maintainability
added test cases for getMatchedDevices in SchemaRegionBasicTest . java to ensure correctness of schema region authorization logic
emit metric event error when it fail ( # 9965 )
fix # 4844 add max value check to the eigenvector centrality
replaced registry port initialization with a dynamic random port assignment in LookupIPv6 . java to ensure the registry port is dynamically set based on the used random port
fix # 2303 : make geometryinfo . getindices ( ) and geometrytype . setnorm ( ) consistent across different adapter
set theAmplifier to 0 when certain conditions are met to ensure the semantic planning functionality is more accurate with respect to the intended behavior
refactor TubeCalc class to improve readability and maintainability to enhance code maintainability and simplify future updates
fix : enable health check by default ( # 4874 )
defaultvalidator : add validation for group class to be a immutable list .
added headful annotation and a timeout annotation to JList to address bug 8057791 to improve test stability and prevent hang - related issues
modified the scheduled executor service to use daemon threads to allow speedment applications to exit via main method completion fix # 322
fix lexicon version number when use the start with ` ` crad ' '
added a check for reflection access in JavaAdapterFactory to enhance security by ensuring proper reflection access
add a lazy session creation option to camel - example - mina
modified the initialization of IO context to include a RecordReader parameter to enhance flexibility and support for handling RCFile record readers
deleted ClassLoaderHolder . java and LoaderManager . java files to remove unused classes to streamline the codebase
added a method to set workspace roots and modified file existence checks to enhance file handling robustness and ensure correct file operations during configuration changes
added try - catch blocks for registration and unregistration of session callbacks in PackageInstallerCompatVL . java to handle potential exceptions that may occur during session callback registration
updated index file names in TestBackwardsCompatibility . java to remove unnecessary directory structure to streamline code for better clarity and maintainability
[ hotfix ] [ akkarpc ] allow customization of akkarpcserviceconfiguration
hbase - 9669 testexportsnapshot fails on slow machine due to timeout
pdfbox - 2852 : remove unneeded null check ; set it only when need
added a new test class SslConnectionTest to verify the SSL connection is closed before filling to ensure that the SSL connection is properly managed and resources are released
added validation for IPv4 and IPv6 addresses in InetAddress and NetworkInterface classes to ensure proper validation of address families and families
added a test method to validate date serialization in a collection in DefaultTypeAdaptersTest . java to ensure proper handling of date formats in JSON representation
improve the javadoc for message . getlength ( ) , see # 241 ( # 242 )
nifi - 12081 fixed an issue that could cause the putdatabaserecord to fail to generate successfully
adjust loop boundaries in TableOutput . java to ensure correct alignment of the running width based on the updated width
pdfbox - 4892 : simplify code , a suggest by valerybokov
apply high priority for format string warning , which show up in the ui
add a property to skip non - final loop variable could be final
updated PDFExporter to use PDF version 1.5 and modified sample sample in PDFExporterTest to use Java to improve PDF generation capabilities and align with updated project structure
added a new test class ` LdapUserDetailsMapperTests ` to validate role attribute mapping to ensure correct authority handling for user details in the LDAP mapping process
[ bugfix ] ldap connection timeout be configurable by default .
8209504 : [ graal ] vmtestbase / nsk / jvmti / scenarios / sampling test fail with ` ` too small stack of resume thread ' '
renamed several classes related to pixel data handling to improve consistency and clarity in the codebase
replaced ` shouldCacheIterator ` with ` shouldAvoidAllocation ` across multiple hash map classes to improve clarity and consistency in handling cache entries
added a condition to check if the handler is invalidated during gesture state checks to ensure that the handler does not process gestures when in an invalidated state
updated mMaxDistanceForFolderCreation and mOverScrollPageIndex variables to improve the responsiveness of folder creation calculations
# 1443 - update ociconfigschema to support property placeholder ( # 1446 )
ninja - fix typo in @ test ( ` ` testjsig . java ' ' )
fix mana get mana from item that no long exist in stack . close # 359
regenerate client with updated copyright year ( # 4382 )
[ java ] suppress warning on a non - serializable instance field in p11tlprfgenerator
updated the validation logic in DataRegion to use a boolean variable for checking if the tsFile should be validated and added a new validation check to improve code clarity and ensure accurate handling of file existence and validation of TsFile
github # 193 : add string . format / format for switch - only pattern .
updated error messages in ComparableSubjectTest to use MyTest . MyTest . ComparableType instead of the reason to improve clarity in error reporting for conversion issues
[ bug - 62594 ] make sure XML content be always process in standalone mode ( e . g . write out )
updated the capacity limit condition and improved exception message formatting in Int2ObjectCache . java to enforce maximum capacity limit and enhance clarity of exception messages
replaced ` securityFilterChains . sort ( AnnotationAwareOrderComparator . INSTANCE ) ` with ` securityFilterChain . sort ( AnnotationAwareOrderComparator . INSTANCE ) ` in ` WebSecurityConfiguration . java ` to ensure the ordering of security filter chains is consistent during configuration
remove unused TimeInForce . GTC parameter from BinanceTradeService . java to simplify the method signature and improve readability
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update its implementation to improve the handling of float range randomization and ensure proper range checks
changed the escape character of KEY _ SEP from ' \ 0 ' to ' \ t ' to ensure proper text formatting for better readability
camel - 7999 : explain eip / component doc for activemq so it can be use by camel and spring etc .
update SourceUtils to handle missing field error in getUpperBound method and add unit tests for it to ensure correct functionality and validation of the getBound method
refactor the logic for creating filter predicate predicates based on Parquet type to improve code readability and maintainability by encapsulating the filtering logic in a separate method
added a conditional check to ensure the original artifact name starts with the required suffix in BatchPropertyBeanPostProcessor . java to prevent potential IndexOutOfBoundsException when extracting the original artifact name
load truststore by certpath when request be empty ( # 4990 )
modified the handling of null values in ` Config . java ` and added a new ` DnsFallback . java ` class for testing to improve robustness of boolean configuration and ensure correct functionality through testing
ww - 3242 add stacktraces when write tag fails
changed the data type from boolean success to String and updated the corresponding JsonProperty annotations to facilitate the handling of URL and asset information in JSON serialization
replaced the existing Privilege implementation with a try - finally block to ensure proper resource cleanup to improve resource management and prevent potential memory leaks
updated scope names from " address " to " email " in CommonOAuth2Provider and its tests to simplify scope management by removing unnecessary " address " and " phone "
replaced the asynchronous submit method with a dedicated Start class for better encapsulation to improve code clarity and manage the execution flow of selector updates
fix ( wled ) : send warn if segment index be - 1
replaced the isValidCaller method with a VALID _ CALLERS set in VectorizationProvider . java to improve performance and simplify the validation process
added a new method ` caseJSRInst ` to the ` InstSwitch ` class for handling JavaScriptRInst to facilitate the registration of JSRInst for improved functionality
increase transaction handle for activatingsubscriber to support concurrent transaction ( # 5590 )
refactor database statement preparation and deletion logic in DBMSProcessor . java to improve code readability and maintainability by refining update and statement handling
remove elevation a it be no longer need for api < 4.4
refactor identifier field to remove unused variable to improve code clarity and reduce redundancy
switch read and write operations to use AccessController for file access in SandboxFileManager . java to enhance security by ensuring file access respects security policies
updated Groovy parser and printer to improve parsing and handling of binary operations to enhance the parsing and printing functionality for better semantic information
updated log message format in MetaDataFetcher . java to include the exception class name to improve clarity of log messages for better debugging and traceability
updated byte handling and variable names in RecordInputStream , UnicodeString , and HSSFWorkbook classes for consistency to improve code clarity and ensure proper functionality when reading and writing Unicode data
add a testcase to reproduce bug in filedownloadviaproxy
fix shutdown sample to properly handle cancellation of password request
added null check for statistics before handling cache to avoid potential NullPointerExceptions when statistics is null
added a test method to remove an object from an explicit collection in MongoTemplateTests . java to ensure proper functionality of the removal of objects from explicit collections
update copyright year to 2022 in order to acknowledge bad copyright header
[ beam - 6707 ] fix newline issue in coder error message
added a new private boolean variable and modified scroll handling logic to improve scroll behavior based on the clear all button ' s visibility
hive - 25566 : iceberg : disable engine _ hive on metadata load by default ( thejas nair , review by denys kuzmenko , krisztian kasa , and peter vary )
refactor error handling by replacing ` instanceof ` with a new method ` isAddressInUse ` in multiple classes to improve code clarity and maintainability by centralizing address in a utility method
added a command - line argument to the TestNestmateAttr class to specify the classpath for the test class during execution
fix the schema detail type ( for good theming )
add some miss @ override annotation and remove the unused import
fix ( sql ) : fix transaction handle for nested parent transaction
make fetch size in queryprocessexecutor configurable .
[ java ] : use noopidlestrategy for the driver conductor in embeddedpingpong
refactor block call handling in HttpClientIntroductionAdvice to utilize a new handleBlockingCall method to improve readability and maintainability of the block call logic
ambari - 8223 . slider view default hdp version to stdout ( gour saha via srimanth )
added loaderClass and loaderData while updating and refactored close methods in JavacProcessingEnvironment . java to improve service loader management and ensure proper resource cleanup during processing
added DeepCloner class and modified method signatures in ParameterizedRobolectricTestRunner and RobolectricTestRunner to improve deep cloning capabilities and code organization
added a bind for the JETTY _ SHOW _ STACKTRACE annotation to ResourceBase . java to disable stack trace logging for the web server output
8022598 : object . getprototypeof should return null for host object rather than throw typeerror
replaced hardcoded OopField instances with static imports and refactored the SystemDictionary class to improve code maintainability and reduce dependencies on hotspot types
jsonwebkeyendpoint : fix serialization of rsapublickeylistview and jsonwebkeyendpoint ( # 4367 )
[ gr - 38768 ] do n ' t use native - image . spawnisolates when use - only - writable - imageheap .
updated MBeanServerMXBeanUnsupportedTest to improve test coverage to ensure more comprehensive testing of MBeanServerMXBean functionality
added import statement for OrderClassLoaders in MavenPluginCollector . java to utilize OrderClassLoaders for improved class loading functionality
updated method signatures to specify the return type of ` validator ( ) ` and added ` getOwnerAddress ( ) ` to multiple actuator classes to enable retrieval of contract addresses as needed during the creation process
add a simple main ( ) that can be run from your ide easily to run a broker without do a full integration test
make binaryclient more efficient ( # 5151 )
propagate empty index to proto annotation instead of rely on source / target index of the proto annotation .
[ java ] remove registration of a new async correlation id from the drivereventsadapter before add the new one .
added multiple calls to saveConflict with a boolean parameter in FileDataStorageManager and FileDownloader classes to ensure that conflicting file states are managed correctly during system operations
added generic on map and related variables in multiple Java files to improve type safety and code clarity
replaced instances of ` StrUtils . splitFileNames ` with ` splitFileNames ` in multiple files to streamline code by removing dependency on the common utility class
fix issue where remarks report be not generate for oracle and mysql .
added a serialVersionUID field to the MockMethodInterceptor and suppressed warnings in the PartialMockingWithConstructorUsingEasyMockTest class to ensure proper serialization and suppress deprecation warnings for mocking methods
replace date handling with system time tracking in FileChangedExclusiveReadLockStrategy . java to improve accuracy and clarity in trigger time tracking logic
[ hotfix ] [ table ] fix classloader leak in execution
added buffer change handling and scroll logic in TerminalView and TerminalTextViewOverlay classes to ensure proper rendering updates when text buffer changes
fix the configuration file name to include the service pid
refactor freeze action handling to differentiate between allowing TVM freeze v2 and other freezing actions to improve responsiveness and functionality based on configuration settings
allow configuration of insecure tl when create trust manager ( # 4334 )
refactor the searchSubPackages method to use a conditional operator for source and class paths to simplify code structure and improve readability
updated the handling of edge and title columns to use case - insensitive comparisons to ensure consistent behavior when matching edge IDs in the exporter
added cascadeType to the OneToOne relationship in DefaultUserInfo . java to ensure that the target address is added to the OneToOne for better relationship management
improve message . equals ( ) by use arrays . equals ( data ) instead of getmessageid ( ) . hashcode ( )
updated response body formatting to ensure proper encoding of the ISO - 8859 - 1 value to improve clarity and consistency of character representation in tests
[ flink - 6373 ] [ rocksdb ] remove iskeyserializertypevariablesized from rocksdbserializablekeybuilder
added static permission check in ProtectionDomain methods and utilized it in SubjectDomainCombiner to enhance security checks by ensuring correct handling of static permissions during domain access
added null checks for recipe and improved formatting for constructor parameters in RecipeHandler andFloatingFlower classes to enhance code robustness and maintain consistent formatting
added logic to read a parsing stream if a valid parsing index is found to improve robustness by ensuring the reading process starts from a valid input
added a ` showConnectionErrorPopup ` method to ` UploadMediaDetailFragment ` and updated the handling of exceptions in ` UploadMediaPresenter ` to improve error handling and provide a clearer user feedback on connection errors
added a new file for Issue596 and updated the HTTP handler logic to handle unsupported media types properly to ensure that unsupported media types return a 404 status , improving the robustness of the HTTP handler
avoid potential integer overflow in bitwise operation . patch by jbellis
fix checkstyle issue for ' inner ' class ( # 772 )
refactor ConsoleUIService to conditionally use standard input based on terminal configuration to improve user experience by enabling standard input in specific environments
replaced mock account management with a mock instance of TestAccountManagerCallback in ShadowAccountManagerTest . java to improve test readability and ensure accurate assertions
[ core ] remove unused field ' enclosingtype ' in astype .
renamed methods in ` Pairs ` for consistency and clarity to improve code readability by using more descriptive method names
nifi - 1602 : remove unnecessary timeout in putallcallable
[ issue # 6249 ] fix the npe when publish consumer info ( # 6249 )
[ java ] assign the source identity to the conductor when await a response to the driver .
added a new class TopTabAction that implements the Presenter interface to provide a " TopTab " action for a user interface
camel - 3562 : fix dynamic router eip to let the processor run in full mode .
updated test class annotations and imports in AggregateItemReaderTests . java to improve test structure and maintainability by using JUnit 4 annotations
updated method signature in AbstractObjectValueTypeMap to use generics to improve type safety and code clarity
added functionality to track the number of wikidata edits in AchievementsActivity and updated related classes to enhance user experience by integrating functionality related to edits through the appropriate UI
added a validation check for the length in OfflineSorter . java to ensure the length is within the acceptable range of short . MAX _ VALUE
make sure we report a cached bug if we see a load of integer overflow
renamed multiple dataset classes for consistency in naming conventions to improve code maintainability and readability by aligning class structure
enhanced exception handling by including the credential store type in the exception message to improve debugging by providing more context when invalid credential types are encountered
updated random number generation for v [ 0 ] and v [ 1 ] to ensure v [ 1 ] is always a multiple of 100 to improve variability in test cases
change the return type of the ` compareBy ` method from ` int ` to ` long ` and simplify the date comparison logic to improve performance by reducing unnecessary date comparisons
added SSL handling functionality to TestUtil and PGPropertyTest classes to enhance SSL property management and ensure accurate testing of SSL properties
fix # 1881 - enable safebrowsing on chrome
fix potential npe when load flicker configuration
added a condition to check if transcoding is disabled in DLNAResource to ensure proper rendering behavior when transcoding is disabled
fix tablediff exception when cell list be empty
added a new static string constant ` CustomIgnoreTag ` and logic to remove it based on the section ' s native code to improve code readability and maintainability by avoiding redundant tag checks
camel - 10394 : added optimisticlockingmessagehandler so that only one message be send to the aggregation server if it ' s the best to use it
support private model configuration property ( # 2729 )
modified PreferencesActivity to extend LimitlessIDEActivity and updated padding settings to improve UI layout by managing toolbar and fragment layout dynamically
deleted the ClusterNodeInfo class from the event bus implementation to the functionality provided by ClusterNodeInfo is no longer needed
removed unnecessary whitespace in return statement to improve code readability and maintain consistency
add debug output for handshake in ServerHandshaker to improve debugging visibility during handshake processes
added ` onTemplateChosen ` method to handle template selection and visibility logic in ` ChooseRichDocumentsTemplateDialogFragment ` to improve user experience by enabling functionality for multiple templates when the template is selected
added a HashMap to track duplicate node labels and modified label handling logic in ImportContainerImpl . java and ImportContainerParameters . java to improve handling of labels and duplicate labels during node import processes
created a new file R2303044ListSelection . java for list selection functionality to implement a simple GUI that tests item selection in a list
[ java ] minor efficiency improvement in a conductor by check for timeouts rather than keepalivetimeout .
added null check for mWorkspace in Launcher . java to prevent potential null pointer exceptions during execution
added a test method to verify the handling of compound properties in StepScopePlaceholderIntegrationTests to ensure that the compound property is correctly defined and compatible with multi - threaded step executions
refactor row count handling in StatsRulesProcFactory . java to streamline the new row count calculation and improve readability
update API method documentation handling to improve path handling and parameter management to enhance the efficiency and clarity of API method documentation generation
fix an npe in the notificationserviceimpl . action ( ) method because it be inefficient .
replaced ` CachingBuildEngineDelegate ` with ` CachingBuildEngineDelegate ` in ` DistBuildSlaveExecutor . java ` and updated the method signature accordingly to improve build engine caching behavior based on configuration settings
replaced RuntimeException with a more informative error message for JSON parsing errors to improve error handling by providing clearer context about JSON parsing issues
added a debug level log statement before logging messages in WidgetsModel . java to improve performance by avoiding unnecessary string formatting during debug mode
refactor Console and Scanner classes for improved readability to enhance code maintainability and clarity
modified the calculation of numTerms in SimilarityBase and added a new test for discount overlaps boost in TestSimilarityBase to simplify the logic and ensure correctness of state transitions
int - 2321 fix email test to also check for array presence when send
added new exit and quit methods with corresponding properties to Global . java and removed the duplicate quit method from ScriptingFunctions . java to standardize exit functionality and eliminate redundancy in the codebase
reduce duplicate code for sample configuration to reduce boilerplate
renamed methods from ` getFirstUnverified ` to ` findFirstUnverified ` and updated corresponding calls to improve clarity and consistency in naming conventions
server : fix the nullpointerexception cause by vmware
[ ci ] fix incorrect assertion order in resinacegiauthenticatortests
fix derkey . getbytes ( ) to accept 64 - bit address
fix system property fml . disabledmods - > fml . modstates
refactor account selection handling by replacing direct boolean assignments with a method to show the account chooser dialog to improve code readability and simplify account management logic
more detailed error when fail to connect back the stream in collectsink .
rethrow exception if result from validator smart contract call be empty
added null check for the root file before reading fields to handle potential null pointer exceptions when the settings file is empty
remove unnecessary check in pooledconnection when datasourcejndi be not set
updated default values of TARGET _ MB and WINDOW to 1 , and modified the size calculation in TestRefprocSanity . java to optimize memory usage and introduce a sink object for efficiency
fix ` ` could not write ' ' message to stderr ( fixes # 3219 )
set kac credential refresh delay to 100ms in kinesisconfigutil . java ( # 25788 )
replaced AlertDialog builder methods with showInfoAlert method for title and description to streamline the dialog creation process and improve code readability
renamed the variable ` test ` to ` pack ` and added a package argument ` args ` to clarify the purpose of the parameter and ensure it operates with the packing process
update Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUseCases . java to ensure compatibility with the latest Java version and improve dependency messaging
replaced specific imports with a wildcard import and added a method to check if a dependency is provided before adding it to dependencies to simplify import statements and prevent adding unnecessary dependencies to the dependency list
added a HashSet to track ZipFileInputStream instances to ensure proper resource management by closing unused ZipFileInputStream instances
rename BarcodeFormat from DATAMATRIX to DATA _ MATRIX across multiple files to improve clarity and maintain consistency in naming conventions
mondrian : change the sequencegeneratorsource so that a non - active event do n ' t interfere with other active event .
[ flink - 1779 ] [ runtime ] rename the function name from getcurrentyactiveconnections to getcurrentactiveconnections in org . apache . flink . runtime .
refactor annotations retrieval by replacing ` findAny ( ) ` with ` findFirst ( ) ` and adding ` toSet ( ) ` method in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java ` to improve code clarity and reusability by consolidating annotation retrieval methods
added support for ppc64 architecture in Bits and ByteArrayAccess classes to ensure compatibility with additional processor architectures
added a link to the repository when a activity cannot be resolved to provide guidance on the resolution process and accessibility of the application
transactionimpl : wait for long . max _ value rather than constant time
fix flaky test cause by datedatetime . now ( )
refactor BytesRef . java to improve code readability to enhance maintainability and simplify future updates
added a Toast message to inform users when Lollipop no longer work to improve user experience by prompting players to update immediately
added error checking for SQL syntax errors in the Parser and StatementTest classes to improve robustness and ensure proper error handling for malformed SQL statements
add a check to ensure vibration exists before proceeding to prevent potential null pointer exceptions when accessing vibration data
updated border styling and added arrow tail for primary key columns in DotRenderer . java to improve visual consistency and enhance primary key display in the UI
added methods to check if a configuration is encoded using a Parquet string to improve handling of encoded configuration values in the Hive framework
pdfbox - 2576 : catch for stringindexoutofboundsexception a suggest by valerybokov
updated X509Certificate class to improve certificate validation logic to enhance security and reliability of certificate handling
use uri instead of url to resolve issue # 393 ( # 394 )
updated image loading logic to utilize NetworkedCacheableImageView instead of a local ImageView to improve image handling efficiency and maintainability across the application
fix issue where drag icon be not visible in certain situation .
added a new static string ` controllersVersion ` and updated the version references in ` DependencyBank . java ` to ensure compatibility with the new controllers version and reflect the latest version of the controllers
renamed LaunchedURLClassLoader . java file to improve clarity and maintain consistency in class naming
fix http : / / forum . springframework . org / viewtopic . php ? t = 3526 .
[ ds - 3952 ] add no - cache header to login template
updated String formatting to use Locale . ENGLISH for locale - specific warning message to ensure consistent message formatting across different locales
added an import for Analyzer and modified the constructor of SolrQueryParser to accept a parameter to enhance flexibility by allowing different analyzer implementations
updated copyright year in multiple Java files to ensure proper attribution and compliance with licensing requirements
removed a semicolon from MainTest . java to ensure proper execution of the code
refactor TypeContributions class for improved readability to enhance maintainability and ease of understanding for future developers
added support for VoidColumnVector in VectorizedBatchUtil to ensure proper handling of VoidColumnVector types in batch processing
updated the method call to include the request name to ensure the correct name is used for each request in the StatementGenerator
remove superfluous istypematch method a it duplicate addconfiguration ( )
[ java ] prepare the timestamp for publication in the header for the allocation of an offer operation .
renamed methods in XForwardedRemoteAddressResolver to trustAll and maxTrustedIndex respectively to improve clarity and consistency in naming conventions
add a check to prevent bootstrap inserter from building when there be no bootstrap annotation
hbase - 8164 make maxfilesize and flushsize configurable at runtime ( chris baynes )
updated the calculation of commitList by replacing maxCommits with requestedCommits and adjusted the commitList fillTo method accordingly to ensure correct handling of the maximum commits value
8023475 : [ test bug ] test javax / swing / jslider / 6794831 / bug6794831 . java do not wait long enough for test result
added BuildInfo . BUILD _ ID metadata and refactored the fillInOriginFromCache method to utilize it to improve metadata handling for build - related metadata
removed unused import statements for TxInputUtil and TxOutputUtil to clean up the code and improve readability
fix double - checked locking with block call to future . markasfinished
added a default configuration setup in TezConfigurationFactory to enhance configuration handling for better integration with Tez
added null check for keyPurposes in TimestampedSigner . java to ensure proper handling when keyPurposes is not initialized
modified conditional logic in CustomPlaybackOverlayFragment to use ' else if ' for better readability to improve code clarity and maintain consistent conditional behavior
added a method to check if the most recent sound is null before stopping and re - adding playback to improve robustness by avoiding potential null pointer exceptions and ensure robust audio playback
fix simplebaseplayer ' s listener bug when receive newplayers
added new DecimalFormat instances and NumberTickUnits to enhance number formatting and display on the NumberAxis to improve precision and clarity of numerical data representation in the
refactor the builder pattern for TargetGraphAndBuildTargets and update the builder in DistBuildTargets to improve code clarity and simplify the target graph construction process
removed the IndexFileNameFilter class and modified conditions related to file naming in IndexFileDeleter . java to simplify the code structure and improve clarity regarding file handling behavior
use full bounding box for ladders instead of texture stitcher . close # 1251
added a compressionLevel parameter to several constructors and methods in ApkBuilder and SignedJarBuilder classes to enable customizable compression levels for certificate output
added a test method to include static fields in a JAR file to ensure that static fields are properly included in the generated jar
updated MetricFieldSpec to use UNDEFINED _ METRIC _ SIZE for BYTE data type and modified field size handling to improve consistency and correctness in representing byte data types
add some newlines to a failure message in an assertion error class .
replaced direct hash code calculation with Objects . hashCode for ID comparison to ensure better null safety and maintain consistency in hash code generation
added cache management annotations and a test for updating a post cache in Spring DataJPAJoinFetchFetchFetchPaginationTest to enhance cache handling and ensure proper initialization in the application
fix for ticket : 51 - mary . properties . pronunciationmodel when there be no locale
refactor FormBody builder usage and add a new test for null post handling to improve code clarity and ensure proper handling of null post cases
added dispatcher and shutdown logic to ClientSideSlb and ClientSideSlbTest classes to ensure proper resource management and shutdown the executor service
added conditional logic to adjust texture height based on whether the texture is flipped to ensure correct texture positioning relative to the clipping region
change error message to ` ` invalidconfigurationexception : on discovery strategy miss ' ' to be more specific
changed contextPath variable from final to non - final and added a default value if it is null to ensure contextPath is set to " NA " when it is null
[ drools - 6352 ] [ drools - 6373 ] avoid concurrentmodificationexception when load kie container ( # 2930 )
added a check for the BTreeMap root header during serialization to ensure proper serialization of the BTreeMap root header value
added functionality to check for precompiled headers and improved validation checks in the AbstractCxxSourceRuleFactory to enhance preprocessor rule usage reliability and ensure correct usage of precompiled headers
replaced WeakReference with a custom AccWeakReference to incorporate security context handling to enhance security by ensuring privileged actions are executed with the correct access control context
removed unused import statements and modified method visibility in ObjectMap , ObjectSet , OrderedSet , and OrderedSet classes to improve code clarity and encapsulation
changed the assignment of isDirect from true to false to ensure the correct initialization of the isDirect variable
fix duplicate audioEffectHelpTextsmap access in maryclient . java to improve code clarity and maintainability
[ scene2d ] fixed method signature change to return the coordinate vector
pdfbox - 5464 : use limit instead of capacity when read the buffer to avoid oome
added null check before removing the close hook on the context to avoid potential NullPointerException when context is null
updated border spacing logic in CellLayout and DeviceProfile classes to improve layout rendering consistency for folder items
refactor value numeric parsing to utilize a custom ValueNumeric class to improve code clarity and maintainability by reusing Number instances
updated the condition to check if the response is deferred before returning the login status to improve authentication handling by preventing unnecessary checks for deferred responses
updated argument parsing logic to use " -- add - to - start " instead of " -- module - start - ini = " to streamline command - line options for better clarity and functionality
introduced a default partition value assignment in DynamicPartitionFileRecordWriterContainer . java to ensure the correct default partition value is used when appending dynamic partition values
[ flink - 33063 ] [ table - planner ] add null check for operatorfactory when use source operator .
do n ' t prepend type to conflict id if no classification / classification be find
camel - 9440 : fix a nullpointerexception in kafkaclientconsumer . patch by jbellis
fix # 1467 annotationsubstitutionprocessor do not crash if a dependency be miss
renames plugin . jabberaccregwizz . gmail _ notifications _ enabled to enable _ gmail _ notifications .
doc : [ dialogflow - cx ] clarified popup flow in the secret key
updated the message count in LumberjackMultiThreadTest to use a dynamic concurrency based on available processors to enhance scalability by allowing more concurrent message counts in tests
add check for dead player when set player count limit
[ core ] fill out the miss @ return tag description
bug 10389 : update updateuser api call - require api key and secretkey
refactor switch - case statements into if - else conditions for better readability to improve code clarity and maintainability by standardizing the checks
camel - 13663 : add a profile to all the metadata export functionality
added exception handling for SQLIntegrityConstraintViolationException in Hive . java to provide clearer error messaging when attempting to drop a table using materialized views
changed the property name from " githubAccessToken " to " gitHubAccessToken " to maintain consistent casing for property naming
added a new class RoboExecutorService that extends Robolectric ' s concurrent package to provide a base class for better concurrency support in the Robolectric framework
added conditions to check if a group is a root group before adding subgroups to the menu item to ensure only root groups are added to the menu item to improve user experience
make sure service and span name start with ' / ' a valid path
8076995 : gc / ergonomics / testdynamicnumberofgcthreads . java fail with java . lang . runtimeexception : ' new _ active _ workers ' miss from stdout / stderr
updated method signatures and return types from ImmutableFlavor to Flavor in CxxPlatforms . java and KnownBuildRuleTypes . java to improve consistency and simplify data structures when accessing host flavors
updated SQL statement parsing and parsing to use PlainSelect for table options to enhance flexibility in SQL syntax and maintain consistency in SQL generation
refactor background drawable assignment in ChatViewerFragment to use a variable for clarity to improve code readability and ensure the background is fully opaque
test : migrate ctiteratortest to junit 5 ( # 4520 )
fix documentswriter . next ( token ) to clear the result
pmd : fix # 1121 false positive with initializer
updated the ` StateMachineConfiguration ` and ` StateMachineFactoryConfiguration ` classes to use ` @ EnableStateMachineConfigurerAdapter ` instead of a generic type to improve clarity and error handling when configurers are missing or missing
simonstewart : adding code to make the selenium test pas by remove the link check
ww - 4241 use int . max _ value instead of min _ value for max _ value
remove logic for retrieving the current scope in aggregatelifecyclelistener . ( scott phillips )
changed touchable insets from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to ensure consistency with touchable insets handling
removed null check for parsing in FencedCodeBlockParser to simplify parsing logic to enhance clarity
add timeout for socket read operation ( base on jm - 1037 ) .
added a sleep delay in the ElementAttributeTest class and propagate InterruptedException to improve test reliability by ensuring proper exception handling during thread execution
updated InputStreamReader to use UTF - 8 encoding when reading input to ensure proper handling of character encoding in the input stream
refactor List class for improved efficiency to enhance performance and reduce memory usage
fix # 1542 asyncfileimpl write stream error if write stream fail
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to establish their stability status documentation for better API documentation
server : do n ' t throw exception when there be no vhost for physical network ( # 3425 )
renamed the method ` retryUploads ` to ` retryFailedUploads ` and updated the logic for retrying failed uploads to improve clarity and functionality by distinguishing between failed and failed uploads
update test to use classFileVersionJava9 instead of getJavaVersion ( ) to ensure compatibility with Java 9 and later versions
add syntax to error message , and fix new copyright notice
add a method to remove all headers in AsyncHttpClient to improve header management and prevent potential memory leaks
replaced Vector with List and updated method calls for handling arguments to improve code clarity and efficiency by using more appropriate data structures
updated the default grid column value from 4.0 f to 3f to improve data consistency and performance
updated condition in CalcitePlanner to include a check for view creation to ensure that the presence of a defined table is not validated during view creation
modified date pattern and assertion logic in TestHS2HttpServer . java to ensure correct replacement of date patterns in the test
truffle : fix an npe in graphprinter . printstacktrace when an exception occur .
simonstewart : add a method to the test to be able to access pages with an insecure ssl cert
replaced a direct addition of BYTE _ BLOCK _ SIZE with a safe addition using Math . addExact to prevent potential integer overflow when managing byte buffers
ww - 3876 add locale information to feature vector encoder
resolve http : / / issues . apache . org / activemq / browse / amq - 2840 - do n ' t stop the thread if an exception be thrown
suppress papplet serial warning ( fixes # 408 )
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and updated references in ` OcamlDebugLauncher ` to simplify the class structure and use the current context for source path resolution
add a warning dialog for discard / discard change
added response type validation and improved error logging for unsupported response types and service access to enhance authorization checks for OAuth 2.0 response types and provide clearer error messages
added a validation check for the index variable in DrillBuf . java to ensure the buffer index is valid before processing
hbase - 8071 add inittablemapperjob method which accept inputformat class
replaced the redundant append method call with a new append method call to improve code clarity and maintainability
truffle / llvm : improve error reporting when no language be available during evaluation
added handling for reserved commit duration and validation for ' master ' in ReplicationHandler to ensure compatibility with Solr 7.1 and avoid misconfigurations during replication
solr - 37340 : dihcachesupport should not use name ' s cachevariablename ' a the cache index .
replaced the handling of EC key types from ` long [ ] ` to ` Object [ ] ` for EC key generation to improve type safety and directly cast the resulting data to BigInteger
[ hotfix ] [ runtime ] fix restarting to properly handle a cancellation
replaced singleton instance of ` RotationTouchHelper ` with a constructor that accepts a context to simplify object creation and improve code readability
[ unifi ] fix copying of port data when port override be present
updated method signatures and variable names to use ` unique _ thread _ id ` instead of ` int ` to improve clarity and consistency in thread identification handling
remove offer from the offerbookitem list to avoid duplicate item be add and remove if the item be already remove
update default tl protocol to tl 1.3 for test
updated mock interception logic to differentiate between Class and other mock objects to improve handling of mock interactions for better type safety and clarity
replaced constructors in NotLoadedException to include the current instance of NotLoadedException to ensure consistency in exception handling throughout the codebase
remove unused import and update intent data to null in FileDisplayActivity . java to eliminate unnecessary dependencies and ensure proper handling of file data
added error handling and improved file management in StoreDirect and StoreWAL classes to enhance stability and maintainability during file operations during compaction
added asynchronous task snapshot retrieval in AbsSwipeUpHandler . java to enhance task management during the swipe - up gesture handling
added a hidden flag to the CommandArgumentDefinition and updated LiquibaseCommandLine to use it to improve command argument handling by allowing the option to be hidden
change remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to improve reliability of test network connectivity
move the helper to styleinfo so that it can be reuse by stylegroup in geoserverextensions
added permission checks for launcher activities to enhance security to prevent malicious intents from being executed without proper permissions
added setId and setId methods to TiledMapTile and its implementations in TiledMapLoader , AnimatedTiledMapTile , and StaticTiledMapTile to enable proper handling of tile IDs for better map loading functionality
refactor Manager class to improve method organization to enhance code readability and maintainability
[ iotdb - 4667 ] add version parameter in jdbc connection example ( # 4796 )
added schema and includeSchema properties to LiquibaseGenerateChangeLogMojo . java to enhance change log generation logic to allow schema inclusion based on configuration
use put ( ) instead of putifabsent ( ) when create the registry in jmxregistry .
planner - 4014 improve log level of benchmark exception ( # 2928 )
made the ` doPutRecord ` method final in ` AbstractCacheRecordStore . java ` to allows for subclassing of the method in subclasses
fix path with space in the folder name . minor cleanup .
added new test methods for handling response content in FastCGIProxyServletTest . java to improve test coverage for content retrieval and ensure proper callback handling
added a call to startService for ReadInteractionsService to enable the reading of data in the application
added a conditional check for ' lintClassfile ' before logging warnings for missing annotation methods to improve clarity and control over when to log warnings based on linting preferences
bug 59207 - email : add smtp . port configuration to support multiple instance
add retry mechanism for reload sslfactory ( # 7488 )
updated SimpleDateFormat to include timezone formatting to ensure date formatting is consistent without timezone information
update assertion message in SpyingOnRealObjectsTest to clarify the reason for the exception due to mocking a private class
added functionality to check if the line ends with a line tag to improve handling of line endings in the inline box
updated filePathString initialization to handle null parent cases to ensure that filePathString defaults to " / " when no parent is provided
solr - 1319 : fix the build by remove an unused import
refactor input stream handling and add a test for Windows 1250 parameter in multipart requests to improve code maintainability and ensure correct handling of multipart requests
fix flaky test by disable exposure test
added a validation check for the current graph type in StatisticsControllerImpl . java to ensure the current graph is a dynamic graph to prevent runtime errors
add constructor to defaultbeancontext for eager init ( # 6764 )
camel - 8150 : jsonpath component now support ` ` suppress exception ' ' .
replaced the instantiation of ` ControllerLeaderLocator . create ( _ helixManager ) ` with a new method call to create it to ensure consistent handling of the controller leader location
updated usage messages in CLHSDB and HSDB to reflect command - line syntax changes to clarify command usage for improved user understanding
refactored the configureChunkProvider method implementation in FaultTolerantStepFactoryBean and removed unused listener registration in SimpleStepFactoryBean to streamline the chunk provider setup and enhance code maintainability
[ beam - 8470 ] remove the deprecated write class .
refactor ` ShadowAccessibilityManagerTest ` and related tests to improve accessibility manager initialization and method naming to enhance code clarity and maintainability by standardizing accessibility manager handling
add usage statistic to the flutter log ( # 2594 )
removed unnecessary ` SourcePathResolver ` from several source jar classes to simplify code structure and improve readability by eliminating unnecessary dependencies
refactor EnumDataTypeHelper into a dedicated class and simplify enum value retrieval to enhance code organization and maintainability by separating enum data type handling
updated log path handling in LogFileTests to use File . separatorChar for consistency to ensure correct path formatting across different operating systems
replaced instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple classes to ensure consistency and better reflect the functionality of retrieving map - red local work
added UnsupportedOperationException handling to the HiveMetaStoreClient to throw appropriate exceptions when dropping index tables
added condition to update disabled flags for the actions view to ensure scrolling is disabled when the view is not
added a specific highlighter configuration for non - Windows environments to ensure compatibility and optimal highlighter behavior across different operating systems
add local variable for request parameter to http header .
fix the way file path be handle in pinotfs ( # 3770 )
updated the formatting of the removeCaptureListener method call in SelectBox . java to enhance code readability and maintain consistency
set the value of _ metaDataComplete from true to false to indicate that metadata is no longer
refactor the ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` for asynchronous task removal to improve performance and ensure bitmap resizing occurs during animations
added environment variable handling for " release " in JsBundleGenrule to enhance build configurations by allowing specific flavor assignments
6500701 : enhance for loop with generic generates faulty bytecode
add test for crlf new line in comment and javadoc ( # 2196 )
added hubMode property and configuration logic to AbstractLiquibaseChangeLogMojo to enable setting and retrieving the HubConfiguration ' s mode when it is not null
removed redundant null checks for ' item ' and ' processedItem ' in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify code structure and improve readability by reducing unnecessary complexity
added error handling and improved path processing in IndexerMapReduce . java to ensure robustness by checking if the linkDb exists before adding it to the file input format
refactor setIndexerThreadPoolMethod to use reflection for its configuration to improve performance and reduce reliance on reflection for initialization
updated the SMS address format by removing the " : 5000 " character to simplify the email address for better readability
refactor MapJobExecutionDao to use a consolidated copy method for job executions to improve data integrity by ensuring modifications do not affect the original job execution
added a new file DownloadTest . java to implement a test for downloading PNG files from a specified image to facilitate the verification of the image file upload feature in the GDX framework
update language normalization logic and language comparison in multiple Java files to ensure correct language representation and improve consistency in track selection
replaced multiple exception throwing with a single argument exception for invalid types in GenericUDFRound . java to improve error handling by providing clearer exception messages related to argument types
update managedependencies to prevent a null pointer when use a managed dependency
added multiple Ant path matchers for various HTTP requests in SecurityConfig . java to enhance the flexibility and security configuration of the application
comment out fail testconcurrentdppInserts until fix
do n ' t create bean definition for the same class ( fixes # 2708 )
added an @ Ignore annotation in HttpClientRedirectTest . java to temporarily disable the test due to instability
[ openwebnet ] use schedulewithfixeddelay instead of scheduleatperiodically ( # 15183 )
remove unnecessary code after refactoring of the apr connector
deleted the SunToolkitSubclass . java file , which contained a method to flush pending events in the AWT toolkit to the functionality is no longer needed in the current codebase
added rotation and scaling methods to the DefaultRenderableSorter class and modified translation calculations in Matrix4 to improve sorting functionality by ensuring correct translation based on rotation and scaling
added unit tests and a new test method for registering wrapper handlers in TypeHandlerRegistryTest . java to ensure proper behavior of type handlers before primitive types
pdfbox - 3000 : add a workaround to convert alternate colors to rgb
updated references to ` CommonsApplication ` to use ` BuildConfig ` from ` CommonsApplication ` to improve maintainability by centralizing configuration values
camel - 18366 : camel - main - add camel - health to camel - http - main health check with camel - main
fix a crash when change a chakram , close # 2438
add a test for altering a table with indexes extend primary keys in AlterTableWithViewsIT . java to ensure that the schema correctly handles indexes in the ALVIEW TABLE statements
updated offset initialization in FileFloatSource and modified test logic in TestFunctionQuery to enhance document handling and improve test coverage for better accuracy
added a line to remove specific DrillMongoConstants . ID from the fields collection to ensure data integrity by preventing unused references
added disconnection methods to YeelightHandlerBase and DeviceBase classes , and modified WifiConnection to implement command termination to improve connection handling and ensure proper resource management during disconnection
add auto _ increment support for postgresql compatibility
fix : add miss index information to the sharedindexinformers
bug - id : cs - 15429 : saving template detail for private template instead of copy them to the ui
fix shadowbitmapfactory to utilize bufferedimage when available
removed deprecated constants from LauncherProvider and LauncherSettings to clean up the code and encourage the use of more current alternatives
[ broker ] update path to point to the new directory structure
added legendTop and legendTop variables to PieChart . java to improve legend positioning logic for better visual representation
added a check to return early if the world transform is empty to optimize performance by avoiding unnecessary processing when no world transformations are available
add a new file MaryScriptCreator . java that implements functionality for generating and displaying Mary script files to facilitate the generation of script files with improved output formatting
added a flow file attribute for the remote source host in the ListenHTTPServlet to enable tracking of the remote source URL associated with the request
updated LevelCompactionTsFileManagement to close the compaction logger and adjusted log file retrieval logic to ensure proper resource management and improve log handling during compaction operations
remove ` ` xlink : ' ' prefix from link attribute in componentdescription ( # 5403 )
aws s3 stream upload : set a constant name for the executor relate to timeout checker
hbase - 25819 servermanager . isclustershutdown ( ) should only be public to allow access to the method from other class
added null check for span before logging in Slf4jSpanLogger and DefaultTracer to enhance robustness by preventing potential NullPointerExceptions during span logging
trim whitespace from active options before adding them to ensure that active options are cleaned up before adding them
added support for enabling wallpaper depth based on user preferences to improve wallpaper scaling behavior based on user preferences
added a assertion to assert that the success count is zero for the overseer ' s state to ensure that the overseer ' s status is accurately reported before proceeding
sulong : remove useless version check , a kernel attribute be always enabled
refactor ExecConstants for improved clarity to enhance code maintainability and readability
removed import of ScreenRecordRule and the associated annotation from ThemeIconsTest . java to eliminate unused dependencies related to screen recording functionality
added a method to set scan attributes for paging in ScanUtil and TableSnapshotResultIterator to improve handling of scan attributes during paging operations
added a range check for lowRange in Request and RequestV2 classes to ensure lowRange value does not exceed the defined limit for better data
changed access modifiers of keySizeEstimator and valueSizeEstimator to protected and adjusted the cache size estimation calculation to enhance accessibility for subclasses and improve cache size estimation accuracy
hostjoindaoimpl : return the correct zone uuid to avoid npe
[ zeppelin - 2641 ] change encode to utf - 8 when send request to
removed redundant condition before removing a file system entry to simplify the code and enhance readability by directly using the remove method
rename variable ` obj ` to ` json ` and update its usage for proper JSON handling to improve clarity and maintainability of the code by using a more descriptive variable name
updated the polling interval in SoftAutoCommitTest to improve the responsiveness of the hard commit process
print error log when a listener fail to call a listener .
updated classes related to the dial package to improve consistency in naming and structure to enhance maintainability and clarity of the dial - related components
removed unnecessary whitespace in error logging statements to improve code readability and maintain consistency in logging output
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to incorporate new features and improvements in the container
updated BootClassLoaderHook to return additional bootstrap paths and added a new testHook class for validation to enhance bootstrap path handling and ensure proper initialization of boot class loader hook
remove fallback to convert patchy to legacyxmllayout since it ' s now redundant
[ hotfix ] [ yarn - tests ] remove unused yarnclient from yarnitcase
add new stats per map if no data be included
deleted the AllTests . java file containing multiple test classes to the test suite is no longer needed or duplicated in the current codebase
added Unicode character handling for characters 30 and 31 in AbstractWordConverter . java to improve text processing for better handling of special characters in the input
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to validate behavior of stack trace calculations to ensure that the system properly handles large stack trace invocations by preventing unnecessary memory starvation
updated method call to use ` resultMappingForRowKey ( nestedResultMap ) ` instead of ` resultMapping . getMappings ( ) ` to improve code readability and maintainability by using a dedicated method for retrieving row keys
added an eventHandled flag to the UIText class to ensure proper event handling during processing
deleted the ` Controller . java ` file and renamed the ` Weldby ` class to ` WeldModule . java ` to clarify the class ' s purpose and improve code readability
fix invalid group entry check in nfatraversalmatchitor .
removed logging of the liquibaseProLicenseKey variable and its initialization to streamline the process of retrieving and logging the Liquibase license key
mondrian : prevent leak ` ` this . measurehierarchy ' ' if measure - hierarchy ca n ' t be initialize
add a debug info command line option to generate debug info
mondrian : fix for bug # 1743819 , document mondrianproperties . jdbcfactoryclass
added a method to retrieve friend paths and updated related code to utilize it to improve the handling of additional arguments in Kotlin compiler steps
added aliases for BATK , BRAH , MANDAIC , and refactored main method for better readability to improve code clarity and facilitate better file handling with aliases
updated equality checks in ExecutionCommand and added utility methods in StageUtils for JSON serialization to ensure consistent behavior when comparing execution commands and improve testability of JSON processing
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
refactor OCFile class for improved readability to enhance maintainability and clarity of the code
added a toString ( ) method to SystemScope class to provide a meaningful string representation of the SystemScope object
modified the CSSParser to handle percentage and percentage values more accurately to improve validation and error handling for the cmyk ( ) function to ensure proper parsing and provide clearer error messages for invalid parameters
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` to ` LocalIndexIT . java ` to verify that the local index reverse scan correctly returns all rows for a given table
updated import statements and method names in test classes for consistency and clarity to improve code readability and maintainability by using the ApplicationProvider structure
updated toast messages to use string resources for better localization to improve user experience by providing clearer context in messages
simplified the conditions for determining live item upper bounds in RendererUtilities to improve code readability and maintainability by removing redundant conditions
replaced Iterator with ArrayNode for ask and bid operations in KrakenStreamingAdapters . java to enhance type safety and improve handling of decimal values in ticker data
added error handling for adding a column in the FileContentProvider database to prevent duplicate column conflicts during database upgrade
remove print statement from AsyncServletIOTest . java to clean up console output during tests
added hashTableLoadFactor and refactored data size calculations in ConvertJoinMapJoin . java to improve scalability and accuracy of data size estimation
updated the ` buildView ` method to accept a ` Context ` parameter and utilized theme attributes to improve resource handling and ensure proper background resources are applied based on the selected item
added authentication handling capabilities to SecurityMockMvcResultMatchers and corresponding test cases to enhance authentication mocking capabilities and ensure correct behavior when matching authentication
fix npe on gateway creation failure due to wrong vpcid be set
[ beam - 10955 ] skip flinksavepointtest on jdk 11
fix the position of intdef annotation on field in the ui module
updated loop variable name from ' n ' to ' i ' and modified action act logic to ensure correct iteration over actions and improve code clarity
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange and modified ExchangeSpecification initialization to ensure compatibility with the new Bitmex API and maintain proper exchange specification
[ task 70437 ] add a test for the relationshiptype endpoint which return the virtual metadata of the relationshiptype
[ scene2d ] fix classcastexception when spatial be null
lucene - 920 : fix bug in fixedtokenfilter and fix tokenfilter so they be consistent with the new logic
[ gr - 8233 ] make unsafestorenode # add ( ) more explicit about the position of the store field .
replaced super . putAddress with io . putAddress for address manipulation to improve clarity and maintain consistency in address handling
added an assertion to verify that ` casEventRepository . load ( ) ` does not return an empty list to ensure that the event repository correctly returns an empty list when no events are found
removed the final keyword from AuthenticationAttrProcessor . java to streamline the code and reduce unnecessary parameters
added null key validation to MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that null keys are not accepted to prevent NullPointerExceptions
added a method to set the typeface in CodenameOneTextPaint to throw a runtime exception when typeface is not set to ensure proper handling of typeface initialization errors
implemented an ` open ` method in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` PinotFS ` classes for improved input stream handling to enhance support for input stream operations in different file systems
simonstewart : delete the deprecated ' fail ' method from webdriverrunner
solr - 2952 : modify to use ` ` if ' ' statement instead of ` ` if ' ' statement .
refactor DefaultResultSetHandler to simplify object creation and constructor mapping handling to improve code readability and maintainability by reducing the complexity of result processing
update SQL syntax to properly format the table name to ensure compatibility with databases that require quoted identifiers in SQL statements
added filtering logic to handle boolean expressions in VectorizationContext to improve the efficiency of vectorization by differentiating between primitive and boolean modes
added type parameter ` moveSelectorConfig ` to ` ConfigUtils . inheritConfig ` in ` ExhaustiveSearchPhaseConfig . java ` to improve type safety and clarity in configuration handling
refactor ModifyDataTypeStatement to use a single instance of ModifyDataTypeStatement to simplify the statement creation process and improve code readability
updated cluster name handling to use constants from SystemPropertiesUtils and DataNode to improve maintainability and consistency in cluster configuration management
improve error handling and logging in PeerGroup . java and ClientConnectionManager . java to enhance stability by properly managing connection failures and exceptions
added multiple style string handling for the style in Nano . java to enhance style selection functionality for better user experience
update block and schematic reader to adapt to new nbt format
updated the return statement to provide a more meaningful description of the No # toString ( ) method to improve clarity and accuracy of the error message
8236106 : [ testbug ] shenandoah : make testthreadfailure more resilient
made the ` retryFailed ` method return ` FailureContext ` and updated its return statement to return its count to improve the accuracy of retry counts and ensure consistency in the data provider implementation
modify token retrieval to use a bandwidth index instead of a zero index to ensure the correct token value is returned based on the provided bandwidth
eesenewart : add method to seleniumbackedselenium for future callback .
removed the boolean parameter ` printWarning ` from the ` doPrintEntry ` method and adjusted its implementation accordingly to simplify the method signature and improve clarity of certificate details
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added checks for illegal component state exceptions in Dialog and Frame classes to ensure proper component state management and prevent illegal state exceptions
changed the ` state ` field from private to final in ` DefaultProjectFilesystem . java ` to ensure that the ` state ` array cannot be modified after initialization
updated RedisObjectFactory to use RedisStandinel configuration for Redis connections to enhance Redis connection handling and ensure proper configuration based on sentinel presence
add support for delay message to jabber account ( patch by ingo bauersachs )
use callback . noop instead of new one for notifycontent ( )
replaced the CreateShareOperation with a OperationsService for creating share operations to streamline the share creation process and improve code organization
fix issue with ` @ inject ` and ` @ repeatable ` on beanpropertyinject
update loop logic in ClassicPlotManager to use a calculated yStart variable instead of calling getMinBuildHeight ( ) multiple times to improve code efficiency and readability by eliminating redundant method calls
make smackintegrationtestframework more resilient to misleading exception message
tmi - 99 : fix interop sub - directory in exif ( for tiff )
added support for ENABLED _ LS mode in VersionTargetGraphMode and updated executor assignment in VersionedTargetGraphCache to enhance dependency management and ensure consistent behavior when using the enabled mode
added a check for video format before processing media in DLNAResource . java to ensure that video formats are handled correctly during parsing and rendering processes
chore : integrate new gapic - generator - java and rules _ gapic ( # 344 )
added a loading mechanism in LwjglNativesLoader and updated the load method in LwjglApplet to enable dynamic loading of native libraries at runtime
added escape parameter to CSVStrategy configuration and adjusted error handling for invalid encapsulators to enhance flexibility and correctness in handling escape sequences in CSV processing
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure support for only the Authorization Code grant type and improve test coverage for related scenarios
add more information to exception cause cause in suppresswarnings ( )
added a new SQL query to fetch count from aTable and modified the constructor of OrderedResultIterator to include a null parameter to enhance query validation and prevent potential null pointer exceptions
added rsquare property to the RegressionEvaluator and assert its value in StreamExpressionTest to ensure correct handling of the " RSquare " value in regression evaluation
added handling for request header names in ThreadContextMDCServletFilter to improve processing of context attributes from request headers
refactor SparkPlanGenerator to use a MapWork instance variable instead of casting it to improve code clarity and reduce casting overhead
refactor PdfJndiReport and PdfSessionInformationsReport to use a dedicated method for country - specific image retrieval to improve code maintainability and scalability by centralizing image loading logic
updated caching strategy in JwtIssuerReactiveAuthenticationManagerResolver and added new tests for trusted issuer handling to improve cache management and ensure proper authentication flow for trusted issuers
fix error message when database be initialize with directory location
cache interop function and change signature test to be more generic
removed duplicate sleep statement from AbstractBasicMockingIntegrationTest . java to eliminate redundancy in the code
added a new file KernCrash . java to implement font rendering with kerning functionality to provide a working example of using Kerning fonts in a graphical user interface
added a call to fail ( ) method in LinkedHashTreeMapTest . java to ensure that the test properly terminates with an expected outcome
added a method to retrieve network interface addresses to improve network interface retrieval by including prefix information
use scheduledexecutorservice to kill scheduledexecutorservice if it be not null .
[ issue # 5483 ] fix auto switch ha enable again ( # 5505 )
updated assertions in Assert . java to improve accuracy and performance of assertions
added a new test class ` Issue247Test ` with a test method for creating and retrieving maps in ` Map ` to ensure proper functionality and validation of the map implementation in the application
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doInBackground ` method to accept ` ArrayList < String > ` to improve type safety and ensure proper handling of data types during background operations
added check for today year in the validateMaxAge method and adjusted error assertions accordingly to ensure accurate validation of max age based on the current year in the test
added error handling for " alarm _ codes " and " error _ codes " in GrblController . java to improve response processing by displaying specific error codes
updated the string resource used for workspace scroll format based on the number of screens to improve clarity and usability of the UI when the screens are zero
removed the count parameter from the getTrades method in BittrexTrades classes to simplify the method signature and reduce unnecessary complexity
refactored ConsoleReader and MemoryHistory to improve command handling and index validation to enhance code readability and prevent potential null pointer exceptions
use plain jdk folder name , so that no . jdk file change
refactor code to replace ` getDescription ( ) . getBuildRuleType ( ) ` calls with ` getType ( ) ` for clarity to improve code readability and maintainability
updated JFCModel constructor to accept a logger for warning messages to enhance the debugging process by providing warnings during the creation of JFCModel
fix possible illegalargumentexception when try to set the maximum inscribed circle
added methods to create and drop a view in the TestUtil class for creating and dropping database views to enhance functionality for view management in the database
added conditional checks for expectStableFloats and expectStableDoubles before executing tests to ensure tests are skipped based on system flags to avoid failures on unsupported platforms
added a new class DesktopTaskbarUIController to manage taskbar alpha changes to facilitate quickstep testing by resetting the hotseat icon alpha based on system features
fix [ mod ] remove progress bar when there be no ui task
update file names in mmm and ppp files for consistency to improve code maintainability and readability
remove ide warning and replace set with collection
modified DomainAwareServicesManager and ChainingServicesManager to extend ServicesManager instead of the @ FunctionalInterface to ensure consistency in service management across the application
add log to resourcepackloader to find mod file name . close # 3897
chore : update gapic - generator - java version to 2.1 . 0 ( # 236 )
added grow methods to the Cell class to enable dynamic growth functionality for cells
refactor DefaultInputHandler to improve binding handling and action listeners to enhance code readability and maintainability by reducing unnecessary token parsing
do n ' t kill the broker if there be a failure to receive a message during the test
replaced long array with byte array and updated iteration logic in MetricsMemoryTester . java to optimize memory usage and add a memory fail count check during the allocation process
deleted the JobParametersPrototype . java file to remove unused or redundant functionality from the project
add a securityEnabled flag to the MappingsTable class and update related tests to enhance functionality for handling table - related data connections based on security settings
added handling for EXPORTED _ Objective - C C++ headers in AppleLibraryDescription . java to improve support for both exported and extended Objective - C++ headers
reduce the dump _ to _ file output to prevent oome .
do n ' t require eager propagation for amazon video decoder
[ java ] update publisher limit in network publication when spy be ready .
add a check for ` getOutputOptions ( ) ` in the ` dbInfo ` condition in ` BaseFormatter . java ` to ensure that the database info is only null when there is no output options available
[ api ] fix uri port issue with ssl = false
added error output options to DOM node creation in DOMConverter . java to improve error handling by setting error output settings
updated assertions in Assert . java to improve accuracy and performance of assertions
[ java ] add ` ` retained ' ' option to subscription api for publish event .
add ` ` testcasename ' ' to ` ` testresultsummary ' ' field of test case
[ hotfix ] [ table - planner - blink ] fix tostring ( ) ofGroupedwindowfunction to unify the function name
removed the import statement for ` fastparse . core . Parsed ` from ` LatexToUnicodeAdapter . java ` to streamline dependencies and avoid potential naming conflicts
fix session timeout issue ( # 662 )
updated conditions and formatting in AppModule . java and Watcher . java for consistency and clarity to improve code readability and maintainability
fix sqlnodeconvertcontext to use ansi sql dialect
changed log level from debug to trace in FirmwareUpdateService . java to provide more granular logging for firmware update handling
added tests for retrieving null dates and timestamps in DateTest . java to ensure correct handling of null values in date and timestamp data types
refactor string formatting in StringSubject and Subject classes for improved readability to enhance code clarity and maintainability by using consistent variable naming conventions
added a test for verifying repository permissions for multiple teams to ensure correct permissions are enforced for repository permissions in the application
added a new file Test7088020 . java that tests method invocation with expected exceptions to ensure proper handling of method exceptions during method invocation
replaced the ` matchAudienceRestriction ` method with ` audienceUris ` to check for audience URIs to improve clarity and functionality by directly comparing audience URIs in the response validation
refactor cache refresh methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener for clarity and consistency to improve code maintainability and ensure proper cache updates based on client version
updated PrintStream handling to replace direct assignment to _ stderr with null checks to improve robustness by preventing null pointer exceptions when using System . err
added a new warning constant for stage order and an active stage check in BasicEventSimulationEngine to enhance error handling and reporting of suspension order based on active stage
make realtime broker query optimization faster ( # 10788 )
refactor SQL statement creation and add normalization properties in UpgradeCatalog240 . java to enhance code readability and allow dynamic control of the HBASE normalizer ' s enabled state
fix typo in savepointv2 and filestatehandle javadocs ( # 6721 )
added tests and implementations for setting and getting a Bluetooth class in ShadowBluetoothDevice to ensure correct functionality of BluetoothClass handling in the shadow implementation
fix checkstyle issue in inventory / player
drools - 3892 - fix npe in sumfunction ( # 3897 )
simplified the call to ` graph . readUnlockAll ( ) ` in ` DataBridge . java ` to improve code readability by reducing redundant calls
updated coreNodeName concatenation to include coreName from nodeProps to ensure correct construction of coreNodeName for better clarity and functionality
avoid update recent channel when receive new contact in chatactivity
added taggerparserpostagcompatibilityitest to make test pass
added @ SuppressCodecs annotation to BaseVectorSimilarityQueryTestCase to prevent SimpleText codec from being used in tests
updated the condition in ` Types . java ` to include additional checks for ` elemtype ` and introduced a new class ` T7005671 . java ` with multiple test cases to enhance element type handling and provide unit tests for demonstration
fixed convcavity cause by a too small super triangle
8274396 : fix doclint warning in com . sun . concurrent . collections
refactor JWTClaimsSet initialization to use builder pattern and improve clarity to enhance maintainability and readability of the test code
fix performance regression for stack overflow ( un ) protection .
added new shadow methods for SQLiteDatabase , ContentValues , and ContentValues in the Robolectric library to enhance functionality and maintain compatibility with Robolectric ' s testing framework
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java ` and added a new method ` initiateGL ( ) ` in ` LwjglGraphics . java ` to improve clarity and separation of concerns in rendering initialization
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` for improved array comparison to enhance performance and correctness when comparing values
updated locale handling to utilize ` script ` and improved default locale initialization to enhance the flexibility and security of locale configurations in the application
updated the method to return the last set text alpha instead of the current text alpha to ensure the view reflects the most recently set text alpha value
updated warning message to reflect the correct number of ConfigMap PropertySources to ensure accuracy in messaging regarding property source mismatches
replaced multiple test class imports with a single method call to ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` to simplify the test suite initialization and improve test accuracy
added trimming of whitespace during token parsing in GzipFilter and updated initialization parameters in GzipFilterDefaultTest to ensure consistent handling of whitespace and improve test accuracy
updated outputType assignment in Response . java to ensure consistency in output handling
updated regex implementation property from JDK to JONI to use the preferred regex implementation for improved performance and compatibility
updated ViewCapture class to use FutureTask and added callback handling for view properties to improve asynchronous processing of view properties and ensure proper callback management
http : / / stackoverflow . com / questions / 4914635 / how - to - do - if - you - have - style - tfgi - backend - support - tfgi - plugin
fix issue 251 : folder creation fail if target folder do not exist
updated fallback log message to use 127.0 . 0.1 to ensure fallback for IP address resolution failures
[ camel - 18477 ] fix accidental class name change ( # 3990 )
pdfbox - 1975 : do n ' t break preparation of clone JPEGutil , a suggest by martin schr ö
updated AllAppsGridAdapter and related classes to replace WorkModeToggleContainer with WorkFooterContainer to improve organization and clarity of the work mode functionality
javadoc cleanup : remove @ version that use svn revision
refactor : simplify code in defaultjavaprettyprinter ( # 3348 )
[ hotfix ] [ runtime ] free memory in operatorcontext on context close .
updated string formatting in QueryByExamplePredicateBuilder to remove unnecessary line breaks to improve clarity of error messages for better readability
replaced evictionCounter and cumulativeStats with AtomicLong and added methods for adding and retrieving statistics to enhance thread safety and improve statistics management in the cache implementation
fire action immediately on fx thread to allow other platform to continue
[ java ] fix can not connect to local ip address in ipv4 environment . ( # 11147 )
ensure data root and source root be set for cli
add logging when solon admin client and server be use to configure
[ hotfix ] [ table - api ] fix typo in tableenvironment javadoc
removed the ` setStatementTimeout ` method and adjusted timeout settings in ` MapperBuilderAssistant ` and ` ExecutorTestHelper ` to streamline timeout handling and improve code clarity
refactor method parameters to remove redundant ' hangingTscTimeout ' from multiple transpilation callbacks to simplify parameter handling and improve code readability
added GeoLocationRequest and GeoLocationResponse serialization classes to CasCoreAuthenticationComponentSerializationConfiguration to enable the serialization of GeoLocationRequest and GeoLocationResponse for improved data handling
updated precondition checks for destination and destination artifacts in ArtifactFilesystem . java and refactored test cases in ArtifactFilesystemTest . java to ensure that generated artifacts are properly validated for build artifacts and improve test clarity
tika - 622 : fix for tika - 148 -- do n ' t throw exception in summaryextractor when encounter an xls document .
apps - 2438 avoid concurrent modification with conditionals in conditionals
pipe : wait for the input stream to see if it ' s available before return null to avoid block read on close .
added detailed failure messages for ` hasValue ` assertions in ` GuavaOptionalSubject ` to improve debugging by providing clearer feedback on assertion failures
add additional conditions for determining the motion progress in the ShelfScrimView to improve user experience by ensuring smoother transitions during app transitions
fix a npe in the shader node editor when the navigator panel be collapse
mow - image : fix for image positioning , avoid re - positioning on every slide
camel - 8071 : correct javadoc of errorocuredinonexceptionroute to make it clear that the message be already log in
astro : schedule at fixed delay instead of hour ( # 4746 )
simplify the lighting logic ( no need for - 1 actor anymore )
( chore ) camel - jms : ignore test that hang
added specific imports for Guice , Context , and Stage in GuiceFactoryTest . java to utilize Google ' s dependency injection framework for improved functionality and flexibility
added system feature management functionality to the RobolectricPackageManager class to enable dynamic retrieval and setting of system features based on their existence
refactor RCAFrameworkLoader to consolidate path property handling into a single loop to improve code readability and maintainability by reducing complexity in path management
removed logging statement for the init cancellation of watch dog to reduce unnecessary log clutter during the task cancellation process
add a null check to enumerationValues when enumerationValues is null and empty to ensure that enumerationValues is cleared when no values are available
updated variable names and logic related to text and inline boxes in BoxBuilder . java and InlineBoxing . java to enhance clarity and allow for additional inline handling based on currentIB state
[ akamai ] expose the ip service to the remote ip system ( # 9374 )
removed conditional database column modification for VARCHAR in UpgradeCatalog260 . java to simplify the code for better readability and maintainability
updated error messages to provide clearer guidance on available space and write permissions to improve user experience by providing clearer guidance on directory permissions issues
modified DatasetUtilities . java to improve method organization to enhance code readability and maintainability
added a method to append the sector ID to the key string to enhance the functionality by providing additional context for the selected element
fix typo in a method call ( # 4811 )
updated taskbar visibility management and added alpha control for smoother transitions to enhance user experience by improving the animation behavior and visibility control of the taskbar
reformatted the import statements in KeyExchange . java for consistency to improve code readability and maintainability
added a check for ` conn instanceof JdbcConnection ` before executing a database query to prevent potential ` ClassCastException ` when the database connection is invalid
updated file index handling in ServerMainTest . java to correctly index filenames based on file naming conventions
added methods to retrieve media recording MIME type in CodenameOneImplementation , MediaManager , and ImageIO classes to enhance media recording capabilities across different components
add a shaderhelper . useshaders ( ) to the upcoming shaders render thread so it ' s not falsely depend on an confighandler .
[ calcite - 1624 ] druid adapter should use operator operator to compare with ' c = 13500 '
updated ZkStateReader instantiation by adding a space before the comma in the constructor call to improve code readability and maintain consistent formatting
pdfbox - 4071 : disable xxe feature , other than external entity via uris if they be n ' t need
added a new interface ` ClientRegistrationIdentifierStrategy ` to provide a standardized way to retrieve client registration identifiers
( chore ) camel - url -helper : avoid potential nullpointerexception
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated related logic to improve clarity and correctness of varargs access checks
ensure that border _ position and border _ left / right be set if their value be already set
changed log level from info to debug for the retry backoff message in WatchConnectionManager and WatchHTTPManager to improve logging granularity for better debugging and monitoring
replaced specific imports with wildcard imports and modified method signatures to accept HubRegisterResponse to improve type safety and ensure correct project ID is used for registration
replaced bitwise operation with Byte . toUnsignedInt method for byte manipulation in multiple classes to improve code clarity and ensure consistent handling of unsigned byte values
[ rocketmq ] fixed typo in opentracingtransactionproducer
updated caching configuration from CachingBuildEngine . DepFiles . ENABLED to CachingBuildEngine . DepFiles . CACHE to enable caching behavior for the build engine without dependency tracking
change the default value of rangePannable from true to false to prevent the dataset from being rangePannable
updated the logic for setting the main active page in AllAppsContainerView to ensure the correct view is added based on the work mode and the active page
changed access modifiers of glCaps and animator variables to private in Visualizer2TopComponent . java to enhance encapsulation and code readability
added a catch block for CancellationException and modified exception handling in FunctionTest . java to improve error handling for cancellation operations
change visibility of JarFileResource constructor from package - private to protected in JarResource to allow subclasses to access these constructors for better reuse and extensibility
defaulttrackselector : fix typo in javadoc
added a loop to sleep a 200ms after unseqMerging to ensure proper synchronization during unseq merging
updated the currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure test verifies the correct trading currency for BTC
updated SQL query structure and assertions in HibernateDTOProjectionTest and JPADTOProjectionTest to improve clarity and maintainability of the test code and ensure correctness of data handling
refactor Unicode handling logic in the Unicode class to improve code readability and maintainability
updated ` installAutoInstance ` method to accept a ` Service ` parameter and added logic to update Hive LLAP settings if the service is available to ensure proper handling of view properties based on the service ' s interactive mode configuration
[ issue # 5241 ] fix the timing of sendheadersfirstpublisher ( # 5287 )
github # 8181 - upgrade aws sdk to 1.4 . 0
added support for BIG _ DECIMAL in RangePredicateEvaluatorFactory to improve error handling by providing more informative exception messages for unsupported value types
refactor method names in TreeBackedProcessorWrapper to use ` javacProcessingEnvironment ` instead of ` inner ` for consistency to improve code clarity and maintainability by standardizing method references
added annotation printing functionality in ParameterInfo . java to allow for better debugging of parameter information
if live tv be disable , do n ' t seek in a stream
[ grid ] fix json response not include value in localnode
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement . java and DiskFileItem . java to address these deprecation warnings related to database interactions
added a test method ` testSelectInto ` to validate schema template selection to ensure that the SQL generation and retrieval functionality works correctly for various data types
refactor RTimerTree class to improve code readability to enhance maintainability and simplify future updates
updated package declarations from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graphbuilder ` across multiple files to reflect the new structure and improve organization of the codebase
fix : npe when tap on a subtitle ( issue # 358 )
added naming for the client threads and schedulers in the ClientConnector class to improve debugging and traceability of thread usage
resolved - issue batch - 737 : view result tree : avoid scrollpane to the first column
added phone number description fields to ScimUserEndpointDocs to enhance user information information for better accessibility
made classes public and constructor private in DeleteFiles , IndexFiles , IndexHTML , and SearchFiles classes to enforce singleton pattern and improve encapsulation
added null check for responseMap and improved error logging in JsonHttpPropertyRequest . java and URLStreamProvider . java to enhance error handling and provide clearer diagnostics for null response maps
renamed SolrRequestHandler class to improve code organization to enhance clarity and maintainability of the request handling logic
bug fix : do not check for default parallelism
add some comment to test - utils , and fix a couple of typo in the file and unit test .
add handling for SCARD _ E _ NO _ SMARTCARD in the error check to improve error reporting related to smart card presence
added SuppressSysoutChecks annotation to Test2BTerms . java to prevent unnecessary console output during tests
bindy : add support for combine key - value pair ( # 2434 )
set default value of use owner and timestamp to false ( # 4708 )
[ hotfix ] [ test ] fix parameter name in utils . runAndCheckexception
fix npe in the regex which sometimes return ` ` null ' '
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored methods in LiquibaseXMLTransformer for better readability to improve versioning clarity and enhance code maintainability
bug 54777 - change default proxy cert validity to 90
improve threadhandler ' s time delta to make frame use a smooth delta
added a check for the table name in ` HttpBatchReader ` and ` HttpScanBatchCreator ` , and modified the URL handling in ` HttpScanBatchCreator ` to ensure proper pagination behavior when accessing JSON data
added null check for compactionInfo client in Worker . java and implemented a test for handling potential null values to ensure graceful handling of null compaction info clients and verify that they do not mark a failed
added functionality to call onSaveInstanceState on fragments in ShadowFragmentActivity to ensure proper handling of fragment state preservation during configuration changes
formatted code for consistency in BatchResourceFactoryBean . java to improve readability and maintainability
added a test for parsing simple Android color references to ensure the correctness of color resource loading functionality
added error handling for NoResultException in AbstractJPAQuery and a new test for null as uniqueResult in AbstractStandardTest to improve robustness by preventing application crashes due to NoResultException
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 47979 and http : / / forums . apache . org / show _ bug . cgi ? id = 47979
updated depth preference retrieval to use LawnchairApp instance to improve modularity and maintainability of the depth preference management
updated import statements in LocalManagementTest . java to ensure consistent usage of ProcessTools across the project
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method and its usage to simplify the method signature and eliminate unnecessary parameters
updated ExtensionStack to handle null extensions more robustly to improve string representation of extensions , enhancing robustness and error handling
3 . x : fix flatmap onerror ( ) close # 7087 )
nifi - 2203 add connection timeout configuration for get request
format the initialization of ` androidPlatformTarget ` for better readability to improve code clarity and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to update to a more appropriate test class for model functionality
removed redundant ` SystemResourcesEdgeEventFetcher ` and modified ` inlineImage ` method to accept a boolean parameter to streamline code and ensure consistent handling of image updates
added a new test method to verify output hash calculation when the cache is not writable to ensure that the output hash is accurately computed when the cache is not writable
camel - 8471 fixed the test error of camel - netty with bytebuf
updated the method call to use ` Warehouse . getQualifiedName ( ) ` instead of ` getOldName ( ) ` for altering partitions to ensure the correct table data is used during the alteration process
improve error message if vertx instance be create with prefernativetransport option set to true
test : add unit test for color serialization and deserialization
streamex : fix typo in javadoc ( # 1841 )
removed redundant hints for query and lock timeouts in SessionImpl . java to streamline code by eliminating unnecessary hints
add a static logger binder to reduce the need for lock scope
hbase - 1300 eliminate cloning of sstables when update the table
fix taskbar flicker when change orientation
escape xml in ` ` chat room ' ' to handle space .
updated longStackPut method to use the same key in StoreDirect . java and added a new test class Issue265Test . java to ensure consistency in method naming and validate database compaction behavior
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress compiler warnings for mutable and non - mutable methods in the code
move the hack for the broken test to a static class to allow the test to pas .
updated conditional statements for audio and subtitle tracks in DLNAMediaInfo . java and modified logging in FFMpegVideo . java to improve code readability and simplify argument handling
add unlimited test to this test to make it pass when run on h2
fix ( genesis ) : invalid totaldifficulty update on new block import
updated action retrieval logic in DefaultPlaybackController . java to simplify action handling when the player is not seekable
replace synchronized list with CopyOnWriteArrayList and update related method signatures to improve thread safety and encapsulate the jceSecurity class in a dedicated method
adjusted allocation and positioning calculations in AllAppsView . java to ensure proper rendering and positioning of the graphics context
added a check for the presence of a colon in the key alongside the existing index check to enhance validation logic for processing headers in HttpURLConnection
added PrincipalResolver as a dependency in CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance dependency resolution for multifactor authentication metadata population
replaced ObjectMapper with ObjectBuilder for JSON parsing to improve performance and flexibility when handling JSON input
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve handling of trailing slashes in StringBuilder operations
added methods to match patterns in PatternsMatcher and corresponding test cases to enhance functionality and ensure correct behavior of pattern matching
hbase - 27194 fix npe in loadincrementalhfiles ( # 4438 )
fix setblock ( ) for water potion ( # 1061 )
adjusted formatting for the method call in CellLayout . java to improve code readability and maintain consistency
refactor calculation of decreasePercent for clarity and improve code readability by adjusting expressions and formatting
433076 fix infinite loop issue with isready .
added a null check for weightField in DocumentDictionaryFactory to ensure that a weight field is provided to avoid illegal argument exceptions
added plist variable substitution functionality and a corresponding test to improve the handling of Info . plist files in the build process
fix laser teleportation and add shooting property to tile tile .
updated the ` adaptOrder ` method to explicitly cast order to ` OrderCreateApiRequestBuilder ` to improve type safety and clarity in order handling
added a new file ` PreParseGrammarTest . java ` with XML grammar parsing functionality to facilitate testing of XML schema grammars by using the XMLGrammarPreparser
add ` @ suppresswarnings ( ` ` doclint : missing ' ' ) ` to fix doclint warning
added font override functionality in ExtendedEditText to ensure custom font rendering is applied to the application
fix # 996 - return empty list for unauthenticated user
camel - 4120 : fixed potential npe with uri encoding .
restore test data setup for backward compatibility
removed the import of DumpHandler from MultipartFilterTest . java to eliminate unused dependencies and streamline the test code
[ flink - 18772 ] [ test ] deactivate the restore retries if there be a task that have be already cancel .
add option to create rmi registry if server be set to true .
replace string . join with StringUtils . join for string concatenation in logging to improve readability and avoid potential null pointer exceptions
updated display metrics configuration in ` ParallelUniverse ` , ` QualifiersTest ` , ` RobolectricTest ` , and test classes to ensure accurate display metrics are set and improve test coverage for default qualifiers
[ java ] : add cluster member id to the heartbeat counter to allow tracking of cluster member .
updated the attribute assignment logic for TotalThreadAllocatedBytes based on the VersionCheck to ensure compatibility with Java version 21 and later
updated the logic for returning a double result and added handling for negative and positive infinity in CustomExpression . java to ensure correct numeric representation and improve handling of edge cases
ww - 4196 reduce log verbosity for suspended / suspended continuation
add routes for authentication methods and implement authorized / authenticate functionality in AuthenticityController to enhance security by enabling user authentication through the Authenticity form
remove dead code and add assertion to lowerphase
updated the static logger reference from ConnectionManager to HttpClientRequestImpl to ensure the correct logging context for the HttpClientRequestImpl class
update track selection to prefer content over technical preference .
updated RuntimeSerialization . java for improved serialization logic to enhance performance and maintainability of the serialization process
try to fix image positioning on crop
refactor UnitOfWorkFactory to improve code readability to enhance maintainability and reduce complexity in the build process
updated the calculation of icon size in DeviceProfile and WidgetPreviewLoader to use a new variable for allAppsCellWidthPx to improve code readability and maintainability by centralizing icon size configuration
tika - 4338 -- add content - type parameter extraction to avoid nullpointerexception
updated URI construction in ThumbnailsCacheManager to use local ID and file ID to improve clarity and accuracy of the generated thumbnail
added mark support for integer and reset functionality in the Source class to ensure proper handling of input stream termination when marking
deprecate various classes that are outdated and encourage users to use alternative implementations of the new @ Deprecated annotation
ambari - 20594 . add ambari property to hide error stacktrace for the error page ( smohanty )
bug 12760 : add extra logging to deletetemplate - deletenotfoundexception in managementserverimpl
remove redundant redundant code in sparcarithmeticlirgenerator # emitforeigncall
drools - 4810 dmn refactor Decisiontableconfigurationadapter to throw unsupportedoperationexception for legacy drool 5 api
fix crash when receive purchase error response in some case
[ beam - 9274 ] increase timeout for unboundedsourcesystemtest
removed redundant substring method calls and adjusted import statements in ShadowAssetManager . java to improve code clarity and maintainability by simplifying string manipulation
deleted two files and added classes MrefStat and MrefStat1 with relevant methods to introduced new class implementations for improved lambda method reference statistics
added null and blank checks for the requested scope in DependencyInsight . java to ensure a default behavior is returned when the requested scope is null
added constants for handling trade and bad status errors in BTCETradeServiceRaw to improve code readability and maintainability by using descriptive error messages
[ 4 . x ] : use hamcrest assertion instead of junit in integrations / cdi / common - processor - backport main ( # 1749 ) ( # 6749 )
add method to get payment protocol request url from bitcoinuri .
planner - 383 improve error message when use a method whose parameter be not a type of collection .
removed redundant method call to setFolderInfo in FolderPagedView . java to streamline code by eliminating unnecessary duplication
fix buffer writing when the vm be not acquire by the caller
refactor null value handling in BasicAbstractTuple to use a for - each loop instead of a stream check to improve code readability and enforce stricter null value checks
replaced file reading logic with input resource handling for lint configurations to enhance robustness and improve resource management for lint configurations
replace direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post to a Runnable to ensure backgrounds and paddings are updated on the UI thread to maintain thread safety
fix inventory tick not register correctly when shift - clicking ( # 2080 )
added handling for OCELOT _ BABY event in PlayerEvents to improve gameplay event management for better user interaction
[ flink - 15603 ] add miss @ publicevolving annotation for statettlconfig .
added null handling for setting parameters in PreparedStatement and array classes to ensure proper null handling when setting values and improve data integrity
[ java ] update archive tool to print out descriptor for all valid recordings
replaced double quotes with single quotes in the StringBuilder class to ensure consistency in character handling
added a new test method for JSON serialization with a custom argument map to enhance test coverage for JSON serialization and improve code organization
broadtest : invalidate cache when remove transaction and block ( # 2631 )
added conditions to enable and disable the LensMask in multiple handlers to enhance the handling of enabling / disabling capabilities based on user preferences
removed ` NoSuchBuildTargetException ` from method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` to simplify method signatures and reduce unnecessary exception handling
add overloaded constructors to ChangeLogIterator for better initialization to improve flexibility and usability of the ChangeLogIterator class
make guest exception exit 1 if one be not a fatal error
use system property instead of env variable to avoid nullpointerexception
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization of objects
fix spacevisitor so that it do n ' t include finalizer property
# 2139 - enh : add copy ( boolean ) method to servercachecacheoptions ( # 2184 )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to address the issue of hidden borders in floated elements with overflow hidden
replaced ActionGraph with TargetGraph in WorkspaceAndProjectGenerator and ProjectCommand files to improve code clarity by using a more appropriate graph representation
updated variable names and exception handling in KucoinExchange . java for clarity to improve code readability and provide better error logging for host exceptions
updated string concatenation and simplified path replacement logic in SpringResourceAccessor . java to improve code readability and ensure correct path handling for resources
[ # 6687 ] change unit to string from µ g / m / c µ w / c µ w / c µ w / c µ w / c µ w / c µ w / c µ w / c µ w / c µ w / c µ w / c µ w / c µ w / c µ w / c µ w
updated vertexMask retrieval to use getMaskWithSizePacked ( ) method to ensure vertex mask is packed for better compatibility with shaders
deleted the Tls12SocketFactory . java file to the functionality provided by SSLSocketFactory is no longer needed
fix read all entry from bibdatabase when resolve entry ( # 7954 )
added legacy resource handling in ResourcesTest . java to ensure compatibility with Robolectric legacy mode
added a check for FirebirdDatabase to return " DOUBLE PRECISION " for FirebirdDatabase to ensure proper data type handling for DOUBLE precision in Firebird databases
added null checks for dataSource and transactionManager before creating it to improve stability and prevent potential null pointer exceptions
add mockito - api module for run unit test
updated command from " ping - c5 www . com " to " ping - c5 127.0 . 0.1 " and modified test timeout settings to include timeout values to ensure tests do not hang for longer execution and improve test reliability
# 1221 - use try - with - resources in test for ebeanserver _ savealltest
update TermQuery to use a conditional default postings scoring based on scoreMode to ensure correct scoring behavior based on the requirements of score mode
get rid of metric update race condition in dataflowmetrics ( # 2143 )
server : fix regression cause by virtual ip change ( # 4490 )
replaced direct field inspector retrieval with a method to find the target object inspector to improve code clarity and reduce duplication in object inspector initialization
added a method to remove build artifacts and corresponding tests in the ArtifactFilesystem and ActionExecutionStep classes to improve artifact management and ensure proper cleanup of previous build artifacts
added functionality to set a row selection interval for the table in ThrustCurveMotorSelectionPanel to ensure the table updates correctly when selected rows are adjusted
expose assertthrowsarraystoreexception in favor of assertthrowsarraystoreexception in our integration test .
refactor PropertySource class for improved readability to enhance maintainability and reduce complexity in the codebase
added environment name handling and user agent configuration in HttpClientBuilder and HttpClientConfiguration classes to improve configurability and allow for better user agent management
refactor session management by replacing direct session creation with a more concise restoration method to improve code readability and maintainability by consolidating session restoration logic
updated test assertion to include an additional error message and changed the type of results from Set to Set from Set to IdentityHashMap to improve test coverage and ensure consistent behavior of the data provider generation
nifi - 1238 : fix npe with empty file . getcontenttype ( )
act - 60 add event to handle activation request error
fix a syntax error in the return statement of GraphApplet . java to improve code correctness and maintain coding standards
add a new method ` updateTaskViewsSnapshotRadius ( ) ` to ` RecentsView ` and modify its visibility in ` TaskView ` to ensure the snapshot radius updates for task views consistently across different view implementations
added logging functionality to generate swagger information for 3rd party services to improve traceability and monitoring of schema generation process
updated the return type of the put methods in ArrayMap from void to int to enable retrieval of the index for further operations
[ flink - 4422 ] [ kafka ] set default startup timeout to 1 min
[ issue # 4844 ] fix push consumer fail if the exception be throw ( # 4896 )
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy by preventing duplicate header additions
add package check to eventlistenerlist ( # 1588 )
added a custom adapter class to handle lists of applications and images in the ApplicationsFragment to enhance user experience by allowing custom image loading and better management of application lists
modified the applyIcon method to accept nullable Task parameters and updated the null check for iconView to improve flexibility in handling task input and enhance null safety
fix stale download cursor resource leak ( # 1725 )
fix too many sonar issue ( # 3983 )
refactor HibernateCursorItemReaderIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests for better structure and clarity to improve test organization and maintainability by standardizing test annotations
added poller support for blocking calls in DataInputStreamWithTimeout . java to improve handling of poller thread interruptions and enhance code readability
added ENABLED _ TS support to VersionTargetGraphMode and integrated ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency management and support a new feature in the graph caching mechanism
modified UpgradeCatalog150 . java file to implement new catalog upgrade functionality
do n ' t name netparameters to avoid confusion
do n ' t update selection in property view ( property panel update when need )
updated onboarding preferences handling in AppsDividerView and added nullability annotation in ActivityContext to improve code readability and ensure proper null checks for onboarding preferences
replaced HdfsIndexOutput with BufferedIndexOutput and modified related methods to improve compatibility with the latest Apache Lucene API and enhance resource management
pdfbox - 3017 : avoid npe if no page be open by click on an empty clippingpath
remove unnecessary sync in socketchannelimpl # open ( ) .
refactor TemplateTransformer to use a separate method for adding values to a row based on existing values to improve code organization and maintainability by consolidating related functionality
added a method to check if the destination file is a Windows platform and modified rename logic to improve compatibility with different operating systems and enhance error handling during renaming operations
replaced ` ALPHABET _ STRING ` with ` CHECK _ DIGIT _ STRING ` and updated related references to improve clarity and maintain consistency in encoding handling
refactor type handling logic in NodeGenFactory . java to improve clarity and efficiency to ensure correct type casting during execution based on execution type
removed unnecessary conditional checks from IndexingChain . java to streamline the code for better readability and maintainability
fix ( sql ) : fix timestamp in where clause when timestamp contain nan
removed unnecessary conditional check for postedRunnableStacktraces before adding to runnables to simplify the code and improve readability
add miss double quote in documentation ( # 5176 )
fix flaky connection pool test ( # 8258 )
updated directory retrieval method to use a specific directory name " single " instead of a null value to ensure consistency in directory handling across tests by using a specific directory representation
updated ` FaultTolerantChunkProcessor ` to use ` filterCount ` instead of the size of ` inputs ` and adjusted related methods accordingly to improve clarity and functionality in tracking filter counts during processing
modified tabbedMethod to return an empty \ t instead of null and updated import statements to improve code readability and ensure proper error handling during javadoc generation
refactor conditional checks in ConsoleReaderTest to use assumeTrue method to improve code readability and maintainability by simplifying terminal checks
[ # 7677 ] remove useless check for admin user in getfeedbacksessionsaction
adjusted calculations for newSelection and adjusted velocity checks in AllAppsView . java to improve the responsiveness of the user interface by adjusting selection criteria and ensuring proper velocity evaluation
bugfix # 264931 , remove unnecessary ` ` initialize ' ' parameter from threadinfo
removed unused encrypt method and improved connection handling in DataModelManagerDialog and ExportPanel to enhance code clarity and functionality while ensuring proper directory management during export
None
lucene - 3469 : do n ' t count segment size when there be no doc index
fix a bug in the cylinder modifier validation ( issue 168 ) .
modified FileDisplayActivity . java by refactoring methods and updating imports to improve code readability and maintainability
added an UnsupportedOperationException instance and modified the error handling in ApplySpecialization . java to improve stack trace filling by returning null instead of throwing an exception
update the method to calculate the vertical label height using a stream to improve accuracy of line height calculation for better rendering accuracy
replaced singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility in managing display configurations
optimize the processing of quoted strings in ` valStr ` to improve code readability and efficiency by eliminating redundant length checks
updated the method to return a valid long representation of spanId and modified the parameters for setting the current trace in ` ServletHandlerInterceptor ` to ensure consistent handling of span names and improve trace management during pre - processing
add a new test method for the ServerDatagramConnector that tests a smaller version of the server to ensure proper functionality and coverage of the ServerDatagramConnector in HTTP / 0.9 environment
updated SQL query to correctly retrieve the COUNTRY _ CODE _ s substring to ensure accurate extraction of the COUNTRY _ NAME _ s entry from the query
updated caching logic in Cache . java to improve performance and efficiency of data retrieval
renamed variables for consistency and clarity in ResourceSetRegistrationEndpoint . java to improve code readability and maintainability by using a more descriptive variable name
lucene - 10530 : fix test bug , do n ' t need to check if we should actually need checkindex
added a new JTable component and a scroll pane to the GcodeTable . java file to enhance UI functionality and provide a user interface for data display
updated connect timeout handling in Indexer . java to use configuration to improve flexibility by allowing custom connection timeout values
updated various classes to use generic types and improved logging message formatting to enhance type safety and clarity in error reporting
renamed TestMediaService . java to align with new naming conventions to improve code readability and maintainability
added a new constant helpP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK in Messages . java to facilitate the identification of user GUIDE links in the application
add empty new file marketsprinttool . java for sort currency
added validation for hostname in EndpointAddressInterceptor to ensure only valid characters are accepted to maintain security and prevent runtime errors
handle register security key more effectively in http base auth
modified the ServerSpanThreadBinder class implementation to enhance thread safety and improve performance
fix default behavior for item physic and blockitemsystem ( # 4266 )
camel - 8231 fixed the csv2shape class for the location and number
replaced callGasWord with gasCost in VM . java and removed unused import statements in Program . java to improve code clarity and reduce unnecessary dependencies
refactor Parameters class for improved readability to enhance maintainability and ease of understanding for future developers
added a call to setIgnoreNullValues on piePlot to prevent null values from being handled in the pie plot
refactored the loading logic in ResourceBundle . java to streamline the loading process and improve cache management to enhance efficiency and maintainability of the loading process
changed the character assignment from an underscore to a hyphen in the TaggedPdfReaderTool to ensure compatibility with the expected delimiter used in PDF processing
allow action to be disable during editing ( or not )
added a userModified flag to LoginSamlAuthenticationProvider to facilitate modified state management during authentication
8185628 : javax . crypto . cipher . sealobject null cipher should fail if initialize ( ) fail
changed method names from onOpen to succeeded in ConnectPromise and WebSocketClientConnection to improve clarity and consistency in handling WebSocket session operations
support squash between pinot and vanilla ( # 3974 )
added a lastTradeId tracking mechanism for trade retrieval in CryptsyAdapters . java and updated Trade construction in CryptsyPublicTrade . java to ensure trades are processed with the correct ID for better tracking and organization
added synchronization management in HiveStreamingConnection to ensure proper resource cleanup and handle potential exceptions during connection closure
change server seed initialization to use random long instead of current time
updated ICON size and added a new DeviceProfile for Nexus 5 to ensure proper icon sizing based on the hasAA condition
3 . x : fix npe bug ( # 7040 )
replace type ' s newInstance method with ReflectUtil ' s newInstance method in SynthContext . java to improve instantiation handling for SynthContext
fix bug in format when add aated operator
save and load task : prevent deletion on project . gephi file
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during concurrent access
simonstewart : add unit test for mutablelogevent and fix bug where it would not be call from a mutablelogevent itself
updated PADDING to use NonNegativeLengthLike instead of LengthLike to improve handling of negative length values
remove unnecessary context creation ( user ( headers ) ) from resource classes
improve exception detection for now , and update some javadocs
refactor JUnitRunner and AndroidPlatformTarget to improve clarity and formatting of error messages to enhance code readability and provide more informative error messages for Android SDK dependencies
reduce cache size to 8 to reduce the frequency of memory in the application
added additional checks for ` start ` in ` InvocationStageTrace ` and modified JSON structure in ` TestInvocationPublishModelFactory ` to ensure proper handling of edge cases and improve data structure for operations
added work around for npe issue with fips keystore and empty stream .
[ flink - 3987 ] [ test ] change upstreamcheckutilstest to listen on ephemeral port
mow - 1157 correct parent split pane size in dockmanagerw
only set shader buffer object max compute and tessellation if necessary
refactor PopulatorContext class methods for improved readability to enhance maintainability and reduce complexity in the codebase
fix an npe in the reload manager ( # 6263 )
added file encoding handling using IOUtils for JSON serialization to ensure proper JSON formatting and avoid potential issues with special characters
added a check for non - empty arguments before checking for Table instance type to avoid potential ArrayIndexOutOfBoundsException when passing arguments
replaced string literals with constants for OSSO header values in FakeOSSOHeaderDecoder to improve maintainability and readability by using constants
added deprecated annotations to deprecated methods in GenerateJavaSources , Config , and JavaGeneratorMojo to prepare for the removal of the suffix strategy option and encourage the use of alternative implementations
removed debug log statements for broken version checks in DerbyDatabase . java to streamline logs for better clarity and maintainability
[ bz - 1155425 ] added timeout to the ksession . getobjects ( ) . size ( ) test
replaced parallelStream ( ) with stream ( ) for better performance to improve loading speed during concurrent operations
updated string comparison and improved message handling logic in HubUpdater . java to ensure proper updates based on the liquibase Hub mode and provide clearer warning messages
added coreinfo version key constants and a test method for it in TestDDRExtensionGeneral to ensure accurate validation of version information for Eclipse OpenJ9 VM
updated the message formatting in FontFamily . java to handle CompositeFont instances explicitly to improve clarity of font request messages for better debugging
added import for HttpVersion and modified logic in NegotiatingServerConnectionFactory to utilize it to ensure compatibility with HTTP / 1.1 HTTP versioning
added RateControl import and set it to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to improve HTTP2 rate control behavior during tests
added a new file Test6741426 . java that implements a Runnable for rendering a JTextField to demonstrate the use of JComboBox and JTextField with NimbusLookAndFeel
updated the error message in the test to include the exception message to provide more context in the error message for better debugging
added checks for null values for dbMgdPath and dbExtPath in HMSHandler . java to ensure that managed directories are only attempted when paths are valid
( chore ) camel - s3 : align it with the new package structure
removed the accentColor parameter from setup methods in SettingsActivity for better preference handling to streamline the setup process by using preference screen directly instead of accent color
updated the exception message to specify that the folder path is relative to the fileAtRoot directory to improve clarity of the test failure message by providing more context
replaced usages of ClassTypeInformation . from ( Map , Collection , Object ) with ClassTypeInformation . LIST and ClassTypeInformation . OBJECT to improve type safety and clarity in handling data types
fix null address check in client config
8225128 : add exception for expire docusign root to verifycacerts test
fix output count to avoid deadlock
added conditional checks for popup click and menu state before setting mode to ensure menu mode is set only when appropriate based on user interaction
pdfbox - 5624 : fix arrayindexoutofboundsexception when read from fontbox - based stream
8014188 : improve the performance of finalizer . finalizer _ info on window
replaced ` . map ( routes ) ` with ` . doOnNext ( routes ) ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` classes to improve the handling of routes in the caching mechanism
add handling for a custom receiver address in the BurningManService to improve reliability by allowing issuance requests based on the specified receiver address
refactor StringSubject class to improve method organization to enhance code readability and maintainability
increase the size of the longData array from 1 , 000 to 1000 and add an @ Ignore annotation to temporarily disable the test due to potential issues with the longData array
change method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to adhere to Java naming conventions for better readability
updated query saving logic to replace " from : " with " from : " to ensure accurate representation of user input for recent queries
added a conditional check for forRebalance in SimulatorDiscoverer . java to ensure correct handling of rebalance scenarios in the discovery process
added a new POST mapping endpoint for importing YubiKey accounts into the YubiKeyAccountRegistryEndpoint to enable users to initiate and store accounts dynamically within the YubiKey device
removed multiple shader program constants from Lwjgl and updated asset retrieval method in FontMaterialProducer and AbstractNode to streamline shader management and improve error handling during asset resolution
added null checks for ` cnt ` and ` cnt ` in ` paintOnTopLoop ` conditions and safe area settings in ` SideMenuBar ` to improve robustness by preventing potential null pointer exceptions and ensure safe area rendering
updated the AbiWriterProtocol implementation to improve data writing accuracy and performance
added a null check for subName before setting the caption to avoid potential NullPointerException when subName is null
fixed crash when search for multiple issue with the same item use the same data flag .
added null checks and modified conditional logic for setting numeric types in CustomExpression . java to ensure robustness by validating initial state before accessing system . out
fix miss data request bug ( # 6551 )
added a new test case ` testCase4 ` to ` PostgresTest . java ` for validating database connectivity to ensure reliable functionality of the Postgres connection through automated tests
updated string literals in SubtitleUtils and RemoteUtil to use double quotes to improve code readability and maintain consistency with Java conventions
fix : correctly handle \ r and \ n for comment .
reuse atomicreferencefieldupdater in singleimplementor to avoid deadlock
added null check for excludeSet before adding queries to the qlist to ensure that only queries without including certain filters are added to the query list
added merging of child bridge to all child of a thing ( # 3606 )
replace printHelp ( ) method calls with error messages for missing or unknown commands to improve user feedback by providing clearer error messages when a command is missing
fix an npe in the java . nio . filecache . ANGLELoader . java to ensure that the program does not attempt to read from an existing file if it exists
camel - 1357 : fix simpledateformat . tocalendar when parse timestamps
added unit tests and query methods for retrieving Post objects by slug in PostRepository to ensure the PostRepository correctly retrieves posts based on its slug value
modified the canAccessDbaRecycleBin variable to be Boolean and updated its handling logic to improve clarity and ensure warnings are only generated when the DBA recycle bin can be access
added a static request factory for ` SimpleClientHttpRequestFactory ` in ` ClientRegistrations . java ` to configure connection and request timeouts for improved connection stability
fix ` source ` to respect path separator .
remove fallback to retrieve graalvm version system property
added validity checks for client and client configurations to ensure proper handling of access token and refresh token validity
update androidAPIVersion return logic to use the new API version from Options to ensure compatibility with new configuration settings when Android API version is not set
refactor code to remove redundant ' this ' references in PropertyPlaceholderHelper . java to improve code clarity and maintainability
removed unnecessary closing parentheses from the " Owner " string in resources . java to simplify the output format for better readability
updated imports and modified logic in ZkSolrClientTest . java to improve collection processing tracking to enhance the code ' s readability and ensure thread safety when accessing shared resources
added BigInteger type to simpleTypes in MongoMappingContext . java to support arithmetic operations in MongoDB
added a condition to check if the button text is not equal in HomeFragment . java to ensure the button is displayed only when appropriate
added a condition to check if MEncoder is enabled before executing certain conditions to improve flexibility in video encoding handling based on configuration settings
reduce event loop size down to reduce number of file handle
changed access modifiers of several fields and methods in CountMin4 and PeriodicResetCountMin4 classes from protected to protected to allow subclasses to access these fields and enhance extensibility
refactor ExternalFileField to implement a sorting mechanism and add a new test class for it to improve file handling during sorting and ensure correctness through unit testing
corrected the spelling of " Invalid URL " to " Connection error " in FetcherException to improve clarity in error reporting for connection issues
[ fix # 927 ] add source component id to the flightdatabuilder
refactor check method from private to protected final in ShapeRenderer . java to allow subclass access while maintaining encapsulation
added file synchronization handling in FileActivity to improve user experience by enabling users to synchronize synchronized file operations
updated the URI construction for generating the resized image and improved URL encoding to ensure the generated image adapts to URL encoding and enhance security
added checks to ensure the object is initialized before proceeding to prevent potential null pointer exceptions when interacting with the InfiniteContainer
updated the total calculation in IntHashSet to ensure it always reflects the expected value value
added lock handling to log error messages when a lock timeout occurs during feed update to improve error tracking and debugging by providing insights into lock conditions
refactor conditional checks for ACE handling in SolarisAclFileAttributeView . java to improve code readability and maintainability by simplifying conditional statements
replaced the list of edges with an array and simplified the sorting logic in LatLonTree . java to improve performance and simplify the code structure
added IOUtils . closeQuietly ( ) to ensure resources are properly closed to prevent potential memory leaks during file operations
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 55356
added strict property handling in Main . java and corresponding tests in MainTest . java to ensure correct parsing behavior based on the " strict " property configuration
force constraint to be alwaysinvalidconstraint ( # 6324 )
camel - 14263 : camel - http4 - instead of camel - http to support 4 . x
add a timeout value for wait things to the level out in TestCloudPivotFacet . java to improve reliability by ensuring that processes time out before proceeding
replaced multiple if - else statements for byte length checks with else block to simplify the code for better readability and maintainability
updated ApplicationTest . java file to improve test coverage and organization for better clarity
replace String concatenation with StringBuffer for string details in ConnectionFactoryImpl . java to improve performance and memory usage when manipulating string data
rename ` Type ` to ` RoboType ` in multiple files to improve clarity and consistency in type handling
[ java ] stop send action . abort when dispatch be complete on the recording subscription and archive .
dataimporthandlerbase : initialize ` ` cachekey ' ' and ` ` lookupkey ' ' when appropriate
added a new file PutfieldError . java that demonstrates the throwing of IncompatibleClassChangeError to validate that the expected error is thrown during runtime exceptions handling
fix multiple instance creation on the same address ( # 3744 )
add more logging to the memtable heartbeat enqueuing mechanism
replaced calls to ` Space . build ( empty , empty ) ` with ` Space . SINGLE _ SPACE ` across multiple files to improve code clarity and maintain consistent space usage across the codebase
added deprecate method encodedlength ( ) to flyweight to reduce confusion .
refactor TestMethodResultMapBuilder for improved clarity to enhance code maintainability and readability
added handling for null values in try blocks within FindNullDeref . java to improve error handling for potential null pointer exceptions
[ hotfix ] initialize tasklocalstatestoreimpl . lock in constructor
updated the method calls to return integer values directly instead of context resources to improve clarity and precision of time difference representation in the application
updated the handling of ` View ` instances in ` Utilities . java ` and ` FloatingIconView . java ` to improve support for DeepShortcutView in the rendering process
updated JwtIssuerValidator to use Predicate for validating JWT claims to enhance validation logic to ensure valid claims are validated based on the provided issuer
updated method names in CoinmateQuickRate and CoinmateMarketDataServiceRaw for clarity and consistency to improve code readability and maintainability by standardizing method names
added a new file CoverageConfig . java and updated CoverageController . java to use this new class CoverageConfig to improve code organization and maintainability by centralizing configuration logic
added a check to ensure EventBus is not registered multiple times to avoid unnecessary registration of sticky events when the view is already register
added ASCII - only check to normalize method in NormalizerBase . java to optimize normalization process by skipping unnecessary operations for ASCII strings
updated migration check condition in JobCoordinationService . java to ensure accurate validation of migration tasks during migration
added exception handling for SQL update statements in SpillableGroupByIT . java and created a test class in NoOpStatsCollectorIT . java to ensure that the update statistics SQL fails gracefully and provides clearer error messages
( chore ) camel - cometd : upgrade test to junit4 . x
fix html5 attribute syntax error ( # 920 )
add a line break to the HTML report in HtmlCoreReport . java to improve readability and structure of the report content
updated memory usage calculation to handle null scores to ensure proper calculation of total RAM usage even when scores are null
added StringHolder and modifying custom type adapters in CustomTypeAdaptersTest . java to handle string parsing and deserialization correctly for collection elements
add miss data from miningparameters when merging ( # 940 )
added a static final HashMap for numArgs and updated the method to use it to improve argument handling by tracking the number of arguments passed for better functionality
camel - 12427 : camel - path - use good javadoc by default
fix deadlock in migration listener
updated the parameter name from ' part ' to ' partOrList ' in the attach method to enhance clarity by indicating that the parameter can be a list or a list
jbrules - 2601 : twitter bootstrap should not require asset to be load pre - populated bootstrap resource
remove basiccategory from spanishtreebanklanguagepack since it ' s not use
hhh - 8979 fix compile issue due to deprecation warning
hbase - 20936 fix closing of future in regionserverflushtableproceduremanager and regionserversnapshotmanager
add workaround for 0 size in android pgraphics ( bug # 1153 )
fix # 172 fillpool - should fill the pool before create a new connection .
replaced assureMatchVersion ( ) method calls with a default value of Version . LATEST in multiple filter factory classes to standardize the handling of assureMatchVersion and improve consistency across filter factory implementations
fix : support for executable with default method ( # 6372 )
fix [ parser ] : parser fail with syntax error on japanese text
refactor various subject classes including GuavaOptionalSubject , IterableOfProtosSubject , MapWithProtoValuesSubject , and ProtoSubject to improve code organization and maintainability
fail fast if invalid payload be send to nio2 .
move publishsubscribechannel to ' dispatcher ' instead of ' channel ' ( avoids a tangle ) .
updated executionId type from String to Long across multiple classes to accommodate larger execution IDs for improved data handling
update digest calculation for image size to ensure correct size handling in the ImageProcessor class
added new import statements and logging statements in SolrConfig and SolrConfigHandler to enhance functionality and improve logging capabilities
updated the delay time calculation for mSyncResult to prevent too many automatic synchronizations when the current time is set
fix the last conversion time for segment v1 v3 format converter ( # 4649 )
refactor ` addPathToMTree ` method to use ` Path ` instead of ` String ` concatenation for better clarity and consistency to improve code maintainability and ensure the correct path is used throughout the query process
ww - 3508 - fix for package scan in jar that use file : uris
[ flink - 20705 ] [ table - planner - blink ] introduce utils to handle timestamp extractor timestamps
added a new class SpringSecurityAuthenticationSource to handle LDAP authentication sources to provide a structured way to retrieve authentication details and credentials from the authentication context
updated AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve concurrency handling and maintainability
updated minSdk from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with newer Android versions
updated the dialog implementation to use a cached list for custom filenames to improve user experience by allowing dynamic file selection using cached data
added a new test method ` testNewput ` and modified assertions in tests to verify behavior of asset issuance to ensure correct behavior of asset issuance features and validate expected behavior in tests
updated method signature formatting in MongoTemplate . java for consistency to improve code readability and maintainability
fix map overview image zoom handler ( issue # 2856 )
added similarity support to the KNearestNeighborClassifier class and updated related tests to utilize LMDirichScore for classification accuracy to enhance the functionality and accuracy of classification comparisons based on the similarity parameter
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to improve query performance by using a more efficient query implementation
updated reasons assignment in LowResourceMonitor . java to use getReason ( ) method to improve clarity and consistency in retrieving resource reasons
updated package - info . java files for mmm and ppp to improve documentation clarity and consistency
added MTU request handling methods in ShadowBluetoothGattTest . java and ShadowBluetoothGatt . java to enable proper testing of MTU request behavior with callbacks in BluetoothGatt
extracted the creation of ` ServletInputStream ` into a method ` createServletOutputStream ` to improve code readability and reuse by encapsulating the logic in a dedicated method
use severe log level for unsatisfiedlinkerror for voskstt service
# 952 resolve issue with concurrent access to process chain map . ( # 953
updated Japanese and Chinese resource files with corrected messages to improve clarity and accuracy of the user messages
hhh - 5973 - fix handling of ' unknown ' size in jdbc type mapping .
modified methods to be synchronized and refactored entity addition and removal to improve thread safety and streamline entity management logic
added control code and state tester functionality to TerminalView . java to enhance accessibility handling and improve testing capabilities
updated command behavior conditions in MenuBar and SideMenuBar classes to include support for SIDE _ NAVIGATION to ensure proper functionality when navigating between UI components
removed Disposable declaration from PoloniexManualExample . java and added state handling in WampStreamingService . java to improve code clarity and ensure proper disconnection of connected states
added validation for energy limit in UpdateSettingForEnergyLimitContractActuator and updated validation messages to ensure contract types are correctly validated and improve clarity of validation errors
updated variable names and added protocol handling in PostmanJsonBuilder and UrlBean classes to improve code clarity and ensure proper protocol integration during URL creation
camel - 5405 : added getter / setter method for namespaceprefixref in soapjaxbdataformat
fix testrange to exercise the spec on jdk 18
added a check to verify that the JettySolrRunner is found before restarting the authentication service to ensure that the application correctly handles security checks for the specified Solr server port
add price feed price to tradechartviewmodel ( # 79 )
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to ensure consistent server info port settings during tests
8015349 : ` ` abc ' ' . lastindexof ( ` ` a ' ' , - 1 ) should evaluate to 0 and not - 1
added file transfer management functionality in FileDownloader . java to ensure files are properly downloaded from a file storage upon completion
[ java ] set the length of the log filechannel . length to ensure the buffer be properly reclaimed .
added a method to check if a registry is running and refactored FileUtils to use this new method to improve code organization and enhance error handling during file operations
added startLoading ( ) method calls to Quick3dMain . java and TextureTest . java to integrate loading functionality into the component preset process
removed unused variables and added suppress warnings in multiple classes to improve code cleanliness and suppress compiler warnings for unchecked operations
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions when accessing instances
updated transaction isolation level handling to use TX _ MUST _ BE _ ENABLED _ TO _ ISOLATION _ LEVEL in SQLExceptionCode . java and PhoenixConnection . java to enhance flexibility in managing transaction isolation levels based on configuration
added transaction attribute handling to AbstractStepFactoryBean and improved error handling in ItemOrientedStep to enhance transaction management and ensure proper rollback on exceptions during processing
refactor CasManagementSecurityInterceptor to use DirectCasClient and improve security management to enhance client capabilities and maintain session profile integrity during authentication
fix # 370 : remove deprecate ` ` add category ' ' menu item
renamed the method ` cancel ` to ` cancelMatchingOperation ` and updated method names for consistency in the ` FileDisplayActivity ` class to improve method clarity and maintain a consistent naming convention
pdfbox - 1954 : fix classcastexception a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge to use getTextSizePx ( ) instead of getFontSize ( ) to improve accuracy of font size representation for better user experience
implicit locus : check for validity before modify the fact to avoid potential null pointer exception .
refactor DistBuildTargetGraphCodec , ConvertingPipeline , and Parser classes for consistency to improve code maintainability and readability
return new ArrayList < > ( this . spans ) instead of this . spans to ensure that the returned list is independent of the current instance
removed unnecessary waiting for lock service to simplify the code and improve readability
added a method to set the revision in MicroserviceVersions and updated tests to reflect revision changes to ensure proper handling of the revision during microservice version validation and improve test reliability
updated foreign key and index name formatting in AbstractRetriever and TableRetriever classes to improve clarity and maintainability of foreign key and index names
camel - 16536 - camel - aws2 - s3 : add option to configure endpoint override endpoint
removed unused parameters from getBitstampUserTransactions method in BitstampAccountService . java and added a new method in BitstampAccountServiceRaw . java to simplify the method signature and improve code readability by eliminating unnecessary complexity
added try - catch block around the getComponentInstance method to handle potential NoSuchComponentException to improve robustness by preventing application crashes due to missing component in blueprint container
http : / / issues . apache . org / jira / browse / amq - 3135 - implement remote push support via tomcat
[ gr - 35414 ] load legacyaddresstestdataset to test legacyaddress . txt .
made the ` findDropTargetAt ` method public to allow access to the method from other classes
refactor Snackbar handling methods for better readability and maintainability to improve user feedback during push notifications
fix the channel close issue . patch provide by kirill romanov via github . com
simplify checks for empty results and improve logging syntax in LdapPasswordPolicyEnforcer . java to enhance code readability and maintainability by using utility methods for string concatenation
refactor DefaultAnnotationEngine and Stubber files for consistency to improve code maintainability and readability
added an @ Ignore annotation in MemoryManagerTest . java to temporarily disable the test due to PHOENIX - 2840
nifi - 124 : add a time zone to the xml dsl to allow set the time zone .
fix split boundary split to never split directory
no effective change - code cleanup - remove useless try catch
fix concurrent modification exception in CircuitManagerImpl . java ( # 779 )
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to provide a more general error handling mechanism for fetch uniforms
flume - 305 . fix some more breakdown of the pollingsinkrunner class .
changed logging level from error to info in FastBindLdapAuthenticationHandler to improve clarity of error messages during authentication failures
refactor ContainerOrderFocusTraversalPolicy to improve readability to enhance maintainability and ease of understanding for future developers
change method return type from double to int and update class definition for GeoLocus to improve consistency with data types in geographical functions
changed the constructor parameter name from ' source ' to ' source ' in CasRiskBasedAuthenticationEvaluationStartedEvent . java to improve clarity and consistency in parameter naming
refactor connection handling and logging in SchemaCrawlerMain and Executable classes to improve resource management and enhance logging clarity during execution
bump default tl version to v1.2 with a fallback for old jdks
[ java ] fixed typo in an exception message that be cause the build to fail .
modified audio queue handling logic in MediaManager . java to ensure proper termination of audio queue when no playback position is active
removed unnecessary debug logging statement in HttpConnection . java to simplify logging statements for better readability and performance
added support for transient fields in JpaPersistentPropertyImpl and corresponding unit tests to ensure proper handling of transient properties in JPA entity persistence
updated stack version assertions and version checks in UpgradeResourceProviderTest . java to ensure accurate version comparisons between upgrade and repository versions
trufflevm : update eval method to return object instead of symbol
make isbinary ( ) method public , add some doc
corrected the spelling of " parition " in the configuration for dynamic partition pruning max data size to ensure consistency and accuracy in configuration settings
remove error categorization in javaparser because we ' re not use it anymore .
remove dictionaryindexconfig . default _ offheap from dictionaryindextype and make it no longer require
replaced hardcoded newline character with system - dependent line separator to ensure consistent line formatting across different operating systems
updated DebugHelper . java file to improve debugging capabilities and maintain code consistency
added a boolean field ` ownsTexture ` to ` ParticleEffect ` class to ensure texture ownership before proceeding with further operations
hive - 8844 : add ldap sub - config to conf ( daniel dai , review by thejas nair )
fix : remove outdated javadoc from datacatalog search
modified input method management in DetailActivity to include SHOW _ FORCED option to enhance user experience by allowing soft input behavior in the activity
added a test for converting primitive types to maps in DataTableTypeRegistryTableConverterTest to ensure the converter correctly converts different data structures into their corresponding types
updated memory size retrieval from 500 to 50 and added file deletion to improve resource management and enhance file handling capacity
update error message to indicate that we need to close the open resource before filing a bug report
added a ` dropSequences ` method implementation for multiple database classes to standardize the handling of migration failures across different database implementations
added a null check for the status variable to prevent potential null pointer exceptions during execution
update DocumentBuilder to assign the result of createField to a variable to improve code clarity by explicitly defining the variable before use
show leaves or parent style for hierarchical icon , fixes # 74
datamongo - 551 - add test for upsert operation .
hbase - 22289 : fix inspection violation about ambiguous method call
added methods to record launch statistics and updated broadcast intent handling with null checks to improve code robustness and readability by avoiding potential null pointer exceptions
added graphics creation and disposal in JavaSEPort . java to enhance rendering performance by utilizing Graphics2D for graphical rendering
[ # 8282 ] remove previous team from response list when edit a team
modified ID generation logic in Inventory . java to handle zero values for player ' s inventory IDs to ensure correct ID generation for players with zero IDs
add a conditional check for ' found ' before breaking in ConfigDescriptionRegistry . java to ensure that the loop only continues when a relevant condition is met
updated method signatures and logic in multiple parser visitors to include returnType = null to ensure proper handling of null return types and improve code readability
refactor initialization of blended tiles in TileMapRenderer to handle null cases and ensure a default array is provided to improve robustness and prevent potential null pointer exceptions
remove unnecessary / unused class from probe . java ( findbugs )
ggb - 545 : make sure sum ( a ) ^ ( a ) ^ ( a ) ^ ( b ) consistent across different case
changed variable initialization for lockOnSync and throttleRate in Throttler . java to ensure proper assignment to lockOnSync and throttleRate while maintaining encapsulation
pipe : add a test for the event bus modification speed listener ( # 10680 )
solr - 6511 : increase timeout in zkcontrollertest . testzookeeper
added test for handling client parameters in the TokenMvcMockTests class to ensure proper functionality of token generation with client credentials
added support for KeepWordFilter and updated brokenOffsetsConstructors in TestRandomChains . java to enhance argument handling for specific filter types in the analysis process
removed the unused JUnit Ignore import from RandomPlaneTest . java to clean up the code and improve readability
fix data type for long / long llvm memory entry .
refactor ` btCollisionObjectArray ` and ` btRigidBody ` to utilize ` btCollisionObject . getInstance ` instead of direct usage to improve code clarity and simplify the object creation process
added a copyright year retrieval method and updated contributor information in ` AboutDialog . java ` to improve copyright management and ensure contributors are accurately
add client . getdistributedobjects ( ) method to jetclientinstanceimpl . ( # 1877 )
fix unit test after last commit to get travis to fail
updated memory usage from total to max in SmartDexingStep . java to ensure more accurate memory management in the system
[ iotdb - 5499 ] fix schema fetch error bug ( # 7385 )
remove duplicate check on payout tx to prevent validation error
updated JSON string initialization and added exception handling for " big _ integer _ t " to improve data processing and ensure proper handling of large integer exceptions
updated the condition for exceeding the table size in ObjectSet . java to ensure that the capacity limit does not exceed the limits of 0x40000000
core - 2321 fix nullpointerexception in columnsnapshotgenerator when migrate redshift
removed unnecessary @ AddToRuleKey annotations from several fields in AppleTest . java to simplify the code and avoid unnecessary serialization
added security checks for query results and enhanced content handling in FileHelper and TextHelper to improve robustness against security exceptions and ensure consistent behavior when querying content
added a new constant for style attributes and implemented tests for attribute resolution to enhance theme functionality and ensure correct behavior of attribute resolution
updated sheet name comparison logic in HSSFWorkbook . java and improved test cases in TestHSSFWorkbook . java to ensure correct sheet handling and enhance test coverage for different sheet types
updated the tint variable to use the new elementColor method instead of primaryColor to better align the color usage with the UI design
modified the handler initialization to account for a null replyHandler to prevent potential NullPointerExceptions when replyHandler is null
added binary collation functionality to MariaDbDbmsType and MySqlDbmsType classes to enhance database operations to support collation for binary data in MariaDB
added a method to convert tree type to Optional to improve type safety and handle potential null values gracefully
add method to get user view destination for item launcher
replaced JSON response with temporary redirect URI creation to improve response handling by providing a direct user - friendly link
[ flink - 9597 ] [ kinesis ] make flinkkinesisconsumer serializable ( # 15955 )
camel - 10568 : fix the javadoc error in camel - ssh
replaced a busy - wait loop with a try - finally block to ensure zkClient is properly closed after creation to improve resource management and prevent potential resource leaks
renamed the method from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` and updated related calls to reflect a new functionality to improve clarity and reflect the new transition behavior in the UI
refactor the read method in ProxyHandler to use an existing read method to improve code clarity and reuse by consolidating the logic for reading from the endpoint
replaced instances of BufferUtil . allocate with ByteBuffer . allocate for ByteBuffer operations to simplify buffer allocation and improve code readability
modify the method ` prepareStreamsToUpload ( ) ` to return a boolean and update the return logic accordingly to improve code clarity and ensure the method returns a boolean indicating success of the upload process
[ scb - 1399 ] use integer . compare ( ) to compare order ( # 1399 )
added a new file PicOfDayAppWidget . java to handle image updates for app widgets to enhance the widget functionality for a better user experience
bug 10629 : default to ` ` 0 ' ' for internalloadbalancervirtualmachine in case of incorrect service offering id
updated HiveParserCalcitePlanner to use HiveRelOptUtil and modified join condition handling to improve query optimization and support for semi - join conditions
[ flink - 16980 ] [ table - planner - blink ] deprecate key in the flink - streaming - api
added credentials for remote jmx access and updated JMXConnector initialization to allow flexible configuration of credentials for the remote jmx connection
remove redundant variable and its initialization in Stemmer . java to improve code clarity and reduce memory footprint
updated parameters in AppsCustomizePagedView . java for widget handling and improved performance to enhance widget rendering efficiency and ensure correct page count handling
ticket # 4410 : preview : only show 3d view if there be a thumbnail
modify rotation rotation calculation in GcodeRenderer . java to ensure rotation is within valid range to prevent potential negative values and improve rendering stability
added workspace directory option to TerminalClient and updated DAEMON description to allow users to specify a workspace directory for better configuration management
updated file path for options from " . apt " to " . html " to ensure the test correctly references the expected HTML file format
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and maintainability
updated the OAuthConfirmationController to use a Map for model attributes and refactored the confimAccess method to simplify the model and enhance code readability by reducing unnecessary model attributes
fix spurious test failure in testgetcachemultiplecachehitcount
rename EventBusHook class in multiple files to improve clarity on event handling functionality
updated MultiPaintEventTest . java file to improve test coverage and organization for event handling
changed variable declaration for mNewScale from final to non - final to allows for potential modification of mNewScale during the transition animation
doc : explain why peersync fingerprinting be sometimes off
solr - 4760 : schema . getuniquekeyfield ( ) now support ` ` uniquekey ' ' attribute .
added roundBorderColor attribute and updated document filter settings in BorderEditor and EditableResources classes to allow for dynamic border color customization and improve user experience
add compilerasserts to avoid compilation warning .
[ hotfix ] [ test ] use declarativeslotpoolbridgebuilder in defaultschedulerbatchschedulingtest
add some more logging to the gateway socket processing
added menu item listener functionality to RecentChatFragment to inform users when an item is selected to enhance user interaction by providing direct access to essential information
renamed ` InfoDropTarget ` to ` UninstallDropTarget ` and modified methods to return boolean values to improve clarity and functionality of drop target management
replaced ` add ` and ` removeTail ` methods with ` push ` and ` pop ` methods in various classes to improve method naming consistency and clarity in scope management
update API and related URLs to use " commons . wikimedia . org " instead of " test . wikipedia . org " to streamline the application to focus on the more appropriate media resources
refactor index management by introducing ` setIndex ` method and restructuring related logic to improve code readability and maintainability by separating logic into distinct methods
replaced usage of Collections . sort with direct method calls on objects to improve code readability and reduce dependency on Collections API
added multiple date - time patterns " yyyy " to the FormatData _ hr _ HR . java file to enhance date formatting capabilities for better usability
clear focus on the clickedView in DetailFragment to improve user experience by ensuring the correct view receives focus
replaced ` notifyDataSetChanged ( ) ` method with ` setSelection ( position ) ` and modified conditions for setting selection in ` DescriptionsLanguagesAdapter . java ` to ensure the spinner description is displayed correctly based on its selection state
updated time zone entries to use " West Samoa Daylight Time " instead of " West Samoa Summer Time " to accurately reflect the geographical region of the current time zone
added native methods for register global and weak access fields and improved access field access logic to enhance functionality and ensure correct state management during field access
added handling for UNION and NULL types in ReflectData . java to ensure proper default value assignment for UNION and NULL types in schema handling
camel - 4266 : fix incorrect seda blockwhenfull test
added a null check before remapping the RClass for resourcePath to avoid potential NullPointerExceptions when the RClass is null
fix # 5558 support default dialect in hapifhir
camel - 5490 : added httpclient . client . connection = close to httpproducer to force the call to close the connection when the producer be use
updated socket timeout duration from 60000ms to 120000ms in BasicDistributedZkTest . java to allow more time for distributed operations before timing out
added assertion to verify the correct count of terms in a ticket to ensure that the query returns the expected result based on the final price cts
refactor the Parser class for improved readability to enhance maintainability and ease of understanding for future developers
refactor CasProcessingFilter class and related imports to improve code readability and maintainability
refactor child node retrieval methods to use getFirstElementChild ( ) . getFirstElementChild ( ) . getFirstElementChild ( ) instead of casting to NestableNode to improve code clarity and reduce casting overhead
planner - 524 fix for enum look up strategy
[ java ] wait for cluster to shutdown to ensure it be up to date .
provide a less severe log level when remove @ el . bean . elresolver . properties
added a content type setting for " application / octet - stream " in WebdavEntry . java to ensure proper handling of binary data requests
added a method to get the queue size from the delegate in LazyTraceThreadPoolTaskExecutor to ensure that the queue size is correctly configured based on the delegate ' s queue size
fix distanceop for envelope to always match minimum value
ww - 3818 renames require attribute into requiredlabel to well reflect the purpose of the parameter
updated the updateProgress method in PurgingPartitionIterator to ensure progress updates are consistently applied during iteration
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references to use it to improve clarity when handling nested array paths in Drill
basemonochromebitmapsource have two method for getheight , getwatermark , and getwidth .
added validation to ensure that only vertices contain at least 3 points in the polygon to prevent illegal argument exceptions during polygon processing
replaced ObjectMapper instantiation with ObjectMappers in multiple files to standardize object mapping and improve consistency across the codebase
slight tiling change : no npe when there be no square curve .
patch from http : / / issues . apache . org / bugzilla 47384 - fix externalnamerecord to correctly handle unicode name
nifi - 1275 : correct a typo in the documentation for jmsprocessor . queue / toPIC
added logic to exclude " username " and " password " from login prompts in the LoginInfoEndpoint to enhance security by preventing sensitive data from being processed
replaced the remove method with removeIf to compare listeners to ensure listeners are removed only if they are equal
added a case for actionToggleSpin in PieChartActivity to enable spinning of a chart during the toggle functionality
bug 10727 : return a detailed error message upon vhd migration failure
hbase - 19420 avoid normalizing table under a namespace that have quota ( # 4374 )
removed unused import statements and added a resize method for pressure in AndroidInput . java to improve code organization and ensure proper resizing behavior
add method propertyvaluesof ( ) to allow more test
ignore test that be never fail and block PRs .
fix the apothecary arrow not use the center properly . close # 232
added authentication dialog functionality in SsoWebViewClient . java to enhance user experience by providing guidance on authentication options
refactor TestStressIndexing2 to improve document deletion and query handling to enhance code clarity and maintainability by separating delete and query methods
[ flink - 22559 ] [ test ] ignore upsertkafkatableitcase until flink - 22559 be fix
replaced ` pg . types . get ( j ) ` with ` pg . types . computeIfAbsent ( j , k ) ` and modified the calculation of ` csize ` and ` endPos ` in ` ResTable . java ` to improve performance by using ` computeIfAbsent ` and simplifying logic for better readability
added configuration to accept single values as an array in the ObjectMapper to enhance flexibility in handling incoming JSON data
updated localization log message to indicate UK and SL to enhance clarity for users about the localization updates
bugfix # 132270 , use resourceutils . getstring for shortcut _ categories
drools - 3540 fix instanceof operator for and / and and ( # 3561 )
nifi - 508 : added mime type attribute for the flowfile in gethttp
get rid of provenance per - call when create bundle
add a button for " done " and rename " exitButton " to " doneButton " and update its click listener to improve user interaction by using a more appropriate button ' s functionality
camel - 12489 : camel - nats : remove redundant documentation from camel - nats
refactor the ` invalidateStalePartitions ` method to accept a list of ` PartitionNameWithVersion ` and ` metastoreContext ` as a parameter to improve code clarity and maintainability by consolidating partition invalidation logic
bug 53522 - view result tree : do not allocate buffer in full mode
replaced ` ic _ group ` with ` ic _ chat _ bubble ` in multiple files to improve the visual representation of the bubble icon in the user list adapter
[ java ] fix race condition when send the record to a closed counter in broadcast receiver .
renamed test methods in MocksCreationTest for consistency and clarity to improve readability and maintainability of test method naming conventions
added a new constant for ` CSVThirdEyeDataSource ` and changed the access modifier of ` generateDetectionConfig ` in ` YamlDetectionConfigTranslator ` to public to enhance accessibility of data source and allow external access to the method
updated awaiter timeouts from 10 seconds to 30 seconds to allow for a longer processing time during phaser synchronization
removed the ` BuildSlaveFinishedStatusEvent ` class and simplified the ` DistBuildSlaveFinishedEvent ` to streamline the event publishing process and eliminate unnecessary complexity from the codebase
fix 2 findbugs encode warning in vmwarestoragemanagerimpl . java template uuid generation
add test case for deposit workspace item without a workflow group
[ api ] distribute classpath entry when create resourcebundle ( # 3658 )
remove unused method ` isBoxedPrimitive ` from ` Unbox . java ` to streamline code and reduce unnecessary complexity
refactor argument handling in SpecificCompilerTool and add a test for ordered command - line flags in TestSpecificCompilerTool to improve code efficiency and ensure correct argument processing
added null check for table before deleting directory and improved table handling in HiveMetaStore to ensure directories are only deleted for non - external tables and validate functionality through unit testing
updated async execution thread management and improved exception messaging in HiveServer2 to enhance concurrency handling and provide clearer feedback on server status
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for the execution command and component to improve code clarity and maintainability by reducing hardcoded values
fix nullpointerexception if no conf information be present in the message .
fix an issue with the reloading of the log model on reload ( # 1832 )
updated return conditions in ChannelEndPoint . java to include conditions for output and input shutdown checks to ensure proper handling of shutdown scenarios in the channel endpoint
refactor SetNullableGenerator class in multiple files to improve code readability and maintainability
camel - 2434 - add support for camel - example - reportincident
simplified import statements and refactored form data handling in NettyRoutingFilter and FormIntegrationTests to improve code readability and maintainability
add swagger annotation to service interface method ( # 3324 )
updated lifecycle listener handling in Lwjgl3Application and Lwjgl3Window classes to improve lifecycle management and ensure proper cleanup of listeners before destruction
updated the FG _ FK color value from 90 to 200 in UIUtil . java to improve the visual distinction of the foreground color
mow - 530 make mp3 optional in the sound manager
improve asserts for system keyspace built index ( cassandra - 667 )
add info about section to the generalPreferences page
[ flink - 4900 ] [ test ] fix customserializationitcase to not throw unchecked exception
updated the MediaFormatUtil class to improve media format handling to enhance performance and maintainability of the media format utilities
added a method ` isCellEditable ` to the ` GeneralTab ` class that returns false to indicate that cell edits should not be allowed
added a method to check if unused dependencies are printed based on the ` isOnlyPrintCommands ` flag to improve command execution feedback based on configuration settings
added a temporary count variable and updated the vscales array initialization in VocalTractModifier . java and VocalTractScalingProcessor . java to track the number of threads processed and ensure proper scaling behavior
hive - 16231 : fix test to pass with new hadoop api ( sergey shelukhin , review by prasanth jayachandran )
implemented hashCode and equals methods in UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for objects of UaaAuthenticationDetails
* added support for new anim package in test skeletoncontrolrefresh .
truffle : rename to nodefilter to avoid confusion
updated condition in NodeImpl . java to include an additional check for SYNC _ FETCH _ BATCH _ NUM to ensure that blocks are fetched against the correct number of blocks
updated the state from 365 to 366 and adjusted string values in DebugExpressionParser . java to ensure proper representation of numeric types in debugging expressions
refactor dependency handling in ExcludeDependency . java to use streams to improve readability and maintainability of the code
replaced ` tmp ( ) ` method with ` dst2 ( ) ` and updated the ` lerp ( ) ` method signature to improve clarity and consistency in vector operations
initialize the args array to an empty array instead of null to avoid potential NullPointerExceptions when accessing arguments
updated RustBinaryDescription to use ImmutableList instead of List for rustcFlags and added a new method to retrieve linker flags to improve flexibility and ensure proper handling of linker flags in the build process
[ # 7462 ] add retry for fail test when phantomjs be enable ( # 7467 )
added query name configuration for Hive and external DAGS in multiple classes to improve logging for better traceability of LLAP split generation
fix checkstyle issue in block / atlas / tileatlas . java ( # 790 )
refactor EscapeProcessingOutputStream to use AtomicBoolean for closed state and improve error handling in GradleDaemonExecutor to enhance thread safety and maintainability during stream closure operations
modified the validateQuery method to accept an additional variable number of arguments to enhance flexibility in error handling by allowing variable argument passing
updated INDEX _ VERSION from 1 to 2 and refactored the getTree method to use the more descriptive constant names to improve code readability and maintainability by reducing redundancy in method declarations
[ flink - 11323 ] [ core ] add test for kryoserializer registration
added null check before removing a property in BlueprintConfigurationProcessor and updated the count of updated configurations in BlueprintConfigurationProcessorTest to ensure that null values are not added , improving the safety of property management
refactor Boolean handling in MetaStoreDirectSql to utilize BooleanUtils for better type conversion to improve code readability and maintainability by centralizing boolean conversion logic
added hideCustomizationDrawer ( ) method to the Launcher class to improve user experience by hiding the customization drawer when needed
replaced the handling of warning keys in TermVectorComponent to improve clarity and maintainability by centralizing warning key management
8059231 : verify that octane raytrace now work with optimistic type turn off . add well log for optimistic type in the compiler .
updated expectations handling in Expect . java to improve clarity and maintainability of the code
added a new class UnixSocketConfigurationStrategy that implements Docker configuration to facilitate unix socket access in Docker for improved configuration management
lucene - 10611 : fix flaky test even low rate
camel - 13837 : camel - core - reactive stream should be a adviced when there be no active subscription
refactor Vectorizer to use convertMapWork for Tez tasks instead of MapRedTask validation to improve the handling of Tez tasks in vectorization process
added a boolean parameter to constructors of StringAppender and LogDivertAppender to ensure proper initialization of the appender components
fix a npe when close the gui package
avoid some race condition when parse function with weak link .
8068661 : incorrect gpl header cause re script to miss swap to commercial header for licensee source bundle
# 1554 - enh : add test for lazy loading of transaction - thread local
added a check for invalid operation handles before verifying success with info messages to enhance error handling and provide clearer warnings for invalid operations
replaced ` ALTER _ TABLE _ ALTER _ COLUMN _ NULL ` with ` ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL ` in multiple files to accommodate the new operation that requires a null value
camel - 17644 - support ability to load property from vault / secrets cloud service - aws secret manager
refactor SimpleTree class to improve code readability to enhance maintainability and reduce complexity
simplified the error response formatting by removing the exception message concatenation to enhance code readability and maintainability
modified the ` fromContent ` method to accept a ` subTree ` parameter to enhance functionality by allowing sub - tree processing
patch from joost ouwerkerk from bug # 4502 - fix column width calculation in hssfsheet
updated argument order in the less command to include configPath to improve clarity and functionality by using the appropriate path
replaced ` Set ` with ` Collection ` in several methods in ` DotWriter . java ` and ` GraphExecutable . java ` to improve performance and flexibility when handling collections
use docker 1.0 . 0 in testcontainers ( # 2451 )
add assertion to validate that hostId is not null to ensure robustness by preventing potential null pointer exceptions
refactor DefaultGroupKeyGenerator to simplify rawKey generation using BlockSingleValIterator to enhance code readability and maintainability by reducing complexity
updated the test method to handle seeking exceptions more effectively to improve error handling and ensure tests accurately reflect end - of - file constraints
fix compiler issue in bcsiliconrecipes . java ( # 7226 )
fix a bug that could cause nullpointerexception when save a graph value
simplified visibility logic for child views and refactored drag exit handling to improve code readability and maintainability
updated the ModifyRequestBodyGatewayFilterFactory to apply the original body when modifying requests to ensure correct handling of empty request bodies during the modify request modification process
added package access modifier checks in ConstructorFinder , FieldFinder , and MethodFinder classes to enhance security by ensuring only public methods are recognized as package accessibility
replaced warning messages with trace logging in LoggingHandler . java to improve logging granularity for better debugging and monitoring
refactor prefix substring logic in WhiteBlackList . java and add a new Issue348 . java file with a test for wildcard handling to improve code correctness and ensure wildcard handling works as intended
added menu functionality and improved image handling in GalleryActivity to enhance user experience by allowing quick access to gallery images from the gallery
refactor MongoDBServiceFactory to use a singleton instance and service only once to improve resource management and ensure a single instance is used throughout the application
patch from stefan penndorf to describe the behaviour of inline constant mutator with booleans
added a Blackhole parameter to the decode method and modified its implementation to improve data handling by utilizing the Blackhole for better memory management
fix : update gapic - generator - java with mock service generation fix ( # 725 )
[ knx ] fix issue with empty ' value ' value in devicethinghandler ( # 16290 )
cleared the clear method call on the witnesses collection to improve performance by eliminating unnecessary witnesses
[ jdbc ] do not throw prestoexception when abort
removed the stack property from the script object and replaced it with getter and setter methods to improve encapsulation and control over stack management
removed a condition that checks if a path name starts with " . " to simplify the path validation logic
renamed onboard to autoload in ThirdEyeAnomalyConfiguration and ThirdEyeAnomalyApplication to improve clarity and consistency in configuration management
added a call to ` clearIndex ( ) ` in ` BasicFunctionalityTest . java ` to ensure the index is reset before running tests
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 to adjust the weight for better visual aesthetics
modified the ` fThreadGroup ` variable to be volatile and modified the constructor of ` Timeout ` to use the new parameter ` lookForStuckThread ` to improve thread safety and ensure proper initialization of timeout properties
refactor ValueResultData to reorder the constructor and getter / setter methods to improve code readability and consistency in value management
updated hash code and equality check in FuzzyQuery . java to ensure correct behavior for object equality and hash code generation
removed unnecessary print statements for SIMON output in PushedResourcesTest . java to clean up the code and improve readability
changed return type of removeFile and removeDirectory methods from SharedRandomAccessFile to void to improve method visibility and simplify return statement
updated the product version check from " 2.5 . 1 " to " 2.6 . 0 " in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to ensure compatibility with the latest database engine version
updated the ` retrievePersonAttributes ` method and improved the principal creation process to enhance the method for better handling of attributes and simplify the principal retrieval process
changed log level from info to warn for certain messages in OpenWebNetBridgeHandler . java to improve the visibility of configuration issues for better user feedback
updated method names and constants in Hashing and other hash classes for consistency and clarity to improve code readability and maintainability by using a uniform naming convention
added a constructor to ThumbnailGenerationTask for managing thumbnail generation tasks to ensure a valid storage manager is provided to avoid potential null pointer exceptions
updated the condition in GroupSelectionQuery to allow retries on the number of attempts to improve robustness by ensuring the loop properly handles cases where the number of retries is reached
added a new class Bug1933922 with compiling and handling methods for file and program retrieval to address bug 1933922 related to recursive compilation
simplified the comparison syntax by removing unnecessary parentheses in multiple classes to improve code readability and maintainability
update condition in FileResolver to check for space characters 0 - 31 to ensure the validity of control characters in the file name
added requestFocus ( ) method call in Display . java to ensure the component receives focus after processing new input
[ # 9594 ] instructor home : make it test suite more robust ( # 9696 )
rename ` JsonParserAsync ` to ` JsonStreamParser ` in multiple files to reflect the new functionality and improve clarity in the codebase
updated Crouton handling in DetailFragment and MainActivity to improve clarity on intent and ensure Crouton ' s cancellation occurs correctly during lifecycle events
[ iotdb - 4067 ] fix unsupportedoperationexception when fetch timeseries with unrelated template ( # 5577 )
modified Dialog . java to update its implementation to enhance user experience by improving dialog interaction
replaced the ` Runtime . getRuntime ( ) . exec ( args ) ` method with a ` ProcessBuilder ` for better process execution management to improve code maintainability and ensure proper execution of the process
chore ( test ) : avoid lookup the local host name in incrementpastwindow
refactored the computation of the subsystem and base from multiple variable declarations to a single method call to improve code maintainability and reduce duplication in path handling logic
skip some test on macosx
move jvmciversioncheck to testng - modules
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
8172522 : [ testbug ] testlargepageuseforAuxmemory . java need update to copyright header
updated BinaryParser and PlainTextParser to use a context parameter for input stream reading and added charset handling in ParsingExecutionContextView to improve input stream handling and enable customizable character encoding
added support for MultiPartFormDataCompliance in HttpConfiguration and created a corresponding getter / setter methods to enhance flexibility in handling multipart form data
upgrade gradle tool to 7.2 - rc - 2 with jdk 17 support
use gettypes instead of add to types in snapshotcontrol . ( # 439 )
refactor Term class to improve code readability to enhance maintainability and facilitate future development
modify return statement to handle null and empty values for runWith to ensure that runWith is not null or empty before proceeding
added test for amq - 6570 - add xaresource . issameresource test for amq - 6570
updated multiple Java files by renaming and adjusting imports to improve code clarity and maintain consistency across the project
fix the blackbox count test and improve result assertion .
updated method calls to use a dedicated variable for mTintAmount in TaskView . java to improve code readability and maintainability by reducing repeated method calls
added a new file SumZeroFunctions . java that implements the SumZero aggregation functionality to provide a simple sum0 function implementation in the Drill framework
fix incorrect null id assignment ( # 12597 )
hbase - 16597 add extra info in getallocationfailwarningmessage when region be fail to allocate ( ferdin )
added a null check for the property before inserting it into the roleObject to avoid potential NullPointerExceptions when accessing properties
made fields ` mTouchSlop ` , ` mCanIntercept ` , and ` mDownEvents ` public in ` StatusBarTouchController ` for better testability to improve testability and maintainability of the code
added functionality to log container stream information with specific parameters to enhance container management by allowing users to keep stream open indefinitely
mvstore : improve performance of cache operation with parallelization
changed the long value representation from " L " to " J " in PrimitiveType . java to ensure compatibility with the new data type
changed the method signature of delegatingApplicationListener from instance to static to allow the method to be called without an instance of the enclosing class
camel - 8193 clear message body after use a restbinding advice to avoid issue with camel - core
added FileDeletingTasklet and TaskletJobFunctionalTests classes to implement file deletion functionality to facilitate batch processing in the application
ggb - 2208 do n ' t update center and rotation regular view after init
added index out of bound check for primitive array access .
updated ` sendEventToTest ` method to accept an ordinal parameter and adjusted related method calls to improve event handling to use the correct state ordinal for better state management
added checks for video thumbnail request in RequestHandler and related classes to ensure proper handling of video thumbnail requests based on user agent settings
fix ( errorchecker ) : always scroll past end of line ( fixes # 1445 )
update the layout constraints for the menu button in SideMenuBar based on the theme settings to improve the user interface responsiveness based on the application ' s theme settings
added " libskia " to the value and link settings in Skia . java to ensure compatibility with the latest Skia library version
add handling for networkparameters that use unittest network id
added validation to check for format arguments in QueryCommand to ensure thatformat arguments must not contain format strings to improve error handling and provide clearer feedback during query execution
replaced ` @ DoNotSub int ` with ` @ DoNotSub int ` for managing the capacity variable to simplify variable management and improve code readability
updated walkRuleAndAdd method to include projectConfig ' s getSrcRule ( ) parameter and modified dependency traversal logic to ensure dependencies are correctly identified based on the source target of the project configuration
allow patch module to be override from source query ( # 9751 )
[ java ] always send request to consensus module when upgrade to 1.6 . 8 .
updated the default policy for OwnCloudClientManagerFactory based on authentication type to ensure compatibility with both SAML and non - SAML authentication environments
improve error message for miss mappedtableresource ( table )
reduce the risk of deadlock when close the jms connection
refactor AnonymousAuthenticationFilter to use a Supplier for deferred security context handling to improve efficiency and clarity in managing anonymous security contexts
modified the removeActor method to accept an additional parameter for unfocus control to enhance the functionality of actor removal by allowing for different behavior when removing actors
updated the prompt method for cloudConfig to use a valid configs variable to improve code readability and maintainability by reducing duplication
fix ( netty ) : optimize write context close
updated multiple Java files to improve code organization to enhance maintainability and readability of the codebase
replaced the direct call to update ( ) with SwingUtilities . invokeLater to ensure UI updates are performed on the Event Dispatch Thread for thread safety
camel - 3725 : fix camel - groovy to work in osgi environment
add a hook to keep track of artifact that need to be use for the plugin dependency resolution , no need to zap the data
[ flink - 22898 ] [ sql - client ] make flink - sql - client option public
refactor ` TestSharedPreferences ` to remove the ` ShadowSharedPreferencesEditor ` class and add a new test class ` TestSharedPreferencesTest ` to facilitate unit testing of shared preferences functionality
removed the retrieval of storage aliases from the HttpsMessenger to streamline the process of identifying and displaying certificate chains
alexeibarantsev : improved error message if a command call can not convert a response to a text
change access modifier of updateImage method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access updateImage methods for image updates
[ 1.4 . x ] fix block . removeitem not drop their inventory resource ( # 8 source code ! )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enable retrieval of spatial location calculator configuration in a more efficient manner
pdfbox - 4071 : fix typo find by codespell on fossies . org
fix # 678 : treetrie . isempty be now correctly check for node . _ root
updated foreground and background method calls in AttributedStringBuilder . java to use parameters directly to improve code clarity and reduce redundancy in background color calculation
solr - 13414 : peersync disable fingerprint by default and document it
[ gdax ] make movefund public so that it can be use from cli
added tests for ` PersonWithIdPropertyOfTypeUUID ` and modified ` maybeEmitEvent ` calls in ` MongoTemplate ` to enhance event handling and ensure proper event emissions during database operations
fix # 1562 . should fix collectionitem serialization in collectioncontainer
fix bug # 54299 - avoid resource leak in tika - app
updated catch block to use ApiException instead of ApiBag . ExceptionWithErrObject to streamline error handling and improve code clarity by removing unnecessary API dependency
removed extra whitespace in the configuration loading method call to improve code readability and maintain consistency
remove unwanted string from error message in
[ hotfix ] fix checkstyle violation in test code
[ hotfix ] remove ' step ' from hmdatapoint
added logging statements for document lock acquisition and writing in PostgreSQLReadWriteWriteAdvisoryLocksTest . java to improve traceability and debugging of document management in the application
remove redundant schedulejobs ( ) call from baserschedulerserviceimpl . java
simonstewart : fix the broken test for the firefox driver
make openstack and openstack accessible for logger threadsafe .
made the ` convertToCompilationUnit ` method visible and updated related imports in ` FunctionInitializer ` and ` FunctionInitializerTest ` to improve test visibility and simplify testing logic
modified type checking and boxing behavior for better handling of primitive types to ensure type compatibility and prevent errors related to unboxed primitive types
updated the task view orientation handling in RecentsView and removed a redundant call to updateDigitalWellBeingToast in TaskView to ensure the task view reflects the current orientation and prevents unintended behavior when navigating back
hbase - 27348 fix flaky testflushfromclient . testflushfromclient ( # 4547 )
added logic to delete a original contract from the track when it is needed to ensure proper handling of contract details during transaction execution
updated balance calculations in TokenIssueProcessor to use dynamic properties for asset asset fee to ensure accurate account balance adjustments based on dynamic properties
refactor texture cache management to utilize URI - based uri handling to improve texture resource management and avoid potential memory leaks
refactor raster creation to use a temporary raster variable for clarity to improve code readability and maintainability by using a temporary variable for source and destination raster
added support for unselected text styling in Label and updated method calls in DefaultLookAndFeel and DefaultLookAndFeel to improve text rendering accuracy and maintain consistency with font handling
updated ArrayList initialization to specify initial capacity and improved action list management to enhance memory efficiency and optimize list initialization for better performance
removed the ` flags ` parameter from multiple method signatures in ` queryImplicitIntentServices ` , ` queryImplicitIntentContentProviders ` , and ` queryImplicitIntentReceivers ` to simplify method signatures and improve code readability
updated PingRequestHandler . java to improve request handling logic to enhance performance and reliability of server operations
test : update test to exclude apps that do n ' t support it
[ tradfri ] avoid send old firmware to device if a firmware be not support ( # 9441 )
fix javadoc typo ( # 894 )
# 1805 - table cell should be the default layout , not the inline layout
refactor JsonDecoder to improve the handling of JSON structures and add a test for reordering fields in TestJsonDecoder to enhance JSON parsing functionality and ensure correctness of field order handling
fix # 3744 - fix invalid listener creation in blockcache
[ flink - 7739 ] [ test ] ignore savepointtestbase unit test for now
temporarily disable accidental test while investigate ci failure
[ type : fix ] fix codestyle issue in spring context register ( # 4844 )
modified the ObjectHashSet class to initialize the iterator conditionally based on initialization and caching behavior to improve performance by allowing dynamic recreation of the iterator based on load factor and cache option
added batchBytes tracking and modified batch size validation in SparkReduceRecordHandler and ReduceRecordSource classes to ensure efficient handling of batch data during processing
changed context modes from MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE in AppSettings . java and UpdateUtils . java to update context management for better encapsulation
updated log messages to clarify the conditions under which the close ( ) method is called and added corresponding exception handling to enhance logging accuracy and ensure proper resource management during connection termination
updated workspace animation logic to include accessibility support for different states to enhance accessibility support during workspace transitions
hbase - 21946 : remove warn from message that be no longer warn
updated substring method to assign a variable for scope and added a test for handling excessively long scopes in UaaTokenServicesTests to improve code clarity and ensure token persistence logic behaves correctly under specific conditions
updated import statements and modified logging initialization in AvailableJDBCDrivers . java and TestAvailablePlugins . java to improve code clarity and ensure proper logging output
[ drools - 687 ] - add executablecommand interface to allow finer grain to manipulate command
camel - 2147 : remove the messagetableservice since it do n ' t work .
added padding getter methods to CellLayout and modified bitmap creation logic in Launcher to improve readability and maintainability of padding calculations for different orientations
added a check for empty StringBuilder before collecting cands to avoid unnecessary stream processing when the builder is empty
updated the SAML metadata UI parser action to use Action instead of SamlMetadataUIParserAction and added null check for the flow to enhance robustness and prevent potential null pointer exceptions in the metadata processing
added a method to check LDAP port usage and defined the checkOpenPorts method to ensure that the process runs with valid LDAP ports and improve debugging capabilities
[ clean up ] remove unnecessary senseless comment from loggercontext . shutdown
updated URL handling logic in Fetcher . java and HTMLMetaProcessor . java to improve URL filtering and provide clearer logging for content redirects
updated SolrQuery query to use " name : samsang " and modified a query assertion in TestSpellCheckResponse . java to ensure correct spell checking functionality and improve test accuracy
updated the Karaf Console initialization logic to ensure compatibility with newer Karaf API versions and improve resource management
* fix getverticescolors ( blendercontext ) method to correctly handle bmesh compatible blender
do n ' t exclude time report directory in html report generator .
refactor test methods in DataValidatorTest for improved clarity and organization to enhance maintainability and readability of test code
pdfbox - 2576 : remove unused method addmetadata that be n ' t use
add error message when bindstatus be null
removed the System . out . println statement from JoglInput . java to simplify the code and reduce unnecessary console output
added a allowExtractingPrivateFields flag and modified field reading logic to support it to enhance flexibility in handling private fields when extracting private fields
added code to replace device name with device name in WebDataHandler . java to improve clarity and avoid conflicts with device names
platform : use methodhandles . lookup ( ) for java 8 only
added a deprecated method ` weights ` to ` ZParams ` and updated corresponding calls to use ` weightsByDouble ` instead of ` weights ` to improve method functionality and encourage the use of new methods
added a Database parameter to writeCustomHTML and writeCustomHTML methods across multiple writer classes to ensure the correct database context is used during rendering operations
removed unnecessary type casting when deserializing key in BTreeMap . java to simplify code and enhance readability by removing unnecessary type casting
replaced generic Exception handling with specific BalanceInsufficientException and added specific exception handling to improve error handling and provide clearer diagnostics for insufficient transactions
netbeans - 3490 : added option to disable heap zerofile profiler
updated message sending methods to use UI ' s sendMessage method instead of standard output to improve user feedback during license updates and streamline output management
changed the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed unnecessary generic record usage in HortonworksEncodedSchemaReferenceWriter . java to optimize memory usage and eliminate unnecessary type casting
added imports for ItemListener and ItemProcessListener in multiple Java files to enhance event handling capabilities during batch processing
removed unnecessary null checks and improved code formatting in AbstractProviderModule . java to enhance robustness and maintainability of the code
updated method calls and output formatting in SearchFiles , SortedSetDocValuesFacetCounts , and MessageFilesParser classes to improve code clarity and maintain consistency in message handling
updated Test7005594 . java for improved test coverage to ensure more reliable functionality through comprehensive testing
fix bug report by lyubomir marinov .
- fix topkrollupphase1job in last commit
cloudstack - 3738 : fixed npe in remove static nat rule - we should check for that
[ new ] : add a mc option to scale input device ( a11y )
fix iterablesubject . iterator ( iterable < t > ) signature to compensate for list - based iteration
camel - 9304 : only decode multiple url entry if they be empty
added multiple JPA query assertions in ActivityHistorySQLServerStoredProcedureTest . java to ensure correctness of SQL queries in the database for testing purposes
added LargeValueFormatter for better formatting of values in BarChart activities to improve readability of chart labels and enhance user experience with better visibility
updated character handling in CommentsParser to use a constant for inactive characters to improve code readability and maintainability by avoiding magic strings
remove ` @ suppresswarnings ` for argument type incompatible in platform . java
[ fix ] tracera [ lsra ] : fix deopt message in deopt loop
added a TODO comment to the NullAssertionValidator class to prepare for future implementation of method stubs
added import for RuleKeyAppendable and modified rule key appending logic in DefaultRuleKeyBuilderFactory to enable appending rules for Buck build rules in the build process
added system profile directory creation and improved test setup and teardown methods in DLNAMediaInfoTest and SearchRequestHandlerTest to ensure the necessary directory is available and enhance test setup and teardown processes for better resource management
swapped the factory creation method and updated the event loop group initialization to improve code clarity and maintainability
refactor message counting by introducing a method for message retrieval in HttpChannelOverHTTP to improve code readability and maintainability by encapsulating message retrieval logic
added a accept attribute for images in the ImageFileInputDialog to enable users to select image files for processing
replaced ElasticNodeBuilder with TransportClient and modified related imports in ElasticIndexWriter . java and TestElasticIndexWriter . java to enhance transport management and ensure proper integration with new indexing features
added detailed information about the witness class to improve debugging information for better troubleshooting
added a new test class ` NullPointerAndEmptyArrayTest ` to evaluate the behavior of ` NullPointerAndEmptyArray ` to ensure that the ` CustomURLClassLoader ` correctly handles null pointers and empty arrays in these scenarios
removed redundant code related to ` findConfiguredGeneratedSourcePathsUsingDeps ` and updated related classes to streamline source path retrieval and enhance code maintainability
added a method to construct wildcard patterns with any character delimiters and modified the wildcard construction logic to enhance flexibility in handling wildcard patterns with special characters
updated the validation logic for table scan operations in Vectorizer . java to ensure that the alias validation is accurate and avoid processing invalid aliases
updated MockitoJUnitRunner import and modified exception handling logic in WeatherQueryTest . java to improve test reliability by using the correct Mockito framework and simplifying the exception handling
tolerate exception when set firmware setting ( # 4208 )
refactor ` getLangs ` method to return a set of strings instead of an array and update import statements to improve code efficiency and simplify import statements
reordering of import statements and updated assertions in LazyTraceScheduledThreadPoolExecutorTests . java to improve code readability and maintainability
hbase - 7814 improve takenapshothandler to wait for table lock when take snapshot
[ j2kt ] fix unsupportedoperationexception when try - with - resources be use
[ # 10720 ] remove the duplicated http rpc endpoint test ( # 10731 )
added a volatile boolean field ` isSuspended ` and modified thread state checks in ` Thread . java ` to improve thread suspension handling and error management
replace Javadoc # Author and added a new method for serializing Javadoc data in Java11JavadocVisitor and ReloadableJava8JavadocVisitor to improve Javadoc generation accuracy and clarity in node references
camel - 4391 : fixed the npe issue of camel - core when use spring remoting
removed multiple method implementations from security classes to simplify the code and improve readability
added module import handling and updated eval method signature in Java2TypeScriptAdapter , modified test assertions in EnumTests , and added static fields in MyComplexEnum2 to enhance module integration and test coverage for new functionality
switch from javax . xml . xmlconstants to http : / / www . w3 . org / 2001 / xmlschema - uri
added content description handling in BubbleTextView to display app labels based on the availability of the badge information
added mouse wheel listener to TestMouseWheelScroll for improved mouse wheel functionality to enhance user interaction and debugging capabilities during wheel scrolling
added error handling and resource closure in VisualTester . java and created a test for positioning absolute in VisualRegressionTest . java to ensure proper resource management and validate the positioning functionality
updated currency pair references from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to reflect the new currency pair and enhance code clarity
modify agent location references to use String values instead of Object to improve type safety and eliminate unnecessary type casting
change currency representation from DSH / QTM to uppercase to simplify currency representation logic for better readability
replaced Set with ImmutableSet and updated message handling logic to use TreeMap and GeneratedMessageV3 to improve the uniqueness of default values and enhance message processing accuracy
remove type check for byte [ ] and byte [ ] from jacksonxmlformatmapper . convertxmlformat
updated thread constants and variable names for clarity in VirtualThread . java to improve code readability and maintainability by using more descriptive names
refactor DirectoryTaxonomyWriter to assign a single term reference variable for better readability and maintainability to improve code clarity and facilitate future modifications
polish ` ` allow snapshot on snapshot ' ' for vetoable change support
corrected the calculation for the vertical position in the BrowserContentPane to ensure proper alignment with the owner ' s height
pdfbox - 2852 : do n ' t throw invalidpasswordexception , just ioexception
added unit tests for ` getShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure correct behavior of message support methods in the ` DevicePolicyManager `
[ web ] make inputbar help button overflowable ( too )
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code readability and maintainability
refactor thread sleep mechanism in BackendInitializerHelper and update TerminalClient to use ThreadHelper to improve responsiveness and ensure proper handling of controller state transitions
updated the version checking logic in SwingStartup . java to utilize ReleaseStatus for better release handling to improve reliability in retrieving the latest version and ensure accurate updates based on the exception state
enh : add option to configure comment to generate xml
updated argument syntax in commands to use " < player > " instead of " < player > " to ensure correct syntax for players in command definitions
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter files to remove unused components to clean up the codebase
avoid use name variable in generated optionprocessor . fix # 2643
added a condition to check if the suite is parallel when handling XML executions to ensure compatibility with parallel processing in TestNGContentHandler
http : / / issues . apache . org / jira / browse / amq - 3872 - fix and test for acting - master
refactor : remove static import of enums in ctmethodimpl . java ( # 2653 )
added serialVersionUID fields to multiple exception - related Java classes to ensure proper serialization and deserialization of objects across different versions
renamed DeadLetterEntry and JpaSequencedDeadLetterQueue classes for consistency to improve code readability and maintainability
updated the method signature in ShibbolethCompatiblePersistentIdGenerator to include a separator parameter to enhance flexibility in byte array handling and improve test coverage
fix nullpointerexception when use -- systemactions - enabled
add a ` ` Person ' ' class to the package ` ` org . apache . maven . it0074 ' ' .
fix unncessary failover case where localendpoint be never set .
change string comparison to ensure case - insensitive comparison for time strings to improve robustness by preventing potential issues with case sensitivity in string processing
added properties for timeColumn , timeUnit , and totalDocs in SegmentMetadataImpl to ensure correct metadata handling by verifying expected values during metadata processing
updated the color import in SimulationPlotPanel from ` java . awt . Color ` to ` net . sf . openrocket . util . Color ` and set a dark red color to improve compatibility with the OpenRocket ' s color scheme and ensure consistent color usage
added a callback to disconnectEmitters to ensure that a new object is sent to the system immediately after a disconnect event
fix the bug that defaultbeancontext do not use @ json when define hierarchies .
fix visibility check for element in parent overflow . fix issue 5518
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
log ( jtatransactionmanager ) debug level when run with a custom jndi location ( # 2129 )
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
remove Library . hasFunction ( String function ) method to simplify the interface by eliminating unused functionality
replaced enabledCiphers with result and updated its assignment in JSSESocketFactory . java to improve clarity and maintainability of the code by using a consistent result variable naming
fix : bigquery - storage - api - bigquery write expect timestamps timestamps ( # 28945 )
replaced multiple null checks with requireNonNull for buffer and userCredentials to improve code readability and maintainability by centralizing null - check logic
fix valuesresolver to use inputmap instead of input map for coercion ( # 700 )
added bounds checking for row and column dimensions in FlightConfigurablePanel to ensure that the indices do not exceed the table ' s row and column limits
added a method to scroll selection in ThrustCurveMotorSelectionPanel to enhance user experience by improving the selection display in the UI
[ java ] unnecessarylocalbeforereturn - fix for a new interface
instantiate scriptengine lazily in abstractscriptexecutor ( # 3733 )
[ flink - 13803 ] [ task ] make euclideandistancesimilarity test more robust .
do n ' t execute unnecessary backup of sstables when there be no backup
refactor relativization method to accept both file and path inputs to improve flexibility and correctness in handling path relativization
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure proper formatting and handling of null values for column size and decimal digits
fix test , skip current writer head file 1 . log . tmp ( # 15959 )
changed the method for converting byte array to JSON hex format to ensure the correct representation of JSON data in the application
move error controller to error - controller to make it easy to add error - related controller
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in both UnixTerminal . java and WindowsTerminal . java to ensure that the correct terminal state is cleared when necessary
updated import statements and modified the toArray method to use NewArrayTree instead of MethodInvocationTree and NewArrayTree to improve type safety and compatibility with the new collection structure
fix a race condition in connection pool acquisition .
rename ` getDateConverter ` to ` getLdapDateConverter ` in multiple files to improve clarity and consistency in naming conventions
pdfbox - 4892 : avoid npe during the merging of a non - existing template
update error message format in JavassistUtils . java to include classLoader to improve clarity of error messages by specifying the context of the class loader
added exception handling properties and modified thread join limits in LargeStreamletTest . java to improve exception management and ensure proper thread synchronization
updated the way extra pages are set in MainActivity based on user settings to allow for dynamic page count based on user settings for better user experience
added error handling for image rendering and introduced a brokenGaussian flag in the Android implementation to improve robustness of image processing and ensure proper handling of broken GIFs
fix a syntax error in the BaseParser class implementing the SuppressSubnodes annotation to improve code clarity and maintainability by explicitly suppressing subnodes
pdfbox - 4892 : fix double close ( ) call , by emmeran seehuber
deleted the file TestDocInverterPerFieldErrorInfo . java to the test class is no longer needed for the current project scope
added shell command execution for key event detection in AbstractLauncherUiTest . java and modified assertions in LauncherInstrumentation . java to enhance test reliability by implementing keyboard shortcut functionality
added JSON serialization for the filenameToUrl variable in FileDumper . java to enable tracking of the downloaded file ' s URLs for better data management
bugfix # 211640 , make sure that not to modify the result cache be clean up on close
bugfix : fix up texturehelper . loadimage ( ) to actually load the texture
align id assertion with actual use of spring framework
updated the ISBN randomizer test values to use a new seed for consistency to ensure test accuracy reflects the latest randomization logic
refactor notification sound setting to use Uri parsing for better URI handling to improve flexibility in setting notification sound based on user preferences
added a new method ` reportLoopCount ` to the ` RootNode ` class to handle loop count reporting to ensure that loop counts are correctly reported for different receiver types
added logic to set the stack version for cluster during finalization if the upgrade type is standard to ensure the correct stack version is used during the upgrade process
fix issue when calculate rangeid for regionid ( # 4088 )
removed redundant line of code for opening the stream manager in ItemOrientedStep . java to streamline the stream management process during execution
added a new file CountedLoopProblem . java that implements a counted loop problem with a random integer generation to provide a solution for analyzing loop structure and validation
rename jvmci . executecompilationmethod and compilertovm . executecompilationmethodvarargs to avoid confusion .
[ gr - 32663 ] improve error message when get field offset in graalvmconfig .
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing capabilities and return value in the transformation process
[ # 780 ] student feedback : query result : fix column order ( # 780 )
remove call to applyToActivitiesIfAvailable ( this ) in BaseApplication . java to streamline color selection process for improved performance
added thread management and stack dumping functionality in CloseRace . java to improve error handling for child threads that do not finish gracefully
replaced ` return ` with ` return . intValue ( ) ` in ` IntPointField . java ` and added assertions in ` TestPointFields . java ` to ensure proper handling of integer values and validate the functionality of the ` IntPointField ` interface
updated arcSize calculation in MyButton . java to use a dynamic scaling to improve visual scaling of the button based on the available width
update very - scale to 640 for new image
fix ( sql ) : rename minimumsqlenabled to shrinkwhitespacesinsql ( # 1442 )
replaced ` waitForStateTransitionToEnd ` method with ` waitForState ` in multiple test files to consolidate state transition checks for better code clarity and maintainability
added import statements for CasCoreConfiguration and CasCoreHttpConfiguration in multiple test classes to ensure proper configuration for CAS services and improve test coverage
updated byte reading and manipulation methods in Volume . java for improved performance and maintainability to ensure efficient byte manipulation and enhance code readability
camel - 3120 : camel - http - optimize to reduce allocation .
updated the proxy classpath creation logic to use a modular boot path to improve clarity and ensure correct boot classpath is used for the specified module
fix npe for medium medium scope ( # 4067 )
added methods to get and set layer managers in the AnimComposer and modified event handling in AnimEvent to improve layer management functionality in the composer interface
added a check to return early if the queue is empty in DeferredHandler . java and removed the updateWallpaperOffset method from Workspace . java to improve performance by avoiding unnecessary processing when there is no items to process
added null checks for mapOp and mapWork in MapRecordProcessor and changed exception handling in TezProcessor to improve robustness by handling potential null values and ensure proper exception management
refactor CylinderRegion to improve variable naming and simplify center calculation to enhance code readability and maintainability
replaced static import of assert statements with JUnit ' s ExpectedException rule to simplify exception handling during tests
refactor QueryExecutorImpl to use ` SimpleParameterList . NO _ PARAMETERS ` for query sending to ensure correct handling of null parameters when sending queries
visualvm - security : make sun . security . config . customizeenvironment optional
added a new parameter ` rctag ` with ` android ` for the API documentation to enhance the API ' s capability to include application - specific content
update test cases in Test . java to improve test coverage and ensure accuracy of functionality
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in the key generation process
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
added a writeSectionDefinition ( ) method in RtfDocumentHeader . java to enable the handling of section definitions in the document header
added distance calculation and comparison logic in GpsLoggingService . java to handle large jump cases to improve location accuracy logging for better performance monitoring
removed unnecessary background painting statements from TableCellLayout , TableLayout2 , and TableLayout2 classes to streamline rendering and improve code clarity
doc : generate sample code in the java microgenerator ( # 356 )
replace boolean rootNameFn and sourceFilterFn with WeakReference to improve memory management to enhance memory efficiency and prevent memory leaks by allowing strong reference comparisons
simplified the addition of elements to ` data ` and ` added ` by removing binary search to improve performance and code readability by avoiding unnecessary searching
refactor SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and update related methods to simplify the activity structure and eliminate unnecessary theme management
changed the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests to accurately reflect the intended functionality of the value class
remove an extra space in an assertion statement to improve code readability and maintain consistency
added an assertion to verify the existence and validity of the security policy in JstatdTest . java to ensure that the security policy is validated and correctly identifies the security policy
camel - 14524 : camel - olingo2 - should use source code generate configurer to avoid reflection configuration .
updated sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow additional time for thread synchronization
removed exception parameter from logger message in MongoPersistentEntityIndexResolver to simplify logging to reduce verbosity and focus on essential messages
[ smack - 515 ] add an extension to send image via http
camel - 5022 : fixed netty producer to never update state when the exchange be not null .
fix clickhouse datasource url splitting logic to handle invalid or invalid hostname
jetty - 1378 new sys property for the late jsp - impl to force the use of the jdtcompiler when run in osgi .
add support for null values in CSV parsing configuration to enable proper handling of null values in CSV data processing
added LiquibaseService annotation to multiple connection classes to enable integration with Liquibase service for loading configurations
updated the method parameters to use ` JavaSourceFile ` instead of ` J . CompilationUnit ` to improve compatibility with the new compilation framework
change itemstatetriggerhandler and itemcommandtriggerhandler topic default to ` ` / * ' ' ( # 3335 )
updated exception handling imports from BeanCurrentlyInCreationException to BeanCreationException to resolve issues related to bean creation errors in the application context
solr - 14289 : make solrxmlconfig . fromString ( ) method return only config value
fix mana tablet damage animation . close # 148
added support for serializing identifier collection in the call event to enhance the functionality of P25P2DecoderState
removed import of DictionaryCompoundWordTokenFilter from TestRandomChains . java to streamline dependencies and avoid potential compilation issues
updated the executor name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to improve clarity by removing unnecessary placeholder for better readability
renamed class ` GeneratedCode ` and updated its references to improve code clarity and maintainability
fix typo in assertnotnull error message ( # 1718 )
added visibility management for the shareWithMeIcon view in LocalFileListAdapter to improve user interface by hiding the share button when necessary
updated external links in various Java files from " http " to " https " to enhance security by enabling secure stylesheets access
updated import statements and method parameters to enforce non - null parameters to improve code reliability and clarity by ensuring headers are not null or empty
enhanced assertion to include details about document count and segment count to improve debugging by providing context for assertion failures
deprecate multiple multilayer relate job class in favor of late alternatives
added null check for context in CrawlerSessionManagerValve and introduced new test cases for context awareness to ensure correct behavior when multiple contexts are context aware and improve test coverage
added security checks before retrieving the JspApplicationContext to enhance security by ensuring that application context is accessed with security settings when enabled
[ fix # 494 ] calculate initial length for fin set in rocketcomponentconfig .
removed Singleton annotation from NonceService and added bind method for SINGLETON in OpenIDAuthenticationProviderModule to allow dependency injection of the NonceService class for improved modularity
update child link on file wrapper when necessary
removed unnecessary HTTP method parameter and improved URL building logic in SpringCloudPlugin . java to streamline error handling and simplify method signature for better readability
make test more robust for non - blocking mode
do not override shift - always when read remote keyboard
[ flink - 37920 ] do n ' t heartbeat when there be no active node in the cluster .
removed unnecessary whitespace in NearbyActivityMode . MAP to improve code readability and maintain consistency
updated identity filtering logic to use identity . isReference ( ) instead of name checks to improve clarity and correctness in determining identity relationships
refactor method signatures to use ' noop ' parameter instead of ' AbstractCommandOptions ' to simplify parameter handling and improve code readability
nifi - 10788 : fix test that be fail on slow machine sometimes .
fix issue where patchextensionmethod do n ' t set original argument .
replaced Map with Set for managing libraries and updated related methods to improve performance and correctness in handling library instances
int - 1257 , int - 1263 add support for sequence on router to name resolvingmessagerouter
remove x509 configuration from client key publish ( close # 8072 )
updated the logic for setting the SolrIndexReader in QueryComponent . java to ensure that the correct SolrIndexReader is used when there is a single reader
replaced ValueSourceParser ' s max / min parsing with new Double2Parser ' s min / max methods to improve value parsing accuracy for document values
simplified return statement in the Container class to improve code readability and maintainability
removed IOException declaration from the next ( ) method in TokenSources . java to simplify the method signature and improve code clarity
cloudstack - 2120 : added uuid to user insert to fix issue .
added conditional configuration for flowBuilderServices in CasMultifactorAuthenticationWebflowConfiguration and updated related object provider usage to improve the flexibility and configuration of flow builder services in the application
tweak postgres test and add postgresql - c command to count connection
remove checking for null laf before setting default font
updated method calls in ServiceComponentHostImpl to use local variables instead of getter methods to improve code readability and reduce redundancy in state retrieval
simplified margin calculations in FloatingTaskView by removing conditional checks to improve code clarity and maintainability by eliminating unnecessary margin logic
updated status line to a message in NavigationShareTab . java and added a break condition in RootFolder . java to improve user feedback by displaying the status line when not running
removed the ` threadId ` variable and updated its usage in the ` instrFilter ` method to simplify the parameter handling for better readability and maintainability
mob - 1293 : make sure toolbar have default perspective in desktop
[ homekit ] add networkaddresschangelistener to hometemplate ( # 9113 )
updated lease retrieval in TestHDFSEventSinkOnMiniCluster to use getleaseRenewalTime instead of null to improve clarity and accuracy in determining the lease renewal time
added linkStyle property to the prefixHeader and linkStyle configuration in CxxLibraryDescription . java to improve flexibility in handling optional values for better compatibility
added null check for exception message before checking for space availability to avoid potential NullPointerException when handling exceptions
changed ` nextID ` to be ` volatile ` and modified the size calculation in ` DirectoryTaxonomyWriter . java ` to ensure thread safety for ` nextID ` and improve error handling for ordinal exceeding the maximum ordinal in ` taxonomy `
amq - 4722 : fix intermittent ci failure
added HasSourcePath interface and modified methods in AbstractThinArchiveArg , FileListableLinkerInputArg , SourcePathArg , and FileListableLinkerOutputArg classes to implement it to enable the handling of source paths for better rule management in the build system
replaced StringBuffer with direct string concatenation in IllegalArgumentException for clarity to improve code readability and simplify exception handling
added support for custom index field in Facets and updated the test cases accordingly to enhance the indexing functionality and ensure correctness of taxonomy facet counts
8074032 : instant . ofepochmilli ( millis ) . toepochmilli ( ) can throw arithmetic overflow in toepochmilli ( )
fix crash when shader renderer be bind to wrong buffer type ( # 543 )
mondrian : make sure we always include certain change in the file , not only change one .
8166285 : c2 : c2 : assert ( c - > c - > c - > c - > limit ( ) ) fail : must be a little endian in the header
fix audio packet copy from multiple thread ( # 556 )
add parse scale token to the parser and fix a wrong arrayindexoutofboundsexception
update the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the acquisition of the software by Oracle Corporation
refactor version command handling to utilize a custom Console instance to improve flexibility and maintainability when displaying version information
replaced ` storedToken ` with ` hash ` in ` InputStreamBinder ` and refactored ` validateToken ` methods in ` NextcloudRequest ` to streamline token validation by consolidating validation logic into a single method
align behaviour of read ( 0 ) with eofexception . add test for this .
added unit test to ensure that deleting a member from a group group does not result in false positive
( chore ) camel - ftp : remove unnecessary object array usage
deleted the V2ReplicationProtocol . java file as it was no longer needed for the current implementation
replaced ` compileTimeClasspathDeps ` with ` compileTimeClasspathSourcePaths ` across multiple classes to better represent source paths instead of build rules
added new classes ConstructorArgsDemo and StrictDemo to provide a structured way to handle constructor arguments and strict operations
DirectTemplateFeatureCollectionFactory to use ThreadLocal for managing feature iterators to improve memory management and error handling during iterator closure
updated assertion in WriteResponseHandler to allow a double the response count to account for a potential infinite loop scenario
added null check for item indexNumber before comparing dates to ensure robustness against null item data before proceeding
mapproxy : rename and fix typo
fix out of bound on small screen
improve comparison in ChangeLogParameters to use ` equals ` instead of ` = = ` to ensure proper equality checks for change log parameters
changed the visibility of the loggers map from static to final to ensure the loggers map cannot be modified after initialization
update return statement to use getBasePlot ( false ) method to ensure that the returned object is correctly configured for base plots
( chore ) camel - rest : avoid excessive log when upload directory already exist
added a ` sendStatus200 ` parameter to several classes in ` ServerGenerator ` , ` ServerFCGIConnection ` , and ` ServerFactory ` to enable additional handling of status responses during connection establishment
added a check for the length of the comment in the comment condition to ensure that the comment string is not empty before processing further
added file type management functionality to BuckModule to ensure associations are removed based on file types to improve user experience by ensuring relevant file types are managed correctly after writing
replaced multiple specific function imports with a wildcard import and updated the implementation of ` multiply ` methods in ` ComposedUtil . java ` to streamline the code and ensure the multiplication functionality operates with the appropriate type
updated error messaging for RTM options and improved error handling in the startup test to enhance clarity and functionality when dealing with unsupported CPU options
fix code style issue in AccountsActivityTest . java due to miss spaces
update Player . java to modify method implementations to improve code clarity and maintainability
added a mock method for ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate mocking of ChannelTypeUID for testing purposes
fix guest - to - host reflective call loop bug .
reset static context and implement FontsContract reflector in AndroidTestEnvironment and ShadowFontsContract to ensure proper context management and facilitate resetting of FontsContract
added timezone handling and modified time calculations in TimeGranularity and PinotDataSourceMaxTime classes to ensure accurate time range calculations and improve consistency across data source operations
add null checks and structure for handling try - finally blocks and exit flow in ControlFlow . java to improve robustness and clarity of control flow handling logic
enhanced array equality assertion to include clearer error messages when arrays do not match expected sizes to improve debugging information when assertions fail
[ 3.0 ] fix click of unknown item in windowclicklogic
[ fix ] bug in meshbuilder , cause index to be negative
nifi - 2612 : remove unused controllerserviceprovider from standardprocessscheduler
added resolved Javac plugin properties and applied ap class paths to KotlincToJarStepFactory to enhance dependency resolution and ensure proper ap class paths are utilized during compilation
updated RESCROLL _ DELAY constant and simplified page navigation logic in PagedView to improve code readability and maintainability by consolidating repetitive logic
reload workspace when the shortcut permission change be : 95f3d6ba2
added handling for the " HISTORY _ SEARCH _ BACKWARD " case in ConsoleReader to enable search functionality in the console
added null check for cname in CoreAdminHandler and updated core reload handling in CoreAdminHandlerTest to improve robustness by handling potential null values and ensuring correct core reload behavior
added marker selection functionality to the NearbyMapFragment to improve user interaction by managing marker display and bottom sheet behavior
added exception handling for Throwable in FileSyncAdapter to improve error reporting and debugging capabilities
updated memory awareness tests to use OutputAnalyzer for better handling of exceptions to improve reliability and clarity in memory usage assertions
refactor FeedQueues to adjust feed processing logic to exclude non - general heavy load conditions to improve the accuracy of feed retrieval based on application settings
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
updated package type and compression modes to use Locale . US for case conversion to ensure consistent behavior across different locales in the build process
changed XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure correct application context is used for XML content
updated file instantiation and configuration retrieval in Args . java to ensure consistency by using the instance ' s configuration file reference
updated the exit value in the waitUntilReadyAndTimeout method from " sleep 5 ; exit 1 " to " exit 1 " to correct the test case by removing unnecessary delays
replaced IntMath with LongMath for countDistinct calculations in HiveExpandDistinctAggregatesRule . java to improve handling of larger group counts and prevent overflow issues
added multiple checks for headless graphics in mmm Toolkit . java to improve error handling for headless graphics environments
fix a mistake with the previous commit
add move thread count configuration in defaultsolver ( for the moment )
do n ' t select wrong resource with the same name ( # 4744 )
added a new test class ` Issue582Test ` for testing Pump sort functionality to ensure correct sorting behavior of ` Pump ` based on specified feature lists
[ native ] add test for integer overflow case
refactor LoadingCache class to improve cache loading logic to enhance performance and maintainability of the loading process
added a new rule " AvoidNonConstructorMethodsWithClassName " to the naming rules to ensure that non - constructor methods are not incorrectly identified in the application
michaeltamm : catch staleelementreferenceexception in expectedcondition to prevent a crash
updated the method for checking if a view exists in the DatabaseSnapshotGenerator class and improved error handling in the PreconditionFailedException to enhance functionality to verify if a view exists and provide clearer error messages
modified DOMUtil . java to enhance XML parsing capabilities to improve performance and maintainability of DOM operations
added translation calculations and logging functionality to TaskViewUtils and Utilities to enhance task view animations and improve debugging information during scaling
set FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM to false in FeatureFlags . java and RotationHelper . java to disable the fixed rotation transformation feature
added a new static method ` walk ` in ` TempFSTTermsReader ` and modified the writing logic in ` TempTermOutputs ` to handle arc processing to improve fst processing efficiency and ensure correct doc frequency in output
added SolrQueryRequest parameter to DocTransformer create methods across multiple files to enable support for query requests using Solr query parameters
updated trigger statements in SingleTableMySQLTriggerTest . java to include new triggers and assertions to ensure correct behavior of content check and validation in the database schema
refactor comparator management in FieldValueHitQueue to use a dedicated setComparator method to improve code clarity and ensure consistent comparator assignment
updated the expected query prefix formatting in PhoenixQueryBuilderTest . java to improve readability and ensure correct SQL syntax throughout the test
make sure spark be initialize before run test
added methods to retrieve and save total storage pools in DynamicPropertiesStore to enhance functionality by allowing retrieval and saving of total storage fees
added support for handling file streams in development mode in AssetsController . java and updated tests in AssetsControllerTest . java to improve resource loading flexibility while in development mode
fix bug for read a different map mark key
added TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance the functionality and maintainability of the semantic analysis process
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` to simplify method signatures and manage exceptions differently
updated variable naming and logging in JxBrowserManager for improved readability to enhance code clarity by storing the full name in a variable before logging messages
fix issue with appversion field not work on io . http : / / github . com / codenameone / codenameone / issues / 2147
updated the logging statement to use thing UID instead of BridgeUID for better clarity to ensure accurate logging of the client ' s identifier in case of failure
( chore ) camel - core : disabled flaky test on github
fix # 4266 by remove the unnecessary sslcontext initialization in the test
log nan at debug instead of warning ( # 3557
added functionality to remove a session ID from the session info to ensure proper session management and prevent memory leaks
added a check to set the host name for alerts in HeartBeatHandler . java and improved formatting in AlertReceivedListener . java to ensure unique hostname assignment for alerts and enhance code readability
409403 fix illegalstateexception when spdy be use and the response be write through bufferutil . writeto byte by byte
resolve split - packages : move everything from kie - api under org . kie / api : move class directly under org . kie / xsd
added a test for seeking to a media player in ShadowMediaPlayerTest . java and implemented the seekTo method in ShadowMediaPlayer . java to ensure correct behavior of seeking media playback based on the minimum SDK version
renamed ` createTask ` methods to ` createThrowingTask ` for clarity to improve code readability by explicitly indicating that the method throws exceptions
added empty border settings for the tab close button in Aqua LAF to improve visual consistency and user experience when using Aqua layouts
added POST request method setting and connection timeout settings in TSPTimeStampService . java ; modified test assertions in TestSignatureInfo . java to enhance request handling and improve code clarity by removing redundant dependencies
added new overloaded methods to create XStreams with a ClassLoader parameter and updated security setup to enhance flexibility in XStream security by allowing specific class loaders
added error logging for non - generic types in diamond expressions to improve diagnostic capabilities for non - generic types during diamond processing
[ calcite - 4215 ] add default value for targettype in reloptutil constructor
updated argument checks for setting ID and value in Http2Settings . java to ensure correct handling of unsigned values and improve clarity in error reporting
deleted the MapInterfaceTest . java file to the test file is no longer needed for the current implementation
added exception handling for session insertion in SessionsPoolTest . java to ensure robust error handling when operations are performed on a disposed session
start and end root object in jsonwmsbuilder ( need further investigation )
changed the index setting method for myTable from a integer to an integer to ensure proper handling of integer index values when setting the selected index
added a check for manual unstashing in TaskbarStashController to ensure that unstashing is not attempted when manual is unstashed
camel - 13837 : dump route xml by default if no customid be specify
modified ` getEventMismatchMessage ` method to accept a boolean parameter and adjusted event retrieval logic accordingly to allow flexible waiting for expected events during event mismatches
added a new HeaderFixer class to handle headers file processing to provide a consistent way to set headers in input files for better organization and compatibility
added functionality to send the first load completion broadcast to the launcher to allow users to initiate the first load action when needed
deleted the Android class for the Android implementation to the functionality provided by SuperJumper is no longer needed in the project
jbrules - 2817 : systemtablescan now return true when the table be distributed
remove remove unused interface ( # 3251 )
fix issue with miss item be not remove from persistentregistrymanager . processidrematches
update return statement in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index ` i ` to a long to ensure correct calculations with potential large index values
added caching mechanism for format records in HSSFCellStyle to improve performance by reducing redundant format lookups
updated the URL query in RemoteAuthenticationEndpointTests to include username filtering to ensure that username is excluded from the query during remote authentication for improved security
lucene - 3681 : deflate compressor should check for finished def instead of needinput .
refactor logging to use container information for LAUNCHER _ ALLAPPS _ EXIT to improve log clarity and provide more context for the launcher exit process
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 168 )
remove deadlocktest . java ( insert it into the base class )
add some debugging code and fix sourceforge bug
added a JMenuItem for opening a URL in the browser and improved server status handling to enhance user experience by allowing more flexible server URL opening behavior
added error handling for cases where multiple output placeholders are present to ensure semantic correctness and provide clearer error feedback to users
added a null check for the ` EqualPredicate ` in the ` addEntryListener ` method to ensure that the listener cannot be null for null predicates when adding an entry
fix CoordinateArrays array handling and test case for reverse ( ) and reverse ( )
removed extra whitespace in setOpen method call to improve code readability and maintain consistent formatting
added a boolean variable ` first ` to the ` TestPayloads ` class to initialize the variable for further processing
replaced overview mode check with showOverviewMode method to simplify code execution flow for better readability
fix networkroutetest by set the destination on it message dispatch
int - 1305 fix : integer . min _ value should be integer . max _ value , not integer . min _ value
fix checkstyle issue in util / math / biginteger / amd64floatconvertnode . java ( # 754 )
simplify buffer handling in httpclientrequestimpl and increase test coverage in httptest
updated the verbose level variable and modified artifact replacement logic in GetMavenDependenciesTask . java to improve verbosity of verbosity and ensure correct artifact referencing
pdfbox - 4496 : simplify code , remove unneeded cast
removed unnecessary print statement from reference substring method in ReferenceUtil . java to improve code clarity and reduce unnecessary output
ensure the visibility visitor be aware of the query type ( # 2974 )
added new configuration parameters for solidity JSON RPC port and HTTP configuration to enhance flexibility and allow configuration of JSON RPC port settings
added a type check for ` folder ` before removing it as a drop target to ensure type safety and prevent potential casting errors
refactor StubJarTest to encapsulate createStubJar logic and update processor initialization to improve code readability and maintainability by reducing duplication
added new feature descriptions for setup wizard and workflow helper in StartPageTopComponent . java to provide users with guidance on setup wizard and workflow helper functionalities
fix race condition in cassandra before shutdown
refactor Boolean availability check by removing unnecessary type casting to improve code readability and maintainability
changed the return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all user attributes are included in the response
refactor onIdleTimeout assignment and improve failure handling in HttpChannelState . java to enhance clarity and functionality of timeout callback handling
updated the CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to improve performance and ensure compatibility with non - blocking operations
updated the TABLE _ HEADER _ SEPARATOR regex to include additional variations and modified the condition for building the TABLE _ HEADER _ SEPARATOR to enhance flexibility for multi - column headers in table rendering
updated the return value from 32.0 f to 31.5 f in Camera . java to improve the accuracy of the camera ' s rendering time
added a preference for starting on the startup and modified the image version return in the application to ensure the application does not start on upgrade and simplify the image version
updated the secret size in the OAuth2 client details from 128 to 512 to improve security by using a stronger base64 encoding
updated error message to indicate the passing null parameter for both MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to provide clearer guidance on the parameter passing process
added JUnit @ Ignore annotation to ScheduledMethodMetricsTest . java to temporarily disable the test due to race condition
refactor PinotFS methods to use PluginManager for initialization and initialization to improve error handling and ensure proper initialization of PinotFS based on plugin manager settings
added locale - specific date formatting logic in TimeLineCursorAdapter and TimelineArrayAdapter to ensure correct date formatting for users based on their locale preferences
added MetalLookAndFeel import and set it in UIManager to use a smoother look and feel for the application ' s UI
refactor ping handling in Bot . java to use a pre - destroy method and improve thread safety to ensure proper shutdown of the ping task and prevent potential resource leaks
removed the message parameter from the error handling in GlobalErrorHandler to streamline error reporting by eliminating unnecessary messages
refactor parameter name from ' module ' to ' from ' in module - related methods to improve code clarity and maintain consistency with naming conventions
added handling for CmdLineException and modified exception handling in PinotAdministrator . java to improve error logging for better debugging and maintain consistent exception management
replaced deprecated ` equals ( ) ` and ` isEqualTo ( ) ` methods with updated ` isEqualTo ( ) ` methods and added deprecated ` hashCode ( ) ` methods to ensure compatibility with current standards and prevent unsupported changes
refactor variables and methods in CustomPlaybackOverlayFragment , ImageButton , and ImageButton for consistency and clarity to improve code readability and maintainability by using consistent naming conventions
updated zoom level settings for map zoom in BasicMapViewer . java to ensure proper zoom range for improved user experience
drill - 2905 : allow log into processuser / processgroup in drillroot to avoid nullpointerexception
8028270 : files . readsymboliclink call accesscontroller directly so security manager ca n ' t grant the permission
added argument extraction capabilities to DelegatedClientAuthenticationAction and updated related classes to enhance service resolution by integrating argument extraction capabilities
change the ` defaultGroup ` variable to be ` final ` to ensure that the group value cannot be modified after initialization
fix tile size changelog bug . close # 259
removed redundant code and simplified the layout removal methods in InfoLayoutHelper to improve code readability and maintainability by reducing unnecessary complexity
refactored the cleanEntriesForFeedsWithoutSubscriptions method to improve readability and structure to enhance code maintainability and clarify the deletion process of feeds without subscriptions
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to improve code readability by using a consistent variable
nifi - 5214 : remove system . out / tmp directory from filebasedclusternodefirewalltest
update conic ( point ) to also handle zero
pdfbox - 4892 : move eof check above the throw statement , a suggest by valerybokov
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields and MockitoBeforeTestNGMethod classes to suppress unchecked warnings and improve code readability during compilation
refactor CImage class to introduce imageToArray method for better image handling to improve code organization and facilitate easier maintenance of image data
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to improve data handling by using a more suitable comparable
corrected a typo in the ` runtimeVisibleFieldOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple classes to ensure accurate representation of the runtime visible fields or methods
replaced null checks for version comparisons with ` Objects . equals ` to simplify equality checks and improve code readability
refactor class resolution methods to support binary names in ` ClasspathSymbolResolver ` to improve type safety by enforcing canonicalization of class names
added verification for additional error - related expected values in NinjaDefaultTest to ensure that the tests correctly verify the expected values for views based on their configurations
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and modified its implementation for better clarity to improve code readability and maintainability by making method names more descriptive
updated layout parameters and class names in DetailFragment and ListFragment to improve user interface responsiveness and layout consistency
updated exception handling to include ` Thread . currentThread ( ) . interrupt ( ) ` to improve error handling clarity and ensure proper interrupt management during thread interruptions
added null checks for field values in HttpFields . java and introduced a test for empty headers in RequestTest . java to enhance robustness by preventing potential null pointer exceptions and ensure proper handling of empty request headers
server : do n ' t allow static nat on the network when there be no static nat service in the network
added calls to resetHeaderScrollingState ( false ) and setFabVisible ( false ) in OCFileListFragment . java to ensure the header scrolling state does not interfere with the fragment
fix issue where extra page hang around ( issue 11634172 )
added a fixedWidth flag and adjusted glyph positioning logic in BitmapFont . java to improve layout handling for fixed text glyphs
removed the showTitle parameter from the ChangeLogFragment and refactored related methods to simplify the fragment creation process and improve code readability
added preEvent and postTransition methods to AbstractStateMachineFactory to enhance state management capabilities within the state machine framework
add javadoc for configdescriptionprovider class ( # 2598 )
updated the role creation in TestAuthorizationApiAuthorizer and enhanced Hive configuration in StorageBasedMetastoreTestBase to improve role management and ensure proper path handling in different
solr - 12382 : facetcomponent . sort ( ) should check if count be sorted by count , not before break out of loop early
optimize : set the cache file path for the checkstyle report , not the target directory .
added logic to stop all jetty instances in DeleteInactiveReplicaTest . java to improve the management of active replicas and provide clearer error messages
added file name argument to FileActionsDialogFragment for dynamic dialog title display to enhance user experience by allowing file specification in dialog
updated reorder direction checks to use a constant for invalid direction to improve code clarity and prevent potential errors related to invalid direction values
added fields for currency and to , and updated API path annotations in InnerTransferRequest and AccountAPI to improve data encapsulation and ensure consistency in API design
improve jobexecutionstresstest . assertjobrunning eventually ( # 21189 )
added a new annotation called EnableAdminClient in the configuration to provide a mechanism for enabling the admin client in the system
refactor ` visitIdentifier ` methods to include type checking and marker handling for identifiers to enhance type safety and maintainability in the codebase
set the action text color for the authenticator activity using primary dark mode to improve user experience by using a dark mode for action text
added a new method ` find ` in the ` Manager ` and ` StreamSupplierComponent ` for comparing values to enhance functionality by allowing custom field comparisons in the stream supplier
renamed methods and variables in the Runner class for consistency and clarity to improve code readability and maintainability
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` and updated the corresponding test case to improve clarity by accurately reflecting the purpose of the test
hive - 14652 : fail to connect if unable to connect to spark ( chaoyu tang , review by xuefu zhang )
added the getImplicitPreCoercionValue method to SkylarkParamInfo and its implementations in DefaultConstructorArgMarshaller to support the retrieval of implicit default values when necessary
initialize lastDisplayedUser with an empty optional instead of null to avoid potential null pointer exceptions when the lastDisplayedUser is not set
added a new method ` findAll ` to ` QueryDslMongoRepository ` to retrieve an ordered query by specified orders
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to avoid potential NullPointerExceptions during shutdown
planner - 568 exit the warm - up loop in case of a failure
pipe : xread / xread section in pipeline should support response ( # 4787 )
removed the " FIXME " character from LinkedBufferInput and StreamInput classes and updated method parameters accordingly to streamline the code for better readability and maintainability
added a WebSecurity customizer bean to CasWebAppSecurityConfiguration and updated related classes for configuration to enhance security features and simplify the configuration process for CAS Web Security
add TestJdbcWithDBTokenStoreNoDoAs class to TestJdbcWithDBTokenStoreTest to ensure consistent behavior when database token store is disabled during testing
added a method to register and register content providers in ShadowContentResolver and ContentProviderController to enhance content provider management and ensure proper handling of content providers
updated constructor parameters in AttributeReader to use ClassFile . Version instead of ClassFile . Version to improve type safety and ensure proper version representation
fixed - singleconnectionmanager do n ' t set keep alive for config file
[ java ] : add supplier for unicast sender and flow control context to be reuse in the driver driver .
check for for null point in 2d ( for 3d )
added concurrent imports for ` ChannelEndPoint ` and improved error handling in ` HttpServerTestBase ` , ` WebSocketConnectionD13 ` , and ` WebSocketMessageD13Test ` to enhance thread safety and manage IO exceptions more effectively
updated WebDriver driver initialization to use a configurable driver type and added screenshot handling logic in HttpWebClient to enhance flexibility and performance when selecting different WebDriver drivers based on configuration
replaced assertEquals statements with assertThat for corner path effects and intent assertions to improve readability and consistency in test assertions
remove deprecate trufflelanguage . getcontextreference ( ) and move to trufflelanguage . builder instead .
fix stubber invocation for null throwable ( # 291 )
updated conditional statements in Actor . java and Group . java to improve clarity and error handling to ensure proper functionality and error reporting when invalid conditions are encountered
added location permissions functionality to handle map access and zoom to improve user experience by enabling direct access to map locations
http : / / issues . apache . org / jira / browse / amq - 4682 - add simple activemq example
added import for CookieSpecs and set request configuration to standardize cookie handling for HTTP requests
replaced manual boundary checks with a method call to overlaps to simplify the code and improve readability
replaced DeemphasisFilter with NonClippingGain for audio processing to improve audio performance and efficiency
added a monitoringUrl parameter to the ScrollingPanel and related classes to enable monitoring functionality via a specified URL
[ flink - 28448 ] [ k8s ] remove the config option ` kubernetes . service . create - timeout ` from k8s
updated icon resource assignment based on place description to improve user interface clarity by providing appropriate icons based on selected place
add null check for class with no package ( eg - http : / / search . maven . org / # search | ga | luaj - jse ) . this be a problem when packaging liquibase in a fat jar .
added a new file PrintInlining . java that prints " Passed " to establish a basic class for testing purposes
fix : fix nest tag in javadoc ( # 1858 )
[ java ] remove publication start term id calculation from test to simplify code and reduce the scope of unnecessary field
updated EdgeDataTable to use getEdgesAndMetaEdges ( ) instead of getEdges ( ) and setEdges ( ) methods to ensure that the model processes both edges and meta edges for better data management
removed unused import statements from SpringResourceProperties . java and PasswordManagementConfiguration . java to clean up the code and improve maintainability
fix invalid playback speed log ( # 47 )
send RoomRemovedEvent when the cluster manager starts to ensure proper handling of room removal events during cluster operations
updated ' minimize ' field from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to reflect the correct data structure used in the application
texturehelper : use flip / mips for copy / paste when load the texture
updated the parsing process to replace the project build file parser with a dedicated factory method to improve event reporting for project build file parsing
[ wasm ] add librarynormalizationpass to j2cl transpiler to support normalization pass .
updated the method name from ` nextResponseBodyConverter ` to ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory ` to improve clarity and consistency in response handling in the Retrofit framework
[ hotfix ] [ core ] make memorysegment nullable
add java . persistence . temporal to avoid nullpointerexception
add hbs class for handlebar support ( # 2305 )
introduced a private method to setUpIncomingMessage and adjusted visibility handling for hint messages and text to improve code readability and manage message visibility more effectively
fix the loop to use keyset iterator instead of entryset iterator ( # 2971 )
# 145 add test for wait until alert dialog ’ s appearance
added a conditional check to return null when distinct column indices are greater than 2 to improve error handling for cases where more than two column indices are required
update MiscUtils to enhance URL handling and add list checks to improve error processing and ensure names are processed correctly
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 1 )
updated the dependency declarations for WebSocket - related bundles in TestOSGiUtil . java to ensure compatibility with Jetty and improve the organization of WebSocket - related bundles
changed the return type of identity attributes from an unmodifiable map to a modifiable map to enhance immutability and prevent external modifications to the underlying attributes map
add hack to make sure that the header be repaint after change the sketch
[ github - 84 ] remove unnecessary boxing of new double and float .
replaced ` getDate ` method with ` getTimestamp ` method in ` JdbcDataSource ` to ensure the correct timestamp is used for data retrieval
added a check for " javax . naming . Context " in the HtmlJndiTreeReport class to ensure compatibility with JNDI naming conventions when processing context
updated DbOptions retrieval to handle different database types and enhanced logging information for block generation to improve code clarity and ensure accurate logging during block generation
changed the edge type check from " double " to " mutual " in ImporterGEXF . java to accommodate the mutual edge being tested
add allow _ slippery _ touches to make statusbartouchcontroller slippery be : 918776ee51
fix the pmd warning about miss array dimension .
added preference for Google Drive folder path in the PreferenceHelper class to enable dynamic storage of Google Drive folder paths for improved user experience
slight change for ajax result - button : add ` ` shifocus ' ' to the algebra input box
added ` @ Nullable ` annotation to the ` assertThat ` methods in ` Truth . java ` to improve null safety and clarify that the parameters can be null
updated bitwise operations in ArrayUtil to use bitwise operations for proper handling of the new integer operation to improve accuracy and maintainability of the array manipulation logic
added a new test class ApiExceptionTest and modified ClassInstrumentor to check for instrumentation to improve testing coverage for ApiException API and ensure constructor behavior is correctly instrumented
add streamin / out for anti - compaction queue . patch by jbellis
added a keyguardSecure property and its getter / setter methods to ShadowKeyguardManager , and updated test cases in ShadowKeyguardManagerTest to improve keyguard management functionality and ensure accurate testing of keyguard features
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization
updated string handling and added a conditional check for the number of parts in GrblUtils . java to ensure proper parsing of the status and avoid potential ArrayIndexOutOfBoundsException
corrected the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables ` to improve clarity and accuracy of test method naming
added a new test method to verify the behavior of the file draining after closing to ensure that drain does not call after closing the file system prematurely
updated light intensity constants and shader resource names in HybridLightTest . java to enhance lighting effects and adjust the shader initialization parameters
updated filesystem retrieval methods to use the workspace ' s project filesystem to improve consistency and ensure proper filesystem initialization during tests
updated method parameters and return types in CucumberFeature . java and RuntimeOptions . java to use PathWithLines instead of String to improve type safety and enhance code readability by explicitly defining the return type
refactor Gson , JsonArray , and JsonObject classes for consistency to improve code maintainability and readability
remove @ notnull annotation that break the build
added a call to close the ParcelFileDescriptor using Shadow . directlyOn to ensure proper resource management and prevent memory leaks
added thread - local support for managing prefix indices in ` BasisLibrary ` to improve thread safety and isolate prefix index states across different threads
added debug logging capability to TestDistributedStatsComponentCardinality to facilitate easier troubleshooting by providing detailed logging information during tests
throw immutable list lazily on remove ( ) .
added @ NotNull annotation to the onApplicationEvent method and modified GrpcClientBuilder to create a URI from the plugin name to ensure null safety and improve clarity in URI handling
move back to jline - demo module for reuse ( backport fix )
fix race condition when invalidate a function array
modify generating the manifest file to handle platform - specific newline characters to ensure consistent output formatting across different operating systems
fix : findnull rderef do n ' t report a false positive on redundant null check
added nullability annotation to method signatures in ConfigDescriptionRegistry and improved null checks in ThingResource to enhance code robustness by preventing null pointer exceptions
make cancellingexception return a runtimeexception instead of a java . lang . runtimeexception
pdfbox - 1975 : init cropbox a part of the page drawer when not need
fix a typo in the doc of managerbase . getapplication ( )
added a new BooleanFlag ` ENABLE _ ALL _ APPS _ IN _ TASKBAR ` to the FeatureFlags class to allows the retrieval of all apps from the system taskbar
replaced FragmentActivity initialization with ActivityController instantiation using Robolectric to streamline activity lifecycle management and improve test reliability
renamed method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` to improve method clarity and enhance the handling of decimal coordinates
rename ABCase classes from ABCase1 _ 1 to TestABCase1 _ 2 to standardize class naming for improved clarity and consistency
renamed variable ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` and added a null check for ` getBlackholeAddress ` in ` Manager . java ` to improve code clarity and prevent potential null pointer exceptions
[ fix ] draw rocket change event handler for the simulator .
add changedependencygroupidandartifactid recipe ( recipe ) to change maven dependency coordinate
refactor file system handling and segment validation in IndexingJob . java and SegmentChecker . java to improve code clarity and ensure input paths are validated before adding segments
8285428 : [ testbug ] jdk / internal / reflect / generics / checkobjectheap . java fail with ` ` assert ( newaddress . lt ( scanPtr top ) ) fail : must be a little little endian ' '
added caching mechanisms for replacement paths and source paths using Supplier to improve performance and reduce memory usage when dealing with exceptions
refactor ` JsonExamples ` class to ` Examples ` and update package - info . java files to improve clarity and organization of code structure
added debug logging statements to ViewExtractor . java for various jarEntry operations to facilitate troubleshooting by providing insights into the processing workflow
for # 401 , apply a consistent copyright notice to the java / tree .
added a new Main class to the com . facebook . buck . oop _ javac package to provide a simple example for Java OOP entry point detection
fix concurrentmodificationexception thrown in sip account creation wizard . patch by ingo bauersachs .
removed two redundant ' continue ' statements from NativeScanner . java to improve code clarity and avoid unnecessary iterations
updated package and import statements in RendererConfigurationTest . java to reflect the new configuration structure and improve code organization
replaced the use of ImmutableSortedSet with memoized Supplier for queriedDeps to improve performance by caching the results of dependency queries
replaced ` stream ( ) . count ( ) . count ( ) ` with ` size ( ) ` for efficiency to optimize performance by eliminating unnecessary method call
added content encoding handling from ContentStreamBase in ExtractingDocumentLoader to ensure proper metadata is added based on the specified content type
updated SQL statements to use prepared statements for setting ID and username to improve flexibility in handling ID values and enhance query safety
fix javadoc for playerinventory and windowlistener ( # 6214 )
mng - 2929 : add -- ignore - transitive - repositories option to maven ( # 2944 )
removed duplicate @ Inject for BackgroundJobManager in ContactsPreferenceActivity . java to improve code clarity and maintainability by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
added null check before closing selection to prevent potential NullPointerException
added a condition to break when the index equals the end of the string in NativeRegExp . java to avoid potential null pointer exceptions when processing the matcher
mvc : do n ' t use random port in integration test , ensure they do n ' t conflict with local machine
added a new user - defined function ( UDFReverse ) and registered it in the UDFRegistry to provide functionality for reversing strings in Hive queries
updated context path retrieval and modified request handling in Dispatcher and related classes to ensure accurate path representation for requests and improve test reliability
updated Tracer class to improve performance to enhance the efficiency of tracing functionality
[ hotfix ] [ test ] ignore rocksdbstatebackendreadkeyedstateitcase for now
simplified import statements in XMLChangeLogParserTest . java to enhance code readability and maintainability
added synchronization and testing for buffer clearing in StarTreeRecordStoreCircularBufferImpl . java to ensure thread safety during buffer operations
updated forecast time and forecast days in OpenWeatherMapOneCallHandler to increase forecast time for better user experience and performance
align test with comment , timeout improvement
added logging functionality and adjusted animation parameters in RemoteTargetGluer and FloatingHeaderView to improve debugging capabilities and enhance user experience during app creation
updated CucumberPropertiesParser to utilize ` splitAndThenFlatMap ` and modified return types for ` parseRerunFile ` methods , and added test cases for tag filtering in ` CucumberPropertiesParserTest ` to enhance the parsing functionality and ensure correct handling of feature files and their tags
add livingwood pictures to the creative tab , do n ' t crash the client .
updated assertions in TestRadioButtons to use explicit size assertions to improve test reliability by ensuring expected sizes are explicitly validated
added support for -- file - sizes option in RCFileCat and introduced a new method to retrieve number of rows to enhance functionality for processing column and compressed file sizes
fix javadoc error that fail the build
added multiple calls to ` checkNDArrayArray ` and improved error handling in ` JnaUtils . java ` to enhance robustness by ensuring the MXNet NDArray is closed if it is already closed
[ hotfix ] fix checkstyle violation in blobserver
fixed bug 1244429 - unused private method false positive
refactor lexicalScope initialization and assertions in Global . java to enhance code clarity and maintainability by ensuring lexicalScope is properly initialized
int - 1488 add test for sftp auto - startup .
[ scene2d ] added level getter and setter to node , quadtree , and test .
updated version parsing logic to handle minor version differently based on digit check to improve accuracy in extracting version components
add tag if we do n ' t have tag ( e . g . item persist )
added a method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and a corresponding test in ` DateTimeFunctionsTest ` to enhance date handling capabilities and ensure proper error handling during date parsing
hhh - 17100 : fix classcastexception and npe in stringwrapper
refactored Log4j2ConfiguratorServlet to improve logging method organization to enhance maintainability and readability of the code
replaced the initialization of HiveException with a direct return of a new AuthorizationException to simplify code by eliminating unnecessary throwable initialization
updated the ` CC ` command format in ` CGoCompileStep . java ` and added a new test in ` GoBinaryIntegrationTest . java ` to improve the handling of preprocessor commands and ensure compatibility with wrapped C++ binaries
fix : add buildable annotation to customresource for kubernetes - api
remove override annotation ( java 1.4 compat )
added a timeout constant for HTTP connections in three hours to improve connection timeout management for better reliability
added parameters to ` PerBuildStateFactoryWithConfigurableAttributes ` and modified the pipeline name in ` RawTargetNodeToTargetNodeParsePipeline ` to improve flexibility and clarity by allowing customizable pipeline names
simonstewart : add more constraint to test the server ' s performance
added the @ Singleton annotation to the ApplicationController class to ensure a single instance of the ApplicationController is used throughout the application
refactor username retrieval logic to use OwnCloudAccount for better handling of account display name to improve robustness and ensure valid username is retrieved based on the account ' s display name
added BatchStatus import and a test for resumption in SimpleJobLauncherTests to ensure proper job state management during paused jobs in batch processing
added null check for cacheConfig before inserting values into parameters to avoid potential NullPointerExceptions when cacheConfig is null
[ java ] update grid node class to reflect new usage of localnode
avoid name clash with the ' java . lang ' constant
pdfbox - 2768 : change the parse to use the new nonsequentialpdfparser a suggest by andreas lehmk ü hler
mahout - 1145 - fixed fail testdistributedlanczossolvercli test
modified HttpServerTestBase . java file to improve test coverage and ensure proper functionality
- add test for get and update method to use set < string > keyset instead of entry set .
fix : ignore null element in innerbeanlist ( # 4447 )
fixed - spring - starter method should n ' t be call if redissonautoconfiguration = false # 4971
updated loop condition in Indicator . java and added a new test class IndicatorTest . java to improve functionality and ensure correctness of the Indicator class
add support for pass a user string to the ` execincontainers ` method ( # 1976 )
replaced condition checks for listener types with a single conditionals for byte and text messages to simplify the logic for determining if listeners are an instance of the listener
add some extra test for the semgrex attribute grammar
added a broadcast intent to CLEAR _ PULL _ UNREAD in HomeFragment . java to manage a notification when a broadcast is triggered
removed conditional check for Gingerbread and simplified scroller initialization in TouchImageView . java to ensure consistency in state management across different Android versions
fix dubbo - validator : flush when destroy ( # 421 )
resolve http : / / issues . apache . org / jira / browse / camel - 1640 : vetoing should now throw runtimeexception if it ' s not start
added FloatingActionButton functionality and options for handling a main FloatingActionButton in ShareActivity to enhance user experience by allowing access to additional maps in the web application
added inline parsing functionality for date parsing in ToDateTokenizer and updated related tests to improve date handling and ensure proper parsing of date strings with spaces
rename TestAnonymousClassUnloading . java file to improve clarity regarding the test purpose
updated Swedish translations from " tecken " to " toppniv " in error messages and resource files to improve clarity and accuracy of error messages in user notifications
added a check for server state before binding operations service to ensure operations service is only active when the server is not checked
fix : detection of a new line in the position a part of the text output .
c / c++ compile : do n ' t hang build on internal
added a new property ` requireAllRepositorySources ` and modified attribute merging logic to support aggregation of attributes from all repository sources based on configuration
fix defaultrecordstore and mapcontainer eviction max - size checker ( # 27656 )
add methods for enabling or disabling SSL protocols in NettyWebServer and related classes to improve SSL protocol configurability and performance during socket operations
refactor SetOnce to use AtomicReference for atomic operations to improve code clarity and maintainability by encapsulating atomic reference logic
updated key retrieval logic in QueryDslMongoRepository to handle null properties to ensure correct retrieval of field names when no path expressions are provided
updated assertions in RoundRectBorderTest to provide clearer error messages and adjusted RoundRectBorder comparison logic to enhance clarity and accuracy of validation messages during round rectangle border comparisons
enable empty cluster check , throw an error if one of the node have no genesis config
remove unnecessary test , it be not need anymore .
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' , added a validation check for the ' sign ' array length , and improved error logging to ensure correct thread counting , validate input parameters , and enhance error information clarity for debugging
inverted the condition for determining if the window is not running to ensure the code executes on non - Windows environments
renamed methods in MoreCollectors for clarity and consistency to improve code readability and maintainability by using more descriptive method names
added null checks and modified service initialization in BitmexStreamingExchange , BitmexStreamingMarketDataService , and BitmexManualExample to improve stability and ensure proper initialization of services
added validation checks for lat and lon in GeoPointField . java to ensure proper error handling for invalid lat and lon values
[ oozie - spring - core ] updated oozieproxyimpersonator to correctly handle workflow file creation
8180059 : incorrect gpl header cause re script to miss swap to commercial header for licensee source bundle
updated the ` getTableDocument ` method to accept a ` withDependents ` parameter to control the behavior of dependent table handling based on the new parameter
added a check for contributions with a specific number of concurrent uploads before submitting to improve user experience by notifying users when contributions are missing or missing
added caching functionality for profile data retrieval and updated handling of query profiles to improve performance by reducing redundant serialization and ensure efficient data retrieval
hhh - 9583 : added support for idclass property on jpm metamodel
phoenix - 9665 add index _ timestamp for table and view ( addendum )
add back ability to register default exception mapper for spring jackson
fix illegalstateexception when select a field in entry editor ( # 10727 )
updated the nativeCreateNSWindow method to include an owner pointer for window creation to ensure proper handling of the owner pointer when creating the NS window
updated the SQL statement to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure the correct table name is used for database migration
added StOCK as an animation feature and modified event handling in the Tile class to enhance visual representation and user experience when interacting with Stock tiles
fixed - codec be n ' t apply to rbuckets . get method . # 974
do n ' t show generic signature in analysiscontext ; annotate with detectorUndertest
added a BackProgressAnimator to manage progress updates during back navigation to improve animation handling and ensure proper state management during back navigation
changed ` _ initialPageNo ` from final to non - final and added logic to initialize ` _ initialPageNo ` based on its value to allow dynamic modification of ` _ initialPageNo ` while maintaining compatibility with potential null pointer exceptions
fix crc16 ( ) to avoid overflow
add comment parsing functionality to FormattedSqlChangeLogParser to enable handling of comments in SQL syntax for improved change log documentation
set jararchiver in abstractjarmojo and use it instead of create a new one internally .
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader to provide a more specific exception for loading class usage files
[ issue - 259 ] fix nullpointerexception in tsserviceimpl . aggregate ( )
gwt : add support for readpixels ( ) in gwt backend ( # 6158 )
updated test methods in OutputMemoryTest and PrintR to use method invocation correctly to improve the accuracy and clarity of memory usage in the code
improve error message if byte buddy ca n ' t instrument all class in the scalac
[ gr - 8233 ] add class initialization trace to native image .
[ issue # 11343 ] fix brokerrequesthandler log incorrect value ( # 11346 )
replaced Google Commons CacheBuilder with Caffeine for loading topic routes to improve cache performance and avoid concurrent access issues
modified the ` createDataSource ` method to accept a ` readOnly ` parameter to enable advanced advanced settings for data source configuration
updated INVALID _ SOURCE _ TARGET _ RELEASE regex to include optional target release version to ensure compatibility with version 1.9 and improve error logging
updated URI construction for location in DetailFragment . java to ensure navigation directs users to Google Maps API when available
nifi - 12289 - fix npe in standardparametercontextdao when getreferencedparametercontexts ( ) return null
8254560 : clarify the spec of classloader : : getclassloadinglock for non - parallel capable loader
added origin response headers to the ProxyRequestHelper and its test to ensure proper handling and reporting of HTTP response headers in the proxy
added a new ProfileSettingDrawerItem item to the GpsMainActivity to enhance user interface functionality related to profile settings
add possibility to define whether to do xml validation if jsp validation be enable during runtime
simonstewart : fix the test that execute javascript on window do n ' t work correctly in firefox
added maxRows functionality and validation for fetch size in IoTDBStatement to ensure proper handling of fetch size limits and provide clearer error messages for unsupported functionality
replaced the method ` isCountOptimizable ` with ` allActionsAreOptimizableFilters ` in ` SqlStreamTerminator . java ` to improve clarity and functionality of message processing
add event handlers for node and mouse left events in StandardVizEventManager to enhance interaction handling during visual events based on selection settings
refactor memory setting methods in ManyToOneRingBuffer to use a dedicated zeroBuffer method to improve code readability and reduce redundancy in buffer management
make xorgroup in terminalnode memory private to allow for reuse of xorgroup instance .
ui : remove deprecate getheight ( ) / getwidth ( ) ( # 557 )
refactor SourcePathResolver to encapsulate path retrieval logic into a separate method to improve code readability and reusability
fix xmlparserDstu2 encode issue ( # 560 )
modified the WebsocketRoutingFilter to change the schema if the request URL is encoded to ensure that the WebSocket implementation correctly handles encoded URLs in the WebSocket upgrade process
sulong : add ` ` run - all ' ' to testgcclasstest ( )
added a new method ` getCxxPlatform ` to retrieve the CxxPlatform from ` BuildTarget ` and ` HaskellBinaryDescriptionArg ` to improve code clarity and reuse by centralizing the logic for obtaining the CxxPlatform
added import statements for IndexReader , Field , Similarity , and IndexWriter classes in various classes to enhance documentation clarity and ensure the correctness of the classes
add more test for ` concurrentlinkedstack ` ( # 442 )
added methods ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable ` classes to control the execution state of message dispatching
added a null check for mDirectories before initializing mDirs to avoid potential NullPointerException when mDirectories is null
updated condition to check if overview state is enabled and layout is not enabled to ensure correct handling of gesture end target based on layout and overview state
added multiple package - info . java files for various Lucene packages to enhance documentation and clarify package structures
set the auto - leveler text to the localized value of the auto - leveler to improve user experience by ensuring the panel ' s visibility state is updated
added support for post - optimization callbacks in UpdateHandler and DirectUpdateHandler2 to enable users to optimize event listeners when specified
updated compression algorithm initialization and variable management in CompressionMode . java to ensure the compressed byte array is set to zero for correct data handling
added a check method call to the Shaderc class to enhance functionality by allowing user data to be validated
retryingmetastoreclient retry limit adjustment do not account for local meta store
heliossolologservice : ignore connection closed exception ( # 3266 )
updated imports and changed class name from LogUtil to OutputUtil to improve clarity and consistency in output utility usage
fix serialization service to enable weak reference ( # 2762 )
fix bug # 54533 - improved color calculation in hssfPalette
fix : [ cloudstack ] properly format string in the doc ( # 9217 )
danielwagnerhall : added failing test for android ' s xpath library .
added a flags parameter to multiple registerReceiver methods in ShadowApplication , ShadowContextImpl , and ShadowInstrumentation classes to allow receiver registration to specify flags for better control over receiver behavior
refactor FFmpegTest to use mockito for loading resources to improve test reliability by explicitly mocking dependencies
added previousInput management and modified OggInputStream handling in OpenALMusic . java to improve resource management by ensuring streams are properly released during stream closure
replaced the hardcoded failureMessage with a constant RESPONSE _ WAS _ NULL to improve code readability and maintainability by avoiding magic strings
[ te ] remove false alarm warn log ( # 4252 )
refactor Toast usage in BaseActivity and DetailActivity for consistency in toast handling to improve code maintainability and reduce redundancy in toast management
updated the request creation to use the request template instead of the default method to ensure that the request is always in the correct format and allowing for custom request templates
added name validation checks and modified LDAP referral handling in LDAPCertStore . java to enhance code robustness by ensuring valid names and proper referral processing logic
fix # 2605 : fix indexoutofboundsexception in gatewayrsocket
renamed the class from AdapterViewTest to ListViewTest and added a new test method to verify item click functionality in ListView to improve clarity and ensure correct functionality of item click handling in the list view
[ hotfix ] [ test ] do n ' t reuse minicluster in checkpointfailuremanageritcase
remove genericitemuiprovider ( it not use any more )
fixed null pointer exception when click on an item in the chat window .
added a usage annotation to the MetaInfConfigurationTest class to indicate that the static method is available in a parallel environment
set the server connector host to the specified bind address to allow the server to bind to the correct HTTP server connection
added conditional logic for setting refresh token validity in DynamicClientRegistrationEndpoint to accommodate different configurations based on the heart mode and client credentials
added a new ` CloverInstrumentationFilter ` class and modified conditions in ` SplitLogCounters ` to handle synthetic classes to improve class filtering logic for better traceability and performance
added support for Smartmi Evaporative Humidifier in MiIoDevices and corrected formatting in ReadmeHelper to enhance functionality and maintain consistency in code formatting
updated method signatures and logic in MineProcess . java to use ` CalculationContext ` instead of `StateInterface ` to improve code clarity and functionality by consolidating context parameter usage
make setScrollRangeDelta method public in AllAppsTransitionController . java to allow external access to the method for better usability
ambari - 20745 change to warn log if ambari do n ' t have baseurls for install package step before eu / ru ( dili )
updated the conditional logic in IntHashSet to use ' | | ' instead of ' && ' for missing value checks to improve logical correctness in determining missing value presence
[ netbeans - 59 ] make ruleset admin ui serializable ( jm - 379 ) .
updated CrossOriginFilter to use a set of allowed origin patterns instead of a list to improve handling of wildcard origin patterns for better flexibility
* rename model and test file for the knight project
added error handling for solidified position updating in Manager . java to improve robustness by logging errors when updating the cache
hbase - 1544 - fix npe in execresult # execute ( gang tim liu )
added a method to check if a user is unauthorized and updated error handling for unauthorized responses to improve access control and ensure proper error reporting for unauthorized requests
replaced the ` writeTo ` method implementation with a new ` getStubClassBytes ` method in ` ClassMirror . java ` and refactored the stub creation logic in ` StubJar . java ` to improve code organization and simplify stub handling in the build process
added bind view binding and display functionality for internal link text in FileDetailSharingFragment to improve user experience by displaying relevant sharing information based on file type
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent behavior across different locales in the test
fix model zoo test for day of week ( # 774 )
updated the hideInput method to handle IME visibility to improve user experience by managing keyboard visibility effectively
sample : add inmemoryeventstorageengine to test configuration
refactor BsdFileStore to use a native method for retrieving filesystem names to improve code clarity and efficiency in handling Unix file paths
add test case for issue #1599 resolution of method call ( s ) do not throw a npe
add support for optional argument ' x ' and ' y ' in the spawn command to enhance flexibility in spawn command execution based on user input
updated content area height and width calculations to use a single method for computed dimensions to improve code readability and maintainability by consolidating repeated calculations
move codeinstall related test to graalcompilertest to avoid
use mock directory for this test to reliably work on window .
added new failure checks to the UpgradeCheckRegistry and updated the UpgradeCatalog280 class to ensure proper handling of plugin checks during upgrades and maintain database schema consistency
fix minor flaw in source code format of environment . java
added import for LuceneTestCase and annotated with BadApple test to address issue SOLR - 7421 for better test coverage
modified home string concatenation logic in CodenameOneImplementation . java and removed redundant warning in HashtableContent . java to improve path handling and eliminate unnecessary error output for string node types
replace ` FLAG _ IGNORE _ HDMV _ DTS _ STREAM ` with ` FLAG _ ENABLE _ HDMV _ DTS _ AUDIO _ STREAMS ` in ` DefaultTsPayloadReaderFactory . java ` to clarify the purpose of the flag to enable audio streams
replaced specific imports with a wildcard import and modified resource access in LiquibaseEntityResolver . java ; updated XMLChangeLogSAXParser . java to improve resource handling and simplify XML input stream initialization
added security properties to ComHostnameVerifier and JavaxHostnameVerifier to disable TLS algorithms for improved security in hostname verification
updated the CxxDeps . Immutable annotation to use builder and singleton , and removed the EMPTY constant from CxxLibraryDescription . java and related tests to improve immutability and simplify the dependency initialization
replace instances of ` expectedDirectory ` and ` actualDirectory ` with ` expectedStubDirectory ` and ` actualFullDirectory ` to enhance clarity and maintain consistency in directory variable naming
swapped the ` @ DoNotSub ` annotation for the ` resizeThreshold ` variable in ` Int2ObjectHashMap . java ` to ensure the variable is not modified externally
updated folder name hint to display a hint only when the title is empty to improve user experience by providing a clearer hint when the folder name is unavailable
updated the client loading logic to include the ID parameter " uaa " to ensure the test correctly validates the correct client details for improved reliability
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access and enhance encapsulation
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to handle closed states correctly to improve error reporting by indicating state when the object is closed
fix checkstyle issue in util / typeiconutil . java ( # 703 )
renamed the method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to standardize method naming conventions across the codebase
added a new test for ` negatedInstanceOf ` and modified the parentheses logic to exclude ` instanceof ` to ensure proper handling of nested parentheses in the rewrite process
added support for t teleportation in the Location class to enable users to teleport a location using reflection for reflection
replaced Base64 encoding with Base64Utils ' s encodeToUrlSafeString method in TokenKeyEndpoint . java to improve code safety by ensuring URLs are safely encoded
updated imports and introduced ProjectComponent in TranslatorManagerHelper . java to enhance functionality by integrating project - specific statistics tracking
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and intent of the annotation ' s purpose
add null check assertion for the id ( ) method in ObjectIdentityImpl . java to ensure that the id is provided to avoid potential NullPointerExceptions
modified the ` setUpRevampedTweet ` method to include a new ` isMuffled ` parameter and updated its logic to improve handling of retweeter visibility based on user visibility
update verification text view to use resources if the theme is enabled to enhance user experience by dynamically loading the verification text based on the selected theme
refactor AbucoinsDigest by making the secret key final and removing static initialization to enhance encapsulation and improve code clarity
camel - 14284 : fix potential npe during startup of camel - mongodb
[ feature ] support last index for schema attribute ( # 1565 )
fix semitransactionalhivemetastore to log error when alter a partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable checking if security is enabled for improved security
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , EastAsianWidth , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 8902 ] escape email to address x
chore ( module ) : move modulemanagerimpl . enrichtosystemswithsubdirs logic to modulemanagerimpl .
fix joinmodeller example for miss feature
add empty string check to avoid stringindexoutofboundsexception
( chore ) camel - singlenodekafkaprestrategy : reduce log noise by check if debug level be set
fix remain usage of constant in mediumsessionconnector
updated ` MotorMountHandler ` , ` MotorMountHandler ` , ` FlightConfigurationID ` , and ` IgnitionEvent ` classes to enhance functionality and ensure compatibility with the new ignition handling approach
tika - 3719 -- better error handling for file name length in ms owner file parser .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest for compatibility with JDK 1.8 to mark the test as ignored due to instability on JDK 1.7
refactor file creation logic into a separate method createLockFile in MavenDependencyResolver to improve code readability and maintainability by encapsulating lock file creation logic
updated boolean checks in UpdateUtils for version 5.3 to support new features and ensure consistent notifications across different versions
added a conditional check to return null if the user equals the FEDERATION _ USER to prevent further authentication attempts for the same username
[ gr - 39925 ] do not attempt to cast to truffleobject in executemethodnode .
removed the use of ` Collectors . toList ( ) ` and added the ` @ Disabled ` annotation to the filter logic to improve the filtering process for the WebSocket shutdown test
warn if we do n ' t have the filter , do n ' t log back to the console
7057785 : add note about optional support of recursive method for self - referential collection / map
added import statement for Version class in CreateIndexTask . java to utilize Lucene ' s version management functionality
add handling for Oracle database specific primary key changes in MissingPrimaryKeyChangeGenerator . java to ensure that missing primary keys are set correctly during comparisons and improve database compatibility
hive - 16875 : msck should throw metastoreexception instead of return 1 when partition name be invalid ( thejas nair , review by sushanth sowmyan )
[ flink - 24992 ] [ connectors / kafka ] make sure committable retry logic can be correctly handle
[ issue # 5498 ] fix # 5505 - approval of messagetodlq ( # 5506 )
add docker compose service configuration to allow multiple service ( # 456 )
fix unsafe iteration in export / structcontextdecorator .
removed HTML cleanup and XML serialization from FeedParser . java to simplify XML handling and improve error logging
fix issue where custom content would n ' t disappear ( issue 6339060 )
fix negative value issue in meter realtime body data ( # 1975 )
added a new JApplet class to manage temporary directory creation and creation to address bug 4150029 related to the temporary directory behavior in the application
added methods to manage Spark configuration updates and ensure proper resource management to prevent memory leaks and improve resource management when Spark configuration changes
added a long press indicator method to multiple classes and updated the Launchable class to use it to improve flexibility and maintainability by allowing different long press states
added checks for empty polygons and updated test methods in WKBWriter to ensure proper handling of empty polygons to enhance robustness and functionality of the wkb writing process
refactor UnflavoredBuildTarget builder method to use interner for better memory management to improve code clarity and efficiency when constructing UnflavoredBuildTarget instances
added a new class MultiplyByMaxInt for testing integer multiplication with maximum integer values to demonstrate behavior of multiplication with maximum integer values in Java
removed unnecessary action view collapsed check and enable navigation drawer indicator to improve user experience by ensuring the navigation drawer reflects the current file ' s state
change package declaration from ` org . apache . lucene . index . store ` to ` org . apache . lucene . store ` to simplify the package structure and improve code clarity
replaced FixedBitSet with BitSet in Automaton . java and Operations . java to improve performance and memory usage by using a more suitable BitSet implementation
drools - 4819 dmnevaluatorcompiler : add new message type for no _ expression _ describe _ node _ on _ node ( # 3273 )
replaced ` @ ContainedBy ` annotations with ` @ Repeatable ` annotations across multiple test files to ensure consistency in annotation usage for repeatable annotations
updated console message to include the send duration to improve user feedback by providing more context on file transmission duration
updated class name handling in OpenMBeanAttributeInfoSupport . java for consistent access checking to ensure proper package access validation by using a safe class name method
fix npe when responsecount be less than expect size of cluster
adjust freeSize calculation based on the value of s to improve memory management for better resource allocation
ignore touch event in touchup , so touch do n ' t interfere with other touch
replaced SslContextFactory instantiation with SslContextFactory . Server in multiple server - related classes to specify the type for SSL context for better abstraction and compatibility
replaced the PrivilegedSocket class with direct socket creation in PG _ Stream . java to simplify the code by removing unnecessary security checks for socket creation
refactor InputTest class for better readability to improve maintainability and simplify future development
added functionality to pause blur during recents animation and updated methods to accept a callback to improve user experience by enabling the ability to pause blur during animations
refactor location marker logic to remove current location marker only if it is not null to improve stability by avoiding potential null pointer exceptions when accessing current location markers
updated the usage of ` removeSecret ` to use ` clientDetailsService . retrieve ` instead of directly accessing the client ID to improve retrieval efficiency by utilizing the client details service
updated SQL source test setup to include newline and newline characters to ensure consistent test environment for user validation
fix for http : / / issues . apache . org / activemq / browse / amq - 2840 - use new executorservice . awaittermination ( ) .
added test cases for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys in the dataset
fix npe when condition be null ( # 4994 )
lightcontrol : clone nbt file and instead of create a new one
fix ( stderr ) : remove redundant null check and use for - each construct
add check for null applicationcontext in sessionseventpublisher . fix # 539
added a syntax check for the CREATE SQL statement in ASTVisitor . java to ensure compatibility with the updated syntax and prevent runtime exceptions
[ flink - 7730 ] [ doc ] document usage of flinkioitotdbsink in flinkiotdbsink
planner - 2844 : add a counter for custom simplification choke node instead of simplify node
updated fileIcon . setDrawable method to use context parameter instead of null to improve flexibility in handling file type icons
update indexOrConstraintName retrieval to use the schema name parameter to ensure correct indexing behavior based on the specific schema context
add support for timestamp field in bigqueryio sample ( # 29452 )
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` classes to enable retrieval of views with tags for specific tags
updated loop declarations to use generics for type safety across multiple classes to improve type safety and reduce unchecked cast warnings
updated import statements in IndexTool . java and MetaDataClient . java to ensure compatibility with the latest schema changes
added JSON _ VALUE and JSON _ CREATOR constants , modified the method to retrieve enum values to enhance support for JSON data types in the application
fix java 11 compatibility . check if a classpath be a jar file
update CUDA _ R _ R _ VERSION from " real as a half " to " real as a char number " in cublas . java to improve accuracy in CUDA dimension assignment
removed redundant resourceLoader constructor and added file filtering for layout directories to streamline resource loading by enabling search for layout directories to improve efficiency
fixedRedstone torch not be able to attach the block face . close # 408
[ calcite - 4215 ] add varbinary rel to stage conversion ( rafay )
removed import of DateHelper from NoteAdapter . java to eliminate unused dependencies and streamline the code
updated backup handling messages to provide clearer error messages to improve user feedback during backup operations and ensure appropriate error handling
ticket # 3875 : make sure simple panel always scroll down , not just absolute
fix shadowparcelfiledescriptor . delete pipe file error ( # 2488 )
replaced ` poll ( ) ` method with ` addFirst ( ) ` for better security context management to improve clarity and efficiency in managing security contexts
[ fix ] [ test ] rename optimizations to controversial to prevent false positive
planner - 465 fix bug in integerequalscanonicalizer when use xor = = for
added a static final Type constant for String [ ] type in TypeFactory . java to facilitate easier type management for String array parameters
refactor IME hiding logic and logging events for better event tracking to improve code readability and ensure accurate logging of user actions
attempt to fix network issue with modded block ( # 4805 )
updated assertion messages in TimelineMetricCacheSizingTest . java for clarity and consistency to improve readability and maintainability of test assertions
minecraftforge : add a hook to calculate the maximum texture size . close # 2373
[ java ] : stop log recording after stop the consensus module before start the recording .
add a check for isInTransform before setting startPosn to zero in SemanticAnalyzer to ensure proper handling of movement state during transformation logic
add querycontext . iskipstartree ( ) to startreeutils ( # 6752 )
added lockNearbyView flag and refactored methods for managing nearby places to improve UI behavior and ensure proper synchronization of nearby places display
add factory method for maptransformer , allow for easier test
update methods for EmeddedObjects and EmbeddedObjects to improve object management to enhance performance and maintainability of data handling
added handling for nullable widgets and introduced a method to fetch loaded launcher widget information in LauncherPreviewRenderer and PreviewSurfaceRenderer to improve widget management and retrieval functionality within the launcher
updated StageSelector and StageAction classes to use EventObject instead of ChangeEvent to improve compatibility with the event handling framework and enhance code clarity
added support for retrieving and setting call process IDs and resets in ShadowBinder to enhance testing capabilities for process UID management in Robolectric
replaced the AutoValue ExpectationFailure class with a final ExpectationFailure class and modified related methods to accept a nullable cause to improve the handling of null values and enhance the robustness of the ExpectationFailure
remove log . warn about lack of support for deserializing message
imagereplacedelement : make size not positive when crop
added support for HTML entity encoding in Markdown rendering classes to ensure proper handling of escaped characters in Markdown output
refactor password handling logic into a separate method for clarity and maintainability to streamline the code structure and improve readability while ensuring consistent button behavior
[ java ] refactored map and unmap methods to use a new static class ` MappingMethods ` to improve code organization and maintainability by encapsulating method invocation logic
fix ` abstractassert _ describedas _ print _ to _ console _ test ` enforce method visibility on class level
updated option constants and added support for slider - keytab directory in LlapOptionsProcessor . java to enhance functionality and ensure compatibility with slider keytab configurations
updated the tearOutGraphViewContainer method to accept an owner frame parameter and added animation control to ensure proper visibility management of the graph view during the tear - out operation
added support for managing workspace loading completion and loading status in LauncherModel to improve workspace management by ensuring loaders are completed before adding shortcuts
fix node path isblocked ( ) method to handle blocked ( # 3226 )
refactor ` IssueInterface ` methods and rename ` ValidationReport ` to ` JsonValidationReport ` to improve method clarity and enhance validation reporting functionality
added a method to safely retrieve the provider name using a JavaScript engine to improve error handling and provide clearer output for unsupported cipher providers
[ hotfix ] rename dynamicconfiguration to flinkconfiguration in containerspecification
changed log level from WARNING to OFF in CCJSqlParserUtil . java to improve logging granularity for better debugging and monitoring
remove debug code that be identical to 1.6
make defaultmapscalebar bitmap public , so it can be reuse
remove the @ Ignore annotation from CovariantOverrideTest . java to enable the test execution since it is not implemented
refactor mmm Pattern . java and ppp Pattern . java to improve code readability and maintainability by standardizing Qtype handling
camel - 2367 : allow to load model definition from dom to be use by camel
added space minimum and maximum settings to the ScatterChart to improve visual spacing for better data visibility and readability
updated string concatenation formatting in ExpressionStringBuilder . java to improve code readability and maintain consistent formatting
added a method to always preserve data state on apply in SplitScreenSelectState and RecentsView classes to ensure data state consistency during animation rendering
added a check for the presence of the UTF8 key in the UTF8 properties file to ensure that the UTF8 key is present and prevent runtime errors
lucene - 3995 : fix testreproducemessage to print syserr message , see LUCENE - 3995 for rationale
added logging for long - press events on AllApps items to enhance user interaction tracking within the launcher
added null check for log in StoreWAL and created a new test class Issue112Test to ensure proper handling of null modifications and validate double commit behavior
fix a bug that cause a npe when show sectorLandinfo .
updated type casting and added generic type parameters in multiple classes for better type safety to enhance type safety and eliminate unchecked cast warnings
refactor Enum class to improve readability and maintainability to enhance code clarity and facilitate future updates
updated the buildNearbyRandom method to accept a randomSelection parameter and added validation checks to ensure proper handling of random selection parameters to prevent illegal argument exceptions
remove the need for the temporary cache . remove after the server be shut down .
hide ` ` create sql view ' ' and ` ` wms ' ' view when new layer page be open
initialize Availability _ availability to Availability . UNAVAILABLE to ensure availability status is properly set before use
updated ` FetchInvDataMsgHandler ` and ` PbftDataSyncHandler ` to incorporate sync finish logic and added logging to enhance sync handling and improve code clarity regarding block synchronization status
fix : migrate retry setting to grpc _ service _ config ( # 192 )
changed the data type of ` _ freeSpaceReclaimDisabled ` from ` boolean ` to ` int ` and added a constructor for the ` freeSpaceReclaimQ ` parameter to enable configuration of the free space reclaim query instead of a disabled state
changed the visibility of ` KDC _ OPT _ PROXIABLE ` and ` KDC _ OPT _ FORWARDABLE ` from public to private static final and added a new class ` KdcOptions ` to improve encapsulation and ensure consistent access within the KDC options class
refactor writer assignment to ensure proper assignment and avoid potential null reference issues to improve code stability and prevent potential null reference issues
reformatted code for improved readability by adjusting line breaks and formatting to enhance code maintainability and consistency
renamed the method ` paintBackground ` to ` paintComponentBackground ` and updated its implementation to improve clarity and better align with the superclass ' s functionality
added a method to retrieve values from class constants in Configuration . java to enhance property handling by providing access to configuration values
[ hotfix ] log kafkaservice initialization failure
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use ImmutableSet with a specific path to allow for more flexible resource management based on the build configuration
minor change , add ' auto - createchannels ' option for the message bus
added keyword handling in HTMLDocument and created a test case for index keywords to enhance document indexing capabilities and validate search functionality in the demo index
updated SDK version check to use R instead of S to ensure compatibility with newer Android API levels
refactor address assignment logic in MemcachedSessionDataMapFactory . java to improve clarity and ensure _ addresses is always initialized before use
replaced the instantiation of CorrespondenceSubclassToFactoryCall with its class reference to improve clarity and maintainability of the test class
refactor Builder class to improve code readability to enhance maintainability and facilitate future development
added fallback message for isbn not find error ( # 3494 )
make keep - alive timeout small for the polling thread to avoid race condition .
added null check for text before firing data changes to avoid potential NullPointerException when the text is null
fill in some blank , such a by reuse code from the dvparser project
trim whitespace from lines in SuffixURLFilter . java to ensure proper formatting of URLs during processing
do n ' t show invocation on godmode in the event bus
ggb - 1336 text input dialog : wrong behavior on checkbox creation and deletion
modified the constructor of LinkedHashMapCache to accept a boolean parameter as a second parameter to simplify parameter handling and improve code readability
issue # 594 - fix channelendpoint . close ( ) to avoid double - close .
fix the npe in fixacidkeyindex ( # 3301 )
added exception handling for ` SolrException ` in ` DirectUpdateHandler2 . java ` to ensure proper exception propagation and maintain locale consistency
remove hard - coded handle for store guard in writenode
[ fix ] only check for exception dispatch block reachability
add dbcloud . getclassificationdisagreement ( buginstance ) , web , dbcloud . getclassificationdisagreement ( buginstance ) , do n ' t fix the view filter
replaced instances of ` BuildTarget . copyOf ( ) ` with ` BuildTarget . copyOf ( ) ` for consistency across the codebase to improve code clarity and maintainability by using direct object creation
refactor SqlRunner class to improve code readability to enhance maintainability and reduce complexity
changed the type of ` date _ taken ` from ` String ` to ` long ` in the ` getInstantUploadFilePath ` method and updated corresponding assignments to allow for larger date values and improve consistency in data handling
modified DefaultSdkProvider to store and manage multiple known SDKs instead of a sorted map to improve efficiency and simplify access to the ImmutableSet of known SDKs
replace progressindicator with confidenceprogressindicator for good readability
updated header check from " Cling / " to " UMS / " in RequestHandler and UPNPControl classes to ensure compatibility with the new header format in the UPNP implementation
fix # 39 . iterate instead of iterate if they do n ' t have an iterator
added view type constants and modified onCreateViewHolder method to handle specific message view types to improve code clarity and ensure appropriate handling of different message types
use utf - 8 encode for module name ( # 746 )
separate out specific rule for conj to eliminate some conflict with advcl
removed the canvas parameter from the insert method and added drawing logic for duplicate padding to simplify method signature and enhance image packing functionality
replaced the getVisitors method with a apply method for applying a Refactor < S , T > to improve code modularity and reusability
added methods to retrieve XML elements by name and recursive child directories to improve functionality for element retrieval in the xml package
added UTF - 8 encoding header configuration in HttpSolrServer to ensure correct handling of character encoding in Solr requests
refactor SystemUiController flags usage and introduce Retention annotations to enhance configurability and maintainability of UI state updates
removed the clientService variable from IntrospectingTokenService . java to streamline the class and reduce unnecessary dependencies
improve error message when opening hive split ( ferdinand xu , review by daniel dai )
remove ownerId field and its assignment from NodeEntry class to simplify the class and avoid unnecessary state management
cloudstack - 7893 : fix typo in global configuration
added a score calculation in the merge method of TextFragment to ensure the merge method respects the maximum score value of the fragment
camel - 13663 : camel - md5 - remove unused digester variable
added validation to ensure maximumUnimprovedStepCount is greater than or equal to 0 to prevent illegal argument exceptions when maximumUnimprovedStepCount is negative
added a check to return early if no open editors are present to improve performance by avoiding unnecessary processing when no editors are open
added ` verify ` method to ` BDDMockito ` and corresponding test cases in ` BDDMockitoTest ` to enhance mock verification capabilities and ensure expected behavior is correctly tested
fix # 2171 , use pathscanner . class . getclassloader ( ) for pathscanner
refactor code to enhance functionality by adding a check for type and asynchronous processing to improve robustness and ensure correct asynchronous operations in the code
add log to abstractsplitrainprotectiontest ( # 16972 )
updated logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for null before adding the LogoutPageGeneratingFilter to ensure that the logout page is only added when the LogoutConfigurer is not null to avoid potential NullPointerExceptions
implicit locus : fix for giac [ 2 , 3 , 4 ] , 3 , 4 , 5 ]
added DockerComposeContainer log consumption management and a new test class for handling log consumers to improve flexibility in managing Docker output and ensure proper functionality through unit testing
updated type parameters in the testMapping method for better type safety to ensure proper handling of generic types in the test
removed unused import statements from AmbariMetaInfoTest . java to improve code clarity and reduce potential dependency issues
added a static method ` fromSupplier ` to retrieve a ` ThrowingSupplier ` using a ` Supplier < T , Exception > ` to improve flexibility and reusability of the supplier implementation
replaced a break with a return statement in ConsoleActivity . java to ensure the method provides a successful outcome
camel - 17226 : camel - platform - http - add support for body of text / post request
added platform - aware path handling methods in MorePaths and updated references in CopyStep and AarWithLibsIntegrationTest to ensure compatibility with different operating systems when working with file
add null check for authorizationContext parameters before processing to avoid potential NullPointerExceptions when accessing parameters
replaced ` loadLibraryOnlyIfPresent ` with ` throwIfFail ` and added a new method ` throwExceptionIfFail ( ) ` to control the failure handling of library loading to improve error management by throwing a failure if the library does not exist
updated SDK version from " 811349 " to " 4514284 " and added methods to stop and stop text to enhance functionality and ensure correct behavior of textToSpeech
add transactionlogkey to make it easy to query the cache
added functionality to enable SQL without profile checks in JdbcEnvironmentProperties and JdbcEnvironmentRepository classes to enhance control over SQL profile handling during execution
added a try - finally block around the write operation in ConnectHandler . java to ensure data is cleared after writing to prevent resource leaks
fix compiler issue in modloadingstage ( # 7560 )
updated the date variable used in the formatDate function from ` date ` to ` calendar ` to ensure the correct calendar value is used for formatting date
remove unnecessary call to getthreadinfo from cachedthreadstatesgaugeset because it be slow
added a protected transaction log posting method and modified sleep duration in LeaderTragicEventTest to enhance transaction management and increase sleep time for leader verification
updated FastAsyncWorldEdit - P2 - V6 to FastAsyncWorldEdit - 1.17 to ensure compatibility with the latest fast - world editing features
fix npe in segmentgeneratorconfig when there be no path ( # 1023 )
added a method to calculate normal vectors for a given DefaultObjFace to streamline normal computation and improve code reusability
updated the find method to accept the identity zone ID as a parameter to enhance functionality by ensuring the correct identity zone is used during audit querying
updated SpanCollector . java to improve code readability to enhance maintainability and reduce complexity in the testing framework
added a null check for the getCurrSession ( ) method in AuthorizationFilter . java to ensure that the session manager is not null before proceeding with further operations
updated the implementation of TransactionIsolationLevel to improve transaction management to enhance performance and maintainability of the transaction handling logic
replace printLVgroups with printLogicalVolumegroups for better clarity to improve code readability by reflecting the function ' s purpose of printing logical volume groups
further fix for intermittent test failure on gump
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
replaced the manual list creation for ComponentKey with a direct return of an empty ArrayList to simplify code by returning an empty list directly
added a new OverviewToAllAppsTouchController in the RecentsUiFactory to enhance user interaction with the app ' s touch controller
replace the ` scaleHotseatWithWorkspace ` method with ` getHotseatScaleAndTranslation ` for scaling hotseat to enhance flexibility in scaling behavior based on workspace translation
added logic to exclude JUnitRule from stack trace filtering to ensure that only JUnitRule elements are excluded from stack trace output
replaced instances of ` dstnull ` with ` dstByteArray ` and updated related methods in ` MappedResizeableBuffer . java ` to improve clarity and efficiency when handling byte arrays
refactor balance listener management in DepositListItem . java to improve code clarity and ensure proper cleanup of the balance listener
modify color conversion logic in RealisticRenderer to handle edge modes to ensure correct color values for different edge modes in the rendering pipeline
added null check for httpClientResponse and simplified log initialization in multiple test classes to improve code robustness and maintain consistent logging style
fix ( gl200 ) : re - enable check for pattern _ inf
modified if condition to include playback time for episodes to enhance logic for refreshing episodes based on last playback time
spanis - 57 : ignore multi - word token in spanish xml tree reader .
add code to clear the dc if the first value is empty in InstallItem . java to ensure correct handling of empty language values during the installation process
updated ReactiveLoadBalancerClientFilter to dynamically set the scheme based on the service instance ' s secure status to ensure correct URI scheme is used based on the security context of the service instance
[ issue # 5042 ] fix buffer overflow when create batchdispatchrequest ( # 5063 )
make debuginfobase . fullfilenamefromclassname package - private , remove final
refactor the Correspondence implementation to use a lambda expression instead of an anonymous class to improve code readability and conciseness
replace instances of ` isNonUSLangSupported ( ) ` with ` isNonENLangSupported ( ) ` in the ` LocaleProviderAdapter ` class to ensure consistency with the official language support terminology
removed redundant null check for redeemData in LocalTransactionSigner . java to simplify the code logic for better readability
fix forge light not use tessellator when render block .
added a return statement to the TxCacheDB class to improve method flow control by terminating execution under certain conditions
replaced direct package imports from ` com . sun . xml ` with ` jdk . internal . asm ` in ` BoundMethodHandle . java ` and ` InvokerBytecodeGenerator . java ` to align with the jdk . internal package structure for better compatibility
refactor FastDictionary class for improved efficiency to enhance performance and reduce memory usage
refactor to simplify close logic by make sure the io session have be close .
updated GROUND _ HIT and SIMULATION _ END values in FlightEventsTest . java to improve accuracy and consistency of flight event handling
[ beam - 7954 ] update beam - vendored dependency to v1p26p0
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
add helper method to get student profile picture link from the instructor
added a new shortRules list and updated the defaultRules initialization in DefaultPasswordValidator to improve password validation flexibility and handling for long passwords
simonstewart : substitute command instead of hard - coded value to speedup test
removed JUnit import and annotation from ProxyClassSerializationTest . java to simplify the test suite and reduce unnecessary dependencies
updated method parameters for scaling and thumbnail dimensions in DLNAMediaInfo . java to improve code readability and ensure consistent format handling
[ gr - 5135 ] remove speculativeguardmovementphase from multiple stubs .
added a check for the AUTHENTICATION _ MANAGER in the AuthenticationManagerBeanDefinitionParser to ensure that the authentication manager bean definition is not overridden multiple times
updated conditions for handling forwarded and validated server information in ForwardedRequestCustomizer . java to ensure correct processing of forwarded requests and improve test coverage for edge cases in forwarded requests
set the StringBuilder ' s length to zero to ensure a clean state for the StringBuilder before processing
changed the access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists directly for better flexibility in role management
[ netbeans - 5164 ] update specification version to 1.62 . 0 and use openapi 1.58 . 0
hbase - 27037 enable tl renegotiation ( # 4126 )
Updated multiple Java files to reflect changes in package names to Ensure consistency and accessibility of classes across the project
updated FixedLengthTokenizerTests to use JUnit 4 annotations and added new test cases to improve test coverage and ensure proper exception handling for different tokenizer scenarios
updated protocol binding handling in OpenSamlAuthenticationRequestFactory and added unit tests for its functionality to improve flexibility in protocol binding and ensure proper validation during authentication
modified the DepthController to use a dedicated surface control transaction to improve code clarity and ensure proper handling of surface operations
update version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility with version 2.5 . x
change the action value from " WRITE " to " CREATE " in the authentication methods to align with the intended use of the CREATE action for bulk loading
updated sublist range initialization for unSeqMergeList and adjusted measurementSchemas references in MergeTaskTest to ensure correct handling of unseq merge lists and improve code clarity
camel - 781 : fixed the issue that camel - ftp would not work if the file body be of type file
added login method to ShardManager and modified DefaultShardManagerBuilder to conditionally execute login to improve login handling by allowing conditional login based on user input
fix typo in deltabledir for function pointer .
updated the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to accurately reflect the functionality and organization of the related services
camel - 8024 : fixed bug in httpsender that cause a race condition when terminate response .
modify comment logic to skip user ' s student in the response when not a giver
added checks for linked profile permissions and improved profile handling in BMPImageReader . java to enhance security and ensure proper linking behavior based on the operating system and platform
updated coordinate calculations in ClassicPlotManager . java to use new variable naming conventions to improve code readability and maintainability by using consistent naming conventions
pmd : fix # 772 pmd - svg tool should work in the background
refactor grid presentation initialization into a separate method and update the handling of PosterSize settings to improve code readability and maintainability by consolidating initialization logic
modified return values in ContributionsListFragment to enable new functionality to improve user experience by enabling contributions display
added a test case for skipping a range query in DistinctPrefixFilterIT and modified end - of - query handling in BaseResultIterators to ensure correct handling of DISTINCT queries and improve query planning functionality
pdfbox - 5339 : get checkbox group property test for acrobatcheckbox group
added a method to retrieve the last modified timestamp of a file to enable checking file modification times for better resource management
modified the condition to include a check for metadata tables in the HiveIcebergStorageHandler to ensure that metadata tables are validated alongside the existing default file format
add a popup box for default currency selection ( # 865 )
changed exception handling from IOException to Throwable in WriteFlusher . java to improve error handling by catching more types of errors
added a new boolean variable ` mStartedEnterAnimation ` and updated item range change handling in the ` IconRecentsView ` class to improve animation handling logic during task selection
added a new public variable ` activeKeyId ` to the ` UaaConfiguration ` class to store the active key identifier for further configuration
[ apex ] add option to enable email attachment to be send email ( # 10568 )
added volatile keyword to the ' isActive ' variable to ensure visibility of the ' isActive ' variable across multiple threads
removed the ` isDesc ( ) ` method from ` OrderByExpressionContext ` and updated related assertions in ` SelectionPartiallyOrderedByDescOperation ` to streamline the code by directly checking if the query is asc to simplify the functionality and improve clarity in error reporting
add explicit cast to char to prevent class cast exception
added a check for the application name being used in the conditional statement within DisplayUtils . java to ensure that the application name is recognized only when it is a valid user session
hbase - 4646 masterfilesystem should consider user - defined permissions when create the root directory in kerberos
replace ` httpServletRequest ` with ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` JavaxServletWebExchange ` to ensure correct locale retrieval for response handling
8196609 : improve javadoc for java . time . instant . getepochsecond
updated state format handling to return a String instead of a int in multiple classes to ensure consistent state format usage and improve clarity in state representation
removed variable ` type ` from ` AbstractTicket ` and adjusted logging statement format in ` CentralAuthenticationServiceImpl . java ` ; adjusted ticket type check in ` AbstractTicket . java ` to improve logging clarity and ensure proper type validation for ticket objects
pdfbox - 2852 : catch ` ` iae ' ' in the case where an illegalargumentexception be throw
fix check for ` file . startswith ( ` ` / ' ' ) ` on window
[ mng - 7271 ] support relative path to basedir for expression .
[ beam - 10520 ] define protobuf extension for coder ( # 9595 )
updated JpaQueryParsingToken instantiation to include a boolean parameter to ensure the correct handling of signed numeric literals in query execution
updated methods to generate launchLug and raSAeroRailGuide instances to include both length and parent length to improve flexibility in component separation between launch and raSAero dynamics
removed the getNonceFactory method from BitmexStreamingExchange to simplify the interface and avoid unnecessary method implementation
( chore ) camel - mail : replace string concatenation with parameterized one
[ java ] defensively adjust timer interval in the driverconductortest to be sane .
set initializeLoadedClasses to false in ScanSpec . java to disable loaded classes during classpath scanning
added focus after selecting the search field in FullTextSearchPanel to improve user experience by ensuring the search field loses focus
fix error - prone warning in tlconnectionlogging ( # 2859 )
added a test case to retrieve a random double value from the ResultSet to ensure the test accurately reflects the expected result
updated assertion message format in TestSolrConfigHandler . java to improve clarity of error messages for better debugging
replaced HttpMethod and related mock objects with ServerHttpRequest and ServerWebExchange mocks in the CsrfWebFilterTests to enhance test reliability by using the appropriate reactive types for server requests
updated the scaling logic in FilterResourcesStep to use a density variable instead of converting it to a string to improve readability and ensure accurate representation of density in drawable resources
refactor UIID update logic to use a separate method for element prefix updates to improve code maintainability and ensure consistent UIID updates across different component types
removed unnecessary display metrics dependency in RecentsAnimationDeviceState . java to simplify the condition for better readability and maintainability
8287878 : int [ ] : add additional test for clone a int [ ] with different alignment
solr - 6157 : awaitsfix this test until the underlying corruption be fix
fixed - npe be throw by redissonexecutorservice if scheduleperiodic ( ) return null
simplified the condition for determining refresh credentials in FileDownloader and FileUploader classes to improve code readability and maintainability by reducing redundant checks
refactor scanners handling to ensure proper resource closure to avoid potential null pointer exceptions and ensure proper resource management
[ type : fix ] fix npe in netmetrics ( # 481 )
added test nonce parameter handling in TokenMvcMockTests . java to verify the presence of a nonce in the token claims
renamed multiple editor classes to maintain consistent naming conventions to improve code readability and maintainability across the chart editor module
fix issue with layer pane width / height be set after create a form .
added a maxY method that adjusts the height based on the owner ' s height to ensure proper layout adjustment for the browser content pane
modified the database opening and closing logic to return a boolean indicating success to improve the handling of database connection status and ensure resources are only closed if the database connection is successful
updated DockerTestUtils to use Platform . DOCKER _ COMMAND instead of a hardcoded value to improve maintainability and reduce potential errors from hardcoding values
added null check for input stream before reading parameters to avoid potential NullPointerExceptions when the input is null
updated drawLeaveBehind method to accept a color parameter for folder leave visibility to enhance flexibility by allowing dynamic color customization
report canary incompatibility for android studio plugin ( # 4975 )
bug 10602 : add identityproxy sanity check
removed redundant getter and setter methods related to module persistence enable and disable to streamline the code by eliminating unnecessary functionality
updated argument validation logic in GeminiMarketDataService . java to allow zero - length argument lists to improve flexibility in processing and provide clearer error messaging for invalid input
use linkedhashset instead of hashset in verifypasswordresetrequestaction ( # 2171 )
fix bug with maprealm that prevent test from modify the catalina unit test .
fix : of - 2599 remove setup page when authcheck fails
[ flink - 18752 ] [ runtime ] schedule schedule run after multiple post - delay
updated method parameters to use varargs instead of arrays to improve flexibility in argument handling for command execution
modify XMLParser to handle end - of - stream conditions before reading characters to ensure robustness by gracefully handling end - of - stream errors
# 180 - textvisualregressiontest : ignore test that overflow page overflow hidden .
updated the pivot settings for the arrow in DeepShortcutsContainer to improve the positioning of the arrow based on its icon ' s
fix checkstyle issue after recognizer ' s checkstyle change
add a refreshView parameter to updateThumbnail method and related logic in AbsSwipeUpHandler to enable dynamic refresh behavior based on the current state
pdfbox - 2576 : use class . getname ( ) to avoid reference to org . apache . pdfbox
do n ' t complain if ipv6 address do not have a parent
removed redundant ` this ` references from various methods across various activities to improve code readability and maintain consistency in referencing the current activity context
updated the size - based doc ID handling and variable assignments in ` SizeBasedDocIdSet ` and ` SizeBasedDocIdIterator ` classes to improve accuracy and consistency in document ID management
updated the ` promptToOpenFile ` method to accept an additional parameter and adjusted the logic for selecting the file to enhance file dialog functionality by allowing users to specify an existing file name
updated widget sleep delay and refactored page count updates in AppsCustomizePagedView . java ; added a method to update page counts to improve widget management and streamline page count updates for better performance
added instance mapping and transformed coordinates for components in FlightConfiguration to improve component positioning accuracy based on component coordinates
camel - 1174 : use the ' direct ' endpoint instead of the ' seda ' prefix in camel - springmicrometer
updated DateTimeFormatter instantiation to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3952 ] if the user be not authorize , do n ' t return the full access to the document .
added a test method to handle null values in the StarTreeConfig builder to ensure that the builder correctly handles null values when dimensions and metrics are provided
camel - 8200 : fixed recipient list eipients to be support a parameter .
refactor layout handling logic to improve the repaint mechanism to enhance the responsiveness of layout updates based on PaintInfo changes
replaced DetectAuthenticationMethodOperation with a ServiceConnection and OperationsService in AuthenticatorActivity to streamline the authentication process and improve service management
