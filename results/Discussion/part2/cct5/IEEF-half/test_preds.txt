fix deprecation warn for socketappender convenience constructor
fix potential npe in basicauthplugin . gethintedheaders .
[ java ] use the correct offset for message length when read the message .
cloudstack - 4984 : fix calculation of overcommit ratio when vm detail CPU be not set
added flags handling in ShadowPaint and updated related tests in PaintTest to verify anti - aliasing behavior to ensure correct initialization and validation of anti - aliasing behavior in the shadow implementation
updated the title of the MassSetFieldsDialog to use localized strings to improve internationalization support for field names
print a warning if there be no eclipse in the bugreporter
do n ' t copy the auth scheme in the request header , a it ' s not necessary , and add a test for digestauth
added a RemoteInputListener interface and methods for handling socket connection status to improve flexibility in managing connections and their status
refactor conditional statement and update stripeIx assignment in OrcEncodedDataReader . java to improve code clarity and ensure proper assignment of stripe indices
updated condition in HomeConnectBridgeHandler to check if a thing is enabled before filtering out the handler to ensure that only active items are processed in the handler logic
added null check before calling removeAllPolicies and addPolicies methods in AuthorizeAdminServlet . java to avoid NullPointerExceptions when bs is null
updated JSON assertions to use ` matches ` for date comparisons instead of ` isEqualTo ` to improve clarity and accuracy of JSON handling in Java versions
added JSON parsing and dag information to TezTask . java to improve debugging capabilities by capturing dag information
updated time calculation in ComputedSummary . java and added helper method getHeapTime in HprofHeap . java to improve accuracy of heap time retrieval and ensure proper handling of unsigned integers
replaced RxJava2Tasks with CommonsApplication for retrieving upload count to streamline upload count retrieval and improve code maintainability
do n ' t try to acquire lock for mvcc concurrently when there be no change in the db .
[ issue # 5000 ] fix commit log max message size ( # 5000 )
added a check for null open folder before marking it as open to avoid errors when a folder is not associated with the associated folder
add test to verify that pgproperty names be sort in ascending order ( # 1473 )
added a constant for the hover message that gives to others in the student to provide a clearer and more informative message for users
changed the type parameters of ` supportsDrop ` and ` getUninstallTarget ` methods from ` Object ` to ` ItemInfo ` to improve type safety and simplify the retrieval of launcher item information
update the assertion message in RequestBuilderTest to use isIn instead of hasMessage to improve clarity and accuracy of error reporting for HTTP method restrictions
updated NearbyActivity to use NearbyListFragment instead of a single NearbyMapFragment instance to improve clarity and functionality of nearby fragment handling
[ hotfix ] fix flatprofilecontainerfrees to pass current status
thirdeye - 697 : detector : configure email report to optionally disable send if no anomaly be detect
[ flink - 7214 ] [ kafka , test ] fix open method invocation from restore state
remove unused db method from datamanager - no longer in use
added constructor to BlockingResponseListener that take a request and maximum size to enforce better handling of larger data sets and improve performance
refactor McastServiceImpl to change the parameter type of memberBroadcastsReceived from ChannelData to byte array to improve consistency and simplify the handling of message data
remove debug print statement from MultiLeaderServerImpl and ensured the reader is closed in a finally block to improve logging clarity and ensure proper resource management during snapshot operations
fix incorrect url for loginSAMLauthenticationfailurehandlertest ( # 3181 )
rename ConfigMetadataProviderTest . java file for consistency to improve clarity and maintainability of the test file
replaced multiple import statements with specific imports and updated the note updating logic to improve code clarity and ensure proper handling of reminder updates
refactor directory stream handling to use a private static class AcceptAllFilter to improve code readability and maintainability by centralizing the filter logic
fix incorrect jdbctestdata set . equals ( ) javadocs
change the signature of lookupType to throw NoClassDefFoundError and improve exception handling in HotSpotJVMCIRuntime to ensure proper exception management during type resolution and improve code robustness
refactor validation of Docker image names to use ` DockerImageName ` utility class to improve code clarity and maintainability by centralizing image name validation logic
updated the dialog messages related to authentication failure to improve user feedback for better debugging
fix issue with setautofocus ( ) in submission form .
add a test method to verify the behavior of Saml properties with different identity zones to ensure correct behavior of SAML configuration settings for different identity zones
8280281 : do n ' t add miss item to the list when the version do n ' t have a number
updated layout settings and added padding and margin properties in the Sheet UI to improve UI layout consistency and ensure proper display of UI elements
updated package structure and import statements for ParallelUniverse to improve organization and clarity of test classes
lucene - 7598 : fix compiler warning concern raw type
update fill style from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve text formatting for better text presentation
update self loop preview , especially when self loop show up in the graph
updated configuration and method names from ALLOW _ TVM _ SOLIDITY _ 5 _ 10 to ALLOW _ TVM _ SOLIDITY _ 059 in multiple files to align with the new SOLIDity 059 implementation
rename the method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve method naming consistency and clarity
added a translation reset for the drag handle indicator in AllAppsTransitionController to ensure the drag handle is properly displayed by the user interface
remove unnecessary system log in jdk . jdi
ninja : improve error message for hive . optimize . ppd . this close # 2373
added an assumption to skip tests in ScanningAppProviderRuntimeUpdatesTest to address build server issues that may cause issues with the underlying operating system
added Maven bundles for Jetty ALPN client libraries and a debug option for diagnosing OSGi bundles to enhance compatibility with Jetty and facilitate debugging in OSGi environments
fix lock time issue with executeasynctask not use post - execution . also fix executeasynctask .
comment ( ashutosh chauhan via prashanth j ) : add javadoc clarification
replaced @ AddToRuleKey annotation with @ ExcludeFromRuleKey annotation to improve clarity and maintainability of the Genrule execution configuration
fix for issue 67 : execute firefox do n ' t work on window
fix potential npe when load a table by column family ( # 13187 )
[ hotfix ] [ test ] fix possible nullability of internal iterator
phoenix - 4229 add support for derive base column and index in splittable api .
[ # 8998 ] fix issue with addstudent after edit a student ( # 8998 )
replaced the import of TestCellReference from the Apache POI library to ensure compatibility with the latest Apache POI library version
fixed explosion of mana lens when they should n ' t be block hardness . close # 2139
fixed exc _ bad _ access error on long press ( bug # 10723 )
truffle : do n ' t create inline assumption object if the inlining assumption be n ' t a constant .
replaced repetitive null checks with a ternary operator in multiple builders to improve code readability and reduce boilerplate code
removed unnecessary check for ` ListBlockParser ` in ` ListBlockParser ` and added a test for deeply indent list in ` SpecialInputTest ` to simplify the indentation logic and ensure correct rendering in special input scenarios
added a new abstract class ` AbstractOptionalAssert ` for custom optional assertions to provide a concrete implementation of the ` Optional ` assertion interface
added an import statement for JUnit ' s Ignore annotation in WebfluxNotIncludedTests . java to ignore tests related to issue # 1070 as noted in GitHub
[ j2kt ] fix testcaselogger . savemessage ( ) with a native method .
camel - 11446 : camel - test - infra - route - startup - order should revisit if it last run to do so .
added a condition to check if the media format is video before accessing the web subtitle to ensure that web subtitles are only processed for video formats
disable jdk tl for now - issue # 402 .
cloudstack - 8703 [ zonemanager ] get local storage pool fail if vm be scale up and local storage be disable ( # 2368 )
[ issue # 3136 ] improve log output of cache - related status
add an option to skip update the model in managedependencies to avoid affecting the pom .
added a test for sending intents with a request code in ShadowActivityTest . java and implemented a new send method in ShadowActivity . java to ensure proper handling of pending intents in the activity
refactor FBO initialization in RocketFigure3d . java to utilize GLJPanel and manage FBO settings more effectively to improve rendering performance and clarity during fbo operations
modified the controllerListeners management in HydrawiseAccountHandler to ensure thread safety to improve safety and prevent potential concurrency issues when managing the controller listener list
solr - 9893 : disable testcoreadminapis on jdk 9 until it work
updated year retrieval logic to use ` ChronoField . YEAR _ OF _ ERA ` instead of ` Math . abs ` for BC dates to improve accuracy in year handling and simplify date formatting
fix a nullpointerexception that happen when close an unconfigured connection in the xmpp protocol provider .
[ iotdb - 3767 ] add cur _ commit _ id to the txnhandler ' s tostring ( ) method
replaced ByteChunk with ByteBuffer for better memory management to improve performance and reduce memory allocation overhead when handling buffered input streams
added a ` toSync ` method in ` AsyncUtils ` for converting a future to a sync to improve asynchronous handling and error handling in the application
added ActionGraphBuilder as a parameter in multiple compiler factories to enable action graph building functionality for improved rule management
danielwagnerhall : adding test for hidden file input in upload
added exception handling for creating tables in SQLManager . java to ensure that SQL exceptions are caught appropriately during the table creation process
added a check for the existence of the local Maven directory before proceeding to ensure that the application does not attempt to process non - existent files
fix for # 2539 : hide label in web
fix : return null instead of empty map . this prevent npe in getmetadata method
fix buffer compression flag not use in defaulttrackoutput
hhh - 16921 do n ' t reorder entity when use sortedby = false
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) " to provide clearer context for the error context
added null check for backupFolder before logging expiration information to avoid potential NullPointerExceptions when the backup folder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for creating a void array using reflection to explore and handle the behavior of Java reflection when attempting to instantiate an array of void type
added @ AddToRuleKey annotation to the toolType field in ClangCompiler and GccCompiler to ensure proper serialization of toolType across different compiler implementations
replaced hardcoded timeout values with a constant for improved maintainability to enhance code readability and reduce the risk of timeout calculations
add a getsampled ( ) method to prometheusexemeterregistrytest and prometheusexemeterexemarssample ( fixes # 343 )
removed the @ Ignore annotation from multiple test classes to enable execution of the tests that require MongoDB server
no - jira remove redundant cast to jmsconnection in the test
updated condition in MetaDataSource to check for artificial tables to improve accuracy of metadata table identification logic
updated file status checks in FileOutputCommitterContainer and LaunchMapper for better clarity and functionality to ensure accurate error handling when the file type is not a directory
modified session attribute handling logic in MongoSessionManager . java to ensure proper null checks and avoid unnecessary operations when no attributes are present
use setsizefromlayout instead of setfixedsize for surfaceholder in default constructor .
replaced direct reference to ` _ stop ` with ` CountDownLatch ` for better synchronization to improve thread safety and reduce potential race conditions
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - jbang - fix defaultmessagehistory to print elapsed time in ms .
camel - 18084 : fix flaky test : do not wait for countdown to be correct . ( # 21854 )
updated WebSocketTest to check for a non - null error before asserting its type to improve error handling by providing clearer assertion failure messages
fix issue with apps flicker when switch to hotseat .
rename variable ` theHandler ` to ` handler ` for consistency to improve code readability and maintainability by using a more descriptive variable name
int - 1686 add support for ' default - output - channel ' on < xpath - router / >
fix : increase ` ` cache - seconds ' ' for good performance
updated OpenAPI version in ParameterDeSerializationTest . java from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in multiple test files to ensure compatibility with the latest API version and avoid potential issues
remove redundant append call from ByteBufferPool to optimize performance by reducing unnecessary operations
added a check for the presence of " alt - rt . jar " in the boot class to avoid issues with detected alt - rt . jar files
updated delete statements in JdbcScimUserProvisioningTests to use upper case for user names to ensure consistency in user deletion logic and improve test accuracy
replaced the usage of ` Arrays . asList ` with ` ArrayList ` and modified the way options are generated to improve code readability and ensure compatibility with Java version 1.7 and above
apps - 770 do n ' t drop video when there be no webcam stream
modified the condition in HttpParser to check for content view presence before processing to ensure complete requests are only processed when the content view has not content
camel - 5612 : added documentation to atos component to explain the meaning of the attribute .
added support for " printf " and " print " methods in Java2TypeScriptAdapter to enhance TypeScript adaptation for print statements
add a new file TestCapacityUntilGCWrapAround . java and native methods for managing metaspace capacity to ensure that metaspace capacity is not exhausted on 32 - bit platforms
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
remove useless check that be n ' t need
unit test base on user forum issue
tmi - 104 : better handling of invalid icc profile failure .
fix terra pick and terra pick recipe , close # 380
modified SpringModule to register beans only if they have the same type as Config or Environment to ensure that only active classes are registered in the application context
remove the need for a parent classloader to stay in the context .
bug 52215 - update nameupdater to support upgrade
fix # 646 - properly start the ellipsoid region selector
updated URLs from HTTP to HTTPS in Desktop . java to enhance security by using secure protocol
[ geos - 8237 ] make sortby valid in getfeature request .
updated the null check condition for grantTuple [ 0 ] to ensure proper handling of null values to avoid potential NullPointerExceptions
added graphics configuration and compatibility image handling in DiagramGenerationTest . java to enhance image rendering accuracy and ensure compatibility with expected and compatible images
handle the case where sideddelegate could n ' t be null safely .
updated DataUtilities and ReTypeFeatureReader classes for improved functionality to enhance data processing efficiency and maintainability
make locktest more robust by use asserttrueeventually instead of sleep
added methods to calculate whole - word strings and join tokens to improve string manipulation functionality for better performance and readability
use httpresponse . senderror ( 404 , string ) for 404 response to avoid code duplication .
updated command parsing logic to utilize a parsed line for improved accuracy to enhance command handling accuracy and maintainability in the code
updated version string from " 1.0 . 0 " to " 1.0 . 1 - SNAPSHOT " and set version date to PENDING to prepare for upcoming release and maintain versioning clarity
update buffer position setting to use dimensionSize instead of idx to ensure correct dimension size is used for optimal performance
added drag - and - drop functionality to the SystemUiProxy and TouchInteractionService classes to enable detection of drag - and - drop states in the system UI
[ java ] disable flaky test base on java version
add " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to TestCipher . java to support additional cipher algorithms in the application
replace place description retrieval with place description retrieval for improved clarity to enhance user experience by displaying more relevant place information
added JsonProperty annotation to ScimGroupMember . java to enable JSON serialization of group member values
modified HqlQueryRenderer to handle reserved words using JpaQueryParsingToken to improve query parsing for better handling of reserved words
camel - 17788 : fix nullability check in subscriptionhelper . getmessage ( )
refactor the Parser class in the code to improve code readability and maintainability
updated the ` offsetStreamIndex ` method to include an additional parameter for handling subtitle indices to improve subtitle selection logic based on user preferences
tika - 697 -- fix broken mime - detection for archive and cpio
[ hotfix ] [ table - planner - blink ] remove unused method getmonotonicity from flinksqloperatortable
added equality and hash code implementations for OneTimeTokenAccount and OneTimeToken classes to ensure data integrity during object comparison and hashing
make assistant touch consumer in interactive mode more resilient to fling
added a new file SolarisShortDSA . java to implement key pair generation and verification using SHA1 to address and verifying Solaris bug fixes in the application
added toggleSearchLabel method call with a value of false to update the search label visibility based on user preferences
bug 9827 : do n ' t fail to create snapshot if volume can not be lock
refactor the FileDetailActivity to use a single DetailsServiceConnection instance for service connection management to improve code organization and simplify the management of file details
replaced direct failure handling with an AtomicReference for request failures to improve exception assertion clarity and maintainability
modified the equals method in ConjunctionScorer to ensure correct equality comparison between scorer objects
added a null check for item before binding to avoid potential null pointer exceptions during item binding
add random commit timeout to cpgroupid generation [ hz - 2077 ] ( # 26056 )
updated cache size calculations and added logging for cache fullness to improve cache efficiency and enhance debugging information when cache is full
updated API paths and method parameters to use " v3 " instead of " v2 " to align with the latest API specifications and improve code clarity
added an empty ( ) method to the freenect2 class to provide a way to check if elements are empty
drill - 8416 : fix null pointer exception in parquet reader for empty dictionary page .
updated method signatures and added validation for market data type in SerumStreamingService . java to ensure correct input types and improve error handling for invalid inputs
add a config option to disable charging animation , for the pool
[ java ] give clusternoderestarttest more informative if connect timeout occur .
add more logging to interruptedexception in waitforhelper
make test more reliable on less filesystems
updated the injection order of dialog and screen styles in ResourcesInjectorFull . java to improve clarity and consistency in style management for the user interface
updated changeLogFile and outputFile types from String to FileResource in BaseLiquibaseTask and DBDocTask to improve file handling efficiency by leveraging FileResource for better performance
fix blockworldvector equal method ( # 1900 )
modified LongConcurrentLRUMap . java to remove TODO comment and make CacheEntry fields final to improve code clarity and enforce immutability for better maintainability
camel - 9034 : fix issue with literal in resource configuration
modified FileCredentialsCache and EmptyCC to enhance credential cache handling to ensure the cache is instantiated correctly and prevents potential errors when the cache is not instantiated
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to ensure the correct database path for multi - signature contract validation
enable fast sync if there be insufficient peer ( # 861 )
douniaberrada : fix compilation error in gump .
theorem proving : fix the equal ( ) expression node , by check for equality
clear pending rendering operations when there are too much pending in AndroidAsyncView to optimize performance by reducing unnecessary operations during minimization
fix test that be n ' t call system . currenttimemillis ( ) in the loop
fix problematic update key in write - behind queue ( # 11305 )
added a line to set the icon for JLabel to null to avoid unwanted space issues during rendering
modified test methods in TestBlacklistAwareRedirectResolver to change the strict match setting to false to ensure correct behavior of redirection matching under strict conditions
added shutdown management methods and improved test cases for ShutdownMonitor functionality to ensure proper handling of shutdown states and validate functionality through unit testing
reduced the calculation of move size and chunksFillRate in RandomAccessStore . java to optimize memory usage and ensure consistent fill rate comparison
refactor Json class to improve field handling and error messaging to enhance readability and provide clearer error messages for serialization issues
[ hotfix ] [ coordination ] move componentclosingutil thread to coordination package
bug 7119 : delete volume in the storage layer on vm exit
bug 9453 : ' java . net . getip6rangefromcidr ( ) ' implementation do n ' t work for ipv6 address in a vlan
rename variable ' userDetailsBeanNames ' to ' beanNames ' for consistency to improve code readability and maintainability by using a more descriptive variable name
increased the shard amount in the leader retry from 15 , 000 to 30 , 000 to improve stability by allowing longer leader attempts in the test
clean up error message for invalid parameter ( # 8547 )
update drawing method calls in URLImage class to correct the direction of the image to ensure proper rendering of images
updated field name comparison logic in SolrTestCaseJ4 . java to ensure consistency with updated field name comparisons
mondrian : fix java . lang . arrayindexoutofboundsexception with empty list .
[ hotfix ] [ stream ] add cause to streamconfig . exception
pch : fix numberformatexception when use preproc with annotation
removed unnecessary whitespace in the read method signature to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a standardized way to handle annotation values
do n ' t encode empty extension list in jsonparser ( # 3991 )
fix for npe when there be no internal or internal name in the library .
added alias for " node _ popup _ scripting " in the entryNavigator to provide access to the alias " node _ popup _ scripting " for the entry
updated constants and methods in OverviewActionsView and RecentsView to enhance task visibility and interaction based on device profile to improve user experience by refining the behavior of action views in different device contexts
camel - 8250 : camel - jms should use < jmsmessage > from the jmsproducer and not a simple jms message again .
[ hotfix ] [ javadocs ] fix minor issue in java doc
deleted deprecated files and refactored the FailureContext class to utilize the new file to clean up the codebase and remove unused components
modified GzipHandlerTest to use a MicroServlet for handling content with a specific header to improve the handling of non - micro content and ensure correct gzip compression
fix for issue 2844 : onsubscriberedo do not update consumer capacity
added logging functionality to the SpeedmentImpl class and refined component handling in the code to enhance debugging capabilities and improve code readability
changed oai load dspace - config to be able to load configuration directly from web . xml .
modified StoreScanner and TestWideScanner to improve row handling and debuggging logic to enhance efficiency and reduce memory usage during testing and ensure better performance evaluation
camel - 4900 : do not run camel test when jmx be not enable .
replaced hardcoded ` / ` with a constant ` canonical _ package _ separator ` in ` SourceLineAnnotation ` and updated ` SourceCodeDisplay ` to use this constant to improve code maintainability by avoiding magic strings with a consistent separator
added methods to find the YARN executable and enhanced Spark job monitoring with application information to improve the accuracy of YARN command execution and app identification for better monitoring and debugging
enable mariadb support for mysql and mariadb in the dbconnectionmanager
fix bug with ' no log ' message in split - log manager
fixed http : / / github . com / codenameone / codenameone / issues / 1424
added a new file ` InvokespecialInterface . java ` implementing an interface and demonstrating its usage to provide a demonstration of invoking interfaces and demonstrate their invocation in Java
fix checkstyle issue in util / containers / evictingboundedlist . java ( # 791 )
fix bug with hopper traversal when enable turn cost .
added validation to ensure selection is not negative to prevent illegal argument exceptions when the background is disabled
added a null check for the md variable in RpcServer . java to ensure that the method name is not null to prevent runtime errors
updated hotseat cell size calculation to include border spacing to improve layout consistency for hotseat items in the launcher
updated key comparison logic in ExpressionTree . java to use values . get ( ) to improve clarity and reduce code duplication
fix # 2704 - do n ' t output file name in task definition for version > v4.1
updated index directory reference from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct directory is used for new indexing operations
updated the comparison logic in DisplayModeTest to use true for display mode to ensure correct behavior in the display mode comparison logic
fix latex conversion for high codepoint unicode character ( # 5748 )
sf patch # 1528142 malformed oai - pmh response : illegal byte in utf - 8 for sf bug # 1490162
alexeibarantsev : fix npe in webdriverbackedselenium . doprivileged ( )
added a clear button with functionality for data browser functionality to enhance user experience by allowing clear of all Tables and improving layout handling
updated the OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for building the base URL to simplify the code and improve URL handling for better maintainability
updated date assertions in SoftAssertionsTest . java to use dynamic date parsing to improve accuracy and reliability of date assertions in tests
modified the ` adaptOrders ` method to include a ` reverse ` parameter and adjusted limit orders handling to allow for reverse order order management based on the provided parameter
delombok now also print ` ` var ' ' for type with no arg . also add test for java11var class .
simonstewart : fix a problematic compilation error in the c++ code of the sendkeys method
updated Configuration instantiation to initialize with a false parameter and removed unnecessary checks for default values to improve configuration handling and simplify code by avoiding unnecessary checks
replaced call to ` super . drawChildren ( batch , parentAlpha ) ` with ` super . draw ( batch , parentAlpha ) ` in ` WidgetGroup . java ` to ensure proper rendering of child elements instead of child elements
added unit test base on user forum issue
replaced calls to ` System . getProperty ( CATALINA _ BASE _ PROP ) ` with calls to ` context . getCatalinaBase ( ) ` in multiple Java files to ensure consistent use of the context for configuration file path retrieval
added locale - specific test cases for retrieving the best datetime pattern in ShadowICUTest . java to ensure correct behavior of getBestDateTimePattern based on locale specifications
update PlotSquared . java to modify color data structure to enhance color representation for better clarity and organization
added ZuulProperties to TraceRestClientRibbonCommandFactory and TraceRestClientRibbonAutoConfiguration to enhance configuration flexibility with zuul functionalities
tika - 35211 -- fix tika - app ' s parser to set default timezone to utc
added two new classes ` SampleApplication ` , ` SampleApplication ` , ` SampleApplication ` , and ` BuildInfoMojo ` , while updating ` BuildInfoMojo ` to utilize the ` buildTime ` method to improve code organization and enhance build time handling functionality
modified the calculation of xDist to use the absolute value of mScroller . getCurrX ( ) to ensure xDist is correctly calculated relative to the current screen ' s position
remove test case that be n ' t need anymore ( do n ' t work any more anymore ? )
removed the nullability annotation from the countPlaceholders method in LazyMessage to ensure consistency in method signature and prevent potential NullPointerExceptions
fix print typo in error message ( # 2088 )
* thymeleaf - core : move templateparser for markup class to allow reuse by other template parser
camel - 8156 : add example to show how to use xpath expression .
add miss nullable annotation to futureutils ( # 3726 )
fix a warning when invokedynamic be not resolve in on - call - graph construction
updated email addresses in ContextTest . java to use the example email instead of the Gmail domain to ensure correct email usage for testing purposes
updated HTTP response handling in HttpConnectionTest . java and URIUtil . java to ensure correct response format and improve URI comparison reliability
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` and ` ResultSet ` classes to provide consistent column data type retrieval for improved data retrieval
fix build and fix default implementation for serviceclientconfiguration
updated HSSFPictureData class to improve image handling capabilities to enhance performance and maintainability of image processing
updated startTime type from long to Instant and modified related method calls to improve time handling accuracy and consistency with modern Java practices
added version handling to LibMediaInfoParser for specific media info options to ensure compatibility with new media info format and improve logging clarity
added methods to create a proxy for IdeaDependency based on its type to improve modularity and error handling during proxy creation for IdeaDependency
8132731 : add a new class ` serialheap ` and a corresponding test in ` sun . jvm . hotspot . gc . gc . serial `
added @ SuppressWarnings ( " serial " ) annotations to multiple Java files to suppress warnings related to the use of specific serialization methods
fix problem with mouse wheel event , where
datamongo - 1608 - fix potential npe in query . findbyfirstnameIgnoreCase .
[ flink - 34063 ] [ type ] add support for ` ` key by value ' ' to a maptypeinfo interface .
added a method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` for handling multiple identity providers to ensure accurate configuration and error handling for missing or duplicate providers
pdfbox - 846 : allow map parser to parse a poor space between a string and a number
added a new ` OperationsServiceConnection ` implementation and updated service handling in ` ContactsBackupJob ` to improve the management of operations service interactions and enhance code readability
refactored type constraints and introduced new classes T6938454a and T6938454b with generics implementations to improve type handling and provide examples of bounded type parameters
add is _ config _ hidden property to accountlist , do n ' t show the hidden status message
add debug code for inconsistent number of display
updated schema removal logic in PMetaDataImpl and added a test for schema removal in PMetaDataImplTest to ensure consistency in schema handling and validate schema removal functionality
ggb - 630 fix passive login bug : loginlistener be not only fire once ( doh ! )
added a new Box2DTest class and updated GDXTester and SpriteBatchTracks to include it to enhance testing capabilities for the Box2D backend
fix for cassandra - 1747 . patch by jbellis ; review by brandonwilliams for cassandra - 1438
[ hotfix ] [ runtime ] change default buffer request timeout from millis to minute .
regenerate client with updated copyright year ( # 4382 )
added help button to the openoffice panel to provide a help page .
[ java ] fix code style issue with ` tcp _ nodelay ` config set
changed method return types in BinanceAuthenticated and BinanceFundingHistoryParams to use wildcard generics to improve type safety and reduce potential runtime errors related to key handling
fix a bug in raw scan result when class name be not set
fix infinite loop when parse bad image . fix # 483
datajpa - 464 - querydsl : fix tostring ( ) method to return correct null
added null check for actor before processing actions in ParallelAction and SequenceAction classes to ensure actions are processed only when actor is not null
test : fix formatting of ternary operator
added synchronization to the HDFSEventSink class for accessing sfWriters to ensure thread safety when accessing shared resources
added a new file ` Issue888 _ JavaI . java ` implementing interfaces and classes in the ` org . mapdb . kotlin ` package to implement a more structured approach for working with Java and Kotlin in the project
added functionality to revoke an existing certificate using an external agent in CertificateManager to ensure proper certificate revocation handling by validating the existence of the agent certificate
added handling for no body responses in AbstractHttpTest to ensure proper response writing after no body response
added error handling for script engine instantiation and improved readability to ensure compatibility with Java 6 and provide clearer error messages for users
updated connection pooling type in HiveConf and improved exception handling in TxnHandler to enhance configuration flexibility and ensure proper driver instances are retrieved
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to improve code consistency by using the correct method for home button functionality
added a filterLock method to manage file lock actions in FileMenuFilter . java and updated OCFileListFragment . java to utilize it to improve file lock management and enhance user interaction with the file menu functionality
fix : lucene : core : spotlessapply failure due to 8.8 . x version update
clear endpoint cache to fix updatekms
added a private method ` waitForState ` and modified its usage in ` Locks . java ` and ` ThreadExecutionSynchronizer . java ` to improve code readability and encapsulate waiting state management
refactor SkylarkDescription and related classes to modify the method for getting coerced attribute values to improve the handling of dependencies in the attribute values retrieval process
simonstewart : separate storage interface into a common interface extending storage interface
fix redundant view creation and add test
changed exception handling from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling to capture a broader range of issues during segment generation
updated the query parameter handling in SpellCheckComponent . java to initialize q to the correct query string if it ' s null
added validation for header values to ensure that header values conform to HTTP specification and prevent potential errors in processing
replace ` instanceSize ` with ` arrayBaseOffset ` in ` HybridLayout ` and introduce new functionality in ` HostedInstanceClass ` to improve array base offset handling for better accuracy in layout management
refactor setContainsComment method to be an @ Experimental , and remove it from AbstractApexCommentContainerNode to enable more flexible method overriding and improve code quality
hhh - 16925 - [ table ] fix fetch timing computation to include role and lazy = true
refactor NoGetOperationsFilter and RemoveInternalParamsFilter classes to extend AbstractSpecFilter and remove isParamAllowed methods to simplify the code by leveraging the abstraction of AbstractSpecFilter
added assertions to verify database name and table name in TestCompactionTxnHandler . java to ensure correctness of database name and table name retrieval during testing
camel - 749 : timer consumer , with graceful shutdown do not throw exception . thanks to tom cunningham for patch
added a condition to check if a block processed before adding traces and removed the previous block to ensure traces are only added when the processed block is not processed
updated the null check logic in the ProviderManager class to ensure proper handling of null values to improve robustness by preventing NullPointerExceptions when checking for null elements
removed unnecessary version check for PostgresDatabase in InsertOrUpdateGeneratorPostgres to simplify the code for better readability and maintainability
added a new local index limit parameter and updated related methods in multiple classes to improve query performance and ensure correct pagination behavior
add a check to prevent adding collections with the same name and be already compatible with the past to ensure proper functionality and avoid runtime errors
updated cursor positioning logic in VDUBuffer and vt320 classes to ensure correct cursor positioning to improve rendering accuracy and maintain window boundaries
added a static final String constant USE _ RETRIES to the HttpShardHandlerFactory class to standardize the use of retries configuration in the application
update JavaVersion . java to remove trailing whitespace in VERSION _ NUMBER string to ensure accurate version parsing for version numbers
fix bug with empty input gates , eg . if the user be try to write , the task be not terminate
int - 3249 add an unit test for this class ( can be execute in an ide without the need to reproduce it )
[ hotfix ] [ runtime ] avoid npe in remotecluster . getproperties
replaced an exception throw statement with an initialization of IOException to improve error handling by preserving the original exception context
ambari - 22194 . miss copyright header in osgi file ( alejandro )
update confidence only on new txid ( fix # 355 )
bugfix # 128 , add netty support for netty 4.0 +
removed unnecessary import statements and simplified return statements in NearbyController . java to improve code clarity and maintainability by removing redundant logic
pdfbox - 4475 : add generic and a test , a suggest by valerybokov
updated activity type checks in BaseSwipeUpHandlerV2 . java to utilize TaskInfoCompat for consistency to ensure accurate identification of non - home tasks during gesture handling
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated associated constants and methods to improve clarity and consistency in naming conventions
updated test methods and variable names for clarity and consistency in ShadowTelephonyManagerTest . java to improve code readability and ensure uniformity in case handling
added functionality to set the unfreeze amount in UnfreezeBalanceV2Actuator to ensure proper handling of unfreezing balance transactions
change max description to ` ` per match ' ' ( per minute )
simonstewart : a couple more commons - io version of the firefox profile into common
fix javadoc error report by java 11
add marble diagram to javadocs for new onbackpressurebuffer variant
replaced DBObject with a method call for adding pushAll in Update . java to improve code clarity and support multiple push operations
added a null check before setting the UUID in MockHubService to avoid potential NullPointerExceptions when randomUUID is not set
added hover event handling to InputConsumer and OverviewInputConsumer classes to enhance user interaction by supporting hovered input events
solr - 1180 : fix a race condition in solr - server that could cause test failure in solrcloud mode .
camel - 16129 : camel - netty - http : rename httpconfiguration parameter to label consumer
hbase - 18452 [ standalone ] fix the retry logic in hbasertestingclusterautostarter and hbasertestingautostarter ( ted yu )
updated file creation logic in SourceSnippetHelper . java to use ` File . getAbsolutePath ( ) ` and ` File . separator ` to ensure consistent file handling across different operating systems
fix transient failure in encodedgraphtest . assertnotnull ( ) .
updated query commands in SchemaCrawlerTextCommandsOutputTest to utilize " all _ tables " and added a new test method to verify table output to enhance functionality to retrieve system tables and improve test coverage for query results
added currency handling for KrakenAssetCodes in KrakenAdapters . java to ensure accurate currency metadata for asset codes in the Kraken API
added a toString method to the AnyOf class for better string representation of conditions to enhance readability and usability of the anyOf string representation for debugging
[ te ] fix authorizenotfoundexception in alerttaskrunnerv2 . java ( # 4553 )
[ beam - 10363 ] influxdb : warn if measurement be empty ( # 10737 )
rename methods from ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and functionality for handling downcast operations
updated address validation logic in NetUtils . java to include unique local addresses and added a method to check for local addresses to enhance security by ensuring only valid local addresses are processed
fix : support quoting of column name in datatext processor ( # 487 )
added methods for system property management and improved string processing in various classes to enhance functionality and flexibility in managing system properties and methods
added a constructor to UpdateRequest that accepts a URL string to initialize the request with a POST method
updated enum declaration from static to non - static in ProtoTypeAdapter . java to streamline enum serialization process and improve encapsulation
added a method to add experimental format warnings in RequestHandlerUtils . java and removed it from RequestHandlerUtils . java to improve the handling of experimental format warnings for improved clarity and maintainability
add a format method that format module names into a string and improve the logging statement to enhance readability of log messages by including relevant values
bug fix : row height be too small , use font size
no - jira - remove unused code in defaultbrokerheartbeatmanager
added meanPartitionSize and partitionCount variables with their respective retrieval in CqlInputFormat to ensure accurate calculation of partition sizes and counts when data is not null
simplified the condition by removing unnecessary image comparison to improve code readability and maintainability
[ drools - 7 ] make equal and hashcode method of ruleterminalnodelefttuples serializable
added a new import for StageIDsRearranger and resolved it based on the configuration to enable the resolution of StageIDs in the query optimization context
fix typo in messagingservice mbean name
update memory consumption logic in LotsOfOutput . java to include total memory and introduce debug output to ensure more robust memory management and provide insights during execution
added imports for ` Document ` and ` NumericRangeQuery ` and ` DimConfig ` to several classes to enhance documentation and improve maintainability of the faceting library
updated ` LdapAutoConfiguration ` and ` LdapProperties ` to modify anonymous read - only behavior to enable anonymous access configuration for improved user experience
refactor DatabaseMetaData class to improve structure to enhance maintainability and readability of the code
[ beam - 2367 ] fix echo pipeline unit test ( # 2367 )
added ` finishMocking ` method to ` DefaultMockitoSession ` and improved error handling in ` StubbingWarningsTest ` to enhance mock verification process and ensure proper exception management during verification
refactor GoTestDescription to streamline dependency handling for additional dependencies to improve code readability and maintainability by consolidating parameters in a single method
modified buffer handling in SPDYAsyncConnection and HTTPSPDYAsyncConnection to improve readability and manage write operations more effectively
fix liquidWrapper ' s getlowingblock method ( # 4117 )
updated AndroidLocationPlayServiceManager and BackgroundLocationHandler to use Uri for background location handling to enable dynamic background URL management and improve flexibility in data handling
fix typo in comment and javadoc .
[ flink - 30912 ] [ client ] fix cliFrontend to properly handle streaming plan
fix craft recipe not be craftable correctly . close # 238
flume - 2062 . fix flaky test by retry forced checkpoint until i / o error .
removed unnecessary condition checks for whitespace and line separators in TabsAndIndentsVisitor . java to simplify the code logic for better readability and maintainability
added a regex pattern to match temporary file names in NeuteredLinesFilter . java to ensure that temporary files are correctly processed during processing
chore : integrate new gapic - generator - java and rules _ gapic ( # 544 )
added checks for INTERVAL and NCLOB data types in DataTypeFactory and ColumnSnapshotGenerator classes to ensure correct handling of different data types and improve data type management
[ wavefront ] distribution summary : check forHistogram before register with common format ( # 2594 )
updated the handling of upstream resources in ShenyuClientRegisterSpringCloudServiceImpl . java and added a warmup parameter in DivideUpstreamUtils . java to improve the efficiency of upstream creation and add a time warmup for better performance
added a new method ` registerListener ` to ` ShadowSensorManager ` for registering sensor listeners to enhance functionality for handling sensor events with maximum latency settings
added logging for SocketException when handling full method , full URI , and header methods to enhance error handling for socket operations in the HTTP server
camel - ignite : fix camel - ignite npe issue . thanks to jay sensharma for patch .
fix # 165 - handle empty set gracefully
pdfbox - 2852 : correct exception handle , a suggest by ronald bergmann
add test cases for HdrCapabilities in ShadowDisplayTest . java to ensure correct functionality of HdrCapabilities handling in the display
set classLoader to null in JavacInMemoryStep . java to ensure proper resource management during class loading processes
updated error messages in SemanticAnalyzer for clarity to provide more context about bloom filter entries and column name to improve debugging capabilities by providing more context in error messages
added a default constructor to the Message class to ensure proper instantiation of Message objects
adjusted bug priority for object serialization only on java . awt . component
updated the constructor of PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and modified the way BigDecimal is returned to enhance flexibility in handling decimal types and ensure precision scale consistency
replaced GZIPOutputStream with OutputStream in CompressionResponseStream . java to optimize response handling by using original output stream when committed
updated variable and method names for clarity in the Authenticator class to enhance code readability and maintainability by using more descriptive parameter names
added a condition to check for specific directory names in DCD . java to ensure that only valid directories are processed to avoid potential errors
added a method to retrieve the thread group name and modified the threadleak test to use this method to improve clarity and maintainability by centralizing thread group information
added logging for security interceptor instantiation in MethodInvocationPrivilegeEvaluator to improve debugging capabilities by ensuring required security interceptor is not null
changed package and logger name in DmozParser . java from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` to better reflect the functionality and organization of the classes
updated import statements in RegisteredServiceChainOperatorTypes and ChainingRegisteredServiceDelegatedAuthenticationPolicy to streamline imports for better readability and maintainability
cloudstack - 4425 . convert iso to iso before insert it into the vm ' s disk ( # 3425 )
[ java ] remove call to previous signal handler , we do n ' t need to delegate to the signal handler
replaced static import of ArrayUtils . isEmpty with ArrayUtils . isEmpty for streamlined checks to improve code readability and leverage built - in utilities for string checks
replaced NoopDiscoveryClientConfiguration with a Spring Boot test configuration and added a discovery client bean to improve configuration management and ensure proper service discovery in Spring Cloud tests
added multiple @ Override annotations to the ColorRGBA class to improve code clarity and ensure proper method overriding
planning api : remove unused setting of resetinitializedplanningentities
added build time management to the artifact caching process to enhance build tracking by capturing build time for more detailed artifact caching
modified the calculation of fixedRowSize based on aggregation type to ensure accurate size calculation for data processing
fix possible npe in wallet . addblockappearance .
added support for CNC currency pairs in BTCEUtils and related classes to enable trading functionality for the Chinacoin currency pair
updated skew allowance handling in SAML authentication classes to improve flexibility and ensure consistent skew allowance configuration across the application
updated sorting logic in SongListActivity to utilize ItemSortBy instead of null to ensure consistent sorting behavior based on item type
refactor the readBodyToBytesIfNecessary method to handle request body serialization to improve code clarity and ensure proper handling of request bodies
switch to use legacy base block for nbt spawner ( # 1500 )
refactor snapshot retrieval logic in IcebergBranchExec to enhance readability and reliability when handling non - tag tables
replace usage of ` newArrayList ` with ` Collections . singletonList ` in ` AbstractLdapMockMvcTest . java ` to improve code readability and reduce dependency on external collections
fix and clean up PhotonMappingDemo and HybridDemoSsboInstancing classes to improve clarity and organization of binding logic in the code
added validation for ` getRequirePasswordChange ` in ` IdentityProviderEndpoints ` to ensure only required properties are set to prevent errors during execution
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure that uninitialized fields are removed from the constructor list
modified SQL error handling to correctly use a URL for closed connections to ensure proper URL resolution and provide clearer error messages when the database is closed
[ scb - 1272 ] add test case for require body and update doc
updated regex patterns for user and password patterns in CredentialInjector . java and added corresponding tests in CredentialInjectorTest . java to improve flexibility in credential injection by allowing both user and password fields
added a new menu item " Item4 " and a new key binding for the enter key in ActionListenerCalledTwiceTest . java to enhance functionality by providing additional options in the menu and improving user interaction
updated print statements in TestCoreParser . java to include the class name and produced results to improve debugging output for better clarity and ensure correct results are produced
performance improvement : string - compare be usually cheap than array - comparison , so compare the string in the equal method only once .
changed the access modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class for better encapsulation
lucene - 3846 : morelikethis . getdoccount do not return numdocs from ir . getdoccount , and add a test from corpus
[ java ] fix checkstyle issue in util / gamedata / questionmanager . java ( # 7368 )
[ hotfix ] [ test ] extend testlogger in networkbufferpooltest
modified the query construction in MongoSessionDataStore to properly include the upperBound variable to ensure proper query construction for expiration handling
[ gr - 29533 ] make unsafe - getlong native method in the guest language .
updated time zone name for Asia / Amman from ARAST to EET across multiple language files to correct time zone representation for Asia / Amman
updated the ID in DeprecationLogger from 90000010 to 90000011 to reflect the new version of the logging framework for improved tracking
hhh - 16625 do not attempt to convert to lock if the transaction be mark for rollback
fix stringindexoutofboundsexception in downloadexternalfile . download ( ) .
fix menu bar for non aqua look and feel under macos
added test case for piecewise integration in geogebracas
fix recent animation not get complete sometimes when use 3p launcher be : fcad20bad9
add a modWhiteListPattern property in HiveConf and a test for it in TestJdbcWithSQLAuthorization to allow modification of the metastore URI without modifying the list of parameters
remove duplicate call to invalidClasses . put ( entryName , value ) in EntryLoader . java to streamline code by eliminating unnecessary updates
fix findClosest in mobileinput to use player . team ( ) instead of team . sharded ( )
updated Cookie initialization to use domain helper for domain name to ensure compatibility with different domain configurations
added nullable validation logic to columns and updated handling of nullable values to ensure proper data integrity by preventing invalid nullable columns
refactor SecurityTokenServiceClient and related classes for improved consistency and clarity to enhance maintainability and readability of the security token handling system
added functionality to delete documents and refactored the ID handling in CompositeIdRouter to improve code clarity and ensure consistent behavior with consistent ID formatting
added snapshot handling for PostgreSQL to improve performance by optimizing binary stream creation for bytea tables
updated conditional checks for cache and cache sizes in DefaultServlet . java to ensure valid values are handled correctly to avoid potential errors
fix drag drop in tab and make it work again ( # 4696 )
refactor description creation in ExecutionUnitRunner and related tests to improve clarity and correctness of test descriptions
use stringutils . isnotempty to check for null
removed public access modifier from several methods in TimeUtils . java and updated imports in GitBlitSuite . java and TimeUtilsTest . java to enhance encapsulation and follow best practices for class functionality
allow jdk7 to run test on jdk 18 +
updated filename checks to correctly handle " . jpg " and " . jpeg " suffix to ensure compatibility with different file naming conventions
[ gr - 24488 ] fix debug info provider for host method .
added getIcon ( ) method to multiple Data classes and set its default icon to enhance icon functionality for better UI consistency across different platforms
fix stringindexoutofboundsexception in counterrequestaggregation . getname ( )
fix $ { dynamic } in text replacement ( # 2295 )
fixed nullpointerexception if the client do n ' t have a socket set while connect . smack - 169
updated SchemaExtractionProcessor . java for improved functionality to enhance schema extraction processing efficiency
added a method ` copyDir ` to create directories for files based on their content to improve file copying functionality and ensure parent directories are valid before copying
added exception handling for unknown datum classes in JacksonUtils . java to improve error reporting for unrecognized datum types
refactor ABI handling in DefaultJavaLibraryBuilder to use HasJavaAbi for class and source ABI checks to improve clarity and reduce redundancy in ABI construction logic
adjusted item height calculation in SelectBox . java to simplify height adjustment by directly using the list ' s item height
replaced direct assignment of dbName and tableName with normalized identifiers to ensure consistent identifier formatting
added logic to retrieve the database schema if the database type is " oracle " to ensure a valid schema is used when using Oracle databases
removed the logout mechanism for the API client in HomeFragment . java to simplify the process by avoiding unnecessary logout when it is already handled elsewhere
[ hotfix ] [ test ] fix test case due to stream task
modified the handling of null candidates in FastImportAction . java to ensure that a null element is processed before proceeding with type processing to avoid potential NullPointerExceptions
updated logic for checking if the bean is managed in ContainerLifeCycle . java to improve accuracy in determining if the bean is a managed container
rename iexecutionattributesdialect to iexecutionattributename and change it to iexecutionattributename
added metadata . clearUnsafe ( ) method call to AlterTest . java to ensure safe state management during tests
fix npe in gettime command - fix npe
added null check for measurement and created a new ` DisruptorQueueExceptionHandler ` class to handle exceptions during data processing and provide a consistent exception handling mechanism
deleted the Session2Token . java file from the media package to the class is no longer needed in the project
server : add deletion of volume which fail to create a volume ( # 4859 )
added a new ` Install ` class to handle install actions in the launcher to enable integration with web UI applications that require install functionality
added a null authorities populator to the LdapAuthenticationProvider class to ensure proper handling of null authorities during authentication
updated retrolambda retrieval and added retrolambdaJar path retrieval in Executor . java and CN1BuildMojo . java to ensure retrolambdaJar is accessible and provide a fallback mechanism for dependency resolution
replaced ` buildOrThrow ( ) ` method with ` build ( ) ` in ` ShadowCamera . java ` to streamline the code by using a more concise build method
replaced FixedBitSet with Bits in the sortLiveDocs method to improve handling of live documents during sorting
make sure we have a null value for the path extractor . fix # 4333
guacamole - 524 : user info form should return an empty list instead of null .
refactor assertion statements in DefaultLogoutManagerTests , DefaultSingleLogoutServiceLogoutUrlBuilderTests , and CasSupportJdbcAuditConfigurationTests for improved clarity to enhance readability and maintainability of test cases
cloudstack - 7119 . [ vmware ] fix typo in error message
updated method and method configurations in RobolectricTestRunner to accommodate both class and method configurations to enhance flexibility in configuring beans between different class and method configurations
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to improve performance and compatibility with the NIO socket framework
updated partition key comparisons in HiveAlterHandler to utilize a new method to improve clarity and maintainability of partition key comparisons
added a new BooleanFlag named ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to allow the option to show the icon in text header for better debugging
updated formatting of the condition in SimulationStatus . java to improve code readability by using consistent spacing
replaced ` SharedBlockingCallback ` with ` Callback ` for blocking operations in multiple Java files to improve code efficiency and reduce dependencies on SharedBlockingCallback
added workspace listener handling in PreviewControllerImpl and modified preview graph building in PreviewUIController to utilize WorkspaceListener for improved workspace management during UI updates
updated conditional checks in ReflectionFactory to include VM anonymous class checks to ensure correct behavior of class instantiation for anonymous classes
[ ci ] correct typo in javadoc
fix bug where the userrealm absolute path do not point to / or file .
ambari - 2498 . log start start of actionmanager and server at startup ( mpapirkovskyy )
added null checks for ' init ' and ' modify ' before processing for nodes in JSONWriter . java to ensure that null values do not cause runtime exceptions
updated method signatures to accept a consistent FileSystem parameter and improved authentication handling to enhance flexibility in Hadoop file system interactions and ensure proper user authentication
added a check to ensure the backgroundManager is attached before attaching to prevent potential crashes when the backgroundManager is not attached
set the current tab to 1 in AllAppsTabbed , Launcher , and PagedView classes , and modified calculations for child position and alpha in Workspace to ensure correct tab state and improve rendering accuracy based on child dimensions
added null check for the URL parameter in BaseDataSource to ensure that a valid URL is provided to prevent runtime errors
[ jdk8 ] enable jdk11 + jdk11 test in pebble module
added an EditNameDialog to create a directory before dismissing it to improve user experience by allowing directory creation through a user prompt
added functionality to toggle bar border in multiple activities to improve user experience by allowing border adjustments based on data sets
updated OkCoin API endpoint from OKCoin to OKEx in OkCoinExchange . java to ensure compatibility with the latest Okex API specifications
jbrules - 2217 : fix the npe in testrule that be cause build to fail
replaced FileChannel with SeekableByteChannel for input stream handling to improve performance and memory efficiency when reading files
change method signature of getFlattenFieldTransferPair to accept FieldReference as a parameter to improve code clarity and enforce immutability for better maintainability
rename ` MockHandler ` to ` MockHandlerImpl ` in multiple files to improve clarity and specificity regarding the implementation of ` MockHandler `
removed unnecessary conditions for checking serialization types in SerializationConfigurationParser . java to streamline the code logic for better readability and performance
added heap limit configuration for android activities on debug devices to improve performance by reducing the maximum heap size for debugging purposes
remove unnecessary mapping from lambda expressions in Collectors . java to improve code readability and maintainability by reducing redundant method calls
[ log4j2 - 379 ] fixed osgi test for bundle resolution
nifi - 3878 : precompactedrow : optimize deletioninfo check for top - level data output
updated return values in ICC _ Profile and ColorConvertOp for improved clarity and correctness to ensure proper masking of rendering intents and enhance code readability
ensure that meterregistrylifecyclelistener be always close when auto - configure ( fixes # 343 )
remove exception from config log ( # 8633 )
added a test to verify that the generateCertificate method does not throw a CertificateException when the expected byte array is not acceptable to validate the certificate generation process
camel - 16746 : fixed stringindexoutofboundsexception when use simple language with binary operator .
removed unnecessary selection check in EditorActivity and refactored focus change handling in IDEEditor to streamline code for better performance and clarity
add user . name to log message when accesslogvalves do not fail
updated skeleton model properties and improved null checks in OgreXmlLoader . java to enhance stability and prevent potential null pointer exceptions
removed the ` InterruptedException ` clause from the ` createOrThrow ` method signature to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotations to UpgradeResponse . java to mark the class as outdated to discourage its use in future development
add a ` ` d . tsout ' ' flag to the transpiler and make jsweet command line compatible
[ flink - 10566 ] [ kinesis ] increase fetch timeout for kinesis consumer factory ' s fetch timeout
[ beam - 5658 ] fix streamingdataflowworker ' s timestamp in . html file ( # 6863 )
increased the maximum number of threads in the Metastore server from 100 , 000 to 1000 , 000 to improve performance by reducing the number of concurrent threads
changed the return type of onTaskSnapshotChanged from void to boolean to enable the method to indicate success or failure
change parameter name in setShadowRadius method from mMaxShadowRadius to shadowRadius to improve readability by using a more descriptive parameter name
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to ensure proper functionality of the message handling with aggregator features
updated loop condition in MarketSellAssetActuatorTest to use ' end ' instead of ' limit ' to ensure correct range iteration and validate error handling during asset creation
fix polyglot context update for interactive source .
[ ds - 2362 ] fix npe in file deletion when keytab file be delete ( # 2362 )
updated LauncherPreviewRenderer to include DisplayController in the WindowManagerProxy instantiation to enable better management of display properties within the launcher
updated tooltip text logic for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to ensure consistent naming of the root directory tooltip across different UI components
replace getToolkit ( ) . getScreenSize ( ) with Toolkit . getDefaultToolkit ( ) . getScreenSize ( ) to ensure consistent access to the default toolkit for screen size retrieval
tweak TensorflowrestCaptioner and TensorflowRESTRecogniser to not use wildcard type , a suggest by lgtm .
added unit tests for fetching expressions using ` Projections ` in ` JPASQLBase . java ` to ensure correct result fetching behavior based on dynamic expressions
removed unnecessary debug print statement and adjusted dragIndex logic to streamline point removal process and improve code clarity
update moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to incorporate new features and improvements from the newer version
fix typo in error message and add call to spend all gas
updated string formatting to include newline characters for error messages to improve readability and clarity of error messages in the generated HTML
marked the Weights class as deprecated to indicate that the class should no longer be used due to potential issues or better alternatives
avoid redundant registration of unsafe intrinsics for jdk . internal . misc . unsafe
added ` @ Hint ( isDep = false ) ` annotation to ` AndroidAppModularityDescription ` and ` AndroidGraphEnhancerArgs ` , and created two new classes ` Sample ` and ` Sample ` to ensure proper handling of blacklisted modules in the build process
change mCenterPagesVertically from true to false to disable vertical centering to improve user experience by reducing unnecessary centering
fix a race condition during migration finalization in master
replaced ` HOST ` with ` baseUrl ` in multiple classes to standardize the variable naming convention for improved clarity and consistency
updated WSFederationClaimsReleasePolicy to use List for attributeValue instead of Object to allow more flexibility in handling values during attribute resolution
added database creation and query processing in TestJdbcWithMiniLlap and modified database handling in LlapBaseInputFormat to improve database compatibility and fix issues with query processing
added a new test case ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to ensure SQL parsing functions correctly with nested expressions
added copy mode starting based on touch event in ConsoleActivity to improve user interaction by enabling copy functionality on different Android versions
refactor XML output generation to use a Writer instead of a direct Writer to improve performance and flexibility in writing XML output
camel - 749 : fix npe in abstractlistaggregationstrategy when use empty split .
camel - 5536 : log the cause of camelexchangeexception a well - formed exception message
move the config file from the logback package to the classic package for consistency .
avoid assertion in typequalificationdataflowanalysis . compare ( ) where the phonode have no flag
remove unused import ( thanks to michael niedermair for catch that ! )
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with additional parameters for better debugging and monitoring
renamed multiple classes related to box and whisker calculations and histograms for clarity to improve code organization and maintainability by standardizing class naming conventions
[ flink - 24635 ] [ test ] migrate ReadableWritableConfigurationtest to junit5
changed the ` NormUpdate ` class to a static class and updated equality checks in ` InstantiatedIndexReader . java ` , modified condition checks in ` MemoryIndex . java ` , and removed unnecessary ` BytesRef ` initialization in ` CoreDescriptor . java ` to improve performance by using object equality instead of object equality for better readability and performance
lucene - 7228 : fix non - private constructor in indexfilenamefilter ( # 215 )
fix ifstatementtest . testcombine if statement with conditional
phoenix - 4875 use gettablerows to get table header row ( addendum )
refactor TypeAdapter methods for improved null handling and readability to streamline the serialization process and enhance code clarity
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
add a new file EXIFReader . java to read and process metadata files while excluding EXIFD0 directories to streamline image processing and improve handling of metadata fields
update toStandardUnit method to return NONE instead of UNKNOWN _ TO _ SDK _ VERSION and add a test for batchToStandardUnit to ensure functionality aligns with the new design requirements for batch processing
[ drools - 5862 ] fix pmml applycommand do n ' t work if the parameter be n ' t the default constructor ( # 3395 )
improve error message for repeat currency transfer start message
added a check to return early if the bubble bar is visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
[ gr - 36405 ] fix jvmci import in substituteaarch64backend .
encapsulate initialization of jdk log manager in a try - finally block to ensure thread safety when accessing shared resources
added a new method ` find ` in ` TicketCatalog ` and improved debug logging in ` DefaultTicketCatalog ` to enhance ticket retrieval functionality and provide clearer debugging information
removed unnecessary code formatting and improved readability in TestSSL . java to enhance code clarity and maintainability by using consistent formatting
[ flink - 23056 ] [ network ] fix possible deadlock in sort mergeresultpartition
[ beam - 10670 ] define maxnumrecords default value to long . max _ value in jmsio
updated PluginHandleController and PluginHandleDO classes to include a type parameter in query results to enhance functionality by allowing users to filter plugins based on their type
added ` start ( ) ` method call to ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` classes to ensure proper span start sequence for improved tracing
added configuration properties for drawable color format and depth format , stencil format , and multisample to IOSApplicationConfiguration to enable flexible configuration of drawable data based on application settings
added test to ensure user lock out after a failed login
fix wrong return value of real ( ) in poixutils . real ( )
removed unnecessary check for interrupted status and replaced lock name retrieval with a do - while loop to ensure proper synchronization while waiting for the state is verified
refactor ` Implements ` and ` ShadowPicker ` classes for improved code clarity to enhance maintainability and readability of the codebase
[ scb - 837 ] make http2 production ready : add maxpoolsize and tryusecompression option
updated conditions in DynamicStruct and SolidityFunctionWrapper classes to include DynamicArray alongside StructType and enhance type handling to improve type safety and provide clearer error reporting for unavailable types
updated ` getStringProperty ` and ` getFloatProperty ` methods to include a boolean parameter to enable flexible font property retrieval by allowing for conditional behavior
added overloaded constructors to the CopyStep class and implemented a test for retrieving the shell command internal paths to enhance the functionality of the CopyStep class to support recursive copying of paths
fixed - rsemaphers ( ) . acquire ( ) and rsemapherservice . addpermits ( ) do n ' t publish to exist thread . # 3249
camel - 15712 : camel - core - optimize routecontext to reduce stack frame in use during test .
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` to use it for parsing flavor strings to improve code organization and clarity in parsing flavor strings
updated methods in WitnessScheduleStore to use ByteString instead of String to improve type safety and compatibility with the protobuf library
modified print statement to conditionally display results if not empty to enhance output clarity by avoiding printing empty results
modified the behavior of the ConcurrentLinkedQueue to properly handle null items and added a new RemoveLeak class for testing to improve efficiency and ensure proper removal of items from the linked queue
huggingfacetokenizer : add decode method to encode batched string ( # 1572 )
[ hotfix ] [ runtime ] use collections . nCopies instead of arraylist . add
[ iotdb - 4496 ] fix load single - tsfile processor do n ' t correctly add chunk header size
added session storage context configuration in BrowserSessionStorage and updated state creation in DuoSecurityMultifactorWebflowConfigurer to enhance session management capabilities by incorporating context for better user experience
add test to validate jsp document by default
added a default constructor to TypeAdapter and modified the ignore annotation in Java17RecordTest to ensure proper instantiation of TypeAdapter and disable tests until record support is included
at least allow a caller to send a kill event outside the debugger . fix espresso ' s kill functionality .
fixed typo in antpathrequestmatcher javadoc . ( # 1804 )
remove null in resource policy creation , a they be now create by query api
added null check before releasing deflaterEntry in GzipHttpOutputInterceptor to avoid potential NullPointerExceptions when handling deflater entries
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
add normalization for Unicode character in CheckSum to ensure consistent character handling across different platforms
add a null check for the completer before processing commands to avoid potential null pointer exceptions during command execution
added multiple @ Override annotations in BasicProfilerState . java and added multiple @ Override annotations in BaseAppState . java to ensure proper method overriding and improve code readability
updated JSON parsing in MongoTemplate to use DBObject instead of generics to ensure correct type handling for DBObject during JSON processing
[ ds - 2382 ] trim the remote ip header if it be the same a the x - forwarded - for .
updated ` getJobArgs ` method to return ` ObjectBuilder ` instead of ` String ` to enable more flexible handling of JSON objects in the build process
refactor CookieManagerTest to use ` getAddr ( ) ` for retrieving the local host address to improve test reliability by ensuring localhost is used without proxy dependency
modified glyph processing logic to properly handle wrapped runs and added a test case for bitmap font rendering to ensure proper handling of wrapped runs and validate bitmap text formatting
implemented ` pauseOrResumeSplits ` method in ` PulsarSourceReaderBase ` and ` PulsarPartitionSplitReaderBase ` classes to allow control over paused and resumed split splits in Pulsar processing
added configuration for HIVESCRIPTID environment variable in HiveConf and implemented its usage in ScriptOperator to enable dynamic configuration of the Hive script operator ID for better flexibility
updated the getListedTermCounts method to utilize a Stream for sorting terms to improve performance and flexibility when retrieving term counts based on specified sort criteria
added a new action class ` UseSeparateStepSizeAction ` to provide functionality for displaying a separator based on step size to provide users with clearer step size options in the platform plugin
hide lock file action in file menu when user click on unlock
updated region server handling and import statements in RoundRobinTableInputFormat . java and TestTableSplit . java to improve code clarity and ensure consistent handling of blank region locations
update HttpClientRequestAdapter to use " 0 " instead of " true " for sampled names to ensure consistent casing for better clarity and functionality
pdfbox - 2576 : simplify code with ioutils . closequietly ( )
added fullscreen functionality and adjusted viewport settings in GwtGraphics . java to improve fullscreen handling and ensure correct rendering of display modes
changed parameter types and methods in WebfingerIssuerService and WebfingerIssuerFetcher to use URI for resource normalization to enhance type safety and improve resource accessibility in the application
add unit tests for SoulApacheDubboClientConfiguration to ensure that the Dubbo configuration properties are correctly initialized
updated the path resolution method for asset descriptors and texture paths in SkinLoader . java to ensure consistent path resolution by using the correct method for resolving paths
updated log levels from warn to info in ChainingAttributeReleasePolicy and OidcDefaultJsonWebKeystoreCacheLoader to improve logging clarity and reduce noise in log messages
replaced calls to ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple files to improve lock behavior reliability and prevent potential interruptions during execution
updated package declaration in Compiler . java to ensure consistency in package structure
added handling for CodeException offsets in NullDerefAndRedundantComparisonFinder . java to ensure correct pc range checks for specific cases during code analysis
fix crash renderer use upstream source .
added a new configuration property for maximum statement per connection in the execution scheduler to allow configuration of the maximum number of prepared statements sent to the database
changed return type of the set method from WritableConfig to Configuration across multiple classes to provide a more general representation of the set method in the configuration interface
added error handling for command failures in AutoScalingHandler to ensure proper error management during command payload processing
refactor CombinedDataset to improve code structure to enhance maintainability and readability of the code
replaced the byte array buffer with a direct variable b in InflateIn _ DeflateOut . java to improve code readability and efficiency by using a more direct variable
added a method to remove cryptography restrictions and corresponding logic in Utilities . java to improve security management by ensuring restricted cryptography permissions are properly managed
fix entity teleportation after a cancellation ( # 1084 )
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest ` to ensure proper functionality of page margins with long text transformations
added null check and updated vectorization context handling in Vectorizer . java to ensure proper initialization and management of vectorization contexts
correctly decode wialon position ( fix # 1097 )
hbase - 10494 make metricsuseraggregate user enable / disable via config .
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if the JsonObject is empty and ensure its functionality is correctly handled
added a new boolean variable ` mAttached ` and modified the unregistering logic to ensure proper handling of the receiver is only unregistered if the receiver is successfully registered
refactor multiple Java files by renaming them to improve code organization and maintainability
fix npe when zadd do n ' t use params
[ ds - 3940 ] fix code style and fix checkstyle violation
rename testasynamess to testasyncmessagesperformancetest and remove @ ignore annotation .
refactor ` getNodeOptional ` method to return an ` Optional < TargetNode < ? , ? > > ` instead of returning an empty ` Optional < BuildTarget > ` to improve code clarity and handle cases where no target nodes are present
updated time comparison logic in TimeZoneProvider . java to use constants instead of static constants to enhance clarity and maintainability by using meaningful constants instead of magic numbers
updated the return statement to use HEADER _ SIZE for field _ pictureData length and added a new test class for OLE2 embedding functionality to ensure correct picture size is returned and verify functionality through unit testing
initialize row and column variables in JSONParser . java to ensure correct parsing of JSON data for improved functionality
replaced direct usage of ` FullyQualified ` with ` Pattern ` for pattern matching to improve type matching accuracy based on fully qualified names and patterns
added functionality to retrieve local trailers and set the DETAIL _ THUMB _ HEIGHT to extend playback options for improved user experience
add a method to remove glyph information from CStrikeCache and update related references to improve code organization and ensure proper memory management by cleaning up native resources
act - 137 addendum : fix issue with terminate end event not be fire
camel - 5405 : fix issue with component name without < xmlrootelement >
updated endpoint in SimpleHttpClientTests from " http : / / www . apereo . org / scottb . html " to " https : / / www . abc1234 . org " to ensure compatibility with a broader range of HTTP endpoints
add a ` ` prdef ' ' option to reset all preference to default
hbase - 27370 addendum ( refactor ) to make thriftmetrics field protect ( # 425 )
remove deprecated channel for dan _ fan _ speed ( # 11541 )
use hamcrest assertion instead of junit in examples / microprofile / http - status - count - mp - backport main ( # 1749 ) ( # 6250 )
removed duplicate check for expansionHelper in TweetActivity . java to streamline the code by eliminating redundancy
added null check and equals / hashCode methods in PartitionPanel and PartitionFactory classes to ensure proper handling when no index is provided
api : make root disk size configurable in vm detail ( # 6136 )
fix : user preference for show prediction row ( # 854 )
[ geos - 8012 ] ensure we do n ' t have empty cr for a bbox
added validation methods for value and position parameters in LibrustzcashParam . java and updated the ivk byte in LibrustzcashTest . java to ensure values are valid to prevent runtime exceptions
deprecate ithrowableentity in favor of the one we already have
updated position assignment of the ' x ' and ' y ' variables in NodeDataImpl . java to ensure consistent random value generation for graphical representation
updated the ` validateRefreshToken ` method to include a new test method and added a new test for missing scopes to improve test coverage and ensure proper handling of refresh token validation logic
refactor the way ` declaredDepsBuildResult ` and ` firstOrderStdout ` are initialized in ` JavacStep . java ` to improve code clarity and ensure proper resource management during compilation
updated VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release version
added support for DEEP _ SHORTCUT item type in LoaderCursor to enable proper handling of deep shortcuts in the database
added a hashCode method to the TimeGranularitySpec class to ensure consistent hash code generation for object equality
changed access modifiers of classes from private to protected in BooleanQuery and DisjunctionMaxQuery classes to allow subclasses to access and override these classes for better flexibility in weight management
added a boolean flag to control proxy response code behavior in HttpURLConnection to ensure proper handling of NTLM proxy when the response code is used
[ gr - 14989 ] aarch64 : fix broken pointer in native - image .
server : get the ' used capacity ' value from the db when get the ' mem ' value ( # 3979 )
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and included a query parameter in ` TestDistributedSearch . java ` to ensure that scores are only included if the maximum score is available
change audio recoder test to prevent failure .
adjusted the calculation for the newOriginX by incorporating the minimum X scale to ensure accurate positioning of the new origin based on subject bounds
updated null check and empty handling for Druid data source in DruidQueryBasedInputFormat . java to ensure Druid data source is validated and provide default interval values
added a new constant ORIGINAL _ TYPE and modified the regex pattern in CustomProperty . java to enhance the property handling by including additional metadata and type information
added a static method ` create ` to the ` Index ` class to create an instance of ` IndexImpl ` with provided parent and data
simplified the boolean return statement by removing an unnecessary variable to enhance code readability and maintainability
[ iotdb - 4156 ] union writer compatibility check should consider location of the reader
added support for handling entity paths in QueryUtils to enhance query processing for better entity management and support
added synchronization to the spans list in TestSpanHandler . java to ensure thread safety when accessing shared resources
updated method signatures in multiple classes to use wildcard generics for the arguments to enhance flexibility in handling different argument types
updated exception handling in ViewContextImpl to use InvocationTargetException and added additional logging for authentication failures to improve error handling clarity and provide more detailed logging for debugging purposes
refactor OAuth2AccessTokenEntity to improve token handling logic to enhance security and maintainability of OAuth2 access token management
update status checks from " System is not ready for remote calls or " to " The service cannot process requests due to STATUS = DOWN " to improve service stability and clarity in error reporting
added two new project file entries for iOS data and moe resources to streamline project configuration for improved performance
replaced ArrayList with ConcurrentMergeScheduler in TestSearcherManager to improve query performance by optimizing merge order
updated conditional checks in QTestUtil and GenericUDTFInline to improve session state handling and enhance list processing logic
updated MapIterable , FJIterate , and ParallelIterate classes to improve code structure and enhance functionality
ticket # 3763 : prevent exception from scroll down the spreadsheet key ( # 3763 )
hhh - 8378 cleanup during bundle # stop . add shutdown unit test .
fix # 161 adjust elapsed time difference in hikaripool . getconnectiontimeout ( )
replace component file creation logic with a non - packaged resources directory and update the variable substitution process to enhance resource management and improve clarity in handling component files
updated file path handling by replacing backslashes with File . separatorChar in Compat . java to ensure consistent file path formatting across different operating systems
changed the return type of the row ( ) method from Cell < T > to void to align method signature with intended usage of table . row ( )
improve error message when use -- p2p - port or -- p2p - port clash with node
added a null mask feature to WebSocketClient and modified WebSocketConnectionD12 initialization to enable flexible handling of null values during WebSocket connections
changed the return type of the genUDTFPlan method from RelNode to Pair < ? , ? > to improve return type consistency and allow for better usability in handling UDTF plans
added methods to track bucketed preferred and non - selected node selections in NodeScheduler and NodeSelectionStats to improve tracking of node selection statistics for better performance monitoring
add a test file for a class that have a getter / setter on it
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer to improve code clarity and ensure proper handling of the owner pointer ' s existence
added a clock animation feature to the PlaybackOverlayFragment to enhance user experience by improving the visual transition effect
replaced multiple calls to updatelegate with a single call to set the comparator output level to improve code efficiency by eliminating unnecessary calls to updateComparatorOutputLevel
lucene - 1594 : also guard against securityexception when try to load default segmentreader class
fix for # 1656 : do n ' t fire cell update event in swing thread
replaced DefaultInetAddressAdapter with CollectionTypeAdapter and updated type adapter registrations to streamline address handling and enhance type adapter functionality
added null checks for values in the Series class and corresponding tests to ensure proper handling of null values and prevent illegal state exceptions
updated the command - line options for audio time stretch in VideoManager . java to ensure consistent usage of the audio control feature in the application
updated boundary conditions in GeoRelationUtils and GeoUtils for improved accuracy in polygon queries to ensure accurate boundary checks by considering min and max coordinates
server : fix npe while update vm ' s disk offering ( # 4258 )
added cleanup method to HazelcastTest for proper resource management to ensure proper cleanup of resources after each test execution
add some extra check on getinstance ( ) trigger nosuchalgorithmexception
added filters for handling operations logs in QFileClient to improve the visibility and management of operation logs within the application
fix annotation in aop introduction and add child interface to fix # 44
fix nullpointerexception when try to connect to sip server without proxy .
replaced Math . addExact with MathUtils . cappedAdd for demand adjustment to improve code readability and leverage built - in utilities for better performance
replaced try - with - resources statement with a try - with - resources statement to ensure proper resource management and avoid potential NullPointerExceptions
refactor search handling in TvApp , BaseActivity , EnhancedBrowseFragment , and StdBrowseFragment to use the new SearchActivity class to streamline the search process and ensure consistent integration with the application
modified the initialization of ` schemaCrawlerOptions ` and improved ` GrepOptions ` class to enhance code clarity and ensure consistent object representation
http : / / issues . apache . org / jira / browse / amq - 4568 - fix osgi web console integration
added an @ Autowired annotation to the RepositoryIndexCreationIntegrationTests class to ensure proper dependency injection for the PersonRepository instance
[ trivial ] fix stop method signature to be intuitive
add blockcactus / cactus to make cactus work for any language .
add mouse motion listener to theme selector ( fix # 388 )
nifi - 1263 : added rbh padding to min multicast flow control .
fix issue with position on ipad be incorrect . http : / / github . com / codenameone / codenameone - google - plugin / issues / 220
throw illegalargumentexception if no model file be specify in advance .
added support for distinct queries in ClusterIntegrationTestUtils and QueryGenerator to enhance query efficiency and flexibility in integration tests
add getname ( ) and getscore ( ) to support fuzzy scoring .
bug 62212 - add ` ` valid ' ' and ` ` valid ' ' for jsyntaxtextarea class
added null check for children in PartitionPruner . java to avoid potential NullPointerException during child processing
added token position and currentPosition handling in MessagePackParser to improve JSON parsing functionality for better data handling
added locale restoration in AbstractSolrMorphlineTestBase to ensure consistent test locale settings across test executions
removed conditional checks for launcher state in LauncherFragment . java to simplify size calculation for better readability and maintainability
added a new test class MetricsReporterTest for metrics reporting functionality to ensure accurate registration of metrics in the application
camel - 5481 : osgi service registry should not use type cache
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing for Rectangle objects
update StreamKafkaPTest to use a random sink list name for sink serialization to improve stability by ensuring consistent handling of sink names during tests
updated DSAParameterGenerator to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and maintain consistency in the use of BigInteger type
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and modified host name retrieval methods to ensure proper handling of AM machine addresses when submitting work to LLAP
fix test which randomly fail on slow ci server
updated ` setObjectId ` method calls to use ` getCmoObjectId ` method consistently across multiple shape classes to improve code clarity and maintainability by centralizing object ID retrieval
added a test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` for fetching distinct post entities to ensure correct functionality of the query with distinct projections
refactor code in Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask files to improve code organization and maintainability
fix # 1726 - remove unused binding and unbinding of extension adapter
updated subtitle display logic and added utility methods for media stream handling to improve user experience by displaying more relevant media information
updated JUnit imports and annotations from version 4 to version 5 in TestAuthHandlerBoot and TestRSAProviderTokenManager classes to utilize the newer JUnit 5 features and improve test management
do n ' t show stacktrace if a bug report can not be generate .
replaced calls to ` intPool . reset ( false , false ) ` with ` intPool . reset ( ) ` and ` bytePool . reset ( ) ` to simplify the reset process by removing unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
updated the condition in ShadowWindowManagerGlobal to use a new WindowSessionDelegateU class for handling TIRAMISU to ensure compatibility with TIRAMISU and properly manage window display behavior
urlhelper do n ' t add scheme ' s port if it ' s not the scheme
added support for MSSQLDatabase in foreign key constraint generation to ensure proper handling of RESTRICT statements for MSSQL databases
hbase - 27020 fix spotless warn for master branch ( # 4417 )
remove debug output from pip event handler , allow for easy face control , and allow for basic pipe filter .
simonstewart : make logging on the html identifier more flexible
updated methods in HiveLookupTableSource and HiveLookupJoinITCase to use correct field schema retrieval methods to ensure consistency in data retrieval and improve clarity in test assertions
make sure we do n ' t enter invalid thread in listenerset . setthrowable ( )
updated the schema name handling in SequenceSnapshotGenerator to utilize CatalogAndSchema to ensure compatibility with different database schemas in Liquibase
[ add ] minor change to spritecache to reduce render junk
fixed - rlocking object should be move to batchPromise in redissonconnection . getson ( ) .
added base URL normalization and statistic functionality to SolrLoggerServiceImpl . java to ensure only valid base URLs are included for performance analysis
renamed methods from ` launchTask ` to ` launchTaskFromView ` and added a new method ` launchTaskFromRecentsAsync ` to improve clarity and functionality of task launching using asynchronous tasks
fix the mistake in morfologikfilter by allow language code to be load correctly .
updated sorting options in GridFragment to change their order to ensure consistent sorting order for better user experience
added visibility logic for header view in CustomListRowPresenter to ensure header view is displayed only when applicable for ListRow items
added a try - finally block to ensure proper synchronization during the switch statement to improve resource management and prevent potential resource leaks
updated import statements in HttpClient . java to streamline the code for better readability and maintainability
updated references to ` isCaseSensitive ( ) ` to use ` instanceof ` for DB2Database checks to improve type safety and consistency in the database handling logic
added support for JSR310 serialization with Java time module to enable support for JSR310 in the serialization process
[ ci ] use slf4j logger instead of log4j in the public api
replaced ` TypeBearer ` with ` Type ` for merging types to simplify type handling and improve code clarity
refactor CoinbaseTransactionStatusDeserializer to improve code organization to enhance readability and maintainability of the code
added a method to retrieve a list of build targets with a specified list and updated related logic to improve build efficiency by enabling forced target building based on passed targets
replaced the instantiation of IdleStrategy with a call to System . gc ( ) to ensure proper garbage collection before thread safety
updated OCFile to use ContentResolver instead of ContentProvider in related files to improve compatibility with updated content handling in the application
fix report panel auto scale and self - loop checkbox issue
[ hotfix ] [ test ] make sure that the slot owner be not null
add new file RemoveCallsToSystemGc . java to remove calls to System . gc ( ) to improve garbage collection management by allowing the removal of calls to the system garbage collection
remove superfluous super ( ) call which compiler would do for free
added an overridden method to set the UI ID in ScaleImageLabel to ensure consistent UI behavior when setting the UIID
update variable handling in FeedUpdateService to use a more descriptive variable name to improve code clarity and maintainability by standardizing variable names
8009843 : sjavac should accept - cp a synonym for - classpath
fix : javac build after javac change
fix issue with local template and local template not be load when restart
modified Test7196045 . java file to enhance test coverage and fix existing issues
updated density and decay values from 1.5 f to 1.0 f and 0.95 f to improve lighting accuracy and performance in lighting
added state management functionality to ` OidcConfiguration ` and ` OidcRedirectActionBuilder ` to enable flexible handling of state parameters in OIDC configurations
# 1212 - postgres - unique constraint - add column name ` ` isnotnull ' ' for unique constraint
hide federated share option if we do n ' t have @ permission
added a method ` needsDocValues ( ) ` that always returns true to provide a default implementation for the ` TestBBoxStrategy ` class
[ java ] refactored buffer alignment and enable check for unknown source file to be consistent .
added a new method ` intForEach ` to ` Int2ObjectHashMap ` and created a specialization for null values in ` IntObjConsumer ` to enhance functionality to properly handle null values and maintain consistent formatting
fix nullpointerexception in server . savescoreboard ( ) when save multiple scoreboard data ( # 3897 )
change return type of count ( ) from Long to long in QueryDslMongoRepository and SimpleMongoRepository to accommodate larger values to improve performance and reduce memory usage in count operations
update conditions for creating MTree snapshot based on log modification times and modified MTree snapshot creation logic to ensure MTree snapshot is created accurately based on time differences and improve logging clarity
lucene - 7381 : fix vectorutil . dotproductsextract ( ) so it return a float instead of nan
added functionality to set and retrieve the latestConfirmedBlock number to enhance block configuration management for improved performance
updated locale handling in GpsMainActivity and MainPreferenceActivity to utilize Systems ' s locale based on user - specified locale to improve code organization and maintainability by centralizing locale - related functionality
added a condition to check if a new database was created in LauncherProvider . java and updated LauncherClings . java to ensure proper handling of database creation state in the launcher
refactor code for clarity and efficiency in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve readability and maintainability of the code
fix checkstyle issue with ` ` if ' ' statement in constants . java
added a thread check in TestIndexWriterDelete . java to ensure that the current thread is executing only once
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method for better flexibility
updated imports and method calls to use ModelCompat forople model compatibility to ensure compatibility with the latest and current API standards
add import attribute handling to BatikSVGDrawer to ensure all relevant attributes are included in the document
do n ' t print illegalargumentexception when try to parse user config
added handling of " WaitForResult " flag in CodenameOneActivity and CodenameOneActivity to ensure correct synchronization based on intent data
modified the constructor of ` HitQueue ` , ` SpanPositionQueue ` , and ` PriorityQueue ` to accept a ` Supplier < T > ` for sentinel objects to improve flexibility in managing score document updates based on pre - populate conditions
added a widget description functionality to WidgetCell based on item presence to enhance user interface by displaying widget descriptions when available
added a maximum registered attribute count limit and error handling for attribute registration to prevent exceeding the defined maximum allowed attribute count and improve robustness
move predicatestest to impl package for correctness
camel - 4351 fixed the issue that defaultheaderfilterstrategy do n ' t apply case - insensitive header name .
updated inline calculation and break handling in InlineLayout and Breaker classes to improve code clarity and maintainability by using more descriptive variable names and logic
added null checks and improved view initialization in ShareUserListAdapter . java to enhance stability by preventing null pointer exceptions and ensuring consistent view usage
fix : check if ctclass be instrument by android sdk ( # 4211 )
added a condition to check if the destination is an insert before the source in the BrowserContentPane to ensure proper counting of columns when an insert destination is active
updated memory limit handling in CmdModifierTest . java to use a dedicated method for retrieving memory limit file path to improve code clarity and maintainability by encapsulating memory limit logic in a dedicated method
added an empty instance for CxxDeps in multiple files to improve efficiency by avoiding unnecessary creation of empty instances
added error handling for null rule in JavaTestRule to improve debugging by providing clearer feedback when a source is not among its dependencies
add in support for version 1.10 . 2 and 1.10 . 2 .
removed conditional check for ` atIndex ` and initialized it to ` 0 ` to simplify the code by eliminating unnecessary complexity
increase wait time in timeouttest to reduce flakiness
changed the constructor of TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to improve memory management by tracking assist content requester
updated VoteWitnessProcessor to encode and retrieve witness address correctly to ensure accurate representation of witness addresses in the system
updated DefaultMethodRegressionTests . java to improve test coverage to enhance reliability of method regression tests
fix checkstyle issue in ` ` workloadmanagermxbean . java ' '
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to align with the new exception handling framework for better consistency
added a call to close the loader in DesktopGeneratorController to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and corresponding test cases in FaultTolerantExceptionClassesTests to ensure proper handling of exceptions related to rollback in the system
[ flink - 23454 ] [ yarn ] improve error message when config be invalid
updated tuner utilities to include extra properties in multiple tuner classes to enhance flexibility in tuner configuration management
added a set to track in - progress instances in PinotRealtimeSegmentsManager . java to improve efficiency by removing duplicate instance extraction for real - time segments
fix ( table ) : do n ' t attempt to scroll when the table be already disabled
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure that the build process uses a precompiled header correctly in other cells
change npe in abstractcachereplicacelPartitionsrequest - should be retryable if cache config be not create yet
refactor JSweetTranspiler to improve module installation logging and add a method to check for node package installation to enhance clarity in logging and ensure only relevant modules can be installed
added ManagedObject annotation and operation annotation to Destroyable class to enhance monitoring and management of component destruction
disable long clickable span when app browser be n ' t in app browser
refactor equality checks in EspMilightHubDiscoveryService and EspMilightHubHandler to use equals method for better readability to improve code clarity and avoid potential null pointer exceptions
updated isReifiable check logic and added new classes T6558559a and T6558559b to improve type safety and handle unchecked conversions more effectively
expand / / regen and document how to position set go to .
camel - 8193 : camel - kafka - should shutdown the executor task instead of submit again
remove default array definition from the schema interface to simplify usage and improve code clarity
modified thread handling logic in AgentRunner . java to break instead of interrupting and asserting thread status to improve thread management and ensure proper handling of timeout awaitals
remove time column from DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper cleanup of dataset data types
corrected a logical OR operator in a condition within FacetComponent . java to ensure proper evaluation of the check for shards
refactor RustBinaryDescription and RustLibraryDescription to use CxxPlatforms for parse time dependencies to improve code maintainability by centralizing the dependency fetching logic
added ' name ' property and its getter / setter methods to JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties classes to ensure consistent access to the name property across authentication properties
output warn if ca n ' t connect to igv
phoenix - 4875 large scan threshold can be specify for point lookup ( addendum )
added routeId to the RetryGatewayFilterFactory return statement to include route information for better traceability
fixed - the display of the redistable message should be send to the server immediately without lose data . # 37
refactor ` onOverviewShown ` methods to use ` DiscoveryBounce . showForOverviewIfNeeded ` instead of direct calls to improve code clarity and streamline the overview display process
lucene - 10219 : fix checkindex to not check for null point for size = = 0
updated the publish method to use updateLastState instead of true to allow for dynamic state updates when publishing
fix issue with order of integer in the metastore direct sqlutils . tostring ( ) call ( # 2564 )
added a null element to the exp list in SpliteratorCollisions . java to prevent potential null pointer exceptions during collection operations
simonstewart : make the condition ' s text case - insensitive
replaced do - while loops with while loop conditions in ManyToManyConcurrentArrayQueue . java to improve control flow for better performance and readability
# 1602 - enh : add support for fetch size forward only for mysql
[ issue # 5042 ] ignore closedchannelexception gracefully ( # 5043 )
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated window radius initialization to use rounded corners support to enhance compatibility with devices that support window rounding
updated ` DesktopTaskView ` to use a ` View ` for background views and adjusted margin settings to improve UI consistency and accommodate different screen orientations
added a new instantiation of UpstreamCheckService in UpstreamCheckServiceTest . java to facilitate the creation of the upstream check service within the test context
removed warning logs from session management in AbstractSession and AbstractSessionManager to reduce log verbosity and improve performance during debugging
replaced error logging and exception throwing with a return statement in ZooKeeperHiveLockManager . java to improve code flow by directly returning locks instead of throwing an exception
[ hotfix ] [ doc ] fix some typo in the java doc
added a check for ` containsCustomData ` before generating mipmap in ` FileTextureArrayData . java ` to ensure mipmap generation occurs only when necessary
camel - 5714 : fix test failure due to miss quote
added a selectable boolean field and related methods to manage selection state to improve user interaction by enabling selection options only when a touch event is not selected
added a check to return false if the field vector ' s value count is zero to ensure proper handling of cases where no value is present
added a default constructor to the PolicyContext class and improved string handling in the test cases to enhance the flexibility of file path handling in the application
replaced Set with List for flatQueries and expandQueries in FieldQuery . java to improve the data structure for better performance and flexibility
updated TLSRestrictions class implementation to enhance security protocols to comply with current standards
replaced the direct closing of the Kafka producer to use a Runnable for asynchronous tasks to ensure proper resource management by preventing blocking the main thread
updated the assertNodeStateProvider method to include an additional parameter for ignorable node values to enhance the functionality by ensuring that the state provider accurately reflects the freedisk state
added a check to delete the LOCK file if it exists in RocksdbMavenPomCache . java to ensure proper resource management by cleaning up unnecessary lock files
replaced direct port usage with InetSocketAddress in MiniZooKeeperCluster . java to improve port handling by explicitly specifying the client port
[ zeppelin - 488 ] added public api to rest client
fix explosion test fail on the ci - server ( # 5366 )
fix test case due to change in test case ( # 869 )
added null check for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to avoid potential NullPointerException when accessing the activity
reduced the variable ` numStrings ` from 500 to 100 to optimize performance by reducing the number of string operations
remove the duplicated byte [ ] conversion method from wkb to byte [ ]
fix : fix typo in mockitojismessagelistener . messagewithheaderentry ( ) method name
added a check for direct substates in AbstractStateMachine to ensure only active states are processed during the substates
added equality checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure proper ordering and equality comparison for ImmutableListMultimap instances
added joinoperation marker to postjoinoperation to reduce false alarm log while joining / merging
added a new test method ` testDataIssue258 ` to the ` AdditionalPostgreSQLTest ` class to verify the successful execution and content of database operations involving ` SchemaCrawler `
http : / / issues . apache . org / jira / browse / amq - 5035 - avoid test failure in slow machine
[ calcite - 2853 ] add javadoc to avoid warning
updated MongoDbConnectionPoolProperties to use String values for lifeTime and idleTime , maxWaitTime , and maxWaitTime instead of int values to improve clarity and flexibility in handling time durations in database connection pool configuration
fix the npe in sdputils . createaudiomediaformat ( ) due to use of mediafactory directly .
refactor FacetProcessor methods to return a boolean indicating success or failure to improve clarity and efficiency in handling filters and block joins
add enable / disable timeout to handle pipeline in case of idle timeout .
replaced hardcoded value for quick step starting rotation with a constant to improve code readability and maintainability
camel - 9594 : xpathbuilder and xquery - log more detailed information about xpath evaluation .
minor change , use dataresource . class instead of the hardcoded class path
added test for escape back slash in the astokenizer , fixes # 1751
added a check for the presence of the " atlas " property in the map to ensure that the map contains the correct atlas properties to avoid runtime errors
camel - 8129 : remove property placeholder from default component a it not in use ( # 8130 )
removed unnecessary message processing and added database closure in BlockchainTest . java to improve resource management and ensure proper database closure during tests
refactor ` CoreMarkdownNodeRenderer ` to use a helper method for extracting lines to improve code readability and maintainability by encapsulating the line processing logic
int - 1471 fixed checkstyle issue in webserviceinboundgatewayparsertests .
replaced ImmutableList with List for bindings and added logging for deprecated SQLBindings constructor to enhance flexibility in handling bindings and improve error handling
added a check for the Java VM name and modified the detection for Apple or OpenJDK to ensure compatibility with additional JVM environments
added keepAlive ( true ) method to ReactorClient . java to enable keep - alive functionality for improved connection handling
replaced string literals with constants from ShaderProgram in MD5Renderer and ObjLoader classes to improve code readability and maintainability by using constants instead of string literals
camel - 8250 : avoid potential npe when use the same component multiple time .
replace null check with accountCapsule initialization for better clarity to improve readability and ensure account existence is validated correctly
rename the 3.8 . 0 release 3.8 . 1 to reflect the sheer amount of work that be put in .
replace direct calls to ` t ` with ` t . unannotatedType ( ) ` for improved handling of unannotated types to enhance type processing accuracy and maintainability
modified assertions for getWorkSequenceTsFileProcessors and flushManager initialization in StorageGroupProcessorTest . java to ensure correct handling of flush operations based on the latest TsFile size configuration
added new ` DumpableCollection ` to ` Environment ` and modified related methods for better configuration management to enhance debugging capabilities by providing access to environment variables
added a wait time parameter to the FFMpegVideo class to ensure that the video processing starts before a specified delay
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related calls to simplify the constructor signature and eliminate unnecessary complexity
add test to accessstest . listindex to prevent illegalargumentexception
added method to access the framemap in lirgenerator . getframemap , to avoid npe .
updated imports and annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore instead of @ Ignore to enable more flexible test execution based on test conditions
fix boat position for water ( # 148 )
updated return statements in Directory . java and added getLockID method in RAMDirectory . java to improve clarity of lock string representation and ensure consistent lock ID formatting
[ gr - 30722 ] remove unnecessary method from launcher . options . allowexperimentaloptions .
added new methods ` then ` and ` then ` methods in ` BDDAssertions . java ` for comparing ` Path ` and ` AssertDelegateTarget ` to enhance functionality for asserting path objects in BDD assertions
renamed variable ` hp ` to ` hostField ` for clarity and consistency to improve code readability and maintainability by using a more descriptive variable name
updated logging message to include warning for multiple Kubernetes config files and added KUBECONFIG export for Windows to improve clarity on configuration handling and ensure compatibility with Windows environments
added upload status handling in UploadListActivity to improve file upload management and ensure proper cancellation of uploads
added a new ProviderLoader class and updated TerminalManager to use it for asynchronous provider installation to improve modularity and responsiveness to provider installation events
replaced ` Span ` references with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests ` to enhance traceability by using the new message headers class
replaced the existing select statement with a new column configuration for the database change log to simplify the query execution by using a more direct configuration
hhh - 8566 - fix getcurrentschemacommand due to postgresql 6.1
fix potential divide by zero when no data member be present .
modified scheduling behavior to check if a scheduler is already started to ensure proper handling of scheduler state to prevent runtime exceptions and provide clearer logging for unavailable scheduler states
removed unnecessary string conversion when creating InlineBox to simplify code to enhance readability and maintainability
fix checkstyle issue in util / statisticmap . java ( # 792 )
changed the return value of getStagedRectSlideEnd from 383 to 500 to adjust the slide count for improved user experience
updated button strings to use localization keys instead of hardcoded strings to improve internationalization support and maintainability
updated the condition in BukkitMain to check for both the plot area and a location before executing KILL _ ROAD _ ITEMS to ensure that nodes are only processed when a plot is within the specified plot area
added a new test for ` setTouchExplorationEnabled ` and improved listener handling in ` ShadowAccessibilityManager ` to ensure proper behavior of touch exploration features starting from API level KAT
pdfbox - 5328 : improve handling of unicode mapping , add test case
simplify code and remove unnecessary call to stringproperty . getpropertyasstring ( )
simplified the creation of POIFSFileSystem by reusing its method to improve code readability and reduce boilerplate code
refactor plot area retrieval logic to utilize PlotArea to improve code clarity and ensure plot validity is validated
updated version regex in TestWebHCatE2e . java to ensure correct identification of the version format
updated the lower bound check for ` count ` to allow zero to ensure valid range for ` count ` when processing ` pickleEvents `
support multiple consumer thread in kafka consumer ( # 6358 )
added error handling for execution of the javac in JavacCompiler to improve debugging by throwing an exception when the execution fails
optimize drawlist . setvisible ( ) to always repaint once , drawlist . closeoptions ( ) be call only once .
camel - 1063 fixed the c error of spring - batch
added a method ` isAnimationFinished ` to check if an animation is finished to improve animation state handling by determining if a animation is finished
added a new test method for custom branding icons in LoginMockMvcTests . java to ensure that the branding icons include line breaks for improved user experience
added a null check for otherUrl before checking its value in TimeLineCursorAdapter . java to avoid potential NullPointerException when otherUrl is null
ggb - 2338 do n ' t add space to the text when stop editing , by default .
refactor ObjectHashSet to improve code structure to enhance maintainability and readability of the code
refactor null comparison logic to use ` Arrays . equals ` for array equality to improve code readability and efficiency by leveraging built - in array equality method
fix gui item comparison , allow for item in creative inventory , mc - 12770 ( # 4211 )
add test for async get and put method in microprofile ( # 2873 )
rename ` target - flat ` header to ` target - user ` in ` ProjectGenerator . java ` to better reflect the purpose of the map and its associated user functionality
improve mail stability ( add more logging )
rename ` resetTaskItemView ` to ` resetToEmptyUi ` and introduce ` EMPTY _ LABEL ` to improve clarity of the method ' s purpose and ensure UI resets to a defined empty state
hive - 27113 fix metastoreclientapiargumentschecker . getpartitionsbynames with multiple equal size batch ( jason dere , review by deepak jaiswal )
added a closing brace to the FileListListAdapter class to ensure proper structure and styling of the class
replaced ArrayList with List for sharees in OCFile and OCFileListAdapter to simplify data structure usage and improve code clarity
corrected the index used for removing the view in the BubbleBarView layout to ensure proper component hierarchy is removed from the layout
removed unnecessary package prefix from hidden package declarations in JavaxWebSocketConfiguration . java and JettyWebSocketConfiguration . java to streamline code by reducing unnecessary dependencies
disable expire time for s3 requests a they may have later be break in the future .
fix # 773 jfxradiobuttonskin / update animation when timeline be null .
modified the logic for parsing DeweyNumber to handle zero split correctly to ensure proper error handling when dealing with invalid split inputs
replaced the direct string concatenation of categorySet with a static string variable to standardize the handling of category sets to improve clarity and maintainability of the return statement
updated assertions in WebSocketClientTest to remove unnecessary status code to ensure clarity in test failure messages related to invalid close codes
added a null check for classLoader in WebappLoader and adjusted the expected size in tests to ensure proper functionality and avoid potential null pointer exceptions
hhh - 17186 - fix checkstyle issue in persistentattributetransformer
pdfbox - 3680 : skip write invisible page label , a suggest by evgeniy muravitskiy
added a new test class ` TestPorterStemFilter ` to validate the functionality of the Porter stemming algorithm
indexer : postmutate - > postmutatein dispensably add index update when we successfully commit the index .
updated package name from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch . core . explore . support ` in multiple test classes to reflect the new package structure for better organization
fix : add synchronize when iterate over chatpanels
removed duplicate calls to Sys . touch ( ) in multiple Java files to streamline code and eliminate redundancy across multiple files
updated command to include " - mardu " instead of " -- unknown " in HgCmdLineInterface . java and modified untracked files method in NoOpCmdLineInterface . java to enhance version control capabilities by providing real - time file changes
camel - 8561 : fixed netty timer issue .
spot and directional light : fix npe in linear fall - off
replaced repetitive width and height calculations with safe calculations using Math . max to ensure minimum dimensions to prevent rendering issues
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a consistent string representation of the objects
added AnnoFilterTreeSet class to filter out annotated classes and modified related methods to enhance filtering capabilities for inner classes and improve code organization
updated the calculation of newLength to handle integer overflow and prevent potential overflow to ensure accurate resizing of the small buffer by preventing potential overflow issues
test : fix flaky testwritebehindmapstorewithevictionstest . testwritebehindmapstorewithevictions
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in MotifScrollPaneUI and XTextAreaPeer classes to enhance method flexibility to support a broader range of components
added method isequal to PolyFunction and updated GeoFunction to expand it to a polymorphic function to improve functionality for identifying geometric equality between circles
added a null check before retrieving column class in SynthTableUI to avoid potential NullPointerExceptions when table is null
added error handling when instantiating CustomChange in CustomChangeWrapper to ensure graceful failure to load classes in a robust environment
replaced ` ConfigPathGetter ` with ` DistBuildConfig ` in multiple classes to streamline configuration handling and enhance code clarity
fix double link in export dialog ( # 873 )
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to known issues
modified the ` doJoin ` method to return a boolean indicating success or failure to improve clarity and control flow of join operations
removed the optional < Boolean > getAutodeps ( ) method from JavaLibraryDescription to streamline the code by eliminating unused functionality
added FLAG _ ACTIVITY _ NEW _ TASK to intent creation in LauncherTimelineCursorAdapter . java to ensure that the share activity is created in a new task as intended
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enhance query filtering capabilities
updated URL assertions in RepositoryConventionPluginTests to reflect correct repository index to ensure correct URL representation for different repository configurations
of - 709 : add a node . getaffiliate ( ) task to pubsub server .
fix invalid uri for taglibdescriptiversionexception
make builduserprofilebycompletename public so that it can be call elsewhere .
modified the ` CacheKey ` class to handle array update correctly to ensure correct caching behavior for different object types while maintaining cache key integrity
added functionality to get the file type detection for Linux and Solaris peers to enhance file type detection capabilities across different operating systems
close session on close to prevent endless looping
updated ShadowVirtualDeviceManager to utilize reflector for VirtualSensorCallback and VirtualSensorDirectChannelCallback to streamline parameter retrieval and improve code maintainability
added a condition to check if the context is not the same as the context before execution in HttpSessionSecurityContextRepository to ensure that security context is removed only from the session for execution context
fix lookup of loopback address ( # 4258 )
replaced the BUF _ SIZE constant with DEFAULT _ BUF _ SIZE and updated buffer management in Zlib . java to improve code clarity and ensure consistent buffer size usage
added secure validation and modified method calls in multiple classes to enhance security checks during method resolution and improve error messaging for better clarity
added logic to update the icon action listener if the icon is not initialized to ensure that the action listener is only added if the icon component is properly initialized
added support for Russian language in the Language . java file to enable Russian language functionality in the application
fix sqm duration precision in millis ( # 4187 )
disable frame state verification for manually generate graph
reset system property to prevent test from run
added functionality to load the SLF4J LoggerFactory class into the application context and verify its class loading in ViewClassLoaderTest to ensure that the logger factory is correctly loaded and that the expected context is loaded
added a check for the " jar " packaging in ChangePackaging . java and a test for it in Xml . java to ensure that the change packaging is removed automatically when the default is not set
fix npe when download file with extension not find
added a call to nk _ buffer _ clear for command processing to reset the buffer for further processing
updated method names and functionality in JogService and JogStatusLineService to enhance clarity and maintain consistency in unit handling throughout the codebase
[ log4j2 - 1246 ] patternlayout % date conversion pattern should render time in utc
removed unnecessary whitespace in Terminator . java to improve code readability and maintain consistency
improve error message for invalid file uri in filesystem ( # 5467 )
improve performance of showtrackingnotification by use timely executor
fix ftp reconnect test ( # 4460 )
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties . java ` to optimize performance by reducing contention in concurrent operations
added ` ignore ` method implementations in ` JavaUtilLog ` , ` Logger ` , and ` StdErrLog ` classes , and implemented the ` ignore ` method in ` Log ` and ` StdLog ` classes to enhance log handling by allowing specific actions to be ignored
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions during execution
removed unnecessary type casting for damage in BukkitWorld . java to simplify code by removing unnecessary type casting
pdfbox - 4892 : remove useless line , a suggest by valerybokov
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for improved directory handling and unmapping to enhance performance and flexibility in managing data structures during Solr operations
fixed pdfcleanupprocessor to handle null color , a suggest by ralf hauser
updated the query assertion to use field1 _ s maxDocFreq instead of field1 to ensure correct maximumDocFreq is used in the query equality test
updated ExtendedOperatingSystemMXBeanImpl to enhance performance monitoring capabilities to improve system resource management and efficiency tracking
added leftCommands variable and a method to install both components and commands in SideMenuBar . java to enhance command management within the SideMenuBar functionality
added a new boolean variable ` advanceWindowed ` to ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity ` to conditionally call ` setUpWindow ( ) ` to control the setup of window based on shared preferences , improving user experience
updated condition in DropPrimaryKeyGenerator to include SybaseDatabase to ensure compatibility with Sybase database operations
fix typo : ` ` application / octect - stream ' ' - > ` ` application / octet - stream ' '
[ java ] schedule append position to election for slow tick cycle .
fix : double - click to add icon to cell layout ( issue 1084380 )
added a return statement to NearCachedClientMapProxy . java to improve function exit point clarity
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to shutdown the HTTP server and introduced a new method to handle it to ensure proper server termination and improve error handling during server startup
camel - 16736 - camel - aws2 - s3 : fix some ide warning and remove unused field
[ hotfix ] [ runtime ] remove unused param _ tm _ id in taskmanagermetricshandler
bug 10265 : 226 to 227 db upgrade - remove unique key constraint for ` ` network _ offerings . name ' ' field ( if exists )
added a new test class TestThriftCLIServiceSecurity and modified TOpenSessionReq to append a password to ensure correct functionality of password handling in the service session request
added a maxEnergyLimit variable and updated its assignment in VMActuator . java to correctly track the maximum energy limit based on constant calls and dynamic properties
added maxInMemorySize property and its getter / setter methods to HttpClientProperties , and updated WebClient initialization in HttpClientPluginConfiguration to allow configuration of memory allocation based on properties
modified caching logic in Cache . java to enhance performance and efficiency of data retrieval
added new files for Cucumber test and step definitions to implement functionality for running Cucumber tests and step definitions
added error handling for JSON parsing in TypeJsonUtils and created new test cases in TestArrayOperators to ensure robust handling of JSON values and improve test coverage for various edge cases
replaced repeated byte array creation with a single conversion for Utf8StringBuilderTest to optimize code by eliminating redundancy
added a check for param set before appending parameters and introduced a new method to check if the parameter is set to improve parameter handling and ensure proper encoding of parameters
camel - 10635 : circuit breaker : invalid configure route with max number of output
updated test cases in TestIndexWriterExceptions to set the maximum buffered documents to ensure that the reader correctly handles document frequency limits
replaced string hashing with SHA1 hash updates for resource APKs and assets to improve hash accuracy and performance by using a more efficient hash calculation
remove unused method in asmtuntime . java ( # 2653 )
added new biome tag in the ForgeBiomeTagsProvider class to enhance functionality by identifying additional biome types
change async image loader to use a fixed thread pool
changed access modifiers of fields and methods from private to protected and refactored variable initialization to enhance encapsulation and improve code readability
replaced occurrences of " ن ن " with " ن " in specific Arabic data files to ensure accurate representation of data in Arabic locale settings
fix an issue with the deprecated ` hasimageequalto ( ) ` method in the ` abstractSunSecureRule ` class
camel - 13734 : camel - jbang - add -- repos option to all the command line . this fixes camel - jbang test on window
added handling for NaN scores in CrawlDbReader . java to improve robustness by avoiding invalid score processing
[ java ] fix oom in onstartuptriggeringpolicytest by ensuring that the test clean up .
mondrian : the focus of the filter condition editor should be set to focus on the window instead of the filter condition editor .
[ flink - 33513 ] [ runtime ] makepointscleaner async to avoid deadlock
added a new file ` XPathWhiteSpaceTest . java ` to test XML schema parsing to ensure proper handling of whitespace in XML input based on the specified schema
fix a bug with bonsaipersistedworldstate . getmutablewithrollback ( ) when the trie log have n ' t be override .
[ hotfix ] [ doc ] fix typo in flutternewarrayinstruction comment
make simplenetworktest more stable ( with timeouts = false ) .
update return statement to check if the path suffix ends with a slash to improve clarity and correctness of path handling
simonstewart : fix issue with skin file not be load properly on osx .
added dirty management methods in LgoGroupedLevel2Update and modified skip logic in LgoBatchSubscription to ensure elements are marked as dirty and improve filtering behavior
added a new constant ` UNDEFINED ` in the ` Result ` class and updated the ` TestStep ` class to use it to improve code clarity by using a consistent constant instead of creating a new instance
changed exception type from PersistenceException to NullPointerException in TestTransactionCallback . java to ensure proper handling of null values during database registration
make uploadjobmultireader operation not asynchronous
do n ' t swallow exception during data recovery , log recovery location
fix bug in Verticalnodeviewlayoutstrategy . createinstance ( ) by ignore node
modified the ` ensureAvail ` method to use an ` sizeMask ` variable instead of a ` byte array ` to improve performance by reducing contention and enhancing clarity in memory management
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark these tests as ignored due to potential issues with potential performance issues
fixed possible outofmemoryerror when blockfor = 0 be use . patch by jbellis
no actual changes were made to the code to ensure consistency in variable definitions across the file manager class
added new TransformFunctionType constants and updated TransformFunctionFactory to use these constants instead of their types to improve clarity and consistency in function representation and enhance code maintainability
added getSimpleName ( ) and getEnclosingElement ( ) methods with overrides in VariableElement . java to provide better element name and enclosing element functionality
8037550 : update rfc reference in javadoc to rfc 5280
fix : recaf version and fix a type in searchannotationvisitor
removed unused memory cache initialization and optimized drawable retrieval in ListActivity to improve performance by reducing dynamic memory allocation and enhancing readability
removed redundant ' else if ' statements in DirectUpdateHandler2 . java to improve code readability by consolidating conditions
fix : always use file _ url _ prefix in osgi .
updated PreviewPositionHelper to accept a Context parameter and modified clipped insets calculations based on split screen mode to improve flexibility in managing screen insets based on split screen mode
[ java ] perform a lookup before publish new leadership term in election .
( chore ) camel - aws2 - pmd : fix junit test when there be no exception
refactor skipping logic in ByteArrayInputStream and introduce a new Skip class for better testing of skip functionality to improve code clarity and ensure correct skipping behavior based on available bytes
refactor conditional logic in UpdaterTask . java to streamline promptUpdate logic to enhance readability and maintainability of the code
peer : do n ' t download empty block if there be no more header .
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to include rt . jar as a known library for improved functionality
remove framer from abstracthandshakehandler , since it ' s not use
added IOException handling and improved parameter retrieval in RasterLayerResponse and GTDataStoreGranuleCatalog to enhance error management and ensure proper configuration retrieval
added a conditional check for committed state before sending a 500 error message to ensure that error responses are only sent when the channel is committed , improving response management
updated condition checks for ` hold ` and ` lastPoll ` in ` HttpSession . java ` to improve responsiveness by accommodating zero and adjusted polling conditions
updated fadeOutFakeTaskView method to false and added support for new gesture navigation tutorial to enhance user experience by allowing a new gesture navigation tutorial when the feature flag is enabled
add support for serializab with unknown component ( # 4259 )
updated external group creation logic to include additional properties to streamline group setup for better readability and maintainability
updated the thirtyDays variable declaration in FreezeBalanceActuator . java and added a validation check for non - existent account transfer in TransferActuator . java to ensure consistency in time calculations and enforce contract validity for non - existent accounts
fix test wrong file separator to pass on window
mow - 499 fix keyboard double click on keyboard ( error message fix , do n ' t work right now )
updated GpsMainActivity to include session description and replaced service intent handling in AnnotationViewFragment with EventBus to enhance session management and improve event handling for better event notification
added PDF file handling in JsoupNonVisualRegressionTest to verify the number of pages to ensure that the test correctly displays a PDF output when the number of pages is not expected
* make bufferallocator native again , deprecate it
add substring handling for flags that start with " ! " to ensure proper parsing and validation of flag names
add workaround for npe in jdbchistorycache ( improved performance )
refactor conditional check for ItemUse in BattlePassManager to improve code readability and maintainability by using equality instead of string comparison
fix test to account for add new priority element in queue
added a inject injection for ` AffinityGroupDao ` and modified test methods for creating and validating affinity groups to improve code clarity and ensure proper functionality related to affinity group creation
added a null check for the command in Main . java and modified the conditional check for verbose arguments in Main . java to ensure help is printed and improve command - line option handling
[ log4j2 - 1086 ] reduce log4j output size for long and property type .
changed class visibility of Scanned from package - private to public to allow access to the Scanned class from other packages
modified ClassWriter . java to use a boolean variable for showing blank lines and updated conditional logic to improve readability and maintainability of the code
added a assertion to check the length of a person object to ensure that the person object has a valid length before proceeding
fix npe in virtualfile . isfileextension ( ) ( # 2288 )
fix ` ` return ' ' - > ` ` continue ' ' for update contact right button .
[ hotfix ] fix checkstyle violation in slotsharinggroupassignment
remove extra logic from InstallShortcutReceiver . java to simplify the iteration logic for better readability and performance
updated the file descriptor handling in PlainSocketImpl . java to ensure proper resource management and prevent potential memory leaks
added functionality to clear removed items in the MediaDetailPagerFragment and updated BookmarkListRootFragment to handle removed items to ensure that items are properly removed and displayed in the user interface
[ java ] update log message to reference ' in - view ' center point for w3c action
added a new file ` bug4865918 . java ` implementing a GUI test using ` TestScrollBar ` to address bug 4865918 related to scrollbar blocking increment and GUI behavior
replaced the usage of ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler ` to simplify the code and eliminate unnecessary null checks for ` velocityEngine `
updated imports in QuestCommand . java to use wildcard imports and added group trigger message functionality to enhance code readability and improve clarity on group operations
fixed account list selection when open the . gnucash account file
added lombok . ToString annotation with callsuper = true for partitionchangeevent and applicationevent ( # 597 )
added a CONFIG _ URI constant to the CloudService annotation to standardize the configuration URI for improved maintainability
replaced setViewportComponent and setJScrollPane with setViewportComponent and setJScrollPane to improve component management for scrolling functionality
replaced KEYCODE _ DEL with KEYCODE _ FORWARD _ DEL and updated event handling in several classes to improve key functionality and enhance event processing for better user interaction
added a conditional check for ` moreIndexingFilter . indexMimeTypeParts ` before retrieving parts to ensure compatibility with content type settings based on configuration
added a pattern for author author to extract and handle constructor visibility comments to improve code organization and clarify author visibility of constructors in JSDoc
replaced occurrences of " DELTA _ TOTAL _ DATABASES " and " DELTA _ TOTAL _ PARTITIONS " with " create _ TOTAL _ DATABASES " and " delete _ TOTAL _ PARTITIONS " to standardize terminology for better clarity and consistency in JSON tracking
refactor HiveDatabaseSchema and HiveSchemaFactory to utilize SchemaConfig for managing Hive tables and database schemas to enhance flexibility and error handling during access to Hive databases
updated oauth2LoginLinks method signature to accept a MultiValueMap parameter to enable query parameters to include error handling
updated Hijrah calendar name and modified DateTimeFormatter locale specifications to ensure clarity in calendar representation and improve locale consistency in date formatting
douniaberrada : support firefox for web audiorenector . issupported ( )
add convenience method in grpcserverbuilder to allow add interceptor
added a default charset specification for tables created in TestCompatibility . java to ensure compatibility with default settings during schema creation
fix bug in streamingaggtemplate when output > 1 . ( # 2472 )
[ hotfix ] use semantically correct timeout in executiongraph : : scheduleeager .
added a ` hasFrom ` boolean property and modified methods for handling SQL statements to enable conditional SQL generation based on the ` hasFrom ` flag
renamed ` isSuccess ` method to ` isMultiStatus ` and updated content download handling to improve clarity and enhance error handling during synchronization
refactor the applicable test handling into a separate method called applicableListTests to improve code readability and reduce duplication in the recipe matching logic
updated regex pattern in LogAnalyser . java for more precise matching of log lines to ensure proper handling of line breaks and improve accuracy in log processing
camel - 14284 : camel - jbang - use GOOGLE _ APPLICATION _ CREDENTIALS to prevent security - related test from running .
fixed - redissearch . value ( ) method append exclusive / min / max value if exclusive = false . # 1399
( stuart lewis ) fix select option for cclicense step
fix potential npe in ifc model when global id be null .
updated comparison logic in OptionalAssert to use areEqual method to improve accuracy of comparison results
8238270 : htmlworker : sanitize html content with space instead of space
added a new file TestArrayCopyToFromObject . java to test for ArrayStoreException handling to ensure that ArrayStoreException is correctly thrown when expected and expected
updated Python path insertion methods in BuckPythonProgram . java to ensure proper formatting to enhance readability and maintain consistency in the code structure
fix bz 66621 - ensure processor be close in async mode
fix infinite loop when a file be find while visit . close # 1489
added an import statement for JUnit ' s Ignore annotation and applied an Ignore annotation to the TestLlapSignerImpl class to temporarily disable the test case due to an unstable issue
[ java ] add null check to fix intermittent test failure
bugfix # 21100 , improve performance of classloader . load ( string )
updated server version comparison logic in CustomPlaybackOverlayFragment and modified PlaybackController to reflect new server versioning to improve server version management and enhance logging for better debugging
updated localhost configuration in KDC and OneKDC classes to use canonical host names to ensure consistent resolution of URLs to avoid potential issues with " server / "
modify access behavior for Jsr250Voter to account for multiple roles to ensure correct access behavior when multiple roles are present in the security config
tika - 767 mp4 parser : upgrade to mp4 parser 4.0 ( # 767 )
added a new constant for HS2 _ PROXY _ USER and modified sessionParams handling to include the username to ensure session parameters include the correct user context when needed
camel - 12780 : camel - hdfs : compression codec should be snappy for hdfs . thanks to joao lohma for the patch .
added a 1 - second delay in HttpClientTest . java to ensure proper timing between asynchronous operations in the test
bug 56930 : improve xssfcell . setcelltype ( cell . shell _ type _ BLANK ) and removecell from xssfcell . setcell ( string )
corrected glyph offset calculation in GlyphLayout . java and changed text formatting in BitmapFontTest . java to correct glyph positioning and improve text rendering accuracy
k3s test : remove file system bind workaround for istio
replaced ` ReportPlaybackStartAsync ` and ` reportPlaybackProgress ` calls with ` TvApp . application ( ) . getPlaybackManager ( ) . reportPlaybackStart ` and ` TvApp . application ( ) . reportPlaybackProgress ` to simplify the code and ensure compatibility with the new playback management system
simplify simpleauthority by use bufferedinputstream for file access
fix maploader # hittingevictionafterinitialload not check for existence of actual value ( # 15988 )
replaced bitwise operation with bitwise operation in ResponseFlag . java to ensure proper handling of ERROR _ BIT values in response processing
make sure we can fix default policy . now we can add anonymous policy without a policy .
7019441 : no lookup cache for internal composite font creation lead to java heap growth
updated preference height calculation and adjusted spacing in Tree . java to ensure consistent layout adjustment and improve alignment of tree elements
drools - 4287 dmnevaluatorcompiler : improve dmnevaluation error message ( # 2737 )
removed unnecessary unnecessary import statements and updated LinkedList initialization to improve code clarity and maintainability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and replaced direct Runnable calls with a call to ` MAIN _ EXECUTOR ` to improve method accessibility and ensure proper execution in background threads
added null checks for node ID and updated edge handling in ImportContainerImpl to ensure proper error handling and prevent null pointer exceptions
[ beam - 10670 ] fix npe in fnapicontrolclient for unknown state response
nifi - 259 : fix bin creation to use session factory to avoid session leak
fix a bug in findClosest ( ) . it be n ' t work for each core , but only for each dst .
[ jav - 560 ] resttemplatecopyheaderfilter do n ' t send content - length header to client
updated Java2TypeScriptTranslator and Literals to handle string conversion and modified transpile method to use eval to improve conversion accuracy and ensure correct handling of different types of strings
improve the speed of the polyphase channel tuner ' s plot .
hbase - 3740 add - allregions option to canary to allow canary to run without any region
remove unused node . environment property and fix cassandraconnector factory
added cursor position reset functionality in KahaDBStore to ensure proper cursor state and prevent potential memory leaks
added minimum size configuration to CallDialog and adjusted frame dimensions in OneToOneCallPanel to ensure window dimensions are enforced to improve layout consistency
fix loss of state information during world gen in blockfalling . close # 3139
jetty - 9 : testHTTPSamplersAgainsthttpmirrorserver now use junit 4 . x for test
added dependency injection for KerberosPrincipalHostDAO and updated entity removal logic to improve code reliability and ensure proper cleanup of Kerberos principal entities
removed the boolean parameter from the getTableSnapshot method call to simplify the method call since the table snapshot is no longer needed
improve handling of timeout exception and log warn instead of error
android : add android . licensekey to android build hint to clarify the requirement for android . licensekey
updated ` VirtualFolder ` constructor to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and removed ` isInsideTranscodeFolder ( ) ` method to simplify folder handling and enhance clarity in transcoding folder checks
[ bz - 1155852 ] avoid ` ` classnotfoundexception : no package find ' ' exception
skip this test in checkindextest since the feature be not support in jdk 19
refactor method signatures and logic in RemoteTargetGluer for improved clarity and functionality to streamline the process of assigning targets for split screen to enhance code readability and maintainability by reducing complexity in target management
fix type ` ` jmv ' ' to ` ` jvm ' ' in leaderlatch ( # 456 )
added methods to initialize zk - SNARK parameters in SolidityNodeHttpApiService . java to ensure proper initialization of zk - SNARK parameters for the service
do n ' t build a transaction in a depth increase by block size
renamed ` longtitude ` to ` longitude ` and updated related method names for consistency to improve readability and maintainability of the code
initialize the platformName variable to " ios " to ensure compatibility with iOS platform configuration
rename PageEditClient to PageEditClient for consistency to improve clarity and maintainability of the code
* fix ` ` undefined ' ' for webkitlinedash in ie
pdfbox - 4071 : fix typo find by codespell on fossies . org
in case of exception , notify the callback of outgo frame be fail .
refactor ClassLoader initialization to use AccessController for privileged actions to improve security and reduce boilerplate code
added logic to update child categories in CategoryREST to ensure that all child categories are owned by the current category
add support for set the title for the contrib manager window ( # 3463 )
added a ` vwap ` field to the ` Ticker ` class and modified the constructor accordingly to enhance the ` Ticker ` functionality by including the price for better price representation
show ' no widget ' text when there be no widget available ( # 1238 )
use tintnodenode in the world render api so that it can be use programmatically .
updated NCFirebaseMessagingService to use primary color from ThemeUtils to ensure consistency with the application ' s theming theme
added new test cases in ShadowUsbManagerTest . java to improve testing coverage forUsbManager functionality
add logging and fix a bug
added the call to update the selected configuration to ensure that the selected configuration reflects the latest changes
replaced integer operation with a maximum integer operation for stroke dimensions to ensure that only positive dimensions are processed to prevent potential errors
fix : replace hashmap with linkedhashmap in order to preserve order .
replaced ClosureManager with ClosurePool for handling closures to improve resource management and prevent potential memory leaks
camel - 13555 : update test to junit 5 ( # 5505 )
added WebSocketIngressIntegratedBootstrap and WebsocketPluginTest classes to integration tests for WebSocket connections to ensure proper functionality of WebSocket integration within the Shenyu framework
minor change to abstractimportmetadatasourceservice to remove the unused field
refactor authentication comparison to use a separate method for clarity to improve readability and maintainability of the code by encapsulating the equality logic
added a check for the X86asm compiler property in X86MethodGenerator . java to ensure compatibility by preventing the use of unsupported compiler settings
replaced direct calls to ` callNode . getType ( ) ` with a local variable ` callNodeType ` for better readability to enhance code clarity by reducing redundancy in type retrieval
added an @ Insecure annotation and modified MessageBuffer constructor to include nested methods to enhance security measures for message buffer operations
added new configuration variables in HiveConf . java to enhance the flexibility of Hive configuration settings
fix nullpointerexception in resourcesetservice when query return ' true '
lucene - 3498 : multireader . close ( ) now properly initialize subreaders on close .
8050280 : fix ' java / nio / channels / file / asyncsocketchannel / asyncsocketchannel / asyncsocketchannel . java ' in file system
simonstewart : fix an issue where selenium do not work correctly in version 2.49
replaced repeated calls to ` getFirstTypeArgument ` with ` final ` for classes in ` LinkedHashTreeMap ` and ` KeySet ` to improve code readability and maintainability by preventing subclassing
changed method return types of keySet ( ) and values ( ) from Set < Integer > to KeySet and Values to improve type consistency and clarity in key management
added a duration variable and corresponding getter and setter methods to FlipTransition . java to allow dynamic adjustment of animation timing based on user - defined durations
removed logging for non - streaming subAreValidForStreaming to streamline the configuration process by eliminating unnecessary trace logging
bump version to 9.10 . fix # 22778
use java version - specific warning in ` stacklocator ` ( # 1718 )
added new Java15PostProcessor and Java16Validator classes to support Java 16 format changes to ensure compatibility with the latest Java 15 library changes
refactor condition checks for replies size in ExpansionViewHelper . java to ensure proper padding for statuses based on their index
fix callback be not call when empty version map be empty . ( # 12541 )
added metadata handling functionality to SeedUrl and SeedResource classes to enable storage and retrieval of additional information related to seeds
added a null check for the declaration object before creating a Pattern to avoid potential NullPointerExceptions when the declaration is null
updated TestCoprocessorWhitelistMasterObserver . java for improved clarity to enhance code maintainability and readability by using consistent test cases
ww - 4022 - include package name in generated xml if available
fix iterabletest . containsexactly to work with javac 8u20 .
added stream and parallel stream methods to MapIterable and PrimitiveObjectMap classes to enhance functionality for streaming data in a more flexible manner
replace return statement to clone notifInfo before returning it to ensure that the original notifInfo object is not modified externally
findbugs : avoid npe when try to find a key for an empty keyset .
add some javadoc to aesadblockcipher to indicate that it wo n ' t be clear
add isvariablelocal ( ) method to the map , and change searchname ( ) to searchindex ( ) to improve lookup performance .
added a condition to initialize ` id ` if the resource name is null and changed the default resource mode from ` best ` to ` legacy ` to ensure resource ID is correctly assigned when the resource name is not already provided
6753173 : no need to read all the truetype ' post ' table to get underline info
updated the signPlugin constructor to accept a List of HttpMessageReaders instead of a single messageReaders to allow for more flexible control over the number of message readers in the signing process
refactor Int2ObjectCache . java to improve performance and readability to enhance efficiency in object caching operations
nifi - 8041 this close # 8042 . remove unnecessary validation of maven deployer .
modified AudioNode . java to update method implementations to improve audio handling efficiency and maintainability
[ type : refactor ] fix ssl context init issue ( # 10314 )
added imports for Stream and OracleSqlOperatorTable , and refactored HiveFunctionRegistry for improved clarity to enhance code readability and maintainability by utilizing modern Java features
http : / / issues . apache . org / jira / browse / amq - 4458 - add support for multiple instance name in jmx
updated the ` getBuildTargetForAlias ` method to replace ` alias ` with ` possiblyFlavoredAlias ` to improve clarity and correctness in alias handling
camel - 13077 : fix poll return for empty extract endpoint
add equivalent version to hivemetastchemainfo ( # 4338 )
server : fix checkstyle violation in uservmmanagerimpl . java ( # 4804 )
mark multiple methods in AbstractDateAssert as deprecated to indicate that these methods are outdated and should not be used in future development
updated ONDashClockExtension and AlarmReceiver to use dynamic title extraction for notes to improve clarity and maintainability by centralizing note title handling
updated the GoogleAuthUserConfigTable class to replace " varchar " with " nvarchar / varchar " for data types to accommodate larger data types in the database schema
replaced ` commit ( ) ` with ` apply ( ) ` for SharedPreferences operations to improve performance by applying changes in the SharedPreferences instead of committing changes
fix asynctimeouttest . testidletimeout flakiness
[ beam - 7720 ] fix bigqueryioit to print the test _ id
added background resource and reset functionality for predicted icons in HotseatPredictionController and BubbleTextView to enhance UI consistency by using a dedicated background for predicted icons
mondrian : fix typo ; update comment to reflect this .
[ native ] add abstract test for native query
fix npe in lIME explanation when output list be empty ( # 4088 )
add - r flag to the ` ` -- r ' ' cli option for apple target
fixed # 2579 : line selection on arabic style can no longer be select .
update to check for availability of pipeline and manager before use it .
added clipping to outline for the background view in QsbWidgetHostView to enhance the visual appearance and readability of the background
added flag conversion timing and improved flag handling in SQLManager , BlockTypeListFlag , and PlotArea classes to monitor and log the progress of plots effectively
fix : add depth setup for floatingtextview .
target _ oracle _ oracle _ nfi _ backend _ libffi _ libffi _ libffi _ linux be a temporary fix .
camel - 5258 : camel - jdbc - aggregation - allow multiple setting of propagation - behavior for transaction template
added regularization support for L1 and L2 in LayerValidation to improve layer validation to support varying regularizations
[ flink - 31894 ] [ connectors / common ] do n ' t call system . exit ( - 1 ) on connector stop
changed ` colorStack ` from static to instance variables in ` GlyphLayout . java ` to allow each instance of ` GlyphLayout ` to maintain their own color stack
updated methods in Configuration . java to use true for the second parameter to enable mapping functionality for improved statement handling
converted currency to lowercase when retrieving BTCE depth to ensure consistency in currency handling regardless of input casing
upgrade qtt lib to version 0.03 , 0.03 , 0.03
remove ` versionedhashes ` from engine ( # 6237 )
reset trigger price to empty when add new offer
add disable check if the response be an error , and fix indentation
removed unnecessary print statements in I18NPageController . java to clean up the code and improve performance
hbase - 16231 addendum fix hbase - 16231 log level check in hstore # init
# 2127 - fix for - add a new list of child to @ onetomany with orphanremoval true do not delete exist orphan
added a boolean flag ` _ alwaysSaveUri ` to manage session URI behavior to enable conditional saving of URIs when necessary
added new methods nSetLayerType and nSetLayerPaint in ShadowRenderNode . java to provide utility functions for setting layer types and paint in the rendering process
replaced specific imports with wildcard imports and added a new method to handle popup menu visibility to enhance code readability and ensure proper visibility management for JPopupMenu
fix bug in stressprofile that could cause npes .
replaced calls to ` asScalaIterable ` with ` collectionAsScalaIterable ` in multiple test wrapper classes to unify collection handling by using static imports for improved code clarity
increase logging to help identify unresolved dependency
improve logging when a property file can not be load .
[ iotdb - 4495 ] fix deadlock in clientmain cause by datasets . get ( )
updated conditional check in SetOutgoingIf to include multicast support and NIC status to ensure outgoing connections are only established on valid and capable network interfaces
updated the String constructor to include a length parameter to enhance command parsing functionality with variable length options
updated methods in UnDelegateResourceActuator and BandwidthProcessor to set the latest consumption time based on the head slot to ensure accurate data handling during asset processing
added a method ` invalidSessionStrategy ` to the ` SessionManagementConfigurer ` class and updated its usage throughout the code to enhance session management by allowing an invalid session strategy to be provided
include label in the exception when we can not find the token
add a new test class ` MapAssert _ containsKeys _ Test ` for verifying keys in map assertions to ensure correct functionality of the ` containsKeys ` method using Mockito
added a new ` JDBC4TemporaryPreparedStatementMethods ` interface and modified ` JdbcProxyGenerator ` to use it for custom stream handling to enhance flexibility and maintainability of the proxy configuration code
added a ensure method to the ServerWebSocketContainer class and modified the start method in DirectUpgradeTest to improve WebSocket container initialization and ensure proper context handling during upgrade processes
replaced ImmutableMultimap with ImmutableListMultimap in CxxFlags . java to improve immutability and prevent unintended modifications to the collections
pdfbox - 5134 : avoid classcastexception , a suggest by valerybokov
replaced the initialization of MethodHook with a static final empty array and updated Method and Method classes to use this constant to improve memory efficiency by avoiding unnecessary array creation
added a grantAccess flag in MockAuthenticationManager and modified the authentication retrieval logic to enforce security by allowing access control during authentication
updated method signatures to accept JobExecution for afterJob to improve clarity and functionality by associating the afterJob method with the job execution context
updated file access logic in SharedLibraryLoader to check for executables to ensure that files can be accessed only if they can be executed
[ iotdb - 2486 ] add hastimeseriesquery and add it to timeseriesquery interface ( # 666 )
bug 57193 - jmeter should not wrap sampleresult into sampleevent where it ' s own
added new constants for BATTERY _ LEVEL , annotATION , time , and PROFILE _ NAME in BundleConstants . java and utilized them in CustomUrlManager . java to enhance code readability and maintainability by using named constants instead of magic strings
fix application of search expression ( fix import order )
ggb - 2339 ggb - 2339 ggb - 2339 ggb - 2339 ggb file do n ' t work ( classcastexception after r62953 in ggb5 )
updated texture handling and UI initialization in ProjectiveTextureTest . java to improve texture rendering accuracy and ensure correct UI dimensions
modified the method signature of setResourceToDelegate to return a File object instead of void to ensure that the output file can be write and updated state checks accordingly
camel - 6379 : fixed property endpoint interceptor to support classpath with : / / uris .
change condition from ' > ' to ' > = ' for ` currentTime ` in ` ActionScheduler . java ` and update expected value in ` TestActionScheduler . java ` to ensure accurate time comparison logic and align test expectation with expected outcomes
updated debug _ zip path and added null check for debug _ log before replacing it to improve debugging output and prevent potential null pointer exceptions
remove rendering . hud _ hidden from rendering config ( # 4767 )
fixed issue where pipe could get stick in infinite loop during death .
encapsulate TestSupplementary execution in a try - finally block to ensure locale is reset to maintain consistent locale settings and prevent side effects in subsequent tests
updated team creation parameters from 0.8 f to 0.4 f and corrected team color to ensure team creation adheres to expected color specifications
modified ` activeMatchedStates ` from a set to a collection and updated logging levels for consistency to improve performance and enhance logging clarity based on logging levels
replace the null check with a logical OR operator in the SoftAsserts class to simplify the logic for determining if the annotation is null or empty
updated error handling in StorageResources to include more specific exception messages to improve clarity of error reporting during plugin saving failures
[ gr - 32234 ] add call tree csv link for easy import into graph db .
updated DetailFragment to handle null notes more effectively to improve robustness by ensuring that null notes are properly managed and prevent potential NullPointerExceptions
added functionality to track and increment peak tasks in the AssetManager to improve loading accuracy by accounting for peak tasks during the loading process
eranmes : enable native event handling in firefoxdriver . fix issue 67 .
added support for custom score and fetch interval in the Injector class to enhance metadata handling and improve code maintainability
updated import statements from commons . collections to commons . collections4 in ScimExternalGroupsTypeResolvingFactoryBean and RsaJsonWebKeyTests to ensure compatibility with the latest Apache Commons collections library version
updated coreContainer to check for null zkController and added a new method isShareSchema to improve logic for schema sharing and enhance testing functionality
updated size calculations to use formatted size in multiple classes to improve clarity and consistency in size representation across the codebase
replaced assert statements with assertNull for Version1 _ 2 in VersioningTest . java to ensure correct handling of null values during JSON parsing
modified SQL queries to include ' t . typnotnull ' in the field ' s prepared statement and added tests for domain column validation to ensure proper handling of non - null domain types and improve database metadata management for PostgreSQL
[ java ] change timing of follower commit event to last heartbeat interval .
added a method to build a media type from the request in WebClientPlugin to ensure the plugin correctly processes content type based on the request headers
replaced calls to ` fillUsingLengthPrefix ` with ` fillSlice ` across multiple classes to unify the method naming convention for better clarity and maintainability
hive - 27373 : fix related bug in Acidutils during compaction ( # 3475 ) . ( ayush saxena , review by ayush saxena )
updated the initialization of immutableStorageScheme and qualifierEncodingScheme to use NON _ ENCODED _ QUALIFIERS to ensure proper handling of null values and prevent potential null pointer exceptions
added two new classes , PojoProducersCustomized and RestProducers , to implement their respectiveProducers and RestProducers to facilitate the integration of multipleProducers within the application
replaced hardcoded strings in ` ArtifactCacheBuckConfig . java ` with a constant ` CACHE _ SECTION _ NAME ` to improve maintainability by using a more descriptive constant name
fix registration of aesgscmsivprotoserialization in aesgcmsivkeymanager
fix miss recipe for wooden slab recipe in ore dictionary . close # 2373
refactor DefaultSessionCacheFactory , FileSessionStoreFactory , and SessionHandler classes to improve code organization and maintainability by standardizing session management utilities
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` dependency to simplify the code structure and reduce unnecessary dependencies
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 16178 fix test failure on oracle
updated texture drawing position in HelloWorld . java to correct the center positioning to ensure proper rendering of the sprite batch
modified the loop condition for player functions and added a custom toString method in PlotId class to improve accuracy of player positioning and ensure consistent string representation of plot objects
add a deprecated static final Version constant for Lucene version 8.5 . 0 to mark the version as outdated and discourage its use in future development
modified string concatenation in the logging statement for clarity to enhance readability of the debug output in the closeSocket method
added a test method for parsing SQL CAST statements with signed integers to ensure proper handling of signed integers in the query parsing
add a new ` DependenciesType ` enum and change the dependency type handling in the CoNLLUOutputter class to improve type safety and clarity in dependency management within the application
refactor the creation of build target descriptions in NoSuchBuildTargetException to streamline code and improve clarity to enhance maintainability and reduce complexity in handling missing build targets
modified the test method from ` testFromMain ( ) ` to ` test ( ) ` in ` MyChild . java ` to simplify the memory testing process by removing unnecessary main test
configuration : fix an arrayindexoutofboundsexception that could lead to arrayindexoutofboundsexception
update output messages for PlotSquared and Spigot support checks and features in BukkitMain . java to improve clarity and user experience when versioning to Spigot
added support for escaping Postgres questionmark operators in AbstractSQLChange and AbstractSQLChangeTest classes to ensure correct handling of special characters in SQL statements for PostgreSQL
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and implemented new factory methods in ` MutableBagFactoryImpl ` to enhance functionality and flexibility in creating mutable bag instances
added check for miss ` ` . adoc ' ' attribute in ` ` page - course ' '
mqtt : fix issue with mqtt connection not connect to server .
added null check for the change log before retrieving the change set to ensure robust handling of potential null pointer exceptions when accessing ChangeSet
replaced ` new MethodResult ( ) ` with a direct instance of ` MethodResult ` in ` handler . before ` , updated output handling in ` RocketMQGlobalPluginHandler . java ` , and refactored address assignment in ` PrometheusPluginBootService . java ` to improve code readability and maintainability by reducing unnecessary object creation
added database drop functionality in TestHiveMetaStorePartitionSpecs and improved logging in TestObjectStore to ensure proper resource management and enhance debugging capability during testing
added a new parameter for currency in the BithumbAuthenticated class and updated BithumbAccountServiceRaw to include " BTC " to enhance API functionality by allowing currency specification in API calls
drop SSEFluxwebconfig . java in favor of kotlin
updated method calls to use ` getReturns ( ) . isVoid ( ) ` instead of ` getFullyQualifiedName ( ) ` for void return types to improve consistency and correctness in JSON handling
added a new endpoint to list Yamls in YamlResource . java and modified the corresponding variable name in YamlResource . java to enhance functionality to fetch detection configurations and improve code organization
removed public access modifier from equals and hashCode methods in Marker class to restrict access to these methods for better encapsulation
[ java ] increase timeout for async channel group termination .
added unit tests for adding lists and a new class ` PersonWithAList ` with ordered queries to ensure proper functionality and behavior of data conversion in the MongoDB engine
ggb - 2379 . fix applet size when resize ( euclidian view )
updated toolbar visibility handling to be delayed to improve UI responsiveness by allowing delayed execution of the toolbar updates
[ iotdb - 6758 ] fix overlap check for first page reader in series reader
bug 10629 : do n ' t try to save password for the vr when vm be no longer in use
initialize variables usingOutputStream , usingWriter , and isCharacterEncodingSet to false to ensure proper resource management and prevent potential memory leaks
fixed bug where assignment side effect be not be warn if group be select without assign .
refactor JSON and JSONObjectConvertor classes for improved clarity to enhance maintainability and readability of the code
updated the conditional check for icon dimensions in FileUploadApiController . java to ensure proper handling of icon dimensions without truncation
refactor methods in RegisteredServiceProperty and JwtTokenCipherSigningPublicKeyEndpoint for improved readability and structure to enhance code clarity and ensure proper serialization / deserialization for JWT keys
- fix bz 65384 - add content type check for window
enable netty compression and compression , close # 237
replaced the existing method ` doesClassLoaderDescendFrom ` with a new method ` doesClassLoaderDescendFrom ` in several classes to centralize ClassLoader checks and improve code organization
removed unused imports and adjusted method signatures in ChannelProvider and ProxyChannelProvider classes to streamline code and enhance maintainability
added a new test for handling an empty final column in TestCsvHeader . java to ensure proper functionality and reporting of empty final columns in CSV queries
added compass gravity and margins to NearbyMapFragment to improve UI layout and ensure proper spacing
added a test method for arithmetic distance calculations in GeoPathTest . java to ensure correct functionality of distance calculations for GeoPath instances
added exception handling to ` getLeafFilterBuilderByType ` and ` getParquetFilterPredicateConverter ` methods to improve error management and provide more informative feedback during filter operations
added logic to set the language for current audio track when the stream type is Video to ensure correct language settings are applied for video streams
added a warning log for cases where the schemas in the new version is less than the old version to improve clarity of error reporting and provide a warning for compatibility issues
replaced multiple arraycopy calls with a single addAll method for array size handling to simplify code and improve readability by reducing redundancy
refactor exception handling in DataSourceProxy . java for better readability to improve code clarity by applying consistent try - catch blocks
added null checks and constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository classes to ensure registrations are not null and improve flexibility in client registration management
added a method to reset the UI state in SchemaUpgradeHelper to ensure proper management of the UI state and handle potential exceptions gracefully
fix # 719 - junitreporter fail with pending exception
add wrapper class to allow for dispatch ( # 8238 )
added the Closeable interface to the Selector class to enable proper resource management and allow for closing operations
added a connection pool implementation using MultiplexConnectionPool in MaxConcurrentStreamsTest . java to improve resource management and performance during concurrent requests
added multiple calls to stringType ( ) in CoreOptions . java to enhance the code ' s readability and functionality
refactor HqlQueryRenderer to handle character and parameter contexts more effectively to improve query parsing accuracy and maintainability
updated HTTP status checks and method names for consistency and clarity to improve code readability and maintainability by using meaningful constants instead of magic numbers
pdfbox - 5337 : use the destination profile a propose by thomas chojecki
fix for unit test which randomly fail on slow machine .
updated ParquetFormatPlugin and ParquetGroupScan to improve file selection handling to enhance functionality for fetching and displaying Parquet metadata files
updated Jsr199Javac . java to correctly handle compilation errors to ensure successful compilation and improve error reporting during ABI compilation
added a ` BaseTableModelListener ` class and modified ` BaseCellRenderer ` to include it to enable listener functionality to respond to table changes
fix high limit for high storage size . close # 2379
added document provider authority handling to ensure compatibility with devices running KitKat and above
removed logging call from MainApp class to streamline application logging functionality for improved performance
modified error handling in FilterChainProxy to correctly analyze and handle wrapped RequestRejectedExceptions to enhance robustness in exception handling to ensure the correct response to blocked requests
updated the StringBuilder to use the current length directly instead of modifying the length variable to ensure consistency in length handling and improve code clarity
added validation to check if the filter list is empty in the Filter class to ensure that an IllegalArgumentException is thrown when the filter list is empty
added class tbstopwatch to help monitor the duration of a task
set openp list store to read - only after write
deprecate servlet 3.0 continuation class in favor of servlet 3.0
[ zeppelin - 4885 ] . fix remoteinterpreterserver . stopclassloader - > contextclassloader .
fix a compile error due to the change in the instanceof check
updated minimum SDK version in ShadowRttCallTest and ShadowCall to use O _ MR1 instead of P to ensure compatibility with newer API levels
[ java ] fix typo in deadlinestimerwheel and timeridwheel
# 484 - enh : add query . getname ( ) to improve the bean name
updated the JavaScript and CSS path in BasePage . java to use " static " prefix instead of " wro / all . js " and added a new WroSassProvider class with Sass processing capabilities to improve clarity and organization of resources in the frontend
added a new test method ` showLatestTimeseriesTest ` to validate the functionality of the ` showLatestTimeseries ` method to ensure that the functionality works correctly for various time series data retrieval
updated the configuration parameter names from " appContextLocation " to " contextConfigLocation " across multiple files to ensure consistency and clarity in configuration parameter naming
6894461 : ocsp checker should not wrap all exception a ` ` unable to send ocsp request . ` ` ( introduce by # 6885667 )
benchmarker : fix write output solution enable config ( # 1265 )
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` with a test case for reopening the slice size to ensure the correctness of slice size handling in the codebase
add shapeless recipe for the pipe waterproof recipe . close # 3105
[ mahout - 312 ] fix aioobe when iterate over sequentialaccessSparsevector .
added support for Shulker and LivingEntity entities in BukkitMain and EntitySpawnListener to enhance functionality for managing plot metadata based on their ownership in the plot system
added the getDebugLogger method to both DIHWriter and SolrWriter classes to provide access to the debug logger for better debugging
hhh - 15183 - warn if destination name be too long than max filename length .
added a check for the presence of a tag in the UpToTagChangeSetFilter to ensure that a valid tag is present before proceeding with further actions
[ beam - 8470 ] fix generic arraylist creation , use arraylist . equals ( )
[ issue # 7008 ] remove brokerroutingmanager # isconnectionalive ( ) comment ( # 7009 )
changed volume paint and up paint colors in CandlestickRenderer . java to improve visual distinction between different states
be be25822f : add insettableframelayout layout params to easily ignore inset
added a duration field and corresponding getter and setter methods to BuildTargetDurationListener and BuildTargetDurationListenerTest to enhance functionality by allowing dynamic duration tracking in build target processing
replaced Spring @ Profile annotations with static imports in HsqlDbMigrationIntegrationTest , MySqlDbMigrationIntegrationTest , and SqlServerDbMigrationIntegrationTest to enhance test readability by avoiding unnecessary profile checks
added a null check for the user before processing claims in OAuthConfirmationController . java to ensure that user data is not null before processing claims
camel - 4498 : added replacefromendpoint option to let the server work with route etc .
replaced ` ConcurrentSkipListSet ` with ` NonBlockingHashSet ` for the ` statements ` set to optimize performance by using a more efficient collection type
api : fix listpublicipaddresses api to list all public ip address include network id
added tests for ignoring battery optimization in ShadowPowerManager to ensure correct functionality of battery optimization settings
updated the way the VERSION is retrieved from __ buildProperties to ensure the application uses the correct build properties for the Jetty version
added test cases for verifying invocation behavior in order to ensure correct behavior of verification methods under various scenarios
fix # 426 - tregex : do n ' t use debug forced evaluation for no match
added a line parameter " - foreground " to the profile start method to enable the background color to the profile during processing
updated thread pool implementations in MiniSolrCloudCluster to improve resource management by ensuring proper shutdown and closing processes
replaced ` Map < String , String > ` with ` String [ ] ` for parseFieldnames to simplify the data structure usage and improve code readability
fix : bug in code editor when enter text in code editor
improve diagnostics for skipped entry in ClassFileReader and jdeps task
updated Fetcher and FetcherTask classes to utilize LuceneStorage for enhanced document storage management to improve performance and maintainability by utilizing a more efficient link handling mechanism
modified the populateBubble method to include an existing parameter to ensure the existing bubble is properly managed and avoid redundant object creation
( chore ) camel - schedule : minor cleanup to checkstyle
removed the unused ` Method [ ] ` parameter from ` buildRpcExt ` methods across multiple files to simplify the method signature and improve code readability by reducing complexity
[ java ] : use specific delay generator for multichat operation instead of override it on receive message .
updated Gson initialization and added client properties in ClientInformationResponseView . java to enhance JSON handling and ensure proper client secret information is included
added a conditional check to prevent setting an average price if the openOrder is greater than zero to ensure that the average price is only set when there is a valid openOrder to handle potential errors
removed the rawExecutionReports method from thebinance streaming service to streamline the subscription process by directly using the subscription channel
added a fail method to LdapTimeoutTest and modified timeout failure reporting to improve error handling and provide clearer debugging information during test failures
ary client : check if the user dictionary file exists before attempt to read it .
ambari - 24790 . ambari server : allow aliasing of ldap file during install ( jonathanhurley )
added parsed segment validation in ParseSegment . java and implemented a method in SegmentChecker . java to ensure already parsed segments are processed to avoid parsing errors
[ flink - 9619 ] [ yarn ] add config option for yarn application - attempt - failures - validity - interval
do n ' t try to unload the h2 driver , if the driver do n ' t include it
hbase - 20835 [ tableinputformat ] introduce readtype configuration for snapshot - based input format ( # 3804 )
added fixed height and fixed width parameters to the LoginInstanceRequest class to enable dynamic adjustment of dimensions based on user - defined options
added cornerRadius parameter to multiple methods in various classes to allow for dynamic adjustment of corner radius during animations
modified the COMMANDS _ TO _ REMOVE array to include additional formatting options to streamline the deletion process by excluding unnecessary descriptions and improving filter conditions
hive - 15830 : txnhandler . getconnection ( ) should not fail if there be a problem connection pool ( ashutosh chauhan via thejas nair )
fix # 370 - added backup reserve check
added a new final char [ ] [ ] array and updated the constructor of FirstOfStringsMatcher to improve the storage and retrieval of strings
updated SQL plan strings to use " DELETE ROWS CLIENT SELECT " and added a new ExplainPlanTextTest class to enhance clarity and functionality for SQL operations in the code
modified the logic in BaseServiceException to also check for " insufficient data written " exceptions to ensure that the service exception is treated as retryable when a specific message is not sufficient
added a new parameter ` rapidInstallTypes ` to several classes and adjusted related calls to allow configuration of rapid install types in the adb environment
fix random seed in sorttest to work on window
refactor MultimapSubject to use a factory method for string representation to improve readability and maintainability of the code
updated return statement to correct the calculation of the hotseat position to correct the return value based on device orientation and display size
handle when some mediaitems require transcoding but others do n ' t
added localization for Picker elements in the Picker class to ensure the Picker displays the updated text for better user experience
camel - 8253 fixed the unit test error of camel - cxfrs
hhh - 11543 - postgresql dialect - log more detailed exception for lock acquisition / pessimistic lock exception
added null checks and modified query ID handling in TestJdbcDriver2 . java and HiveStatement . java to improve robustness by ensuring queryId is created only when not null
annotate usestimersin pardo test in favor of usesunboundedpcollections
updated HTML string concatenation in GpsSimpleViewFragment to remove unnecessary ' em ' prefix to streamline code for better readability and maintainability
[ java ] remove leadership term id from log event .
refactor HttpSender to directly reference the exchange variable to improve code clarity and reduce direct access to the exchange object
[ hotfix ] [ test ] migrate checkpointcoordinatortest to junit5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter . java ` and its tests to improve clarity by explicitly indicating that the method now returns an API token
added null check for the tree before processing markers to avoid potential NullPointerExceptions during marker processing
fix int / double conversion issue with font size in xwpf
change return type of email to arrays in AddressBookDoCoMoResultParser . java to improve code clarity and functionality by directly referencing the email array
added exclusions handling in RawMavenResolver to ensure proper construction of GroupArtifact objects based on task exclusions
added handling for quoted currencies and improved currency information in DSX services to enhance functionality and ensure accurate currency representation in the application
8238701 : [ testbug ] jfr / tool / tooling / dcmd / testblockingio . java and testvalidatingio . java test will fail if not enough
[ drools - 90 ] fix the regression of incremental compilation on window
updated the initialization of ` copy ` in ` NativeArray ` and added a conditional check for ` sobj . has ( k ) ` to ensure proper handling of the object when ` sobj ` does not contain the key ` k `
camel - 8195 : camel - jackson should use source code generate configurer to avoid reflection configuration .
[ gr - 42827 ] ensure hostfielddesc . getgetter / getsetter be not visited in a compilation .
add support for ' completedstage ' on ' java . util . concurrent . completable ' for completablefuture
update freeze check point calculation in PlaybackController . java to adjust duration duration for improved synchronization
removed unused imports and set internal state in AbstractCommonPowerMockRunner and PowerMockRunner to streamline the code and ensure proper state management during tests
updated the method call from ` typeCode ` to ` realType ( ) ` in ` TCUtility . unmarshalIn ` to ensure correct type handling for object deserialization
modified the logic in TabsAndIndentsVisitor to correctly handle method invocation and field accesses to ensure accurate indentation information is generated based on the element type
replaced LuceneTestCase with JUnit ' s TestCase in TestSingleTokenTokenFilter to align with the latest testing framework and improve consistency
updated the output format for displaying columns in HtmlProcessInformationsReport to improve the readability and structure of the output
refactored JdbcStepExecutionDao and MapStepExecutionDao for improved clarity and functionality to streamline execution context management and enhance code maintainability
added a conditional check to only add new media folders when appropriate to ensure new media folders are displayed based on configuration settings
added null checks for the actor parameter in SplitPane to ensure proper handling of null values to prevent runtime exceptions
add handling for JavaType . Parameterized and its handling in RemoveUnusedImports . java to ensure proper management of fully qualified types in the package system
updated the ` UniqueModListBuilder ` to include a call to ` this . getVersion ( ) ` when ` modInfos ` is empty to improve code clarity and prevent potential NullPointerExceptions
changed the logger instance to static final in TicketGrantingTicketImpl . java to improve thread safety by ensuring proper logger usage
updated SQL string in PhysicalPlanTest . java to include the latest version to ensure compatibility with the latest features and improvements in the timeseries creation process
added a method ` isValue ` in ` AttrData ` and updated ` Converter ` to use it for value retrieval to improve functionality to determine if a value is found by a pair or by value
modified the condition for handling character inputs in a specific locale within CPlatformResponder . java to enhance support for US International PC keyboard layout inputs
[ java ] set default publication connection timeout in ctestmediadriver . launch ( ) .
added a check to ensure the request URI starts with specific criteria to prevent processing of invalid requests that may have due to security issues
added a new assertion to verify that the installation fails when the APK is installed to ensure that the installation process fails when the device is rooted
# 1616 - remove oracle ansi sql limit implementation
updated assertions in TestSimpleBodyHandler and TestVertxTLSBuilder to use a fixed size of 3 instead of 1 to improve testing accuracy by using a larger buffer size for better performance
updated Java file paths in DiffRuleKeysScriptIntegrationTest . java to ensure tests use the correct Java file references
added a new boolean variable ` mIsDismissHapticRunning ` and modified touch controller logic to ensure haptic - related functionality is correctly enabled during touch operations
add support for projectile in mixineventworldexplosion . close # 1511
removed unnecessary import and implemented the getItemId method in SymbolInputAdapter . java to streamline code and ensure proper functionality with stable IDs
updated API request type in Bitfinex to use QueryParam for limit _ bids to simplify API calls and improve request structure for better performance
camel - 10635 fixed the test error of staxconvertertest
[ flink - 32189 ] [ runtime ] include the configmap name in the zookeeperleaderelectiondriver ' s tostring ( )
[ calcite - 4215 ] correct wrong description of sqlsessionfactorybean
3rd party module : remove the dependency on reflectutils for method invocation ( # 7345 )
replaced Gdx . app . error with GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing a specific exception when reading fails
added a method to check if the current thread local deadline is not null and integrated it into the RawStoreProxy to improve timer management by ensuring the deadline is started only once
added handling for ClosedChannelException in NettyRequestExecutor to provide clearer error messages related to socket closure issues
added null check for item genres before setting text in ItemListActivity to avoid potential NullPointerException when no genres is available
[ flink - 25937 ] [ checkpoint ] fix reset hook invocation in checkpointcoordinator . reset
add a new ` ` component ' ' that hold a collection of mapped container ( # 2788 )
[ iotdb - 3459 ] fix walnode getoldestunpinnedmemtableinfo ( # 8709 )
fix # 1885 - retry same host on callback failure in http client
fix checkstyle issue in org . oracle . truffle . tutorial
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL query functionality to ensure proper handling of escaped characters in SQL Server queries
added @ NonNull annotations to constructors in CamelModule class and improved null check for routes in JoobyBeanRepository to enhance code robustness and prevent potential null pointer exceptions
remove unnecessary synchronization in javfxport . getclient ( ) . isalive ( )
updated the package structure for ParameterFlags from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider ` to better organize related components under the provider namespace
add type check to crop image view setup ( # 854 )
removed appName parameter from configure methods in InputRC . java and its usage in LineReader . java to simplify method signatures and improve code readability by eliminating unnecessary appName parameter
[ gr - 38272 ] do n ' t remove ignored dependency from uninstallegistry .
[ java ] fixing headless mode in chrome test to be consistent with headless mode .
versionedvalue : use intern ( ) to reduce memory allocation
added support for " MOVE " status in the connection status check to ensure proper handling of additional data types in the database connection
added a new date format " t " to the ISO8601 _ PERIOD _ MICROS date format to ensure consistency with ISO8601 format for date objects
updated import statements to use the non - shaded version of Google Commons to resolve dependency issues by eliminating the curator shaded version
[ flink - 21954 ] [ runtime ] fix the race condition of hsubpartitionmemorydatamanager . startspilling
updated permission checks for untrusted visit in the plot process to ensure proper handling of untrusted visit permissions for players
fix possible npe if provider be n ' t register yet .
updated the condition in BasicURLNormalizer to include additional hex values to ensure proper URL normalization for curly bracket scenarios
changed access modifiers of methods related to remote animations and transitions in QuickstepTransitionManager to enhance encapsulation and restrict access to methods for better maintenance
pdfbox - 4892 : optimize by avoid compare double , because of potential npe
added ` getProjectPath ( ) ` method to ` ProjectGenerator ` and return a list of generated project paths to improve project path handling and provide better access to generated paths
modified the logic for setting the zero digit in HostLocaleProviderAdapterImpl . java to ensure that the zero digit is only set when the calendar ID is within valid range to avoid potential errors
added a new file MSwingUtilities . java to handle image scaling and display exceptions to provide a consistent and interactive way to display exceptions in the user interface
camel - 7094 : camel - mail - producer should use async producer so it work in background thread .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable refresh scope for improved synchronization during authentication processes
added unit test base on user forum issue
added Main and ScriptRenderer classes for external scripting functionality to facilitate the integration of JavaScript in the application
modified the condition to check for ` _ inputState = __ none ` in ` Request . java ` and added a new test for reading parameters in ` RequestTest . java ` to ensure proper handling of requests and validate query processing after reading
added checks to ensure glyph dimensions are greater than zero and implemented a method to check if the actor is a descendant of a flick scroll to improve touch focus handling to prevent potential rendering issues
replaced context shutdown hook execution with a new close hook execution in DeploymentManager . java to improve error handling during context shutdown and ensure proper callback execution
make lexiconrecipemappings more consistent . no need to copy the item twice .
increase sleep duration in constant timebackuptest to allow for slow machine to complete .
replaced all instances of ` StringUtils . isNotBlank ` with ` StringUtils . * ` and updated conditional check for display to simplify imports and enhance code readability by reducing verbosity
fix for : http : / / code . google . com / p / mybatis / issues / detail ? id = 536 : use getclass ( ) . getresource ( ) instead of new url implementation
added a new file FieldUtils . java for utility methods for field accessibility checks to provide utility functions for accessing and setting field names using reflection
removed unnecessary condition check in DeferredAttr . java and added a new class DoubleStaticImport . java to simplify the code logic and facilitate lock management for attribute modes
updated layout inflation from ` mLauncher . getLayoutInflater ( ) ` to ` mLauncher . getLayoutInflater ( ) ` and added padding and content adjustment for widget content to streamline layout inflation and ensure proper layout adjustment for widget widgets
fix update account setting when user try to save an account .
added a method ` setVar ` to handle command - line arguments for setting help information to enhance user experience by providing help instructions when required
fire worldevent . onanimaltame for catentity ( # 7848 )
windowframe : fix handling of null and specific numeric value for unsigned range
pdfbox - 3017 : show the appearance of the normal appearance field , a suggest by derek liu
nutch - 835 - ensure default mode is set for app in pagelistcontroller
added support for optional Docker file paths in ImageFromDockerfile and created a new test class for it to enhance flexibility in specifying build images and ensure proper functionality through testing
when cpu sampling and lock contention monitoring be run together , some thread can be register twice - do not override old info
fix incorrect check for 0.0001 f in piechartrenderer . draw
[ flink - 21695 ] [ checkpoint ] add more log for task recovery in singleinputgate
added new table types to the Schema . java file to enhance functionality and maintainability of the schema structure
added minimumSimilarity parameter to FuzzyQuery and modified related classes to improve similarity calculations to enhance query flexibility by allowing more precise similarity calculations
rename the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java ` to improve clarity by indicating that the method sets the action view
Layoutinsteadofencoder : add the support for set the ` immediateFlush ` property in the enclosing appender
added additional auto configuration classes for Rabbit and Kafka in ZipkinAutoConfiguration to ensure proper loading of configuration settings for Rabbit and Kafka services
added null check in JLayer . remove method and created a new test class bug6875716 . java to ensure proper handling of null components to avoid potential NullPointerExceptions
updated import statements to use the non - shaded version of Google common libraries to resolve dependency issues caused by shaded imports
use the unwind block in the blockmap for exception dispatch to prevent further processing .
refactored mask handling in Label . java to separate legacy renderer and added getter / setter methods to improve code readability and maintainability by consolidating rendering logic
replaced custom inttofourbytes method with guava ' s ints . tobytes method .
added a null check for mObserver in the NavigationModeFeatureFlag . java file to ensure safe operation by avoiding potential NullPointerExceptions
removed the generic type parameter from the ` thenComparing ` method in ` Comparator . java ` and added a new test class ` Department ` in ` TypeTest . java ` to simplify the type handling and ensure the comparator correctly operates as expected
refactor DocIdSet class to improve code structure to enhance maintainability and readability of the code
updated the end time handling in UserRuleAnomalyFunction to use currentKeyMillis instead of null to ensure accurate time tracking for anomaly results
fix visualscoretagtest to work when parsing integer value
added class loader configuration in MockFactory to ensure proper class loading of MockFactory during mock creation
add a new OriginalFormat class to convert strings to Enums to enhance the handling of enum conversion by providing a clearer format structure
replaced hardcoded date format strings with a constant for consistency to improve maintainability and readability by avoiding magic strings
update JAWTRenderer class for improved rendering functionality to enhance performance and maintainability of the rendering process
camel - 14836 - camel - aws2 - lambda : enable autowire on the aws - lambda client , fixed test
cloudstack - 7461 : make sure mac address be not in the network ( # 7219 )
removed redundant check for " Authorization " in string header name comparison to simplify the logic for handling authorization headers
change method from submit to execute in TraceableExecutorService class to improve task execution handling in context - aware scenarios
added getDetails method to Authentication and its implementation in AbstractAuthenticationToken and UsernamePasswordAuthenticationToken classes to provide and retrieve remote address details for authentication requests
updated the random boolean generation logic in SolrTestCaseJ4 . java to ensure the random number of points is set to 5 to improve variability in the test cases
replace the method ` appendDot ( ) ` with ` endSentence ( ) ` in multiple classes to improve clarity and consistency in token endings
updated TimeFormat to include Locale . US in multiple files to ensure consistent locale handling across the console output
groovy parser - well handle sequence of consecutive name argument in method call . add more test
added checks to adjust insetPx for both top and left sides to ensure correct alignment and resizing of inset elements
refactor gesture state handling to utilize a constant for better maintainability to improve code clarity and reduce the risk of null pointer exceptions
replaced ` DateTime ` with ` DateTimeFormatter ` for version formatting in ` LlapServiceDriver ` to improve date handling reliability and clarity in date representation
fix checkstyle issue in util / openblas / openblas _ nolapack . java ( # 616 )
add try - catch to fix build failure
added synchronized keyword to initTxnMgr method to ensure thread safety during transaction manager initialization
increase recovery timeout from 15 seconds to 480 seconds in AbstractDistribZkTestBase . java to allow for longer recovery times and improve stability during recovery processes
added a new class ` SearchResults ` to facilitate the conversion between Hits and other documents in a structured manner to improve code organization and enhance the functionality of Lucene ' s search capabilities
bug fix : threadcpuffleruntime . getthreadcpuffleruntime ( ) return null if there be no threadcpuffler reference
fix race condition introduce by principles .
lucene - 9777 : add 8.10 . 0 - cfs and 8.10 . 0 to backcompat test
updated feature flag from DISABLED to TEAMFOOD in FeatureFlags . java and modified app icon method to use textContains in AppIcon . java to enhance user experience by providing clearer label functionality
add new endpoint for retrieving instance pools from the Helix API to provide users with information on available instance pools
updated the ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods for better clarity and consistency to improve maintainability and readability of the code by consolidating conditions and logic
updated InlineBytecodeGenerator to include the isToString ( ) method in mocking behavior to ensure mocking interfaces are correctly converted to string for accurate mocking behavior
added debug logging statements to CxxCompileStep and CxxPreprocessStep for better traceability to improve troubleshooting and monitoring of compilation and preprocessing processes
implement a method to remove characters from a string and update the string replacement logic to enhance string manipulation capabilities by allowing safe removal of characters
fix : metadata service url param ( # 12353 )
[ drools - 7 ] add datatransformer interface to allow kie - runtime - processing to transform / compile expression
distgraph : fix cast to number [ ] [ ] in getdist ( )
removed the boolean variable ` interesting ` and simplified the conditional check for ` m ` in ` FormatStringChecker . java ` to ensure proper handling of the null and empty checks before processing the code
removed unnecessary whitespace in the ElectionContext class to improve code readability and maintain consistency
refactor ITestDbTxnManager to improve code structure to enhance maintainability and readability of transaction management logic
refactor database connection handling in DatabasePlatformFactory . java to use try - with - resources for better resource management to ensure proper closure of the connection to prevent potential memory leaks
added a test case for the MapModel in CodeFirstPojoClient and CodeFirstPojo classes to enhance functionality to verify the map functionality with user data
pdfbox - 3663 : dry refactoring of validation , a suggest by valerybokov
fix # 3882 : scale dialog incorrectly reflect new selection state
fix crash on forge with no step .
pdfbox - 4892 : avoid memory leak , a suggest by valerybokov
changed the type of the keys variable from SortedSet to LinkedHashSet to maintain the insertion order of keys for consistent iteration
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 and added a @ Override annotation in PageListController to improve touch event handling and enhance code clarity
updated preload dependency from " libdc1394 - 22 " to " libdc1394 - 25 " to incorporate a new library version for improved functionality
added a conditional check for agent support before setting the list of constructors to public in MainMockTransformer . java and created new test classes MockStaticWithPrivateCtor . java and MockStaticWithPrivateCtor . java to ensure that public methods are only accessible when not in the agent ' s context
pdfbox - 2852 : fast fix for string and array object comparison , a suggest by valerybokov
bug 54777 - add setwindowtitle ( ) method and documentation for java . awt . x11
updated depth calculation based on pixel size for better transparency handling to ensure correct depth value is assigned when using a 32 - bit color model
throw httpdatasourceexception with error response body in case of unsuccessful response
added a exit method to TopLogging and modified TopThreadGroup to call this method to simplify exit handling by providing a more informative error message
updated the calculation of the start index for regex matching to correctly handle cases where the regex is not global
disable optaplanner test due to ppl - 468
fix ( freezev2 ) : fix wrong index used in defaultallocator
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to improve data cleanliness by removing unnecessary entries without feeds
modified the ` appendToLabel ` method to return the current instance to improve method chaining and usability
[ java ] add idlestrategy for good control over idle and backoff .
modify CacheControlHeadersWriter to check for HTTP status being NOT _ MODIFIED to ensure that caching headers are only enabled for non - modifiable responses
renamed methods and classes from ` SpliceInstrumentListener ` to ` ToolEvalNodeFactory ` and updated references accordingly to improve clarity and maintain consistency in naming conventions across the codebase
remove unused method painttabarea from synthtabbedpaneui ( # 797 )
refactor KrakenMarketDataService . java and KrakenMarketDataServiceRaw . java to simplify the depth retrieval process by using an argument for depth arguments to enhance code readability and ensure correct argument type validation
camel - 15605 : file component : added getpath method to file and fileendpoint . thanks to aaron birkland for the patch .
added JSON serialization and deserialization support for JavaProvenance to enable proper handling of classpath elements during the build process
added logging for registered Hive UDFs and modified deterministic check in HiveFunctionRegistry . java to improve traceability of registered functions and correct deterministic type checking
increased loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage and performance evaluation
make unhandled columnfamilyexception more specific . patch by jbellis
added a check for writable output files to handle root permissions to avoid errors during test execution when files are writable due to root access
do n ' t crash when get package info for a component that be not enabled .
cloudstack - 8266 : change db upgrade path from ` ` where ' ' to ` ` where ' '
updated exception handling logic in AbstractFaultTolerantChunkOrientedTasklet and added new test cases in FaultTolerantChunkOrientedTaskletTests to improve fault tolerance behavior during write operations and ensure proper handling of exceptions
fix # 2404 - ignore case insensitive line completion from completion
added new imports and modified the method to return a list of global data tables to enhance error handling by including additional data tables in the list
added a overview dismissal mechanism in TaplTestsTaskbar . java to ensure tasks are properly displayed when the workspace is in use
bug 10495 : added dbupgradeutilities to make sure that the database upgrade work
removed unnecessary null checks and improved connection handling in LdapClient . java to simplify the code and enhance readability while maintaining functionality
updated sequence action index handling to use a local variable to improve code readability and maintainability
added login and current keyspace management in CassandraServer to enable tracking of database operations to improve application stability
added handling for synthetic fields in ReflectUtils . java to ensure correct processing of synthetic fields during reflection processing
added LoggerProvider to manage logging configuration and application - related components to enhance logging capabilities and enable integration with Ninja applications
updated the ` ImmutableMap . Builder ` to use ` Object ` instead of ` String ` for port handling to simplify the code and improve type consistency when dealing with values
added deprecation warning handling for configuration issues in SpringFactory to ensure users are aware of potential configuration issues that may occur during the build process
add a deepStart method that returns the deep start from an array of startables to enhance functionality by allowing direct handling of multiple startables
remove shape . reserveprimitivestringarray , deprecate since 20.2 .
add ilasertargetblock interface to allow for easy handling of laser tile
refactor object name validation logic in AbstractJdbcDatabase to streamline logic for clarity and maintainability
removed unused imports related to caching and token processing in TestSolr4Spatial2 . java to improve code cleanliness and maintainability by eliminating unnecessary dependencies
8274394 : test / java / lang / class / memorylimittest . java fail because of 2 * pageSize mem
removed null checks and added a condition for non - empty norm in RequestHandlers . java to simplify the handler registration process by ensuring handlers are only added when there is a valid norm
replace ' - ' with ' . ' in the logger name retrieval method to ensure that the servlet names do not contain hyphens in their names
updated imports and added methods to handle PythonTHONPATH environment variable to improve code clarity and maintainability by using Google Commons libraries
updated frame size handling in DirectAudioDevice and Toolkit classes to ensure robustness by checking for negative frames to prevent runtime exceptions
[ calcite - 1988 ] handle null enums in elasticsearchsearchstringlookupservice ( jonathanhurley )
updated error message format in CommitLogReader . java to include more context to improve debugging by providing more context in error messages
added assignment of the policy from containerScope to ensure the WebSocket session uses the correct policy configuration
removed unnecessary check for static fields of the current type in the Java2TypeScriptTranslator to simplify the logic for determining if static fields are present in the TypeScript translation
added a webroot parameter to the UserService context creation to allow dynamic configuration of the web root directory
camel - core : migrate component - kubernetes - tests to junit5 ( # 4422 )
remove reflection use for getcomponentlist , it do n ' t work well ( potential npe )
updated method names from ` printHeaderObject ` to ` createHeader ` in multiple formatter classes to enhance clarity and consistency in header creation
replaced multiple specific imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and prepare for future stop order functionality
reset the buffer in the ReduceRecordProcessor to ensure the buffer is reset before processing new data
added null checks before setting foreground and background for mSourceView to avoid potential NullPointerExceptions when mOriginalForeground or mOriginalBackground are null
updated comparison in FloatingDecimal . java to use a strict less than operator to correct the range check for decimal exponent values
updated propertyType check in PropertyDescriptor . java to use ` isAssignableFrom ` instead of ` isAssignableFrom ` to ensure correct type validation for property types
removed the maxVersion parameter from the getVersions method call to streamline the method by eliminating unnecessary logic
build origin header should be set to ` ` https : / / ' ' , not ` ` http : / / ' '
updated task visibility and animation logic in RecentsView and TaskView classes to enhance user experience by improving visual feedback during task overlays
fix orc reader bug for illegal multi - value field , by add the field to the exception message
remove bipbop 4x3 sample that do n ' t work ( # 6368 )
hhh - 7566 - implement support for additional hibernate / jpa provider in jpa provider .
updated log initialization to use the correct class name for ExecRPCInvoker and WritableRpcEngine to ensure correct logging context for improved debugging and logging
added diagnostic listeners and a test for union - and - fixed fields in TestSpecificCompiler . java to enhance error handling and validation during code compilation
modified WebSocket session creation logic to return early if the session is not active to ensure that only active sessions are added to the WebSocket implementation
reduce delay in sec to reduce cpu usage
update xwork dtd mapping to replace openSymphony group with apache struts
[ fix ] issue with webcaminputpanel not call video track .
changed the type of chartData from List to ArrayList and added a new BittrexChartDataPeriodType enum to improve flexibility in handling chart data and implement a more structured approach for retrieving market data
remove unused import and fix a few javadoc issue .
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` g ` method call to optimize performance by skipping elements instead of substreaming
hhh - 10973 - fix nullpointerexception in composite identifier generation for entity property
rename findfulltext to downloadfulltext because it ' s a tooling - friendly
[ type : refactor ] fix shenyu client register command ( # 4596 )
refactor WebSocketMapping and WebSocketUpgradeFilter for improved clarity to enhance code maintainability and readability
added a check for the OSDB hash before retrieving parameters in OpenSubtitle . java to ensure that the OSDB hash is not blank for improved code stability
added token transfer functionality in RuntimeImpl and utility method in MUtil to ensure proper token management during contracts to maintain contract integrity
camel - 2321 fixed delete file in stepwise mode . thanks to david roe for reporting and the patch .
fix ( jackson ) : fix default search bind password ( # 4176 )
modified the condition checks in MapJoinOperator and HybridHashTableContainer to ensure correct handling of empty results and improve hybrid hash join configuration
refactored HTTPSPDYAsyncEndPoint to accept a specific AsyncEndPoint instance to enhance flexibility and correctness in retrieving remote addresses
added the " id " extra to intent across multiple adapter classes to ensure consistent identification of tweet data in the intent
refactor connection handling in HttpURLConnection to improve clarity and functionality to enhance user experience by properly disconnecting web devices based on proxy authentication
[ issue # 4186 ] fix indexoutofboundsexception in tracecontext ( # 4187 )
refactor various classes to improve JWT handling and code clarity to enhance maintainability and readability of the code
disable this test a it can easily fail in the build server
[ bz - 1155852 ] remove unused method in resourcefactoryserviceimpl
changed predicate types from IN to NOT _ IN for various ByteNotInPredicate , CharNotInPredicate , DoubleNotInPredicate , IntNotInPredicate , LongNotInPredicate , and LongNotInPredicate classes to clarify that the predicate is not applicable for various data types
remove exception handle for account not find exception in the app
added null check for witnessService before validating witness permission to prevent potential NullPointerExceptions during permission validation
updated the way the tagged column is constructed in JoinDesc . java to improve clarity and ensure proper retrieval of expression strings
added a conditional check for the presence of the javadoc before setting the item to avoid unnecessary setting when the javadoc is not present
refactor CompiledICHolder to use holderMetadata instead of holderMethod and add a new RedefineInterfaceCall class to enhance type management and introduce interface redefinition functionality
fix bug where tabs would fail to show ( # 5040 )
[ flink - 30542 ] [ connector / kafka ] make metricgroup immutable outside of bulkformat
updated the calculation of the y - coordinate in the Polygon class to ensure proper positioning of graphics based on current coordinates
modify the cache creation to use a parameterized @ Configuration annotation to ensure proper type handling and avoid potential ClassCastException
fix arrayindexoutofboundsexception on url . getresource ( string )
refactor ShadowCookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
added permission checks for external tables in Hive configuration to ensure proper handling of permissions for managed tables during storage operations
added braces to the conditional statements in Stage . java and updated ProgressBar . java to improve code clarity and correct positioning of background drawing
[ gr - 37484 ] llvmlanguage should use platform byte order .
updated the PING _ TIMEOUT _ PROPERTY _ NAME from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout " to align configuration with the new window provider timeout configuration
updated initWebViewLogin method to accept a baseURL parameter and modified its implementation to enable dynamic URL loading based on the availability of the baseURL
updated error message for missing JDBC type in CallableStatementHandler . java to clarify the validation requirement for output parameter
updated the date pattern to be optional and modified the audit event acceptance header to remove the ' required ' attribute to allow for greater flexibility in date handling based on the provided date
rename ` exponentialtimer ` to ` precisethroughputtimer ` ( # 1488 )
added soft body removal functionality in SoftBodyTest . java to ensure proper management of soft parameters and prevent memory leaks
changed interface declarations from package - private to public for SourceFunctionProvider , SourceFunctionProvider , OutputFormatProvider , and InputFormatProvider classes to enhance accessibility for external classes
[ zeppelinhub ] improve log output ( # 1467 )
add test and fix for npe in jingle element .
fix crash when drop item from block without redplasma . close # 1543
more change to pipeline to support http / 2 . simple greet sample work now .
refactor member removal logic in the plot class to ensure consistent handling of member removal permissions to improve code clarity and maintainability by standardizing member management logic
updated delimiter formatting in SimpleReport . java to correct line count formatting to ensure accurate reporting of counts by removing unnecessary lines
removed the option to ignore symbol files in the JavapTask and updated related classes accordingly to streamline code and improve consistency in handling symbol file preferences
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and updated associated method names to improve clarity and consistency in naming conventions
refactored contract creation logic to simplify error handling and added validation checks for contract addresses to improve code clarity and ensure proper validation for contract types and addresses
init realsense only when ! applet & & feature . intel _ realsense
temporarily ignore this test while investigate failure in release build
flv : ignore invalid scriptdata name type , rather than fail playback
changed the method name from getRepositoryFactoryClassName to getRepositoryFactoryBeanClassName to ensure proper method overriding and improve code clarity
changed the return type of getExecutableCommand methods from String to List < String > across multiple classes to enable better handling of executable commands in a more flexible manner
changed the assignment of position variables from ' this ' to ' IOSGLES20 ' to improve code readability and maintain consistency with object - oriented principles
remove uploadpathactivity since it ' s not use
modify return statements in SimpleTextFieldsReader to handle total term frequency based on indexOptions to ensure correct handling of total term frequency when indexing options are only DOCS _ ONLY
fix : implicit constructor be not add if the constructor have no source start ( # 1477 )
added database parameter to multiple methods in ColumnSnapshotGenerator . java to ensure compatibility with Oracle database operations
refactor Database . java to improve code structure to enhance maintainability and readability of the code
update springapplicationbuilder javadoc to reflect api change
updated the assignment of indexOptions in DefaultIndexingChain and PointInSetQuery classes to ensure proper reference to the iterator in the classes
remove substring length limit from rawName in SchematicHandler . java to improve performance by avoiding unnecessary substring operations
added a switch statement in AbstractCollectionAssert to handle specific collection types to ensure compatibility with various collection types and improve code readability
changed the Option enum from static to non - static in ProcessExecutor . java to allow instances of ProcessExecutor to have constant options
replaced AlertDialog with DialogInterface for better user interaction in Compose . java and ComposeActivity . java to enhance user experience by providing a more modern dialog interface
replaced the toggleKeepInSync method with a direct call to toggleKeepInSync in FileDetailFragment to streamline the file synchronization process and improve code organization
replaced ` DatatypeConverter . parseBase64Binary ` with ` java . util . Base64 ` for decoding to improve compatibility with Base64 encoding in the application
added new classes ` ControllerCounter ` and ` DBCallback ` to handle MongoDB operations to provide structured data handling in the application
added ' final ' modifier to the ticketId parameter in deleteTicket method to enforce immutability of ticketId parameter
added a new file ` FlywayMigrationRunner . java ` that defines a new application context for Flyway migration to facilitate database migration by running Flyway through a dedicated application context
8274234 : hashmap . isempty ( ) should be use for check if the map ' s size be zero
update the version number from 0.6 . 0 to 0.7 . 0 to reflect the new release and include enhancements or bug fixes
codegen : fix npe issue with orc compression and zk .
added null check for mainValue in LauncherHelper . java and created a new test method in Arrrghs . java to improve error handling for missing main manifest attributes and ensure proper resource management
updated test class names by removing an extra space to ensure consistency in naming conventions across test files
do n ' t use irtype : : _ graalvm in getcompilationirtype and setcompilationgraphsize to prevent assertion error .
bug 56963 : make xssfsheet . setcopyoptions ( ) constructor independent of it
added a method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` and invoked it in ` Launcher ` to ensure the icon loading result is properly reset to avoid potential memory leaks
[ cap ] use the raw character sequence when caclulating the hash
updated layout dimension calculations for task items in IconRecentsView to improve responsiveness for landscape orientation and ensure correct item decoration on different screen orientations
deleted the AddAdapter . java file to remove unused or redundant code from the launcher
fix a bug in nonstaticLifter . fix # 8 .
hive - 14801 : remove unused code in opencastRulesprocfactory # processsortcolumns ( deepak jaiswal , review by jesus camacho rodriguez )
hbase - 8703 . fix up test for logwatcher . getlastevent ( )
added a print statement to Java2TypeScriptTranslator for proper formatting to enhance the readability of the generated TypeScript code
update SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to reflect the latest stable release identifier
added a conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor to ensure the correct proxy proxy is configured for tracing purposes
removed singletonLock initialization in TypeCachingBytecodeGenerator . java to simplify the logic by removing unnecessary checks for singleton lock
polish ` ` add documentation for callback action ' '
fix : html report should not be create if there be no encoding
updated the handling of Maven settings and refactored the return logic in MavenRepositoryMirror . java , and added a new test class for MavenRepositoryMirrorTest . java to improve accuracy of repository mirror retrieval and ensure correct functionality through unit testing
added a name parameter to the constructors and methods in BuildRuleSourcePath , PathSourcePath , and associated tests to enhance clarity and usability by allowing name specification in source paths
updated OAuth callback authorization logic to use ` matches ` instead of ` equals ` for ` serviceClient ` to ensure accurate matching of the redirect URI for client instances
replaced direct calls to ` EMPTY _ ANNOTATIONS _ ARRAY ` with ` AnnotationParser . toArray ( ) ` for better code organization to improve reusability and maintainability of the code
updated method calls for getBadgedDrawableForUser and getBadgedLabelForUser in UserManagerCompatVL . java to improve code clarity by standardizing method calls
updated default value for line separator in GlobalConfiguration . java to provide a fallback option for default output formatting
fix check forDerived class in configurationmanager .
safeguard user input in http request . fix bug in basecontroller
chore : update java and python dependency ( # 663 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to throw an ` IOException ` and added a test for the output of the primary and secondary cells to improve error handling and ensure correct file retrieval for different project workspaces
modified the CountersReader class to enhance the performance of the CountersReader class
updated the methods in AllAppsRecyclerView to directly set containerType values for SEARCHRESULT , PREDICTION , and ALLAPPS to improve code clarity and ensure consistent logging of container types
hbase - 27113 bytebuffallocator should use configuration key instead of hardcoded value ( # 4254 )
[ native ] fix null pointer exception in native join
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types correctly to improve the accuracy of obtaining parameter types in the presence of synthetic or implicit parameters
update randomize test to 2.0 . 12 ( cosmetic change - awt fix , fail on no test ) .
ggb - 2379 fix draw input box position for latex + text
hbase - 27113 fix initial size of region split policy ( # 4827 )
fix issue where cling do not appear in the model ( issue 11186227 )
fix date format issue in managedselector ( # 2572 )
added functionality to exclude specified datasource names from processing to improve the efficiency of bean resolution by allowing more granular control over which datasource classes are excluded
fix undo info not be store in overview ( fixes # 3187 )
[ flink - 4559 ] [ kinesis ] properly handle aws sdk startup
reduce noise induce by 4 bit to reduce noise induce by a 2 bit value .
added comment to explain why unfavorable benchmarks be not possible .
added a test for illegal database names in IoTDBSessionSimpleIT and implemented it in PartialPath to ensure proper error handling for invalid paths in session management
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly reset during garbage collection
replaced ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceRightMarginPx ` with ` desiredWorkspaceHorizontalMarginPx ` and updated margin calculations accordingly to streamline margin handling for different screen orientations
modified formatting and improved readability in CharTokenizer . java to enhance code clarity and maintainability
chore : update gapic - generator - java version to 2.1 . 0 ( # 560 )
cloudstack - 8190 : fix xenserver traffic label for backward compatiblity
fix up dependency bank for next release
removed metricNames from SolrCore and its getter method from SolrCore to streamline the code by eliminating unnecessary metrics management
updated the handling of the working directory and file path in MavenManifestFactory . java to improve compatibility with URL - based operations and enhance code clarity
replaced direct OS name check with a static final constant IS _ MAC to improve code readability and maintainability
fix bad javadoc in jdbcaggregationrepository
fix a bug where we be n ' t update the list at the end of a frame .
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predicate count for accurate testing
added a method to merging properties from configuration in ConfigurationSpringInitializer . java to enhance configuration management by merging properties from all configuration keys
update logback dependency to be compatible with slf4j 1.6 .
replaced HashMap with LinkedHashMap in multiple files to maintain the order of entries in the cache
added logic to retrieve the jdbcHandlerMap instance based on type to improve the robustness of type handling by ensuring the proper superclass is used for each type
added debug logging for writing items in Hibernate , Jpa , and Jms to Improve tracking and debugging of item writers for better troubleshooting
fix parsing of locale property with semicolon . fix # 767
updated Http2Handler to execute IO on the handler context and modified the server start method to improve thread safety and ensure proper context handling during server operations
bug 57840 : improve performance of xssf evaluationworkbook . gettableregisters ( string )
updated SchemaTextDetailType checks and simplified conditional statements for clarity to improve code readability and maintainability by simplifying the conditional structure
updated MongoFactoryBean references to MongoClientFactoryBean in MongoNamespaceReplicaSetTests . java to align with the new MongoDB client structure
replace HashSet with LinkedHashSet for the roots and leaves collections in SparkWork . java to maintain the insertion order and ensure consistent iteration order
added a check to ensure the operator tree properly is cloned before proceeding to improve error handling and prevent potential runtime exceptions during join operations
added a condition to check if the client ID is not null before returning the registered client to ensure that the client is only returned when a valid client ID is provided
clear calloutlist field after each event ( # 3756 )
initialize userName , productName , productVersion , driverClassName , and connectionUrl in MutableDatabaseInfo and MutableJdbcDriverInfo to an empty string to avoid potential null pointer exceptions when accessing database data
update references from ` link _ share _ read _ only ` to ` link _ share _ view _ only ` in QuickSharingPermissionsBottomSheetDialog and SharingMenuHelper to correct the permission reference for sharing views
added LongBuffer functionality to ByteBuffersDataInput for reading long buffers to optimize memory usage and prevent data loss during reading operations
8317980 : ( f ) fileattributes . lastmodifiedtime ( ) should conversion micros to millis and millis
add a new file TestNoEagerReclaimOfHumongousRegions . java to implement and test the garbage collection mechanism in a concurrent environment
added a conditional check to hide the search bar before updating header scroll to improve user experience by controlling search bar visibility based on user preferences
[ java ] fix env router feature to work with new config file
added null checks for ` cur ` and ` next ` in ` LineChartRenderer . java ` to prevent NullPointerExceptions during rendering
added a new action class ` ReloadPageAction ` for reloading the current page in the menu to enhance user experience by allowing users to reload the displayed page
changed log level from info to warn for specific entries in ` plot _ rating ` and ` plot _ flags ` log messages to better reflect the severity of the logged entries in the plot
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest security improvements and bug fixes in Spring
ambari - 18790 . ambari should throw an exception if the configuration type do n ' t have a cluster ( alejandro )
use serviceloader . load instead of factoryregistry . lookupprovider - fix compile error
added a closeTable ( ) method and a finalize ( ) method to HiveHBaseTableInputFormat to ensure proper resource cleanup and prevent potential memory leaks
added stopStatementExecutor method to JdbcConnector , HiveViewImpl , and HiveConnector classes to handle statement executor termination to ensure proper handling and notification when the statement executor is stopped
updated setfeature settings in DocumentFactory and ComplexElementHandler to use generics for type safety to enhance code clarity and ensure proper usage of generics in feature settings
replaced jdb command wait with jdb output completion to improve clarity and accuracy of application exit handling
added a ` getType ` method in ` ShadowContentResolver ` to return a default type from the ` ContentProvider ` to enhance functionality by allowing retrieval of type information from URIs
fixed bug in expressionthreadpoolmanager . removeif ( ) that could cause classcastexception when remove runnables
updated the default HTTP port property from " port " to " vertx . httpPort " to ensure compatibility with the latest configuration settings
replaced ` addCaptureListener ` with ` addListener ` for the buttonTable to improve event handling by using the standard ` ChangeListener `
[ gr - 27927 ] increase default batch size to 3 for busy session .
[ flink - 21743 ] [ runtime ] log error when establish resource manager connection in taskexecutor
fix bug in lambda rewriting when class file not find .
updated exception message format in ProgressBar to improve clarity by including min and max values in the exception message
updated state handling methods to include the owner parameter for better state management to improve message handling based on the receiver ' s state and enhance logging clarity
added new interfaces for Cursor and Row in the database interface to provide a standardized approach for handling database operations
rename various assertion classes and their corresponding imports to improve consistency and clarity in naming conventions
# 391 - add ebeanserver . setbeanid ( ) beanid ... for good error reporting
fix bug : use correct xsl property for add - to - site - descriptor . xsl
replaced the dynamic addition of request matchers with a dynamic list to allow for dynamic modification of request matchers
fix equal ( ) and hashcode ( ) for contact resource .
move request / response initialization from abstractprocessor to abstracthttp11processor so it can be reuse
improve error message on save persistable , also add some more
added a tearDown method to TestIndexSearcher and reset the mock control in TestJdbcDataSource to ensure proper cleanup of resources after tests to maintain data integrity
updated import statements and method calls in SyntaxTests . java to improve readability and maintain consistency in code structure
renamed ConnectionModel and ModeledConnection classes for clarity to enhance code readability and maintainability by improving class structure
tika - 3778 -- remove unused code in parserdecorator . parse ( inputstream ) and replace with abstractmultipleparser
improve fml security manager logic for minecraft client and server .
refactor variable declarations in AccountUtils , IndexedForest , and CustomPopup classes to improve code readability by following common syntax
fix test after rename / swap refactor
added a new test method ` testJsxComment ( ) ` and modified logic in ` Parser ` and ` DumpingVisitor ` to enhance testing coverage for JavaScript comments and improve code readability
added ScreenRecord import and annotation to AddWidgetTest . java to enable screen recording for test case and track related bug b / 195263971
added a test case to print errors when Buck configuration is missing in BuildEndToEndTest . java and CxxEndToEndTest . java to ensure that errors are properly handled when the Buck configuration is not present
added physical memory checks in TestStringBufferAndBuilderGrowth . java to ensure tests run on a valid physical memory for better resource management
doc : update custom converter doc ( # 8638 )
added a success flag to HiveMetaStoreClient . java to indicate successful execution of the operation
updated comparison operator for " * " in ResourceReferenceInfo . java and modified bundle creation in Dstu2BundleFactoryTest . java to ensure proper string comparison to avoid potential null pointer exceptions
remove ' vine ' from autodetect link for twimg ( # 3390 )
added @ Deprecated annotation to AreaReference . java to mark the class as outdated to discourage its use in future development
refactor ElementType and Target classes to improve code organization and maintainability
added assertions and modified reference kind handling in MemberName . java to improve assertion clarity and ensure correct reference management during method invocation
updated the default value for submit key updates and added synchronization to ensure thread safety during update execution
fix for issue 220 : double click on node in edit node
camel - 2716 : resolve mandatory class from the bean expression . thanks to jens kleine - herzbruch for the patch .
benchmark : fix some javadoc error ( # 65 )
[ java ] do not swallow interrupted exception
added description methods to multiple classes and improved return messages for clarity to enhance code readability and provide precise information about Maven dependencies
refactor modularity to improve code readability and maintainability by reducing redundancy
refactored ProcessEngine class to improve code structure to enhance maintainability and readability of the code
corrected the spelling of ` lock ` in multiple files to enhance code readability and maintain consistency
updated ` PrintMavenAsCycloneDxBom ` to include Maven packaging parameter to enhance functionality to support different Maven packaging formats
fix npe in uiservice . getcomponentat ( ) .
do n ' t call tlsauth ( ) if the ssl cert verification succeed . this be a temporary workaround .
changed method parameters from @ Nullable to @ Nullable in ObjectArraySubject and related classes to improve type safety and clarify that the ' actual ' can be null
updated usage of NutchConf to use getConf ( ) instead of NutchConf to improve consistency and ensure proper retrieval of configuration settings
bug fix on displayed board ( race condition between sheet )
added a method ` getSessionId ( ) ` to return the ` sessionId ` in ` RemoteWebDriver ` to provide access to the session ID for external use
added checks to ensure time interval is not null before setting it to prevent potential NullPointerExceptions when setting up time intervals
removed the use of " - log info - serverPort " command in MockServerContainer . java to simplify the command configuration for server port logging
updated error logging to include exception message to improve error reporting for better debugging
fix http : / / issues . apache . org / jira / browse / amq - 3872 - remove unused robotscleanuppolicy
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
fix test on window by use correct path separator
added alternative path functionality to the ExpectNewDemo class to enable retrieval of alternative audio files as needed
fix for logentryparsetester that fail intermittently due to time out
added protectionDomain parameter to the builder method in BufferAlignmentAgent . java to enhance functionality by providing additional configuration options
fix the water ripples not be dispose properly .
added a configuration option to disable semi joins for external tables in Hive to improve performance by preventing potential issues with external tables due to potential optimizations and operations
updated the authorization header description in TokenKeyEndpointDocs . java to clarify the absence of an authorization requirement for public keys
modified wallpaper offset settings in Workspace . java to set the vertical offset to zero to improve the aesthetic placement of the wallpaper during scrolling
updated the ` return statement logic in ` SequenceSnapshotGenerator . java ` and ` CreateSequenceGenerator . java ` for sybaseASADatabase compatibility to ensure correct behavior of sequence retrieval in specific database contexts
nifi - 220 : this close # 374 . add autocommit = true / false to putsql ( # 3809 )
added validation for creating the parent directory in SnapPuller and created test cases for master and slave xslt directories in TestReplicationHandler to ensure that the replication process correctly creates the HDFS directory for proper file handling
updated AppTarget initialization to use a consistent identifier for the launcher id to ensure consistency and clarity in data representation
add the output to framer . frame ( ) , remove the bytebufs which be not need .
removed unnecessary parameters in several classes for consistency to improve code readability and maintainability
nutch - 2454 update javadocs for parsetext ( ) method to provide more detailed description
updated PlainFormatter to append time using TemporalUnit for milliseconds to improve precision of time representation in the application
replaced TIMEOUT _ MS constant with RETRY _ CLOSE _ TIMEOUT _ MS and added a new close method to AgentRunner . java to improve the handling of timeout scenarios during close operations
hhh - 17491 avoid use reflection # privatelookup in static block
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
update log message from " Closing " to " New " in HiveProtoLoggingHook . java to clarify that the event file is intended for new proto events
ignore this test because it could have too many sample result ,
update error message for rows and columns in GridLayout . java to clarify the validation requirement for row and column limits
updated string concatenation and rendering methods in DecisionNode , WagonCART , and WagonCART classes to improve clarity and consistency in handling feature values during rendering
added order and bound sheet record handling in XLS2CSVmra and BoundSheetRecord classes to enhance data organization and improve sorting functionality
adjusted calculation for average impulse in ThrustCurveMotor . java to correctly calculate start and end measurements to improve accuracy of average impulse calculations
modified the instantiation of InputSystemJme to include an InputManager parameter to ensure proper input management functionality during input system jme display
added assertion and offset adjustments in UniverseBuilder . java to ensure proper handling of hash code fields and maintain correct offset logic
remove block . getmonitors ( ) , deprecate not use
[ hotfix ] [ yarn ] fix typo in yarnapplicationmanagerrunner
tab completion : require at least one character to complete command
update the view replica update logic to include ` writeCommitLog ` to ensure correct handling of commit logs during view replica updates
added functionality to manage clipboard state and a default button ID in the result handler to improve user experience by ensuring clipboard interface reflects current state and providing a consistent button ID
added a test for batching in JoinedTableTest to validate batching behavior to ensure proper handling of batched data in the Hibernate database
added handling for EntityExistsException in JpaPersistenceService to improve error logging clarity for duplicate timestamps during persistence
removed deprecated format option from CucumberOptions and updated related plugin handling to streamline code and encourage the use of outdated options
removed the save ( ) method call from the PMS class to eliminate unnecessary functionality for saving data
removed unnecessary keyboard hiding when the text is empty in ExtendedEditText to simplify the code for better readability and performance
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and created a new ` Capacity . java ` class for testing capacity behavior to improve efficiency of capacity calculations and ensure consistent capacity behavior between StringBuilder instances
replace ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` to improve note saving handling in the DetailFragment
patch from tim allen from bug # 4530 - support for endnote document
added clientInfo to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager and modified CasEventsReportEndpointTests to include additional parameters to enhance event details for better context in authentication transactions
add test for gdal version in ` bridjogrdatastoretest ` [ geot - 5253 ] ` ` -- version ' ' command
fixed crash when close the application in the studio .
fixed bug in debantart ripper and add more logging
removed unnecessary imports and simplified the loop structure for clarity to improve code readability and maintainability by eliminating unnecessary casting
updated rendering logic in PJOGL . java to support different scaling behaviors based on AUTOMAX _ PIXELSCALE and improved texture rendering to enhance rendering flexibility and accommodate different screen resolutions
show create button ' flutter create params ' if pub be unavailable ( # 2088 )
refactor DiskDocValuesConsumer to utilize BlockPackedWriter for writing bits and improve block size handling to enhance performance and maintainability by reducing memory usage and utilizing a block size for serialization
camel - 13635 : polished code and fix a bug about status code
removed unnecessary data processing and stream processing in GoAwayTest . java to simplify the code and improve efficiency by directly handling headers
added property introspection for fluent setters in ReflectionUtils . java and created a new FluentSetterBean class for testing to ensure proper handling of generated beans with fluent setters in the project
replaced ByteStreams with HttpResponse in BlockingHttpEndpoint and HttpEndpoint classes to enhance response handling capabilities and improve code consistency
camel - 14056 : fix file sort by expression test
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to ensure accurate representation of the last appeared task target
added property to set write image scaling and offset value in table row definition for pdf / a - 2 and pdf / a - 3
modified the column addition logic to include conditional aggregation based on the SQL constant to enhance functionality by conditionally generating aggregate function names when enabled
updated test classes to extend ` WithNestedTests . AbstractNestedTest ` instead of ` LuceneTestCase ` to improve compatibility with nested test scenarios
added functionality to set the XCap server URI if the registration is enabled to ensure the user interface reflects the current registration state
ww - 5184 add struts . handle . exception to enable log and continue when not in dev mode
added stopTextEditing methods to CodenameOne and TextArea implementations to enable graceful handling of text editing behavior
nifi - 1087 : ensure that a non - existing group attribute be not set , also add a test case to prevent npe .
modified the ` showDialog ` method to differentiate between creating and displaying components to improve clarity and functionality based on the component ' s state in the dialog
add some logging to help diagnose rare thread issue .
added a conditional check for the operating system in HTMLDataFlavorTest . java to ensure the test is only run on Microsoft Windows to avoid failures
added SQL _ SERVER _ SNAPSHOT to the SERIALIZABLE method in TransactionIsolationLevel . java to include a new snapshot configuration for improved transaction management
fix sporadic asyncwriteengine on shutdown
replace jrecompat . getinstance ( ) with zip . open _ read and use the java . util . zip . zipfile
modified service creation logic to check for a command class before creating a new RegisteredServiceImpl to ensure proper service creation when the command class is not already set
make disk _ failure _ policy default to ignore , and add new switch to ignore . patch by jbellis
ripperinterface and ripstatushandler should not be public .
only filter out non -et address from peerdiscoveryagent . resolve issue 426 .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the job identifier configuration process
added ClusterDataCache to the computePartitionAssignment method in PinotSegmentRebalancer . java to improve partition assignment performance by utilizing caching
[ java ] deleting container : remove automatic removal of container to enable automatic removal of container
simonstewart : fix a bug in defaultselenesection ( command parse ) that could lead to arrayindexoutofboundsexception
add retry to creatglossarytests ( # 2289 )
schema : refer to component specific schema , not only for ` ` allof ' '
updated EntityDeletedEvent to use JsonUtils for JSON serialization instead of direct object conversion to improve data handling and ensure consistency in data serialization
added GOP handling in FormatConfiguration . java and updated related imports in DLNAMediaInfo . java and LibMediaInfoParser . java to correctly identify and handle GOP formats in media files
added a new file TestProfileReturnTypePrinting . java with performance testing methods to evaluate the return type printing performance of different class instances
added concurrency control for accessing configuration properties in ParseConfigUtils . java to ensure thread safety during configuration updates
added AcquireReleaseColumnsSegmentOperator handling to MinMaxValueBasedSelectionOrderByCombineOperator to ensure proper management of segment acquisition and release logic
simonstewart : remove the @ ignore annotation from the firefoxprofiletest that we need to figure out why the file be not show up .
updated method signatures and return types in HasAndroidDeviceDetails . java to enhance clarity and usability of device details management
remove redundant call to projectstats . addbug ( ) , it be n ' t need .
bugfix # 21221 - do not use font font for disabled label on gtk laf
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline the code and improve readability
fixed bug in scheduleaction , when there be no period in the future
replaced the upload button implementation with a menu item for the single upload to streamline the upload process and improve code maintainability
refactor multiple classes related to expression handling and enhance organization to improve code clarity and maintainability by aligning naming conventions
added ` loadMetaData ` method implementations for ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading metadata from an input stream for improved data handling
added WritableSerializer to handle Hadoop data types in CrawlDbReader . java to enable proper serialization and deserialization of Hadoop data types for improved data handling
fix bz 65384 - remove unused test case
updated the MDNSDiscoveryService component to include a configurationPid for the discovery service to enable dynamic configuration of the discovery service in the application
chatviewerfragment : fix crash when a message be n ' t find in the chat .
fix testbpoindexreorderer # testbpoindexreorderer occasionally fail
removed redundant assertions checking for roles specific to DATANODE and NAMENODE to streamline test logic for role command order validation
added a method to restore local information from table info and modified the writeObject method signature to enhance functionality to ensure table information is reset correctly and avoid null pointer exceptions
formatted if statements for consistency in multiple files to improve code readability and maintainability
added matrix transformation to the sprite batch in BitmapFontTest . java to ensure proper rendering by applying scaling changes to the sprite
[ flink - 21746 ] [ table - planner - blink ] explicitly ignore python aggregate in pythongroupwindowaggregate
fix race condition in gossip due to race condition . patch by jbellis
added a method to retrieve unreachable token owners in Gossiper . java and updated references in StorageProxy . java to improve code clarity and functionality by accurately reflecting the method ' s purpose
apps - 3776 do n ' t use instanceof check when determine if the expressionnode be already an expressionnode
updated content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to ensure correct content type is set based on request context
changed variable access modifiers from static to private for display and configuration in XToolkit . java to improve encapsulation and ensure proper resource management
mahout - 790 add javadoc for Recommenderjob and Abstractjob , and remove relate comment
replaced synchronization mechanism with ReentrantReadWriteLock and ReentrantWriteLock for better readability to improve concurrency management and prevent potential deadlocks when locking
added a test for reading identity providers in different identity zones to ensure proper functionality of identity provider methods under different scenarios
updated scheduling job to use ExpireJob and added null check for timestamp to improve job scheduling accuracy and prevent potential null pointer exceptions
cas - 1563 : remove unused import to fix build
update the version of rebalance to avoid spamming the log when it ' s take too long
added support for detached directory mode in multiple configuration classes to enhance flexibility in managing detached directory directories for different operating systems
[ java ] add logic to pause a cluster message when there be a slow follower .
fix label for recent auth rather than authors3
refactor Cxx platform handling in DBinaryDescription and DLibraryDescription to utilize CxxPlatforms to improve code maintainability and streamline dependency management for C++ libraries
[ camel - 14263 ] camel - google - cloud - api : do not clear service on destroy ( # 10971 )
camel - 8514 : fix dynamic file completion not be able to delete a done file when use file consumer .
added a new configuration option ` reopenReaders ` and modified the conditional check in ` SolrCore ` to enable conditional reopening of readers based on configuration settings
mapwriter : add dialect to freeplaneversion ( for easy debugging )
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class with multi - field support for date and timestamp in MongoDB updates
added a new method ` dup ` in ` Attr . java ` and a new test class ` PrimitiveTypeInBoundForMethodRefTest . java ` to enhance type handling and provide a test for the mapping functionality
refactor condition implementation to an interface and simplify its usage to enhance code readability and maintainability by reducing verbosity in method implementations
replaced TermQuery with ConstantScoreQuery in TestFacetsCollector . java to improve query performance and maintainability by utilizing a more efficient query implementation
removed several unused imports related to Java ' s invoke package from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability by eliminating unnecessary dependencies
refactor upload controller to provide a direct nearby upload preference instead of a default context to improve configurability and maintainability of upload preferences
mondrian : add support for mode . sys dummy1 , it be use by the mysql driver .
updated logging statements for clarity and improved formatting in TraceGatewayEnvironmentPostProcessor . java to enhance code readability and maintainability while ensuring proper logging structure
added lastPid tracking and improved property retrieval in POIXMLProperties . java to ensure accurate tracking of last process IDs and provide clearer code structure
# 4149 - fix handling of negative infinity in tiff
hive - 23755 : show session status in kerberized hive command line ( jesus camacho rodriguez , review by gopal v )
replaced ` Executor ` with ` Scheduler ` for asynchronous operations in ` MockRestAdapter ` to improve performance and responsiveness of asynchronous operations
[ type : bug ] fix bug query fail because there be too many rule ( # 4499 )
added an ` addExitDescription ` method to ` ExitStatus ` and removed stack trace printing from ` AbstractJob ` and ` AbstractStep ` to enhance exit description functionality while preserving stack trace details for exceptions
do n ' t spawn multiblock on the client side when right click block
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand . java ` and update related references to improve clarity and consistency in naming conventions
fix a bug in the min - bound bound handling of the plot configuration
IOS : fix issue with input placeholder not be show . ( # 1868 )
replace params . getBuildTarget ( ) with nativeLinkable . getBuildTarget ( ) to ensure correct link handling for the build target
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more descriptive parameter name
advservicetest : remove assertion about null message
updated method names and logic in MappingMongoConverter for clarity and consistency to improve code readability and maintainability by using more descriptive variable names
fix for # 1437 : nearbymapfragment do not print place description on click
camel - 12727 : fixed api incompatibility with old sdks ( # 12332 )
lucene - 12630 : fuzzylikethisquery . extractterms ( ) can return null if the field do n ' t exist .
updated method for writing application links to support a boolean parameter for better flexibility to improve display of app links in different formats
refactored to use identifierservicefactory instead of dspace . getservicebyname ( ) .
replaced the use of ` bytes . length ` with ` bw . getLength ( ) ` for length assignments to improve code readability and maintainability by using the appropriate method for length retrieval
changed the method signature of getDisplayScript to return a String instead of being abstract to provide a default implementation that returns null for the method
replaced keyToPress and keyToRelease with a single sequence in RemoteWebDriver . java to improve flexibility in handling key press and release sequences
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
added synchronization and error handling for empty active interfaces in NetworkConfigurationWatcher and null checks in NetworkManagerListenerImpl to improve thread safety and prevent potential errors when no active interfaces are active
fix bug # 45538 - improve performance of hssftworkbook . getallembeddedobjects
removed unnecessary import of Shdr from ShaderNodeLoaderDelegate . java to streamline the code by eliminating unnecessary dependencies
replaced hostParams with roleParams in AmbariManagementControllerImpl . java to ensure proper order of role parameters for hosts and roles
fix for dsm2 on osx ( bug # 767 )
fix ( opengl ) : call gl11 . glpopattrib instead of glstatemanager . popattrib in modelHourglass
fix issue with display date when there be no program
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new test classes ` CommonParentTest . java ` and ` ChildA . java ` while updating ` MainMockTransformer . java ` to enhance method resolution capabilities and improve test organization for nested classes
when load libfreetype . so and libfontmanager . so , the libfreetype . so will be load with the correct jar .
[ j2kt ] fix handling of multi - variable function in q2
[ gr - 42398 ] do n ' t treat loop condition a non - overflow guard .
change type analysis in typeframemodelingvisitor to understand if the method be be instantiate at the end of the path .
added a new ` LocalizedString ` class and modified ` Attr ` and ` MethodArguments ` classes to utilize it to improve code clarity and provide localized string representations for method and method arguments
add an option to disable classpath search in the serverconfig ( # 7059 )
changed ` formats ` to be ` final ` and replaced string array copying with ` Arrays . copyOf ` for consistency to enhance immutability and improve code readability
updated default retries value from 0 to 2 in Reference . java and adjusted corresponding test assertions in AnnotationPropertyValuesAdapterTest . java to ensure retries reflects a maximum number of retries for improved functionality
added JSON and settings loading functionality in TexturePacker . java to streamline settings handling and improve code clarity
added UI components for uploaded images and used images usingWikiTextView in AchievementsFragment to enhance user interface clarity by displaying relevant text for uploads and uploads
added mockLogger and logger configurations in TranslatingJavacPhaseTracerTest . java to enhance annotation processing and performance monitoring
updated the API endpoint to include ` categoryinfo ` property and added a new ` CategoryInfo ` class with related methods to enhance category information handling and improve code clarity
saml : fix typo in authrequest . haspassword ( ) ( # 2370 )
added accessibility features to TaskbarStashController to enhance accessibility features for improved user experience
added support for character outside the ' ^ ' character in GenericSignatureParser to ensure proper handling of signature parsing to avoid runtime exceptions
updated access flags in ClassVisitorDriverFromElement and added new test cases for stubbing interfaces and enums to ensure that generic interfaces and enums are preserved in the generated stubs process
[ sinttest ] fix nullpointerexception in intervalfilter
added unit tests for ` MapInterface ` to validate behavior of ` EntrySetIterator ` to ensure correct iteration behavior of entries in the map
added a serialVersionUID field to the TreeMap class to ensure compatibility during serialization of the class
change image creation time from milliseconds to seconds to improve precision of image creation time
theorem proving : add the grobcov f2m support to the singularws , and make it compatible with f2m
added encryption key deletion for private and public accounts in AccountRemovalJob to ensure sensitive data integrity by removing sensitive keys
add a keepAliveHeaderValue method to AsyncHttpProviderUtils for setting connection header to standardize header name retrieval based on configuration
fix postjoinmapoperation when no interceptor or lite member join , should not create mapcontainer
for # 885 - remove inlining comment processor that have no effect .
remove useless parameter from longhybridhashtable constructor .
fix potential npe in environment variable helper .
ww - 3553 fix import and add javadoc
added import for SerializableMode in Mockito . java to enable the usage of Mockito ' s Mockito features in the testing framework
updated error handling in AbstractBeanDefinition to set a nullable field value to improve robustness by ensuring proper field value assignment for declared nullable fields
improve compatibility for ` ` select ... ' ' statement ( # 1618 )
updated HiveConnection . java to replace references to HiveConf with static final constants to improve code readability and maintainability by avoiding repetition
[ geot - 5563 ] GlobalOrdinalswithscorequery do not mark cache a not cacheable
create a new file TestStrangeControl . java that contains a thread - based test for the strange control to ensure that the strange control behaves correctly in a multi - threaded environment
updated file naming conventions in JsFile and JsLibrary files to ensure consistency in file naming conventions across the codebase
added selection start and end variables to ShadowEditText to enable dynamic selection updates for improved text selection handling
refactor gRPC server startup to use ` Closeable ` for better resource management to ensure proper closing of resources to prevent potential memory leaks
add use ( string , class < ? > routeclass ) method to jooby . use ( string , class < ? > routeclass ) to allow for a custom route .
added a null check for fst in FreeTextSuggester . java to ensure that a lookup is supported and prevent potential errors
replaced usage of line separator to ensure consistent newline formatting in outputs to standardize line breaks across different operating systems
added abi writer class loading and processing logic in JavacInMemoryStep . java to enhance ABI writer functionality and improve logging for better debugging
suppress a warning because booleanmethodisalwaysinverted be not intend to be intend to help debugging .
add check for pullrequest be not stop before execute pullmessage
refactor EnergyEndpointer class to improve code structure to enhance maintainability and readability of the code
updated the logic for retrieving component presets and adjusted column indexing in the ComponentPresetChooserDialog to improve efficiency by using ordered key lists instead of arrays
remove wrong import leave over from clean code
camel - main : fix switch / cases indentation see camel - 14540
added a default value for exported header styles in CxxLibraryDescription and updated related classes to use this method to allow dynamic configuration of the exported header style
deleted the constants . java and DistanceUtils . java files to remove unused constants to streamline the codebase
replaced the method of splitting keys with a more straightforward approach using substring extraction to improve clarity and reduce complexity in extracting keys
ensure we do n ' t attempt to load fallback class method in native - image .
added unit test for creating inline rolebindings in RoleBindingTest . java and refactored role binding creation in RoleBindingOperationsImpl . java to enhance testing coverage for role binding functionality and improve code modularity
added debug logging for session cookie configuration in UaaSessionCookieConfig . java to improve traceability and debugging capabilities during session cookie configuration
update filename calculation to use the day of the calendar instead of a fixed value to ensure accurate file name matching based on the current timestamp for accurate logging
fix typo in checkifabsent . fix # 4460
added error handling for invalid options in JavapTask and created a new T8033711 class for testing to improve robustness by ensuring that invalid options are properly processed and to facilitate testing of the javap process
8274396 : remove use of ` Collectors . toList ( ) ` in java . base
[ hotfix ] [ runtime ] do n ' t return null in taskdriver . getacquiretask
[ flink - 23454 ] [ network ] [ network ] disable tier storage for hybrid input gate
( chore ) camel - mail -gun : use isnotsuccessstatus ( int ) to check status code
fix # 354 , change lwjglapplication default to true
remove unnecessary instanceof check for void method return type ( can happen if the return type be void ) .
updated OutputMacroExpander . java to remove dependency on DefaultSourcePathResolver and adjusted method implementations to improve code clarity and enhance functionality by integrating new utility methods
fix test in cluster mode for logexceptionsqltest
updated conditional logic to check for file paths containing " / build / " to ensure proper handling of file paths containing backslashes
[ # 7532 ] instructor : session result : fix show comment ( # 7577 )
fix checkstyle issue in util / container . java ( # 767 )
added a new file TestEscapeThroughInvoke . java implementing an escape test with a class to evaluate the behavior of object creation and escaping in Java
replaced direct stream skipping with IOUtils . read method for better readability to improve code readability and leverage existing utility methods for better performance
added handling for connection pool startup and exception logging in ConnectionPool and JdbcInterceptor classes to improve connection management and enhance error reporting during SQL execution
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of errors during error handling
hbase - 10635 remove duplicate block from the lrublockcache ( chiaping tsai )
removed redundant check for zero taskCount in RecentsView . java to simplify the code by directly returning based on the task count
added a instance configuration change listener in HelixBrokerStarter and adjusted sleep duration in HelixServerStarter to ensure proper configuration management and improve system stability
added Coinmate static services and updated remote initialization in CoinmateExchange . java and CoinmateExchange . java to implement static retrieval of metadata to enhance the Coinmate service functionality by providing access to metadata
[ mng - 5727 ] warn if $ { basedir } be use within a project directory .
pdfbox - 4892 : save and restore key of a cosobject instead of create a new one
add the ability to set display data ( e . g . empty list ) to transform ( # 27105 )
replaced instances of DefaultSubject with assertThat for null checks to improve readability and adherence to assertion standards
disabled the " jdk . certpath . disabledAlgorithms " security property in ClientJSSEServerJSSE . java to enable more flexible certificate path settings for enhanced security protocols
[ java ] add subcommand and subcommandgroups permission to optiondata . checksubcommandgroups .
updated module - info . java files for mmm and ppp modules to ensure proper module dependencies and organization
added error handling to the ensureConnection method to throw IOException for unknown server errors to improve robustness by ensuring connection errors are properly managed
fix issue where launcher event be not be report a checking event
refactor exception handling in FileSinkOperator for better clarity and organization to improve error handling during writer closure and ensure proper resource management
add diagnostic output to the result of task execution to improve debugging by displaying diagnostics during execution
replaced ` SemanticException ` with ` OptiqSemanticException ` in multiple locations to provide a more specific exception type for better error handling
modified the DataSourceMonitorTests class to enhance test coverage to improve reliability and accuracy of data source monitoring
added a HashSet to track loaded resource paths and modified the scan logic to optimize performance by avoiding redundant scanning of these paths
[ scb - 2373 ] fix npe when run unit test in parallel
add null check to ` RoutingInBoundHandler ` to ensure proper handling of null values to avoid potential runtime exceptions
updated EkeyUdpPacketReceiver to include an optional natIp parameter to enhance logging clarity by including the source IP address
fix circular dependency issue with graphql api
[ java ] move commit log archiver to client module and move commit log replayer to server module .
added validation for header and body buffer sizes in HttpConnection . java and a new test for unexpecting HTTP requests in RFC2616BaseTest . java to ensure proper parsing behavior when headers and bodies are not provided , improving error handling
[ java ] prevent race condition by re - scheduling subscription for upstream flow .
optimize the processing of min sstables when there be no overlap .
1 . x : add miss @ test annotation to testorctimezone1 . java
fix enable metric and timer logic ( # 2882 )
added error handling for JSON exceptions in PinotSegmentRestletResource . java and updated TraceContext . java and TraceContextTest . java to improve robustness by throwing an exception when deserializing JSON nodes
update JTable renderer to handle null column cases and create a new test class for JTable functionality to ensure correct rendering of the default renderer when the column class is null
fix : ideservice should use the environment . shELL if available
updated the index used in delete from 10 to 1 in DatabaseCleaningService . java to delete feed without subscriptions since the corresponding index is now delete
replaced List with LinkedHashSet for testInstances in MockitoExtension . java and added a new TestWithDependency class in JunitJupiterTest . java to ensure test instances maintain insertion order and improve test reliability
updated FieldMonitor class to enhance field tracking functionality to improve performance and accuracy of field monitoring
removed the ` deleteFilesAfterClose ( ) ` method from ` BTreeMapTest . java ` to streamline transaction management and avoid potential issues with file deletion after closing
modified the iterator initialization in SortedIntList and added a new test class for it to ensure proper iterator allocation and prevent potential memory leaks
unregister the remote proxy to free up memory
updated the default writebuffer size from ' 4MB ' to ' 64MB ' in RocksDBConfigurableOptions . java to accommodate larger data sets for disk files
updated the constructor call in Style . java to remove unnecessary parameters to simplify method call and improve readability by using default parameters
fix copy / paste bug in facebookShare . java
remove useless json graph from amzarunner ( # 12946 )
modified audio location to match ocean waves . ogg format and fix a bug that cause the position of the audio to disappear .
[ hotfix ] [ runtime ] fix typo in loopRotatebadnodeBudget
updated the convertToMongoType method signatures to include TypeInformation information to enhance type conversion functionality for better data handling
wly - 238 remove iscomplex call from inputbox renderer , now only replace with { i }
fix sendkeys to active element not be call in the ` ` send key to active ' ' scenario
pdfbox - 3000 : add and scale multi - image optimization , a suggest by oliver schmidtmer
removed the extendArgumentCheck and extendWrapStore methods from DBMaker . java to streamline code by eliminating unused methods
fix ( keyboard ) : add miss call to updateshiftstatenow ( )
removed the ` DETECTED _ ACTIVITY ` constant and related code to eliminate its usage to streamline the codebase by eliminating an unused constant and improving backward compatibility
updated import statements to switch from ` extensionConfig ` to ` protocol ` in multiple Java files to ensure correct package references for WebSocket protocol implementation
added import statement for Buildable in AaptPackageResources . java to enable the use of Buildable rules in the project
replaced direct calls to ` file . readUnsignedShort ( ) ` with comments for unused parameters in multiple classes to improve code clarity and maintainability by explaining the purpose of unused variables
improve error message for invalid upgrade protocol to include status code 101
p11cipher : fix logic error in blockmode ( )
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
removed redundant permission checks for the plot owner to simplify the code logic for better readability and maintainability
removed deprecated getConversationID methods from HttpContentResponse and HttpResponse classes to clean up code by eliminating outdated functionality
move phoneset implementation from freetts to mary to fix compile error .
updated stripQuotes method to use PlanUtils for value processing to improve code clarity and maintainability by centralizing value stripping logic
refactor rendering methods in DLNAResource to streamline the updateRendering process to improve code readability and maintainability by reducing instance variable usage
fix issue with plugins not be load from the plugin registry . ref # hawt - 22
camel - 12399 : fix the test error of cxfrsproducercache2test
doc : fix typo in physicsclient class ( # 1783 )
added JUnit @ Ignore annotation to SessionTest . java to address frequent failures that may lead to test failures
added a new File object instantiation in the ZipFile class to enable file handling based on the provided name parameter
fix # 495 mark trytype . handleall a deprecate - migrate to trytype . handleall
added unit test for create channel instance with null uid ( # 2336 )
added StackTraceUtils class and updated GenericDAOImpl and ForumServiceImpl to utilize it to improve stack trace handling and facilitate better debugging
removed the @ Test annotation from FormLoginIntegrationTests . java to streamline the test suite for improved clarity and maintenance
added a check for argument length before parsing in FunDefBase and ParenthesesFunDef classes to ensure correct handling of arguments when unparseing lists
updated SQL query and error handling in CheckDatabaseHelper . java to improve clarity and maintainability of the code by including cluster names along with their indices
disable unsafeautomaticsubstitutionprocessor with supresswarnings on jdk 11 .
refactor JsonTreeReader to enhance error handling for unexpected JsonElement peek values to improve robustness and provide clearer error messages for unexpected configurations during JSON parsing
added a new command - line option for extra arguments in TestCommand . java and implemented a test case in ExternalTestRunnerIntegrationTest . java to enhance command handling for internal runners to avoid unexpected arguments after the internal runner
added ` dedup ` method to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance functionality by allowing users to streamline the process of deduplications Solr URLs
[ flink - 19837 ] [ table ] make streamsqlexample respect ' planner ' in blink planner
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure proper database state before tests run
updated progress handling in Progress . java and RSSReader . java to use a new display progress percentage and added dispose method to improve UI responsiveness during progress updates
add a check to ensure the parent file exists before proceeding with operations to prevent potential errors when accessing the parent file
added methods to write and close documents in IOUtils . java to improve resource management and prevent file leaks during document writing operations
updated print statements to include carriage return characters in JavaBuild . java to ensure consistent output formatting across different operating systems
replaced ` Box ` with ` BlockBox ` and added methods to retrieve the root and dots per point to improve structure and functionality of the rendering system
sec - 10636 : added support for generic user search in ldap atn provider
added default port handling in NettyHttpServer and related classes to enable default port management for HTTP requests
[ snmp ] set status to online after each test ( # 12946 )
[ # 8792 ] instructor : edit session : allow instructor to submit session without submit permission ( # 8793 )
deprecate and mark set method a deprecate since version 6
simplified path resolution logic in FileResolverImpl . java and added a new WarFileResolverTest . java file to improve path handling and ensure correctness through unit testing
updated string format in DocumentsWriterPerThread . java to include docstores to improve clarity on the purpose of the logged size value
fix unlocalized block print ( # 7371 )
imageprocessor : fix typo in whitespace condition
updated lock calculation in FeedRefreshUpdater to multiply threads by 1000 to improve concurrency handling for better resource management
updated the ` exactSearch ` parameter in ` TsFileSequenceReader . java ` and added a new test case for ` MeasurementChunkMetadataListMapIteratorTest . java ` to improve functionality by incorporating exact search support in metadata handling
remove unused parameter from csvsaveservice . makeresultfromDelimitedstring ( )
added preferred size adjustment for the navigation pane in NavigationShareTab . java to ensure the user interface displays a fixed number of rows in the list
update BeiderMorseFilter to use State instead of OffsetAttribute for offset tracking to improve state management and ensure consistency in attribute handling
updated UpnpHandler , UpnpRendererHandler , and UpnpEntryQueue to maintain consistent naming conventions across the codebase
fix crash when pick up a burst from a burst that do n ' t have a block
added test cases for JSON serialization in JsonTest . java to enhance test coverage and improve the readability of JSON data
updated the implementation of MutableContextDataSupplier to enhance performance and maintainability of the code
changed exception handling from Exception to Throwable and added a warning log statement to improve error handling to capture a broader range of issues while providing a clearer error reporting
use https for mockserver , since it be now enable by default . fix # 456
replace usage of ` math . graph ( ) ` with ` UnaryMathIntrinsicNode . computeStamp ( ) ` in ` DefaultJavaLoweringProvider . java ` to ensure the correct stamp is computed for foreign call nodes
change default response status from METHOD _ NOT _ ALLOWED _ 405 to HEAD / OPTIONS and update related method calls to enhance handling of HTTP responses to include POST requests
tika - 2338 -- fix for tika - 417 -- invalid long literal in tika - metadata . xml
solr - 4565 : showfilerequesthandler should return 404 error if file do not exist .
reflector : add try catch to catch throwable . getcause ( ) and make it easy to mock .
added a method T clamp to the Vector class and a corresponding test in the Vector2 class to provide clamping functionality based on specified min and max values
added OAuth2 authentication handling to the ChainedTokenGranter class to enhance token management based on client scopes and improve authentication accuracy
8235595 : remove @ deprecate ` ` jdk - 8234710 . java ' ' from bc _ instanceof javadoc
remove setsaveflags ( ) call that do n ' t work and add a log
updated UaaUrlUtilsTest to use JUnit 5 annotations and integrated PollutionPreventionExtension to enhance test structure and maintain compatibility with updated testing practices
hhh - 11016 - fix type cast in native query .
added caching mechanism for font anti - aliasing information using WeakHashMap to improve performance by avoiding redundant calculations for previously checked fonts
fix TypedSet ' s memory leak by switch to primitive intarraylist
simonstewart : document the way to pass an external driver to the remote server .
[ issue # 1771 ] add javadoc to brokerrequestutils ( # 1772 )
replaced direct usage of instances with a map - based approach for managing instances to improve code readability and maintainability by using more descriptive data structures
refactor code to directly use ` getBasePath ( ) ` from ` buildTarget ` to improve clarity and reduce dependency on ` ParserConfig ` for path resolution
make sure default value be not null when convert from echomessage .
fix a problem with jabber connection when connection close and reconnecting .
updated the DEFAULT _ LOAD _ FACTOR constant from 0.67F to 0.67 to remove unnecessary decimal places and improve code clarity
added a new method ` getAllDataTypePhysicalVariations ` to ` VectorizationContext ` and updated references in ` Vectorizer ` and ` VectorPTFDesc ` to enhance functionality to handle physical length variations in vector operations
move htmlassettranslator and stringsresourcettranslator into client package , to avoid conflict .
updated condition checks for vertical bar layout in OverviewState . java to ensure correct behavior based on the removal of the shelf from the overview actions
added @ Entity annotation to BaseActivityEventEntity . java to enable entity injection for data integrity during entity updates
added and modified tracing sections in NavBarSwipeInteractionHandler and TouchInteractionService to improve tracing capabilities for better debugging and user experience
added a new file ` InvalidOptions . java ` that contains a test for options with unknown options to validate the behavior of the ` javap ` command when invalid options are encountered
add debug code for inconsistent number of display
refactored OAuth20UsernamePasswordAuthenticator to use a new utility method for extracting client ID and client secret from OAuth20Utils to improve code reusability and reduce duplication
change default value of _ unwrapServletException from false to true in ErrorPageErrorHandler and set it to true in AsyncContextTest to enable unwrapping of servlet exceptions for better error handling
set status to ShortcutInfo . DEFAULT in PackageUpdatedTask . java to ensure correct shortcut information is set when tasks are updated
camel - 4257 : fixed seda endpoint to support size = 0 . thanks to joao lohma for patch .
attempt to fix # 258 : call batchupdate ( ) in web
added HttpClientConfiguration integration and configuration to ThirdEyeApplication to enable HTTP client management for improved performance
added a new method ` mySort ` to ` JobInstanceFetchRequest ` and modified ` JpaJobPersistenceImpl ` to include it to enable sorting of job instances based on a specified sort
replaced exception handling in CryptoFacilitiesTradeService with a method to retrieve open orders to improve flexibility in canceling cryptocilities orders and handle specific cases more effectively
ggb - 1958 hide keyboard when web - ggb file be load
use the result of nativefunctionhandle . memmoves ( ) to move memory from c1 to c2
refactor authentication and context retrieval in BindLdapAuthenticationHandler . java to improve code readability and maintainability
added blockToolTip property via setblocktip ( false ) on mode toggle menu .
updated DefaultDateTypeAdapter to accept a time style parameter and improved date handling in GsonBuilder to enhance flexibility in date format configuration and support varying date styles
replaced " < UID : " with " ( " ) " in playerSet . append ( ... ) method to improve clarity and consistency in the output format
add a check for an empty list and return the current instance if it is empty to ensure proper handling of empty collections and avoid potential ClassCastException
added handling for InvocationTargetException to wrap CommandException to improve error management by ensuring CommandException is properly propagated
modified the getLikeExpression method to include an boolean parameter for regex handling to enhance functionality to support regex expressions in vector expressions
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide a standard interface for starting and stopping stream suppliers
modified runChild method to ensure locale settings are applied to available locales to ensure consistent handling of locale settings in tests
fix : [ batch ] update javadoc on connection class . ( # 1454 )
refactor context handling logic into a separate method ` initContextHandler ` to improve code readability and enforce type safety for ` ContextHandler `
camel - 9175 : add an unit test for camel - inf / blueprint . xml
nifi - 7277 fix assertion in testexecutestreamcommand to make it more concise
modified return type handling in ` returnTypeSubstitutable ` and ` assignSubtype ` methods to improve consistency and correctness in type substitutability logic
junit test : fix testexecutor to work w / work for char and byte throttle
replaced a variable assignment with direct assignment of the argb variable in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to simplify code for better readability and avoid redundant operations
updated annotations in mmm and ppp classes to improve code consistency and maintainability
added a new interface ` Model ` and modified ` Sheet ` and ` Workbook ` classes to implement it to enable the creation of models and consolidate instances
camel - 2250 : optimize code to reduce the number of regexp call
added a ` clearEntityManager ` boolean property and its setter / setter methods to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control the clearing of the entity manager and enable configuration of entity management during writing
added null checks for shortcutInfo and intent before proceeding with actions to enhance stability by preventing potential null pointer exceptions
log4j2 - 1349 fix for issue # 434 : concurrentmodificationexception in mapnodepatterntrigger .
updated exchange specifications to reflect the correct host and exchange name for Wex to ensure accurate representation of the exchange being used in the application
added null checks for columnReaders and reader in OrcEncodedDataConsumer and EncodedTreeReaderFactory to ensure proper handling of null child instances to avoid potential NullPointerExceptions
added null check for files in SegmentInfos . java and a test case for opening and deleting IndexReader in TestIndexReader . java to ensure that a npe is thrown when the file does not exist in the directory
[ scb - 2175 ] fix integration test fail ( # 2175 )
[ java ] fix check for negative percent value in bigdecimal . getdecimal ( # 13545 )
updated limit comparison logic in RangeInputStream . java and RangeReader . java to handle negative values correctly to ensure correct return values when the limit is negative
camel - 18084 : camel - jbang - add additional logging to route configurer to log route loading duration
make sure we keep track of initial position and playlist
solr - 10383 : introduce intellij ' s lucenetestcase so that we can use custom builder
added a StatefulMapper2 class and modified OutputHandler to use it for processing operator states to enhance functionality to track operator states during processing
shader tiling : add tile to shaders for line ( thanks maki ) , remove unneeded null check
remove dbexists logic , a now rely on the dependency injection for blockdb
added trimming to the result of matcher . group ( 2 ) in SQLPlusSupport . java to remove leading and trailing whitespace from SQL results
fix unit test failure with apr connector . use async = false on connector .
ticket # 3726 : on resize , it do n ' t make the file visible again .
add health check for controller ( # 7131 )
hide sharedavatars in the LocalFileListAdapter to improve user interface by reducing unnecessary space
better fix for ggb - 1013 , remove unnecessary @ clientbundle .
[ java ] : use < = to check for argument length in command line .
camel - jbang - log interceptor should only execute command for log level fine . thanks to joao loureiro for reporting .
replaced the counting logic in EventBusTracingTestBase with a waitUntil method to improve clarity and ensure span completion checks are more accurately validated
replaced the dynamic locale assignment with a direct initialization and modified the parse method to simplify locale handling to enhance code clarity and encapsulate locale management more effectively
replaced array with linked list in entrycustomizationdialog . java , and updated initialization in FieldSetComponent . java to improve code efficiency and maintain insertion order consistency
- bug fix : support for beta node constraint in manners .
8235555 : java / security / cert / cert / ocsp / unauthorized . java fails due to wrongly send unauthorized response
added serverState variable and modified control flow for server failure handling to ensure proper synchronization and error management during server state transitions
[ flink - 23737 ] [ connector / avro ] add source . open - connection . count to sourcecounter
make executionstrategy . execute ( ) public and add a builder field definition that can be set in the parent class
refactor method for creating the Java package finder to improve clarity and encapsulation to enhance code readability and maintainability by using a dedicated method for retrieving sourceRoots
replaced the Writer initialization to use PrintWriter to ensure consistent output formatting for better performance
[ test ] add random file name to staging file in test
added support for DataTable in JRuby step definition to enable proper handling of DataTable in JRuby execution
updated visibility settings for the author view and modified API query methods for better functionality to enhance user experience by ensuring proper visibility and optimizing API query results
fix incorrect javadocs for readsentimentdataset
improve error message when parse formula that be near char .
added methods to expose and set the socket address in WebSocketClient . java to improve connection management by allowing dynamic binding of the socket address
[ java ] : delete archive directory before closing clustered medium driver .
replaced conditional width and height assignments with a unified setSize method for clarity to simplify code and improve maintainability by consolidating width and height setting logic
changed sessionFixationAttribute comparison from equals to Boolean . valueOf to ensure proper type conversion for session fixation attribute handling
fix ( lalogic ) : launcher2 crash fix ( # 290 )
danielwagnerhall : refactoring to make it more responsive to slow machine .
added HTTP method and URI template handling to TraceExchangeFilterFunction to enhance response processing by providing more context about the HTTP method and route
fix race condition in precompactedrow . removedeleted
updated return values in ICC _ Profile and ColorConvertOp for improved clarity and correctness to ensure proper masking of rendering intents and enhance code readability
[ # 9382 ] fix bug for isnotsurequestion method
added multiple calls to PublicMethed . waitProduceNextBlock in ContractInternalTransaction003 . java to ensure proper synchronization of block production in the transaction process
remove unnecessary interface to fix eclipse error
added support for PGConnection in PooledConnectionImpl and created a test for it in BaseDataSourceTest to ensure proper handling of PGConnection during the connection pooling process
refactor PropertyTable and CloseIgnoringInputStream classes to improve code organization and maintainability
updated log level from warn to info for token encryption secret configuration in TokenAuthenticationHandler . java to provide clearer insights into the absence of a token encryption secret in the registry
marked the Hazelcast class as deprecated to indicate that the class should no longer be used due to potential issues or better alternatives
added topology update event handling and modified command report logic in multiple classes to ensure proper logging during Kerberos deployment and improve test reliability
added support for an iterator over an iterable in NamedListCodec to enhance functionality to support additional input types and improve the handling of named lists
fixed npe when assign completely lose partition ( # 1736 )
added InclusionRule for public schema in ApiExample . java to enable access to public schema in the API documentation
increase the expected value in the assertion from 3.0 to 7.0 to ensure the test reflects the correct validation of the mean value
fix a bug in 3d when register a single point ring ( # 1687 )
added methods to retrieve base name and dimension count from the ConstantPool class to improve the utility for better resource management in the ConstantPool
bug 52273 : added evaluationutil . setdebugevaluationoutputfornexteval ( boolean value ) to sheetutil
test : migrate refactoringtest to junit 5 ( # 4561 )
removed an unused parameter from the ExoPlayerProfile instantiation and updated the PlaybackController to update the logic to ensure proper profile handling and enhance user preference checks for live TV playback
added a return statement to the DynamicStyleBar class to improve method flow control by terminating execution under certain conditions
added logging statements for setting and resetting properties in the Utils class to improve visibility into repackage property management for debugging purposes
upgrade dependency com . google . cloud - cloud - google - cloud - shared - api to v2.3 . x ( # 505 )
add check for boolean in methodemitter . isvalid . fix # 541
make llvmstackframenuller public to allow access to null address .
refactor multiple Java files to enhance code organization to improve maintainability and readability of the codebase
added new test class CaffeineCacheDefaultConfigurationTestSuite and Spring Boot context setup for cache specifications to ensure correct transaction aware cache proxy functionality and improve test coverage
added a method calculateBoundingBox for bounding box calculations in Mesh . java to improve spatial calculations for improved rendering performance
add murmurhash3 option to targetscommand , default to murmurhash3
updated DefaultConfigurationProperties class to enhance configuration handling to improve application flexibility and maintainability
updated color settings for highlight colors in ListViewMultiChartActivity and adjusted highlight color in BarChart to improve visual consistency and aesthetics of chart appearance
added logic to update the temporary pgSgPathPlanMap in ClusterPlanRouter . java to ensure the correct path plan mapping in the cluster management system
( chore ) camel - infinispan : fix typo in test
added file lock handling in MavenArtifactFetcher and modified MavenDependencyResolver to synchronize files to ensure data integrity during artifact fetching and prevent potential memory leaks
modified the fragment shader string to include conditional compilation based on GL _ ES presence to ensure compatibility with OpenGL ES by avoiding potential null pointer exceptions
hbase - 26922 use set instead of list in rsgroupinfo ( # 421 )
switch to jasper , not to warn . patch provide by rodrigo trujillo .
added a new test method ` testVersionAwareTokenFilter ` and modified the version handling in ` CustomAnalyzer ` and ` TestCustomAnalyzer ` to enhance version management and ensure it operates correctly for specific tokens
added a test for reading values from package archive information in ShadowPackageManagerTest . java and implemented logic in ShadowPackageManager . java to ensure correct retrieval of package archive information from the package manager
replaced direct method invocation with MethodUtil . invoke for consistency and access control to enhance method access safety by utilizing ReflectUtil for package access checks
added new imports for ProjectConfigurationStartEvent and TaskStartEvent , and implemented progress listener logic in Main . java to enhance functionality by notifying users about configuration and task start events
douniaberrada : remove unnecessary sync in androidwebdriver . java
fix # 770 by always throw apoolinitializationexception when initializationfailtimeout be set to 0 .
removed the timeout parameter from the getResult method and added an error handler method to simplify method interface and enhance error handling capabilities
make isnatives transient in jmethodtable so state can be read properly
centrypointcallstubmethod : fix typo in the message
rename ruleenablehandler to ruleenablementactionhandler ( # 4194 )
add javadoc since tag object be no longer present .
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager for clarity to improve readability and understanding of authentication request handling
renamed ` getBasicSourceOptions ` and ` getBasicSinkOptions ` to ` getBasicSourceOptions ` and ` getBasicSinkOptions ` , and updated associated method calls to enhance clarity and consistency in variable naming across the Kafka dynamic table factory tests
added null check for repository retrieval in UsersPanel . java to improve error handling by logging a message when the repository retrieval fails
added support for parsing font names with extensions . otf and . OTF in addition to . TTC to improve compatibility for various font file formats
fix for http : / / github . com / codenameone / codenameone / issues / 2144 : search for annotation with ` ` class a . class b ' ' instead of a . class a .
- change the message from " OFF " to " SEVERE " in Grep . java to improve clarity of error reporting
updated debug logging statements to check if the logger is enabled before logging messages to improve performance by avoiding unnecessary string concatenation when debug logging is disabled
remove initial list creation , not only create a new list if include be empty .
added methods to handle home intent movement and default screen location in Launcher . java to improve user experience by ensuring default screen is prioritized when the home intent is not possible
reduce maximum bitrate to 30 for cloudstack - management
remove getoptions ( ) because already exist .
trim whitespace from the description returned by MutableDatabaseProperty to ensure consistent formatting and avoid potential issues with leading or trailing spaces
updated the file path construction in XOMParserTest . java to simplify the file path format for improved readability
remove process . pid ( ) from error log message ( # 8467 )
added methods to retrieve loaded music and sounds in MusicLoader and SoundLoader classes to improve access to loaded music and sound data
removed unnecessary imports and corrected type casting in OnBeanCondition . java to improve code clarity and maintainability
added ScreenRecord import and annotation to RequestPinItemTest . java to enable screen recording functionality for test case debugging
fix : fix ` ` restart button ' ' behavior on cpu and memory feature
add a single ` ` account ' ' in the ` ` accounts ' ' preference instead of use the ` ` accounts ' '
fixed - unavailable presence must be send to client . smack - 169
updated StringBuilder initialization in ObjectInputStream to use a calculated initial capacity based on utflen to optimize memory usage by initializing StringBuilder with an appropriate capacity when possible
disable spring metrics export in integration test
refactor InterruptedException handling in the code to improve code readability and maintainability
updated the implementation of ServiceTicket to enhance service functionality and fix bugs
refactor connection handling logic in ConnectionCheckOperation . java for improved readability and maintainability to streamline code structure and enhance clarity in connection success handling
http : / / issues . apache . org / jira / browse / amq - 4565 - fix test regression . test for jdk - 856316 .
ds - 4166 community collection update , fix test
replaced ` sExemptOfPasscodeActivites . add ( AuthenticatorActivity . class ) ` with ` i . setFlags ( Intent . FLAG _ ACTIVITY _ REORDER _ TO _ FRONT ) ` in ` PasscodeManager . java ` to ensure the activity is reused instead of recreated , improving efficiency
refactor : remove deprecate annotation ( # 282 )
modified the return type of beginDraggingWidget method from void to boolean and added a null check for drawable to ensure proper handling of dragged widgets by preventing null pointer exceptions
lucene - 4488 : re - enable testPacked ints . aspacked ( ) because of lucene - 4488 .
add null check for the root variable and collect components to ensure components are only collected when the root is not null
tagger : write confusion matrix in debug mode
bug 62938 - correct race condition in use of postprocessors
added unit tests for Bluetooth headset connection state functionality to ensure proper handling of connected devices and state updates in the Bluetooth headset
corrected a typo in the method name from " # autowire " to " # autowired " to ensure consistency in terminology and improve code readability
updated the set of objectMethods from " clone " to " clone " and added a new constant for a finalized method in ResultObjectProxy to ensure proper handling of object methods and optimize lazy loading based on the finalization state
[ beam - 3461 ] fix npe in integrationtestbiglinkedlist ( # 3462 )
return not _ implemented error when unable to retrieve instance information from jdwp
updated the service filter parameter name from ' service ' to ' serviceId ' in SamlIdPServicesManagerRegisteredServiceLocator . java to improve clarity and ensure correct matching of registered services
added null check for getActivity ( ) before running on the UI thread to prevent potential NullPointerException when getActivity ( ) is null
renamed ` LOGGER ` to ` logger ` across multiple classes to enhance code readability and maintain consistency with naming conventions
added stringType property and its getter / setter methods to DatabaseAdaptor and JDBCSessionDataStore classes to allow dynamic assignment of string types and enhance flexibility in table creation syntax
updated UIMAUpdateRequestProcessorTest . java to modify test cases and added exception handling to improve test coverage and ensure robustness against exceptions
refactor thread name handling by introducing updateThreadName and resetThreadName methods to improve code readability and maintainability by centralizing thread name updates
refactor TaskletAdapter to improve code structure to enhance maintainability and readability of the code
drools - 22200 dmn v2 - add ` ` will be _ null _ if _ negative ' ' dmn value
fix loadtexturemap and loadtexturemap on macos ( # 4517 )
added a tooltip text for the showCGCP checkbox in RocketPanel to enhance user experience by providing context - sensitive help
fix dangle method call from enum . create ( ) . create ( ) in the interface .
add reload text and description to telephony ( # 1438 )
fix problem with handling of column name in spreadsheet
change BRIGHTNESS _ FACTOR from intValue ( ) to doubleValue ( ) in BindingConstants . java to improve precision in value representation for BRIGHTNESS _ FACTOR
update scm history parser to parse date with context and date
updated the createUser method to include an isAdmin parameter and implement listUsers ( ) method to enhance user management functionality by allowing access to admin users
added null checks for ` indexedWriteMethod ` and ` writeMethod ` in ` IndexedPropertyDescriptor ` , ` Introspector ` , and ` PropertyDescriptor ` classes , and created a test class for it to ensure proper handling of void return types and verify functionality through unit testing
drop zero count line in dynatraceexporterv2 ( # 2658 )
updated method signatures in Context . java to use ' task ' instead of ' runnable ' and added comments in Response . java to improve clarity and consistency in task handling within the context
add setcapabilitiesFromSpongebuilder method fix # 27
fix junit test to work with wrapper and not the wrapper .
added validation for creating and creating smart contracts in Wallet . java and updated GetContractServlet . java to handle multiple accounts to ensure that only active smart contracts are created to maintain contract integrity
added new package - info . java files for various organizational packages to organize package structure and improve module accessibility
refactor the add method in DocumentsWriterDeleteQueue to improve concurrency handling to ensure thread - safe concurrent access to the tail node during insertion
updated JavadocTool to handle duplicate JavaFileObjects using a HashSet to improve efficiency by preventing unnecessary parsing of duplicate files
change default value of STRIP _ IPV6 from true to false and update related substring logic to ensure proper handling of IPv6 addresses by defaulting to false
modified the LoginServerTokenEndpointFilter to accept a list of user parameters instead of a single parameter to allow for more flexible handling of multiple user parameters during authentication
add a test to verify that a language contain ` ` c ' ' in addition to ` ` cpp ' '
replaced the existing ThreadPoolExecutor implementation with a new implementation of MoreExecutors to improve thread management and reduce code duplication
added cache control header setting in FormAuthenticator . java and corresponding test cases to enhance security by preventing cache control for login responses
add exception message to log when voice can not be detect
updated HSSFTests to use new test classes for area references , cell references , and sheet references to enhance test coverage and improve code organization for HSSF functionality
nojira - fix up typo in fetchhttp2test - > fetchhttptest
testcommand : fix npe in nightly test by check for null output
added access controller priority for resource control in Java2DRenderer to enhance access control functionality for improved rendering performance
82774 : jdk / test / tool / testtriggercoverage . java fails on window due to arrayindexoutofboundsexception
modified variable and method visibility and introduced CPU time testing logic to improve thread CPU time validation and enhance error handling
updated conditionals in TabsAndIndentsVisitor to check for empty comment collections to ensure proper handling of empty comment cases in the visitor logic
updated assert statements in SimDistribStateManager and TestTriggerIntegration for better accuracy to improve reliability of testing by validating the expected outcomes instead of expected values
updated comparisons to be case - insensitive to ensure consistent behavior regardless of file path casing
removed the ` getString ` method from ` ShadowBundle ` to simplify the API by eliminating unused functionality
added custom date formatting for improved readability based on user locale settings to enhance user experience by providing more detailed time information
nifi - 8719 when there be no connection in a processsession , return an empty list instead of null
removed unnecessary focus request and refactored keyboard focus logic in DetailFragment . java to improve user experience by ensuring keyboard appears only when necessary
another attempt at fix the classpath issue on window for tools . jar # 714
add synchronization to the solve ( ) method , and make sure matrix be create only once
int - 1451 , int - 588 remove unused import ( thanks to stephan siano for the patch ! )
refactor SQL query construction in PostgresConnector , TaskAttempt , MapReduceJobHistoryUpdater , and MapReduceJobHistoryUpdater to improve readability and maintainability of the code
update file filtering logic in AquaFileChooserUI to ensure selected filter is valid to improve user experience by preventing invalid file filter selections
fix a thread safety issue with p2ptransportmanager
modified the ` toFormulaString ` method in ` ArrayPtg . java ` to handle Boolean values correctly to ensure correct string representation of Boolean values and improve error handling in the code
fix : remove unused import ( # 2486 )
update Java2TypeScriptTranslator to improve type handling for methods and variables to ensure correct processing of class signatures and their types during translation
added sequence creation and default value to support auto - increment columns in PostgreSQL to ensure compatibility with PostgreSQL ' s features and maintain data integrity
updated readByte and UTF - 8 _ BYTE operations in DataInput . java to ensure correct byte range processing and improve performance with potential negative values
tmi - metadata : remove unneeded test case , a it do n ' t apply any more anymore .
updated the way the parent is retrieved in the Component class to ensure consistent retrieval of the parent component ' s parent
refactor import statements and update conditional statements for clarity to improve code readability and maintainability
speed up test - add miss engine _ free ( )
make iteration more robust , and add documentation .
correctly release the http content after offer to the decoder . release the fileupload after transfer in streamingfileupload . fix # 721
added a call to deleteLogs ( ) in TestRecovery . java to ensure that logs are properly cleared during recovery processes
updated the BrowserActivity to open a new activity when the URL contains " twitter : / / " to enhance user experience by enabling web view functionality with specific URLs
added a method to await the status of the Helios client in DeploymentGroupTest to ensure the test operates within a specific timeout duration
fix an off - by - one error that show up due to wrong result
reduced the maximum auto retries in the logging configuration from 0 to 25 to improve test stability by allowing more retries for the application
removed a debug print statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to improve test clarity and ensure proper method overriding
added FRACTION resource handling and associated converter methods in Resources and ResourcesTest classes to enhance functionality for parsing and parsing fraction values in resource management
remove redundant file confirmation check in BasicFrame . java to simplify code and improve readability by eliminating unnecessary checks
added null checks for tagGroupId and artifactId in the findNewerDependencyVersion method to ensure parameters are validated before use to prevent potential null pointer exceptions
hbase - 16519 : namespace - aware retrieval of max table from namespace : addendum ( sergey shelukhin )
replaced multiple token and attribute classes with their respective implementations to improve code organization and maintainability by standardizing naming conventions
- remove todo , should help clarify false positive .
add a check to prevent negative values in the HTSVocoder class to ensure that the value is non - negative for proper decoding
updated SchemaRetriever and TableRetriever to handle catalog retrieval and added null checks for foreign key and foreign key attributes to improve code robustness and avoid potential NullPointerExceptions
remove call to clearencers ( ) from inputbuffer . charset - > inputbuffer . getcharset ( ) .
added SharedPreferences functionality to allow empty page settings to enhance flexibility in managing empty screens
added a warning log indicating that cucumber - needle has been deprecated to inform users to use cucumber - cdi2 or cucumber - jakarta - cdi instead
refactor theme handling in ShadowThemeTest and update ShadowArscAssetManager to utilize VMRuntime for improved style resolution to enhance flexibility and maintainability in theme management
updated error messages in VerifyFast . java to use ` Arrays . toString ( ) ` for better readability to improve clarity and debugging by using more descriptive array string representations
# 1504 - enh : add @ dbmigration to force migration to run on oracle
updated the ` getProto ` and ` setProto ` methods to include a new ` ScriptFunction ` instance for proper prototype access to enhance functionality by enabling proper prototype access in the script environment
replaced the random ( ) method call with a new random ( ) function to enhance randomness in the shuffle process
modified displayName assignment to include user name based on user input to improve user experience by providing more relevant information about the shared user
updated path handling in CookieRetrievingCookieGenerator to ensure a default value is used when the path is blank to improve robustness of path construction by preventing potential null pointer exceptions
remove a redundant closing brace in Jvm . java and JvmJvmstatModel . java to improve code clarity and maintainability
fixed bug in abstractcacheservice - check for total backup count
pdfbox - 2184 : use correct compareto for new validateversionversion condition
fix uidropdown when multiple widget be select
fix checkstyle issue in util / soundutil . java ( # 743 )
updated ApplePackageDescription to utilize the new ` getAppleCxxPlatformFlavorDomain ` method to enhance flexibility in retrieving platform flavors from the toolchain
add test to verify that sql be handle by the other jdbc driver .
rename onconnect to onaccept to maintain consistent method naming
add a comment to set the treebank in the lucene - base copyright header
8029876 : add a test to verify that logger . getlogger & logmanager . getlogmanager do n ' t throw npe when system . out = = null
made appCtx a non - public field and added a data retrieval method in PathSharingContext . java , updated sharedMap usage in ScriptedProcessor . java , and removed unnecessary imports in ScriptedDecideRule . java to improve thread safety and memory usage by preventing unnecessary object creation
[ gr - 21165 ] modification to the test suite to support compilation during test .
added regex pattern for handling " NEXT VALUE FOR " in NextValExpression and updated related classes to enable flexible next value generation based on an image value
add additional information to unsupportedfeatureexception about resource bundle
modified the expiration handling logic in BoundedLocalCache and added a clear _ pendingWrites method in BoundedLocalCacheTest to improve cache management and ensure proper cleanup of pending writes
added exchange configuration for Leverage _ Level and introduced order direction property in QuoineNewMarginOrderRequest to enable dynamic order direction configuration for margin orders based on user - defined values
added boundInitialization method and a new test class for validation of property bindings to ensure proper binding behavior and validate that a simple , generic , and read - only property is bound
replaced a failsafe width and failsafe height with a display mode callback in LwjglGraphics . java to streamline display mode management and improve code clarity
fix issue with tabs consume all the button when they be still in the middle of the release form .
fix # 2139 wrap width of linecell do not account for empty line
corrected spacing in XSLTErrorResources _ it . java for better readability to enhance code clarity by removing unnecessary whitespace
updated the implementation of ` paramValues ` from ` HashMap ` to ` LinkedHashMap ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper ` classes to ensure the order of entries in the order they are consistently stored
replace string concatenation with string . format for good readability
removed unnecessary namespace retrieval from StaxXmlPullParser to simplify code and improve readability by directly using the provided namespace
added support for nested joins configuration across multiple test classes to enable or disable nested joins for testing purposes
cloudstack - 3223 . listvirtualmachines return incorrect error message for user not configure root admin .
added caching for Java file paths in JavacFileManager and modified the constructor of CompletionTaskProcesor to accept a cursor parameter to ensure correct compilation behavior based on the cursor position
added configuration for Hive ' s metadata store URI and authorization manager in TestMsgBusConnection . java to ensure proper setup for Hive ' s authorization manager setup
[ test ] fixed dependency of hamcrest - matcher - assert
address nullability in exoplayer2 . util . getrenderer ' s output handler .
fix ( ilp ) : fix offset memory size for offset _ mem _ size in symbolmapreaderimpl . ( # 2653 )
removed print statements for termFilter and otherTermFilter to clean up the test output and improve test readability
deleted the Reflection . java file and its associated functionalities from the internal package to streamline the codebase by eliminating an unused package
refactor ThreadlessExecutor to encapsulate boolean properties and improve thread management to enhance code readability and maintainability by clarifying the state of the executor
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter . java and added a new test case in TestDateTimeParsing . java to improve error handling consistency and ensure proper behavior when dealing with null values
renamed CHUNK _ LENGTH to CHUNK _ LENGTH _ KB and updated related methods to improve clarity and consistency in naming conventions
added a new class ` T7034495 ` with generic methods and test cases to address potential crash issue identified in # 7034495
fix for loop break on empty key set
refactor conditional checks for HOP character types in TransclusionDecideRule . java to improve code clarity and maintainability by consolidating similar checks
stop print micronaut version ( # 8719 )
added unit tests for the Print _ Area formula and its definition to ensure correct behavior of name definitions for different formula types
fix miss description when create mind icon for resource bundle .
updated the onHomeIntent method to accept a boolean parameter to enable processing of intents when the internal state is handled
replaced the direct use of ` getPreferDependencyTree ( ) ` with a variable ` preferDependencyTree ` to improve code readability and reduce redundant calls
refactor showDetails methods across multiple activities to accept an active tab parameter to improve flexibility in displaying file details based on user preferences
removed the use of the ` $ apply ` operator from multiple classes to streamline function definitions for improved readability and consistency
fixed bug in minimalencoder that cause encoders to fail to encode huge codeword .
fix # 146 - add license header to sourcebuilder to make it easy to use
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter updates when data changes
added a method to set the default wal sync mode in ShadowSQLiteConnection to enable synchronous configuration for improved performance
refactor type checks in RemoveJavaDependenciesAdapter and add tests in Collections to improve type safety and validate ArrayList behavior
remove unused method from defaults3crtasyncclient ( # 4558 )
make test case more robust , avoid confusion .
add output to hazelcasttestsupport . size ( ) failure message [ hz - 2197 ] ( # 25580 )
fix bug in graalcompiler . ifnode when bailout be true .
mow - 169 : open up compatibility image to prevent clipping .
refactor SQLXML class implementation to improve code readability and maintainability
added a limit parameter to the getOrderBook method and modified related calls to enhance functionality by allowing users to specify a limit on order books
changed occurrences of GotWrongOOMEException to HeapOOMEException and updated references to align exception handling with the new heap structure and improve clarity
nifi - 12749 - fix error message in jackson configuration when streamreadconstraints be not set in objectmapper
updated the retrieval of engines from the configuration to initialize it to an empty string instead of null to ensure proper handling of empty engines and maintain locking consistency
replaced ` FullIterator ` with ` WheelIterator ` and updated formatting in ` TimerWheel ` to improve code readability and maintain consistency in naming conventions
return a good error message if we ca n ' t find the bug pattern
make localchunkprovidertest # testisready more robust by increase wait time
change visibility of the uncomplete checklists menu item from true to false to prevent the menu from being displayed when there is no items to uncomplete
refactor DefaultResultSetHandler to resolve discriminated result map and add a new Contract class with associated tests to improve result map handling and ensure correct functionality with nested result sets
refactor conditional checks for handling null defaultHome and unregistering the receiver to improve null safety and ensure proper cleanup of receivers
removed the import and annotation for VertxGen in PumpImpl . java to streamline code by eliminating unnecessary dependencies
removed unnecessary casting when calling sendDownloadedFile in FileDetailFragment and OCFileListFragment to streamline code for better readability and maintainability
added a trimming of whitespace to the token in ConfigAttributeEditor to ensure consistent formatting of whitespace in attribute definitions
refactor ClassUsingAuxiliary and SelfClassWithAuxiliary classes to improve code clarity and maintainability
[ gr - 37403 ] workaround jvm9 + module . getunnamedmodule warning .
updated database metadata handling to conditionally set ` relKind ` based on the database name to ensure correct identification of system tables based on the database name format
updated TIER _ ENTERPRISE _ PLUS _ VALUE to include the @ Deprecated annotation and modified Agent and AgentProto to update dependencies to ensure consistency and maintain coding standards across the project
updated the calculation of RQST _ FIELD _ DESC to use a fixed value of 1 instead of - 1 to correct the handling of the " rqst " field in the Thrift metastore class
added a new module - info . java file for the core module to define module exports and requirements for better encapsulation and dependency management
modified the flush state handling and fill state checks in SslConnection . java to improve the handling of encrypted output and ensure fill interdependencies
fix : log4j2 - 214 - logfactory do n ' t initialize the logger if it ' s no exception
refactor VM checks in ` ExecutionEnvironment ` and ` Test7029048 ` to utilize ` haveServerVM ` for better clarity to enhance code readability and ensure tests rely on the server vm
refactor Mongo and ReactiveFind operation classes for improved organization to enhance code maintainability and readability
enable LibPQFactory for PostgreSQL connection pooling ( # 1421 )
disable interprocesssemaphoreEdges . test ( ) until i figure out why it hang in ci
added sorting functionality for resource names in EditableResources . java to ensure consistent ordering of resource names by sorting them alphabetically
added a new OSvTerminal class and modified TerminalFactory to support OSV to enhance terminal functionality and improve compatibility with different operating systems
updated ClassType to include additional names ending with " . gr " or " . grs " in addition to " . gs " to ensure proper handling of additional class types
replaced HashMap with TreeMap for combinedVectors in DrillTestWrapper . java to ensure consistent ordering of elements in the data structure
camel - 6946 : xpathentityprocessor . visitattributeresourcevalue ( ) should check for upper bound to avoid nosuchelementexception
updated WebSocketPolicy implementation with new configuration settings to improve flexibility and performance of WebSocket connections
updated ` readPhoneStatePermission ` and ` accessWifiStatePermission ` variables from static to instance variables to enable flexibility in managing access permissions across different instances
add message resolution in the messageresolver so that the origin and default message be only resolved if the template - based resolution be perform .
updated method calls to use ` Class < ? extends ClassVisitor > ` for type safety to enhance code readability and ensure proper subclassing of ` MethodVisitor `
added a new file LoggingAuditService . java to log user authentication status to improve monitoring and debugging capabilities for users in a structured manner
[ tado ] check for valid temperature on air conditioning zone setting ( # 1633 )
do n ' t process a getter / setter for non - abstract class . fix # 2789
camel - 887 : added proxy support for the http endpoint . thanks to devendra khanolkar for the patch .
update MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to incorporate new features and improvements from the newer version
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to retrieve the jdk serial filter for improved functionality
camel - 15105 : add more info about pool size in log .
replaced the ` forceFinishedScroller ` method with ` forceFinishScroller ` in multiple classes to simplify the scrolling process by removing unnecessary parameter
fix the issue that realtime cluster config be not apply with env var ( # 10737 )
validationreport : added iserror ( ) method and in method to report error message .
updated inline QSB handling in InvariantDeviceProfile . java to improve device profile support for better inline rendering
fix sortedarraystringmaptest on window by use charset . defaultcharset
updated method signatures in TransformSteps . java to use ' ( . * ) ' instead of single quotes to ensure correct matching of method signatures as parameters
fix for findbugs warning ( pgraphics2d . fillrect ( 0 , 0 , 0 ) )
refactor waitUntil calls to use a configurable timeoutMs instead of a fixed value to improve readability and maintainability by using a consistent timeout value
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
add a method to set the Docker image URL in Environments . java to enable dynamic configuration of the Docker image URL
- fixed unit test which fail from last change .
updated AdditionalAnswers and InvocationOnMock classes for improved functionality to enhance code clarity and maintainability
added a method for copying files into a folder and updated error logging for non - existent files to improve code modularity and provide better error handling for file copying operations
renamed the method ` appendToDescription ( ) ` to ` getDescription ( ) ` and updated its implementation in multiple classes to improve clarity and consistency in method naming across the application
[ api ] fix nosuchelementexception when load functioninfo with same device ( # 1494 )
added a check for XML type before processing XMLVisitor in Autodetect . java to ensure correct handling of XML documents during indentation and line formatting
updated tests to use JUnit4 annotations and modified import statements to improve compatibility with the latest JUnit4 features and enhance test structure
add parent gas limit rule , since it be no longer present in frontier configs
changed the visibility of setupData ( ) method from public to private in multiple test classes to enhance encapsulation and restrict access to setupData during tests
rename the variable ` autocommit ` to ` runInTransaction ` in multiple classes to improve clarity and intent of the variable ' s purpose in transaction execution
[ 3.0 - triple ] fix server stream closing ( # 10033 )
[ hotfix ] fix javadoc warning in legacy resource
added a new test method ` testIssue154 ` to ` SelectTest . java ` for SQL parsing and deparsing to ensure SQL queries with the correct modified time range are handled correctly
refactor Common class to improve code structure to enhance maintainability and readability of the code
replaced the return statement with a try - with - resources statement for closing the launcher context to ensure proper resource management when interacting with the launcher
refactor StreamExecDeduplicate class implementation to improve code clarity and maintainability
add log when unable to send kafka message to topic ( # 709 )
added a persistent property accessor factory method to SimpleElasticsearchPersistentEntity and defined isImmutable method in SimpleElasticsearchPersistentProperty to enhance property management capabilities and enforce immutability of persistent properties
[ web ] fix for setundefined ( ) for segment [ 1 , 2 ]
added scroll distance and swipe handling to AskGestureEventsListener to improve user experience by providing smoother swipe gestures to enhance user experience
fix comparison of value in ngramestimator ( fixes # 440 )
updated import statements to reference the correct package for ScenarioScoped to ensure proper organization and access in the codebase
updated method calls in StatsLogCompatManager to retrieve folder icon properties to ensure accurate tracking of folder icon properties for improved functionality
fix : use getservername instead of getserverslogan when there be no server name
8314027 : assert ( cmp - > is _ bool ( ) ) fail : must be enable after jdk - 8305636
fix selectionhighlighter and add sethandler for range check , same for equal and hashcode .
added a new ` StringResultConverter ` class for handling pointer types and modified ` AsmRuntime ` and ` AsmUtil ` methods to utilize it to enhance type conversion capabilities for better performance and compatibility with native operations
camel - 19751 : re - enable camel - test - infra - maven - plugin ( # 11302 )
fix ( terminal ) : check for empty console return value correctly .
added null checks before setting the buffer in setInBuffer method and loaded several methods in BufferUtils . java to ensure proper buffer handling and prevent potential NullPointerExceptions during method loading
updated the assertion to use ` File . separator ` for the data directory to ensure consistency in data path handling across different operating systems
enable autoregister on old jdks that be not support by default
changed the constructor of Lock from ` lockFile ` to ` lockName ` and updated related code accordingly to improve clarity by using a more descriptive variable name rather than a generic file reference
replaced the dynamic UI object from " android . widget . TextView " to " apps _ view " to ensure the correct UI component is referenced for the all apps view
updated references from ` Invocable ` to ` ClientDatagramEndPoint ` to ensure consistency in referencing class instances and improve code clarity
modified the string concatenation in JdbcStepExecutionDao to use " order by " instead of " oreder . " to ensure the correct order of step execution IDs is returned
modified button handling in LwjglInput . java to return - 1 instead of returning Buttons . LEFT to ensure proper handling of unknown buttons by ignoring unknown buttons
[ task / swagger ] add test for claimed task reject
replaced all instances of ` logger ` with ` LOGGER ` in multiple classes to improve consistency and maintainability by using a standardized logging framework
remove expiration check from SsoAccessTokenProvider and update related test cases to simplify token expiration handling and ensure consistency in token expiration logic
[ geos - 8125 ] geoserver security test : fix test on window
add mock for createalarmsuppression ( ) and deletealarmsuppression ( ) to fix test breakage
refactor the order of conditional checks in the JFrame class regarding the default close operation to ensure that the security check occurs before validating the default close operation to maintain security protocols
fix broken library scan ( bug # 1286 )
replaced metricsContext initialization with parentContext initialization in SuggestComponent . java to ensure consistent metrics context usage throughout the component
fixed # 3893 file list footer ` ` not find ' ' .
fix ( system ) : update key provider to return iterable instead of array array .
update copyright year to pass mx checkcopyrights
added a new test class ` ThreadFactoryTest ` for testing thread creation to ensure that the thread handling functionality works correctly for different thread naming conventions
refactor lockPeriod retrieval to use a separate method for improved readability to enhance code clarity and maintainability by centralizing lock period logic
added a new TicketModel instance to the EditTicketPage class to encapsulate ticket data for better user management
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable dimissing functionality in predicted lists
updated constructors in BooleanAssert , CharacterAssert , FloatAssert , GenericAssert , and GenericComparableAssert to accept Class type as the argument to enhance type assertion capabilities by associating instances with their class types
updated menu item constants and added quote functionality in TweetActivity to improve user experience by providing quote navigation for users
fix npe in ` ` jmeterthread ' ' when not start
do n ' t use direct / bypass codec for videorenderer ( # 3740 )
added a conditional check for ' result ' before offering failures in ServerHTTP2StreamEndPoint to ensure failure handling occurs only when ' result ' is true
updated German and French error messages in XSLTErrorResources to improve clarity and accuracy of the information presented to users
added ThreadSafe annotation to CheckpointsCleaner . java to ensure thread safety for concurrent operations
replaced ` Observer ` with ` Subscriber ` for handling unsubscribed subscriptions in ` MockRestAdapter ` to enhance the subscription handling capabilities and improve code clarity
reformatted the code for creating the components . yml file to improve readability to enhance code clarity and maintainability while ensuring the correct file creation is attempted
added configuration for HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES and updated test cases to use column qualifier to ensure consistent handling of column names during result set retrieval and improve test accuracy
mary gui : fix error while replace voice .
added session validity check and exception handling in the Session class to ensure proper error handling when session time is invalid
hhh - 13053 - remove exceptionhelper . java from the project
fix jcex25519domain : reduce key length to 255 ( # 1565 )
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to improve compatibility with Lucene41 postings format
[ hotfix ] [ checkpointing ] add debug log when no header list is empty
add use of oaeppadding to provide good support for sunjce and sunjce
rename ` ` window _ aarch64 ' ' to ` ` macos _ aarch64 ' ' in
improve error message if source can not be resolve
[ java ] fix build on window due to tls / tls issue .
update to segment upload speed & add log for segment generation ( # 4259 )
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory cleanup methods in ` BufferUtils ` for better memory management to enhance memory efficiency and prevent potential memory leaks in buffer operations
changed USE _ PIPELINE _ DOWNLOADER from false to true to enable pipe download functionality in the fast sync process
removed redundant offset setting in SimpleDateFormat and added a new test class Bug7130335 to streamline date handling and ensure correct parsing of date strings with different time zones
refactor variables to use local definitions instead of accessing mRollo . mState directly to improve code readability and maintainability by reducing repetitive accesses to object properties
bug 12452 : do n ' t execute empty ' routes ' table if there be no hypervisor for the target
updated StringBuffer class to improve performance to enhance efficiency in string manipulation operations
[ ds - 3952 ] populate uid for rule in ruleresource - fix npe
added null check for the listener before unsubscribing to prevent potential NullPointerExceptions when unsubscribing a URL
add a new property to apply pretty print formatting in JoltTransformJSON to enable flexible JSON output formatting based on application context
make access _ table public again .
update error messages in DataSourceInitializer and DataSourceInitializerInvokerTests for clarity to improve error reporting by including specific resource checks
( chore ) camel - aws2 - xmpp : do run ( ) instead of stop ( )
doc ( regen ) : fix javadoc error and format
added ` effectiveClusterVersion ` and ` isUpgradeSuspended ` variables to the ` AmbariManagementControllerImpl ` class to improve handling of upgrade suspension status in the management controller
simonstewart : after a code grant , the code be copyright the sfc and the selenium committers . start to update the copyright header
replaced the initialization of ` wfields ` from the writer object to streamline the code by eliminating unnecessary field retrieval
added a constructor to OAuthProperties that initializes encryption and signing key sizes to configure encryption and signing key sizes for the encryption and signing process
hbase - 19834 use getcolumnfamilycount instead of length ( gregory chanan )
replaced AllowedResourceAliasChecker with a lambda expression for resource alias checking to improve clarity and flexibility in alias checking logic
8197595 : serialization javadoc should link to security best practice
[ java ] added reset method to cluster to allow for good control over idle strategy .
refactor writer initialization in ChunkedWriter . java to ensure correct sequence file handling during chunked operations
added a new abstract class AbstractJobExecutor to encapsulate job execution logic to provide a base class for job execution handling in the batch processing pipeline
replaced the assignment of replay ( core ) with a new assignment of replayFuture to improve clarity and maintainability of the recovery process
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve code consistency and clarity regarding variable purpose
do n ' t publish empty service id when no service discovery be enable ( # 9022 )
replaced instances of ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` SecureRandom ( ) ` for hashSalt to improve security and prevent collision attack in hash - based operations
[ gr - 12227 ] detect and print fail runtime method trace when parsing fails .
updated the calculation of currentStart and baselineStart by adding aggTimeBucketMillis to ensure consistent handling of time values during time comparisons
updated imports and added logic to handle abstract methods in CallsRealMethods and CreatingMocksWithConstructorTest to improve mocking behavior by ensuring correct answer handling based on method modifiers
refactor checkPackageAccess method to accept Class parameter and update it to enhance security checks by ensuring proper package access validation
updated ContextPathPluginTest to extend AbstractPluginDataInit and added error configuration setup to enhance test functionality and ensure proper error handling during plugin initialization
renamed ` dtm ` to ` model ` and updated font metrics for improved clarity to enhance code readability and maintainability by using consistent font representation
added support for handling TIS requests in the QuickstepTestInformationHandler and TestInformationHandler classes to improve gesture handling logic based on touch interaction status
connect action : do n ' t wait for user input , just skip the dialog
updated data types and method signatures in TargetsCommand from String to BuildTarget to ensure type safety and improve code clarity by using the appropriate data type
[ j2kt ] add a test case for the jemul internal package .
added handling for the ' HOME ' character and implemented binding for lines to improve user navigation and functionality within the application
removed synchronization around the retrieval of connected plots to improve performance by reducing unnecessary synchronization
replaced direct sharing of activities with a chooser for better organization to streamline activity selection process and enhance code readability
- removed the ' public ' access modifier from the roster constructor , make it package - private
add basicconstraints to trust anchor to avoid certpath issue .
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address the issues caused by incorrect transform offsets
[ findbugs ] remove the need for integer . max _ value check on precisionstep
removed the TaskbarStateHandler class and its associated code from BaseQuickstepLauncher to streamline taskbar state management and eliminate unused components
added a new file ` ArrayLength . java ` implementing a test for array length methods to ensure that the ` ArrayLength ` class correctly throws exceptions for non - empty arrays
attempt to fix flaky test by wait for hazelcast process to be finish
replaced Singleton annotation with @ ApplicationScoped annotation and added a new init method to improve encapsulation and ensure proper initialization of settings
fix behavior of safepoint . setvalue ( ) on negative value
update thread name field type from char array to string to improve data type consistency and method usage for thread name retrieval
lucene - 10861 and hnsw : reduce log noise by default
fix to get the font to work with stroke
refactor the expansion of dynamic star expressions into a separate method ` expandDynamicStar ` to improve code readability and reduce duplication
implemented a new method ` findInterestingChildren ( ) ` to retrieve and store children of a ` Comment2000 ` to improve code organization and enhance the structure of handling comment2000 data
added import for Messages and set a warning status code in HTTPServer . java to enhance status reporting with user - friendly messages
fix getmodifiersex ( ) in a more generic way
nodecycles . asmd64countLeadingZerosnode and amd64countTrailingZerosnode be too big , so increase it to 3 cycles .
camel - as2 : fix npe when content - type header be not set ( # 5822 )
refactor Locale class to improve localization support to enhance the user experience by providing better language options
added a clearLog button and a corresponding method to LogMessages and implemented it in ErrorConsoleViewModel to provide functionality for clearing log information in the console interface
updated the assignment of mRecentsAnimationController to null to ensure proper initialization of the controller
updated methods in Debug , CaptionMap , and DummyCaptionMap for improved locale handling , and modified message methods in CaptionMap to enhance code clarity and ensure consistency in locale management across the codebase
updated connection pooling behavior in multiple test classes and adjusted execution count in SequenceOptimizerIdentifierTest to improve connection management and ensure accurate execution count in tests
[ grid ] adding opera driver to session map
show an error message when a file can not be download .
added new Lifx product definitions while updating an existing product to enhance the product catalog for improved user interface representation
added asynchronous handling for replica creation in OverseerCollectionProcessor and CollectionsHandler to improve performance and allow asynchronous operations for replica management
removed redundant variable declarations and simplified primary key and primary key name generation in PostgresDatabase and PostgresDatabaseTest to enhance code readability and maintainability by reducing redundancy
modified LogPanel initialization to use the refid if it is empty to ensure the LogPanel is created with a default refid when no reference ID is provided
bugfix : wrong model space rotation in skeletoninterboneweight ( ) ( fixes # 488 )
added a method to destroy the browser component in AndroidImplementation to ensure proper resource management by stopping the browser component when it is destroyed
added a call to wait for the active collection of " readApiTestViolations " in AutoScalingHandlerTest . java to ensure that the system behaves correctly under specific conditions
modified the iteration logic for terminal attributes in ScreenTerminal . java and added rounding checks in Tmux . java to improve terminal rendering accuracy and manage background color dynamically
updated the controller state checks in SoftResetAction . java to include additional conditions to enhance the accuracy of controller state validation for better functionality
add disabling of on - disc stream cache to fix textpack reloading
added conditional logic to set parentFolder in Request and RequestV2 classes to ensure correct folder retrieval based on media renderer context
cloudstack - 2088 : fixed issue in listnetworks ( # 2304 )
replaced direct file deletion with a custom close method to ensure proper resource management and prevent potential memory leaks
ignore http 403 error in postforentity call
log4j2 - 1343 abstractloggertest now also test getoriginal ( ) behavior for the messagefactory2adapter
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to DataSizeTest , DurationTest , and SizeTest classes to suppress read warnings related to serialization in the test files
updated regex from " ( [ 0 - 9 ] { 1 , 2 } ) " to " ( [ 0 - 9 ] { 1 , 3 } ) " in Version . java to correct the version identifier to reflect the latest release
added initial and dismiss delay settings in ExtractionModelFrame to improve tooltip display performance and error handling
refactor ProjectCommand to utilize a set of BuildTargets for passed - in tests to improve code clarity and maintainability by reducing repetitive method calls
added timezone setting and assertion in TimeTest . java to ensure correct formatting of time output
[ java ] remove mention of deprecated mediasessionconnector . getsessionid ( )
use the ssl impl to get the sslsupport for the current session , so it can be reuse by other plugins .
updated accuracy display string concatenation in GpsLoggingService . java to ensure accuracy information is displayed correctly based on user preferences
added a method to check if futures is enabled in BinanceExchange and updated BinanceAccountService and BinanceTradeService to streamline future handling and improve code maintainability by reducing redundant method calls
continue issue 715 [ admin : listinstructors -- > do not display in admin account management page ]
added method to set the accept queue size for the connector to optimize resource usage based on maximum worker threads
replaced class name retrieval with a constant for better readability to improve code maintainability and reduce duplication in property management
camel - 8563 fixed the npe issue of jmsfactory when use http and jms again . thanks to benjamin graf for the patch .
replaced ` parseErrorHelper ` with ` validationError ` in ` DrillSqlWorker . java ` and refactored test methods in ` TestWindowFunctions . java ` to improve error handling consistency and simplify test setup
gcinspector : remove assertion because duration be zero for a really fast collection .
fix nodewithjavadoc handling of method with line comment .
added OS detection method and modified memory handling capabilities in ReserveMemory . java and WhiteBox . java to improve cross - platform compatibility and enhance memory management
added calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner to enhance resource management by ensuring proper handling of region closure and splitting
hbase - 23657 hbaseadmin : print the procid in the description ( liu shaohui )
( chore ) camel - cxf : fix fail unit test due to interface change
refactor the serialization of YamlChangeLog to use a map for better organization to improve code readability and maintainability by separating map handling
updated print statements in SchemaPrinter . java to use a newline instead of an empty newline to improve readability of output messages
removed unnecessary chunk regeneration code and updated message sending in DebugRoadRegen . java and SchematicHandler . java to streamline code and improve readability by simplifying regeneration logic
updated HomeFragment instantiation to use getActivity ( ) instead of getContext ( ) to ensure compatibility with Activity context for UI elements
hhh - 11889 : added @ genericgenerator ( name = ' native ' ) to some generated value
removed the country parameter from the getSystemTimeZoneID method in TimeZone . java to simplify the method signature and focus on zone ID retrieval directly
fix buffer issue with zip2 output
[ web ] move logger into appw and windoww to make it easy to use
added a constant VALUE _ TYPE _ EMPTY and modified the create method in Value . java to use it to improve code clarity and maintainability by using a defined constant for the type
updated group comparison in GroupManager . java to use ` equals ( ) ` for better readability to improve code clarity and avoid potential null pointer exceptions
refactor Liquibase classes for improved clarity to enhance maintainability and readability of the code
simonstewart ( on behalf of malcolmrowe ) : make the javadoc a bit easy to understand
added a new method ` newInstanceExact ` in ` TargetGraphFactory ` and updated instances accordingly to provide a flexible instantiation of target graphs
fix typo in ` ` minrowcompactedsize ' ' and ` ` maxrowsize ' '
fix versioning issue with gson from library refactoring .
added state management for the object in NativeArray to ensure proper handling of elements when the object has no previous elements
update file handling logic in FileUploader . java to ensure the correct parent file is saved and assigned for the current upload process
added a new file ` UTF8ReaderBug . java ` to test UTF - 8 character handling to address the UTF - 8 character encoding issues in XML parsing
added unit test base on user forum issue .
remove depth in btcus integration ( # 419 )
added a ` resetAllocation ( ) ` method to the ` Wrapper ` class and invoked it in the ` SimpleParallelizer ` class to ensure that allocation variables are correctly reset during parallelization
removed an unused import of AssertTree in AmbariManagementControllerTest . java to clean up unnecessary dependencies and improve code clarity
replaced direct calls to System . getProperties ( ) with synchronized blocks for updating configProps and props to ensure thread safety when accessing system properties
[ hotfix ] [ table - common ] fix typo in javadoc
refactor AbstractDoubleArrayAssert for improved clarity and structure to enhance maintainability and readability of the code
modified width and height adjustments in Legend . java to include width and height adjustments based on array index to improve layout handling by accounting for text entry space only
added test methods for delay and abort in CodeFirstSpringmvcIntf and TestResponse classes to enhance coverage and ensure proper handling of invocation exceptions
replaced ` d . get ( fieldName ) ` with ` d . getValues ( fieldName ) ` and added support for multiple values in ` MoreLikeThis . java ` to improve retrieval efficiency and maintainability of term frequency data
replaced the method of obtaining the source path for build targets in Omnibus . java to improve code clarity and utilize the new BuildTargetSourcePath implementation
remove chat message from the console when versioning be disable .
replaced Collection with List for filePaths in MediaFolder . java and added numberOfFiles variable to enhance type specificity and clarity in the code structure
removed the " - b " argument from the AidlStep class and updated the formatted string in GenAidlTest to streamline the command and ensure consistency in output formatting
# 44 re - enable deletion of deleted edge when there be no bug
removed a TODO comment from the FakeHttpLayer class to improve code clarity and maintainability by unit testing
update error handling in EmbeddedLeaderService to use revokeLeadership ( ) instead of handleError to improve clarity and functionality of leader revoke operations
compositediscoveryclient refactor : use reactivex api instead of stream . collect ( ) . tomap ( ) in reduce ( )
[ geot - 6898 ] fixed usage of deprecated ` applysystemconfiguration ` method in ` boot `
[ flink - 34126 ] [ doc ] update jobmanageroptions description and java doc
show widget or work profile if there be no widget / result
only set wstx output factory on classpath if they be not available
refactor test setup in AuditAliasCommandIntegrationTest for better readability to improve code clarity and ensure proper setup before each test
removed unnecessary logging statements from WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up unused code and improve readability
( chore ) camel - cxf : fix miss @ test annotation
added error handling for periodical refresh failures in CachedStore . java to improve robustness by logging errors when refresh fails
fix # 4550 - ensure that auditprincipalidprovider be always add to cascoreauditconfiguration
updated HSSFCellStyle and HSSFPalette to improve background color handling to ensure consistent color management for different formats
updated ZonedDateTimeFormatterBenchmark to improve test coverage to enhance accuracy of date - time formatting in the application
refactor DistributedUpdateProcessor to enhance testability and improve state handling logic to improve code maintainability and ensure correct update processing based on replaying state
added a check for the stage in the SimulationListHandler to ensure that the motor is not null and the current stage is not null before processing
modify / editreplace and / editscript for clarity . close # 1651
add javadoc since to mastersecretextension to clarify what it do
changed the declaration of the processor variable from non - final to final to ensure the processor is immutable after initialization
added a listener for when the end of stream is reached after writing to ensure proper handling of data during writing operations
added " CUBE " to the MySQLDatabase class to support additional database functionality
added a try - catch block around the ` TestUtil . rm ` call for ` snapDir ` to handle potential IOException when rm fails gracefully
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and introduce new test runner functionality to enhance support for multiple API versions in Robolectric tests
replaced reflection - based field retrieval with direct field access for connection timeouts and read timeouts to simplify test code and improve readability by directly accessing properties
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
add a null check for the os variable in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during redirect processing
mow - 1293 : do n ' t draw rectangle with too low bound box in euclidian pie
added a boolean parameter to the jailerMain method and modified error handling accordingly to allow users to specify either data model or extract model as an input parameter
updated documentation to include initial content on callback - still more to add
added functionality to commit unread notifications in the shared preferences to ensure that unread notifications are properly displayed for the pull service
modify pipushable implementation for isnullnode to account for an input that be an unsafe cast from a word value
updated D delta time and memory durations , adjusted loop parameters , and optimized camera initialization to improve visual accuracy and optimize memory usage during rendering
refactor comment item initialization to ensure proper layout management for different device types and orientations to improve user interface consistency and avoid potential null pointer exceptions
replaced trace log level with warn log for aborted background operations to better reflect the severity of the operation being aborted
fix for : http : / / code . google . com / p / mybatis / issues / detail ? id = 561 : add debug information for getmethodinstances .
ggb - 2118 fix : pressing mouse up on ie10 + do n ' t work for ie10 +
add deviceid to the getnotificationusers method for get notification to only filter user by deviceid
updated the base URL for CGIARProvider from " http : / / droppr . org / srtm / v4.1 / 6 _ 5x5 _ TIFs " to " http : / / srtm . csi . cgiar . org / SRTM _ Data _ GeoTiff " to ensure compatibility with the latest srtm library structure
modified MotifFileChooserUI to remove property change listeners and added a new test class for UI behavior to improve event handling and ensure proper UI behavior during file selection changes
change handle ( ) method to return false to ease of use
refactor methods in BuildRuleResolver to improve clarity and functionality to enhance readability and provide more informative error messages when a rule is not found
added visibility setting for transportSpinner based on makingShortcut condition to improve user experience by hiding the transport spinner when making shortcuts
added null check for attributes _ field and created two new classes with annotations to ensure proper handling of null values and implement demonstration of annotations
added back button click detection to various fragment classes to ensure back button is only pressed when the corresponding button is clicked
added support for LONG _ VIEW _ INDEX _ ENABLED in QueryServices and updated MetaDataClient to use it to enable or disable long view index functionality based on user settings
change the string appended to " v " in SDRTrunk . java to correct the capitalization of the variable ' v '
clean up privatekeypath test to prevent filesystem pollution
remove unused column position parameter from table . diffdropcolumn ( )
update IndexWriter and IndexWriterConfig to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the current version of the test
hbase - 2769 - hbase - 2690 use strict hbase if configure to false to disable column family check
[ java ] : change type of logrecordingchannel to logsubscriptionid to avoid null pointer exception .
replaced startActivity calls with startActivitySafely for voice button functionality to improve user interaction by handling voice button interactions more effectively
added a condition to return early if there is a single JSON node and its text value is " i " to improve efficiency by avoiding unnecessary processing for single JSON nodes
hbase - 18315 procedure v2 - addendum : fix typo in comment
updated applyResourceBundle method to include default locale and system class loader to ensure correct resource loading in different locales
[ j2kt ] implement normalizearray createtypeskotlin for kotlin backend .
updated logic for counting term indices in PerSegmentSingleValuedFaceting . java to ensure proper handling of missing terms during searches
fix npe when reading / processing metadata of any mod
added a new module - info . java and a test class OSGiTest . java for Gson annotations and imports to ensure correct handling of package names and dependencies for Google Gson
kristianrosenvold : add concurrency test for check if a controller service be enabling
hbase - 15836 fix testasyncprocess hang due to htable . autoflush ( ) change
fix : fix a bug in the previous commit . ( # 2478 )
geot - 5287 : add a method to check if the user data be not null or empty .
removed unnecessary ` HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify code by eliminating unnecessary exception handling
refactor RelyingPartyRegistration class to improve code clarity to enhance maintainability and readability of the registration process
7096170 : javac should be remove unused support for enable javac logging
added a new class ` InJavaSourceSet ` to handle Java source sets to enable the processing of Java source sets in the search process
update testGDALParser to use a dynamic file fits filename instead of a hardcoded path to improve flexibility and maintainability of resource loading in the parser
( chore ) camel - core : added helper method creategetter ( )
removed unnecessary check for useExtStorage in DirectUpload . java to simplify the condition for better readability and maintainability
added a new constant for no commit functionality in the IndexerMapReduce class to enable users to control the committing behavior of the indexing job
api : createvolume - allow either diskoffering id or snapshotid to be pass while create a volume
updated content assignment in ToHtml . java and modified assertions in BaseTestCellComment . java to ensure that empty notes are correctly validated and improve test clarity
added null checks for amountToAdd and amountToSubtract in LocalDate , LocalDateTime , and ZonedDateTime classes to ensure proper handling of potential null values to prevent potential runtime exceptions
added a new file ` Issue382 . java ` with methods to handle error types to implement tests for error handling and exception management in the application
remove code duplication by use static import from positionutils . java
added a condition to hide the text view in AttachmentAdapter to improve user interface by hiding unnecessary text when not needed
fix : fix bug with astparent consistency checker ( # 1292 )
[ java ] fixing miss parenthesis in firefoxoptions # getcapabilities .
[ 1.19 . x ] fix liquid block not pick up bucket correctly ( # 8872 )
no - jira - fix test regression : http : / / issues . apache . org / jira / browse / amq - 2902
updated time zone setting from " PST " to " America / Los _ Angeles " to ensure accurate time representation for the Pacific Time region
[ java ] update distinct error log to reflect svm behavior .
updated system property checks for Nightly , Week , and Slow in LuceneTestCase . java and RunListenerPrintReproduceInfo . java to ensure tests are validated using the appropriate annotations for additional functionality
fix http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48686
restrict access to class , method , and proxy for graalcontext ( graal - 290 )
fix for issue 277 , where updatepixels ( ) be not properly call .
updated HiveAbstractReader to include partition in the verification of transactional properties to ensure proper handling of transactional properties for improved data processing
updated the scroll overlay logic to include an additional check for last overlay sroll to improve user experience by ensuring correct scroll behavior based on overlay state
hhh - 11543 make jdbc batch builder thread - safe
improve error message when we ca n ' t reach the analysis
added a new test class ` MockWithStaticStateDemo ` and a test method ` spyingOnAClassRetainsState ` to verify the functionality of spying on a class retains state in the partial mocking framework
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure SQL parsing and deparsing functions correctly with brackets and orders
modify the action execution logic in SecurityUtil . java to handle exceptions more gracefully to ensure proper execution flow when the ugi is not available
added error code reporting for audio buffer allocation errors to improve debugging and error reporting for audio buffer allocation issues
camel - 7737 : renamed method to make it easy to use . the latter will be remove by camel - quartz .
hive - 21632 : improve precision and scale handling in rexnodeconverter ( jesus camacho rodriguez , review by gopal v )
updated WebAuthnMultifactorDeviceProviderAction to use Optional for vendor and device properties to improve handling of potential null values when there are no vendor or device properties
modified the account update method to convert the current time to a long representation to ensure accurate account update output by converting it to a string representation
replaced imports from ` AxialStage ` with ` RocketComponent ` and modified mouse handling logic in ` DesignPanel . java ` to streamline the code and improve mouse interaction efficiency
added long running time configuration to Args . java to allow users to optionally set the running time for improved performance
fix # 2027 - fix false positive in ref comparison
modified import statements and service initialization in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes to streamline dependencies and improve code consistency across the codebase
[ geos - 7109 ] avoid xssdecimalbinding . tostring ( ) and improve test with gml3 encode
updated assertions in TestRestClientRequestImpl to use fluent syntax to improve readability and maintainability of the test code
updated the condition to include a reference database check in MissingUniqueConstraintChangeGenerator . java to ensure proper validation of unique constraints based on database equality
modified the ` addAndroidConstants ` method to return early if ` androidProperties ` is accessed after the specified ` run _ proguard ` property to streamline the code by eliminating unnecessary checks and improving clarity
replaced assertEquals statements with await calls in multiple test classes to improve test reliability and readability using awaitility
added user _ args to ImmutableMap in ChromeTraceBuildListener to enhance trace build configuration by including additional parameters
[ gr - 3998 ] fix loading of library and bundle on jdk 11 .
fix ( hep - system ) : correct typo in hepplanner trace message
added a new file TheRockMetaDataDemo . java to demonstrate fetching exchange metadata to enable users to access and print exchange metadata for TheRockExchange
added ` strictfp ` class to ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes and implemented a test for conversion behavior to ensure consistent behavior of ` ParseDouble ` by preventing unnecessary conversion operations
removed unparse identifier for column names in ColumnStatsSemanticAnalyzer to simplify the column name handling process
added a test method ` replaceField ` to the ` JavaTemplateContextFreeTest ` class and modified method parameters in ` BlockStatementTemplateGenerator ` to ensure correct handling of variable declarations and improve code clarity
added a check for non - synthetic properties in the static class validation to ensure only non - synthetic properties are processed
removed a call to ` projectFilesystem . getPathForRelativePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify the code by directly using the provided basePath
added handling for pending Rescue information in IkStepDefinition to improve control flow behavior with pending Iescue handling
added ` equals ` and ` hashCode ` methods to multiple type classes to ensure consistent equality comparison and hash code generation for various data types
added a static method getSyncLevel to retrieve the SyncLevel from the specified parameters to ensure consistent usage of SyncLevel across different scenarios and provide a way to retrieve sync level configuration
test fix : fix flaky test ( # 1500 )
added a condition to check if the slice state is not a recovery state to ensure that the slice ' s state accurately reflects the recovery state
fix a bug in ` opencv _ core . create ( ) ` that incorrectly map to ` opencv _ core . create ( ) ` .
added SDK path handling to AppleBundle and SwiftStdlibStep classes to ensure proper SDK path management for process execution
[ flink - 7569 ] [ blob ] refactor Transientblobcleanuptask to use bloom filter for blob deletion .
network : fix typo in log message .
updated PasswordEncoder and StandardPasswordEncoder classes to improve password encoding consistency
added row type conversion for sort and union rows in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type handling during query processing
improve betterblockpos javadoc ( # 290 )
fix classloading in embeddedvelocitytoolboxview . java by use the classloader .
refactor version handling to use a consolidated method for version checks to improve code readability and maintainability by centralizing version retrieval logic
added support for OracleDatabase to handle trailing slashes in SQL statements to ensure proper statement formatting and avoid potential issues with SQL injection
add new flag findbugs . nullderef . assumensp to nullvalueanalysisfeatures
simonstewart : make the build work on my machine by use a free port rather than a fixed port number
# 1588 : drawaudio ( slider ) now do n ' t clip frame anymore .
added method ` addMultifactorAuthenticationProviderBypass ( ) ` to ` DuoSecurityMultifactorAuthenticationProviderBypassConfiguration ` to enhance the functionality for secure authentication handling
fix a bug in maxrectspacker . it be not update the score calculation properly .
drools - 958 - fix javadoc error and format in class javadoc
add help page to ` ` help ' ' tab and inform user
added GeocodeProviderFactory and Constants interfaces to the project to implement a new geographical structure for managing storage preferences
updated import statements for CharArraySet in LuceneAnalyzerUtil and LuceneTokenizer to ensure consistency with the correct package structure
replace usage of ExpectedException with a fail method to improve test clarity and ensure exception handling is more consistent
bug fix : do n ' t delete object in memorycommand if object id do n ' t match
refactor SegmentsInfoRequestHandler and CollectionsAPISolrJTest to improve query handling and ensure correct collection management to enhance accuracy and maintainability of the code while ensuring correct functionality for dynamic collections
updated the calculation for numPredictiveAppCols to account for phone devices to ensure accurate display of app columns for non - phone devices
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` for handling scalar subqueries to simplify the code and improve clarity in scalar subqueries handling
fix # 2209 by put the item in the item stack at the end of the block instead of rely on the world stack for item deletion .
replaced layout parameters for improved layout management to ensure proper placement and sizing of the search bar layout
change the yahoosession . run ( ) method to start ( ) to ensure the proper execution of the task
removed the boolean variable ` standAloneClient ` and improved null checks in ` HiveMetaStoreClient ` to enhance clarity and prevent potential null pointer exceptions when shutting down the metastore client
updated method to use ` Category . DISPLAY ` instead of ` getDefault ( ) ` for default display script retrieval to ensure the display script is honor the default locale ' s display settings
updated references from ` BASE _ URL _ PROP ` to ` ZkStateReader . CORE _ NAME _ PROP ` in ` Replica . java ` to ensure consistency by using the correct constant values from the ZkStateReader class
replaced the use of ThreadLocalRandom with a Random instance for testing to improve performance and reduce unnecessary threading overhead
refactor launcher backup logic to check if launcher is ready before proceeding to improve code efficiency by avoiding unnecessary backup operations when the launcher is not available
updated error messages in Cell . java to include specific spaces to improve clarity and specificity of exception messages for better debugging
camel - 13557 : added test for resourceilience . thanks to joao lohma for the patch .
updated Candle chart properties by changing body space to bar space across multiple files to improve clarity and functionality related to bar spacing in the chart rendering logic
removed deprecated methods from ShadowProcess class to improve code maintainability and reduce technical debt
make filemessagelistest aware of temp directory . fix # 425
added multiple logger configuration to toggle debug levels to improve visibility of the logging for debugging purposes
changed the access modifiers of ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` from instance to static to enable static access to the highlight state in the ` SpanScorer ` class
added a method to retrieve the state and modified conditions for overview mode handling to improve state management and ensure proper handling of workspace states
rename various abstract assertion classes and constants across multiple files to improve clarity and consistency in naming conventions
added a condition to check if cache is enabled before notifying a new template to ensure that new templates are only notified when the cache is enabled
added coreScopeSession variables and updated data import handling in context - related classes to improve the management of core scope sessions and enhance data import efficiency
fixed bug in databasemetadatest and add test for primary key of measurement
fix -- permissions - config - path argument in pantheoncommand ( # 1741 )
refactor session creation logic in HttpSessionContextIntegrationFilter for clarity and consistency to improve maintainability and reduce unnecessary complexity in session management
added a new file TestIfWithDeadRegion . java that contains a method for retrieving a string with dead region to facilitate testing of string handling with dead region scenarios
rename to usd , fix typo
replaced direct iteration with a high resolution timer to enable and disable concurrent access testing to improve concurrency handling and ensure proper resource management during tests
added a static UI setting and conditional logic to handle toast notifications based on user settings to enhance user experience by providing immediate feedback when static UI is not enabled
refactor the return statement in WindowsSecurity . java to use a lambda expression instead of an anonymous class to enhance code readability and ensure proper resource management
updated ` SamlRedirectLogoutHandler ` and ` WhitelistLogoutHandler ` to use ` setParameterIfAbsent ` for better null safety to enhance code reliability by preventing null pointer exceptions when the client ID is not present
updated message dialog to include error message and language handling to improve user experience by providing clearer error feedback
tika - 2272 -- add detection for xls and xls file format ( tika - 2273 ) , tika - 387 and tika - 3526
[ core ] improved debug logging ( # 2638 )
camel - 10373 : fix for camel - example - spring - boot and camel - example - spring - boot run out of the box
do n ' t wait for migration from remove node , mention flag to skip
do n ' t set default capture device when it ' s disabled
added WebSocket configuration options to ShenyuConfig and integrated it into the WebSocketPluginConfiguration to enhance flexibility and configurability of WebSocket connection settings
fix : fix listener invocation in ` cachelambdalistener ` for testng
modified the content length assignment to check if it is not empty before adding it to the document to ensure that the content length is only added if it is not empty , improving data integrity
make sure to remove map entry from the solvermanager . getproblemids ( problemid ) if it ' s close
[ iotdb - 5490 ] fix concurrent insert time series ( # 8963 )
added a check method to the Authz class to enable conditional evaluation of authorization results
changed access modifier of methods from public to protected in multiple classes to enhance encapsulation and restrict access to methods within the same package
bug 12425 : do n ' t allocate / allocate ip in listpublicipaddresses api - reserve ip be not consider when list publicipaddresses
removed conditional check for compliance with RFC2616 and updated test method names for consistency to simplify code and improve readability by removing unnecessary test cases
refactor thread initialization to use a separate method for better readability to improve code organization and maintainability by reducing duplicate logic
added a method to retrieve an external storage directory and created a test class for its functionality to ensure proper handling of temporary files and validate the functionality through unit testing
[ drools - 3762 ] avoid npe when compile with mvel 2.1 . 0
refactor logging configuration files by ensuring consistent spacing and formatting to improve code readability and maintainability
[ fix ] add cause to actionnode ' s exception message ( # 897 )
remove ` ` tel : ' ' from tika convert tel : to tel a nukkit protocol .
updated visibility logic for shared file icon in FileListListAdapter to improve user experience by showing shared file status accurately
removed deprecated HIVEOPTSORTDYNAMICPARTITION configuration from HiveConf . java and TestTxnCommands3 . java to encourage the use of newer configuration settings for better maintainability
updated the ` Operation ` class to accept ` confOverlay ` as a parameter and changed their initialization in ` ExecuteStatementOperation ` to streamline configuration handling and enhance code readability
replaced instances of ` Lists . newArrayList ` with ` ArrayList ` and updated method calls in ` BTCMarketsStreamingService . java ` to improve code readability and utilize modern Java collections utility methods
fix compile error due to ogr
added the ` onErrorInStep ` method to the ` StepListenerSupport ` class to handle error handling in the step execution process
fix link in wallet . notifytransactionisinblock ( ) javadoc .
camel - 8461 fixed the issue that camel - netty - http do not work with camel - netty
use log instead of system . out . println to prevent intermittent test failure
added a check to prevent exceeding the size of the connection list in DbConnectionDialog to ensure that the database connection logic handles cases where the row index is out of bounds
add a test case for false positive on method with the same name a enclosing class .
added an ExtendedPlatformComponent class and modified ManagementFactory to utilize it to improve management handling for platform MBean interactions and enhance code clarity
replaced single quotes with double quotes in SQL statements to ensure proper SQL syntax handling for special characters
updated response paths in Bleutrade DTO tests to include " org / knowm / xchange / bleutrade / dto / " instead of " org / knowm / xchange / bleutrade / dto " to ensure correct mapping of data types to their corresponding DTOs for accurate testing
refactor TextEscapeUtils to improve text escaping functionality to enhance security and performance during HTML escape operations
added a filter parameter to the AbstractSpatialFieldType and modified the instantiation of FilteredQuery to improve query handling based on parameters and ensure correct filtering behavior
added progress updates in GpsLoggingService and invoked updateResultsEmail method in AutoEmailHelper to enhance user experience by providing updated results email
replace ArrayList with HashSet for inlinks to improve performance and prevent concurrent modification issues
[ tradfri ] update discovery result cache on stop ( # 15832 )
updated methods and parameters to use a boolean parameter for filtering and modified test cases to enhance functionality to control server - side filtering behavior for partitions
add the ' Abandoned ' status to the TicketModel and update related classes to include functionality to enhance the user experience by including additional functionalities related to ticket management
remove the hack to fix the issue that ' s break in master
change LlapRowRecordReader and LlapBaseInputFormat from Text to BytesWritable for improved data handling to enhance performance and memory efficiency in reading and writing rows
non - native - jvm : detect o x86 - bit jvm on aarch64
pdfbox - 2158 : fix a bug in remove a reference to the parent when copy a name .
added a new daemon option " DAEMON " and implemented daemon initialization in TerminalClient to enhance user experience by providing a web pendant UI when daemon mode is active
add a new file ` FlushIndexTask . java ` implementing a ` PerfTask ` class to optimize index writing to improve performance task handling in the Lucene benchmark system
fix calculate flush path size during memtable flush . patch by jbellis
added support for SEASONS output in the MediaLibraryFolder class to ensure compatibility with additional formats related to SEASONS
added a new file LocalSocketAddress . java to test network interface connectivity with IPv6 addresses to ensure that the application can handle and validate IPv6 loopback addresses correctly
updated grid size points in GridSizeMigrationTask . java to align grid size points with new configuration requirements
updated method calls from ` getName ( ) ` to ` getName ( ) ` and ` getFields ( ) ` to improve consistency and simplify the retrieval of fields from the classInfo object
added a read - only option and modified transaction and transaction handling in the Context class to ensure that operations are only performed in read - only contexts to prevent illegal state exceptions
refactor LookAndFeelCommand class to improve code structure to enhance maintainability and readability of the code
fix logic error in blockboxing . getchainhead ( ) when boxindex = = - 1
updated the assertion in GracefulStopTest to check for both ClosedChannelException and EofException to improve error handling by ensuring more robust exception types are validated
replaced multiple calls to lock - based access with direct access to improve performance and simplify code by reducing redundant synchronization
networkparameters : remove obsolete reference to acceptableaddress in javadoc
removed conditional logic for setting allowAccountAssetOptimization to streamline account asset optimization handling by eliminating unnecessary checks
added a new constant ` J9 _ GC _ POLICY _ NOGC ` and initialized it to ` J9 _ GC _ POLICY _ NOGC ` to disable garbage collection for the current process
remove invalidprotocolbufferexception check . ( # 1443 )
remove exceptiontypechecking ( be govern whether the exception be handle by a while )
fixed licensing issue with miss localization .
added a new file ` ProcessorInfo . java ` that contains processor information for processor availability to provide functionality to identify and mask Java processes based on available processors and CPU permissions
added support to specify a default stylesheet for HTML output in PrintingBugReporter to enhance flexibility in specifying project styles for HTML output
fix : do not ignore the ` logger . config ` config in logbackloggingsystem
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent classes to utilize a new event handling mechanism to improve code clarity and enhance event - driven architecture for service component recovery
added a new conditional property for tag propagation in the Sleuth class to enable flexible integration with different Spring configurations
refactor rust compilation logic to use a switch statement for case handling to improve code readability and maintainability by clarifying the case structure
updated oauth2LoginLinks method signature to accept a MultiValueMap parameter to enable query parameters to include error handling
hbase - 16231 fix halfstorefilereader . getfirstkey in hfilereader ( sergey shelukhin )
fix issue with timing . always annotation be always
added parameterized test for layer norm function in nd4j backend . ( # 9953 )
refactor showShareFile method to use getFileOperationsHelper ( ) for improved code organization to enhance code maintainability by centralizing file sharing functionality
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to verify the functionality of updating plugin configurations with relative Clob files
convert the proxy type to lowercase when setting it to ensure consistency in type handling for proxy types
add new mod _ minecraftforge . java file that be add to the forge . src . forge package .
refactor JdbcDatabaseSnapshot to improve column caching logic to enhance performance by reducing the number of cached columns when retrieving columns
added a new container to display a label with a landscape background to enhance the visual appearance and readability of the CSS border
fail gracefully if status code of loadbalancer fails
replace fill _ parent with MATCH _ PARENT in CellLayout constructor to ensure that the layout occupies the full area of its parent layout
updated the construction of parentTaskName to use System . currentTimeMillis ( ) instead of System . nanoTime ( ) to ensure accurate time representation for task identification in the system
added error handling for invalid AddServiceRequest input to improve robustness by providing informative error messages when input is invalid
fix bug : indexdatabase # getindexversionedfiles ( ) return false when there be no history file
[ giac ] make sure integral [ x ^ 2 + 2 , x ^ 2 ^ 2 ] work again
update AnonCipherWithWantClientAuth . java file to ensure compatibility with WantClientAuth protocol
added @ Deprecated annotations to ProducerTemplate . java to indicate that certain classes or methods are outdated and should not be used
removed deprecated methods from JLayer . java to improve code maintainability and clarity
fix flaky test by lower the time on slow ci server
updated password encoding logic to use a salted pass instead of an input string to improve clarity and accuracy in password encoding
replaced direct usage of ` ViewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to improve code readability by reducing unnecessary variable declarations
updated Response class for improved error handling to enhance reliability of response processing
fixed - incorrect use of long . min _ value for maxtimestamp in sstablemetadata ( cassandra - 7369 )
reduce the height of the callparticipant to 60 because it make sense
added null checks for reply variables before accessing its contents in TweetActivity , TimelineArrayAdapter , and TweetView to ensure that replies are only retrieved when they are not null to avoid potential NullPointerExceptions
added ` toString ( ) ` and ` hashCode ( ) ` methods to ` HitbtcBalance ` class for better string representation to improve readability and functionality of the ` HitbtcBalance ` class
fix ( sql ) : fix order by in statement bug ( # 248 )
fix # 74 - retriesexhaustoesustwithdetailsexception . tostring ( ) do n ' t display a stack trace
ggb - 2336 do n ' t send context - aware action on gcode update , close open cookie
updated imports and connection manager initialization to use hc . client5 . http . core5 to ensure compatibility with Apache Commons Lang ' s newer client versions
update energy handling logic in PipePowerWood . java to ensure energy is processed correctly without exceeding the requested energy
added a check to delete the temporary output file if it exists to ensure that the temporary output file is removed to avoid conflicts
updated the JSON property name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a test for fetching trades in BitstampStreamingMarketDataServiceTest to ensure consistency with API specifications and improve test coverage for trade data retrieval
fix for http : / / issues . apache . org / jira / browse / amq - 4798 - optimize performance regression in replayprocessor / replaysubject
update expectedCitation string format in CitationStyleGeneratorTest . java to ensure consistency with standard formatting conventions
migrated HDR - related SQL statements to simplify the conversion of database columns into a single SQL statement
g3d - 688 : show demo for av in exam , not only equation for exam
fixed npe in sipcomvaluetextfieldui . getcomponentat ( ) if null .
hbase - 8569 metareader . scan ( ) now set a default cache value of 100 for meta scan ( ted yu )
updated the script initialization source from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr . sql " to ensure the script is loaded for the minimr context
8272185 : doc of [ strict ] math . floordiv ( long , int ) erroneously document int in @ return tag
added a new BooleanFlag named ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to provide a debug option for enabling transient taskbar functionality
add documentation for accessdexecutionvertex , so that it do n ' t have to end up in the documentation
added a condition to set the density if scale is 3 to 3 to ensure proper scaling of the graphics based on scaling
rename the ` optional ` field to ` vararg ` in the ` Parameter ` class to improve clarity and better represent the intended functionality
hbase - 14391 addendum to fix hbase - 422 ( addendum )
simplified the assertion in TestClusterUpgradeUtils to use a lambda expression instead of an anonymous inner class to improve readability and maintainability of the code
updated log messages for suspension and added new methods in AsyncContextTest to improve connection handling and enhance asynchronous processing capabilities
added a boolean parameter ` showArrow ` to the constructor of ` SearchUiManager ` to enable arrow display functionality in the UI
performance improvement for lock _ mode in mssql and db2
[ gr - 35537 ] only run bigdata - core test on linux only .
replaced specific checks for input types with specific implementations to ensure correct conversion from Integer and IntValue to String for better data handling
add good error message when use primary and multiple primary key specifed .
added conditional logic to set drawable resources based on LMP status in multiple classes to improve app visuals for devices running the LMP theme
add error message for no isolate to query for flutter view ( # 4569 )
added multiple methods to create headers for content type options , xss protection , cache control , and strict transport security to enhance header configuration flexibility for enhanced security features
refactor ObjectEnumerableAssert . java for better clarity and organization to improve maintainability and readability of the code
[ java ] fixing devtools provider to create a connection to selenium server .
added type attribute to @ aggregateroot to fis test failure
added support for prebuilt libraries in Python binary handling to enable better management of prebuilt libraries in the build process
fix # 1489 - add clientauth option to enable http server to use client auth mode
hive - 23702 : repl directory should always be set by system property ( aihua xu , review by naveen gangam )
replaced task visibility checks with direct retrieval of task view information to simplify the logic for determining task visibility visibility
add time out to test that can take a long time to finish
remove the clearAll ( ) method from DataTableTopComponent to optimize performance by eliminating unnecessary operations
( chore ) camel - api : use instance variable for flow controller instead of local variable
[ flink - 23454 ] [ runtime ] fix the bug of oom in the operator tree generator
feat ( deps ) : update dependency io . github . classgraph to io . github . classgraph . classloaderhandler in module - info . java
fix # 2843 save planning problem in event thread
added JsonIgnore annotation to ApplicationSettings . java to exclude sensitive fields from JSON serialization
check for null to avoid ` ` null pointer exception ' '
updated the null check for queryInfo in QueryTimeManager . java to enhance code readability and prevent potential NullPointerExceptions
fix auto workbench crash when no crafting slot be empty . close # 1651
fix g200 text coordinate detection ( fix # 604 )
changed variable and method names from ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to improve clarity by reflecting the distinction between incoming time column names and actual time column specifications
added multiple calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20Token004 . java ` to ensure proper synchronization of block production status
add initializable to the built - in container to allow them to be injectable
polish ` ` add sample tag for task timing ' '
changed ` SYNC _ DELTA _ RATE ` from float to double and modified time calculations in ` AdaptiveFetchSchedule . java ` to improve precision in time calculations for adaptive fetch scheduling
adapt abstractfragmentinsertiontagprocessor to incorporate thymeleaf logging .
changed the type of the _ attributes from HashMap to ConcurrentHashMap to ensure thread safety when accessing shared resources
resolve : http : / / issues . apache . org / activemq / browse / amq - 2873 - copy message before delivering delivery
added new color constants and improved extractInto method to handle fallback color extraction to enhance color processing logic and support for dark text hints
fix a bug where we be n ' t add to srcFolderPath list when the project have no access to it .
updated methods in NotesHelper to include title conditionally to enhance note title management by allowing optional title inclusion
removed the instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl to simplify the session registry initialization process
log reconnection success in nettystreamingservice . reconnect
replaced instances of Factory with Proxy in multiple test files to ensure compatibility with the updated Proxy implementation
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management by using a hash set instead of a linked queue
modified the create method to include the address as a string representation and updated exception message checks to improve clarity in error messages and ensure address information is validated correctly
added a check to ensure the view directory is under the repository directory before proceeding to prevent erroneous operations when the view directory is within the repository directory
remove unnecessary drag init in tab header area ( # 4744 )
added multiple command - line options for the UseCompressedOops option in TestDumpAndLoadClass and TestDumpAndLoadClass to ensure correct handling of compressed class pointers during runtime
remove error log when peer update log be not in active or replay state .
deleted the ConnectionHook . java file to the functionality was no longer needed or duplicated elsewhere
added assertions to validate synchronization with the leader in the DistributedUpdateProcessor and related test classes to ensure correct synchronization behavior across different scenarios
fix rest dsl array enum test after switch from spring - boot
updated ApexLanguageModule to use internal version string and modified hasNamespaceGuardedAccess method to return false to ensure compatibility with versioning and enhance access control for namespace handling
update copyright year to match last edit in jdk8 langtools repository
refactor AggregateEngine to use IoTDBThreadPoolFactory for better thread management to improve performance and scalability by ensuring appropriate thread pool usage
issue # 3170 - use bytebufferpool from connector rather than standardbytebufferpool
added scrollToPositionWithOffset functionality in UploadActivity to ensure proper scrolling position based on the index parameter
fix ( griffin ) : fix timestamp column metadata when use globally .
added animation dispatching for transition step animations to enhance animation performance and responsiveness in the launcher
add check to disable default user agent in the http client builder to ensure compatibility with user agent configuration
added pubsubbub flag and corresponding getter / setter methods in ApplicationSettings to control the handling of pubsub subscriptions based on configuration
changed the access modifier of the finalize method from public to protected to enhance encapsulation and restrict overriding capabilities
updated method to check for synthetic classes in StubJarClassEntry to ensure correct identification of synthetic classes in the code
restore new dspacerewapp - it be not a proper fix for the rest api .
added error handling for missing columns in CalcitePlanner and implemented getTableAliasContainingColumn method in RowResolver to improve robustness by ensuring that columns are present within the specified table only
[ flink - 21743 ] [ table - runtime ] fix identity for trigger in jobgenerator
improve log for transaction broadcasting ( # 4257 )
make Basicmaptest . putifabsent more thread - safe . also write to stdout instead of stderr
updated variable names for rcfile optimization and validation in HiveClientConfig . java to ensure consistency and correctness in configuration settings
added a new enum TlsClientCertPolicy to manage client certificate policies to improve clarity and maintainability in managing client certificate policies
removed the redundant event sending logic in KrakenFuturesStreamingService . java to simplify the code and improve logging for better debugging
added headers and subprotocols to the WebSocketRoutingFilter and modified the ProxyWebSocketHandler to utilize them to improve WebSocket handling by allowing customizable subprotocols
added a debug log statement for HiveQueryResults fetchReq in HiveQueryResultSet . java to improve visibility into query result fetched for debugging purposes
changed the formatting of dimensions and labels in HolidayEventFormatter to improve readability by removing unnecessary placeholder placeholder
modified the test methods and added a new method to ignore inner class fields to improve the accuracy of inner class handling in the finalize private fields logic
jobexecution # getjobinfo ( string ) : fix # 1499
deleted unused module - info . java and modified buttonShouldOpaque logic in AquaLookAndFeel and AquaUtils to streamline button visibility checks and improve code clarity
updated DrillSidewaysQuery and DrillSidewaysScorer to replace maxFreq with maxCost for improved clarity and functionality to enhance code readability and ensure correctness in cost calculations
added a new property class GeoDegeneratePath to the classRegsitry to facilitate the handling of GeoDegeneratePath in the application
removed the pre - fill parameter from several pool classes and adjusted their initialization logic to simplify object creation and avoid unnecessary object creation
added logic to update and apply taskbar state when not in the launcher to ensure taskbar state reflects the current state for better user experience
added null check before comparing styles in CascadeDeleteVisitor to prevent potential NullPointerExceptions during style removal
fix marqueelabel text wrapping , fixes # 264
updated icon retrieval logic to utilize TreeFileExtension for file types and improved icon resource handling to enhance clarity and maintainability of file icons based on file types
updated assertions in ParallelUniverseTest to use contains method instead of isEqualTo to improve clarity and correctness in testing resource qualifiers
add synchronize when iterate over all test suite in xmlreporter
make sure native query runner be always create for the probability function test
remove shutdownthread from clientcontainer on client shutdown ( # 17362 )
hhh - 5954 : sybase after use statement should not drop temporary table
andreastolftolfsen : add support for color base on htmlunitdriver for webelement .
refactor multiple Java files for improved consistency to enhance maintainability and readability of the codebase
refactor LinksIndexingFilter to improve code readability to enhance maintainability and reduce complexity
updated hex string formatting for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve readability of memory allocation logs for better debugging
ensure source info be refreshed when there ' s no period
added a suppression warning and introduced a new variable ` isEqual ` in the ` MultimapSubject ` class to improve code clarity and ensure proper comparison with the ` actual ( ) ` method
fix wave configuration property for hz range ( # 2079 )
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
updated TreeMap instantiation to use constructor syntax for improved readability to enhance code clarity and reduce boilerplate code
optimise add normal vertex format ( # 4680 )
updated tracing classes to use ` Tracer ` and added visibility checks for message messages to enhance tracing capabilities for better message handling in the application
updated the ` ScheduledTrigger ` to use ` TimeZone . getTimeZone ( ) ` instead of converting ` ZoneId ` to ` String ` to improve code clarity and ensure consistent use of the timezone representation
added AsyncBucket , InMemoryExtension , and modified ConfigurationBuilder to use InMemoryExtension for better memory handling to improve performance and maintainability by reusing InMemoryExtension instances
updated the method for finding test class directories to utilize regex pattern matching to improve flexibility in finding the test class directory from the system properties
reformatted code in AbstractConnector . java for consistency and clarity to improve readability and maintainability of the code
add some more javadoc to the ongoingstubbing class .
added an optional web server parameter to manage web server reuse based on configuration to improve server management by allowing reuse of existing web server instances
updated variable names for clarity and consistency in HttpClientUtil . java to enhance code readability and maintainability by using more descriptive variable names
ww - 4023 add logic to clear the allowlist if it be not empty
changed method name from setOutputSource to setItemWriter in TransformerWriterItemProcessorTests . java to ensure consistency in naming conventions throughout the code
drools - 2803 fix overlap and gap analysis in dmn - model ( # 2803 )
add test for sliding window and extract accumulator for the same name in combinefn .
do n ' t bind all apps when there be no previous app
fix file watcher reload strategy test : remove unused test
Removed unnecessary import statements and formatting in the Solution class to streamline the code for better readability and maintainability
8048549 : [ macosx ] disable usage of screen menu bar if awt be embed in fx
added fall fall to setrawlocation to stop crash .
refactor query execution in SimpleJpaRepository to use criteria queries to improve query performance and clarity by applying specific criteria handling
updated BlockUtil . java to include additional timestamp , difficulty , parent hash , and number in the genesis input to enhance block parsing functionality for better data handling
remove safepoint optimization for non - loop .
added null and empty check for child lists in RSGroupInfoManagerImpl and ZKProcedureMemberRpcs to avoid potential NullPointerExceptions and ensure robust code execution
changed access modifiers of ArtifactResolver class and method declarations from package - private to public to allow access to these methods from outside the package
fixed chunk processing pipeline not be interrupt when client thread be close
added validation to ensure maxBufferedDocs is at least 1 in IndexWriter . java to prevent illegal argument exceptions when maxBufferedDocs is less than 1
added handling of login state in LoginActivity to ensure proper login flow during configuration changes
pump : add null check to prevent npe
updated access modifiers of several methods and variables in HttpShardHandlerFactory and LBHttpSolrServer to protected to enhance encapsulation and improve code maintainability
changed the order value from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE in BaseAuthenticationServiceSelectionStrategy . java and added tests for it in DefaultAuthenticationServiceSelectionStrategyTests . java to ensure correct ordering behavior and validate service resolution in authentication processes
added Jetty server configuration to TestJNDI . java to enable improved handling of JNDI requests for better performance
refactor multiple child operator checks in SortedDynPartitionOptimizer for improved readability and correctness to enhance code clarity and ensure correct behavior when processing multiple child operators
modified return value of the method in FileStreamChannel to always return true to ensure consistent behavior regardless of event loop type
fix possible nullpointerexception in newrow method of statsutils
camel - jbang - camel - kamelet : fix camel - jbang - export to camel - kamelet
updated OSMJob . java to utilize OpenStreetMap authorization for improved token handling to enhance security by ensuring only authorized users can upload the OSM access token
refactoring ptx and hwpf test to make it easy to debug
added clientAuth property and corresponding getter / setter methods in IoTDBRestServiceConfig to enable configuration of client authentication in the REST service
removed unnecessary mocksToBeInjected set in PropertyAndSetterInjection and added a new ChildWithSameParentFieldInjectionTest class to simplify injection logic and add tests for parent - child field injection scenarios
bloom : make params for bloomuriuniqfilter configurable .
update getCursorAdapter to true and add a refresh preference update in TweetPager to enable refreshing functionality and ensure user preferences are updated
updated the intermediate header height ratio from 1f to 75f to improve layout responsiveness by adjusting header height
updated import statements and modified RuntimeEvent to use RecompilationEvent to enhance event logging for recompilation handling
ambari - 20625 . make host _ sys _ prepped system property configurable ( dlysnichenko )
added a boolean parameter to the include method and modified its logic to handle unknown file formats to enhance logging capabilities by allowing conditional logging based on file formats
added a loop to delete the first character at the end of the location to ensure the location starts with a leading slash to maintain proper formatting
added new properties for entity and scores in StaticPipeline . java to facilitate the handling of entity and score properties for better data management
modified filename handling and added configuration checks in WhoopsModule . java and WhoopsModule . java to enhance file path resolution and improve application behavior based on application settings
[ geos - 4746 ] improved lookup of duplicated store by name in catalogrepository
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
renamed MultiLineTests class to MultiLineGridLikeTextTests and added new test methods for caret positioning to improve clarity and functionality of caret positioning in the user interface
camel - 872 : upgrade to spring boot 3.0 . 1 and polish the unit test .
[ iotdb - 5752 ] remove unused assignment from tsfilewrite aligner ( # 7013 )
adjusted memory usage calculation in the TestPromotionFromSurvivorToTenuredAfterMinorGC . java file to accurately reflect the actual memory usage after minor gc
updated log file name from " slf4j - log4j12 - . jar " to " slf4j - reload4j - . jar " to ensure consistency in naming conventions within the logging framework
[ hue ] harden hue bridge test ( # 12902 )
updated package structure for various activities to better organize the code structure and improve maintainability
add ignore to fail test [ drools - 1276 ] ( # 2980 )
added a new method ` PullRequestMergedEventsStream ` to retrieve Avro and GitHub API schemas to facilitate processing of schema files with improved error handling
[ api ] fix typo in parameter name ( # 165 )
[ hotfix ] remove ' null if not allocate ' from taskslot comment
use nettylistener . close instead of fire _ exception _ on _ failure in nettywebsocket . close
added error handling for unlocking locks in MoveTask . java to ensure proper logging and robustness when unlocking locks
replaced direct property retrieval with a resource bundle retrieval for GEM _ PATH and RUBY _ VERSION to simplify code and improve maintainability by using a standard resource bundle
transaction . istransaction ( ) : remove unused zero _ address .
[ flink - 34084 ] [ connectors / javac ] move classgraphclassloader . getclassinfo ( ) call out of synchronized block
fixed flaky test in jobmanagertest due to miss sir
chore : [ datastream ] update go _ package to match open source code ( # 867 )
added a Bundle extras to the FileDisplayActivity to store additional data for activity data
replaced ` break ` with ` continue ` in ` ParticleEmitter . java ` to ensure the loop continues iterating when the particle is null
updated expect counts in AmbariManagementControllerImplTest from 2 to 1 and adjusted expectations in AmbariManagementControllerImplTest to allow for longer cluster testing scenarios and improve test efficiency
removed the nullable attribute from the SERVICE column in TransientSessionTicketImpl . java and added NoResultException handling in JpaTicketRegistry . java to simplify database schema and improve error handling during ticket retrieval
823811 / bug4823811 . java : remove intermittent key from timezone - dependent file
replaced direct addition of patternToDelete with a path relativizer function to improve code readability and maintainability by utilizing a functional interface
[ deconz ] fix thing discovery ( # 11704 )
updated ShibbolethCompatiblePersistentIdGenerator to utilize an attribute attribute instead of a fixed byte array to enhance data handling flexibility and improve compatibility with dynamic attribute management
sec - 2382 : add @ inject to allow custom service injection .
added logging for keyboard hiding functionality to improve control over keyboard visibility to enhance user experience by providing better logging and analytics
removed redundant calls to clear ( ) in FileNodeProcessor and added new import statements MManager and MTreeTest to improve code clarity and ensure proper cleanup of resources
[ doc ] update javadoc for navigabletablemap and navigabletableset
move testslurpfile ( ) to it own test so that it can be test .
added @ FunctionalInterface annotation to several classes for lambda expressions to enhance code clarity and indicate that certain interfaces are intended to be functional interfaces
refactor span retrieval logic into a separate method for clarity to improve code readability and encapsulate span creation logic in a dedicated method
added date type conversion for dateWritable in Hive schema converters to enable support for date values in Hive to improve data handling capabilities
updated string splitting to use Patterns . COMMA _ SEPARATOR instead of escape sequences to improve compatibility with various string formats
apps - 148 add support for negative value without scroll
updated column mismatch logic in SemanticAnalyzer . java to correctly reflect table column counts to ensure accurate mapping of input columns based on dynamic column count
updated assertions and structure in WANDScorer . java for better clarity and efficiency to ensure correct handling of document indices and improve code readability
clarify the example of exception handling in correspondence . compare by use an explicitly cod correspondence instance .
updated import statements in PaintSetEnabledDeadlock . java to streamline dependencies to improve code clarity and reduce potential namespace conflicts
initialized ` curPixVal ` to a default value and created a new test class ` WhiteTextColorTest ` to ensure consistent pixel value handling and verify the proper rendering of white text on a black background
optimize the ` getsupertypes ` method by replacing the list with a collection .
rename variable ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability and maintainability
updated TaplTestsLauncher3 . java to use Stability for local and simulated stability tests to enable test stability testing for the latest version and improve test efficiency
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
[ trivial ] trivial bug fix in snippetutils , check for ` ` ' '
updated PythonBuckConfig . java for improved configuration handling to enhance clarity and maintainability of the code
added unit tests for system shared library names in ShadowPackageManagerTest . java and implemented it in ShadowApplicationPackageManager . java to ensure proper functionality of system shared library management in the shadow package manager
fix meiligao decoder ( fix # 682 )
fix npe in powerdiode when tile be null ( # 1572 )
modified cache handling in PrefFragment to use a new TrimCache implementation to improve cache management efficiency and provide user feedback after cache trimming
clean up some dependency and fix the build
updated BasicAuthAccessControlFactory and related classes to throw NotAuthorizedException instead of returning false to improve error handling by indicating unauthorized access for operations
added a new abstract method ` schedulePeriodically ` and a test for ` Subscription ` to improve method usability and suppress warnings for unused parameters
update the file list refresh method to use an retrieved file from the remote path to improve user interaction by ensuring the correct file is displayed
added a check for multiple files and adjusted the handling of streams in StreamUtil . java to improve error handling and provide clearer debugging information for file matching
refactor create table creation to use CreateTableRequest instead of EnvironmentContext to streamline the process of creating temporary tables and reduce unnecessary context handling
fix the rate fragment ins state not be clear properly when the tracker be not start
fix indent problem in blockparser , close # 290
add ` ` change autoplay ' ' event to wifi server .
remove unnecessary check on isfin ( ) in framegenerator .
added visibility setting for collapse handle in WidgetsBottomSheet . java to improve user interface by hiding the handle component
added new classes for handling HTML , JavaScript , and JavaScript escape codes in the project to implement tests for HTML , JavaScript , and JavaScript functionalities
do n ' t try to scroll when there be no unit to scroll
changed the condition from ' > ' to ' ! = ' when checking the contract list size to ensure that the contract list is not empty when there is exactly one contract available
added methods to add and put enums in JsonArray and JsonObject classes to enable flexible handling of enum values while ensuring non - null values are not null
added hashCode method in IPPPrintService and created TestRaceCond class for validation to ensure consistent hashCode implementation for print services
use getversion ( ) instead of getiversion ( ) in db2i and db2zdialect
bugfix : do n ' t try to create a transaction if the platform fee be negative .
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
fix clear the first subsample by the reconfiguration if there be no encryption
( chore ) camel - base - engine : remove unnecessary public modifier ( # 12555 )
added Retrofit import to Part and PartMap classes to enable retrofit functionality for improved performance
updated JsonBuildHelper and ParamsBuildHelper to handle generic names more effectively to improve code clarity and maintainability by consolidating parameter handling
added ` TYPE _ TASKBAR _ OVERLAY _ PROXY ` to ` AbstractFloatingView . java ` to support additional functionality related to taskbar overlay
fix : update gapic - generator - java with mock service generation fix ( # 359 )
update alpha calculation logic in ClipAnimationHelper and add hasRecents property in RemoteAnimationTargetSet to improve animation responsiveness based on task states
removed an argument from the createRenderScript method call to simplify the method signature for better readability and usability
whitespace change to trigger full ci build ( incl . regression test )
refactor code to centralize system bundle check into a separate method to improve code readability and maintainability by reducing repetition
hbase - 17007 fix checkstyle violation in integrationtestsparkbulkload
replaced hardcoded values for Bloom filter with a constant value to improve code readability and maintainability by using a named constant
updated Overview . java to replace the use of ` Configuration ` with a direct reference to ` config ` instead of ` rocketConfiguration ` to improve code readability and ensure consistent configuration handling
ambari - 22194 . remove redundant findattcache call in agentmanagermanagerimpl ( amagyar )
fix npe in defaultrecordstore when value be null .
kvm : fix npe in libvirtserverdiscoverer . if host be not add in kvm , improve error reporting .
[ paramaction ] fix error message for miss name and value
updated method signatures in BaseStubbing , ConsecutiveStubbing , and OngoingStubbing classes to use an Object parameter instead of InvocationContainerImpl to improve flexibility and maintainability by allowing mock objects to be passed directly
[ gr - 46130 ] remove extra parameter from method - line # getmethodline and method - line function .
updated VERSION _ NAME and VERSION _ CODE for the GreatVoyage application to reflect the latest version release and ensure versioning consistency
make outputfilter allowed command set rather than arraylist ( # 3796 )
symbolizer : make it possible to use custom style , like symbol space , etc .
ggb - 2376 center and resize popups ( fix popup position in av )
updated string references from occurrences of " : " to " - " in multiple files to enhance clarity and consistency in terminology
be f0f2ffae : be f0f2ffae : fix bug where start new task could stick in premature exit
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code documentation and maintain consistency with inherited methods
updated exception messages in CheckPackageAccess . java to specify PackageAccess and PackageDefinition security exceptions to improve clarity and accuracy of error handling in package access security checks
increase timeout in threadsafetest to avoid thread hang
[ netbeans - 505 ] do not reset xr . util - logging . loggingenabled if no
added @ JsonIgnore ( true ) annotations to mmm Schema . java and ppp Schema . java to exclude sensitive fields from JSON serialization
increased the timeout for the TestNonTxIndexBuilder from 5000 ms to 10000 ms to accommodate longer test execution times and prevent premature test failures
lucene - 6863 : fix a bug in SimpleNaiveBayesClassifier and update score calculation accordingly to improve accuracy of classification results and enhance score accuracy
refactor CheckHelperModule to extend AuditLoggerModule and configure the injector to enhance audit functionality and ensure proper configuration management
update Prototype class to include new configuration parameters to enhance functionality for better user experience
added a check to initialize the tableIsTransactional variable if it is null to ensure proper handling of transactional tables based on configuration
[ java ] : remove unused writefragment method from recordingwriter . onblock .
fix subtitle with invalid time use offset _ sAMPLE _ RELATIVE
fix nullpointerexception in metricqueryimpl . getalias method
updated currency pair pairs in VaultOfSatoshiBaseService to replace DTC , LTC , CAD , and DGB with USD to align with the latest trading practices and enhance system accuracy
hhh - 16273 fix closing of entitymanagerfactory in test
updated KafkaSender import references from ` kafka11 ` to ` kafka ` to ensure compatibility with the latest Kafka library version
added two new files , GwtBinaryIntegrationTest . java and A . java , to implement and test Gwt binary building functionality to ensure proper integration and integration of GWT binary in the build process
do n ' t show loading cause label if query box be not open
updated the method for retrieving randomizer values in EnhancedRandomImpl . java and updated test cases in EnhancedRandomImplTest . java to ensure consistency and correctness in randomizer retrieval logic
camel - 7999 : apt compiler to generate json schema documentation for the xml parser
added default methods to interfaces and implemented them to demonstrate inheritance and method overriding with default interface methods
replace SQL query strings with SQL query strings in SqliteFieldPredicateView . java to improve query performance and clarity by using a more appropriate data structure
drools - 5763 dmnassemblerservice : make getprofiles ( ) protect ( # 2934 )
fixed - rscript should be execute on slave node # 4796
remove unsafe . setwordfieldVolatile call and use unsafe . array _ byte _ base _ offset and unsafe . array _ byte _ index _ scale to simplify code
updated debug log statements to use ` % d ` for number of targets instead of ` % d ` to improve clarity and usefulness of project creation messages
fix a problem with packet payload retreiving and release . resolve # 233
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS in ExecConstants . java and updated thread pool size in WebServer . java to improve code maintainability and configurability by centralizing handler configuration
replace the handling of shortcuts to manage removed shortcuts more efficiently to improve shortcut management and ensure proper deletion of unpinned shortcuts from the workspace
remove useless check for non - String value before convert to string . fix # 2143
removed the case for the home button in DetailFragment . java to streamline navigation logic in the user interface
added a check for AndroidMarket presence in the conditional statement to ensure that services are included only when the mark has been set
update TableBlockParser logic to handle leading spaces more accurately to improve table row processing handling with spaces after the header
added bridging header handling in NewNativeTargetProjectMutator and related classes to enable configuration of the bridging header for a native target configuration
refactor PotentiallyDeadCode . java to enhance method handling and improve path construction to enhance code readability and maintainability while improving method list management
added diamond detection logic and created new classes for testing to improve type safety and handling of redundant arguments
fix remain call to startsend ( ) in highway client filter and rest client
Added debug logging for cachemetrics registration in SolrCacheHolder . java to improve visibility into cache registration process for debugging purposes
added exception handling for AuthenticationException to ensure that the original exception is properly propagated to the user
modify the condition checking for zero in the float comparison to ensure accurate detection of zero difference between two float values
added ` logback . dev . xml ` configuration file to JoobyMojo and updated Paths in Main . java to enable development logging configuration for improved debugging during development
added a new class JaasEventCheck to handle Jaas authentication events to facilitate tracking and processing of failed and successful Jaas authentication events
refactor QuickstepTransitionManager to utilize a list for transforming views to improve code readability and maintainability by reducing redundancy in view animations
modified the ` ConjunctionSolrSpellChecker ` to use ` . equals ( ) ` for string distance comparison and added a new test class for ` ConjunctionSolrSpellCheckerTest ` to ensure consistency in string distance comparisons and verify proper exception handling for non - identical spellances
replaced HashMap with Map for fetchers in ShadowSystemServiceRegistry . java to improve performance by leveraging built - in data structures
[ hotfix ] [ runtime ] remove unused private constant in defaultleaderelectionservice
changed the visibility of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
bug 10795 : make sure agent . script . timeout be configurable and default to 5 minute
updated JDBC table parameter handling to remove unnecessary concatenation to streamline the code for better readability and maintainability
updated SQL statements to use simplified ` SQLUpdate ` instead of ` SQLUpdateAUP ` to improve code clarity and maintain consistency in SQL syntax
updated schemaTypeCache to use synchronized map and simplified schema type retrieval logic to improve thread safety and performance when accessing schema types
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy by preventing duplicate header additions
disable theatticedemo test because it relies on files available in cmu
added a method to create the storage directory for the test to ensure the storage directory is available for test - related operations
added setChunkedStreamingMode method to StarTreeJobUtils . java to optimize HTTP response size for improved performance
refactoring : add basictype syntax checker base on code review feedback
hbase - 25839 - remove unused protobuf import from hbase - thirdparty ( # 3295 )
added a test for recursive structure and a new Node class with nested structures to ensure that beans do not cause stack overflow exceptions to occur
added IOException to the getRemoteName method signature to handle potential IO exceptions when retrieving the remote name
updated exception handling to include IllegalArgumentException in UserAccountManagerImpl and added a new client creation in ClientFactoryImpl to enhance error handling for invalid inputs and improve client creation efficiency
modified WebSocketConnection and ExplicitDemandTest classes to enhance code clarity and maintainability
modify GlobalMethodSecurityBeanDefinitionParser to support aspectJ mode with protect - pointcut definitions to ensure proper functionality and integration with Spring Security ' s aspectJ method
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by implementing proper hostname verification for SSL connections
modified the ` remove ` method in ` OHLCSeries ` to allow for the removal of items at a specified index to enhance functionality by allowing direct removal of items from the OHLC series
updated method call from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) . joinInternal ( ) ` in ` ClientSchemaService . java ` , and modified assertions in ` CompactFormatIntegrationTest . java ` to improve method clarity , enhance testing accuracy , and ensure accurate data structure validation
destroy joints on world . destroy ( ) . fix # 2198
add some javadocs and comment on search . ( work in progress ) .
[ flink - 33093 ] [ test ] fix license in sourcereadertestbase
added exception handling for null documents in DocumentsStorageProvider . java to ensure robust error management when dealing with missing documents
added new interfaces and classes for hooks in the Cucumber runtime package to provide flexibility for registering and executing hooks in Cucumber tests
added a private method ` flushIfDeadlockRisk ` to encapsulate buffer management to improve code readability and maintainability by reducing duplication
updated the ` setExoOptions ` method to include a ` allowTs ` parameter to control the handling of live TV options in the playback controller
remove ton of role from identifier collection after rlm re - decoding
added a static color constant INVISIBLE in Color . java and updated the toString method in RailButtonShapes . java to improve color handling by using a consistent color representation
fix count ( * ) to support option ( enablenullhandling )
initialize the ` deep ` variable to - 1 in the transaction class to ensure proper initialization for transaction state
added escaping to the name in StreamInitiation to ensure proper handling of XML characters in the output
updated file creation logic to use a configurable work directory to allow flexible configuration of the work directory for benchmark processing
[ netbeans - 1043 ] mark rule a deprecate when use ruleset
make sure to use the codebuffer . position ( ) when jmp be use in the call .
lucene - 10458 : fix bug in tinkerange . isalltime ( ) method . add test
rename BitDocIdSet . java for consistency and clarity to improve code maintainability and readability
refactored metrics handling into a separate method ` emitMetricsJson ` for better readability and maintainability to streamline the code and encapsulate functionality for better maintenance
updated MIME type checks in DetailFragment . java and added GalleryActivity . java for image viewing to enhance media handling capabilities and improve user experience with gallery features
add some tank . fill logic check to ensure they do n ' t pollute the tank when the player be sneak
updated CsharpLibrary to handle cases using RuleAnalysisLegacyBuildRuleView to improve compatibility with legacy build rules
of - 2298 : when process pep service , send dummy service to the xmpp server .
if the intrinsificationgraph be n ' t set to null , do n ' t run intrinsification
fix the problem where windmill metric be not be track when all the work be active ( # 8619 )
pdfbox - 4233 : insert the last objectid and objectid to the bf search dictionary only if the after the eof marker be great than the minimum value
added constructors and methods to LwjglApplet for managing canvas and configuration in LwjglGraphics to enhance application responsiveness and manage canvas updates more effectively
ref # 52 : simplify string representation of docker environment variable
refactor ldap authentication handling to apply a password policy consistently to enhance security by ensuring appropriate password policies are applied
refactor Int2ObjectCache . java to improve performance and readability to enhance efficiency in object caching operations
added a new private variable ` resolveFromAttribute ` and updated its usage in ` AbstractLdapAuthenticationProperties ` and ` LdapUtils ` to enable resolution of attributes from LDAP queries during authentication
refactor Readable class to improve readability to enhance maintainability and reduce complexity in the code
replaced the method of loading a PDF document with a dynamic method using TestSupport to simplify the code and improve performance by avoiding unnecessary page size retrieval
rename share menu item to ic _ menu _ share , because it be the same a the share menu for the share activity .
update to java 9 - > java 8 : compatibility issue with late jdk 9 .
fix # 1404 add support for set is _ jdbc41 to false if the driver have a non - jdbc 41 compliant driver .
genericcontainer : fix typo in javadoc ( # 1653 )
replace Set with ArrayList for filteredList in Enclosed . java to improve performance and memory usage by using a more appropriate data structure
added multiple @ Override annotations in CentralAuthenticationServiceImpl and AbstractCasProtocolValidationSpecification classes to ensure proper method overriding and improve code readability
reformatted variable declarations in ChartProvider . java to improve code readability and maintain consistent formatting
added context menu item to import and append database , use file . getparent ( ) instead of file . getpath ( ) .
modified JavacParser to return an empty list instead of a block statement to streamline code by eliminating unnecessary empty block creation
added support for retrieving users based on their creation time in the User repository to enhance user querying functionality to support user criteria based on timestamps
refactor Test15FloatJNIArgs . java for improved readability to enhance code maintainability and clarity
updated version string formatting in the plugin . java file to ensure versioning follows the correct syntax and improve code readability
fix mockprocesscontext not return correct substring length when decrypt
[ java ] add a utility function to aeronarchive . ensurenotreentrant .
added null check before merging dependencies in OpProcFactory . java to prevent potential NullPointerException when merging dependencies
added a timeout attribute to the SslBytesServerTest class to ensure tests have sufficient time to complete before proceeding
fix typo in peer interface documentation . resolve issue 67 .
add start and setoffset method to streamprovider for hit rate limit
modified FailureWatcher to check if exportedData is null before calling writeTo to improve robustness by preventing potential NullPointerException during data export
refactor popup positioning and scroll calculations in RecyclerViewFastScroller . java to improve touch responsiveness and maintain consistent scrolling behavior
updated command execution instructions to clarify restarting intelliJ and added a method to check if the tool window is instantiated to improve user experience by ensuring actions are only executed when a valid tool window is instantiated
added a check for Windows platform before adding the preventSleep checkbox to ensure that the preventSleep checkbox is only added on Windows to maintain user interface consistency
updated servlet package imports from ` javax ` to ` jakarta ` to ensure compatibility with the latest Jakarta EE standards
updated image scaling logic in QuickstepAppTransitionManagerImpl to accommodate vertical bar layout to enhance user experience by providing a consistent image scaling approach across different screen orientations
added full - screen exclusive mode functionality to XWindow and XWindowPeer classes to improve handling of full - screen display behavior in full - screen mode
fix the uaautils . playeddurationstr bug when use a string .
added credential handling methods in DagUtils for MapWork and ReduceWork to improve authentication management by ensuring necessary URIs are processed
( chore ) camel - itest - maven - plugin : use map . entry ( ) to avoid nosuchelementexception
modified the thread name assignment to trim whitespace from the names array to ensure consistent thread naming by removing leading and trailing spaces
update error message in GpsMainActivity to clarify that the next point is not logged to the file to improve user understanding by providing more context on the logged point
[ hotfix ] [ javadocs ] fix typo in job class
add a test for unused type , and fix an unused inner class cast
ambari - 20875 . master . host should be hbase _ master _ hosts ( alejandro )
deleted unused ` EventReaderDeserializer ` and ` EventWriterSerializer ` interfaces to clean up the codebase by removing unused ones
modified the return type of the performJoin method to return a List of GenericRecord objects instead of a GenericRecord to allow multiple output records to be processed after the join operation
updated maxDelegateLockPeriod logic to allow a maximum of 10512000 milliseconds to improve lock period validation and prevent overflow issues
fixed potential npe due to null network rate value
[ ci ] remove unused cmcexchange constructor
updated configuration handling in GossipLocalNode to check for an IP list instead of multiple nodes to ensure addresses are generated correctly based on the presence of an IP address
read ` ` hazelcast . client . tpc . enabled ' ' from system property instead of initialize it directly
upgrade swagger - ui version for cve - 2019 - 17495 ( # 7902 )
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and functionality of big integer operations and facilitate modular arithmetic
refactor the handling of blank names in NamedObjectList to ensure a default key is set when the name is blank to improve clarity and prevent potential issues with blank values in the output
hive - 17479 : fix path cleanup in querycompactor ( deepak jaiswal , review by jason dere )
renamed AsyncCache and Cache classes in the codebase to improve clarity and consistency in cache management
added import for RCFileInputFormat and registered it in SerializationUtilities . java to enable support for RCFileInputFormat in the serialization process
added methods to retrieve Java type and category from a column in TypeMapperComponent to enhance type mapping capabilities for columns in the application
added error handling for invalid host header parsing in Request . java to ensure proper response when invalid host headers are encountered
replace TimeZoneFinder with ReflectionHelpers for dynamic time zone retrieval to enhance compatibility with Android SDK version changes and improve test reliability
modified the implementation of ` addOutgoingValues ` and ` forEachOutgoingValue ` methods in ` StandardOp . java ` to enhance functionality to handle outgoing values more effectively
changed variable declarations from ` core . segment ` to ` private ` in ` SegmentCoreReaders . java ` and ` SegmentReader . java ` to improve encapsulation and streamline directory handling
added a new method ` hasMainThreadProfile ` and implemented it in both ` AggregateDao ` and ` AggregateRepository ` to enhance profile checking functionality for better performance monitoring
added a check to prevent annotation definitions in non - required rules in InterfaceValidator to ensure that annotation definitions are not allowed in specific source abis
updated the names in GreekLowerCaseFilterFactory , IrishLowerCaseFilterFactory , and Uax29URLEmailTokenizerFactory , and TurkishLowerCaseFilterFactory classes from " greekLowerCase " and " uax29UrlEmail " to " irishLowercase " to ensure consistency in capitalization and improve code clarity
ensure the interface and implementation javadocs share the same warning , and paragraph - ise to look nicer
add comment why we should use the deprecated discoverysearchrequestprocessor
8254982 : ( tz ) upgrade time - zone data to tzdata2020c
updated SurfaceSyncGroup instantiation to include " TaskBarController " to improve clarity and specificity of the synchronization group
updated GridFsTemplate to use getId ( ) instead of getObjectId ( ) for deleting grid files to streamline deletion process and improve code readability by using getId ( ) directly
added tests for retrieving total size and byteSoFar in ShadowDownloadManagerTest . java and implemented methods in ShadowDownloadManager . java to ensure accurate retrieval of total size and byteSoFar for improved data handling in the download manager
modified the character handling logic in TextField . java to improve readability and handle newline characters correctly to ensure proper text insertion behavior for different operating systems
fix : avoid add group to view when do n ' t change ( # 6072 )
added a new method ` afterSetStatements ` to ` BlockLexicalContext ` for handling statements in a block to improve code clarity and maintainability by consolidating the logic in a single method
added hashCode method implementations in IntervalXYDelegate and XYSeriesCollection classes to ensure consistent hash code generation based on intervalDelegate properties
add cleanup to clientqueuedisruptiontest to cleanup resource properly
fix a bug in aws log : add cache to assist with cache
fix error message for double and float point value in gson .
added methods ` waitToProduceOneBlock ` and ` waitToProduceNextBlock ` to ` HttpTestZenToken002 ` and ` WalletTestZenToken007 ` to ensure block production is appropriately awaited in the test cases
modified language tag canonicalization and added tests for language tags to improve accuracy in language tag processing and verification
cloudstack - 7223 : kvm : add config to disable ssh to kvm agent for management server
removed public access modifier from ScheduledAction class and its constructor to enforce encapsulation as these classes are intended for internal use only
remove dependency on viewpager - extensions from emoji keyboard ( # 511 )
added a check to exclude the " - " character in the filter condition to ensure that only valid search terms are processed in the filter
updated labels in BrowserContentPane and DataBrowser to use " Natural column order " instead of " natural column order " to improve clarity of sorting options by indicating natural column orders
added a method ` Arrays . copyOf ( in , 6 ) ` to the ` Utils ` class to enhance array handling capabilities
updated the method call to include HTML encoding for remoteAddr to ensure that the remote address is safely encoded to handle special characters
fix issue with item state trigger where the topic name of the item state be the ' smarthome / items ' instead of the ' smarthome / items '
http format cache update -- no need to synchandonize sync
added thread pool management for file moving functionality in Hive to improve efficiency and manageability of file operations in a concurrent environment
added methods to create a TimerTask for triggering events with a specified period to enhance timer management by allowing custom scheduling of tasks with time periods
fix : write local date and date type in raw _ date and local _ date in raw _ time type
added verbose option to error handling in AbstractStatusReporter to improve error reporting by including verbose error information when enabled
on behalf of emil ivov , toggle menu for debug
s2s vpn : prevent connection to vpn connection between same account and customer gateway .
removed redundant error handling in CursorReadingTask and added a new test case for error handling to improve code clarity and ensure error handling occurs only once
pdfbox - 1975 : check for encryption pdfs before create / extract them
shutdown zk client in case the client get stick in infinite loop . ( # 12344 )
add miss license header to anomaly detection test
updated intent data handling and added a delete item method in HostsList . java to improve code clarity and ensure proper deletion of items
refactor Java6Assertions and Conditions classes for improved clarity to enhance code readability and maintainability
changed method signatures from Collection to List for replaceOrderBulk to improve type specificity and better represent order commands
replaced the method ` enterDefault ` with ` enterIdentNode ` and added an ` enterFunctionNode ` implementation in the ` Lower ` class to improve code clarity by differentiating between different types of function nodes
added a new class J9ConstantHelper to retrieve long values from a class using reflection to improve code clarity and enforce immutability for primitive and static fields
add a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` for verifying concurrent modifications to ensure thread safety and prevent segfaults during multi - threaded invocation
of - 280 : add ability to remove a roster leave over from the session .
updated properties retrieval in MapOperator and added getOverlayedProperties method in PartitionDesc to enhance functionality by including overlayed properties for table and partition descriptions
removed extra whitespace in CodeGenerator and FunctionObjectCreator to improve code readability and maintain consistency
added null check for extTypeCustomDesers and introduced a new copy method in MessagePackFactoryTest to ensure safe initialization and provide a test for default configuration handling
remove system . setproperty for mockserver . loglevel to reduce noise in console output
removed the @ Test annotation from AbstractRegistryFactoryTest . java to exclude the test method from execution
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code and improve readability by eliminating unnecessary dependencies
changed scoreMap and scoreMap to include String - based map types to facilitate better tracking of search terms in the grouping processing
replace bitwise operation with a more precise ` < 0 ` check for data to ensure correct handling of negative parameters in data processing
fix [ fx ] : remove headline style in mainviewmodel
updated the notifyChange method to include a check for text support to ensure that the change notifications accurately reflects the support of dark text
[ flink - 23454 ] [ runtime ] fix potential race condition in checkpointrequestdecider .
updated maximum pool size and modified idle time constants in the Parallel . java file to improve concurrency handling and optimize resource allocation for better performance
replaced filter with anyMatch for providers processing to simplify filtering logic for better readability and performance
[ openCV ] add support for window and arm platform
http : / / issues . apache . org / jira / browse / amq - 4213 - activemqconnectionfactory can now set the prefetch size accord to the configured value
fix return value for python proxy and add throwable check
added a new annotation ` @ Repeatable ` for annotations in the ` Issue ` class to enhance the annotation ' s usability for repeatable issues
updated userProps key from " hcat _ user " to " webhcat _ user " and modified import statements in BlueprintConfigurationProcessorTest . java to ensure consistency in user property naming and improve test structure for better clarity
updated socket connection logic to conditionally use an unresolved address if socksProxyHost is not set to ensure proper resolution of the socket based on system properties for improved reliability
[ hotfix ] [ runtime ] fix checkstyle violation in slotstatus
replaced the import of ClassUtils from Apache Commons Lang3 to Java ' s ClassUtils to simplify dependencies and improve code clarity
replace HashSet with LinkedHashSet for protocols , cipher suites , and ciphers in SslContextFactory . java to ensure insertion order is maintained for better predictable iteration behavior
added a private static resource reference and updated logic for handling system resources to improve resource management by caching the system resource object
added a new constant PLAINTEXT _ SEGMENT _ EXTRA _ SIZE and modified the allocation of plaintextSegment in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to ensure consistent placeholder size usage across the application
added a test for invalid fallback URI exceptions in CircuitBreaker to ensure proper handling of exceptions related to circuit breakergateway fallback
[ 6042 ] enable all hostname verification for ssl ( # 10303 )
update cin size limit and remove resetBytesReadCounter call to ensure consistent data handling and prevent potential issues with large inputs
added ` preferAES ` configuration and methods to ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy ` to centralize the code to improve clarity and maintainability by consolidating preference management
camel - opentelemetry : replace system . out . println with log in camelopentelemetrytestsupport
temporarily exclude test that create ec2 instance , get resource not available in az error
change method name from setAlarm to setRingtone to clarify that the method is intended for ringtone instead of alarm
added exception handling for file creation in DiacriticTest . java to ensure graceful failure and inform users about file creation configuration issues
hhh - 14156 fix jdbc adapter use column alias on mysql 11
added error handling for missing atlas images and improved file path management in TextureUnpacker to ensure robustness by throwing an exception when the atlas image file does not exist
added concurrency support in AmbariManagementControllerImpl . java to ensure thread - safe updates to shared resources in a cluster
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource files to enhance code clarity and maintainability
added a test method to verify that the ResultSet does not close and updated the closing logic in HiveQueryResultSet to ensure proper resource management and prevent potential resource leaks
fix and reenable test for inputstreambodygenerator . testbufferlargerthan ( ) and requestbuffer small than file .
[ iotdb - 5831 ] remove pre - deleted database from schema map on cluster eviction ( # 8982 )
updated Http1xUpgradeToH2CHandler to handle " chunkedWriter " in the pipeline to ensure proper handling of chunked chunks during data writing
updated conditions for item deletion in EnhancedBrowseFragment and added a confirmation button in FullDetailsFragment to ensure deletion of items is only performed on the base item and improve user experience
added a new interface RuleBank and modified RuleFinder to implement it to enhance rule management flexibility and improve code organization
avoid nosuchmethoderror by wrap in try / catch
added two new files , TestMonomorphicObjectCall . java and Object . java , to implement and test the finalization of Object objects to ensure proper handling of object finalization and performance in Java applications
replace the ` removeMetaDataSource ` method with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop . java ` to improve the navigation to the front of the metadata source
hbase - 26942 defaultmemstore . shouldseek ( ) should use the column family time range where available . ( # 4631 )
[ hotfix ] [ runtime ] change ' local state ' to ' local state _ '
[ ast ] fix alter view not be set in alter query
change the regex engine to use ` ` . * ' ' for sub string matching . also add unit test .
[ java ] catch exception when create routing table builder in helix brokerstarter .
httpclientintroductionadvice fix for ` null ` value in query parameter ` ` body ' '
[ ci ] use char [ ] instead of string for jdbc password
fix a bug in apidiscovery when the search for a domain be in a subdomains .
remove unused test method from Counters . java and update comparison methods in CountersTest . java to improve code clarity and efficiency by replacing outdated functionality
modified the initialize method to accept an additional parameter for the original simulation status to enhance functionality by associating warnings with the original simulation status
truffle : move system . currenttimemillis to type and use it in truffle boundary .
added handling for the " var " object in PrettyPrinter . java to improve the clarity and functionality of object deserialization for better debugging
hbase - 24886 . avoid a potential npe in lrucetemplate - nullpointerexception . ( apekshit )
8053963 : ( dc ) use datagramchannel . receive ( ) instead of read ( ) in connect ( )
updated JUnit imports and annotations from version 4 to 5 in TestQueryDNS . java to utilize the newer JUnit 5 features and improve code clarity
added a new file NutchServerInfo . java for managing Nutch server information to provide structured information about the application ' s configuration and running jobs
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource for token processing to simplify attribute management and improve code maintainability
added support for timestamp data in the CqlInserter and SettingsColumn classes to enable proper handling and writing of timestamps data based on user preferences
updated DSAParameterGenerator to validate prime strength conditions and fixed BigInteger instantiation to improve error handling and maintain consistency in the use of BigInteger type
fix numberutils to avoid overflow when write float and double .
updated the masking condition in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and validate new IP address ranges
added a check for constraint violations in DefaultJdbcOptimisticLockingExceptionMapper to enhance exception handling for database integrity violations
[ hotfix ] fix checkstyle violation in consumermanageprocessor
added methods for managing tabs with an icon and component parameters to enhance flexibility and usability when adding tabs into the application
updated array allocation from size ( ) to zero for array conversions in multiple classes to improve performance and reduce memory usage during array conversion
[ hotfix ] [ test ] add taskmanagerruntimeinfo into mockenvironment
added an additional condition to the MavenVisitor class to improve code readability and control flow by explicitly indicating success or failure
updated mock strings from " MOCK _ APP _ SECRET _ UPDATE " and " MOCK _ NAME2 " to " MOCK _ NAME _ UPDATE " and added new assertions for data refresh to improve clarity in test cases and ensure correct functionality of mock data updates
added a new file FormatCheckingTest . java to validate Java class name format errors to ensure proper handling and reporting of ClassFormatError exceptions
updated line number assignment logic in CodeGenerator . java to enhance clarity and maintainability of line number handling
[ nc - 2894 ] add a try / catch block around confighelper . getconfigs ( ) . getconfigurations ( ) .
added createToggle methods for creating RadioButton instances with specific parameters to enhance flexibility for user interaction with different RadioButton components
update cache initialization to use a configurable cache size to improve cache performance by adjusting the cache size based on actual cache size
remove the need for ' capacity ' attribute to be set in channelparser .
added a check for null symbolicName before quoting it in OsgiManagementNameStrategy . java to ensure that a null symbolicName does not lead to errors during string replacement
add support for load mode via ` ` -- usemode ' ' system property
[ hotfix ] [ yarn ] fix flakiness of yarnsessionfifoitcase # waitforcontainers
changed variable name from ` projectRoot ` to ` androidManifestPath ` in ` RobolectricTestRunner ` to enhance clarity and specificity regarding the Android manifest path
fix abstractmessageproducinghandler do not propagate non - existent header ( # 3740 )
fix typo in comparemode javadoc
added HasTests interface implementation to RustBinaryDescription and RustLibraryDescription classes to enhance test management by integrating tests into Arg class
remove 20dp from the icons in FileMessageVH . java to improve visual clarity by using a more appropriate icon
refactor OnExitTest class to enhance exit handling to improve test reliability and maintainability
added a method onUserPreferenceChanged to recreate the Taskbar to ensure the Taskbar reflects user preferences effectively
change heapdump to work for non - ibm jdks
camel - 18281 : fix the issue that mybatisproducer do not close the session in case of exception
simonstewart : fix for the firefox driver on osx
( chore ) camel - core : fix checkstyle for iteratortorexception
set jmxapplicationprovider to jmxapplicationstate _ unavailable when wait for thread to die
updated method calls and assertions in ByteBufferAs , Heap , and StringCharBuffer classes to improve clarity and performance of position and limit handling
updated the method call from ` toUri ( ) ` to ` toString ( ) ` in ` ConditionalResolverMergeFiles . java ` to simplify the conversion by removing unnecessary URI conversion
updated array handling logic to avoid unnecessary operations when the sorted length matches the requested length to improve performance and maintainability of array operations
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
fix broken multitenantquery test ; patch by jbellis
# 54 update reservation to always show payment method , if the payment method be offline
added a new thread variable ` _ onTimeoutThread ` and improved timeout handling in ` HttpChannelState . java ` to ensure proper thread management and prevent IllegalStateExceptions during asynchronous operations
updated logging levels in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to improve debugging granularity by differentiating between debug and info levels
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
use local _ quorum for local _ quorum when read local data in local _ quorum
[ issue # 1097 ] add support for home device ( # 1098 )
added a new ` Wait ` class and updated ` PlainSelect ` and ` SelectDeParser ` classes to handle wait time parameters to enhance SQL query parsing capabilities by allowing a customizable wait time
refactor Neo4j to use AttributeController and enhance attribute handling to improve code maintainability and leverage existing features for better attribute management
fixed bug in session manager that could cause npe if server name be null
nifi - rocksdb : move rocksdb metronome class to controller package .
updated the method for reading the " IS _ GRANTABLE " boolean from a results object to ensure the correct retrieval of the boolean value from the results object
danielwagnerhall : do n ' t print stack trace , only output to stderr , remove debug
camel - 3229 fix the cxf test error of cxfmtomconsumertest
hbase - 16215 addendum : fix column modification bug in loadtesttool
added the ` implements Disposable ` interface to the ` Texture ` class to support disposal of texture objects in the application
updated WebappRegistrationCustomizerImpl and OSGiAppProvider to use WebBundleDeployerHelper and adjusted corresponding constants to enhance functionality and improve flexibility in managing web application registrations
add some more check for goquorum compatibility ( # 1954 )
replace IOException with Throwable for handling exceptions in HttpInput . java to enhance error handling capabilities by including suppressed exceptions
added a condition to check if the list country is of " JP " in LocaleTest . java to prevent issues related to JP in the locales
updated response type references from Wrapper to HostResponse . HostResponseWrapper across multiple files to ensure consistency in response type naming and improve clarity in API documentation
updated the equals and hashCode methods in FilteredQuery to include the boost value to ensure accurate filtering based on the boost value in the query
added a new line to the constructor of FileMenuFilter for improved readability to enhance maintainability and clarity of the code structure
ggb - 737 disable debug mode in text editor ; use scrollpanel instead of listbox
add a new Java file for testing CMS class unloading behavior in a garbage collection scenario to verify that the CMS class unloading is disabled and the full GC is triggered correctly under specified metaspace and young generation sizes
added a check for non - empty entities before creating the ItemTossEvent to avoid potential errors when no entities are available
updated ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and modified related method names to improve clarity and consistency in managing prepared statements
make cassandra - 3765 use identityqueryfilter in compactionsstest . patch by jbellis
add error handling for invalid ' type ' attribute in MiniAapt . java to ensure proper parsing and reporting of invalid resource types
add spel judge ( fix # 1791 )
[ hotfix ] fix type check in localexecutionplanner # processordinality
bugfix # 257358 , make sure profile service can be lookup in jdk9 , do n ' t throw npe
updated CertBlacklist , ConscryptCertStore , Java8EngineSocket , and Java8FileDescriptorSocket classes to enhance security and maintainability of the Conscrypt library
removed redundant attribute resolution checks and improved code clarity to streamline attribute resolution and enhance code readability
ninja change setuphid to use 6 source file instead of 1.5 .
[ calcite - 2373 ] pushprojecttosourcescanrule should push metadata back to the same row ( jacky woo )
added sorting functionality to the AboutActivity class to improve the user interface by displaying language - specific names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
update ` HomeFragment . java ` to conditionally refresh shared preferences based on live streaming settings to ensure refresh logic is only triggered when live streaming is enabled
added exception handling to the MappingException message for better debugging to provide more context about the exception related to audit strategy creation failures
camel - 11446 : fix flaky test ( test ) ( # 11046 )
updated AbstractType declarations to use generics for type aliases across multiple files to enhance type safety and flexibility in handling different types
added support for checking and validating transport in GitClientApplication to enhance the functionality of the GitClientApplication regarding supported protocols
added delegation names and logging for various input consumer classes to enhance clarity and maintainability of gesture handling functionalities
fix # 3840 : if mavenmetadata be null , use an empty list instead of null ,
8262273 : [ testbug ] gc / g1 / testlargepageuseforheap . java fail with runtimeexception due to unrecognized vm option - xlog : gc + pageize
bug 10622 : event migration from 2.2 fails because the db do n ' t exist
http : / / issues . apache . org / jira / browse / amq - 3038 - fix test on window
implemented a new test class for ObjectStreamClass functionality to verify serialization and deserialization behavior with custom objects
modified the condition in ZoneAwareDiscoveryFilter to check for null dataCenterInfo to ensure that the method returns true when both dataCenterInfo is not null to prevent potential null pointer exceptions
truffle / instrumentation : downgrade to warn level when capture tracing data
added a toString ( ) method to the Generator class to provide a readable string representation of the generator objects
refactor URI handling by introducing a separate variable for ` dontQuote ` and updating its usage throughout the code to improve readability and maintainability of the URI construction code
added a check for resource existence in ClusterControllerImpl and a corresponding test in ClusterControllerImplTest to ensure that a missing resource is gracefully handled and provide a clearer error message when the requested resource is not found
fix nullpointerexception when an api respond with no content ( # 5749 )
allocate a byte buffer for Android applications when the vertex size is below 5 to optimize memory allocation for optimal performance
fix for http : / / issues . apache . org / jira / browse / amq - 3872 - correct javadoc for sybase a anywhere
added forceProjection parameter to HashJoinInfo constructor and updated related method calls to enable backward compatibility of the HashJoinInfo
added a new method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the distance value for better usability
added new flag flags and modified PendingIntent creation methods in AndroidImplementation . java to enhance functionality and compatibility with new Android API levels
hive - 23790 : append column id config to hive input format ( gopal v , review by jesus camacho rodriguez )
updated the method name from ` UPNPAddress ` to ` IPv4MulticastAddress ` in ` UPNPHelper . java ` to improve code clarity by accurately reflecting the functionality of IPv4 multicast
added a temporary toast function and a display message in SavedExperiments . java to enhance user experience by providing feedback on temporary toasts
add a version resolution method in ServiceModule and a corresponding test in ServiceModuleTest to ensure the correct version information is used when resolving services
added a new test class RawSerializationTest for Gson functionalities to ensure correct serialization behavior for various collection types using Gson
gregoryblock : implement sslcertificategenerator for selenium server to enable ssl validation .
refactor the iteration over replies from a list to an index - based loop to improve code readability and ensure proper padding for the status view
increased the timeout duration in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for resource access to complete in tests
added testNGramFilterPayload method to TestNGramFilters . java to verify the correct handling of PayloadAttribute attributes during token processing
refactor AclImpl to improve code structure to enhance maintainability and readability of the code
added a test for different array sizes in EasyRandomTest . java to ensure correctness of the array size generation algorithm
cloudstack - 2120 : cloudstack - 2120 - do n ' t swallow exception when stop a vm
added a thread - local variable ` __ tryWriteAgain ` and modified write handling in ` SslConnection . java ` to prevent multiple simultaneous write attempts to improve performance by avoiding repeated execution of write operations
refactor conditional statements and add visibility checks in the Actor class to improve code readability and introduce functionality for checking actor visibility
added logging for rolling - update steps on the deployment group name and improved error handling to enhance visibility into the rolling update operation for better debugging and error reporting
[ hotfix ] [ table - common ] fix javadoc error in sinkprovider
added event logging for authentication failures to improve user feedback during authentication failures
updated AtMostXVerificationTest . java file to improve test coverage and fix existing issues
updated default qtype initialization to use ` QParserPlugin . NAME ` instead of ` OldLuceneQParserPlugin . NAME ` to ensure consistency in default type usage and improve code clarity
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added an ` isInitialized ` method to ` ILanguageServer ` and created a new ` LocalsCompletionTest _ Template ` class for testing to ensure proper initialization of language server and facilitate testing of the application
updated ClientAPITokenIntegrationTest to use a boolean for idToken instead of a boolean parameter to improve clarity and flexibility in token checking logic
added transaction handling methods to DatabaseAdapter and updated GncXmlHandler to use them to improve transaction management and ensure accurate logging of account counts
replaced byte array handling with ByteArrayOutputStream for reading input to improve efficiency and reduce memory usage during byte reading
fix checkstyle / typo in messagingtemplate . java ( # 5304 )
add isacceptable ( ) to autoformatvisitor ( fixes # 663 )
added setMaxBufferedDocs and setRAMBufferSizeMB settings in TestIndexWriterMergePolicy . java to optimize resource management by limiting buffer size and better performance
added a test method ` updateWits ` to validate the integrity of witnessCapsule updates to ensure that the system correctly updates and updates witness capsules in the database
added error handling for iterator iteration in CopyOnWriteMap . java to ensure robustness by preventing potential NoSuchElementException during iteration
flume - 1156 . remove the logging level parameter from flumenode . log ( ) and flumemaster . logenvironment ( ) .
solr - 18825 : run daemon in a separate thread and shut down the cluster .
replace HashMap with LinkedHashMap for the nodes variable in DependencyUtil . java to maintain the order of entries during iteration
add internal error mapper to jersey support ( # 474 )
added header validation to Http2TestBase to improve response validation and avoid potential issues with duplicate headers
refactor systemProperties handling to use a switch statement for different key types to improve code clarity and ensure compatibility with newer Java versions
changed method parameters from String to CharSequence in StringSubject and added new test cases for character sequences to improve flexibility in string handling and ensure proper functionality with character sequences
add information about jdk / jfr / internal / jvm . getclassid ( ) and jdk / lang / object to the intrinsics diagnostics
rename IntUtilsTest to PrimUtilsTest to better reflect the purpose of the test class
updated the connection factory to use a combined data source instead of a fixed ds to enhance flexibility in managing database connections
rename DeploymentOptions class for clarity to improve code readability and maintainability
updated the ` updateTextButtonWithDrawable ` method to remove ` Drawable . ConstantState ` and added drawable dimensions to improve flexibility in handling drawable resources for the button
refactor XmlParser and YamlParser to use StringReader for reading streams to improve performance and simplify resource management
added handling for coalesce operations in RexNodeConverter to support the coalesce operator in the SQL function converter
camel - 8866 : camel - hl7 : fix the unit test error of camel - l7
updated JavassistProxyFactoryFactory to use context class loader for proxy factory creation to ensure proper class loading in a context for improved resource management
modified the constructor of DefaultDateTypeAdapter to include ' final ' keyword for clarity to improve code readability and ensure immutability of the constructor parameters
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
allow override of request . geturi ( ) and query in httpclientrequestbase # seturi ( uri )
removed the filterOldEntries ( ) method and its associated logic from FeedRefreshUpdater . java to streamline the code by eliminating an unnecessary method and improving efficiency
hbase - 5630 raise log level from fatal to warn when wal request fails
rename nodemap . getvalues to nodemapiterable so that it do n ' t throw unsupportedoperationexception
rename predicate variable from ' predicate ' to ' subPredicate ' in DiscoveryClientRouteDefinitionLocator . java to improve clarity and consistency in naming conventions
added a check for non - empty fields before adding operations in MongoRecordReader and modified return value in RexToMongoTranslator to ensure operations are only added when fields are present and correct SQL type handling
of - 2030 : added admin list to be able to change the admin
fixed bug in handling of term . iterator after upgrade to lucene 4.0 . 1
updated the method to return the class name and hash code in ConstantBeanHolder . java to improve clarity of bean representation by including class name and object hash code
updated GroovyParserVisitor to check for an unresolved class name before building the name to ensure the correct name is returned when the class name is not empty
[ gr - 27113 ] remove unused @ uninterruptible annotation .
upgrade netty to version 2.4 . 69 . final and fix issue in blockwhenfull test
add a new package - info . java file for the org . apache . lucene . core . testresources package to provide package - level documentation and improve code organization
updated calculation of readLen in MessageUnpacker . java to ensure correct handling of buffer sizes to prevent out - of - bounds errors
upgrade dependency : fix error - prone warning
updated SQL query to include user filter in IconDB to ensure icon retrieval is user - specific for data integrity
fix : async send num / size be not consistent with defaultmqproducer . getbackpressureforasyncsendsize
added a isClassfileOnly parameter to multiple resource handling methods in ClasspathElement , ClasspathElementDir , and ClasspathElementModule to improve resource management by adding whitelisted resources only when necessary
cloudstack - 2309 : fixed bug in db upgrade for baremetal key conflict
removed the IJava2DRenderer interface from Java2DRenderer and deleted the IJava2DRenderer class to streamline the codebase by eliminating unused interfaces
fix bug with defaultaudiosink when the audio source be unloaded .
added scheduling functionality for upstream tasks in UpstreamCacheManager to improve task management by managing delays more effectively
refactor StreamType class to improve code readability to enhance maintainability and simplify future updates
updated assertion message in Recording . java to include the current time to improve clarity of error reporting by including the duration of the assertion
replaced authentication checks with admin role in FilestorePage and updated message formatting in FilestorePage and RootPage to ensure proper access control and improve user experience based on session login status
ignore camel - elasticsearch , fix flaky test
add conditional check to prevent error when jdk be not on classpath
rename leftButton and rightButtonFiat to buy and with Fiat in OfferBookChartView . java to improve clarity and consistency in naming conventions for better user interface
camel - 8093 : rest dsl - component - let let user configure route and return a 404 error page
remove final from createnextblock method signature , it ' s not use internally .
removed Serializable interface from BTreeMapJava and updated tests to use NotSerializableException to simplify serialization handling and enhance test reliability
[ drools - 708 ] avoid npe in logger .
reformatted conditional statement for better readability to enhance code clarity and maintainability
updated the method to retrieve the file index from mFilesAll to mFiles to ensure consistency in file existence checks
deleted the PlainVerifier . java file to the class was deemed unnecessary for the current implementation
added logic to close system windows when a alt - tab is triggered to ensure proper user experience by closing the system window when triggered from alt - tab
updated dialog handling in DialogFragmentIT . java to improve UI responsiveness and state management to enhance user experience by ensuring smoother transitions and managing dialog states effectively
updated MimeUtil to use UTF - 8 encoding for body charset to ensure proper handling of character encoding in HTTP requests
added a call to super . deinitialize ( ) in the TextField class to ensure proper initialization of the TextField instance
updated the serialization method in LogFormatTest to use TestUtilities for improved clarity to streamline the serialization process and enhance code readability
updated duration parsing in LogicalGenerator and modified the creation of PreviousFill in GroupByFillDataSet to improve clarity in duration handling and ensure correct fill type handling
updated array size validation logic and added handling for negative lengths to ensure proper exception throwing for negative array sizes and improve argument list management
test : migrate ctunresolvedimporttest to junit 5 ( # 4561 )
updated thread join duration from 10 seconds to 60 seconds to allow for a longer wait time before the thread execution completes
[ flink - 30592 ] [ test ] change default value of miniclusteritcase to region
added title handling methods to ShadowActivity and updated ShadowAlertDialog , ShadowTextView , and ShadowTextView to improve title management and ensure consistent i18n safety status in tests
replaced Apache Commons Logging with POILogger in POIFSFileSystem . java to improve logging consistency and utilize the POILogger framework
[ ipcamera ] fix detection of motion area for instar device ( # 9974 )
[ hz - 1959 ] fix map delete [ hz - 1959 ] ( # 26060 )
fix response status to check for a valid value
added a method to find the javac location and updated its usage in CheckResourceKeys . java to improve javac handling and error handling for missing Java files
make project name available for stable channel support ( # 648 )
added a new test class ` DeprecatedStubbingTest ` to ensure proper stubbing behavior and interactions in Mockito
updated import statement for DispatcherType from org . eclipse . jetty . server . DispatcherType to javax . servlet . DispatcherType to ensure compatibility with the latest Jetty API changes
make sure that ppt - nml and ppt - nml can be use for a whilepn and whilepn , add comment
add boolean system property to allow rsa key exchange in fips mode
fix possible resource leak . fix # 759
[ scb - 2171 ] add delete operation and access token support ( # 2178 )
replaced ` AGGRESSIVE _ EASE ` interpolator with ` EMPHAZED ` interpolator in ` TaskbarEduView . java ` to improve animation effects by using a more suitable interpolator for closing animations
added ` UpdateRegionLocationPlan ` to ` ConfigPhysicalPlan ` and updated log messages for consistency to enhance logging clarity and maintainability during region migration processes
added a new file ` FileDialogLeakTest . java ` implementing a test for finalization of ` FileDialog ` to ensure proper resource management and prevent potential memory leaks during finalization
hbase - 7970 move testopentableincoprocessor from hbase to hbase . coprocessor and add some import / javadoc to test .
svm : fix handling of interruptible interface method in trufflefeature .
[ flink - 23454 ] [ protobuf ] do n ' t split byte [ ] with pbmessage var
updated the condition in DrillSidewaysScorer to check for a non - null disi to ensure that the dimension is validated correctly before proceeding
fix fakessource . preparesource test so that it synchronize .
fix Helper for java 9 when run on java 9 a module - path
fix filereportertest when run with no args
fix issue with start - to - end encryption not work if end - to - end be enable but not
added menu item functionality to DirectMessageConversation to enhance user navigation by allowing users to navigate to the home screen
added GET _ USER constant and updated RpcServlet to handle specific methods to enhance user retrieval functionality and improve error handling based on user permissions
added a conditional check for the operating system property " os . arch " in TestJdbcPluginWithMSSQL . java to ensure compatibility with Amd64 and x86 _ 64 architecture
updated references to startClass in WhiteboxImpl . java to ensure the correct class is used for strategy handling
bugfix : wrong parameter register number be generate .
updated method calls from ` getAsyncContext ( ) . getResponse ( ) ` to ` getSuppliedResponse ( ) ` to ensure compatibility with the latest API changes
[ drools - 704 ] use nimbus to change look and feel to metal
fix version number in the rtf / src / main / java / org / codenameone / util / regex / apppage . java ( # 1798 )
fix issue where launcher icon animator be not be remove when end
fix error message in depedprivatekey ( use only version ) when network be not found for a specific version .
fix # 529 move extra data to newofferpayload when update the offer
updated milestone parameter initialization in TicketPage . java to handle open and closed milestone conditions to ensure correct parameter is created based on whether the milestone is open or not
fix battery control , fixes # 640
added a new method ` getClusterKey ` to handle cluster keys with blueprint names and revisions to improve cluster management by providing context about cluster definitions and their relationships
initialized ` downgradeAllowed ` to true in ` UpgradePack . java ` and added a new test method in ` UpgradePackTest . java ` to ensure proper configuration of downgrade allowance in upgrades
updated XML parsing methods to use ATTRIBUTENAME instead of ATTRIBUTE for element names to ensure proper handling of special characters during XML processing
add a new configuration option to enable emulate system load library to enhances flexibility in loading libraries from different sources
replaced a custom comparator for application names with a direct method call to improve code readability and maintainability by using a consistent comparison method
ensure output stream be create if it do not exist .
updated the doTest method to include additional details in the assertion to enhance debugging by providing more informative output for test failures
camel - 13557 : camel - main - be less restrictive base on user forum . thanks to stephan siano for the patch .
[ hotfix ] [ doc ] [ metric ] add description for configuration option of scheduler
hbase - 2340 add end - to - end test of sync / flush ( forward - port from 0.20 branch of difference )
added address reuse option to ` DatagramSocketOptions ` to enhance connection configuration by allowing address reuse
fix wrong shutdown message when server be stop
douniaberrada : remove deprecate locator interface to fix compile error
updated error message formatting for schema validation to clarify error conditions to ensure accurate messaging for non - searchable and non - retrievable fields
fix ( core ) : fix star tree index operator to handle dictionary id match
update hellomessage to allow empty hamcrest method as well
no effective change - code cleanup , remove unnecessary whitespace
updated constant visibility in RecordReaderFactory . java and added a new RecordReaderFactoryTest . java file for parquet record reader configuration to improve code accessibility and facilitate testing of record reader configurations
added support for querying both GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator to enhance query flexibility for MongoDB queries based on specified criteria
refactor group by expression handling in CalciteSqlParser . java to improve clarity and functionality to enhance maintainability by ensuring correct aggregation behavior based on group by expressions
replace throwing an exception and improve memory management in MappedByteBuffer and FileChannelLinesSpliterator to enhance error handling and prevent potential memory leaks during concurrent operations
refactor code to use a local variable for the validator object for improved readability to enhance code clarity and reduce repeated method calls
add a schedule method to circuit breaker and update test case to use it to improve responsiveness by avoiding blocking the circuit breaker indefinitely
removed the ` FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS ` flag from intent flags in Launcher . java to simplify intent handling by removing unnecessary exclusion
[ ds - 2785 ] change the default value of upload progressbar from ajax to progressbar
updated the ` @ DisplayName ` annotation to ` @ Disabled ` and added a new ` @ Disabled ` annotation to disable the test due to potential issues with retrieving strategy for column privileges
added synchronized keyword to addExportedCount and getExportedCount methods in EntityGraph . java to ensure thread safety when accessing shared data
updated import statement for IntRangeUtil from IntRangeUtil1 to IntRangeUtil . requireNonNegative to ensure consistency with the latest library version
modified HttpParser to adjust character handling logic to ensure correct representation of encoded headers to prevent incorrect header processing
updated the content view from ' trends _ activity ' to ' configuration _ activity ' to reflect the new configuration UI for the activity
update output message to include position of SLWT in the document to improve clarity of SLWT detection for better debugging
refactor forceleader test to improve timeout handling and add a new forceleaderwithtlogreplicas test
refactor Thread class to improve thread management to enhance performance and maintainability of the code
camel - 7999 : allow to force the template mode in the spring boot . xml file
camel - 883 fix the issue that defaultcxfbinding do n ' t work if the soap message be not xml
formatted the constructor of YamlRepresenter class for consistency to improve code readability and maintainability
modified the string formatting in the ToChar class to include a timezone indicator after the day of the month to ensure consistency in date representation across the application
added validation for transaction and write IDs in GenericUDTFGetSplits to ensure that transactions and write IDs are correctly validated within the driver
replaced ` ArrayList ` with ` Collections . emptyList ( ) ` for empty collections in ` JsonSerDe . java ` to improve code readability and avoid potential NullPointerExceptions
# 763 added null check for book . getbookpath ( ) to avoid npe
added additional condition to the ` manufactureStrings ` method in ` SSTDeserializer ` to ensure comprehensive string processing during string processing
updated the grid column retrieval in AppPreferencesImpl and ExtendedListFragment to use a constant for better maintainability to improve code clarity and ensure consistent use of the default grid column value
updated the return value of the " diff " field from " ( empty - differences in line breaks ? ) " to " ( line contents match , but line - break characters differ ) " to clarify the distinction between line breaks and line contents matches
added a new boolean field ` waitingForKeys ` and updated related logic in multiple classes to track this flag to ensure that keys are still waiting during processing in the media processing pipeline
fix ( okex ) : delete margin resource for v3 api endpoints
updated comparison logic in LineUtilitiesTests to use proper subtract operation for positive and negative values to ensure accurate detection of line boundaries for better accuracy in response to edge cases
added error handling for varargs and old array syntax in JavacParser . java and created two new classes T6569633 . java and T6569633 . java to improve type safety and provide testing for array argument syntax
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
added METHOD context to improve parsing functionality to support both member and method calls within the VariableContext class
remove unused method asnullableboolean from experimentaljsonparser and add test for invalid profile string .
fix bug with message buffer not be set correctly when check past end of a message .
added HttpClientProperties to NettyRoutingFilter and NettyAutoConfiguration to enable configuration of response timeout for improved response handling
updated the handling of ` NativeLinkTargetGroup ` and ` NativeLinkTargetInput ` in ` CxxLibraryFactory ` and ` NativeLinkTargetGroup ` to improve code clarity and maintainability by consolidating link target functionality
camel - 17684 : added test base on user forum issue
added support for handling field access in Rex ASTConverter and updated RexNodeConverter to use it to improve the parsing and conversion capabilities for expression nodes
[ log4j2 - 1125 ] reuse querylogger . entries ( ) to avoid costly boxing / unboxing operation
fix regression in previous fix for http : / / issues . apache . org / activemq / browse / amq - 2999
refactor PKCS12KeyStore and StoreSecretKeyTest to improve certificate handling logic and ensure correct keystore entries are loaded
added reflection access checks and improved link handling in ReflectionCheckLinker to enhance security and maintain correct access controls for reflection - related methods
removed public access modifier from the CollisionMap constructor to enforce encapsulation within the class
change getrawinputfromtransactioninput to not require an @ notnull annotation .
fix buggy switch statement in configurationvalueconverter and main
cloudstack - 2120 : do n ' t pass region _ id to the sql insert statement , since region _ id be not save in the database
added encryption support for old excel file in ` OldExcelExtractor ` to ensure proper exception handling for encryption issues
use -- add - exports = org . graalvm . nativeimage . builder / com . oracle . svm . core . jdk = all -NAMED for extra _ image _ benchmark
fix TimeLineCursorAdapter to ensure the image visibility is properly managed within the layout
fix test which randomly fail on slow ci server
modify the creation and deletion logic of the EXTERNAL _ FILES _ DIR in ShadowContext . java and add a test for directory deletion in ContextTest . java to enhance directory handling and ensure proper cleanup of temporary files
replaced custom exception factory implementation with Class . forName for improved readability to enhance code maintainability and reduce redundancy in exception handling
increased WAIT _ TIME _ MS from 10000 to 60000 to extend waiting time for better synchronization
updated import statements and added support for a Uud in OAuth2 request handling to enhance flexibility in handling OAuth2 audience claims during authentication
camel - 14263 : camel - kafka should not default to true for break on first error .
added a new constant selectableItemBackground to define a background color for user selection
replaced multiple specific imports with a wildcard import and added a placeholder method for placing stop orders to simplify import statements and prepare for future stop order functionality
updated event type assignment logic in TxnSetOperation . java to ensure consistent handling of null record types
change the reumablerandomaccessfilelistener to be a single responsibility of not use it , a suggest by michael klink .
change package name from AccessLogValve to AbstractAccessLogValve to ensure correct class loading for AbstractAccessLogValve
added a method to set formats in HSSFDataFormat and updated test assertions in TestWorkbook to ensure correct format handling and validation of data formats
add multiple @ Deprecated annotations to FlinkKafkaProducer . java to mark the class as outdated to discourage its use in future development
updated condition for adjusting compressed chunk length in CompressedInputStream . java to ensure correct handling of compressed chunks by accounting for maximum compressed length
fixed - http : / / issues . apache . org / jira / browse / camel - 7569 - add support for idempotent operation
fix containerrepair not use metadata for vanilla item ( # 4780 )
[ mng - 6976 ] update legacylocalrepositorymanager to avoid artifact resolution when local repository be use .
added logging for task manager initialization success and improved error handling in the LocalInstanceManager and JobManager classes to enhance stability by ensuring the TaskManager is only started if successfully initialized
add more logging when build artifact resolution fails .
updated the method for managing temporary paths in UploadFileOperation and added a new method in FileStorageUtils for account and file operations to standardize the path retrieval process and improve consistency in file management across different components
added a method to find feed entries by their IDs in FeedEntryStatusDAO . java to improve data retrieval efficiency and streamline data access operations
added execute start and end methods for VertxThread in ContextImpl and modified test cases in BlockedThreadCheckerTest to enhance thread management and validate blocking execution behavior
modified the FormatterConverter class to accept a String input for formatter strings and added a new convertOrNull method to ensure that a valid output argument is provided to avoid runtime errors
fix loadcontactstask crash due to fileinputstream . getall ( )
replaced setter methods for remote address and remote host with direct assignment to simplify the code by eliminating unnecessary setter methods
added a null check for realClass in Robolectric . java to ensure that the shadowClass is not annotated with @ Implements to prevent runtime errors
tlsmutualauthenticationcertificatechain and ExampleNettysslContextFactory do n ' t require tlmutualauthentication
added a test for handling SSL exceptions in BasicHttpTest to ensure proper exception handling for HTTP requests that exceed HTTPS
camel - 16400 : added getter method for consumer and producer in abstractkafkresumerestrategy ( # 4433 )
refactored the formatting of SitemapWidgetEvent creation in PageChangeListener . java and added a new ArrayList import in FrameRenderer . java to improve code readability and ensure proper event handling during sitemap rendering
fix wrong log warn when no from / subject / text be set
# 791 - enh : add query optimization for beandescriptors ( due to # 793 )
added error handling for resource waiting during file transfer to improve stability by gracefully managing transient IO issues
checkstyle : fix all of the non - intellij warning ( # 2563 )
( chore ) camel - test - infra - spel : minor update to doclint
fixed incorrect link file location when first file be add ( # 4127 )
added LoadOptionsBuilder and SchemaInfoLevel to SchemaCrawlerOptions to enhance configuration flexibility for schema crawling
refactor TestLoadLegacyLibrary to improve test structure and organization to enhance clarity and maintainability of the test suite
replace throw with return null in TestReader . java to handle unknown operation names gracefully
added methods to set the name and enabled states of the prototype to ensure proper management of the project ' s properties
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources for better resource management to ensure proper closure of resources to prevent potential memory leaks
[ hotfix ] [ javadocs ] fix typo in datastreamjob class
do n ' t use fileoutputstream in this test , it should n ' t .
camel - 883 fixed the cxf service class issue with thanks to krzysztof
fix # 284 - h2 - 14 protocol do n ' t work with tlsv1.3 . x
refactor LambdaToMethod , ClassFileVisitor , and ReflectionVisitor to improve lambda handling and parameter processing to enhance code clarity and maintainability while ensuring correct behavior for lambda expressions
fix a problem with whatsapp and filter out a particle that ca n ' t be compute correctly .
increase timeout for download dl4j inception ( # 2511 )
added phraseSlop setting in QueryParser to improve query processing accuracy
fix test which randomly fail on slow ci server
increased the number of splits in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink from 8188 to 6188 to improve flexibility in tracking service metrics
fix for # 2844 : game / screengrab flickering ( # 2844 )
updated visibility logic to check if edit options are available before showing the compound view to ensure that the compound view only displays when valid edit options are available
update depth progress calculation to ensure a minimum progress value is provided to improve user experience by preventing unintended progress updates
remove unused method session . packetreceive ( packet )
added debug logging for authentication failure and modified DelegatedAuthenticationGenerateClientsAction to utilize handleServerAutoRedirectIfAny to improve error handling and ensure consistent server redirection behavior across authentication processes
added null checks for the service object in ` SamlIdPEntityIdAuthenticationServiceSelectionStrategy . java ` and ` SamlIdPMetadataUIAction . java ` to enhance robustness by preventing potential NullPointerExceptions
fix ( pantheon ) : add ` hidden = true ` to enable account level permission
added doNotInstrumentClass method to exclude " androidx . room . CoroutinesRoom $ Companion " from instrumentation to enhance performance by avoiding unnecessary instrumentation for specific room types
modified the ` isSupported ` method to synchronize it properly to ensure thread safety when checking the support of ` HttpCallerInfo `
remove unused method setinitscript ( ) from initializingdatasourcefactorybean
camel - 9594 : fixed class name collision in persistent and temporary queue mode with thanks to stephan and aaron
renamed AuthenticationProvider and TargetObject classes to improve clarity and consistency in naming conventions
pdfbox - 2714 : open / close mc block for tagged pdfs
log4j2 - 1434 add test that patternselector do n ' t work with pattern
simonstewart : attempt to fix test that fail only in hta mode .
changed the type of the ` thank ` method from ` MwPostResponse ` to ` MwThankPostResponse ` and added a new class ` MwThankPostResponse ` to improve code clarity and encapsulate response handling in a more structured manner
updated ChannelEndPoint to implement SocketBased and introduced a new SocketBased interface to enhance socket handling capabilities and improve code clarity
updated revoking store initialization and modified maximum size calculation to enhance clarity in managing revoking store states and ensure correct maximum size configuration
added test cases for HQL query handling implicit joins to ensure correct behavior of the query with multiple calls and local date types
replace line normalization of expected and actual strings with line normalization to ensure consistent comparison by considering line breaks in expected and actual output
lucene - 6039 : fix indexwriter thread block when file be already close
fix env - method that do not need to be final
added validation to ensure the amount of resource percent is within a valid range to prevent invalid contract executions due to invalid resource percent values
added a condition to check an additional resource for show _ old _ login in AuthenticatorActivity to ensure that legacy login display only occurs when the corresponding feature is enabled
rename StreamNetworkThroughputBenchmarkTests class to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
fix : set responsepage to work for team and user ( # 1588 )
updated debug log message to include exception details to improve error reporting for better debugging during plugin credential initialization
fixed possible deadlock in server management code .
refactor Rocket class to improve structure and readability to enhance maintainability and clarity of the code
hive - 6301 : create dynamic partition only when necessary ( ashutosh chauhan via sergey shelukhin )
forbid round up factor to use a more general sf ( # 2138 )
added visitDirectory method implementations in JarDirectoryStep and DirectoryTraversal classes to handle directory entries to ensure that only active jars are processed to maintain data integrity
added a new file JWKSetEditor . java that implements JWK set parsing functionality to provide a standardized way to handle and parse JWK sets in the application
replaced the usage of BytesRef objects with direct variables for pending terms in OrdsBlockTreeTermsWriter and BlockTreeTermsWriter to improve efficiency and maintainability by reducing unnecessary parameters
make invocation node respect truffleboundary in jfr ( e . g . inlining ) .
changed the default value of fetcher . threads . per . host . by . ip from true to false to align with updated configuration for improved performance
refactor conditional checks for queryTimeout in StatementUtil . java to ensure proper handling of null or invalid values for queryTimeout
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and modified path resolution logic in HaskellGhciRuleIntegrationTest . java to enable proper handling of target configuration hashes in the build system
refactor ReplicaPosition class to improve method naming conventions to enhance code readability and maintainability
cloudstack - 4984 : fix network usage stats update task due to wrong initial delay
updated animation interpolators and introduced a new Interpolator for fade - in transitions to improve animation effects by introducing a final frame for better visual feedback
adjusted swipe length calculation in Background . java to ensure proper vertical alignment based on display density
added a new module - info . java file for the Jetty HTTP3 server module to define module dependencies and improve module organization
updated JsonType to handle null values and refactored variable names in JsonTest for consistency to improve null safety and enhance code readability by using constants instead of string literals
removed unnecessary parentheses around the assignment of ctx to streamline code readability and maintainability
[ hotfix ] [ checkpoint ] fix the retrieval of the executioncheckpointingoptions . tolerable _ failure _ number
modified the method signature of ` reportInnerClassReferences ` to accept an ` Element ` instead of an ` TypeElement ` to enhance functionality to support inner class references in package annotations
updated the string concatenation syntax for the " test . tool . vm . opts " command to ensure proper formatting of the command string output
replaced ` FluentIterable ` with ` MoreCollectors ` for collecting files to simplify code and improve readability by using modern Java features
[ 3.0 ] export dubbo registry to url ( # 9040 )
on behalf of emil ivov , end all session when otr mode change
added outline size and transparency properties to NodeLabelRenderer and updated rendering methods to allow customization of rendering output based on font properties
updated ProxySelector , URL , and URLStreamHandler classes to improve consistency and code organization across network handling components
changed the boolean parameter from false to true in Win32FontManager . java to enable the feature corresponding to font rendering
added a null check for the variable ' v ' before visiting its content to ensure the cursor is preserved when processing the visit statement
added error handling policy implementation in JDTBatchCompiler to ensure proper management of error processing based on the compiler environment
added content alignment and anchor support to LabelBlock to enhance layout flexibility by allowing content and text alignment
renamed mmm and ppp classes for clarity to improve code readability and maintainability
modified the IndexReader class to enhance search functionality to improve the performance of document retrieval operations
refactor isLoopback variable to be optional and add null check for networkInterface to improve code robustness and prevent potential NullPointerExceptions
nifi - 1104 : pass default locale to dateutils . fromcacpecificformatstring ( )
fix flaky test : filedownloadviaproxytest . testdownloadfileasstream ( )
nifi - 11347 add output _ no _ hits property to abstractjsonqueryelasticsearch and add output _ no _ hits property for query that do n ' t output json
cloudstack - 2120 : refactor code remove unneeded use of aggregation ratio
[ java ] move switch to try - with - resources in election .
[ hazelcast - 330 ] fix race condition during file reading ( # 2285 )
simplify the widget event logic in PageChangeListener . java to improve code readability and maintainability by reducing complexity in the event handling logic
added iswriteProtected method to Workbook and HSSFWorkbook classes , and improved error handling in RecordInputStream and HSSFWorkbook to enhance file sharing functionality and ensure proper validation during reading
added a try - catch block around the unregisterInvalidatedSessions ( ) method call to handle exceptions and log warnings for potential issues during session unregistration
update CategorizationFragment . java for new functionality to improve user experience with better visuals
[ hue ] fix bridge report light be reachable ( # 12358 )
store the loading flag in the fml client handler , for easy debugging .
updated return statements in UI , BlockInventoryFragment , and Core . bundle to include thousands information to enhance user interface by displaying thousands details alongside millions
replace Preconditions checks with a switch statement for handling different types in MessagePackParser . java to improve code readability and maintainability while ensuring correct byte conversion handling
[ hibernate - 2864 ] fix query parse problem when use reserve word a relationship name
added test cases for serialization and deserialization of nested Map objects to ensure correct handling of nested Map types in JSON processing
[ geot - 5015 ] fix clip line when line with large number of geometry ( # 4810 )
updated sorting order implementation to use a static final variable and improved readability to enhance code clarity and maintainability by standardizing sorting order handling
do n ' t silently fail the test when there be no testplan
updated method names in GeneratedEntityTranslator and JdbcManagerSupportImpl to use more descriptive names and added Lazy dependencies to improve code readability and ensure lazy initialization of the collections
updated argIdent assignment logic in the parser to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is only added to parameters when not null
fix camel - 9868 : use scf protocol instead of hardcoded value
volume : set default value of displayVolume to true
modified the ` version ` method to accept a boolean parameter for handling Javah version details to improve flexibility in versioning based on whether the full version is release or not
refactor change log retrieval logic to improve clarity and structure to enhance the logic for determining the presence of change logs based on global conditions
changed log level from warn to debug for transaction retrieval failure to reduce verbosity of logs by using a lower log level for non - critical issues
hhh - 14077 add skip for oracle due to incorrect formatting of sql string
moved the startHandshake and setSoTimeout calls to maintain socket timeout settings before establishing SSL connection to ensure that the socket timeout is preserved during the handshake process
updated size calculation in multiple fragments and fragments to account for popup status to ensure proper size calculation based on the application ' s popup state
fix : enable cha by default and thus disable cha by default
log original thread context classloader in activemqresourceadapter for easy debugging
fix # 649 : remove the need for partial randomization in the test .
redirect jetty - ee 9 schema to jetty - ee9 . xml in release mode ( # 4331 )
refactoring : refactoring readiness . isready into a separate helper method
fix issue where we be use an incorrect array indexoutofboundsexception when check for live endpoint .
camel - 7999 : idtablehelper should skip creation statement if no statement be provide .
drill - 7019 : update user rpc version due to change in rpcfailure behavior .
added a security check before retrieving the caller class in ObjectStreamClass and ObjectStreamField classes to enhance security by verifying package access if the security manager is present
removed unused imports and methods from Utils . java and made UGSCommandCount variable private in XLCDCommunicator . java to streamline code and improve encapsulation for better maintainability
refactor DefaultMetricsTagProvider to utilize a Map for tagging instead of an ImmutableMap to improve code readability and maintainability by eliminating the use of external maps
add mockbrowsertest to the suite , to prevent hanging test .
changed default level from Level . OFF to Level . ERROR in Launcher . java to indicate a error state rather than an offline state
make member variables final in IconNormalizer . java to enhance immutability and prevent unintended modifications
added support for first call prepare do in PrepareInterceptor to enhance flexibility in handling preparing actions
clean up home / back behaviour in overview mode ( issue 10965421 )
added Singleton annotation and removed eager singleton binding in Auth . java to simplify code and ensure proper singleton usage for improved functionality
modified the incomingAssociations method to include an ignoreInvisibleAssociations parameter to allow more flexibility in handling associations based on visibility settings
cloudstack - 8703 : remove redundant db call when update global config ' capacity . type '
add note about basic usage section for async profiler on linux 4.6 .
refactor ModelResolver and create RequiredFieldModel for improved clarity and structure to enhance code readability and maintainability by separating required field handling logic
rename CasCoreConfigurationWatchConfiguration to CasCoreConfigurationAutoConfiguration across multiple files to standardize naming conventions for clarity and consistency in the configuration classes
updated the implementation of feature flags to enhance functionality and improve performance
[ hueemulation ] correct format of uuid in commonsetup and enable test . ( # 1443 )
set the image drawable to false if a picture image is present in both TimeLineCursorAdapter and TimelineArrayAdapter to ensure correct image handling when picture data is available
hive - 23702 : improve clarity of user - defined description ( eugene koifman , review by wei zheng )
added a null check for storage path in the condition of mWaitingToSend to ensure stability by avoiding potential null pointer exceptions
hive - 18529 : vectorization : fast - byte hash table / multi set should check the resizing threshold ( gopal v , review by matt mccline )
guacamole - 839 : correct typo in comment of ldapconnectionservice . getconnection ( ) - remove whitespace
remove @ xmlattribute ( required = true ) from aggregateresource .
removed debug tracing logs in TouchInteractionService and RecentsAnimationDeviceState to clean up code and reduce unnecessary logging
added a condition to check if the class name starts with " com . intellij . rt . junit . " to workaround for IntelliJ IDEA build issue
updated assertions in TestMultiSearcher to use correct length variables to ensure accuracy of tests for multi - searcher functionality
add a new file LucenePackage . java in the ` org . apache . lucene ` package to facilitate the construction of Lucene packages within the Apache Lucene framework
update the calculation of sizeInBytes in RAMDirectory to correctly account for an existing size to ensure accurate size calculation by accounting for the existing size in the sizeInBytes
hive - 11341 : add early termination for average val size estimation in flink - filter ( sergey shelukhin , review by prasanth jayachandran )
added a null check for getDrawerToggle ( ) before invoking its update listener to avoid potential null pointer exceptions during drawer slide animation
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method signature to suppress the warning about the unused method parameter
8294026 : enable system classpath and module only when need
fix msbib export format ( # 5594 )
added a method to cancel core recoveries and modified logging statements for clarity to improve recovery management during ZooKeeper - aware operations
refactor time measurement and position difference calculations to use a custom method for clarity to improve readability and precision of time measurement in the application
removed unnecessary debug print statements and simplified conditional checks for better readability to enhance code clarity and maintainability by streamlining click logic
fix misspelling in documentation ( # 14228 )
added trust resolver and role hierarchy configurations to SecurityEvaluationContextExtension to enhance security evaluation capabilities with custom roles and permissions handling
added a condition to set the exponentSize if it is zero to ensure the exponentSize is always correctly defined based on primeSize
fix sync problem with local file account
modified the combination logic in DistinctSqlAggregation to support multiple values to enhance flexibility in combining results with multiple values
added a test method to verify post - login activities for users on successful authentication to ensure that post - login activities are executed correctly for users with successful authentication
allow extractorspanishstrippedverb from argument ( # 3293 )
refactor CharArraySet to simplify code logic and improve readability to enhance performance and maintainability of the code
updated error message and changed track type checks in MuxerWrapper . java to improve clarity of error reporting and ensure accurate validation of track formats
refactor JsBundleGenrule to replace instanceof checks for JsBundleAndroid with a direct method call to improve code clarity and maintainability by consolidating package handling logic
fix string dictionary to correctly handle utf - 8 encode ( # 8461 )
fix logic analyzer and logic analyzer to tile icon
replaced the instantiation of vector to use a singleton instance class to optimize memory usage by avoiding unnecessary instantiation of the vector
[ hotfix ] remove unnecessary syncmetaregion call from cmmanager
[ # 7170 ] instructor : bug fix : response return blank instead of null
added import for TestLoggingExtension and applied it to DiagramRendererTest to enable logging functionality for better debugging and monitoring
added parameter ` useCamelCaseMapping ` to multiple ` findProperty ` methods across multiple classes to improve flexibility in property lookup by allowing automatic mapping of names
added support for a new water heater device in MiIoDevices . java to enhance compatibility with additional water heater models
refactor code to store SSL session data in a variable before accessing its properties to improve code readability and reduce repetition
added a new file ` CreateNewSpreadsheet . java ` for creating a new workbook with multiple cells to provide an example of creating a new workbook with multiple cells and comment
fix spring . cache . redis . ttl property use value long instead of duration . zero
be c5fb5fb : fix loadworkspace be call multiple time use right intent when refresh shortcut icon
upgrade to version 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the latest build process
updated synchronized blocks to use ' this ' instead of ' lucidaFontName ' to improve performance by reducing unnecessary synchronization
added a condition to check for the character ' < ' in DocClassUtil . java to ensure proper handling of special characters in document processing
removed String . format from the return statement in Workspace . java to simplify the return value to enhance readability
added a UI message sending functionality in ValidateCommandStep . java to inform users when validation errors are found
add logic to configure web resources in IntegrationTestContextLoader to improve the handling and configuration of web resources in the application context
modified scroll handling logic and updated component retrieval methods to improve touch event handling and ensure accurate component selection
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
make count unique for openid client ; fix # 394
fix findbugs warning in cellcontentconverter
update s1glob regex to include line breaks and enhance output message format to improve the readability of glob matching output for better debugging
mondrian : fix for bug # 1743819 , document mondrianproperties . jdbcfactoryclass
8027163 : sun / management / jmxremote / bootstrap / customlaunchertest . java should be update for jdk8 removal of solaris - 32bit support
removed the embedded image test from the TumblrRipperTest class to streamline the test code for improved readability and maintainability
fix ensure method be convert only when there be a slot for the store type
fix extractor initialization when nextloadposition = 0 ( # 3277 )
test : add output to indexwriterconfig to debug oom issue
tika - 2228 -- add ` ` dynamic ' ' option to tikaconfig , default to ` ` true ' ' for < tika - config > .
added new imports and refactored generic types to use diamond operator to improve code readability and maintainability while ensuring correct type usage
added import command check in DataImportHandler and modified import command condition in DataImporter to enhance command handling functionality and improve import command management
add a test for not modifying inner classes when the ignoreDefinition parameter is true to ensure that inner classes do not modify inner classes when the ignore definition is true
removed import of android . util . Log from JettyService . java to eliminate unnecessary dependency on Android ' s logging utility
modified the checkItemPlacement method to include a new parameter for workspace screens to enhance functionality to ensure proper handling of workspace screens based on screen IDs
add kill switch to jetty7appserver ( fix # 780 )
fix crash when realtime - segments be corrupt ( # 4534 )
added a check for Windows OS in the test cases to skip processing for Teredo display names to improve compatibility by avoiding issues with Teredo in Windows environments
add a warning if the add contact service be n ' t connect and the protocol provider be n ' t register
updated bean registration method to use a new bean component definition to improve flexibility and maintainability of the authentication configuration
be dee6975a : fixing issue where fastbitmapdrawable be not scale the draw into the correct bound . ( bug 9075810 )
add date ( yymmdd ) to meitrack and totem protocols ; fix javadoc
changed method access modifiers and updated method calls in SunFontManager and X11FontManager classes to enhance encapsulation and improve font path retrieval logic
added @ Deprecated annotations to EnhancedRandom . java to mark these elements as outdated to discourage their use in future development
[ iotdb - 3672 ] fix failure in imapstoretest due toachedmaxsizeexception handling
add an option to turn off keep empty sentinel .
[ mng - 4082 ] improve error reporting when the user forget to create the subdirectory
replaced null return values with the NO _ MODULE _ COMPILER constant in multiple files to ensure proper handling of module compilation and avoid potential null pointer exceptions
bug 10317 : if the resource return null answer , add an answer to the list
do n ' t eat error when send email , just log the message .
add a package info . java file for buildcraftapi / tiles ( # 778 )
updated DateFormatEvaluator and FileListEntityProcessor to use Locale . ROOT instead of UTC to ensure consistent parsing of math parsing across different locales
added a boolean property ` includeDecals ` and its getter / setter methods to ` StorageOptions ` , and implemented a checkbox for including decals in ` StorageOptionChooser ` to enable users to optionally include decals in storage options
updated generateDocumentation method to include a null parameter and added a getImplementedDatabases method in LiquibaseTest to ensure proper handling of null values and suppress unused warnings
updated HiveProtoLoggingHook to set the queue name and enhanced logging functionality to improve performance tracking and ensure accurate logging duration values
solr - 8867 : correct spelling of ' begin with solr 5.0 ' in warn warn message
upgrade to jdk 16.4 . 1 and adjust ignore record attribute test to take account of class file version
added a new test class ` LdapPasswordAuthenticationTest ` to validate LDAP user authentication to ensure proper functionality and performance of user authentication in the application
updated import statements and modified condition in TaskCompiler . java to utilize BasicStatsNoJobTask and improve clarity in input format checks
make sure to reload project on save all notification ( # 1854 )
updated the VisibleAdvance class implementation to enhance visibility management for better user experience
fix : fail down the informer when a terminal exception occur
added support for dynamic number columns in EdgeDataTable and NodeDataTable to ensure correct data processing for dynamic data types
added null checks using ` Objects . requireNonNull ` in ` ResolvedGroupArtifactVersion ` and ` ResolvedGroupArtifactVersion ` to improve code robustness and prevent potential NullPointerExceptions
updated API assignment to ensure fallback to the existing API when apiInfo is null to improve robustness by preventing null assignment to the API variable
refactor HeadersConfigurer and CacheControlHeadersWriter classes for consistency to improve code maintainability and readability
added shader shader loading and disposal methods in PhotoPanel and FlameRenderer classes to enhance shader management and ensure proper resource cleanup during rendering
updated method scene dimensions and added context menu functionality in InsnListEditor and InsnProxyListEditor to improve layout responsiveness and enhance user interface functionality
update conditional logic in CSSParser . java to include length checks before processing to improve handling of line breaks and avoid potential ArrayIndexOutOfBoundsException
add setdefaultlookandfeeldecorated ( true ) to uiserviceimpl to make it adapt to laf
removed unnecessary ' EXISTS ' clause from the SQL query and simplified method calls to improve code clarity and maintainability by eliminating redundant calls
lucene - 1200message - rename unknown test to tower test to avoid name collision .
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience based on swipe direction and conditions
replaced HostDatabase with ColorStorage in ColorsActivity . java to utilize a more efficient color storage implementation
updated method signatures and documentation in String . java to improve clarity and maintainability of the code
removed unused Logger imports from multiple classes to optimize code and improve maintainability by eliminating unnecessary dependencies
added a method ` getGlobals ` to ` MapGlobalResolver ` for retrieving entries from the map to facilitate easier retrieval of stored entries in the map
added assertions to test sendcoin method in MultiSign34 . java to ensure correctness of sendcoin functionality in the tests
updated JUnit import statements from ` org . junit . Test ` to ` org . junit . jupiter . api . Assertions ` to migrate CUFilterTest to JUnit 5 and utilize Assertions features
use platform - dependant path separator ( # 1265 )
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow access to the method from other classes without creating an instance
added assertions for property ' id ' and ' name ' in InheritanceTest . java and updated field retrieval in TestUtil . java to ensure proper field presence validation and improve code clarity with proper field access methods
removed unnecessary getConf ( ) argument from Outlink constructor calls across multiple files to simplify Outlink initialization and improve code clarity
removed the ` LexicalContext ` parameter from multiple methods to simplify method signatures and improve code readability
exclude lambda from typesinuse identification , and update uselambdaforfunctionalinterface to handle final modifier in anonymous class parameter and remove import after execution ( # 1844 ) ( # 1851 )
remove unnecessary appending of class selector to the class filesets to streamline the file addition process for improved efficiency
removed the check for unsupported root input in HiveCardinalityPreservingJoinOptimization . java to streamline the handling of Aggregate inputs and prevent unnecessary processing
cache result of registryevent . getmapping ( ) to prevent some race condition .
updated assignment of x3 and y3 in the Intersector class to ensure consistent formatting by removing redundant assignments
added default methods for decoding and limiting SBE in MessageDecoderFlyweight . java to establish a clear operation for using SBE encoding
add test to verify cluster health when use elasticsearch
fix buffer issue in ` ` work ' ' peer message parse
added versioning support to ClusterDefinition and updated related tests to ensure the cluster version information is accurately represented and validated
camel - 6056 : remove useless setter from ftpconfiguration ( # 6068 )
zeppelin - 352 . do n ' t hide error message when load dependency from interpreter option
replaced existing code . newLocal ( v ) with newLocal ( v ) in Gen . java and added a new test class NoLocalsMustBeReservedForDCEedVarsTest . java to ensure proper handling of local variables to prevent potential memory leaks
added a check for basic constraints in ForwardBuilder and created a new class BuildEEBasicConstraints to enhance certificate handling capabilities and improve organization of generated certificates
added a new method initAfterFirstDbConnection to JdbcPostgresqlDAO for initializing the database connection to ensure compatibility with PostgreSQL features introduced in newer database versions
fix # 402 - ie : remove x - webkit - deflate - frame extension .
replaced the boolean undeleteAll variables with assertions for pendingDeleteCount and removed unnecessary checks to streamline the deletion process and ensure accurate tracking of delete operations
clientregistration : fix npe in clientregistration if scope be null
added a null check for orderBy before removing it and modifying explanation to avoid potential NullPointerExceptions when orderBy is null
[ java ] use hamcrest assertion instead of junit in clusterentrypointtest .
cloudstack - 8114 . [ vmware ] remove redundant check when update vm snapshot state .
refactor initialization of LogUtils to store the message in a variable before logging to improve readability and debugging by logging a debug message
added a condition to check if tasks contains elements before processing to avoid potential NoSuchElementException when the tasks list is empty
fixed - do n ' t send pubsub delete message if the node do n ' t exist .
fix no - value search for ` ` long ' ' and ` ` double ' '
added check for empty barcode in codes128reader and code39reader , throw an exception if the result string be empty .
changed the type of ' suites ' from TreeSet to LinkedHashSet in SSLContextImpl . java to maintain the order of cipher suites in the application
added a check for the control character in the Escaper class and updated the InternationalizationTest to ensure proper handling of Unicode characters and maintain internationalization consistency
changed the method signature from String to CharSequence and modified the return type handling to improve flexibility in returning string values and enhance type safety
updated import statements and added null checks for aliasChildren in InternalMNode . java to improve code robustness and prevent potential NullPointerExceptions
be 3c729914 : be 564a2e71 : fix custom content state for scroll in rtl ( issue 11068877 )
updated variable names and method calls in JavaTemplate . java for clarity and efficiency to improve code readability and eliminate unnecessary string concatenation
added a call to setAccessible for the method to ensure that the method is accessible for encapsulation
added a condition to check if the initial value is not equal to " database . server . id " before setting the literal initialization to avoid potential errors when the default value is set to " database . server . id "
fix ripper for o x 10.7 on window ( # 537 )
added an menu item for accessing the " LooksFrame . 28 " web interface in BasicSystemUtils . java to enhance user interaction by providing access to the PMS server
[ fix # 1045 ] inner and inner field generate invalid value due to miss getter
bugfix # 207370 - avoid arrayindexoutofboundsexception when query for slide show
[ flink - 24182 ] [ connector / core ] fix checkpointio not able to move the checkpoint into a directory
load battle pass manager before avatar post load to avoid null pointer exception
updated SSH container configuration and added KexAlgorithms and SSH host key algorithms to enable SSH communication and enable multiple SSH settings for the container
added a long array and garbage collection calls in ThresholdTest . java to ensure proper garbage collection for the full - gc environment
updated logging checks to ensure only valid log names are used to improve log accuracy and consistency during debugging
fixed - rremervicervice . getremoteaddrivecieservice ( ) method do n ' t work properly . # 1999
added method isselected ( ) and setSelected ( boolean b ) to MultiButton to enable dynamic selection of checkboxes based on checkbox state
updated the target activity in the Intent from UpNextActivity to NextUpActivity to ensure correct navigation to the NextUpActivity in the application
[ issue # 5061 ] fix the issue that replicasmanager be not initialize when controller mode be not enable .
close the redis connection during health check
updated background color retrieval methods in ProgramGridCell and added a method to retrieve theme colors in Utils to improve color management by using dynamic resource IDs and centralizing theme color retrieval logic
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
removed multiple type adapters in ToolingApiLauncher for better functionality to streamline type adapter registration for better maintainability
updated version numbers in TestPayloadCheckQuery . java to ensure consistency with new specifications
updated ConsoleReader to include a mask parameter in print operations and modified the corresponding test case to enhance functionality to allow capturing output with masking for improved user input
added user information when the application exits to enhance the command display for better user experience
rename package to reflect that the module support be now part of the api test
[ hotfix ] [ test ] remove unused parameter in slotsharinggroup
one . util . streamex . emulatejava8 : remove unnecessary drop while stream .
updated texture references from " data / wheel . png " to " data / sys . png " in DecalTest . java and MusicTest . java , and modified song duration in SimpleDecalTest . java to improve clarity and accuracy of test data by using a more relevant image
be d26bad51 : be f0f2ffae : fix 2300792 - all apps zoom when you come back from an app .
updated import statement for Cluster class in HostsRemovedEvent . java to ensure consistency in import format
updated ClientDetailsEntity and related classes to introduce an introspection feature and modified token handling logic in ChainedTokenGranter to enhance token introspection flexibility and improve client behavior based on client scope
updated HtmlSessionInformationsReport to use HTML encoding for user and attribute data to ensure proper HTML output for session information
added ` PhrasePrefixQuery ` to the link structure for ` PhraseQuery ` in the query class to improve link clarity for search functionality
refactor : use isempty ( ) instead of size ( ) > = 0 in commentsinserter and commentparser
fix # 2184 - do n ' t generate literal string in onstringtype . fix # 2184
updated method signatures in AbstractAssert , Assert , DateAssert , and Assert classes to use Object instead of A to improve type flexibility for assertions and enhance code clarity
updated package names and method signatures in JwtPlugin and ThrowingFunction to reflect exception handling to improve code clarity and ensure proper type safety for throwing functions
added a new method ` getUploaderBehaviour ` and ` setUploaderBehaviour ` to ` AppPreferences ` and updated usage in ` UploadFilesActivity ` to improve code clarity and encapsulation by using instance methods instead of static helper methods
fix : fix an issue with the final field access in anonymous inner class ( # 1292 )
updated BitmapDrawable instantiation to use Robolectric ' s newInstance method to improve compatibility with Robolectric ' s features and enhance performance
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and added a character variable ` c ` to improve method naming consistency and clarify its purpose
updated PageMarkerResources to use a different drawable resource for the current page indicator to improve visual clarity by distinguishing the current page indicator
8274394 : incorrect reinvocations counter in basicinvocation # tostring ( )
modify the formula for calculating topPadding in DefaultLookAndFeel . java to ensure accurate vertical alignment by using getInnerHeight instead of getHeight
bug fix : miss break in recognize . getrecognize ( )
added preference handling for home screen locking in multiple classes to improve user experience by ensuring home screen visibility during drag interactions
added handling for string formula types in ExcelBatchReader and a corresponding test case in TestExcelFormat to ensure correct retrieval of formula data and improve test coverage for formula functionality
fixed bug 1418480 - immutablefield no longer throw an npe on anonymous inner class .
added a new private ` userAgent ` field and modified the initialization of ` this . userAgent ` in ` HttpGetter . java ` to allow dynamic user agent retrieval based on configuration
camel - 8868 : upgrade jaxb to version 2.0 . x to version 2.0 . x
changed log level from info to debug for file not found message to reduce verbosity of logs by using a lower log level for less critical information
rename queuetest to queuedpipetest , since it be a bit unstable .
updated version check logic in BukkitMain . java to enhance compatibility with OfflinePlayer by getting the getUniqueID method
camel - main - only scan for routes if they be false . thanks to joao for the patch .
added vertexColor property and modified color handling logic in PShape3D . java to improve flexibility in color management based on user input
modified ` printForeignKeys ` and ` isFkColumnFiltered ` methods to use a ` R ` instead of a ` BaseForeignKey ` to enhance filtering capabilities for foreign key and foreign key associations
replaced the use of Shadow . extract ( ) and Shadow . getValues ( ) with a direct call to matrix . getValues ( m ) to simplify the code by eliminating unnecessary extraction from the matrix
removed the package of MetaRules from multiple files to streamline the package structure for better readability and maintainability
simplified the class definition handling in GroovyEngine . java to improve clarity and efficiency by directly returning " ; null " for null values
feat ( plugin ) : add hawtio - config . xml to support branding plugins
removed redundant print statement for command output to clean up the code and improve readability
replaced calls to updateMotors ( ) and updateActiveInstances ( ) with fireChangeEvent ( ) to improve responsiveness to changes in the flight configuration
added unit test to validate behavior when expected exceptions have cause to ensure correct handling of null values and exceptions in assertion scenarios
o tweaked code to remove old , redundant variable inomaticdependencies . java
fix # 4269 . dynamic client registration throw npe when scope be not set
simonstewart : add a couple more test for the firefoxoptions to make sure we can add a profile to the firefox driver .
camel - 10635 : added description support for route in xml dsl . thanks to stephan siano for the patch .
refactor JavacTreeMaker class for improved readability to enhance maintainability and reduce complexity in the code
added a weight property to the edge object in ImporterCSV . java to enable dynamic adjustment of edge weight values
add a start date to get the hours per hour for the tariffs cost ( # 4188 )
updated SQL query to include an additional column value and modified the way database metadata is retrieved to enhance data retrieval accuracy and ensure consistency in column metadata handling
make sure binarized document be not empty before return .
updated User class to include detailed string representations of the current user to enhance debugging capabilities by providing clearer information about the current user ' s status
camel - 5563 fixed the c error of camel - core with thanks to dharsh
[ hotfix ] [ runtime ] fix runtimeexception in taskdeploymentdescriptortest
make roster access check for the owner instead of the share group . jm - 1074
added a path reference for " maven . test . classpath " in AbstractJRubyMojo and removed an unchecked suppression annotation in CucumberMojo to ensure proper handling of Maven test classpath and clean up unnecessary code
removed unnecessary checks and improved type validation in MethodHandleImpl . java and MethodHandlesTest . java to simplify the code and enhance testing coverage for user method signatures
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilterFactory to enhance functionality and improve code organization
increase width and height comparison conditions in URLImage class to ensure width and height are consistently compared to image dimensions
updated condition to check if the name does not start with " META - INF / " before processing to ensure that only valid package names are appended to the list
added ` scheduleBackgroundTask ` functionality to the ` createImageToFileSystem ` method to ensure images are rendered in the correct background if the user is in ed mode
updated assertions in StackWalkerTest to use a calculated expected value based on VersionCheck to ensure tests correctly reflect the expected number of values and improve clarity in logging output
changed the access modifier of the addViewportJob method from protected to public to allow external access to the method for better usability
no need to specify 3 partition explicitly . ( # 10149 )
removed server configuration settings and replaced server restart settings to streamline server shutdown process and improve application stability
added null and empty checks for blocks in NodePathsConvertOperator and SchemaQueryMergeOperator to improve robustness by handling null and empty cases appropriately
added total harvesting time retrieval in RawUdpTransportManager and updated relevant code to return the current harvesting time to enhance functionality for better tracking of harvesting performance metrics
updated font drawing dimensions in ParticleEditor . java for improved visual clarity to enhance the visual appearance of the UI for better user experience
add logic to update the " hadoop - env " configuration based on the presence of a key server port to ensure that the Hadoop environment variables reset to " keyserver _ port " when necessary
danielwagnerhall : set the background color to transparent , to avoid flickering
removed the minSdk configuration from ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the test setup by eliminating unnecessary configuration
updated the method ` containsExactly ` to accept an ` varargs ` instead of a single parameter to enhance flexibility in asserting array containment in collections
updated bucket width settings and added a key resolver in Bucket4jFilterFunctions . java to improve bucket configuration flexibility and handle null keys more gracefully
add some javadoc to support external list of stopwords ( wordlist and german )
added hook checks for lineage and query properties in the optimizer to ensure proper lineage processing based on query execution context
added handling for NoClassDefFoundError in REngine . java to ensure the application handles NoClassDefFoundError gracefully
replaced usage of ` Span ` with ` SpanAndScope ` in ` TraceWebFilter ` and added default span handling logic to improve span management and ensure proper scope handling during web filters
polish ` ` avoid npe in catch clause ' '
updated SolrServerException instantiation to include getBaseURL ( ) and Exception as the base URL to improve error handling by providing more context about the root URL
fix bug in hssfprintsetup -- set landscape = false always return true
modify return statement to handle null values safely to ensure safe access to NullWritable when object is null
added validation to check for bad argument names in ArgDesc . java to ensure that invalid arguments do not cause runtime errors
added background location update handling in AndroidLocationPlayServiceManager to improve user experience by ensuring location updates occur only after the activity context is available
bugfix : wrong gl10 . gl _ pointS check in meshbuilder
fix incorrect handling of byte [ ] in trufflestring .
added a method to set the command list in the ComboBox class to ensure command lists are properly handled and processed
nifi - 745 : escape filename in . pem file for tl ( # 3967 )
updated command usage in ZkCLI to refer to " localhost " instead of " localhost " to ensure clarity and completeness of command usage across environments
[ wemo ] fixed equal ( ) not work ( # 10790 )
added a conditional check for remote gRPC status before posting a severe event to ensure that events are only posted when the remote Grpc status is OK
refactor the formatting of the ` drawItem ` and ` fillDomainGridBand ` methods in the ` XYItemRenderer ` class to improve code readability and maintain consistent formatting
added entity id to entity tick in forgechunkmanager . fix # 67
added error handling for various error codes in GLSurfaceViewAPI18 . java to improve error reporting for better debugging
added method to retrieve supported locales and updated error handling in InfoRequestHandler to improve locale management and enhance error reporting for unsupported locales
update RFC2616BaseTest to use " Host : myhost : 1234 " instead of constructing the server URI to ensure proper handling of requests by using a specific host format
add a helper list to the construction object , so that it wo n ' t add to the map
updated the handling of negative length in GlyphLayout to ensure correct processing of the first element of the array to avoid off - by - one errors
added security permissions handling in mmm Transport . java and mmm TCPTransport . java to ensure safe context class loader manipulation during execution
added null checks for mParents and ensured the folder is not null before processing to improve robustness by handling potential null pointer exceptions and preventing null pointer exceptions
changed the service loader initialization to check for a non - null ITestNGClassLoader before loading the listener to avoid potential NullPointerExceptions when m _ serviceLoaderClassLoader is null
removed debug log statement from BarrowmanCalculator and modified the deltap calculation in TubeCalc to optimize performance by reducing unnecessary scaling
modified column assignment logic for nodes and edges in TimelineControllerImpl . java to ensure proper handling of edge data in the timeline model
[ issue # 1082 ] fix brokerstarter not register additional component ( # 1082 )
added a test case for bug4658 in MultiCfQueryExecIT . java to ensure proper handling of the ' AAA ' column type in the database queries
use a linkedlist instead of an arraylist to keep track of peer . resolve issue 67 .
fix # 1434 . incorrect build .
added configuration for maximum retry attempts in Ratis configurations to enhance flexibility in retry policies based on consensus settings
refactor multiple Java files for improved consistency to enhance maintainability and readability of the codebase
check if mbean can be managedservice , and if so do n ' t unregister it
tika - 608 -- upgrade jaxp 1.5 and add unit test for hanlde non - unicode entry name
8017550 : c2 : assert ( b - > div - > div ) fail : wrong result for divide - by - zero
added methods to lookup generic interface types and their subclasses in TemplateRegistry to enhance type resolution accuracy and improve performance when resolve generic types
update ByteArrayOutputStream constructor from 512 to 1028 to increase initialization time for better performance
fix checkstyle issue in io / arabic / liquibase / playersettingsscreen . java ( # 772 )
fix arrayindexoutofboundsexception when transfer in transfer mode fails
fix a warning about ' select avatar ' and ' select avatar ' menu item
modified SemanticAnalyzer to check for null source before throwing SemanticException to improve error handling by providing clearer context when the source node is null
[ fix ] fixed crash when render skeleton
solr - 2971 : fix distributedclusteringcomponenttest to pass solr home dir properly .
added ComponentScan annotation to SpringWebConfig . java to enable automatic bean scanning for improved functionality
removed the getAccount method from UserListItem to streamline account conversion process by eliminating unnecessary methods
added a test for installing a package and modified application name handling to ensure proper initialization of processName and applicationInfo properties
improve documentation ( javadoc ) of org . hibernate . cfg . availablesettings
added imports and constructors for TransactionCapsule in TransactionTrace . java to enhance functionality by integrating transaction management into the TransactionTrace class
added support for client shuffle member list . fix # 5003
replace ` Text ` with ` CrawlDatum ` in ` SegmentReader . java ` to update the data type to align with the new crawling framework
refactor JsonDeserializer class for improved JSON parsing to enhance performance and maintainability of JSON processing
updated CONFIG _ NAME in TsfileDBConfig . java and modified fetchSize handling in QueryProcessExecutor . java to improve configuration clarity and ensure fetchSize is within a thread - local scope
updated log message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the purpose of the trunc operation for better code understanding
removed the import of ExecutionContext from TaskletStep . java to eliminate unnecessary dependencies and streamline the code
initialize the title variable to an empty string to avoid potential null pointer exceptions when the title is not set
fix an issue with empty body body cause npe in asynchttpclientcall . fix # 1804
fix # 831 - mark svm instance a deprecate ( # 832 )
fix load bug in macadapter ( # 4554 )
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated references accordingly to clarify the purpose of the tests related to token service token fetching
added a return statement in the HandlerLibrary class for Enum type handling to ensure correct conversion of Enum objects to their respective types
change hideUnprivilegedObjects from private to final in PgConnection . java to ensure the field is immutable after initialization
fix test that fail because of oom error
added a check for Android Q and saving functionality in IOUtils . java to ensure compatibility with Android 10 and later versions
fix for http : / / issues . apache . org / activiti / browse / amq - 5882 - fix unit test
refactor multiple Java classes related to account and authentication to improve code maintainability and enhance security features
replaced manual logger retrieval with a more concise computeIfAbsent method to simplify code and improve readability by reducing boilerplate code
hbase - 17443 remove unused class dataoutputoutputoutputoutputstream in hbaseobjectwritablefor96migration ( # 4594 )
update the transaction ID and bucket ID configurations in TestAcidOnTez . java to ensure consistent behavior with the latest hive API changes
downgrade to debug level to reduce noise in log output
added default provider name retrieval for Conscrypt in multiple platform classes to standardize provider name for improved security and consistency across different operating systems
added Captor annotation processing in MockitoBeforeTestNGMethod to enhance Captor functionality in Mockito for testing purposes
8294602 : javac should print error when no test case be find
refactor GroovyAutoComplete and GroovyLanguage classes to improve completion logic and readability to enhance code clarity and ensure proper handling of identifier parts in completion suggestions
import : fix compilation error ( # 148 )
kristianrosenvold : fix selenium - remote test flakiness
changed mHideSysUiScrim from final to non - final and added preference handling for top shadow visibility to allows for dynamic visibility of the sys UI scrim based on user preferences
cancel rpc call before the callback be call , and fix OkHttpCall can not be cancel .
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection for better user experience based on swipe direction and conditions
added extend from org . springframework . security . web . util . matcher . RequestMatcher to enable integration with Spring Security ' s RequestMatcher framework
[ j2kt ] fix handling of implicit lambda in loop .
rewrite test for boxing constructor , add j2kt support
added test cases for serializing display metrics in DeviceConfigTest . java and modified the setDimensions method in DeviceConfig . java to ensure display metrics are correctly initialized for different screen dimensions
remove reflection use by addurl and remove it from pluginsclassloader because it be slow
updated the icon resource in RootCursor from a logo to a mipmap wrapper to enhance user interface consistency by using a dedicated icons
added error message content to the error builder to enhance user feedback during file upload errors
updated ConcurrentHashMap . java for improved thread safety to enhance performance and reliability of concurrent operations
added methods to adapt user trades and updated the AbucoinsTradeService to use this new method for handling ABucoins fill data
modified conditions for plot claiming and updating player confirmation logic to improve player claiming behavior and ensure consistent message handling
simonstewart : pick the version of the chrome to use in the htmlunit driver if available
added handling for VARBINARY data type in BlobType . java to ensure proper handling of VARBINARY data type in the database schema
apply patch 04 from jboynes to improve cookie handling .
added synchronization to the synchronized block for setting up the simple type mapping to ensure thread safety when accessing the language ' s cache
updated InboundBuffer to use ContextInternal and VertxThread for thread validation to ensure correct context handling and prevent illegal state exceptions
8033552 : add timeout test for ldap - related test
corrected a typo in the usage message for Unicode data in CharacterName . java to ensure clarity and accuracy in usage instructions
camel - 8293 fixed the test error of cxfmessageheadersrelaytest
initialized textRect and iconRect variables in SynthTabbedPaneUI to ensure proper instantiation of rectangles for layout management
fixed bug in save a boost , now work correctly .
enable proxy authentication for xmpp - server by default
updated metrics references and method names for clarity and consistency to improve code readability and maintainability by standardizing meter naming conventions
replace InternalError throw with a return false statement in Class . java to modify the method ' s behavior to return false instead of throwing an InternalError
jdk8 : fix some logging in testipcutil ( # 3857 )
removed chunked transfer encoding handling from NettyRoutingFilter to simplify the request processing by directly using the HTTP client
added a call to ` clearAttributes ( ) ` in ` PatternTokenizer . java ` to ensure any residual data is cleared before processing new requests
refactor VerificationAfterDelayImpl to include a polling period in the verification process to improve error handling during verification failures
added compaction configuration and related methods to manage session state to ensure correct handling of compaction in query processing
[ zeppelin - 2149 ] fixed bug when zeppelin . jar be miss
hbase - 23657 fix checkstyle error in hbaser . gettablerecords ( )
added an @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to known issues
removed redundant calculations for minimum and maximum X bounds in BarLineChartBase and CombinedChartRenderer classes to streamline code and improve performance by eliminating redundant calculations
fix memory leak in xml parsing
fix ( http ) : release buffer in case of data loss
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to include it to ensure that the Java parsing behavior correctly handles varying type conversions
added null and closed check before closing the result set in JdbcExecutor to avoid potential NullPointerExceptions and ensure proper resource management when the ResultSet is not closed
updated driver version numbers in DerbyDatabase . java from - 1 to 10 or 6 to support new features and improvements in the database handling
fixed bug 1244417 - ` ` usestringbufferlength ' ' do n ' t work in stringbuffer
removed logging of errors in RemoteSparkJobMonitor to improve error reporting for better debugging
updated the database creation method to return a Connection object to ensure proper resource management by closing the connection after database creation
refactor custom metric and test classes for better organization to improve code clarity and maintainability
hbase - 18213 introduce a configuration property to control the maximum compaction size ( # 5054 )
added error handling for BitstampDepositAddress and created a new DepositAddressJSONTest class to improve robustness of deposit address unmarshalling and ensure proper functionality through unit tests
replace throw with an abort method in BufferingResponseListener to improve error handling by notifying when capacity is exceeded
fix regression : use absolute path to prevent symlink loop in delete ( # 1877 )
updated InvocationFinishedEvent to implement MetricsEvent and replaced operationType with InvocationType to enhance event handling capabilities by integrating metrics
simonstewart : we need to deal with multicast support , so we need to unwrap that
updated the condition in ChangeSet . java to iterate through validCheckSums before returning true to ensure comprehensive checking of valid checksum values
added a cloning method to the BufferedChecksumIndexInput class to enforce immutability of the input stream
replaced mathematical calculations with direct radius multiplication to simplify the circle rendering logic for improved accuracy
do n ' t dump frequency channel identifier since they be n ' t use
replaced ` inTapSquare ` with ` tapRectangle ` for clarity to improve readability and maintainability of tap detection logic
do n ' t replicate file when write need to . patch by gdusbabek , review by jbellis
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated class and utilized it in Util . java to provide precise date formatting based on last fill time for improved functionality
added a getDelegate ( ) method to TraceCallable and TraceRunnable classes to provide access to the delegate value for improved functionality in tracing
replace error handling logic in FileActivity with direct message retrieval from fragment to improve user experience by accurately distinguishing between fragments and other files
added methods to handle stream writable errors in ForeignIncubatorQuicheConnection . java and JnaQuicheConnection . java to improve functionality for writing to a stream and ensure proper error handling during quic operations
added a boolean parameter to a method call in JavascriptContext . java to enable the execution of JavaScript code within the context
removed unnecessary padding from TableCell constructors in BaseTextFormattingHelper and TableCell to simplify the code and improve formatting consistency
add a new file TracingAutoConfiguration . java to configure tracing in the UAA application to enable tracing capabilities for improved performance and traceability in the application
modified the way a para is added to the start in the Submissions class to enhance functionality by integrating para processing for better state management
fix the deadlock in query executor ( # 8702 )
modified VertxBufferTest . java file to improve buffer testing functionality
mondrian : fix stringindexoutofboundsexception in mapi - smf .
changed the access modifier of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports from ShowTablesOperation and ShowViewsOperation to clean up code and improve readability
added a new class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` and ` MongoTemplateTests ` to include ` writeResult ` and ` operation operation ` to improve error handling by providing more context on duplicate keys in MongoDB operations
[ coordination ] fix jobcompletionfuture return null ( # 13521 )
updated DisplayUtils to replace bitLength with byte and added a new HashMap for better data type handling to improve clarity and maintainability of displayed file types
updated merge policy implementation in TestUpgradeIndexMergePolicy . java and added a new test method in TestMergeOnFlushMergePolicy . java to improve merge policy handling and enhance testing for no pathological merges
added a check to return early if mOverviewState is not enabled to improve performance by avoiding unnecessary processing when overview state is not active
update error log message to point to different step step
modified the loadSettingModels method to accept an InputStream parameter and updated contextInitialized method signatures accordingly to enhance flexibility by allowing loading of properties directly from the input stream
added null checks for ' in ' in FilterLeafReader . java to ensure ' in ' is not null to prevent potential NullPointerExceptions
add key size requirement to jceCRMFEncryptorbuilder to enforce minimum value of the key .
updated exception handling in NetSocketReader and SoftEndOfStreamException to use getMessage ( ) instead of message to improve error reporting by providing more informative error messages
( chore ) camel - netty - http - client : remove @ inject for javax . inject
updated the expected size in the BundledDistributionTest and added database user assertions in PostgreSQLTest to ensure the test reflects the correct number of database users and verifying attributes
[ flink - 15663 ] [ e2e ] make the job name for stream execution configurable
modified calculation of scale based on device profile type and panel size to ensure correct scaling behavior for multi - panel layouts
use a fixed PopulatorTree instead of hardcoded grassy ( # 242 )
removed unnecessary timezone parameters from ` getMinTime ` and ` getMinTime ` methods to simplify method calls by eliminating unnecessary zone specification
[ j2kt ] fix ` ` thisreference ' ' qualifier be not qualify in compilationunitbuilder
fixed ripper to now download full size image when download from gallery
make sure we do n ' t iterate over all entity in a loop , even if the count be zero .
hhh - 16655 : oracledialect . getqualifiedname ( ) should include schema information if available
fix a typo in the console filter ( # 5809 )
added a variable ` numberOfAllFiles ` and updated the constructor of ` FileMenuFilter ` to accept it to improve file selection functionality based on the number of files displayed
[ java ] change term offset to use termlengthmask to make sure that term offset be correctly compute .
fix # 284 : modify comment in guildupdateowner event , should be ` ` guildupdatedmember ' '
update inportalTicks logic based on creative status to ensure correct tracking of portal tick for better user experience
added support for compressed chart node in cluster monitor ( # 386 )
modified multiple codec template classes to implement changes in their implementations to improve code organization and maintainability by standardizing codecs
change variable types from int to long for length calculations in Base64 . java to prevent potential integer overflow when handling large binary data sizes
removed null check for header in RendererConfiguration . java to simplify the condition for clarity and performance
server : allow scale volume with custom disk offering ( # 7042 )
updated import statements in HitbtcAdapters . java and HitbtcAdapters . java for clarity and consistency to improve code readability and ensure proper class references for order classes
fix typo in idlecount - > consecutiveidletime ( # 4406 )
added a newline after the " JRubyScripting " service annotation in JRubyScriptEngineFactory . java to correct the description URI for JRuby scripting service
replaced the direct name with a display name variable in the ConfigCategory class to improve code readability and maintainability by using a consistent display name
updated the condition for checking if ` preciseExchangeAmount ` is less than or equal to zero to ensure accurate handling of the exchange amount boundaries
modified the loop logic in FeedUtils . java to break if the index exceeds 10 to optimize performance by reducing unnecessary iterations
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to verify the functionality of the ` HDFParser ` parser when running on Java 1.5
[ calcite - 6092 ] add test case for fix calcite timezone
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 , issue # 250
closehelper : add a convenience method to quiet close all closeables
replaced specific confirmation button strings with a constant value in RemoveFileDialogFragment to simplify code and improve clarity by using a more descriptive constant for confirmation status
added checks to avoid setting an image if srcWidth or dstWidth or dstHeight are non - positive to ensure that drawing an image is only applied when valid dimensions are provided
replaced ReflectionHelpers with Java ' s built - in method definition for improved access control to enhance security and functionality by adopting a more robust approach for method invocation
fix socket socket regex ( # 5057 )
update conflict handling in CachedRowSetWriter to use a long instead of a boolean flag to improve clarity and efficiency in tracking conflict status
increase support for new api version 0.0 . 3 ( # 3654 )
refactor the reference memory handling case in ReferenceMemory . java to improve clarity and ensure correct assignment to prevent potential null pointer exceptions
replaced the seed file addition logic with a check for non - file inputs to improve reliability and avoid processing non - file inputs during the Injector process
added a condition to hide the original view when it is hidden to improve user experience by preventing unnecessary visibility of the original view
updated the calculation of maxNodes to ensure it does not exceed zero and adjusted maxTrips calculation to fix potential errors in node count calculations and correct indexing in optimization logic
added a conditional check for texture coordinates type support before creating texture data to ensure that unsupported texture coordinates are handled gracefully and provide clear warnings
added error handling for file deletion and corrected product ID retrieval in multiple classes to improve robustness by ensuring valid input and preventing potential exceptions
camel - trace - camel - core : add seek / close method to Tracingconsumer and Tracingproducer so that it can be call from a delegate
hhh - 7373 fix sql error when update a handle
replace manual list addition with a constructor for convertedValsList to improve code readability and efficiency
make abstracttimer constructor deprecate and mark it for removal in next major release
added nightly warning message for users when using the Nightly build to inform users of potential issues while maintaining compatibility with nightly
[ # 1103 ] instructor : list FeedbackSessionresultsbyemail should sort by team name or recipient ( # 11034 )
update return message to include ` declarations ` in UnnecessaryThrows . java to clarify the purpose of the exception for better debugging
deleted the CacheApplication class and updated references in CommonsApplication and ShareActivity to streamline cache management by consolidating caching functionality
updated references from ` realObject . getApplicationContext ( ) ` to ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java ` to ensure consistency in accessing the application context for service and activity starting processes
fix typo in documentation ( # 1620 )
updated the configuration update method in RuntimeEnvironment for compatibility with KitKat to ensure proper resource management for devices running KitKat and above
added VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS constant and corresponding resource property setting in VersionDefinitionResourceProvider . java to enable tracking of the existence of the stack repository update link for better resource management
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
fix ` ` null pointer exception occur when try to update a table ' '
added package access checks for necessary functions and readers in CheckPackageAccess . java to enhance accessibility checks for XML parsing functions and readers
rename the method ` save ` to ` add ` for better clarity to improve code readability and better represent the method ' s purpose
graphutil . drawloop do not replace the loop input for the loop exit node .
replace RecyclerView with WidgetsRecyclerView in SearchAndRecommendationsScrollController to improve layout responsiveness and alignment of RecyclerView elements
added a conditional check for terminal support in ConsoleReader . java to ensure compatibility with devices that support terminal functionality
changed data types from ` long ` to ` int ` and updated time allowed logic in ` LBHttpSolrClient ` to improve precision in time handling and prevent potential issues with negative time values
added a check for session validity before flushing on response commit in AbstractSessionCache to ensure that only valid sessions are flushed to avoid potential errors
added null check for columnNames before accessing its properties in ChangedIndexChangeGenerator . java to avoid potential NullPointerExceptions when the column name is null
replaced Vector with ArrayList for the buttons list and updated action listener methods to improve performance and enhance event handling for UI buttons
refactor UserManagerCompat to extend UserManagerCompatVN instead of UserManagerCompatVN and introduce UserManagerCompatVM for handling user creation time to improve compatibility with Android Marshmallow and enhance code structure
added methods to retrieve database major and minor versions in MockDatabase , AbstractDatabase , and HibernateDatabase , and modified ReorganizeTableStatement to handle JDBC exceptions to ensure compatibility with current database schema versioning and improve error handling
added mismatched rules and updated action graph comparison logic to improve error reporting and enhance clarity of action graph comparisons
added LockDatabaseDesc and UnlockDatabaseDesc classes for managing database states to provide clearer management and functionality for locking and unlocking in the Hive framework
updated RankingUIModel to directly use data fields instead of instance variables to improve code readability and maintainability by reducing redundancy
added handling for disconnect messages in HandshakeHandler and updated NodeImpl to reflect this change to improve disconnect message management and enhance clarity in log output
added tests for setting and deleting storage groups in IoTDBAuthorizationIT . java to ensure proper functionality and error handling when using different user contexts
fix : update docai namespace to match liquibase 4.0 ( # 118 )
refactor variable type validation logic for improved clarity and correctness to ensure proper handling of missing types and enhance error reporting for missing types
added methods to handle afterTestClass and beforeTestClass in StepScopeTestExecutionListener to enhance test context management for improved functionality
replaced specific imports and modified buffer capacity checks in CountersManager for better clarity to enhance code readability and ensure consistent buffer size validation
updated log statements to use placeholder syntax for better readability to improve code clarity and reduce verbosity in logging output
added a check to clone the joinKeys array in JoinDesc . java to ensure that joinKeys is properly transformed to avoid potential NullPointerExceptions during object creation
added a default principal resolver to the authentication handler registration in WebAuthnConfiguration to enhance the authentication process by ensuring proper handling of default principal resolution
modified the ` addSettingsFromFile ` method to accept ` ImmutableList < Path > searchPaths ` as a parameter to allow for dynamic path resolution in the XC configuration settings
made fields final in Oracle . java for better immutability to ensure that these variables remain constant after initialization
[ flink - 21790 ] [ doc ] remove unnecessary dependency on graphContaining loop
[ calcite - 1959 ] unsupportedoperationvisitor should throw an exception if use with order by or map _ value _ construction
change to - h : + print ( ) in graal . compiletheworld to make it easy to debug
added a check to ensure that the variable is an instance of LocalVariable before proceeding to prevent the operation from throwing an exception when the variable is not a local variable
updated condition in CreateTableGenerator to handle MySQLDatabase correctly to ensure proper SQL generation for timestamp columns in MySQL
update class loader in envconfiguration to avoid classloader leak
added a condition to set the ejection delay for motorConfig when stageNr is zero to improve motor configuration responsiveness during the simulation
replace FunctionalRunnerRunnerConfig with BeanDefinitionOrderRunnerConfig and update related tests to improve clarity and align with new bean definition ordering requirements
refactor TransactionUtil2 for improved transaction handling to enhance performance and maintainability of transaction management
updated methods to accept an Optional for better flexibility in handling issuer resolution to enhance the flexibility and usability of the service in handling claims
updated the handling of ` collection ` to return a null value if ` coll ` is null to improve robustness by avoiding null pointer exceptions when ` coll ` is null
fixed alignment issue with text area on android
added methods to set foreign database and schema names in ForeignKeyColumn and updated related classes to enhance foreign key management functionality and improve code handling
[ java ] change the handling of cluster member that fail to connect to the leader in an election .
replaced the static import of ShadowBluetoothGatt with a private method Shadow . extract for cleaner code to enhance maintainability by using a more direct method to extract package manager information
drill - 4192 : prevent selection from be select even if there be no root nor root
added oninventoryTick method to IForgeItem and IForgeItemStack classes to ensure compatibility with new inventory tick mechanism
modified file stream handling and added WAR resource existence checks in IOUtil . java to improve efficiency and functionality when writing zip files
added a null check before invalidating the options menu in SingleUploadFragment . java to avoid potential NullPointerException when getSherlockActivity ( ) is null
fix bug where we be n ' t always add the app widget id when there be an option .
[ ecobee ] add capability to eclipsensensoreventhandler for clarity ( # 10790 )
fix display name detail when the profile page be empty ( # 4277 )
added environment variable " AAPT " and " AAPT2 " to the Genrule class to ensure proper execution of command paths for the AAPT tool
only dump access table when truffleinstrumentbranch be enable .
added null check before disposing of the message to prevent potential NullPointerException when message is null
modified visibility of the ` db ` variable and added a getter annotation for the ` db ` field to enhance code readability and ensure immutability of the ` db ` variable
updated log warning messages and modified exception handling in CoreContainer . java to clarify the reason for disabling LogWatcher functionality
replaced printStackTrace ( ) calls with fail ( ) for cloning failures to improve error handling by providing a more descriptive failure message
updated dialing syntax and modified how data is appended in IOSImplementation . java , while introducing a new SmallByteArrayOutputStream . java class to improve phone number dialing format and enhance data handling efficiency
* fixed an issue where the shader attribute be not be handle properly in the order of ordinal in the scene
removed unnecessary variable ' t <e11>  ' from the DriverManager connection string to simplify the connection shutdown process for improved readability and maintainability
[ camel - example - spring ] fix npe in camel - route - info if there be no exchangetimestamps
8169680 : fix for 8163336 : fix test failure in testhtmltag / testuseoption . java
fix # 1795 - incorrect handling of empty completion filter .
updated time column name handling in HybridClusterIntegrationTestCommandLineRunner and adjusted time column name retrieval logic to improve clarity and accuracy in command line usage and enhance code readability
modified variable names and adjusted output format handling in tests to ensure consistent use of output formats for different output formats
updated condition to check if QSB is enabled in DeviceProfile . java to correct the logic to ensure proper margin adjustment when QSB is disabled
added equals and hashCode methods to AnimationList , SceneKey , and GltfModelKey classes to improve object comparison and hashing functionality for better performance
added date handling capabilities to AbstractGenerator , Generator , HttpConnection , and TestServer classes to improve response date management and ensure proper handling of date headers
replaced Adler32 with CRC32 in Store . java to update the code to use a more appropriate class for handling CRC32 data
xen : remove ` ` any # of seconds ' ' from xen . heartbeat . interval
added a new warning constant for zero area area and updated calculations in the FinSetCalc class to improve code clarity and accuracy in handling area calculations
[ beam - 9444 ] enable backporting elasticsearchio json serialization ( # 9446 )
hhh - 16553 add date _ trunc function to h2 and oracle
added error handling for memory pool not found errors in MetricUtils . java and updated corresponding tests in MetricUtilsTest . java to improve robustness by providing specific error messages related to memory pool configurations
added a flag for JavaScript usage in UserTests and modified return statements in UserContext to improve functionality and maintainability by allowing conditional behavior based on the use of JavaScript
validationtask : improve type annotation use by runtime type ( # 2238 )
[ te ] change backfill endpoint to replay ( # 3946 )
update dataword to be compatible with 1 in precompiledcontracts . getdata ( )
replaced the method for updating app positions in AllAppsContainerView . java to improve badge handling by applying badge state updates directly to child views
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 826 )
updated start method calls in ResourceHandlerTest . java for clarity to ensure correct behavior after ContextHandlerCollection and otherContext are started
fix for issue 5186 : workspace style change not work in all apps
[ gr - 21191 ] add assertion to verify that lookupmodule be not null .
updated the test method name from ` shadowInvocationWhenChildIsInstrmentButUnshadowed ` to ` shadowInvocationWhenChildIsInstrumentedButUnshadowed ` and added an Ignore annotation to improve test clarity and ensure it does not make sense until the call - through is turned on for unshadowed classes
updated import statements for ItBit exchange and related classes to direct usage of ItBitExchange to streamline dependencies and eliminate dependency on v1 for better compatibility
ww - 4843 fix classcastexception when save a session with profiling activation
make utils final and make it final to prevent instantiation .
bug 10332 : return null instead of throw exception when read useraccountvo from an inputstream
replaced class name retrieval with direct string comparison for Vector and Hashtable to improve type safety and avoid potential ClassCastExceptions
add tablewithtype to log when invalid retention time
add trim to the fragment list check if the first element is empty to ensure that only valid characters are removed from the fragment list
updated path handling in ModFileResourcePack to ensure correct file path resolution for resource pack processing
replaced node and edge selection logic with a conditional check for TransformerBuilder instances to improve clarity and functionality of transformer handling
removed unnecessary condition for showAsGrid ( ) and added checks for task view focus and visibility to improve task view handling and ensure proper visibility before proceeding
updated calculate method signatures to return BMIViewObject instead of String to improve type safety and access to process information
removed the use of ` Comparator . comparing ` from the ` thenComparing ` method in the ` QueryCommand ` class to simplify the code by directly using the ` Key ` entry
make blockhaybale not kill everyone . close # 161
updated environment variable handling to use a list instead of a list and improved condition checks for command line to enhance code clarity and efficiency in environment variable management
added support for custom plugin property handling in OptionsParser to enable flexible configuration of plugin properties during parsing
modified the condition to check if ` hashTable ` is not empty before proceeding to ensure that the code executes only when ` hashTable ` is not null or empty
fix java . sql . timestamp # of ( java . sql . timestamp ) and # of ( java . sql . timestamp ) on epoch
[ java ] do n ' t use archive . context when connect cluster service agent in cluster mode .
8012240 : regression test com / sun / jdi / lambdaform / compiler / lambdaform . java fails due to wrong compile result
added new test methods for image2 handling and introduced them in multiple online test classes to enhance testing coverage for image operations and improve coverage
refactor TogglableFlag class to improve default value handling and add a change listener to enhance feature flag functionality and ensure responsive updates when configurations change
fix logging in dockerclientfactory when docker environment variable or machine be not available ( # 4740 )
added a condition to skip processing if the current platform is Android to optimize performance by avoiding unnecessary processing for Android devices
replaced ` assertEquals ` with ` assertThat ` for clarity to enhance readability and maintainability of unit tests
added new functional interfaces for byte , float , float , and short to their corresponding primitive types to enhance functional programming capabilities for handling primitive types in the codebase
changed the return type of ` getSubsColor ` from ` int ` to ` String ` and added logging for video bitrate limits to improve compatibility with various formats and enhance logging for better debugging
added a conditional check before deregistering the invocation from the invocation registry to ensure that deregistering occurs only when the future is complete
replaced the frame byte buffer implementation in AbstractWebSocketConnection to streamline output handling during WebSocket closure
added a check for null extras and introduced a redirect flag in LoginActivity and SignupActivity to ensure that the WelcomeActivity is only started when the " redirected " flag is set to true
added a new class ShadowCheckedTextView to handle checked state in Robolectric to enhance testing capabilities for CheckedTextView in the Robolectric framework
add miss serialization to fix some findbugs warning
8239105 : add expiry exception for identrustdstx3 alias to verifycacerts . java test
removed redundant calls to setAttribute on context ' s TEMPDIR to streamline code by eliminating redundancy
fix a bug with occupant . patch contribute by tom denham .
updated QuicSession and QuicConnection classes to remove unnecessary volatile keyword parameters to improve code clarity and ensure proper context handling during session creation
updated merge policy settings from direct access to ` writer . getConfig ( ) ` to ensure proper encapsulation and prevent potential NullPointerExceptions
refactor ICU4JImpl and TextPosition classes to improve code readability and maintainability to enhance code clarity and ensure consistent variable usage
add default value type to database with ComputedDateValue and ComputedNumericValue to support handling of date and numeric values in database schemas
fix : correct link in javadoc ( # 2572 )
fix serviceprovidermetadataresolver bug when use non - existing classpath resource
changed the visibility of the ` printer ` variable from private to protected and refactored the ` createPrinter ( ) ` method to allow subclasses to access and modify the printer initialization logic
added rounding functionality to set average price in HuobiAdapters . java to ensure proper rounding of orders and maintain consistent average usage
updated projection handling in ProjectionOperation and TypeBasedAggregationOperationContext to use Field objects instead of String fields to ensure correct conversion of fields and improve type consistency for better data processing
fakeplayer : do n ' t send packet to players that do n ' t have the player yet .
added constant state management for FolderAdaptiveIcon and ShiftedBitmapDrawable to improve memory efficiency and drawable state handling
speed up async spdy client setup by make it non - blocking .
fix npe in protostuffobjectoutput when objectinput be null ( # 3904 )
pdfbox - 4071 : fix typo find by codespell on fossies . org
refactor BarrowmanCalculator class for improved readability to enhance maintainability and clarity of the code
ggb - 1958 hide axis should only be draw if there be n ' t a number or number to hide .
replaced setFilter and setWrap method calls with unsafeSetFilter and setWrap to improve safety by ensuring safe setting of filter and wrap settings
[ ds - 2952 ] fix xmlworkflowserviceimpl . returntoworkspace ( ) to ensure consistent return behavior
added support for custom URL trust handling in CustomUrlJob and created a new CustomUrlTrustEverything class to enhance security by enforcing HTTPS connections and trusting for all URLs
[ geos - 722 ] format should use ` ` 16000 ' ' a default clock rate when use g722
updated TextureAtlas . java file to improve texture rendering functionality
updated module name retrieval in ProjectGenerator and added a method for setting module name in AppleLibraryBuilder to ensure consistent module naming and facilitate module configuration for Swift build
[ java ] fix up so that the testslot lock and release could be protect .
no effective change - add support for id _ list subqueries in sqltreebuilder
replaced closeFrame with rbuf and added an assertion for response header in WebSocketServletRFCTest . java to improve code readability and ensure correct response header is present
[ wasm ] properly persist reference stack in reference .
[ driver ] add support for set ttl on log collection client
updated serialization types and improved value handling in the serialization logic to enhance clarity and functionality when dealing with serialization types
updated DeploymentExceptionTest to use Jetty server components instead of QueuedThreadPool to improve server management and ensure proper thread handling during tests
try to fix crash in nearbycontroller on linux .
updated object name trimming logic to handle null and empty values to ensure robustness by preventing potential NullPointerExceptions and empty object names
8202635 : jfr tool show potentially misleading message when it can not access a file
[ flink - 19112 ] [ table - planner - blink ] make default planner and executor class static
updated variable names and condition checks in KeyTool . java for clarity and consistency to improve code readability and ensure proper handling of subject names
deprecate and mark for removal in java 17 ( # 24.0 )
replace manual byte array conversion with built - in byte retrieval for improved efficiency to simplify code and enhance readability by using a more direct method to retrieve byte values
added a new interface PermissionEvaluator in the security expression package to provide permission checks for authentication in Spring Security
added a new option ` ERASE _ LINE _ ON _ FINISH ` in ` LineReader ` and modified ` LineReaderImpl ` to handle the prompt after processing to improve resource management by managing the prompt during line completion
fixed - master partition do n ' t refresh when server be already in online list
updated exception types in P2pException and TronNetDelegate to use BLOCK _ SIGN _ ERROR instead of CALC _ MERKLE _ ROOT _ FAILED to improve clarity and consistency in error handling related to signature and block merkle errors
fix bug # 174474 . correct npe in expandwar . create and delete .
do n ' t catch exception in fullnettyclienthttpclient on connection close
changed the container center from center to centerAbsolute in Picker . java to improve layout alignment by centering the spinner
[ flink - 2597 ] [ runtime ] fix potential buffer leak in networkbufferpool
make this test more robust by use a new local variable for the mbeanserver
replaced JUnit4 test runner with RetryTestRule in AbstractIT . java to improve test reliability by using a more robust retry mechanism
updated QueryStateMachine and Session classes to remove autoCommit parameter to streamline transaction management and improve code readability
add a ` package - info . java ` and remove unused import in ` csv ` class .
added additional checks for " javax . microedition . khronos . opengles . GL " in InstrumentationConfiguration to ensure compatibility with additional parsing formats in the application
[ hotfix ] [ test ] minor cleanup of compiler warning
modified the request handling logic to return null or path based on HTTP method to ensure correct request URI retrieval when the method is not CONNECT
use legacy storage point when upgrade without launcher
add session management methods for available and unavailable clients in the SessionManager to improve session management functionality for better session management
added a call to add the package to the Liquibase process package to ensure the Liquibase process is available for processing
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider . java ` and updated corresponding calls to streamline the deletion process and improve clarity of synced folder management
updated the ` loadWithNewGlobal ` method to accept a variable number of arguments to enhance functionality by allowing additional parameters to be passed when loading a new global context
fix problem with absolute path detection on window .
[ beam - 9370 ] fix regression in spark e2e test ( # 9371 )
corrected the spelling of " isexceedRandomizationDepth " to " hasAlreadyRandomizationDepth " in multiple files to enhance code readability and maintain consistency in terminology
added support for handling LEAD and LAG functions in UnsupportedOperatorsVisitor to ensure proper functionality and error handling for invalid function types
cleared the headers in AbstractProxyServlet to reset proxy request headers to ensure proper resource management and prevent potential memory leaks
8230175 : javac should not run test due to lack of sa attach
added a null check for bgColor in GraphicsDevice . java and created a new TranslucentWindow . java file for handling translucency support to improve robustness of background color validation and implement full - screen window functionality
updated UserInfoActivity to handle null userInfo cases and improved error message display to enhance user information validation and ensure proper user information is displayed
added a custom field behavior for PrecompiledHeaderData in order to prevent serialization issues on different machine to improve code reliability by providing clearer error handling for non - existent headers
[ flink - 10314 ] [ table - planner ] fix append mode behavior in kafkatablesinkfactorybase and kafkavalidator
added a new file MultipleOutputsIntegrationTest . java to implement integration tests for named output groups to ensure that the named output groups can be used in the project workspace
modified string concatenation and added content comparison logic in FileSettings . java to ensure consistent newline handling and maintain accurate setting data
nifi - 8703 fix npe in statelessflowerviceinitializationcontext . java when there be no versioned group
replaced Object [ ] with ArrayUtils . EMPTY _ OBJECT _ ARRAY in BinaryCipherExecutorTests . java to improve code readability and maintainability by using a consistent utility method
added a taskbar mode switch annotation in TaplTestsQuickstep . java to enable persistent mode functionality for testing purposes
added new device status entries for leaving dock and energy save mode to enhance device management capabilities in the application
improve error reporting when a item model can not be load .
added JUnit Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable the test to avoid failures during ongoing development
pixeldensity ( opengl ) : fix 2x scale issue
updated RussianLowerCaseFilter to improve localization support to ensure better localization and user experience
removed specific server and client properties from CsvBulkLoadToolIT and updated setUpTestDriver method to use EMPTY _ PROPS instead to simplify the code and ensure a consistent use of default properties
replaced occurrences of ` File . separatorChar ` with ` _ ` to ensure consistent path formatting across different operating systems
- add resettableinputstream support , allow reset of offset
added support for repeat line indentation in column text . http : / / github . com / codenameone / codenameone / issues / 2418
cast the ` oid ` to ` Object ` before comparison to ensure correct type handling and avoid potential ClassCastException
fix # 208 by always set mbeans and health when create a new connection pool
rename controlflowanchored to controlflowanchored for clarity .
fix issue with black background when add a toolbar button ( report by benoit predel ) .
updated condition to check for both PrimaryKey and ForeignKey types in DatabaseSnapshot . java to ensure compatibility with additional object types in the logic
feat ( accountapi ) : add getaccountledgersurl method to return a list of account ledgers
[ ds - 3762 ] check for dc . title in creation of / edit group , to prevent runtime exception
make gapinsertiondetector more resilient to no - positive word
added unit test base on user forum issue
updated thread count from background to database update in FeedRefreshUpdater and added getter / setter methods in ApplicationSettings to allow dynamic adjustment of database update threads based on user settings
updated fast scroll threshold from 40 to 10 in RecyclerViewFastScroller . java to improve user experience by reducing scroll delays
change the system class name to avoid reflection on xcode when run with - xcomp
hhh - 13644 fix npe in get _ random _ values for h2
camel - 14263 : camel - rest - swagger - avoid npe if api property be not present in classpath
added new classes BinaryFrameGenerator and TextFrameGenerator to handle binary and text frame data to improve the structure and functionality of WebSocket frame handling
eranmes : make pageloadingtest more reliable until a long time
updated the calculation of lat and lon in RandomGeo3dShapeGenerator to use a boolean for radius range to improve flexibility and performance by adjusting double generation based on defined conditions
added a keepAlive method to manage ClassLoader references to prevent premature garbage collection of the ClassLoader
changed the return value from false to true in SQLiteDatabase . java to indicate successful execution of the operation
add check for ` ` java / util / concurrent / ' ' signature only when ` ` java / util / concurrent / ' ' be present .
added MkdirStep for project filesystem commands in AndroidAar , AppleBundle , ApplePackage , and FatBinary classes to ensure necessary directories are available for generated output files
improved alignment error handling in MeshLeveler . java to ensure correct Y - coordinate alignment and improve error message clarity
[ drools - 5865 ] check for jpmml module availability before compile pmml ( # 505 )
fix shadowpowermanager bug where locationmode = = thermalstatus instead of locationmode .
use / tmp instead of java . io . tmpdir on macos
disable geometry reading on window due to memory leak in osx
added a check to ensure that the model organization is present before proceeding to prevent potential errors when the model is not in the pom . xml file
lucene - 5958 : lucene - 5958 : remove ' contrib / licensing ' info when contrib / licensing - v1 do n ' t have any ' licensing ' information
deleted the TerminateWebSessionListener . java file to remove unused listener to streamline the codebase
updated the method to use the system property for the Java class path to ensure compatibility with different environments by using the system ' s classpath
replaced empty byte array declarations with new byte array elements in KM200Device . java to improve memory efficiency by avoiding unnecessary array allocation
add test to not change javadoc ( # 3198 )
updated LAUNCHER3 _ PHYSICS feature flag from false to true to enable the LAUNCHER3 _ PHYSICS feature for improved functionality
added a new HTML container for thread information display to improve the layout and appearance of thread information in the report
update Lucene main version from 3.1 to 4.0 to reflect the latest version of the application for improved functionality and performance
8279047 : ( dc ) allow darwin to run on linux
tweak to prevent memory leak in some codecs . close # 169
fix log ` ` networkdispatcher exception ' ' that occur if you cancel a reset by peer .
[ java ] : fix npe in aeron client when no admin buffer be available .
added a break statement in TouchImageView . java to ensure control flow exits the switch case correctly
chore : [ dialogflow ] update go _ package to match open source code ( # 981 )
do n ' t call flushonsslhandshake until request .
fix isassignableto ( ) and isassignableto ( ) method to handle generic vararg .
replace NonBlockingHashSet with ConcurrentSkipListSet for memtables pending flush to optimize performance by using a more efficient concurrent skip list set
added null check for tree . errs before processing and modified return condition logic in MemberEnter , JavaCompiler , and added new classes and TestParseErrors to improve error handling robustness and facilitate testing of parsing errors
set the background color to none , otherwise it ` ` false ' ' will not appear
change ' finish ' to ' dialog . cancel ' in AboutActivity . java to ensure correct functioning of the dialog functionality
fix division by 0 bug in integer stamp
added a method to read from an InputStream and updated the image creation process to improve efficiency by reading content directly from the input stream
added methods for managing and undefining variables in CaseStmtToken and updated related classes to improve variable management and enhance code clarity
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by catching exceptions that may occur during the handshake process
added " psapi . lib " to the additional dependencies list in WinGammaPlatformVC10 . java to ensure proper loading of additional libraries in the WinGamma platform
updated StringUtils . java and StringUtilsTest . java to use a different newline character for SQL comments to improve code readability and ensure consistent newline formatting across different operating systems
fix encode problem and update the csrf token
replace ByteArrayInputStream with String for deserialization in CRDGeneratorTest . java to enhance readability and ease of debugging by providing a string output
bug 54777 - jmeter ui : samplersenderfactory should not use static context
add an emailableReporter only if testng environment variable is set
408904 enhance commandlinebuilder to not escape string inside single quote
removed public access modifier from multiple interfaces and classes to enforce package - private visibility as these interfaces are only intended for internal use
added a line to set the number of reduce tasks in FreeGenerator . java to allow configuration of reduce tasks based on the number of fetchers
fix : npe in schemageneratorhelper . parseobjectvalues when the value be unknown .
bug 532077 - jms publisher / point to point : add ability to set typed value in jms header property
added additional extensions for " OES _ texture _ float " and " GL _ ARB _ texture _ float " in FloatTextureData . java to throw appropriate exceptions for unsupported extensions on desktops
change fileserver . write ( ) to write a file and close it so that we do n ' t write anything at all
updated output directory assignment logic to check for null and ` jarStream ` to ensure output directory is set only when ` jarStream ` is not set
replaced direct call to getFuture with performance measurement using PerfStatsCollector to improve performance tracking for SQLite operations
updated usage of JDK tools from the current JDK to the test JDK in JMapHProfLargeHeapTest . java and JDKToolLauncher . java to ensure testing is consistent with the specific JDK environment
add a new enum resourceerrorhandling to catch ogc _ exception _ report and skip _ misc _ LAYERS .
added a check to ensure ` bufferPosition ` does not exceed the number of buffers in ` RAMInputStream ` and introduced a test for ` EOFException ` in ` TestRAMDirectory ` to improve buffer position handling and ensure proper exception handling for eof scenarios
improve error message for miss resource on sc _ not _ found
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag for thread creation and added AccessControlContext class for permission testing to enhance thread behavior control and facilitate security permission testing in the ForkJoin framework
updated CHECK _ EVERY _ N value and added logging for HardRefCache ' s freemem cache behavior to improve memory management and provide better logging for cache behavior
hbase - 10315 testsplittransaction # testsplittransaction fails due to improper hregionbuilder . close
added null check for currentSelectionArea before accessing its enabled state to prevent potential NullPointerException during selection enabling
remove unused ee10 - demo - demo module and add distro test ( # 9886 )
modified the folder creation logic to include span checks for proper spacing to ensure proper layout behavior when there are multiple spans for a folder
refactor CacheOffHeap class implementation to improve performance and memory management
improve error message when try to reference a later table reference later
added a check to prevent extra XML gid values in TiledLoader and modified data string validation to ensure data integrity and improve error handling when encountering corrupted Gradle maps
tilecache : synchronize setworkingset to avoid concurrent modification
added a new Java class to calculate and print the number of steps to implement functionality for processing manual steps efficiently
add a new ` ` addresschecker ' ' interface to detect incorrect ip address in trackerrequestprocessor
fix multilayermodel rendertype getTranslucent ( # 6662 )
[ geos - 7790 ] gui : clear default tag when there be no description
[ netatmo ] fix version handle for thing type without version
added null check for recieptents before sending messages and adjusted time conversion methods to improve robustness and prevent potential NullPointerExceptions during message sending
refactor issingle logic into a separate method for clarity to improve code readability and maintainability
updated DockerClientFactory to conditionally return a client and improved logging in RemoteDockerImage to enhance client behavior control and provide better diagnostics for debugging purposes
added a resource mode parameter to AndroidMetadata and updated related calls to enable flexibility in metadata storage based on the specified resource mode
ds - 4259 : remove dependency on commons - lang for dateutils . truncate which be n ' t need .
replaced ` importProject ` with ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure the correct project core imports are utilized
added error handling for CommandFailedException in LiquibaseCommandLine to improve debugging by displaying the best message when a command fails
updated TreeMap class in mmm and ppp files to improve sorting functionality for better performance
added methods to enable async stack traces in the Display class and integrated them into the DebugRunnable class to improve asynchronous stack trace handling and provide better debugging capabilities
added a method to set the glow color for BubbleTextView and updated Folder to use this color to enhance visual consistency by using designated color values for different UI elements
update linked file editor to make text consistent for the file row
removed the return value from AbstractJdbc2ResultSetMetaData and added a test for class matching in ResultSetMetaDataTest to ensure correct retrieval of class names and enhance test coverage for database schema changes
removed exception handling for file deletion in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to simplify the code by eliminating unnecessary exception handling
added null check for _ info in HttpConnection . java to avoid potential NullPointerException during the status check
added a constructor to ShadowLocation that accepts a provider string to enable initialization of ShadowLocation from an external provider
fix [ 32 bit ] : do n ' t increase ram for small rail device .
add miss localmapstats . empty _ local _ map _ stats ( ) ( # 28079 )
fileprofileactivator : added log support
use ` ` invalid _ ' ' rather than ` ` noname1234 ' ' when write out pdfs .
fix compilation error due to java . util . stream ( ) . toset ( )
updated the array size check from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to optimize memory usage by using a constant for maximum uploads
added assertions to verify the delete operation in the DashboardUserMapperTest class to ensure the delete functionality behaves as expected and maintains expected result
[ 4110 ] instructorfeedbackresultspageuitest : fix typo in method name
[ gr - 27954 ] fix outofmemoryerror when use llvm native node .
added a method ` getBufferSize ( ) ` to ` BufferedIndexOutput ` class to provide access to the buffer size for better data handling
add usagehelpautwidth and a footer to the help menu
added new interactions functionality and updated action bar titles in DrawerActivity to improve user experience by displaying new interactions directly
rename CommandLineParserTest . java file to maintain consistency in file naming conventions
added interpolators for the ALL _ APPS _ CONTENT _ FADE animation based on state transitions to improve animation responsiveness for user interactions with portrait state
replace method call with a more explicit method call for converting external names to uppercase to improve code clarity and maintainability by using a more descriptive method name
8028542 : remove unused native method from cwrapper
added constant value checks in mmm Checker . java and created a new ValueTest . java class for testing to ensure correct handling of constant values and validate functionality through unit testing
8151522 : [ backout ] make intrinsics flag diagnostic
removed null check for constructors in PojoUtils . java to simplify the condition since constructors is not needed
refactor JiraConfiguration class to improve code clarity to enhance maintainability and readability of the configuration logic
updated string concatenation syntax for error and coverage status messages in UploadBuild . java to enhance clarity and consistency in error handling
modify bounds settings in DeviceProfile . java to adjust layout parameters to improve layout positioning and accommodate search bar offset
[ hotfix ] properly disconnect from pulseaudio source when next idle timeout be zero
refactor overview command execution to run on the UI thread to ensure proper execution within the UI context for thread safety
removed an unused method ` getSourceGroupOptional ( ) ` and its usage in the ` AppleSource ` class to streamline the code by eliminating unnecessary checks and improving clarity
increased timeout values in TestSimTriggerIntegration . java from 220000 milliseconds to 320000 milliseconds to improve stability by allowing more time for trigger firing to successfully
fix typo in floatstreamreader ' s constructor .
fix possible npe in abstractnodecostsearch . findnodecostfornode ( ) . add a square comparison because the distancefromstartSq be squared .
fix issue with dialog and form not be load properly due to lack of focus in some case . http : / / github . com / codenameone / codenameone / issues / 3485
fix crash when launch some apps which require icon to be load on
added a check to assign a default commit point if it is null to ensure that the application uses the latest commit policy for accurate replication
added tests for IMEI setting and retrieval functionality in ShadowTelephonyManagerTest . java and implemented slot index handling in ShadowTelephonyManager . java to ensure correct functionality of IMEI and improve telephony feature coverage
refactor debug request and response handling in SimpleHostRoutingFilter to improve code readability and maintainability by reducing duplicated logic
added destory method to various classes and implemented resource management to ensure proper resource cleanup and prevent memory leaks during index operations
[ issue # 5996 ] optimize normal test ( # 5998 )
use standardcharsets . utf _ 8 instead of resolve charsets dynamically
hbase - 21900 improper handling of ioexception in bulkload ( liu shaohui )
added a commission parameter to DefaultWithdrawFundsParams and updated RippleWithdrawFundsParams to incorporate it to ensure accurate representation of cryptocurrency withdrawal fees
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and reduce unnecessary dependencies
solr - 7357 : do not throw morphline runtime exception in loadsolrbuilder and solrlocator ( # 7358 )
added error handling for illegal arguments on abstract methods in Java to TypeScript translation to ensure proper method invocation and prevent runtime errors
replaced ` sweepDisk ( ) ` with ` sweepDisk ( ) ` in the ` TestFileSessions ` class to improve logging capabilities for disk sweep operations
added Serializable interface and changed several static maps in Entities . java to improve data handling and ensure compatibility with serialization
modified test classes SubExactLConstantTest and SubExactLNonConstantTest to improve test coverage for exact and non - constant scenarios
added a null check for claimRequestString before parsing to avoid potential NullPointerExceptions when parsing the claim request string
updated ` HiveFilterSetOpTransposeRule ` to use ` RelBuilderFactory ` instead of ` FilterFactory ` to improve flexibility in configuring the Hive filter set operation execution
updated the ` processTypeHintForNestedDocuments ` method to handle null source correctly to ensure accurate mapping behavior for null values and date types in the mapping process
updated core status handling in CollectionsAPIDistributedZkTest . java to use CoreStatus instead of CoreAdminResponse to improve clarity and simplify the core status retrieval process
initialize transformers and locators lists to an ArrayList to ensure that the lists are properly instantiated to avoid null pointer exceptions
hhh - 14801 fix typo in log message
remove callstack from pegraphdecoder and add more debug information .
( chore ) camel - rest : rename setter / listof to copiedset
camel - 3949 : dump mailmessage use objecthelper . getidentityhashcode to simplify code
fix for http : / / issues . apache . org / activemq / browse / amq - 2560 - regression in activemqconnectionfactory and pretchsubscription , need to check for null before set the redelivery policy and destination .
updated identifier retrieval to include a check for property name status to ensure accurate identification of property names in the parser
fix : add support for image to download image ( # 518 )
added null checks for sheet and updated logging in KeyedProperties . java and SheetOverlaysManager . java to improve robustness by handling potential null values gracefully and provide clearer logging
test : add test for log and exec . fix # 456
added a test method ` testNoWriter ` to ` TestReplicationHandler ` to verify the behavior of no index and creating a new one in the Solr server
added miss dispatch method to the test suite .
ensure nat record be sort by priority to make order consistent .
refactored thread creation in XToolkit to use a privileged action for improved security and encapsulation to enhance thread management and maintain a hierarchical thread group structure
added validation call in SelectBox and set selected Linux6 in UITest to ensure proper user interface functionality on macOS
replace throw new IllegalStateException with Collector . printStackTrace for error handling to improve error reporting by providing more informative stack trace information
updated the ` createState ` method to accept an additional ` parentSplit ` parameter and adjusted related logic to enhance flexibility in state creation and improve clarity in flow executions
change connectionState variable to be volatile and update its usage in the return statement to ensure thread safety for connection state access
relaxed the default polling period from 10 to 1000 milliseconds and updated the polling configuration in the integration tests to allow for longer polling periods and improve testing reliability
replaced ByteBuffer encoding with direct length calculation in MemoryStack and MemoryUtil for better memory management to optimize performance by reducing unnecessary object creation
6978886 : javadoc show stacktrace after print error result from disk full
fixed bug 156928 - unusedmodifier no longer report false positive on enums
refactor code to use method references instead of lambda expressions for cleaner syntax to enhance code readability and maintainability
enable ssl by default for s2s http test
( chore ) camel - transformation : handle illegalformatexception for format value
replace userPermission with activeConnectionPermissions in ActiveConnectionRESTService . java to ensure correct access to active connection permissions
replaced direct equality check with a custom EqualsBuilder to improve readability and maintainability of the equality logic
fix potential npe in fileprocessor . process ( )
pdfbox - 2905 : filter out annotation when add a page , a suggest by ralf hauser
updated StackTraceCleaner class to improve stack trace handling to enhance the efficiency of stack trace retrieval in the application
updated content disposition header handling for plugins to ensure proper content type is set based on request parameters
hhh - 14077 : skip testliteralliteralinselectexpression for oracle , db2 and sqlserver
updated the parameter name from ' slot ' to ' slotSize ' in the upgrade method and adjusted the stats array initialization to improve clarity of method ' s purpose and ensure proper handling of null or empty stats
added getStats ( ) method to Context and ContextImpl classes and updated document count handling in DocBuilder to use AtomicLong instead of AtomicInteger to provide better stats collection insights and improve performance tracking
[ scb - 2371 ] fix servicecomb startup timeout bug ( # 4844 )
replaced gesture margins with scroll methods for improved gesture handling to enhance user experience with better gesture responsiveness and formatting
modified the initialization of the UnlocksDialog and added a button to display it in the PausedDialog to enhance user experience by providing a functional interface for unlocking actions
clear the crop when the player be no longer in use
ww - 3906 add inputName constant to streamresult
updated the exception type in the test method from MalformedURLException to IOException to ensure proper handling of input / output exceptions during normalization
modified ` printlnBoth ` method to include chunk type and adjusted chunk index handling to improve formatting of output and ensure correct chunk processing during processing
added a set of headers to exclude Swift files in UmbrellaHeader . java to ensure that only relevant headers are excluded from the umbrella header
fix method name in grizzlyasynchttpprovider to not be confuse
added an ` encode ( ) ` method to the ` RequestPlugin ` class to enable proper encoding of input data in the plugin
mondrian : db2 do n ' t always generate ' float ' , fix http : / / github . com / mondrian / mondrian / issues / 2164 .
hive - 23702 : ldap authentication provider should throw an exception if user pass in a blank password ( navis via ashutosh chauhan )
pdfbox - 4892 : simplify / simplify code , a suggest by valerybokov
added a condition to clear the complexWriters when a condition is not met to improve data handling and prevent potential memory leaks
added @ SuppressWarnings ( " serial " ) annotations to multiple cache classes to suppress warnings related to serialization in the caching mechanism
make sure we do n ' t throw npe when the lass class loader be n ' t find
added support for parsing errors in the ErrorResponseException class to handle cases where location is empty to improve error reporting and provide clearer output for schema errors
add constructor to eventsourcingrepository that take an eventstore and snapshot .
refactor symbol handling logic for binary nodes in mmm Attr . java to improve clarity and maintainability of symbol definition and scope handling
updated text handling in SearchedPeopleCursorAdapter to trim trailing spaces to ensure consistent search results by removing leading or trailing spaces
fix : handle command that end in / out in standby mode correctly ( # 10636 )
# 549 tiff : use tiffBaseline for planar configuration default to chunky
fixed itemlisttag . clear ( ) not close inputstream .
added an averageutil class to extend the gameplay mechanics .
[ java ] implemented sigint and sigintbarrier for system . exit ( ) .
modified edge handling in ExporterGEXF to support hierarchical graphs to enhance compatibility with hierarchical graph representations
fix tlseparatedprotocol to deal with memory w / o null buffer . patch by jbellis
[ # 7748 ] show invalid rubric question even if there be no index ( # 7822 )
updated condition in CatalogComparator to use catalogAndSchemaCase for case comparison to improve accuracy in identifying database catalog cases
simonstewart : back out a marionette issue where it ' s break the build .
[ bugfix ] fix use integer . tostring ( ) for format string in error message
removed the call to mTextWatcher . reset ( ) in InPlaceEditView . java to ensure proper reset of the text watcher state
[ gr - 24486 ] clarify memory footprint of string . equals ( bytebuffer ) .
[ flink - 1201 ] [ gelly ] properly implement tuple2 < k , t > in a graph
updated assertions in Java 6 classes to improve consistency and functionality to enhance the reliability of assertions related to Java 6 and JUnit
8025076 : fix for jdk - 8017247 break jprt submission for non - unicode locale
[ java ] replace countdownlatch with a cyclicbarrier to ensure it be more robust .
updated workspace reader handling and modified project collection condition checks in DefaultMaven and DefaultGraphBuilder to improve functionality and ensure proper project collection based on request conditions
updated SSL URI comparison logic in ServiceRegistryConfig and added dynamic configuration tests in TestServiceRegistryConfig to ensure correct SSL scheme handling and validate service registry IP port configurations
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
removed unnecessary whitespace in the Jdbc3Connection constructor definition to improve code readability and maintain consistency
added an ` ensureInstance ( ) ` method to ` ServletHolder ` for managing servlet instances to improve thread safety and ensure proper initialization of the servlet instance
add log to help identify corner - cases where the server time do n ' t expire
[ tomcat8 ] add support for tomcat 8.5 base on tomcat 8.5
modify the deregistration method to handle null form cases to ensure proper retrieval of the current form to prevent potential null pointer exceptions
added options parameter to decodeResource methods in ShadowBitmapFactory and ShadowCanvas classes to enhance bitmap handling capabilities and improve code clarity
[ java ] add number of message to example and workaround for memory limit .
added next click handling and improved text linking functionality in TimelineArrayAdapter to enhance user interaction and ensure consistent text formatting
added " text " to the unmodifiable data types and refined condition checks for database types in multiple files to ensure compatibility with new data types and improve handling of specific database types
stop run entryprocessorbouncingnodes every time ( # 3683 )
modified state handling logic to use ` isRemovableState ( ) ` instead of ` isHardDeletableState ( ) ` to ensure correct state checks are performed only for compatible components
updated CreateBridgeServlet to check for null before adding results to ensure robust handling of null values in the bridge configuration
- fix for nutch - 25 . a redundant check for cache robots . txt . ( # 780 )
updated display name retrieval in network interface checks to handle potential null values to ensure safe execution and prevent possible NullPointerExceptions in Windows - specific conditions
added a default shader parameter to the SpriteBatch constructor and modified shaders creation logic to ensure consistent shader handling when no default shader is available
add multiple property settings for synchronous commit in TestUtil . java to enhance performance by controlling asynchronous commit behavior
added type coercion for collections and replaced immutableSortedSet with a sorted set in SortedSetTypeCoercer to improve data integrity by preventing duplicate elements during coercion
updated confirmation button logic and conditions in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity of confirmation messages based on file type and favorite status
added a condition to check if the character is within a range of 256 characters to ensure proper handling of character limits in URL path encoding
fix error when listen to a non - default port in usercontext .
ambari - 15847 . add bulk host delete api , fix unit test ( ajit )
[ hotfix ] remove unused parameter in yarnentrypointutils # loadconfiguration
change sipecomframe to use method level for initialization / repaint .
deleted the ShadowHtml class and modified test assertions in HtmlTest . java to eliminate unused shadowing and ensure accurate test assertions for improved readability
added a new class ` StarTreeRecordStoreFactoryBlackHoleImpl ` to provide a custom implementation of ` StarTreeRecordStoreFactory ` to enhance record store flexibility by supporting multiple dimension and metric names
updated logger variable names to differentiate between HTTP3 and QuIC protocols to improve clarity and specificity of logging for better debugging
changed the visibility of the ` addListeners ` method from private to public in ` MockSettingsImpl . java ` and added a new test in ` MockSettingsImplTest . java ` to allow access to ` addListeners ` and ensure proper validation of the listener list
[ flink - 33904 ] [ runtime ] add checkpoint statistic to kafkasessionstore javadocs
updated import statements for security Constraint in multiple test classes to ensure compatibility with the latest Jetty Security library version
[ # 8273 ] ensure student section can be change to a constant
use try - with - resources to ensure all resource be close
( chore ) camel - 145 : do not use a port number in the test .
refactor jar parameter retrieval to use libraryTarget instead of buildTarget to improve clarity and maintainability of jar parameter handling
do n ' t use an anchor in the message ( they change too often )
bug 9452 : remove the overridden getpagesizeval function in listcapacity and use it from baselistcmd which have the change for default pagination to unlimited .
[ java ] handle closed case in IteratingCallback . java to ensure proper termination of the iteration when the iteration be fail .
updated AccessControlContext to introduce isAuthorized variable and modified method parameters to enhance security checks based on authorization status
added conditional logic to check if the application is an instance of AbstractOSGiApp before sending a DEPLOYED _ EVENT event to ensure proper processing of the application and improve event handling consistency
added a condition to set the MIME type for tiff codec and container to ensure correct MIME type handling for tiff media resources
fix potential concurrency issue in optimizedcalltarget . call ( )
added a new class ` CubocDesktop ` and modified ` Map ` and ` MapRenderer ` to use it for rendering to improve application structure , enhance rendering performance , and optimize rendering parameters
update test to use target dir instead of testresourcedir for policymonitortest
added a method to remove all files from the trashbinListAdapter to ensure that the trashbinListAdapter does not retain stale data
replaced the import statement for ` com . eclipse . jdi ` with ` com . sun . jdi ` to ensure compatibility with the current package structure
[ gr - 45904 ] add specialization of llvmglobal variable storage to node .
updated createLauncherEvent method to accept an Intent parameter and improved event handling to enhance event data accuracy by associating intent with user events
make burningmanpresentationservice tolerate large burn amount ( # 546 )
updated UniqueConstraintSnapshotGeneratorSnowflake to utilize H2Database and enhanced the snapshotObject method to improve compatibility with H2 database schema handling and enhance the clarity of unique constraint management
refactor dml transformation to handle empty insert statements more gracefully to improve clarity and prevent potential errors when statements are empty
updated the PGT URL in the test method and modified its import statements to ensure compatibility with updated PGT URL format and improve code clarity
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and added functionality to handle the case where the function name is not valid based on the statement state
updated JarLauncher . java to modify its functionality to enhance performance and maintainability of the code
replace raw types with generics in multiple classes for better type safety to enhance code clarity and prevent runtime type errors
add an option to send hole pulse packet in the video telephony and remove some unused code .
added functionality to update a pgobject with a date in ResultSetTest . java to ensure that the update process handles PGObjects correctly in the database
updated PasswordResetEndpoints to return an error response for unavailable entities and added a test for creating a password reset when the user has non - UAA origin to improve error handling and ensure proper response management when attempting to create a password reset
fix classcastexception when parse xsd : list < property >
modified caching logic in Cache . java to enhance performance and efficiency of data retrieval
rename variable to avoid confusion
fix issue where the wire relay would n ' t disappear if the bind y - coordinate be invalid .
added a new ` Chainer ` class and modified ` CollectionSubject ` to use it for type safety to enhance the functionality of the ` CollectionSubject ` by associating it with specific collections
[ scene2d . ui ] fixed typo in javadoc .
update recordedTime calculation to a specific value of 619315200000L to ensure accurate recording of recorded time after a longer time frame
added a condition to resize the status if the terminal type starts with Windows to ensure proper handling of Windows - specific terminal statuses
updated string formatting in ` UpdateDesiredStackAction . java ` and modified state check in ` RepositoryVersionState . java ` to improve clarity of log messages and ensure proper state management before setting host versions
jre _ bundle _ deploy . jar : separate third - party jre path into integrationtestcase
updated collections from HashSet to LinkedHashSet and modified set handling in multiple classes to ensure predictable iteration order of artifacts and improve code consistency
remove useless try / catch block in operationserviceimpl . readfrom ( # 1740 )
updated the method call for configurationurer resolution in KnativeEnvironment . java to improve code readability and maintainability
make commitlog archiver thread pool name consistent
added connection handling and a test for cloud Solr client uploads to ensure that the cloud Solr client properly handles configuration file uploads
make allbindings synchronize to prevent race condition
added methods to clear files and cache in ShadowContext for improved resource management to enhance performance and maintainability by managing temporary files more effectively
http : / / issues . apache . org / jira / browse / amq - 3873 - fix regression in xstreampersupport . addstyle
[ drools - 786 ] allow KieHelper to pass a kiemodulemodel to a kiebuilder
updated block event handling logic to utilize Farmland objects instead of material checks to improve efficiency by avoiding unnecessary dry checks for farmland blocks
added a default implementation of the getLocalIp ( ) method in FinishedSpan . java to provide a default implementation for retrieving local IP addresses
updated JdbcStepExecutionDao to use SerializationUtils for deserialization and modified test cases to accommodate new integer values to ensure correct serialization and verification of step execution context
lucene - 7758 : update utf - 8 encode to not consume non - ascii character . ( # 779 )
* add python 3 support for mxnet ( issue # 701 )
added a refresh button to the PluginTab for plugins downloading to improve user experience by allowing users to refresh plugins easily
change the severity of log statements from info to warn in DefaultHistory . java to notify about potential issues during history file reloading and saving
cloudstack - 8563 . [ vmware ] get vm data center from vmware _ volume table on vmware redeploy
camel - test - infra - sftp fixed stop sshd to avoid hang on failure . thanks to joerg kessler for reporting .
modified the ExperimentalMockitoJUnitRunner class to enhance testing capabilities with improved functionality
updated GpsSettingsActivity to use Utilities . GetBuildSerial ( ) instead of Build . SERIAL and added a method to retrieve the build serial to ensure proper handling of build options and improve code clarity
remove @ version that use svn revision a it be deprecate .
added null checks for spatial and skeletonControl before removing it to ensure proper handling of skeleton control instances to avoid potential NullPointerExceptions
added smartReplies functionality to ShadowRankingTest and ShadowRanking classes to improve the handling of smart replies for better clarity and maintainability
[ java ] do n ' t add segment file to archive if it do n ' t already exist .
refactored the way the LEXICAL _ resources _ DIR is retrieved in CarrotClusteringEngine . java to improve clarity and correctness of resource directory retrieval
added null check for testRect in WindowsTreeUI . java and created a new class bug8004298 . java for testing to ensure proper handling of null rectangle dimensions in the WindowsTree UI
update ASM _ API _ VERSION from ASM7 to ASM9 in CompilationConfig . java to ensure compatibility with the latest ASM API version
mahout - 346 : throw a pasteexception when a column vector could n ' t be read from a map file
added clientInfo field and a setup method in SurrogateAuthenticationEventListenerTests . java to facilitate testing of client information in the Surrogate authentication process
added a userView variable and initialized it to false in CardPresenter . java to ensure the user view is properly initialized for proper functionality
removed unnecessary method declarations and improved readability in Graphviz utility classes to streamline code and enhance maintainability by removing redundancy
fix bug where constructbatchhistogram and synclogtimeperrequest be not initialize properly .
added a new module - info . java file for the sqlite connector module to define module dependencies and exports for SQLite functionality
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper timing between asynchronous operations in the test
removed redundant condition for " new " and " api " from permissionsManager initialization to simplify permission management logic by directly using default settings
refactor DateParser and TestDateParser classes for improved date parsing functionality to enhance date handling efficiency and maintainability
added a getDepth method returning a fixed value of 0.5 f to define the depth of the Spring loaded state for improved functionality
replaced manual array copying with ` Arrays . copyOfRange ` for better readability and performance to simplify code and reduce memory allocation when dealing with large data sizes
[ hotfix ] [ doc ] fix typo in executiongraph
remove a notification display and related swipe functionality in NotificationRenderer . java to simplify user interaction and improve code maintainability
modified DefaultExceptionConverter to handle null invocation and updated ExceptionsTest to ensure proper exception handling to improve robustness and clarity in exception reporting when processing none
fix an npe in glowcontainer . setlock ( ) .
replaced MethodHandle for accessing field setters with Java ' s reflective method invocation to simplify access to the target field and improve exception handling
modify query results to use ` intValue ( ) ` for integer handling to improve precision in integer retrieval for better accuracy
updated return statement format in BaseEmailContentFormatter to remove commas for metrics and datasets to simplify the return statement by removing unnecessary concatenation
added logic to hide and manage a panel ' s state based on the presence of a panel to improve the user interface by managing and display different panels more effectively
updated condition in ServerCallable to handle null location to ensure robustness by validating if the location is null
improve documentation of pipeliningtest and builderfactory method ( # 1661 )
added a check for null key parameters in the BasicChecker class to ensure stability by throwing an exception when the key parameters are missing
fix # 883 ignore all media type for text / plain ( # 883 )
replaced the task ID logging with a structured approach using task ID in LlapBaseInputFormat . java to improve clarity and flexibility in task number handling within the logging
fix test failure cause by spring 3.0 - > spring 3.0
added null check before closing indexReader to prevent potential NullPointerException during resource cleanup
removed redundant package declarations from BTCMarketsStreamingMarketDataService and related files to simplify package structure and improve code clarity
added a test method ` issue151 ` to the ` FencedCodeBlockParserTest ` class to ensure that the rendering logic for various code blocks is functioning correctly
added a new file ` CompatibilityTest . java ` for testing internal and internalDTD properties to ensure proper verification of property loading and internalDTD for validity
added new utility classes for push notification and security handling to facilitate push notification and security handling in the application
update TableRebalancer to handle instance state maps more robustly to improve the efficiency of the rebalancer logic
bump version to 2.7 . 0 and tidy release note
fix line separator in regexpatternconvertertest ( # 7214 )
align ajp and apr / native with bz 65374
initialize friction , restitution , density , and isSensor variables to their default values to ensure friction and sensor values are set for proper setup
rename ` fetchSaclingFactors ` to ` fetchScalingFactors ` across multiple classes to improve clarity and consistency in function naming
added a shell command to wait for broadcast idle in LauncherInstrumentation . java to improve reliability by handling idle waiting on the device
added test cases for font and link tags in ResourcesTest . java and modified the ResStringPool ' s span calculation in ResStringPool . java to ensure correct retrieval of string attributes and improve the performance of the ResStringPool implementation
fix guistatscomponent incorrect url for statscomponent . fix # 3853 .
added permission handling for call phone in the launcher to ensure proper user experience by enforcing permission requirements
updated return value from 32 to 36 and modified imports in various classes to enhance simulation functionality and improve locale handling during startup
lucene - 2377 : remove dead code , remove unused method from geoencodingutils
added a synchronized method ` isDockerAvailable ( ) ` to ` DockerClientFactory ` to ensure Docker client is available before proceeding with operations
added a new constant VPX in CodecTypes . java to represent the VPX codec in the application
added coordinator address option to facilitate remote coordinator thrift server connection to the server
added path matching functionality and refactored timer management in FsUtils and WrapTimer classes to enhance path matching capabilities and improve code maintainability
add a conditional check for non - positive values before adding to labelValues to avoid adding empty entries to avoid potential errors
make sure boolean be convert to boolean only if not null
added a test annotation to TestPerfBenchMarkDriver . java to ensure the test runs with the latest testing tools
updated ObjectStore to set materialization time in mmm settings and added a test for updating creation metadata to ensure that materialization times are correctly set in object store operations and verify functionality through testing
[ djstt ] fix recognize recognize error instead of npe
fixed # 1878 : jmssampler . stop ( ) stop send to client - side ( send queue name : ' ' )
updated break weight logic in GlyphView . java to handle edge cases more explicitly to improve text rendering behavior for better text rendering
replace sync reading logic with a buffer reading reading method to optimize performance and reduce memory usage during data reading
added an @ AwaitsFix annotation in AutoAddReplicasPlanActionTest . java to address issue related to SOLR - 13028
replace the direct usage of sort by counts with a LinkedList for unwound data to improve clarity and organization of processed steps and processors
[ gr - 27654 ] fix slicetransferable . tostring ( ) for mime type .
added a new command - line argument for random port allocation in TestThriftServerCmdLine to enable dynamic port allocation for improved testing reliability
added a check for EOF status in the RegExpScanner class to ensure proper handling of EOF scenarios in regular expression processing
optimise - do n ' t use system . getproperty ( ) for metrics and timer .
fix nullpointerexception when try to find the nickname for a chat .
fix to make error message show when add sketch sketch file
refactor refresh token creation into a separate method called createRefreshToken to improve code readability and maintainability by reducing duplication
improve error message when path can not be find .
[ flink - 8831 ] [ yarn ] do n ' t clear the job at the availability service in yarnflinkapplicationmasterrunner
add implementation for gethardwarebuffer in shadownativeimagereadersurfaceimage
updated BTCChinaExchange to use a specific SSL URI for the market data service to ensure the market data service connects to a specific BTCChina API
pmd : fix ioexception when generate ant task
[ issue # 1563 ] add integration test of shenyu - oauth ( # 1563 )
make a semgrex reference an actual link for use in javadoc
streamex : add streamex . flatcollection ( ) , and remove entrystream . flatcollection ( )
add more log when exception to producer can not throw exception ( # 3753 )
updated RobolectricClassLoader to include additional class name checks to ensure compatibility with Maven Surefire tests with both Android and Maven Surefire projects
fix wrong condition when check if sdp be in transmittableaudioencodings
changed the type of ` defaultValue ` from ` SequenceNextValueFunction ` to ` DatabaseFunction ` in the ` CreateTableGenerator ` class and added a new test for default value handling in the ` CreateTableGeneratorTest ` to ensure correct handling of database functions and improve test coverage for default value compatibility
add new test for gml31 and gml32 gml - 2 gml31 gml
simonstewart : fix a unit test that be fail due to the wrong http proxy be use . the test now pass .
modified methods in ColumnarDataSource and RowProcessor to check if the processor is configured before expanding regex mapping to ensure proper handling of configurations and prevent runtime exceptions
updated CustomSeekProvider to improve seek position processing based on duration and size to enhance accuracy of seek position processing and ensure accurate results
added two new classes , XLCDCommunicator and XLCDController , to implement firmware processing for XLCD to enhance command handling functionality and improve firmware processing
drools - 4258 : make kiemodulemarshaller independent of kiemoduleschema ( # 3258 )
added retry logic to multiple event query classes and modified conditions in EventQuery to ensure that retry times are greater than zero and verify that empty messages are handled correctly
[ java ] fix flakiness in workerprocesspooltest . testthreadstates
modified the equals and hashCode methods in DelegatingMethod class , and added a new DelegatingMethodTest class to improve object comparison and hashing functionality for DelegatingMethod instances
reduced constants for EnergyCost to reduce resource limits to improve performance and resource efficiency in the application
updated command handling in DownloadPlugins . java to throw ConfigurationException to ensure configuration consistency during command execution
deleted ` SpringTransactionHooks . java ` and changed its target type from ` SpringTransactionHooks ` to ` AbstractSpringTransactionHooks ` to streamline transaction management by consolidating transaction handling functionality
refactor AbstractClassAssert in the codebase to improve code clarity and maintainability
added a new class ` GetUninitializedStringValue ` that tests the value of an uninitialized string to ensure that the value is correctly uninitialized for the specified object
added support for query parameters provided through a builder in AndroidLibraryDescription and updated related queries in GraphEnhancementQueryEnvironment to enhance dependency management and query flexibility for Android library dependencies
added a new BooleanFlag named ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to allows synchronizeing the keyboard open and close animations when transitioning between home and all apps
replaced anomaly message retrieval with a conditional logic for saving bug report to improve performance by avoiding unnecessary checks for system anomaly message
added a constant for " cinepack " format in FormatConfiguration . java and utilized it in LibMediaInfoParser . java to improve code readability and maintainability by centralizing format definition
added camera bobbing animation and adjusted animation offsets for player hand functionality to enhance control over camera bobbing behavior and improve gameplay performance
changed the type from ` data . describe ( ) ` to ` digest . toString ( ) ` in the ` GrpcCasBlobUploader ` class to ensure the correct representation of the blob ' s digest
deleted the HSQLDBServerFilesFilter . java file to eliminate unused filter implementation to streamline the codebase
fix : do not return early if restore from seed / key be not set
[ pytorch ] fix exception when no title by imdb id ( # 3282 )
added a method to check for type existence in the HasTypes class to ensure that the method invocation accurately matches the fully qualified class names
replaced hardcoded array size in AmbientCubemap . java with a static final constant to improve code readability and maintainability
add a warning msg to indicate when the current mode be not configure correctly .
added handling for zero values in multiple mask classes to return appropriate data types when the input is zero to improve data processing consistency and avoid potential errors when dealing with zero values
improve derbyblockstoretest cleanup . use temporaryfolder instead of hardcoded db name .
fixed subtypes not be damageable . close # 354
fix linestate with alpha not be set to 1.0 ( # 6877 )
simonstewart : always start the startup page in the firefox driver
[ java ] upgrade to 1 . x only do n ' t return 200 when there be a problem connecting .
updated the task ' s accept parameter from " compile " to " process - classes " to align with the updated naming convention for processing classes
bug 51821 - good handling of idle connection when closing http client
ambari - 20670 . ambari should not create metric with aggregate function name that do n ' t have aggregate function suffix
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use this new method to improve fullscreen parameter handling in the overlay rendering process
added a new Java file that counts occurrences of a frequency at a given time to provide a solution for counting user input for enhanced functionality
[ java ] set socketchannel to null to avoid potential npe when reconnecting to the cluster .
modify MutisignOperationerGodicTest . java file to enhance functionality to improve testing capabilities for Mutisign operations
added error handling for NoSuchElementException in StaxEventItemReader to ensure robust data reading when the item index starts at the end of the file
updated import statements and added null handling for resource name in TestAttributeSet to enhance code robustness and prevent potential NullPointerExceptions
replaced imports from ` com . nimbusds . jose . shaded . json ` with ` net . minidev . json ` in ClaimConversionServiceTests and ClaimTypeConverterTests to ensure compatibility with the new JSON library structure
updated OS detection logic to handle " AIX " instead of " Linux " to ensure compatibility with AIX systems in the system
cloudstack - 4569 : fix private ip usage in vr command
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to enable synchronous execution of Runnable without blocking results
remove test that be only applicable to window , and possibly other project .
replaced integer calculations with Math . round for positioning calculations to improve accuracy in layout calculations involving task percent values
hive - 27379 : fix kmeansdriver . run ( ) for cluster dump test ( stamatis zampetakis , review by krisztian kasa )
hbase - 16237 addendum : fix incorrect alignment of rowcache and objectcache ( addendum )
camel - 2599 : add type converter to be able to load component type . work in progress .
added serialization support for ConditionalTask in SparkCrossProductCheck . java to enable proper execution of tasks based on their type in the Hadoop framework
fix bug where managed profile could be add and remove from model
updated the condition to check for ` jsonResponse ` in ` LoginInfoEndpoint . java ` and added new test cases in ` LoginInfoEndpointTests . java ` to ensure proper handling of JSON responses when both account chooser and discovery are needed
hbase - 15410 introduce ' todescriptivestring ' for the assignment manager ' s tostring ( ) method
added a new result field and updated related methods in HuobiAccountInfo to include it to enhance the API by providing additional context about the account results
added support for adding a " PERIOD " SQL statement in MariaDB to enable compatibility with MariaDB database operations
add docker _ container _ image ( optional ) to portablepipelineoptions . java help help improvement ( # 2049 )
add note about launcher shortcuts and bug fixes in this release
updated the constant for the number of milliseconds in days from private to public to allow access to the number of milliseconds in days in tests
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] reduce allocation when invoke aeron client in consensus module for aeron client .
added validation for implicit lambda parameters and created a new class for testing to improve handling of implicit lambda expressions and provide a test for raw merging functionality
replaced multiple instances of FileMenuFilter with a single showMenuItem and hideMenuItems methods to improve code readability and reduce redundancy in menu item visibility logic
[ btc - e ] add type to transaction history json ( # 5369 )
replace lists with sets for series and exceptions in RetryFilterFunctions . java to improve performance and prevent duplicate entries in the data structure
added @ Deprecated annotation to PluginLoader . java to mark PluginLoader as outdated to discourage its use in future development
[ iotdb - 3468 ] fix bug of last query without sequence time ( # 4461 )
removed extra newline characters from the request string in HttpResponse . java to ensure consistent formatting of the request string
( chore ) camel - maven - plugin : fix build error due to slf4j update
added a safe area setting for the title bar in the Sheet class to enhance user experience by providing accessibility to title bar elements
reversed the iteration order in the series metadata retrieval loop to ensure the correct retrieval of TimeSeriesChunkMetaData from the list
added SQL command parsing and deparsing tests for the ALTER TABLE statement to ensure correct SQL syntax and improve test reliability
make copy of state public for client and server .
fixed - rclustereddexecutorservice . executecallable be not call . # 4370
h2 console : fix file name splitting when use non - ascii character ( ferdinand xu via ashutosh chauhan )
refactor multiple Java files including OrcBatchReader , OrcTableSource , and OrcTest files to improve code organization and maintainability
refactor code in CompareFunctionsProcessor . java to reorder condition checks to enhance readability and maintainability of the code
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task before reduce scope
removed unnecessary toString methods from SegmentTermVector and TermFreqVector classes to streamline code by eliminating unused methods
added checks for invalid states in AbsSwipeUpHandler and unregistered TaskStackListener in TaskAnimationManager to improve stability by preventing actions when the state handler is invalidated
refactor lock timestamp handling by replacing static methods with direct context usage to improve flexibility and maintainability of preference management
dont try to get the artist from the audio map if it ' s empty
add a null check on the remotemessage in the nce - service .
nifi - 8043 fix nullpointerexception in splittext when header line count be 0
add support for window key store in HttpsConnectorFactory to ensure compatibility with Windows key store functionality
increase the default check timeout in RestTemplateSenderTest and WebClientSenderTests from 400 to 1 _ 000 to improve stability by allowing longer wait time for tests to complete
added a conditional check for FILE _ NOT _ FOUND in the FileSyncAdapter class to handle cases where the file does not exist , improving clarity and functionality
added interpolation capabilities to the Slider class for smoother transitions to enhance user experience by allowing smoother transitions when slideing
camel - 12727 : fix line separator e2e test on window
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to improve texture packing capacity for better visual representation
added a test for negated Ternary not wrapped in UnnecessaryParenthesesTest . java and updated the logic in UnwrapParentheses . java to ensure proper handling of nested expressions and improve clarity in the type check
camel - 5020 fix the npe issue with helazelcast consumer and add a test to demonstrate the patch
added a new TextFeedbackTest class and a corresponding test method to the project to enhance testing coverage for text feedback functionality
replaced Math . round with Float . compare for score comparison to improve precision in score comparison logic
added support for new DENSITY constants in AddAndScaleMultiImage and ResourceEditorApp to enhance image processing capabilities and improve resource management
[ j2kt ] fix snap array copy when use with j2kt .
fix : check stage total in defaultlogpublisher before try to write a message
added remote SCM support functionality to the configuration and RuntimeEnvironment classes to enable conditional handling of remote SCM systems based on user options
[ mielecloud ] add state _ end and state _ rinse _ hOLD to mielection handler ( # 9767 )
replaced ` StatsLogCompat ` with ` SysUiStatsLog ` for logging implementation to improve logging efficiency and eliminate reliance on the deprecated ` StatsLogCompat `
[ hotfix ] fix checkstyle violation in localzookeeper
added test cases for ProjectGeneration events to ensure correct serialization behavior for finished and started events
mob - 1293 : show select function a special point ( for use in web )
updated the implementation of the JavaCompiler class to improve compilation efficiency and performance
added error log for negative time left and its value in IntegrationTestTimeBoundedRequestsWithRegionReplicas . java to ensure robustness by providing clearer feedback on how random reads are executed and prevent potential errors
renamed multiple test classes and updated their contents to improve code organization and maintain consistency in naming conventions
added additional options for garbage collection sections and nocopyreloc in NdkCxxPlatform . java to enhance the build process by including additional garbage collection settings
fix circuit breaker uri handling : extra / extra / www . circuitbreakervariables . org
jasonleyba : jasonleyba : fix ' ant test ' to pass in xstream
updated ReadOnlySharedStringsTable to check for localName instead of name to ensure proper comparison of URI attributes for consistent query behavior
added a new method ` getAccountNet ` in ` HttpMethed ` and implemented it in ` HttpTestAccount001 ` to implement account net retrieval functionality and ensure its correctness through testing
added a check for available text width in SwingUtilities2 and modified the way GTKLookAndFeel is set in Test6635110 to ensure proper layout handling and avoid potential exceptions when setting the Look and Feel
refactor FlatteningIterator to use a separate push method and improve readability to enhance code clarity and maintainability by simplifying object handling
replaced specific HTML content with trimmed " < b > " prefixes in title and body data to ensure proper rendering of notifications by removing unwanted elements
doc : generate sample code in the java microgenerator ( # 419 )
[ # 8333 ] instructor : edit question : fix deletion bug ( # 8384 )
bugfix : hssfsheet . getfirstrownum ( ) should return 0 when the number of row do n ' t match the number of row
added permission checks for launcher activities to enhance security to prevent malicious intents from being executed without proper permissions
[ java ] send cluster session event after it have be start to a slow tick cycle .
implemented a custom hashCode method in AbstractParquetMapInspector and added corresponding test cases to ensure proper functioning of hash - based collections and improve code readability
added a condition to flush the quic session if remotely closed to ensure proper resource management by closing the quic session when remotely is closed
modified SplitReader interface to extend AutoCloseable and removed the close method signature to ensure proper resource management and prevent potential resource leaks
removed the deepCopy method from GsonBuilder to improve object encapsulation during object creation
sulong : llvm : fix potential npe in llvmscanner .
modify the file handling logic in RestClientRequestImpl to streamline file processing to improve code readability and maintainability by reducing redundancy in asynchronous operations
reformatted the dispatchStatusString method call to enhance code readability and maintain consistent formatting
updated MockFactory to use SearchingClassLoader for class loading and added a new SearchingClassLoader class to improve class loading efficiency and manageability by consolidating loading loaders
add test to avoid race condition
hive - 13063 : in constantpropagateprocfactory , add joindesc . left _ SEMI _ JOIN ( sergey shelukhin , review by gopal v )
updated HttpReceiver and HttpSender to handle response completion and response status to improve response termination logic based on response status and completion status
replaced array length offset with arrayOopDescLengthOffset across multiple files to unify the configuration naming for array operations
http : / / issues . apache . org / jira / browse / amq - 6065 - make test instability
refactor multiple Java files related to Kerberos and SSL configurations to improve code organization and maintainability
added a check for the application ' s status before attempting to stop it to ensure that the application does not attempt to stop if it is not running
changed the return type of the drawItem method from void to GlyphLayout to allow the drawing of items in a more structured manner within the List class
[ scb - 21147 ] springmvc - metrics publish from springmvc - client , not from springmvc
fix compilation and remove unused constant in accountagewitnessservice
refactor formatting and improve readability in StructureHeader and StructureReader classes to enhance code maintainability and consistency
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and updated related tests to enable the handling of excessive interceptor during webflow execution
add dextransform to be able to properly transform return body
add additional property to enrich rule to add more data ( # 4999 )
updated methods in PathResource to remove the " NOFOLLOW _ LINKS " option and modified test cases to include " / symlinkDir " to simplify symlink handling and improve test coverage
[ flink - 33093 ] [ hive ] remove sql dialect from the executioncontext ' s configuration
replaced direct use of ` rDotJavaPackages ` with ` Supplier < Boolean > ` for better flexibility in package handling to improve the accuracy of resource management by allowing optional presence of RDotJavaPackages
added test for astpackagedeclaration . getpackageimage ( )
add configuration for unseq file level in IoTDBDescriptor to allow configuration of unseq file size based on user settings
[ hotfix ] [ runtime ] move activeresourcemanager out of main package
disable this test , because it ' s not need .
updated ZipResource to handle URISyntaxException when constructing the URI to improve error handling for invalid URI formats and ensure proper parsing
updated ExpandableUploadListAdapter to improve thumbnail handling and file upload conditions to enhance user experience by ensuring thumbnails are retrieved correctly based on upload status
updated RobolectricTestRunner to merge parent class and method config from test classes to ensure that the correct configuration is merged between test classes for improved functionality
replaced the deprecated Lists . newArrayList calls with a new Iterables . filter method to filter blocks and items using the registry name to improve code maintainability and ensure that only valid registry names are processed
changed method signatures from abstract to non - abstract in multiple classes to enhance flexibility in defining methods and improve code organization
updated JSONPojoConvertor to support enum types and modified test cases for color handling to enhance flexibility in handling enums and improve test coverage for color functionality
added a deprecation check for the ` -- view ` option in project view parameters to inform users that the ` -- view ` option will be removed soon
changed the type of originalPayload from String to byte array and updated the parsing logic to optimize memory usage and improve efficiency of the processing
added orientation correction listener to GyroControl for improved input handling to enable better responsiveness to device orientation changes
biome dictionary : set the size of the biome array to the current array ' s length .
fix ecj unit test after recent change in jdk 9
updated the initialization of the Environment variable in FileCompilerConfig . java to ensure the correct environment variable is used for compilation
added a new interface ByteToLongCollector in the package com . speedment . common . function . collector to provide a standardized approach for collecting Byte values in a more structured manner
added a preload parameter to MMapDirectoryFactory to enable optional preloading of the map directory
added custom metrics for various enabled components in BukkitPlatform to provide detailed metrics on component usage for better analytics
refactor QuickConnectREST to improve code structure to enhance maintainability and readability of the code
added aspect image and default card image in CardPresenter . java to enhance image processing capabilities with appropriate aspect ratio
fix for ds - 1858 - authenticationcountselector do not increment auth method count if it ' s implicit
updated the initialization of VectorHashKeyWrapper to handle empty arrays with empty arrays to ensure that empty arrays are not processed as empty arrays to avoid potential errors
added two test methods for ` System . nanoTime ( ) ` in ` TimeChangeTest . java ` to ensure correctness of the ` System . nanoTime ( ) ` function after optimization
added trimming of lines in MultiPartFilter and a print statement in MultipartFilterTest to ensure clean input handling and validate parameter input
fire livingexperiencedrop event for now ( # 7105 )
updated error handling in OpenUVBridgeHandler and OpenUVReportHandler to use @ text / offline configuration to enhance clarity and localization of error reporting for offline devices
remove unsupportedoperatorsvisitor to fix the build .
updated GraphEnhancementQueryEnvironment to include RdepsFunction and improved null checks to enhance functionality and robustness when handling targets
refactor character class to improve code readability to enhance maintainability and facilitate future development
[ fix # 1058 ] scale only for rocket scaling demo
replaced ` Arrays . toString ( byte ) ` with ` assertEquals ( byte , rs . getBytes ( 4 ) ) ` in ` UpdateableResultTest . java ` to simplify assertions by directly using the byte array
fix the time boundary on broker side for hybrid pinot table ( # 3550 )
simplify logic around poller registration in apr / jetty connector .
updated regex pattern for image metadata retrieval and modified album title extraction logic to improve image handling and ensure album title is up to date
replaced calls to ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` in multiple classes to improve code readability and centralize wait logic
updated conditions in QuickstepLauncher to include phone profile check to ensure proper layout behavior for phone devices in non - landscape orientation
updated Hibernate query assertions to use unwrap ( QueryImpl . class ) instead of getValue ( ) to ensure compatibility with the latest Hibernate API changes
replaced the method ` readAllLines ` with ` readMatchingLines ` and added a private method ` readMatchingLines ` to improve error handling by throwing an exception when permissions are not granted
removed dynamic check for the presence of a stream method in JpaQueryExecution to simplify the code and improve performance by eliminating unnecessary checks
ignore null entity type in physicsprocess . execute ( )
fixed - entryprocessor do not clear map when value be indexed [ hz - 3552 ] ( # 25580 )
initial work on add new jitsi - meet api into the sip protocol .
fix gradient color not render in some case ( # 9111 )
fix problem with auto - normalize for menu item ( # 4104 )
updated the scratch path format in Aapt2Link . java to include a dynamic link tree path to enhance flexibility and maintainability of generated links in the build process
replaced instances of ` new Supplier < > ( ) ` with ` newInstance ( ) ` in ` ExternalJavacTest . java ` and updated mock creation in ` ThriftOverHttpServiceTest . java ` to improve object creation clarity and align with best practices in mocking behavior
ggb - 2118 : app . clearselectedgeos ( ) update selection to false ( need for web )
[ yld ] improve error handle for empty stack exception ( # 3377 )
added isCanceled ( ) method implementations across multiple classes to standardize the cancellation status handling across different components
refactor multiple classes to implement a default method for checking annotation presence to improve code consistency and reduce redundancy across these classes
explicitly throw uilayout . removeallWidgets ( ) instead of throw
[ hotfix ] [ yarn - tests ] move yarnsessionfifoitcase to yarntestbase
fix incorrect output size calculation in opensslcipher : update
added support for using VLC in video playback based on Fire TVStick to ensure correct processing of high - res content on Fire TV Stick devices
[ beam - 8470 ] show dataset in test instead of catch the exception
updated GpsLoggingService to modify listener handling based on prefer _ celltower setting to enhance user preference management by allowing more flexible configuration of listeners
modified the putString method to use a byte array instead of a boolean for wide width and added fallback functionality for JNI to ensure correct handling of width measurement and improve performance when loading libraries
added support for BaseItemDragListener in FolderIcon to enable proper handling of drag events in the launcher
added ` createEmptyArtifact ` method for handling String type casting in ` RepositoryConnector ` and ` FileSystemConnector ` , and implemented checks in ` AbstractRepositoryConnector ` and ` SignavioConnector ` to improve artifact creation flexibility and ensure proper type handling during configuration values
removed empty lines in RabbitMQPublisherImpl . java to clean up redundant code and improve readability
removed unnecessary check for year in VideoViewerActivity after aug1 condition to simplify the condition for verifying video link validity
camel - 6407 : fixed sftp double path issue with relative uri . thanks to joerg kessler for reporting .
increase the timeout for testweatherconsumertest to 20 second to avoid false fail on slow machine .
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability by using a more descriptive variable name
double plant can no longer use tailnode on double plant , close # 169
set request focus to false for the tree to avoid npe
fix for issue where an exception be add to the virtualmachinemanagerimpl should be throw
added support for license acceptance in DB2TestSystem and modified condition logic in DockerDatabaseWrapper to enhance flexibility in handling database connections and improve code clarity
added a method to set the unit group in DoubleModel and updated seek value handling in GeneralOptimizationDialog to enhance flexibility in unit management and improve usability during optimization operations
added a new static final CurrencyPair BTC / ZMW to the CurrencyPair class to support trading functionality for the new currency pair
added a check to set the number of samples for the PBR lighting to ensure that the PBR lighting is correctly configured with the specified settings
refactor test assertions in StepWithSimpleTaskJobParserTests to remove unnecessary " job . step1 " and " job . step2 " prefix to simplify the code for improved readability and maintainability
updated variable declarations to be final for better code safety to ensure immutability of variables to prevent unintended modifications
[ calcite - 4892 ] ggbabs be not properly escape in expressionnode .
replaced multiple calls to ` addServiceOutput ( ) ` with a new method ` addServiceOutput ( ) ` to improve code organization and clarify the handling of service output based on trigger conditions
[ drools - 5647 ] support precision in bigdecimal comparison ( # 2904 )
added a context reference for " org . eclipse . jdt . " in WebAppContext . java to hide the Jdt used by Jetty
modified the return value of the useAuthCache method to false to simplify the logic by removing unnecessary superclass call
patch from jun rao ; review by jbellis for cassandra - 113
camel - 7594 : direct component - avoid use deprecated directconsumernotavailableexception
added null check for zooKeeper before setting it to prevent potential NullPointerException when closing ZooKeeper
fix # 226 - progress bar not update when load
added a method to run vibration tasks on the UI helper thread to improve thread safety for UI operations
added a method to update the last remote stream ID to ensure the last remote stream ID is accurately recorded
fix for the antialiasing issue in the editor . ( # 1482 )
[ java ] fix potential overflow when read term window in archive .
refactor : remove static import of enums in ctannotationimpl . java ( # 2552 )
update exoplayer . builder javadoc with description
replaced the native method ` getRGBPixelImpl ` with a new method ` getRGBPixels ` that utilizes a rectangle to simplify the pixel retrieval process and improve code clarity
add a new method ` newPrintStream ` to handle specific encoding for output streams to improve flexibility in setting output stream encodings based on system properties
increased vibrate limit from 1 to 25 for improved movement accuracy
make flybush independent of data clearer api . ( # 158 )
modified the constructor of WebSocketClient to remove the executor parameter to simplify the constructor signature and improve code readability
douniaberrada : fix for issue 722 : i18ntest fail on the trunk ( rc test pass ! )
replaced instances of handleBootstrapMethodError with handleLoadConstantException in BytecodeParser and SharedGraphBuilderPhase to improve error handling specificity and clarity in the code structure
[ ds - 3952 ] fix xmlworkflowserviceit failure due to unauthorized access
[ geot - 7014 ] make canonicalistic name case insensitive ( and make sure we can compare our feature )
7198974 : javadoctool be fail if there be no source file for package
danielwagnerhall : adding test for toggle option in multi select , and add a test for it
added validation to check if the length of keys is 9 to ensure correct number of keys to prevent processing errors
added error handling for fetching attributes in HDF5BatchReader to ensure that only Huge objects BTrees with 1 record are supported to avoid runtime errors
[ beam - 8470 ] put back bigquery . in ( ) to return pDone . in ( beam - 8470 )
[ geos - 8882 ] avoid npe when upload template and return binary content ( # 3824 )
8015151 : [ testbug ] add regression test for multi - dimensional array
fix : disable secondary storage management on management server by default
updated variable names and logic in SyncBlockChainMsgHandler . java for clarity to improve code readability and ensure correct block ID retrieval
added theme setting for preview tab content to enhance user experience by utilizing the appropriate theme
added null check and closing logic for the reader in VectorizedParquetRecordReader to prevent potential NullPointerExceptions when closing the reader
added a new test for HTTP idle timeout configuration and implemented it in the ConnectorTimeoutTest class to ensure proper handling of idle connections and validate expected HTTP responses
add new property key to the dcoref . dictlist , dcoref . dictpmi and dcoref . signatures .
replaced instances of ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve clarity in parsing tag names and enhance code readability
updated generic type specification and fixed a typo in the test class to improve code clarity and maintain consistency in type usage
solr - 10219 : reduce log level for find child node with improper name from warn to debug .
replaced direct palette update with a method to retrieve the hotseat palette to improve code clarity and encapsulate bitmap decoding logic
added default data table entry and cell transformation methods to TypeRegistry to enhance flexibility in handling different data type formats
added an assertion to check if newAvailableShared is less than initShared to ensure the integrity of the shared value during runtime
chore ( regen ) : regenerate with update license year
removed projectGenerated field and its getter / setter from ProjectGenerator . java to streamline project generation process by eliminating unused state
fix checkstyle issue cause by string . contains ( ) call in driverutils . java
refactor route handling in Routes . java and create a new Contact class in ApplicationController . java and BodyParserEnginePost . java to improve route management and ensure proper rendering of contact information
guac - 1100 : fix simpleuser permission resolution .
update RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version of the project
avoid compile error due to classnotfoundexception in trainfactory
fix where clause do n ' t work when alias be active
replaced individual iteration over perDocConsumers with IOUtils . closeSafely to improve resource management and avoid potential memory leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener for the overflow button in the ExpansionViewHelper to ensure the menu displays correctly when the overflow button is pressed
updated error messages from " is null " to " is a non - null reference " in multiple classes to clarify that the subject is not a null reference and improve error reporting
ggb - 2178 update line height for help button in algebravieww
fix : move protobufferutilstest to core package
fix divider position and split pane size in mac o x
added detection of crossref file and updated generation of subtypes .
[ geos - 8043 ] memory leak in the org . opengis . geoserver . feature . metadata
corrected the spelling of ' dataTables ' in the RecipeDescriptor class to ensure consistency and accuracy in variable naming
fix godmode . select a node when a contact or chat have n ' t be add .
updated import statements for Command from org . apache . sshd to org . apache . sshd . server . command to ensure compatibility with the latest SSHD server command structure
added a test method for cleaning up the audit log table parameters by position to ensure proper functionality and completeness of the audit log table operations
add @ suppresswarnings to prevent the warning about unchecked conversion
added regex patterns for comment line parsing in ACLFileParser . java and updated parsing logic in ACLFileParserTest . java to improve comment line validation and ensure correct parsing behavior with comment lines
updated MapRDBFormatMatcher to include FileSystemPlugin as a parameter and changed the return type of the isReadable method to DrillTable to enhance functionality by allowing dynamic drill table creation based on filesystem plugins
added a new HashMap for ancestor dimension values and modified how ancestor dimensions are appended to enhance data organization and clarify the handling of dimension values during splitting
added a check for user unlock state before dumping plugin manager entries and refactored closeOpenViews method to improve code clarity and ensure proper handling of open views based on user state
fix a bug in onimage ( ) where only ` ` width ' ' or ` ` position ' ' be set
refactor PKIXValidator logic to improve certificate validation structure to enhance readability and maintainability of the validation process
[ flink - 26011 ] [ hadoop ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest ` to ` org . apache . shenyu . integrated . test ` for Alibaba dubbo integration tests to reflect a more appropriate package structure for test functionalities
api : fixed bug where zoneid and domainid be n ' t apply when delete zone
updated the method used to retrieve the value from the JSON object in RuntimeTypeAdapterFactoryFunctionalTest . java to ensure correct retrieval of the shape type and improve test reliability
mondrian : fix an issue with store / restore undo information in the property file
7127827 : jre8 : javaws fail to launch on oracle linux due to xrender
[ java ] make test more robust by use awaitility in test .
refactor DocFieldProcessor and related classes to improve the handling of fields during flush to ensure stability and prevent potential memory leaks from previous documents
fix : exclude some error when generate metadata
refactor capacity handling in BiInt2ObjectMap and Int2ObjectHashMap to use the length of the values array to improve memory efficiency and ensure correct capacity calculations
updated the number of threads in HiveConf from 25 to 15 and refactored file renaming logic in Hive to increase concurrency in file operations and ensure consistency in file naming
add some trace to the parallelnio sender , to see if an exception be catch during the send process .
added a null check for the context before creating a new SchemeAndroidIDE instance to avoid potential NullPointerExceptions when context is null
[ gr - 27654 ] do n ' t unhook native - image - loader .
modified the return type of the modifyGrantedAuthorities method to List and updated usage in SwitchUserProcessingFilter to allow for more flexible handling of granted authorities
refactored JaxrsIntegrationTest to extend JaxrsIntegrationTestBase and created new classes RawJaxrsSpringIntegrationTest , JaxrsSpringMain , and JaxrsSpringApplication to improve test organization and setup process for better organization and usability
small refactoring , make sure setquerytimeout be only call if jdbc 4 be not support .
added DataProviders for general and supplementary character tests in XslSubstringTest . java to improve test coverage and organization for XSL substring functions
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter . java ` and added close ( ) method in ` NoStartEndDocumentStreamWriter . java ` to ensure proper resource management during event writing to prevent resource leaks
added support for MariaDB sequences and updated handling of sequence parameters in the CreateSequenceGenerator to enable proper sequence functionality based on the database type and enhance sequence creation logic
8266446 : trivial typo fix ( # 3792 )
added TableDataManagerProvider import and set server metrics in multiple test files to enable monitoring of table data and improve monitoring capabilities
set jsse . enableframelnextension to true by default if jsse . enableframelnextension be false
refactor ObjectHashSet to remove generic type parameter and simplify iterator initialization to enhance readability and maintainability of the code
updated character count calculations in Compose . java and TweetFragment . java to improve clarity and correctness of character count updates
add a new constant for the time - to - live ( # 5015 )
modify checkForAndKillXcodeIfRunning method to accept an enablePrompt parameter to enhance flexibility in handling Xcode prompt scenarios
add method to get the terraingrid by cell coordinate in the terraingraing space . close # 1537
added default value handling in expression printing and implemented a new Java class for compiling annotations to ensure default values are printed correctly during annotation processing and facilitate testing of annotation compilation
added error handling for missing QuestEncryptionKeys JSON file in ResourceLoader to improve debugging by providing a clear error message when the quest keys do not exist
modify the isPushSupported method to exclude it check to ensure that the push functionality is not considered for further processing
updated the PointValue class to enhance functionality to improve the efficiency of point value representation
removed the sign operation for local witnesses in BlockUtil . java to streamline the process for improved clarity and efficiency
return the first root or null if no roots exist in FileSystemView . java , and added security checks in Win32ShellFolder2 . java to enhance robustness by handling empty root cases and enforcing read permissions during folder access
updated ` ColumnText ` and ` PdfPTable ` classes to improve row management and ensure accurate row span handling to enhance functionality and prevent potential errors when handling table rows
added a sparse array for undoing notes management in the ListFragment to improve the management of notes in the user interface
[ # 8803 ] fix bug with incorrect id and question in feedback backup
remove null check for data and throw an exception if it ' s null to ensure data is validated before proceeding with operations
# 757 - remove unused pstmtdelegate from serverconfig ( and miss from previous commit )
replace custom Padding class with Rect from AppWidgetHostView for widget padding calculations to simplify padding retrieval and improve compatibility with widget framework
refactor static MethodHandle initialization to a static block and add consStringFilter method to improve code organization and enhance argument filtering for ConsString type
[ gr - 34444 ] correct typo in javadoc .
make idletimeouttest more tolerant to slower machine .
replace ` getMessage ( ) ` calls with ` hasMessageThat ( ) ` for failure messages in ` IterableSubjectTest . java ` to improve clarity and efficiency of failure message assertions
replaced usage of ThreadLocal with null for the currentBook variable in multiple classes to simplify object initialization and improve code clarity
implement vote method in ContactSecurityVoter to check for method invocation support to ensure compliance with updated API requirements and improve error handling
removed unused imports related to GachaHandler and Tools in DataLoader . java to clean up the code and improve maintainability
added functionality to track the number of rows processed in the postUpdateLog method to improve update tracking by providing feedback on the success of updates
mow - 1035 margin fix , avoid scrollbars on tablet
updated foregroundFPS and backgroundFPS values to default values 60 to ensure consistent initialization of application settings
added ObjectReleaseTracker import and assert statements in HdfsTransactionLog and TransactionLog classes to ensure proper tracking and release of objects during transaction logging
close the channel should not need a defaultwebsocketframe , close the channel on close
updated event listener classes and added new test cases for handling application state machine errors to improve clarity and functionality in event listener management for state machine errors
replaced direct activity launch with a method to set the list background to improve code readability and maintainability by encapsulating list background logic
updated import from ` org . apache . commons . lang3 . StringUtils ` to ` org . openhab . core . util . StringUtils ` and added null check for ` line ` to ensure compatibility with the OpenHAB library and avoid potential null pointer exceptions
added a new method ` accumulate ` to ` JavaUserDefinedAggFunctions ` for calculating sum and count values to enable more flexible accumulator management based on user - defined weight values
hbase - 27619 fix checkstyle violation in put and replicationsink
replaced the VALID _ CACHE _ SET set with a Map for regex caching to improve performance and simplify the cache management for regex patterns
added a reset method to the GameThread class to enable resetting the gameThread instance
added a null check in the login method for digests to ensure only valid realm names are used to enhance security and prevent authentication failures
updated parameter handling in SavedRequestAwareWrapper to improve efficiency by consolidating and handling multiple parameters efficiently
fix for bug # 4358 . improve logging message
fix issue with race condition in ha and commitlog . fix # 1855
added a check to ensure the image view is not used on Android O and introduced a method to check for Android version compatibility to enhance compatibility with specific Android versions and improve user autocomplete functionality
updated schema info level from minimum to basic to ensure compatibility with the latest schema information format
fix save task freeze when write xml to file .
replaced manual byte conversion with fixed byte length usages for UTF - 8 encoding to improve data handling and ensure correct encoding during string conversion
fix entity cast exception in world . getentitybyvalue ( ) ( # 4822 )
remove Tomcat container adapters from the list in ProbeConfig . java to ensure compatibility with the latest features and improvements in Tomcat
[ drools - 5762 ] fix marshalling of multiple accumulate operator
rearranged case statements in NowSearchTerm . java and SearchTermBuilder . java for consistency to improve code clarity and maintainability by standardizing case handling
pdfbox - 4892 : remove public access modifier from class , a suggest by valerybokov
added HTTP method and headers to RemoteEndpointServiceAccessStrategy to enhance flexibility in handling HTTP requests using Spring expression
added a new method ` newResponseBuilder ` to encapsulate the creation of ` ResponseBuilder ` to improve code readability and maintainability by centralizing response creation logic
added notification . COMMAND _ START in AsyncBackgroundTaskManagerTest to notify the command start event to ensure proper notification handling during task execution
added a null check and method call to computePreviewDrawingParams in PreviewItemManager to improve stability by preventing potential null pointer exceptions
replaced the use of ` SimpleOrderedMap ` with ` CharFilterFactory ` for improved token filtering to enhance flexibility and performance in managing character filters
replaced null checks with ParamChecks utility method to improve code readability and maintainability by centralizing null checks
added verbosity handling to JavacStep and related classes to enhance output management based on console verbosity settings
added condition to convert database schema to lowercase if it is Oracle to ensure consistent schema handling for Oracle databases
[ log4j2 - 3952 ] log4j2 - 3952 - fix test that fail in ci
8317804 : [ testbug ] gc / g1 / testshrinktoregion . java fails due to unrecognized vm option loopunrolllimit
replaced custom package splitting with Splitter utility for better flexibility to enhances code readability and avoids potential issues with string splitting
replaced UTF - 8 string conversion with binary context handling in AnalyzingInfixSuggester . java and added a new test method in AnalyzingInfixSuggesterTest . java to ensure correct encoding of context values and improve test coverage for binary scenarios
updated the logic for determining the encoded string for attachments to properly handle " data : " attachments in the PushsaferMessageBuilder class to improve clarity and correctness in managing attachment formats
nutch - 2694 remove useless command usage , and fix output statistic output for provenance
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
hhh - 13653 - fix test failure in jdk 8u40
updated the evaluate method to accept a double parameter and adjusted rounding behavior to improve handling of null values and ensure consistent rounding behavior with rounding modes
[ jsscripting ] fix config parse error ( # 13582 )
changed class declarations from package - private to public in Test1 . java and Test2 . java to allow access to Test1 and Test2 classes from other packages
updated permission template identifiers from " node " to " deny . no _ enter " and " plot " in PlayerEventListener . java to enhance clarity and consistency in permission handling within the plot functionality
fix unnecessary optimization when session be not specify
replaced multiple calls to ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` across multiple files to improve test coverage for Lucene document values functionality
added tests for box and circle physics in Box2DCharacterControllerTest . java to evaluate and reset friction settings for contact lists in a controlled manner
added new test cases for maximum memory limit and maximum threadbuffer size in TestBadOptionValues . java and integrated them into TestMemoryOptions . java to ensure correct handling of memory allocation options and improve test coverage
updated alignment validation logic in ObjectAlignment and Options classes to ensure consistency in output handling
added a method to extract the target package from the manifest file and updated related tests to enhance functionality to ensure the target package name is correctly extracted from the manifest for improved reliability
updated the implementation of DocHelper to improve documentation generation and efficiency
create a copy of the list to avoid concurrent modification exception
replaced generic type invocation with explicit casting in mh1 and mh2 method calls to improve type safety and clarity
removed unnecessary comment and improved code formatting in MessageHandler . java to enhance readability and maintainability of the code
updated Inflection class to improve its functionality to enhance the accuracy of inflections by providing better user interaction
add locale and locale getter / setter methods in EvaluationContext . java to enable flexible locale management within the application
removed unused import of Plugin in SummaryPrinter . java to clean up the code and reduce unnecessary dependencies
added a break statement in DrawerActivity . java to prevent fall - through to subsequent cases for improved control flow
updated import statements and modified debug log message format in MongoQueryCreator . java to improve code clarity and ensure correct query object retrieval
ww - 2792 add configurable loggerfactory via system property xwork . loggerfactory
modify adminAddPeerFailsWhenP2PDisabledAcceptanceTest method names to include " targetNode " and " inputNode " to improve clarity and accuracy of method naming for better debugging
polish ` ` define bean name in conditional on missing ' '
fix http : / / issues . apache . org / jira / browse / amq - 4213 - fix getparameterizedpstore method to always return a value
changed the access modifier of the deleteFiles method from public to private to restrict visibility to enhance encapsulation and restrict access to the method within the class
replaced instances of ` Provider ` with ` ServiceProvider ` for improved clarity to enhance code readability and maintainability by using more descriptive class names
remove runtime warn for illegalaccessexceptions during polyglot call .
added checks for toolchain creation in AbstractCell and DefaultToolchainProvider classes to ensure correct validation of SDK changes when toolchains are present
remove add context from engine if context local initialization fails .
( chore ) camel - check - infra - plugin : use contains ( ) instead of indexOf ( )
updated linker flags handling in C++ library descriptions to ensure correct linker flags are used to build shared libraries
refactor methods to use a single ` updateRecentsRotation ` method instead of ` onConfigurationChangedInternal ` to improve code readability and maintainability by reducing redundancy
updated listener types to use wildcard generics for better type safety to enhance type safety and eliminate unchecked warnings related to specific implementations
abstractblockchain : print header ` ` a ' ' instead of ` ` a ' ' for debug purpose .
fix ( messagestore ) : use getstorepathphysic ( ) instead of getpathcommitlog ( ) ( # 2935 )
[ java ] bind to jvm gc metric before call bindto ( ) .
add get message count and modify duration calculation in compactionlog .
added @ Deprecated annotations to multiple classes to mark these classes as outdated to indicate that these classes are outdated and should not be used in future development
added methods to check the presence of a system UI object and execute keyboard commands in the AbstractLauncherUiTest to improve testing capabilities for system UI interactions by executing keyboard keyboard events
changed variable from static to instance for logger and sessionIds in SessionRegistryImpl . java to improve memory efficiency by preventing unnecessary static reference to logger
return false when cookie - removeall be call even if the store be empty .
add more logging to world state ( # 6022 )
fix # 3072 - change gettext ( ) to accept charsequence
[ java ] ignoring again a test fail because of marionette regression
added a finally block to handle IOException during connection returning to ensure that the connection is closed properly to prevent potential resource leaks
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and introduce ` WindowsCreateProcessEscape ` for better clarity to improve code readability and distinguish between Windows - specific process escape functions
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety during shutdown and maintain accurate thread management
refactor caching logic to use ` transformBuildResultAsyncIfNotPresent ` and ` wrapWithTracingAndCancellation ` instead of ` transformBuildResultIfNotPresent ` to improve asynchronous handling and enhance code clarity
add updatefirstlineshowing ( ) to fix drag - select text out of the area ' s bounds .
added Hadoop file path configurations for mapreduce and staging directories to enhance configuration management for mapreduce operations using Hadoop
refactor graphics configuration retrieval logic for clarity and efficiency to streamline the process of obtaining the graphics configuration and enhance readability
tika - 2776 -- enable oom by default in tikariditestbase + improve test
camel - core - optimize pipeline eip to reduce object allocation .
modified PrintTagList . java to enhance parser file handling and print tag output to improve clarity and functionality of tagging based on user input
updated SQL parsing to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` and added a new test case for alias handling in InsertTest to ensure correct SQL syntax and validate alias parsing functionality
[ amq - 7463 ] fix test that use org . apache . activemq . broker . broker . adminview . drainqueue ( ) when a test end up
[ java ] update startfromtruncatedrecordinglogtest to wait for cluster ready .
updated the arc calculation in LineBorder to use a fixed value of 0.2 f to ensure consistent rounding behavior for line borders
added check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to ensure that galleryImages is not null or empty before proceeding
add the DEPLOYMENT _ ID column to the database change log history service to ensure the deployment ID is properly stored in the database
pdfbox - 4892 : correct package name , a suggest by ralf hauser
removed the ' moreColumns ' parameter from the ` canUseIndex ` method and related calls to simplify the method signature and improve readability by removing unnecessary complexity
camel - 5480 : quickfixjcomponent . getengine ( ) should not call component . getengine ( ) if engine be null .
added displayZoomControls property and modified setMixedContentMode method to use mixedContentMode instead of mixedContentMode to enhance flexibility in managing content zoom settings dynamically
add corporea block and slab block to corporea spark . close # 861
doc : document the need for non null argument in connectionfactory . getconnection
added EnableDisableMenuItems ( ) method to GpsMainActivity for menu item toggling to improve user interface responsiveness based on logging settings
updated the message displayed for an empty favorites list from ` server _ search ` to ` filter _ list ` to accurately reflect the functionality of the list in the user interface
hhh - 16936 do not use @ serviceregistry annotation on @ test method in entitytests
modified MotorMountConfigurationPanel to use subpanel in MotorMountConfigurationPanel to enhance component behavior during configuration management
replaced the use of System . lineSeparator ( ) with System . getProperty ( " line . separator " ) for consistency to ensure compatibility with different operating systems ' line separator
nutch - 1954 - add getter and setter for creator / subject in xwpf property , and a unit test for it
added a call to the superclass ' s doStop ( ) method in HandlerWrapper . java to ensure proper execution flow during the stop process
[ java ] fix ioexception when there be no valid cnc file .
replaced ` NonMarkedFoo ` with ` FooCommand ` and updated type constraints in tests to simplify the code structure and improve clarity by using a more generic command implementation
added jmod - related methods for handling JAR files in ClassFileSourceImpl . java to enable proper loading and manipulation of Jmod files within the specified directory
updated TreeBackedElement and TreeBackedEnter to use Nullable for canonicalizer to improve null safety by ensuring that canonicalizer is not null
replaced direct client ID setting with a public token request in Saml2TokenGranterTest and UserTokenGranterTest to streamline token request setup for improved readability and maintainability
updated array reference to use valueRangeObject instead of arrayLength to ensure correct data type is used for value range calculations
hbase - 20825 do n ' t re - assign stale data in zookeeper watcher
fix ( gl ) : add check for no context in the findcontext ( )
[ drools - 663 ] add activation test for ruleflowgroup be not active
added a return statement to HystrixDashboardConfiguration . java to improve method flow control by terminating execution under certain conditions
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to improve error handling and ensure proper failure reporting when a pipe does not exist
add cleanup to clientqueuedisruptiontest to cleanup resource properly
refactor : use defaultjavaprettyprinter instead of signatureprinter for getsignature ( # 1373 )
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
removed unused imports and added necessary imports in various classes to improve code clarity and maintainability by eliminating unnecessary dependencies
added a new class ` FakeBuildable ` that introduces a mock for ` Buildable ` to facilitate testing by introducing a mock implementation for buildable behavior
fix ` ` null ' ' check in inventory inventory , and use isempty instead of use null ( # 3740 )
updated variable names from " path " to " timeseries " in TSParser . java and adjusted corresponding test cases in SQLParserTest . java to ensure consistency with naming conventions and correctness in SQL parsing functionality
added a check to ensure the value is less than or equal to an positive value in the TubeCalc class to prevent potential errors caused by negative values in the calculations
update gc pinotfs to use new storage api ( # 780 )
removed redundant call to blockCloseVertxByName in TestHighwayTransport . java to ensure proper resource management and prevent potential deadlocks
# 801 - db - triggering - based - history - ddl - update migration script to support postgres
updated test to check for clustering engine with a different parameter value to ensure functionality with the new expected behavior of clustering engine
added an import statement for JUnit ' s Ignore annotation and applied an Ignore annotation to mark the test as ignored to prevent it from being refactored to the current test suite
added a new class ` ParserStateObjectInputStream ` and modified ` ObjectInputStream ` to use it for deserialization to exclude specific parser state classes from being deserialized
added null checks and initialization of objectQuotingStrategy in ChangeSet and DatabaseChangeLog classes to ensure proper handling of object quoting based on the change log context
updated Metainfo parsing method to use XML stream to improve compatibility with XML streams and enhance readability
deleted the CsrfControllerAdvice . java file to the functionality is no longer needed in the project
refactor endorsed argument handling to quote path lists to ensure proper formatting of paths in the AntCompiler
added scrim animation support for scrim functionality in the launcher to enhance user experience by providing smoother transitions when screen turns off
fix ( iotdb - client ) : fix integer overflow in type inferenceutils ( # 7112324 )
regenerate client with updated copyright year ( # 4382 )
added expected path type handling in WindowsPathParser and test cases in PathOps to ensure only valid path types can be used with both absolute and UNC paths
replaced an InetSocketAddress with a MulticastSocket instantiation in Promiscuous . java to simplify the code by removing unnecessary parameters and enhancing multicast handling
removed redundant calls to writer . close ( ) in TestWildcard . java to ensure proper resource management and prevent potential memory leaks
clone the nBits array before returning it to ensure that the original nBits array remains intact during processing
changed the visibility of ` deriveCollectorName ` from private to protected and added a test for custom collector names in ` TestProfilerCollector ` to allow subclasses to access the ` deriveCollectorName ` method and ensure the correct collection name representation
datadoc - 2043 fix miss type hint for write document .
replaced the existing factory creation implementation with performance measurement to enhance performance tracking during proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated error handling to include the exception cause in TCPConnection . java to improve debugging and error reporting by preserving the original exception context
refactor reinflateWidgetsIfNecessary ( ) method to the Workspace class for better organization to improve widget management by encapsulating widget inflation logic within the Workspace context
added a new file DeleteInsideFileDialogTest . java to test file deletion functionality to ensure functionality of the right - click deletion feature in the file dialog interface
* more responsiveness to auto - flush when the display be go into the screen
[ fix # 72504258 ] instructor : add a test for show a picture ( # 7358 )
added functionality to ignore tests based on specified run , method , and environment variables to improve test reliability by ignoring tests based on specified run and environment variables
removed the ' pointer ' parameter from the ' fling ' method in ScrollPane . java to simplify the method signature by eliminating unnecessary parameters
added null check for pageable in QueryDslJpaRepository to ensure safe retrieval of content when pageable is null
added javadocs and test cases for the ` computeMemorySize ` method in ` MemoryManager ` to ensure the fraction of memory is within valid limits and prevent runtime exceptions
camel - 11446 : fix test which randomly fail on slow ci server .
updated SnowballAnalyzer . java to improve functionality to enhance performance and maintainability of the code
updated the handling of the previous index in StreamingAggTemplate . java to ensure proper indexing state management during batch processing
replace assertion with an explicit throw in case the plugin be n ' t null - check .
added a new method ` stream ( TableIdentifier < ENTITY > tableId ) ` to ` StreamSupplierComponent ` to provide a standardized way to stream entities with defaultIntensity
updated logging messages to clarify the purpose of the file state and add sleep for improved debugging to enhance logging accuracy and ensure smoother transitions during file management
add newinstance ( ) method to InjectorProxy and setaccessable ( ) , fix up dependency issue
[ flink - 29181 ] [ python ] fix closed stream in streaming create function
add test cases for show create table , create table , and alter to ensure correct parsing and handling of SQL statements
change return value from null to ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an immutable list instead of null
update test data to use Quality Distribution instead of DeliberateError to improve clarity and accuracy of test cases
updated WebSocket connection logic to handle disconnection states and improved socket connection management to enhance stability and error handling during WebSocket connections
sec - 477 : remove any attribute that be n ' t need anymore . this should help in the future .
hbase - 21635 fix flaky testregionreplicareplicareplicationendpoint
added PMS configuration setup in FormatRecognitionTest . java to ensure proper setup for the format recognition feature
create ovum data disk template in the state machine only if the template be create .
updated imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests to migrate to JUnit4 and improve test structure for better organization
added multiple @ Override annotations to CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method overriding and maintain coding standards
updated metric table and views in AppendOnlySchemaIT . java for consistency to ensure uniformity in metric value definitions and improve test coverage
added a check to ensure deleted document count matches segment document count to prevent corruption by throwing a CorruptIndexException for mismatched document counts
add some extra method in the gui logger for good debugging .
bugfix : increase filament length to 0.9 because shorter length be needed for staves w / no starting barline
set handleFileUploads to true in VertxPlatformHttpServerConfiguration to enable file upload handling by default
added a test method to verify default access deny handling to ensure that the filter correctly handles case - sensitive methods in CSRF protection
remove unnecessary static final field in hotspotobjectconstantimpl . getfieldvalue ( )
renamed the method ` add ` to ` addFrequency ` in multiple classes to improve clarity and consistency in method naming conventions
fix : add watermark to fileio to comply with documentation .
fix bug in sqmsonctestatement # registercopy ( ) ( # 4744 )
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable handling of SQL result set metadata in tests
updated the library command to include the project filesystem root path to ensure the correct root directory is used for generated JavaScript libraries
updated the position of the BasicSlider in the RailButtonConfig panel from 180 to Math . PI to ensure proper positioning of the BasicSlider in the user interface
fixed draw edge in overlay and save an item via a timers . run , not the executor . submit
added expressionLanguageSupported ( true ) to KerberosProperties . java to enable support for SQL language in Kerberos configurations
removed conditional checks for remoteMountPointComponent and streamlined rotation and scale settings to simplify the code for better readability and performance by removing unnecessary checks
updated the setupViews method to accept a ScrimView parameter for better state management to enhance UI responsiveness by integrating scrim visibility during transitions
[ flink - 25952 ] [ statebackend ] add support for periodic materialization in changelog state backend
fix # 135 - add value to list < p > tag and set a value in the value
test for chunking http server and add test for head request
[ jav - 217 ] add bsu to check router answer ( code review feedback )
set content - type to application / x - www - form - urlencoded in search request unit test
camel - 14263 : camel - example - maven - plugin to generte spring - boot tooling metadata to fool java editor to have code completion for end user .
replaced SQLFeatureNotSupportedException with a warning log statement for ignored operations in PhoenixResultSet to improve error handling and provide better logging for ignored operations
fix for issue 1449 : android daydream never start listen to it .
fix a typo in sulong of segment data ( # 1421 )
removed the boolean parameter ` false ` from ` getDepositAddresses ` calls to default values in ` KrakenAccountService ` to enable the use of default values for deposit address retrieval
hbase - 7934 tablemapreduceutil do n ' t include prefixtreecodec in hbase - prefix - tree ( nick dimiduk )
added error handling for back navigation in DesignerActivity to ensure proper user experience when the inflation has failed
renamed PushbackInputStream . java to clarify functionality to enhance code readability and maintainability
make loweringphase schedule to be pluggable ( so that case insensitive )
updated error message resource from ' download _ folder _ failed _ content ' to ' sync _ folder _ failed _ content ' to accurately reflect the functionality of syncing folder failures
fix # 1885 - handle new line end for old build
updated the way deleted documents are retrieved in ReadTask . java to ensure consistent handling of deleted documents and improve null checks
resolved - issue batch - 1437 : simplebatchnode . settransformrefresh ( ) incorrectly set refresh flag to rb _ transform .
[ gr - 30727 ] change isguaranteedsafepoint to isuninterruptible for compatibility .
fix ( glfw ) : call glfwgetwindowsize callback for window size
updated translation calculations and variable names for clarity in LauncherAppTransitionManagerImpl to improve code readability and align the animation duration based on screen direction
updated ` LiteralNode ` implementation to use ` NullLiteralNode ` instead of ` NodeLiteralNode ` and modified the static methods accordingly to enhance type safety and functionality by accommodating null values
added a ` setLength ` method in both ` FSDirectory ` and ` IndexOutput ` classes and modified the file length handling in ` CompoundFileWriter ` to ensure accurate file length management and prevent data loss during file operations
updated AndroidNdkScriptGenerator to check for the existence of " AndroidManifest . xml " and modified AntScriptGenerator to include " memcpy _ wrap . c " to ensure proper handling of classpath resources in the generated Ant script
camel - 16936 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of sourcesource , to avoid bucket copying .
added permission check for " * " in RuleBasedAuthorizationPlugin and refactored collection request handling in TestRuleBasedAuthorizationPlugin to enhance authorization handling and improve code readability
updated ZookeeperClientServerRegisterRepository to improve data handling and event type management to enhance the robustness and clarity of client registration process
renamed methods and variables related to deep stubbing in the ReturnsDeepStubs class to improve clarity and consistency in the mocking framework
fix exception when getcallvalue ( ) return zero - length byte in contract
fix stringindexoutofboundsexception when log invalid date ( # 4029 )
updated the ` mapPBEAlgorithmToOID ` method to return the algorithm ID instead of returning null to improve accuracy of algorithm retrieval by using the algorithm ' s oid
tmi - tiff : fix reading of large tiff value . no functional change .
add parameter validation for job parameters in CommandLineJobRunner to ensure valid parameters are provided to avoid runtime errors
update assertions in SmtpTests and MailTests to remove newline characters to simplify the output by removing unnecessary newline characters
fix inspection violation : lambda expression be n ' t lambda expression .
replaced synchronized access with an AtomicLongFieldUpdater for lastSequenceId management to improve concurrency handling and prevent potential race conditions in sequence ID generation
added a new file ` Test . java ` containing a static method ` sum ( ) ` to calculate the sum of values based on their values to provide a utility for calculating the sum of values while providing a utility for debugging purposes
updated configuration to use R for maxSdk version compatibility and modified variable visibility in WifiUsabilityStatsEntryBuilder to ensure compatibility with newer Android versions and improve encapsulation
added a new Java class named Solution that implements a sorted list of queries to determine if a query results are valid based on specified criteria
apply patch from jun rao ; patch by jbellis
updated taskbar configuration logic to ensure correct behavior based on screen orientation changes to improve user experience by ensuring correct taskbar updates when orientation changes occur
refactor SyncFutureCache . java for improved synchronization logic to enhance performance and reduce loading times
updated DEFAULT _ DUBBO _ PROTOCOL _ VERSION and LOWEST _ VERSION _ FOR _ RESPONSE _ ATTATCHMENT from 2.0 . 1 to 2.0 . 2 to incorporate new features and improvements from 2.0 . 2 to 2.0 . 2
fixed bug 1114026 - uselessstringvalueofrule no longer throw npes at various point .
add a new test method ` testEllipseNoseconeDrag ( ) ` to ` SymmetricComponentCalcTest . java ` to ensure the correct calculation of the elliptic drag behavior in the rocket
add target type shard size to hollowproducer ( # 1672 )
add two new version identifiers " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to ensure compatibility with the latest configurations
refactored CompilationTask class to improve code readability to enhance maintainability and simplify future development
updated test cases to remove redundant database reference and adjusted parameter handling in DDLTask to improve code clarity and ensure accurate testing of database functionality
added a call to clear the database change log statement with a specific Liquibase catalog and schema to ensure proper cleanup of database entries in the database
added version handling to ` CallClient ` and improved path comparison logic in ` CallPath ` to ensure accurate URL construction and equality checks based on version information
updated error messages and added synchronization and closed state checks in PhoenixDriver . java to improve clarity of exceptions and ensure proper resource management when the driver is closed
* fixed typo and refactoring of o x .
added cleanup after each test and modified FolderPickerActivityIT to extend AbstractIT and implement ScreenshotTest to ensure proper resource management and file handling during tests
[ gr - 27138 ] respect devmode in native - image generation .
added validation for the length of the copy in StringHelper to ensure the method handles cases with leading and ending quotes correctly
refactor JpaQueryCreator to use a new type constant for NOT _ CONTAINING and add a new test method in UserRepositoryFinderTests to improve code clarity and ensure correct behavior of query methods involving not - containing keywords
guacamole - 220 : do n ' t push down internal retry transaction if durdy be set to too long .
added a dispatch method call to P25MessageFramer . java to improve message processing for better performance
added null checks for handler before invoking checkClosed ( ) in WebSocketImpl . java and created a test for clearing client handlers when the socket is closed in WebsocketTest . java to ensure proper handling of socket closure and verify functionality when the server is closed
( scott phillips ) do n ' t claimed task in discovery - test , but consider indexablepooltask type in the context
updated widget padding calculations to use the widget ' s padding from the Launcher class to ensure consistent widget rendering across different platforms
added a method to hide all apps in the TaskbarUIController and updated the closeOverlay method in BaseActivityInterface to improve user experience by allowing users to close the taskbar effectively
removed the synchronized keyword from the launch method and changed the sleep duration to a join call to improve thread management and simplify the launching process
update calculations for awt point to correctly account for zoom levels to ensure proper positioning relative to the canvas ' s zoom level for improved user experience
replaced notificationManager . notify with startForeground for notification handling to improve code readability and ensure foreground updates during upload progress
fixed bug 1244428 - excessivepubliccount no long report public static final field .
hbase - 26951 thrift - client should retry after retries ( ted yu via ashutosh chauhan )
change log level from info to debug for Half offset logging to reduce log verbosity and improve performance during half offset operations
do n ' t crash when a signing key resource can not be find .
added the methods to retrieve market summaries in the Bittrex market data service to enable users to fetch tickers directly from the market data service
fix entityentry enum lookup ( fixes # 2129 )
give the endpoint type a instance of the ws endpoint , so it can be unboxed .
added additional Unicode characters to the FileUtils class to ensure proper handling of Unicode characters in the file system
added resource stylesheet handling and updated ResourceService to utilize ResourceHttpContent to improve resource stylesheet management and enhance content caching behavior
added a call to clearIndex ( ) in TestFiltering . java to reset the index before processing new filters
changed the method call from ObjectParameterStrategy to PointerParameterStrategy to ensure compatibility with pointer handling instead of object address
updated the condition in CreateSequenceGenerator to check for CockroachDatabase instead of PostgresDatabase to ensure compatibility with Cockroach ' s sequence generator
revised conditional check for the name of the object stream class to simplify the logic for identifying string types
fix : replaces unsatisfiedlinkerror with symbolNotFoundError
introduce support for binary response with only one field .
added a new case ` PING ` to ` WebSocketImplBase ` and a test for it in ` WebSocketTest ` to enhance WebSocket control capabilities and ensure proper handling of ping messages
updated NON _ IDENT _ ESCAPES string to include an hyphens to ensure proper handling of special characters in regular expressions
fix # 1515 - dnsresolverprovider do not use dnsservercache for min / max ttl
added a conditional annotation for MessagingTracing in TraceMessagingAutoConfiguration to enable tracing features only when messagingTracing class is present
mondrian : fix for http : / / issues . apache . org / jira / browse / amq - 3870 - mysql dialect can not properly quote store name , but fetch in a more efficient manner
updated import statements in IDelanguageClientImpl , EditorTextActionMode , and IDEEditor to reflect new structure to ensure correct usage of sora features and maintain code consistency
fix for tika - 843 : lucene ' s xml lightweight parser do n ' t handle close tag correctly .
remove visibility setting for TouchCharInput to improve user interface responsiveness
[ fix # 725 ] prevent npes from load the group when the current thread be null .
added conditional checks for slot assignment in JSObjectLinker . java to ensure proper handling of non - positive indices when setting the slot
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to initialize the suffix variable to enhance flexibility in generating different lengths and improve code clarity
mark the SecurityConfig class as deprecated to indicate that this class should no longer be used in future development
added @ Deprecated annotation to multiple classes to indicate that these classes will be removed and should be removed in future releases to encourage the use of alternative implementations
deleted the JoglDebugAdaptor class and refactored its usage in RocketFigure3d . java to eliminate unused code to streamline the project
add tostring ( ) for extrafieldspropagation to make it debuggable ( # 3259 )
update pending intent in FileDownloader and FileUploader for notification handling to ensure that the notification updates the current activity
modified the ` nextOrd ` method to use a boolean flag for state tracking to improve efficiency and prevent unnecessary calls to ` nextOrd `
refactor DateTimeFormatter class to improve date handling logic to enhance code readability and maintainability
added a new property for " DnD . Autoscroll . initialDelay " and " Shell . shellFolderManager " in WToolkit . java to ensure consistent configuration for application settings
added null and empty checks for administrator credentials in KerberosOperationHandler to ensure proper handling of null or empty principal inputs
added a constant for maximum width and updated width calculations based on device profile configurations to ensure proper width sizing for tablet and two - panel devices , improving layout consistency
pixeldensity ( opengl ) : fix to use sketchwindowcolor
updated Hashing class to improve hash function efficiency to enhance performance and reduce memory usage during hashing operations
updated the ` accept ` method in ` FileSenderFactory ` to use ` Files . getBaseName ( ) ` instead of ` File ` to improve clarity and accuracy of file name checks
added string resource for user info in the UserInfoActivity to enhance user visuals for improved user information
removed unnecessary null check for ` type ` in ` J . java ` to simplify code and improve readability by eliminating unnecessary dependencies
updated ACTIVITY _ START _ DELAY from 500 to 800 to increase the delay for activity starts to improve user experience
added a static final web app home path and updated system property settings to improve maintainability and consistency of web app setup in the test environment
reset motor selection when a motor mount change ( # 780 )
added import for BufferUtil and cleared the buffer to enhance buffer management
fix wrong originatorid use for notification rule
ambari - 24986 . change authorization to authentication in ambari . properties ( dlysnichenko )
added methods to delete exchange and queue entries in DurableOnTransient . java to ensure proper cleanup of exchange data and optimize resource management
[ hotfix ] [ test ] do n ' t use timeout to wait for slot allocator in bulkslotproviderimpltest
[ java ] ping service should report the cause of the connect to the server .
updated CompositeHandlerAdapter . java to improve functionality to enhance performance and maintainability of the code
update Quartz2Adapter . java to modify its functionality to enhance performance and maintainability of the code
fix intellij warning when try to determine if a member be not find .
update Spring Security schema version from 6.2 to 6.3 across multiple files to ensure compatibility with the latest Spring Security features and updates
updated method signatures and implementations in ConfigMappedNameResolver and DiscoveryClientNameResolver to use Args instead of Helper to enhance argument handling and improve concurrency management in the name resolver
added conditional handling for non - empty annotations and introduced method to determine earlier position to ensure correct positioning of annotations while maintaining compatibility with existing code
add " com . sun . naming . internal . " to package imports in CheckPackageAccess . java to ensure access to internal packages
changed the default value of strict from false to true in StaxEventItemReader . java to enable strict mode for the event item reader
lucene - 5875 : fix broken bm . next ( ) with incomplete index
refactor ActionResetingPool class to improve code readability to enhance maintainability and facilitate future development
added a check for the X - Y color mode before converting color values to HSSB type to ensure correct color processing based on whether the state is in the XY mode
updated folder creation logic to accept an integer array of target cells instead of a fixed view to improve folder positioning accuracy and accommodate different cell dimensions
replaced direct calls to ` activity . showLoadingDialog ( ) ` with a call to ` FileDisplayActivity ` to streamline loading dialog handling across different activities
added a null check for uigestureFile before loading XML logs to avoid potential NullPointerExceptions when accessing the file
updated field naming policies to use Locale for case - sensitive comparisons to ensure that field names are not matching regardless of the default locale settings
fix an issue with the listener , xml test now pass
added a new ` loadWithNewGlobal ` method and updated references in ` Global . java ` to enhance functionality and maintain consistency in global context loading
added JSON serialization and deserialization methods to StarTreeIndexSpec class to enable proper handling of StarTreeIndexSpec objects in JSON format
added ObjectPostProcessorConfiguration import to HeadersConfigurer and OAuth2 login configuration to enhance security configuration management for object post - processing
replace single quotes with single quotes in file and file handles to ensure consistency in handling backslashes in file paths
[ drools - 687 ] avoid npe on insert with null
solr - 3755 : work around test bug ( i . e . too many segment ) that be unclear .
added test case for issue http : / / issues . apache . org / activiti / browse / amq - 4498 , message boundary event on subprocess with multi - instance subprocess
renamed parameters and methods for clarity and consistency in method naming across multiple classes to enhance code readability and maintainability by using a more descriptive parameter name
http : / / issues . apache . org / jira / browse / amq - 4213 - fix memory leak in amq - 4213
modified slot handling in Secmod . java to use integer identifiers instead of boolean flags to improve clarity and maintainability of slot assignment logic
added alignment support to ` Layout ` and modified ` startRenderering ` method to return true to enhance user experience by allowing customizable layout behavior
[ hotfix ] [ test ] ignore unalignedcheckpointitcase until after fix
6738524 : jdk13services allow read access to system property from untrusted code
* do n ' t insert the keyword into the map if the same value multiple time
camel - 8709 : fixed multicast eip to ensure size be correctly set of key - value pair in collection mode .
remove unused / unused code from worddictionary
escape character in flavor statsd line ( fixes # 644 )
usability improvement : allow to specify the udp port for member .
rename ` OperatorMulticast ` to ` OperationMulticast ` across multiple files to clarify the purpose of the class to better reflect its functionality
updated the delivery timeout duration in EventBusTracerTestBase . java from 1 to 100 milliseconds to improve test reliability by allowing more time for message sending to deliver
added try - finally block to ensure latch is always decremented after failure to improve resource management and prevent potential race conditions
[ scb - 1635 ] memory leak during sessionfactoryserviceregistry destroy ( # 1635 )
fix test to use jwt _ token from local storage instead of local login
add miss test for map of tensor and dim array ( # 1351 )
added a task stack listener for managing task stack visibility in RecentsView to ensure proper handling of task stack visibility during animations
fix for pdfbox - 5603 : avoid regex compilation in defaultsplitcharacter if the output contain a dash
camel - 8293 fixed the npe issue of cxf component with thanks to krzysztof
replaced a separate code block for managing pending animations with a separate method ` endPendingAnimation ` to improve code readability and reduce duplication
add log to debug playtime crash and band aid fix for release build .
added a conditional check for BailoutOnException before throwing a RuntimeException in C1XCompilation . java to improve error handling by throwing a RuntimeException during exception compilation
updated default values for signup and passwd in Links . java and modified assertions in IdentityZoneConfigurationBootstrapTests . java to set these variables to null instead of a hardcoded value to streamline the code and improve clarity by using null instead of hardcoded values
[ hotfix ] [ runtime ] fix typo in slotprofile
small refactoring in timeconverter to make it easy to get the format object out of the box .
added NoDataContainer to the GeoTiffReader and its test to ensure the NoDataContainer is properly set for rendering images
[ gr - 39982 ] improve error message for llvm .
replaced ` out . toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` for string conversion to improve memory handling and prevent potential memory leaks
testpathchildrencache : fix flaky test by wait for connection state to connect
added null handling in ArrayTypeHandler for better error handling to ensure proper array retrieval and prevent potential null pointer exceptions
jakarta : update to jakarta - regexp to support jakarta 4.1
updated pick method to use Application class instead of null to ensure proper application type is used when picking an application
[ drools - 5845 ] avoid npe on a mutable global ( # 2950 )
replaced Preconditions with TransactionUtil for asset name and description validation to improve asset name and description validation logic
fix copy pasting of object in av ( via ` ` ev ' ' )
updated property names and error messages in LGWebOSActions and LGWebOSUpnpDiscoveryParticipant , and updated status handling in LGWebOSHandler to ensure consistency with API naming and improve clarity in status reporting
replaced node addition methods with bulk addition methods for seeds , active , and trust nodes to streamline node configuration for improved readability and efficiency
improve error message in basetokenstreamtestcase to clearly report the cause
log4j2 - 3633 add logic to modify the modulus when find a next time in a calendar
added methods for item click and inner text retrieval in ShadowAdapterView and ShadowListView to enhance functionality for interacting with real adapter views while maintaining text
pdfbox - 2373 : restore backwards compatibility after change in pdfbox 1.7
add PE graphdecoder . aftermethodscope ( ) to facilitate debugging
replace direct access to ` getSource ( ) ` with ` getSession ( ) ` in ` HttpSessionDestroyedEvent . java ` and add unit tests for security contexts to improve clarity and ensure correct retrieval of session attributes and enhance test coverage
added a test for changing the service name in Zipkin using a manually provided name to ensure that the tracer correctly reflects custom service names in Zipkin for improved observability
added logging statements and spooling logic to JavaInMemoryFileManager and JavacToJarStepFactory to improve debugging and configurability of javac behavior based on debug conditions
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to improve clarity and consistency in naming conventions
test fix : increase timeout in try - lock
updated ConfluentSchemaRegistryDeserializerProvider to include DEFAULT _ CACHE _ CAPACITY and added multiple overloaded methods to improve flexibility and maintainability of schema registry retrieval process
renamed JCheckBox ` remind ` to ` checkAtStartup ` and updated tooltip text to improve clarity and localization support for user input
added new method calls for handling various parameters in NodeGenerator . java to enhance the functionality and flexibility of node generation based on various parameters
hhh - 15691 fix up check for ` ` transient ' ' constraint in cascading action
added methods for handling proto properties in ScriptObject to improve flexibility and maintainability of script object manipulation
use mmap read mode by default ( # 1935 )
added import for ByteArrayTemplate and updated logic to handle byte type to improve support for byte data type in array template processing
added Hipchat as a service provider and configured CasSamlSPHipchat to enable SAML integration with the Hipchat service provider
replace List with HashSet for commandRegistryUrls and update resource handling to improve performance and ensure uniqueness of command registry URLs
updated warning log message format to include the current context and context to improve clarity of warning messages for better debugging
( chore ) camel - sftp : do not check if login be successful
camel - 4209 : fixed regression in activemq when session be not transacted .
cloudstack - 10363 : fix string format error in vmwareresource
updated method signatures and documentation in Timers . java to improve clarity and maintainability of the code
replaced OVERWRITE _ EXISTING with APPEND _ TO _ ZIP in DefaultDefectReporter . java to update output stream handling to use the new class for better packaging
added multiple deprecated constructors to the UAX29URLEmailTokenizer class to ensure compatibility with the latest and current LUCENE standards
removed the @ Override annotation from the ScriptObject class and updated assertions in ContextTest to simplify the class implementation and enhance clarity in test assertions
[ hotfix ] [ runtime / eventbusmetrics ] fix typo in eventbusmetrics javadoc
( scott phillips ) add eperson locale to i18nutil
no - jira add schema ensure after property set
removed null check for pgTypeName before putting it in the map to simplify the code since the null check is unnecessary
added multiple server configuration to the ScopedHandlerTest class to ensure proper handling of server connections during tests
fix calltimeoutexception bug ; call timeouts should not increment retry count and should not be delegate to caller .
added a check for empty password in RestLoginProcessingFilter to ensure that an empty password is handled correctly in authentication
simplify the permission check by removing an unnecessary comparison to enhance clarity and maintainability of permission validation logic
renamed charset variable and methods for clarity in AbstractCompiler and ICompiler to improve code readability and maintainability by using more descriptive variable names
changed the data type of postLogin from byte array to String in HostBean and TerminalBridge classes to simplify the handling of postLogin data and improve performance
refactor simulation handling in GeneralOptimizationDialog to improve clarity and reduce unnecessary complexity to enhance maintainability and reduce unnecessary complexity in simulation management
camel - main - added contextreloadenabled / contextreloadenabled property . thanks to jens kleine - herzbruch for the patch .
updated logging settings in CommonTestUtils for consistency and clarity to enhance readability and maintainability of log messages
refactor PrologSizeSanityCheck class for improved readability to enhance maintainability and clarity of the code
refactor NearbyListFragment to improve code readability to enhance maintainability and simplify future development
only reset request body ' s content - type if the content - type be not mark
ensure we be not embed neo4j when enable ( # 7379 )
use health component and move to not throw npe when player be not in prefab
refactor RandomLoadBalancer to improve weight handling logic to optimize load balancing to avoid potential out - of - bounds errors
refactor cache string handling and update test method names for clarity to improve code readability and ensure consistency in timestamp validation
added documentation for sorting properties in ApacheHttpClientMediaWikiApi . java to clarify sorting behavior for media requests
chore ( core ) : replace checktransactionsynchstatus ( ) call with pulsetransactioncoordinator ( ) in session
pipe : enable lock for task coordinator ( # 10789 )
updated DependencyJar instantiation to conditionally use preinstrumented jars based on system property to improve flexibility in specifying Android SDK versions based on user settings
inverted the condition from ` if ( ! isSilent ) ` to ` if ( isSilent ) ` in ExecDriver . java to ensure that the logic correctly handles silent execution mode
added checks for default and required fields in IndexSchema . java and a corresponding test case in BadIndexSchemaTest . java to ensure proper error handling for invalid attributes on dynamic fields
nifi - 259 : fix potential race condition in quorum repair
replaced ImmutableSortedSet with Iterables for system include root management to improve readability and maintainability of the code
refactor ` AdaptableX509CertSelector ` by initializing start and end dates without default values and introducing flags for sensitivity to enhance clarity and control over sensitive key identifiers and serial numbers
no effective change - code cleanup , remove unnecessary try / catch
added @ Deprecated annotation to GuiScreenEvent . java to mark GuiScreenEvent as obsolete due to removal in 1.16
removed redundant methods for adding and removing categories in CategoryEditSearchRecyclerViewAdapter to streamline the code by reducing duplicated functionality
# 427 - enh : add type parameter to bean cache ( # 427 )
replace the direct assignment of component properties with an iterator - based loop to improve readability and maintainability of the code
refactor JavaCompilerService to change the compiler field and add a destroy method to improve thread safety and ensure proper cleanup during compilation tasks
refactor task handling to use a Supplier for better flexibility to improve performance and reduce boilerplate code
fixed possible concurrency issue with wan executor .
added null checks for tPartition and table locations in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to ensure safe handling of null values and improve driver creation consistency
refactor code to use lambda expressions for thread creation in RemoteServiceRegistry to improve readability and reduce boilerplate code
added unit tests for file deletion functionality in ` FilesTest . java ` and implemented a method to delete files in ` Files . java ` to ensure proper error handling and resource management when deleting files
removed exception handling around socket closure in ServerSocketAdaptor and SocketAdaptor to simplify code by directly closing the socket connection without unnecessary exception handling
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to ensure correct class identification for logging functionality
fix exception when add a non - existing work directory in the work directory list .
added null check for itemInfo and set insets in Workspace to ensure proper handling of null values and maintain insets consistently
changed the access modifier of the GeneratedEntityDecorator class from public to private to enhance encapsulation and restrict access to the class
removed unnecessary URL links from the Java - Durl configuration to streamline configuration for improved clarity and maintainability
apps - 822 fix symbolic detection for min / max command
removed the registration check and registration of the client container in JavaxWebSocketClientContainerProvider to streamline the initialization process and ensure proper resource cleanup
change condition from checking for null to checking if type is null or is present to ensure proper evaluation of the condition under specific conditions
ensure the datasource be clean up properly after each test .
added search functionality based on query parameters in RemoteBrowseHandler to enhance the dynamic loading of resources based on user input
change neutral button visibility from INVISIBLE to INVISIBLE to improve user interface clarity by hiding the neutral button
ds - 3295 itemdao : count all item in a single collection and include withdrawn
updated SQL string concatenation to include escaped quotes around the table names to ensure proper formatting of table names in SQL statements
added error handling capabilities to the CheckTokenEndpoint class to improve error reporting and provide better debugging for OAuth2 exceptions
refactor various Java classes to enhance code organization and clarity to improve maintainability and readability of the codebase
updated the RestTemplate and HTTP method in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to streamline the request handling and improve response validation logic
updated tooltip delay values and added tooltip text for SQL console items to improve tooltip clarity and enhance user experience with variable replacement
update ant task to junit 5 : it ' s now possible to run single test method only with testng or testng .
change the catch block from Exception to IOException in WorkerShellStep . java to improve error handling by providing a more specific exception type for IOException
[ hotfix ] [ table - common ] add experimental annotation to some code
update javadoc for streamcepstrumsource to clarify cepstrum behavior
added a check to ensure the index does not exceed the bounds of items to prevent index out of bounds errors
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure compatibility with Parenthesis ' s handling of expression types
added confirmation status to the DebugPaste command to ensure proper command execution and enforce that the debug paste action is confirmed to be executed
use orelsey for health and jersey endpoint id in the config ( # 1269 )
ticket # 4810 : initial focus of mathquill gesture if new creation mode
updated imports and refactored class names in GoBinaryDescription . java for improved consistency to enhance code maintainability and leverage new classes for better encapsulation
added conditional logic to retrieve the environment variable based on the presence of the " application . env " to improve configuration handling and ensure logback is available if available
refactor retry listener implementation from RetryListenerSupport to RetryListener across multiple test classes to simplify the retry listener implementation for improved maintainability
fix reporting of whole count with decimal ( # 498 )
[ zeppelin - 2381 ] fix nullpointer when contrib should not be null
replaced a loop with a do - while loop for appending a space in JUnitFormatter . java to improve code readability and ensure proper formatting
refactor how the elements are initialized in Subject . java to ensure proper handling of LinkedList instances based on class type
improve input resource error messages in StaxEventItemReader and StaxEventItemReaderTests to provide more informative error messages for clarity and debugging
* fixed multi - render test on window for fml
added an optional check for the current profile before looking up the client to avoid potential null pointer exceptions when the current profile is not available
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
added BigInteger operations to KeyStoreManager for various numeric values to enhance security by enforcing arithmetic operations on large integers
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java ` and ` MeshCollisionShape . java ` to ensure compatibility with the updated method for retrieving indices as lists
set process definition engine version to activiti - 5 ( # 2079 )
updated resource loader property names in SpecificCompiler . java for consistency to ensure uniformity in resource loading and improve strict mode configuration
[ java ] centrypointsnippets : check if a thread be attach to a detached thread before get current thread .
refactor GenericUDFMapValues to check for null maps before adding values to avoid potential NullPointerExceptions when accessing map values
polish ` ` replace ' ' with ` ` handlerhandlers ' '
add config option to turn on oil spouts generation ( # 486 )
fix import context cleaning , do n ' t wait for file to be update
make use of sm string placeholder to make i18n compatible .
removed unused imports from CRLDistributionPointRevocationCheckerTests . java to clean up the code and improve readability
updated ZipConstants and ZipEntry classes to include new constants and added a new import for zip - related classes to implement a more robust approach for managing zip file extensions within the application
updated the newFileSystem method to improve file validation and error handling to enhance robustness and provide clearer error reporting for invalid file paths
fix # 3546 : fix text position in ifcontrollerpanel ' s add condition ( # 3547 )
updated the connection initialization in FailoverUpdateURIsTest . java to ensure proper method overriding for better code clarity
added Gson @ SerializedName annotations for several fields in ServiceOsSpecific . java to enable better serialization and deserialization of JSON data for improved functionality
only delete the db entry if the file be delete successfully .
refactor multiple Java files to improve code structure to enhance maintainability and readability across the project
fix logic issue with ajp response with end - of - buffer message .
of - 1809 : admin console : properly stop and stop admin server
replaced the unregisterHandlers method with inline initialization of binaryConsumer and textConsumer to improve code readability and maintainability by reducing unnecessary method calls
added configuration properties for device ID transformation method , ID table , and log file to ensure correct configuration for ID table functionality based on external properties
reduced the number of documents from 2000 to 100 and updated core initialization parameters and added a new DelayingSearchComponent class to optimize test performance and accommodate a new search implementation
pdfbox - 3017 : fix test to avoid false positive
scriptbuilder : fix transaction . hashforwitness ( ) to correctly encode script .
updated the expression path in IndexSchema . java to include fieldType to ensure both fieldtype and fieldType types are processed correctly
added a new ` OptionCompleterTest ` class to test the usage of ` NullCompleter ` to ensure that the ` OptionCompleter ` class handles null values correctly and options
fixed checkstyle issue due to commit 0b6c540a0a0a0d0a60bea2fccfa0e
change data types of sourcePeerId from String to int in multiple classes to improve compatibility with larger integer values in data types
modified FtpHelper to conditionally upload files based on the presence of " . zip " to enhance file handling and improve error logging for upload processes
removed unused imports and updated reply button alpha settings in TweetFragment . java to streamline code and ensure consistent transparency of the reply button
[ java ] add a timestamp to the expected string in accesslogsupporttest . testshouldnotthrowafterexpiration to ensure that the generated value be consistent .
update marycachetest to use tmp / testfiles - deleteme to avoid collision with other test
remove null usage in settingimpl . subscribers , make it a no - op return true .
added a null check for the marshaller in AbstractSamlObjectBuilder and removed unnecessary static initialization in AbstractSaml10ResponseView to ensure that an appropriate provider is obtained and improve error handling during initialization
replaced printStackTrace ( ) calls with LogUtil . warn ( ) in DataBrowser . java to improve error handling by logging warnings instead of printing stack traces
added a check for the existence of files in dev mode and modified the asset serving test to ensure proper handling of static directory classpath when not in dev mode
[ hotfix ] [ runtime ] add rocksdbkeyedstatebackend . writeoptions to method in rocksdbkeyedstatebackend
fixed typo in corelabel ' s default _ format string .
use request . gethint ( ) to avoid warning
turn on altbn256k1 so that native altbn256k1 be the default ( # 1672 )
rename DuclsSandboxTest to SandboxTest to ensure consistency in naming confining to improve code clarity and maintainability by using a more specific class
update the javadoc for camel - cxf to be more clear about the cause
make the forwardpropagatetree public so that it can be use by other project
updated SQL query to include additional parameters for time filtering to improve query performance by optimizing query performance
[ mng - 5343 ] warn if file - based profile activation fails
refactor Style . java to improve code structure to enhance maintainability and readability of the code
added zoom functionality to ShareActivity to handle back key events to enable proper navigation to the FAB when the application is zoomed out
added logic to skip reading deprecated fields based on their annotation to ensure that only deprecated fields are processed during JSON processing
added animation listeners for managing visibility and hiding of send layouts in the LauncherFragment to improve user experience by providing smoother transitions and visual feedback
updated method signature for readTokenStorageFile in Utils . java to ensure proper functionality and maintain code consistency
added Progressable parameter to multiple createSequenceWriter and related methods to improve functionality and progress tracking during compression operations
[ hotfix ] [ runtime ] fix typo in sourcecoordinatorprovider
remove contribution and add color update when switch to sort
fix a bug in register template , can not find template adapter .
added a default value for dPath if it is empty to ensure the application uses the user ' s current directory as a fallback
fix : always set a default sample value of 48000 for e - ac3 joc .
remove unnecessary call to getdata ( ) since it be no longer need
refactor VerificationInOrderWithCallsTest . java for improved test coverage to enhance reliability of method verification functionality
updated the return statement to use the x - coordinate of the Y - coordinate instead of the z - coordinate to correct the positioning of the axes in the Quaternion class
updated COLLECTION _ DELIM string value from " colelction . delim " to " collection . delim " to correct a typo for better clarity and accuracy
add a test to make sure that the listener be correctly set up at the start of the server .
fix # 5555 : improve documentation for union type
added one - handed mode support to RecentsAnimationDeviceState . java to improve handling of one - handed mode functionality for better user interaction
added an overridden onDetachedFromWindow method to cancel running tasks and modified hardware layer creation to ensure proper cleanup of running tasks and maintain consistent hardware layer management
add more option to morfologikanalyzer to provide more information .
replaced multiple occurrences of count tracking with a single variable thrown to streamline exception handling logic for improved clarity and efficiency
changed the string format for the Gradle installation message from " debug " to an empty string to standardize the message format for better clarity and consistency
replaced AtomicReference with AtomicBoolean for tracking lock timeouts and anomaly detection to improve clarity in logging to enhance error handling and provide more informative feedback during isolation level changes
refactor tooltip text logic in ComponentTreeRenderer to utilize a dedicated method for setting tooltip text to improve code clarity and maintainability by reducing duplication of tooltip text logic
increase timeout in the await statement from 5 seconds to 10 seconds to allow more time for the zipkin server to setup in the test environment
added username and password retrieval in DeviantartRipper . java and updated cookie handling in DeviantartRipper . java to improve configuration flexibility and ensure proper age gate integration
replaced the list of GOOGLE _ GOOGLE _ SIGNATURES with a single key definition for better readability to simplify the code and improve maintainability by reducing hardcoded values
fix npe in importdirsolveallturtletest ( # 2214 )
add a method to notify window state changes in WWindowPeer . java to improve event handling for window state transitions and enhance logging
[ te ] return user - friendly description in group by response ( # 4359 )
fix for amq - 856 : use data . remove ( sel ) in userdata . removeall ( sel ) to return data . remove ( sel )
refactor getISO3Language method logic to handle cases with a single language and improve error handling to ensure correct language code is returned and enhance clarity in test cases
refactor change log parsing to use a dedicated factory method to improve code readability and maintainability
added a check to return early if screen pinning is active to improve performance by avoiding unnecessary processing when the screen pin is active
added functionality to display a string representation of the " No chart data available " text to improve user experience by providing context on the chart data availability
added synchronization to ensure that only one connection can be send , prevent potential race condition .
simplify ssl handling ; fix # 867
added HTTP header configuration to multiple test classes and updated header limits to ensure compliance with the latest HTTP protocol specifications
fixed - spring and localcachedmap . getkey and getentry method should be execute in redis cluster mode . # 3119
camel - 18825 : avoid load jpa component if they be not need .
physicscharacter : fix jumpspeed assignment to not fall .
added a condition to check if reparsedFunction is null alongside the existing syntax extensions check to ensure the function is only processed when reparsedFunction is not set
updated logging variable names to use uppercase naming conventions and refactored order handling in BitstampPusherService . java to improve code readability and enhance logging consistency
fix http and https url method for fileuploaddownloadclient
updated the method call from ` findOne ( ) ` to ` findOne ( filter ) ` in ` MongoDbTailTrackingManager . java ` to include a filter parameter in the query results
add test for reproduce issue # 2365 ( # 2536 )
add bound to the alpha value of the RecentsView to ensure the alpha value is within the valid range of 0 to 1
update string replacement syntax in ManifestReversion . java to ensure proper formatting of version strings in importPackage attribute
updated DataSyncConfiguration class for improved synchronization settings to enhance data synchronization efficiency and performance
added initialization of JavaSnippetRepository in JavaLanguageServer to ensure that the JavaSnippetRepository instance is properly initialized
modified the way sums are updated based on target dimensions to ensure that sums are updated correctly based on the current dimensions
danielwagnerhall : use the new url in the test data source , not the code base
camel - 9957 : upgrade camel - pgjdbc to 4.4 . 0 ( # 993 )
fix for tika - 1435 : upgrade rome to 1.5 contribute by johannes mockenhaupt < git @ jotomo . de > . this close # 16 .
fix transfer handler for empty content - length header
refactor dialog class for improved readability to enhance maintainability and ease future modifications
[ hotfix ] [ runtime ] remove unused constructor from enhancedruntimeexception
socketappendertest : fix thread issue on window
camel - 15736 : remove camel - builder - endpoint - dsl dependency for camel - endpoint - dsl
updated exception handling and improved method signatures in ByteArray . java to ensure compatibility with JDK 8 and enhance code readability
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve touch event handling to prevent erroneous input interactions
camel - 6770 fix the restlet domain service test ( # 4422 )
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify the method signature by eliminating unnecessary parameters
move module - info . java to test folder ( # 21743 )
[ camel - 19462 ] improved log information about miss source directory
updated menu item IDs from ` menu _ open _ web ` to ` menu _ mute _ hashtags ` to clarify functionality related to menu interactions in the user interface
renamed methods and constants related to node ancestor and descendant checks for clarity to improve code readability and accuracy in testing logic
fix potential crash when search and blocky be outside of the valid range .
[ iotdb - 4498 ] fix nullpointerexception in insertnode if partial insert fails ( # 8119 )
removed extraneous quotation marks from the end of a method to correct syntax and ensure proper compilation
[ flink - 30727 ] [ runtime ] make mailboxexecutor a protected method of abstractstreamoperatorfactory
hbase - 26905 use fixmetastate instead of settablestate in meta for secure test
updated mapping of meter IDs from a lambda expression to a method reference and improved print statement formatting to enhance code readability and provide clearer output formatting
blockjunit4classrunner : do n ' t pass a testclass to the forked runner , a they do n ' t exist anymore .
fix last event data not delete ( # 3560 )
updated calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to ensure consistent spacing for app display
[ hotfix ] [ core ] make coreoptions # parent _ first _ logging _ PATTERns public
lucene - 618 : fix booleanscorer2 to use ' this . doc ( ) ' instead of ' doc ( ) '
added a call to ` writer . forceMerge ( 1 ) ` in the ` TestMultiPhraseEnum ` class to optimize the merging process of multi - phrase pairs
add close to session implementation to avoid connection leak
updated the GetLocations class for improved functionality to enhance location management functionality for better user experience
pdfbox - 4892 : do n ' t print stacktraces to stderr , a suggest by valerybokov
replaced the handling of IOException with a more general ignore case to simplify error handling for improved readability and maintainability
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
ruby flavor : fix syntax error in repeat instruction
changed log level from warn to debug in DerbyDatabase . java and added null checks for username and password before putting them in info map to improve logging granularity and avoid potential null pointer exceptions
- remove unused cache configuration from nio2endpoint .
updated CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for better flexibility to enable better management of database resources and improve code maintainability
improve name of instructorfeedbackresultspageuitest and add helper view test
[ flink - 1867 ] [ table ] fix the regression of useEncodedQualifierlistoptimization
removed public access modifier from method declarations in multiple classes to enhance encapsulation by restricting method visibility within the same package
added a mechanism to cancel download tasks in FileDownloader to improve user experience by notifying when a download is completed
replaced method ` getOpenView ` with ` getAnyView ` and updated related calls to improve clarity in view retrieval logic and ensure correct view state handling
updated project version from 1.0 . 11 to 1.0 . 13 and corrected project version from 1.0 . 11 to 1.0 . 13 to reflect the latest release and ensure compatibility
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper execution of threads to prevent potential threading issues
updated GsonBuilder class to improve JSON handling to enhance performance and maintainability of JSON parsing
theorem proving : fix a npe because of npe
remove -- java . home . path option , rely on language hierarchies instead
doc : remove a confusing sentence from the javadoc ( # 1692 )
jbrules - 3533 : clean up session deletion code ( # 3611 )
doc : fix typo in invaliddocumentstoreapisource ( # 7041 )
updated JoinQParserPlugin and SolrIndexSearcher to handle empty results and improved error handling for join types to enhance code robustness and ensure proper handling of edge cases for join results
updated triggerMediaScan method to include file parameter to enable media scan functionality by associating the file with the specific file
removed unnecessary verbosity parameter and simplified the postTestResults method calls to streamline the code for improved readability and maintainability
updated custom G - code settings to retrieve text from the settings to ensure consistent text formatting for custom G - code settings
( chore ) camel - aws2 - x : use utf - 8 encoding for output stream
updated JsonElement class to improve data handling to enhance performance and maintainability of JSON operations
added exception handling for unsetting the sys property in TestBadConfig . java to ensure robustness by properly managing exceptions during testing
added a method to remove fragments and action bar in GpsMainActivity to improve the user interface by hiding the action bar when fragments are no longer needed
replaced instances of " = LRB = " with " ( " in spanishTokens ) " in TokenizerAnnotatorITest . java to standardize the token format for improved readability and maintainability
updated the handling of ranges in RemoteMediaHandler and RemoteRawHandler to use Byte directly to improve clarity and efficiency in parsing requests
updated G - code file path and modified logging statements in VisualizerCanvas . java , and modified GcodeViewParse . java to handle additional conditions to enhance functionality by adding additional g - code checks and improving output formatting
added new test cases for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " and updated existing ones to ensure backwards compatibility with new versions
adjusted formatting of the assertion method calls in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to enhance code readability and maintain consistency in formatting
added a condition to close the exchange client if the output stage is null and the query info is not done to ensure proper resource management and prevent potential errors during query execution
fix Integritycheck detect file lock if it do n ' t exist
added import statement for SolrClient and declared shardToClient as a Map to facilitate the use of SolrClient in the ChaosMonkey class
fix an npe in configurationactivator . getconfigured ( ) when fas be null .
refactor code formatting in NestedRepositoryTreePanel . java for consistency to improve readability and maintainability of the code
changed the constructor of ExtensionTypeHeader to be public and added a precondition check to ensure the type is within a valid range to prevent potential runtime errors
pdfbox - 4892 : do n ' t swallow ioexception , a suggest by valerybokov
make prometheus pushonshutdown default to true by default
added a new callback mechanism for handling context trigger errors and improved error handling in the ReactiveStateMachineExecutor to enhance error management and provide better error handling capabilities
add a new test for setting Python executable on the first path in BuckConfigTest . java to ensure that multiple Python executable settings can be set at the same path and to validate the configuration logic
added a default button to the root pane in InitialAccountRegistrationFrame to enhance user interface by allowing users to register the signin button
added a new configuration option for dynamic semi - joins in Hive and modified TezCompiler to utilize this feature to improve performance by reducing potential issues with semi - joins in map joins
add exception to the registrationrestrepository when the problem happen wrong
rename org . axonframework . util . reflection to org . axonframework . util because it be wrong
added a static method ` listableCollector ` to ` OidcIdTokenClaimCollector ` and created a test class for it to enhance the flexibility of claim collection in the OIDC context
remove the ` center ` field from various classes in the Circle , Polygon , and Rectangle classes to streamline the code by eliminating unused variables
simplify the conditional check for the pcollection variable to improve code readability and maintainability
update SslContextFactory configuration parameters to enhance security and compatibility with latest SSL / TLS standards
[ java ] remove max expiration value from configuration a it be not really useful .
updated the return value from " access _ confirmation " to " access _ confirmation _ error " in AccessController . java to accurately reflect the error context for access confirmation errors
fix consumer classloaders be not set when restart rpc service ( # 11123 )
bug 56958 : improve performance of hssfsheet . shiftrows
updated rollover icon and pressed icon assignments in FontImage . java to ensure correct icon rendering when proper rollover and pressing
updated task translation handling in the TaskView and RecentsView classes to improve clarity and maintain consistent grid positioning based on task state
assertion # bylessthan : fix javadoc warning
added a check for null currentDateTimeFunction in multiple database classes to prevent potential NullPointerExceptions when it ' s not set
added an anonymous path method in IOUtils and updated Log4jUtils to use it to enable handling of anonymous file paths in log file generation
updated the ` call ` method to include a ` contentDescription ` parameter and improved task content description retrieval to enhance the functionality of ` DigitalWellBeingToast ` by providing clearer task descriptions and improving readability
increase catalogtracker . getmetalocation ( ) and avoid wait if timeout = = 0 .
modified LineNumberTagAggregator and TestDominance classes for better clarity to improve code readability and maintainability by improving naming conventions
change implementation of item . getstate ( ) to return the actual state
added integration test for fetching and projectioning PostDTO objects in BidirectionalOneToOneN + OneTest . java to ensure proper functionality and integration of post data retrieval in Hibernate
fix start search page index when extra screen be empty . ( bug 11105305 )
replaced manual array addition with a constructor call to initialize collections to optimize memory usage and improve code readability
changed string formatting from single quotes to double quotes in GoogleLineChart and GooglePieChart to ensure proper formatting of values in chart outputs
[ api ] fix possible integer overflow in sendingaccountor # sendjobinfo .
hbase - 26519 add the ability to seek to a file at the end of the file ( # 4873 )
( chore ) camel - netty : do n ' t use port 1 for the transciever test
updated SimpleReport to sort log events before generating a report to improve the organization of logged events for better clarity and usability
[ flink - 23468 ] [ table - planner - blink ] added test for double quote in csv description
update chinese benchmark test to use conll - 2012
of - 2809 : do n ' t send to remote iqs that be n ' t use by remote .
removed the @ JniImpl annotation from the VM . java file to streamline the code by eliminating unnecessary annotation
updated the calculation of ` last ` and replaced HTTP configuration keys with constants from ` Protocol . CHECK _ BLOCKING ` and ` Protocol . CHECK _ ROBOTS ` to improve code readability and maintain consistency in protocol configuration
added a condition to check if the media ' s HDR format is not null before proceeding with video processing to ensure that video processing only occurs when the HDR format is not specified , improving robustness
updated package name from " other _ package " to " other _ package2 " in AstTests . java to ensure consistency with naming conventions and improve code readability
fix setworldborder size and resize worldborder do n ' t account for small volume ( # 3819 )
hbase - 25943 do n ' t override the getwalgroupsreplicationstatus ( ) method in hmaster ( # 4438 )
remove the login operation from the ui if the login be fail .
replaced direct usage of ArrayList with a List for instance configuration generation in RoutingTableTest . java to improve code efficiency and reduce redundancy in handling data server instances
changed the access modifier of the FieldAttributes class from final to public to allow broader access to FieldAttributes from other packages
test demonstrate that we can read erroneous maven project contain reference .
removed unnecessary condition checks in PropertyMap . java to simplify the code for better readability and maintainability
add some documentation and clean up the doorbirdinfo interface ( # 1086 )
updated session closing method from sessionFactory to session object to ensure proper resource management and avoid potential memory leaks
removed a condition related to refresh token handling in OidcConsentApprovalViewResolver to simplify the consent approval logic for improved readability and maintainability
removed print statement for done close in Http2SolrClient to clean up the output and avoid unnecessary logging during closure
replaced a lambda expression with a NoopGetter implementation in BaggagePropagation . java to simplify the extraction process by providing a no - op getter
fix javadoc warn for conditionalonenabledresourcechain .
added a condition to check if the tree root is not a child of zero to ensure that the tree root is valid before proceeding with further operations
pdfbox - 2852 : fix call to deprecate method
fix issue with native crash due to permission issue in android 4 . x
updated return values in ShadowICU . java and added new test cases in ShadowICUTest . java to improve code clarity and ensure proper functionality of date picker functionality
removed KeyguardManager dependency from TouchInteractionService to simplify the code for better readability and maintainability
server : fix nullpointerexception when set default disk offering id ( # 4259 )
updated UtowBodyHandler to replace FileChannel with AsynchronousFileChannel and added position tracking to improve synchronization handling and prevent data loss during file writes
[ java ] minor refactoring to simplify the code .
drawtext : do n ' t update min editor width a it ' s not necessary .
changed the return value from - 1 to 0 in the Asset class to correct the measurement logic in the asset processing
cache . computeifabsent ( ) now take into account the fact that it be possible to cache the result
added setOnRefreshListener method to UploadListFragment to notifyDataSetChanged when the fragment ' s refresh state changes
switch to use path object for file handle in bibdatabasecontext ( # 4463 )
replace ` emitters . items [ i ] ` and ` emitters . items [ i ] ` with ` emitters . get ( i ) ` to improve code clarity and simplify access to particle emitter objects
fix tomcat to only add host if it do n ' t exist in the container
updated error message formatting in BuildRuleFactoryParams and Console classes to enhance clarity and consistency in error reporting
added a condition to check if the playback state is not PLAYING before proceeding to prevent further processing when not in PLAYING state
replaced the retrieval of ` ServiceComponentDesiredStateEntityPK ` with a direct call to ` findById ( 0L ) ` to simplify the code by removing direct dependency on ` ServiceComponentDesiredStateEntityPK `
refactor Java2TypeScriptTranslator and add a new test for inner class field clashes to improve code readability and ensure correct handling of inner class declarations
added logging filter and follow redirect filter functionality to DockerClientProfile and updated related configurations to enhance Docker configuration flexibility and enable better control over logging and redirect settings
replaced direct call to displayChanged with awtUnlock and awtLock for better resource management to ensure thread safety and prevent potential deadlocks during display changes
hhh - 10183 use sqlserver2008 for test nationalizedsqlquery without postgresql
ensure zip header be close in case of exception , add revert ( )
change method visibility of storeClassFile from private to public to allow access to the method from other classes
testsortedsetdocvalues , so that nextord ( ) work for miss value without check
modified error messages for invalid commands and added a new callback handler in JavaVM to improve clarity of error messages and enhance the handling of runnable execution
added additional conditions to check for line endings in LineReaderImpl . java to ensure proper handling of new line ending formats
changed the type of ` hashCodesToFetch ` from ` List ` to ` Set ` across multiple classes to improve performance and ensure uniqueness of the hash values
fix a bug where ogrehaderrenderer do n ' t render when there be no vertex
updated test method names and added failure handling for mocking behavior to improve clarity and robustness of verification failures in tests
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to ensure the deletion of a folder is successful instead of just deleting it
remove an unused import introduce by a rebase .
updated JsonObject class to improve data handling to enhance performance and maintainability of JSON operations
fixed bug where maxidletime be negative when use httpconnection . isidle ( ) .
fix vanilla bug where plant can not be determine if a plant can be sustain . close # 3251
added a new table " SALTEDTABLE123 " and modified the query execution to include both primary keys and alternative buckets to enhance database functionality and ensure proper handling of multi - table keys in the application
updated SimpleDateFormat instantiation to use Locale . US and added a new test class B6791927 to ensure consistent date formatting across different locales and validate cookie expiration logic
remove multiple redundant db . close ( ) call . this be already do by com . sun . concurrent . concurrent . db . close
increase processing timeouts from 1 second to 5 seconds in BatchMessageListenerContainerIntegrationTests . java to allow for longer processing times and improve test efficiency
[ gr - 39982 ] enh : add global liveness analysis phase if available .
fix : keybindings in code area be defer to save a database ( # 7043 )
refactor ObjectMapper initialization to use a dynamic line separator to ensure consistent line separation across different operating systems
fix change window path in nativesetector .
refactored Application usage in multiple test files to utilize a single Application instance to streamline the testing process and ensure consistent resource management across tests
[ java ] avoid redundant validation of record log .
fix build after error group refactoring
remove flaky test which randomly fail on travis
remove usage of deprecated preference and fix a bug
updated string comparisons to use ` equals ( ) ` for better readability to improve code clarity and avoid potential null pointer exceptions
fix # 3181 : use edge case for field replacement in ter util ( # 3177 )
updated JUnit 4 test annotations to JUnit 5 across multiple test files to ensure compatibility with the latest JUnit features and improve code clarity
remove the need for array . arraylist ( ) call from settypes . gettypes ( ) .
fix ( core ) : fix typo in javadoc
updated triggerTime variable to use LocalDateTime with default zone ID to ensure accurate time formatting based on the system ' s timezone
added a method to create an abstract method and handle it in the MethodHandleResolver class to improve error handling by providing more detailed method parameters
camel - 8635 : fix camel - core - validator so the validity check do n ' t throw illegalargumentexception
removed redundant check for empty collection in AbstractParser to streamline code by eliminating unnecessary return statements
camel - 10084 : camel - jclouds should copy the payload to the input stream before send it to remote server .
camel - 14077 : camel - consul - remove ignore for now . thanks to jay sensharma for reporting and fix .
added a new test class ` CheckACC _ STRICTFlagOnDefaultMethodTest ` and modified ` Check . java ` to add a check for the ` Flags . DEFAULT ` access flag to ensure compliance with the access flag requirements for default methods in the implementation
[ java ] increase driver timeout in channelvalidationtest to avoid false test failure .
added a new file ` FileExtensions . java ` that contains multiple source and header formats to provide a centralized list of supported file extensions
replaced the initialization of ThreadLocalDateFormat with a static factory method using ThreadLocal . withInitial to improve clarity and efficiency in date format handling
updated deprecated options in VMDeprecatedOptions . java to include additional CPU parameters to ensure compatibility with the latest memory management practices and improve code clarity
added displayName property and related functionality to DelegatedClientIdentityProviderConfiguration to enable dynamic display name configuration based on client properties
add early termination exception for time out in combine operator ( # 6380 )
removed unnecessary whitespace in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
jetty - 9 fixed race condition in http binding .
fixed npe in forgeeventfactory . getcapabilities ( ) when there be no parent .
wallettool : fix catch only keystores that can be throw .
camel - 17536 : camel - core - untangle simple refier from builder package and deprecate alternative method in camel - core
modified HyphenationTree . java to adjust the lengths after creating a Hyphenation instance to ensure correct positioning of Hyphenation objects based on their new requirements
added a sleep delay of 200 milliseconds in IQRegisterHandler . java to ensure proper timing between operations in the registration process
fix for issue 146 : remove unused import and add javax . swing . * to fix build .
corrected the capitalization of the " PARAMETER _ NEEDS _ TO _ BE _ NAMED " in the ParameterBinder class to enhance readability and maintain consistency in the documentation
added a new boolean variable ` providersChanged ` and initialized it to false to track provider changes in the configuration management
added a method to quote tokens in the SemanticAnalyzer class to ensure proper handling of quoted tokens in Hive queries
pdfbox - 4892 : add miss ' name ' entry for postscript name entry , a suggest by valerybokov
updated the type casting and usage of AnalysisSPILoader in SolrResourceLoader . java to improve type safety and eliminate unchecked cast warnings
modified the condition to return the current window ' s parent when within the hit boundaries to ensure correct positioning of the current window and prevent further processing
added a null check for appManifest before accessing its targetSdkVersion to prevent potential NullPointerExceptions when appManifest is null
refactor ConfigurationMetadataGenerator to streamline property handling and update method signatures to improve code clarity and maintainability by consolidating configuration logic
added userName variable and corresponding getter and setter methods to Driver and HiveSemanticAnalyzerHookContext classes to facilitate user identification in the driver context
camel - 5763 : add setter / getter for xmltransformersource and xmlconverter in xsltcomponent a per saxon ' s review
added HadoopShim integration to ContainerRunnerImpl and TaskRunnerCallable to optimize task execution using Hadoop shim for improved performance
updated expected file size calculation and simplified URI handling in ShadowAssetManagerTest and ShadowDownloadManagerTest to ensure compatibility with current version and improve code clarity
fix npe in logaccess accord to http : / / forums . apache . org / viewtopic . php ? t = 3526
fix bug in throughputlogger with timely message and update test
replaced direct access to Java VM version checks with a utility method for debug build checks to improve code readability and ensure compatibility with debug builds
[ scb - 2171 ] fix bug and memory leak in log publish
replace print statement with a conditional resolution of the logback property to ensure proper logging setup when the logback configuration file is not set
updated method signatures to enforce non - null constraints for string values to enhance code reliability by ensuring required values are not null
updated references from BASH _ ESCAPER to SHELL _ ESCAPER across multiple files to ensure correct command handling based on the operating system
camel - 7999 : fix hamcrest execution of test in httpwaitstrategytest
lucene - 7598 : fix test bug : testlucene50codec extend fieldinfoformat but should be testlucene60codec .
updated formatting in RelativeDateFormatTests . java to improve code readability and consistency
added a method to generate shield addresses in RpcApiService to enable processing of shield addresses programmatically
changed return type of readConsoleInput from byte array to String in multiple classes to improve efficiency by returning an empty string instead of byte array representation
update regular expressions in TestStabilityRule . java for improved clarity and functionality to enhance code readability and maintainability by using wildcard expressions
added a conditional check for multi - valued fields in the DefaultSolrHighlighter class to ensure proper handling of multi - valued fields in the highlighting process
updated the ` tryToLogin ` method to accept additional parameters for username and password to enhance authentication flexibility by allowing credentials to be set during the login process
removed unnecessary imports and updated fighting logic in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp to streamline drown response handling and improve fight control logic
camel - 5049 : jms producer should only create the destination if the destination name be not a topic or domain .
remove unnecessary wrapcollection ( ) call from update ( )
added handling for IllegalCurrencyException in BTCEAdapters . java to ensure robust currency processing and improve error logging for unknown currencies
no need to retrieve client id after the subscription be add to the durable package , a this be a temporary solution
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated startController method to accept a tenantIsolation parameter and refactored createBrokerTenant and createServerTenant methods to enhance clarity in starting controllers and improve tenant creation logic
simplified the method to directly return the value from the response to improve code readability and reduce unnecessary boilerplate
added a check to ensure the size of the attrs is non - negative to prevent potential IndexOutOfBoundsException when the attrs size is less than 4096
added methods to retrieve project JDK information and updated references to use IjProjectConfig instead of BuckConfig to improve code maintainability and streamline project configuration handling
corrected a typo in the error message from " Experimenal " to " Experimental " in HiveSessionProperties . java to improve clarity and consistency in error reporting
updated tests for GrantedAuthorityEffectiveAclsResolver to validate behavior with different user details to ensure proper ACL resolution behavior for different user roles in the authentication context
update javaparser to use getolvedjavaLangobject ( ) instead of create a new class reflective access object .
added a check for the number of buttons and introduced a constant for the number of buttons to ensure the button count does not exceed a specified maximum limit
replaced the import of Asserts with the correct package for assertions in RedefineInterfaceCall . java to ensure compatibility with the latest testing framework and improve code clarity
added MessagePackFactory and updated MessagePack . java to use these factory methods for improved flexibility to enhance maintainability and configurability of MessagePack implementation
add new biome tag ( # 6173 )
rename methods from ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
updated layout configuration to differentiate between horizontal and non - horizontal scenarios to improve clarity and functionality of UIIDs based on element types
removed the use of DOI _ URL _ PATTERN . matcher ( identifier ) from the conditional check to simplify the matching logic for old URL forms
replaced instances of ` AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java ` and ` AndroidLocklessInput . java ` to improve clarity and maintainability of multitouch handling logic
[ java ] : change commit position counter to be close in clustered service to ensure it be not be use in any case .
add test for record query with multiple uuid id
fix : use the correct port from url . getdefaultport ( ) for when the port be not specify in the url .
bug 9452 : listcapacity - when the host > 200 the host _ id and storage _ pool _ id start colliding , to workaround that also compart the capacity type
replaced ` dir . openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` dir . fileLength ( fileName ) ` to improve clarity and accuracy of file length handling
lucene - 5207 : lucene - 5207 : lucene - 5207 : refactor compiler to use reflection for generate source path .
fix a thread issue report by lgtm . com .
added a condition to skip focus handling when using native text input and changed the access modifier of fireDataChanged to public to improve user experience by preventing unnecessary input interference while maintaining encapsulation
[ beam - 13177 ] add emulator error message when spannerio abort
replaced explicit generic types with the diamond operator in multiple Java files to improve code readability and reduce redundancy in type declarations
updated array type from double to short in ObjectInputStream and added a new CloneArray class for testing to improve flexibility in array handling and ensure correct serialization behavior
updated nonce retrieval method and logging messages in OIDCAuthenticationFilter . java to ensure correct nonce handling and improve error messaging for nonces
added a condition to return true for relationship fields in DCInputSet to ensure correct handling of specific relationship types in the field processing logic
added functionality to retrieve and set the server slogan in the capabilities table to enhance user experience by providing access to server capabilities
refactor menu item handling to ensure consistent tinting behavior for menu items to improve clarity and maintainability of the code
replaced ` fail ` with ` assume ` in ` SolrRequestParserTest . java ` to ensure tests only run if a network connection is present
add a check for empty symbols in MissingSymbolsHandler . java to prevent processing when there are no symbols available for the event
added new data entries " Data 5 - 4 " and " Data 5 - 4 " to StringHelperTest . java to enhance test coverage by including additional data definitions
added warning log for empty data provider return an empty array or iterator .
( chore ) camel - base - plugin : replace collections . empty _ set with collections . empty ( )
fix : set node style to bubble only when version be at least 14 ( # 1378 )
bugfix : wrong restitution setting in physicsrigidbody
added a new file ` AutoFtpActivity . java ` that implements a FTP integration test to provide an automated testing process for Ftp - related functionality
updated the condition for handling tab names in BaseSemanticAnalyzer to improve clarity and correctness when parsing string literals
added methods to retrieve and set component state across multiple classes to improve state management for components in the UI
added a new class ` RemoteExecutionEnabled ` and ` RemoteExecutionConditional ` with corresponding test cases to implement functionality for enabling and disabling remote execution scenarios
pdfbox - 4892 : fix typo ; rework comment
replaced ` FileReader ` with ` InputStreamReader ` and updated import statements to use UTF - 8 character encoding to ensure consistent character encoding and improve code readability
clarify assert behavior in abstractscoredirector . assertshadowvariablesarenotsteaded ( )
hive - 23702 : changing hive . enable . semijoin . conversion option to hive . optimize . semijoin . conversion ( ashutosh chauhan via gunther hagleitner )
add log to notify when a message be not send to netty . netty . buffer . ByteBuf
replaced ` removeFile ` with ` removeDirectory ` in SynchronizeFolderOperation . java and updated related logic in FileDisplayActivity . java to improve folder removal functionality and ensure correct synchronization behavior
int - 1952 fix pollingtransactionreceiptprocessortest to verify the presence of transaction _ hash
updated schema testing method names and modified logic in ISchemaRegion and SchemaRegionBasicTest to enhance clarity of method purpose and correct schema handling logic
add null check to mediumcodecrenderer for format without samplemimetype
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in multiple classes to improve clarity and consistency in notification methods
updated the @ AllArgsConstructor annotation to include ` onConstructor _ = { @ JsonCreator ( mode = PROPERTIES ) } ` to ensure proper JSON serialization and deserialization behavior in the constructor
added a check to prevent creating an index on a view in MetaDataClient . java to inform users that the index creation is not supported
add a new class Website for managing Java network types to facilitate the population of Java NET types for improved functionality
added JUnit setup method to BSFormatterTest for setting a default locale to ensure consistent test environment for locale - sensitive data
improve error message if a badly download jar file ca n ' t be download .
updated assertion in MultiPartParsingTest to use Matchers for case - insensitive comparison to ensure accurate comparison of expected values in tests
added a check for single - value parameters and functionality to support them in the SimpleExprGenerator to ensure that parameter tokens are correctly processed when valid
added a volatile boolean variable ` createdVertx ` to track if the Vert . x component was created to ensure thread - safe access to the Vert . x instance in a concurrent environment
nodestylebuilder : fix npe in write attribute .
updated logging messages for synchronized operations in SynchronizeFolderOperation . java and improved null checks in FileDisplayActivity . java to enhance logging clarity and prevent potential null pointer exceptions
added a new boolean property ` ignoredReadStatus ` to both ` Entries ` and ` FeedREST ` classes to handle the absence of a read status in requests effectively
updated resource resolution methods to use MavenPaths utility for improved consistency to enhance code maintainability and reduce dependencies on MavenTestingUtils
added validation logic for data types in RegisterServerConsumerExecutor and URIRegisterExecutorSubscriber to enhance robustness by ensuring only valid data types are processed
updated the condition for isPlaying in GwtMusic . java to ensure isPlaying only reflects the paused state of the sound
added a new permission for admin area in the MainCommand . java and defined a corresponding permission in Captions . java to enhance permission checks for administrators in the plot management system
replaced ImmutableMap with HashMap and modified query options handling to improve code readability and maintainability by utilizing a dedicated method for setting query options
updated path name comparison in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to use path . getFileName ( ) to ensure consistent handling of file names regardless of their suffix
updated assertions in ResourcesTest . java to compare accented and text attributes correctly to improve test accuracy by considering different accented characters in URLs
replaced native method name from NMTWaitForDataMerge to NMTOverflowHashBucket and NMTMallocWithPseudoStack to improve clarity and separation of concerns in the code
[ flink - 30613 ] [ connector / common ] migrate javaeitherserializersnapshot to implement new snapshot interface
updated AddressResolverOptions and AddressResolver to support dynamic specification of NDots and rotation to improve flexibility and functionality in managing NDots and rotation settings
add a call to the superclass associate method in RequestRockerTemplate and a corresponding test in RequestRockerTemplateTest to ensure proper association of DefaultRockerTemplate with the associated context
pdfbox - 3540 : empty string instead of null when there be no value for the v
updated XML paths from " liquibase / parser / xml / " to " liquibase . org / xml / ns / dbchangelog / " in multiple files to align with the new namespace structure and ensure correct package resolution
move commonmimetypelocator in test package to test /
ambari - 20835 . change repositoryversionstate default to not _ require ( alejandro )
updated comparison logic in GenerateChangeLogTask to include specific schema comparisons to enhance comparison accuracy based on updated catalog and schema names
lucene - 8115 : migrate away from junit reference to testng ( # 795 )
added a new file ProgressiveJPEGTest . java to implement a test for rendering progressively using SpriteBatch and Drawable
fixed crash when load ogre model due to change light material
make window native - toolchain target architecture error message more user - friendly
added a null and empty check before setting the font size in the Label class to avoid potential NullPointerExceptions when the text field is empty
avro - 1098 . java : fix precision loss when reading integer . valueof ( ) .
make utils class final to prevent serialization
replaced the manual calculation of the length with a call to getLength ( ) to simplify the code and improve efficiency by directly accessing the current configuration
removed unnecessary casting of MockDirectoryWrapper to disable virus scanner to simplify code for better readability and maintainability
updated the file path in the componentPresetDao . load method from " . * csv " to a wildcard " ( ? i ) . * csv " to ensure the correct file format is used for loading presets
added a condition to check if the duration is greater than zero before announceing accessibility in TaskbarStashController . java to ensure that accessibility announcements occur only when the app is in the foreground
replaced the direct usage of Args . getInstance ( ) with RefreshTask . getNodeId ( ) for constructing the homeNode to utilize a refresh task for improved node configuration
add a test that only fail on jdk 1.5 , and make it compatible with jdk 1.5
hbase - 22385 fix a bug in test ( # 4844 )
hive - 31834 : make the schema tool test use system . out or system . err ( lukasz osipi via gopal v )
added DFSClient as a parameter to multiple methods in FanOutOneBlockAsync to enhance functionality by integrating DFSClient into the output process
updated MongoQueryMethod and related classes to include RepositoryMetadata as a parameter to enhance functionality by providing additional metadata for query methods
add the entityresolver wrapper to the digitalester so it can be use for xml .
updated imports in MetaDataEndpointImpl . java to include necessary static imports for PhoenixDatabaseMetaData to ensure correct retrieval of metadata fields and improve code clarity
increased the allowed deadlock count and introduced a deadlock retry interval in TxnHandler to improve transaction management by allowing more time for deadlock attempts to execute
refactor BarChartActivity , LineChartActivity1 , and YAxisRenderer for clarity and consistency to improve code readability and maintainability by standardizing axis positioning and axis settings
added methods to validate character encoding and system names in FsUtils . java to improve the robustness of character handling and ensure only valid characters are processed
rename method ` in ` to ` use ` , we can clarify the method name
[ mng - 7263 ] add processpluginconfiguration parameter to maven plugin builder
use double ' d ' to indicate that the double ' s mean a double - scale .
test : add google - cloud - vision folder for integration test ( # 16 )
updated return values in ModeledConnectionRecord and added getRemoteHost method in AuthenticatedUser to ensure correct representation of the remote host in authentication processes
fix for bug 738402 . add admin button in the community list
[ flink - 24952 ] [ runtime ] increment thread name per thread in CompactSplit . java to help identify thread execution time .
updated the way the package name is retrieved from resources in WallpaperChooser . java to improve compatibility with resource management in the application
refactor plot visibility retrieval by introducing a new method ` getPlayersInPlotVisible ` to improve code readability and maintainability by centralizing visibility logic in dedicated methods
refactor code in AndroidManifest , ResName , and ShadowMediaPlayer files to improve code organization and maintainability
refactor MlibOpsTest to improve test coverage and organization to enhance readability and maintainability of the test code
add a warning reproduce by gr - 22828 .
changed the attribute name from " referencedContainer " to " referencedContainer " in the SchemeGenerator class to ensure consistency with naming conventions and improve code readability
remove duplicate code for generate encryption key and iv byte array .
added @ Stability annotation to WorkProfileTest . java to ensure test stability for the work profile functionality
removed conditional check for bucketing version in TezCompiler . java to simplify processing when bucketing version is not needed
updated cursor position setting to use the input object for improved functionality to ensure consistent cursor behavior from the input object
updated LockFreeBucket to inherit from AbstractBucket and added new LockFreeBucket _ FinalFields _ CacheLinePadding class to enhance functionality and improve bucket continuation tracking
nodetool can print thread pool stats . patch by brandonwilliams , review by jbellis for cassandra - 1440
update max bitrate retrieval to use userPreferences for maximum bitrate configuration to ensure bitrate settings depend on user preferences for configuration
updated ZipkinHttpSpanExtractor and added new utility methods for handling trace and span IDs to improve code clarity and ensure proper handling of span debugging conditions
[ bisq - 4566 ] fix duplicate offer data to include bsq swap
remove reflection use for right alignment ( # 3266 )
added a line to set the project name in the filesystem to improve the organization of displayed components
updated JsBundle and JsBundleBuilder classes to include ProjectFilesystem in the command - line arguments to enhance filesystem management and improve code consistency
updated multiple Java files related to envelope and databinding functionality to enhance code organization and improve maintainability by improving naming conventions
refactor MetricsDSLContext to improve metrics management to enhance clarity and maintainability of metricsDSL functionality
removed the implementation of VersionConfig and optimized the entries retrieval process to streamline the code and improve performance by eliminating unnecessary interface
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException when the shadow class is not present
changed the access modifier of the validateTypes method from static to public and updated the exception message to improve accessibility of the method and ensure accurate error reporting for missing type information
fix : update gapic - generator - java with mock service generation fix ( # 1166 )
added SLF4J logging to SimulationStatus . java to enhance logging capabilities for better debugging and monitoring
update VERSION _ POSITION _ Y and VERSION _ FONT for better font positioning to improve layout aesthetics and usability
added a runLater call to notify notifications in UserInterfaceComponentImpl . java to ensure UI updates occur on the main thread for smoother transitions
fixed # 390 - mock . foo ( ) . thenreturn ( new arrays . aslist ( ) ) . thenreturn ( new arrays . aslist ( ) ) .
fix typo in error msg for non - string partition
add a test case for LineFileDocs in BaseStoredFieldsFormatTestCase . java to ensure functionality and validation of document indexing
added a method to retrieve the version code for better encapsulation to improve code readability and maintainability by centralizing version code retrieval in MainApp
camel - 5387 : fixed handling of ambiguous method call in bean component .
replaced ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in ` MultiPartInputStreamParser . java ` to ensure the correct file name is tested for multipart input
added ` bufferOwned ` flag and modified buffer disposal logic in ` IndexBufferObject ` and ` VertexBufferObjectWithVAO ` classes to ensure proper handling of buffer memory allocation based on flag status
added a transition for the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password reset through the login form
fix copy / paste mistake in comment .
int - 1389 remove the ' class ' extension for characterstreamreadingmessagesource and characterstreamconsumingmessagehandler in the < console outboundchanneladapterparser >
replaced variable names from ` s ` to ` o ` in multiple test files and updated return statements for clarity to enhance code readability and maintain consistency in output formatting
fix arrayindexoutofboundsexception in tostring ( ) method . patch by jbellis
added deprecation annotations and implemented a new ` createContainerCmdHooks ` method in ` GenericContainer ` for improved container configuration handling
changed logging level from info to error for MediaInfo and updated test method signatures to throw ConfigurationException to improve error handling and ensure proper exception management during renderer configuration tests
added support for optional schemapattern in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to ensure proper configuration when schemapattern is absent
bcjsse : fix npe in bcjssevent . getid ( ) .
modified calculations for aspect ratio and bitmap creation in AndroidGraphics . java to improve rendering accuracy by ensuring appropriate dimensions are calculated
8276234 : base64 . java : add ' - ' to javadoc of base64 . java
[ gr - 26654 ] sulong : add miss call to getstackfromthreadnode function .
simonstewart : applying patch from james strachen add a patch for the firefox driver that have be fix .
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
replace ` ResName ` attribute with ` int resId ` in various classes to improve resource management by using numeric identifiers instead of name - based references
fix ` docker - client ` tl connection fail if ` dockercontexttlsfile ` be absent ( # 4740 )
fixed classnotfoundexception when run simplereactiverepositorytests in a setup instead of teardown
modified type variable handling in ` mmm Attr . java ` and added a new class ` T6450290 . java ` with generic classes to improve type safety and demonstrate type variable assignments in Java
[ java ] add option to set a default log level in the logging api .
add log to debug app icon removal
added allFilesOption method to FileActivity and FileDisplayActivity classes to enhance file management functionality
add deprecate method for good code maintenance
updated the calculation for numPredictiveAppCols to account for phone devices to ensure accurate display of app columns for non - phone devices
updated StringUtils . java to initialize String with UTF - 8 encoding to ensure proper handling of character encoding for string processing
added a new class RequestMatchers and its corresponding tests to provide a centralized way to match requests in the security web application
ggb - 2221 fix again : input box do n ' t work for input box in applet
adjust position calculations in the ProgressBar to account for a new height and width formula to ensure correct rendering of the knob position relative to updated dimensions
[ native ] fix native query runner fail to load from classpath
change extra object fields to final in BruteArgumentMoverHandle . java and update permuteArgs method to include additional parameters to enhance code clarity and ensure immutability of extra object fields
added a condition to check if the state handler is invalidated in the gesture state check to improve state management by ensuring the handler only processes valid gestures
updated layout dimensions and metrics for landscape and portrait cells to improve layout handling for better responsiveness and performance
added a condition to check if the redir is a file and is a robots . txt file to ensure proper handling of robots . txt files in the redir logic
fix issue # 1188 - jdbrowser module do not show warning icon .
updated button subscriptions in AdvancedGameSetupScreen from " continue " to " createWorld " and " return " to improve clarity and functionality of game setup screen interactions
added a check for zero in UDFOPDivide and created a test class for it to ensure that the UDF functions correctly with zero values
modified formatting and added null check for step execution in FlowJob . java to improve code readability and ensure proper handling of flow execution status
updated bean definition for " filterProcessesUrl " and added a matcher for " requiresAuthenticationRequestMatcher " to enhance the flexibility of filter processes URL configuration
added onDestroy method to unbind the service in ShareActivity and ContributionsActivity to ensure proper resource management by leveraging the superclass ' s lifecycle
corrected the reference from thumbNail to thumbnail in WallpaperPickerActivity to ensure accurate retrieval of the thumbnail object
hive - 14287 : add apache license heders to the file that be faling rat check
add the request timeout for RaftServerConfigKeys to ensure the RPC request timeout is utilized for better resource management
updated logging and modified the behavior of the TsFileResourceManager to improve clarity of time index degrade attempts to enhance debugging by providing more context for non - existent time index scenarios
added setSystemProperties method to MavenModuleLoader to ensure system properties are correctly configured for configuration
add readiness check metric to health check ( # 7125 )
register the animated torch in the model handler , for the animated torch as well
add null check before closing writer in FileHistoryCache to prevent potential NullPointerException when closing the writer
refactor HiveConf initialization to use a dynamic URL from the specified configuration directory to improve flexibility and maintainability of configuration loading in tests
added a link to " Muting Users " in the FeaturesActivity to provide users with associated links for users
added initialization properties for jdk . reflect . useDirectMethodHandle to false to disable direct method handling for non - generated classes
hbase - 26946 fix splitonLeadingvarcharcolumnspolicy to extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
zeppelin - 1272 . log warn if svm be run in yarn mode
lucene - 994 : fix npe in buildtranscripthmm , getword ( ) and getword ( )
mondrian : fix test for double quote in jsonutilstest .
added extra logging for tweet IDs in TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to ensure correct tracking of tweet information during composeping
[ issue # 6372 ] add warn for messagelistener when messagelistener do not have data
do n ' t swallow nullpointerexception when there be no class to analyze
replace Key import with PublicKey import in KeyFetcher . java to utilize the correct key type for improved functionality
initialize the isIncompatible variable to true to ensure compatibility status is accurately represented
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to improve clarity and specificity regarding account creation requests
pdfbox - 4892 : avoid npe if there be no range for a given pdfunction
do n ' t set the throwable cause for dlq ' s exception consumer , a they be now set by the messagelistener .
enable off - heap format by default ( # 1477 )
modify title handling in FeedUpdateService to truncate content title to a maximum of 2048 characters to ensure content titles do not exceed database limitations
initialized the preview panel in JColorChooser and modified logic for setting it in BasicColorChooserUI to enhance code clarity and ensure proper handling of the preview panel ' s behavior
changed log level from info to debug for extensions check to reduce verbosity of logs by reducing unnecessary information
feature : bitmapfactoryoptions . inbitmap should check for null reusablebitmap
added a method to retrieve layout parameters in FakeView . java to improve layout management by allowing access to layout parameters
added a check to prevent illegal state exceptions when a Cursor is already closed to ensure proper error handling and prevent operations on a closed cursor
pdfbox - 4490 : improve efficiency , a suggest by valerybokov
temporary ignore test to get build to pass
added a private String field ' ts ' and corresponding getter and setter methods in Message . java to store and manage the timestamp data effectively
close # 1043 : add log in case of exception while process ( # 1034 )
changed the class declaration of AbstractExecutor from package - private to public to allow access to AbstractExecutor from other packages
fix # 3545 : legacy parameter not be remove from isochroneresource ( # 3566 )
removed public access modifier from multiple test classes to enhance encapsulation and improve code readability
refactor CSRF token handling into a separate method called setCSRF to improve code organization and reduce duplication
null check for shadowclassloader in eclipseloaderpatchertransplants , fix # 511
add ` ` numericdisabled ' ' flag to excelparser and and unit test
change logging level from info to debug for default values in HiveConf to improve log verbosity for better debugging insights
feat ( controller ) : optimize the performance of getjoystickbuttons ( )
updated ObjectFactory import statements in WeldFactory and WeldFactoryTest to align code with the latest Cucumber library structure
refactor the saving logic for port forward to use HostDatabase for consistency to improve code readability and maintainability by centralizing the saving process
added a configuration option to toggle snapshot data in Liquibase to provide configurable behavior for snapshot data based on the configuration
fix nullpointerexception in case the path be null .
add javadoc to locationmarshaller interface to explain this .
simplified touch event checks in StatusBarTouchController . java to improve code readability and maintainability
hive - 15176 : llap : clean up llap and add some javadocs for vectorreader ( sergey shelukhin , review by gopal v )
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test files to improve consistency and compatibility with the newer Mockito API
replaced ` getRelativePathName ( ) ` and ` getRelativePathSupplier ( ) ` methods with direct calls to ` getRelativePath ( ) ` in the ` AbstractPathSourcePath ` class to streamline the code and improve clarity in path handling
updated method signatures to use ` RecordReaderFileConfig ` instead of ` RecordReader ` across multiple classes to ensure consistent configuration usage for record reading
fix argument extractor to only deal with specialized extractor , and fallback to original behavior
cloudstack - 8252 : listvolume - getvolume - no more volume for the current account / domain can be unlimited
fire panel shift event when the player be in the inventory , instead of use tap . close # 1597
[ hotfix ] [ runtime ] deprecate ` ` cold _ reads _ to _ omit ' ' in sizetieredcompactionStrategyOptions
[ java ] stop leech in clienttest to ensure cleanup when the test be finish .
[ issue # 5816 ] fix popmessageprocessor ignore message count if isretry = false ( # 5817 )
update KeyboardAddonSettingsFragment . java for improved functionality to enhance user experience by providing better control over keyboard settings
updated ShadowDateUtilsTest to use the JUnit ' s Ignore annotation to temporarily disable tests that are not ready for execution
replaced ` EventLoopGroup ` with ` NettyDriverMongoClientSettingsBuilderCustomizer ` and made it volatile to improve thread safety for the event loop group reference
added upgrade request and response handling in ClientConnect and JettyTrackingSocket classes to enable proper upgrade request and response management in the WebSocket implementation
added connection timeout handling in AndroidImplementation . java to allow dynamic adjustment of connection timeouts based on user preferences
refactor getUserAccessPermissions and getTeamAccessPermission methods to streamline permission retrieval and improve code readability to enhance clarity and maintainability by removing unnecessary exception handling and organizing permission checks
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL parsing and deparsing functions correctly with quoted cast expressions
add iswritable check for root file to avoid warning
added logging functionality and modified thread executor selection logic in FixedThreadExecutor . java to improve performance monitoring and flexibility in managing thread execution
added null check for the field variable before checking for " catalogname " to prevent potential NullPointerExceptions when the field is null
updated event listener classes to use InitializingBean instead of CasEventListener to improve compatibility with the latest Spring framework features and enhance event handling capabilities
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added an override for the close method in the DeflaterOutputStream to ensure proper resource management and prevent potential memory leaks
added a new Java file ` gsp001 . java ` implementing a native method for retrieving system properties to facilitate testing of system property retrieval at the early phase agent
add support for declare bean in beandefinitioninjectprocessor ( # 3704 )
* add a way to export / export camera control ( from jmeio )
remove mouse event handler from PopupNotificationPanel and add javadocs .
7187104 : inference cleanup : remove redundant exception class in infer . java
added a method ` getFeatureValue ( ) ` to return the value of the feature to provide access to the feature value for external use
changed the parameter type in the after method from int to long to improve compatibility with larger time values in the Mockito framework
added ` onBuild ` and ` executionDriver ` fields with their respective getters and setters in ` ContainerConfig ` and ` Info ` classes to enable tracking and management of build actions in the application
modified the icon setting logic in Toolbar . java and adjusted alignment logic in FlowLayout . java to ensure proper icon positioning based on RTL and improve layout handling
added support for enabling position increments in StopFilter to control the execution of the StopFilter based on user preferences
added an ` InternetAddress ` initialization to ` EmailsTest ` and ` SystemErrorEmailReportTest ` classes to enable handling of internet addresses for improved email functionality
added a boolean variable mTryShareAgain and initialized it to false to control the sharing behavior of the application
added support for using TTY names based on version in C library to improve cross - platform compatibility of the Jansi native Pty
refactor bandwidth calculation and account usage to utilize a variable for byte size instead of a local variable to enhance code clarity and maintainability based on dynamic properties availability
replaced direct assertions with Awaitility ' s await mechanism in Issue410Tests . java to improve test stability and allow for asynchronous task completion
[ easee ] update user - side api url in order to avoid circular dependency ( # 2370 )
reduced the sleep duration from 2 seconds to 3 seconds and added a retry attempt for Kafka container startup to ensure smoother execution and improve stability during startup
search by name instead of uuid and id for easy search ( # 2098 )
added SSL trust handling to OkHttp class for certificate validation to enhance security by ensuring all certificates are accepted
updated long click button handling in NavbarButtonsViewController and TaskbarNavButtonController to improve clarity and maintain consistent button type usage
added a new file HyperlinkFormula . java and modified StringPtg . java to update field _ 1 _ length to int for proper functionality to enable hyperlinking of formulas and improve data handling
added null checks for workingDirectory before executing the escapeAsBashString method to ensure workingDirectory is not null to avoid potential NullPointerExceptions
increase timeout in an attempt to reduce false failure in the ci system
updated escapeDatabaseObject methods to simplify object escaping logic to enhance code readability and maintainability by reducing redundancy in object names
rename material dialog : do n ' t add class to glass screen
added a test for state changing in ShadowDisplayTest and implemented state management in ShadowDisplay to ensure proper functionality of display state management across different SDK versions
[ geos - 4746 ] add directinvocationservice interface to allow use the servicebean base on an interface
ggb - 583 fix : x and y key do n ' t work on input box ( in web )
updated SQL queries in PgDatabaseMetaData to include ' pg _ catalog . pg _ depend dep ' and ' pg _ constraint . conindid ' based on server version to ensure correct handling of dependencies in PostgreSQL versions below 9.0
[ java ] remove unused assignment from queuechannel . message ( # 6571 )
updated the ` getPathsFromResource ` method to remove the ` IOException ` clause and adjusted URI creation to improve code clarity and ensure accurate path handling by using the raw path
added functionality to retrieve monitoring and monitoring paths based on Jenkins nodes to improve the flexibility of remote collection by accommodating different node types
refactor HeadersBeanDefinitionParser to use a new resolveAttribute method for attribute resolution to improve code readability and maintainability by centralizing attribute resolution logic
removed unnecessary exception throwing and adjusted log message logic in ProtobufLogReader . java to improve error handling and provide clearer diagnostics for malformed edits
removed redundant calls to destroyRegistries and added shutdown method in NacosRegistry to ensure proper resource cleanup and avoid potential memory leaks
camel - mybatis fixed switch / cases indentation see camel - 14540
added a method to write the status code based on the SPDY version in the GoAway generator and updated related parser calls to improve code clarity and ensure proper handling of different SPDY versions
added debug output to AuditEvent and refined JSON event creation in AuditEventTests to improve visibility into credential handling and enhance test readability
added checks for negative values and modified return statement to ensure safe rounding to prevent division by zero errors
fix default path in forge edit endpoint ( # 9040 )
extract the absolute path of the DX executable into a variable to improve code readability and maintainability
added assertions for PointRangeQuery instances in TestPointQueries . java to ensure proper equality comparison for PointRangeQuery instances
hbase - 13402 fix testhfilecleaner in testhfilecleaner ( guangxu cheng )
added a condition to set the file label based on its filename and size to ensure the file label reflects the actual transfer request file name
fix : do n ' t throw exception in jedisclustercommand # schedule ( )
[ flink - 20827 ] [ connector / common ] make rowtimeminibatchassgineroperator chaining strategy
replaced ` RegExpBasedFilterInvocationDefinitionMap ` with ` PathBasedFilterInvocationDefinitionMap ` in ` FilterInvocationDefinitionSourceEditor ` to enhance URL decoration handling for improved functionality
fix qmap + add some benchmark test
added a new HashMap initialized G _ SCH _ B to the HybridPlotWorld class to store additional state related to the plot
added a check for empty fields and introduced a new method to convert get methods to identifiers to ensure proper handling of cases with no fields and improve method identification generation
mow - 129 set drawable to false to prevent clipping
added TCP keepalive configuration for the server in HiveConf . java and updated HiveServer . java to use it to improve server connection handling and provide better logging for connection stability
rename method ' getRenameEmptyFiles ' to ' isRenameEmptyFiles ' in FileRenameAction . java to improve clarity by indicating functionality related to renaming empty files
no effective change - remove unused
replaced custom thread factory with lambda expressions in RealtimeSegmentRelocator . java to improve code readability and reduce verbosity
vpc : createvpc : do n ' t set success to true on createnetwork api call
updated windowAlpha calculation to use the maximum of Interpolators instead of a fixed value and modified condition checks in FloatingIconView to ensure proper window alpha adjustment and prevent erroneous behavior when progress equals shape progress
update spring - security 3.0 schema declaration to 4.0 ( # 5573 )
added support for handling two primitive types in multiple assertion classes to improve consistency and functionality in the codebase
camel - core : fix minor code issue ( # 1471 )
added a new file TestConfigureUDF . java and modified ExprNodeGenericFuncEvaluator . java to include a test configuration function to facilitate testing of UDF configuration within the Hive framework
[ java ] fix logmessagewindowwaitstrategy wildcard match issue
removed redundant logger variable and simplified logging calls to streamline code and enhance readability
replaced " purge _ time " and " purge _ time " with " delete " in multiple classes to align with SQL batch operations for better clarity and functionality
added default language version " 17 " and " 17 - preview " to JavaLanguageModule to support new features introduced in Java 17
make fileappenderresiliencetest more tolerant , add code wait for compression job in timebasedrollingpolicy
[ gr - 39933 ] do not assert if lastlocationaccess be null .
added a method to retrieve steps from the SimpleJob class to enhance functionality by allowing access to step data directly
removed fromBase58 and toBase58 fields from TronJsonRpc and TronJsonRpcImpl classes and updated error handling in TronJsonRpc to streamline code and ensure consistency in error handling across the codebase
refactor currency pair creation and comparison in BitstampAdapters . java to improve code readability and maintainability by using a named variable
fix base time unit in longtasktimer and add test for active task
# ! [ euphoria - guava ] avoid npe when compute by translation
changed the type of ` value ` from ` String ` to ` CharSequence ` and updated related logic for color handling to improve flexibility in handling color values and ensure compatibility with list preferences
replace ` IncompatibleDatabaseHandler ` with ` DatabaseVersionHandler ` and introduce a new method for handling database versions to improve clarity and maintainability in handling database versions and their associated versions
added a constant for maximum tweet limits in the ExpansionViewHelper class to limit the number of tweets processed during query execution
http : / / issues . apache . org / jira / browse / amq - 4213 - increase refresh interval for authorization test
fix queuing of tail page with fully acked deleted tail
fix : import glowserver . class in the correct place , use class . getpackagename ( ) .
added a ` grow ` method to ` DataIO ` for dynamic resizing of a buffer to improve efficiency by allowing dynamic resizing of the buffer based on input
added import statement for DataOutputStream in GdxSetup . java to enable proper handling of event events in the setup process
camel - 10560 , add getsubmittedfilename into partdatasource to retrieve file name specify by the client
added markReadForLoad ( ) method in LauncherFragment . java to enable reading data for improved functionality
modified the ` instrumentJar ` method to throw ` ClassNotFoundException ` and added handling for negative array size exceptions to improve error handling and ensure robustness in instrumenting classes
added a method ` checkForSpillPossibility ` to handle partition selection to ensure proper error handling by throwing an exception when a partition is not available
changed the variable type of ` dsName ` to ` final ` for consistency and clarity to improve code readability and prevent potential null pointer exceptions
added a default name ID format and a check for empty supported names in SamlProfileSamlNameIdBuilder . java to ensure supported names are always added to supported names
added error handling for password change in ChangePasswordPage to ensure user feedback is to informative when the password change is aborted
added a semicolon to the end of a block in Deadlock2 . java to ensure proper syntax and prevent potential compilation issues
added support for max idle time in the Nio receiver mbean to allow for better control over the number of idle connections
deleted the FontScalingTest . java file which implemented a font size comparison between Metal and system look - and - feel to eliminate an obsolete test that is no longer relevant to the project ' s requirements
[ rrd4j ] improve error message when an out of date filter be miss ( # 15985 )
added a check for negative numVectors in GenericUDAFComputeStats . java to prevent potential errors when processing non - positive vector values
test : migrate ExecutableRefTest to junit 5 ( # 4473 )
added null checks for view and glass pane before setting them to avoid potential NullPointerExceptions when the view or glass pane is not set
camel - 7018 : fixed wiretap eip to support set the camelcontext .
solr - 6899 : make collectionadminrequest . action setter protect instead of public
[ flink - 21743 ] [ table - planner ] allow planning to push limit to topn
[ java ] remove unnecessary aeron directory assignment in test .
fixed - do n ' t queue command with queued = true . # 3119
replaced InputStream with FileOutputStream for configuration variable handling to improve memory management and ensure default configuration variable is saved on exit
replaced ` Device . defaultDevice ( ) ` with ` criteria . getDevice ( ) ` in ` BaseModelLoader . java ` to ensure compatibility with the current criteria model handling
added menu creation and menu item selection functionality in SimulationViewer . java to enhance user experience by enabling saving functionality in various items
pdfbox - 3017 : remove comment that be never use , a suggest by valerybokov
updated the method of retrieving the home directory to include the " hawtio . dirname " system property to ensure the home directory is correctly configured for Hawtio integration
space # trim ( ) : do n ' t add space for empty comment or whitespace
modified fields in multiple classes to be volatile to ensure visibility of changes to these dictionary fields to prevent potential race conditions
added printStackTrace ( ) method to Throwable for error handling to enhance debugging capabilities by providing stack trace information
add test for custom item drop . fix # 797
added checks for partition creation and optional creation in multiple classes to improve functionality to handle cases where partitions may not exist
fix incorrect byte reading in secondary storage ( # 3356 )
[ hotfix ] remove redundant controlrequeststreamid setting in eoservicenode
[ geos - 6701 ] fixed unsupported spatial operator in wfs
added import for LuceneTestCase and annotated with AwaitFix for a specific bug to address compatibility issues related to SOLR - 2161
fix possible incorrect request loop condition . http : / / issues . apache . org / jira / browse / amq - 4635
[ java ] reduce thegress exclusive default value to false to avoid false lock .
replaced the hardcoded HBASE _ OFFHEAP _ PCT _ KEY and HBASE _ BUCKETCACHE _ SIZE _ KEY with an array of cache keys to centralize cache settings for improved maintainability
added a running record count counter and updated the exception context handling in JSONRecordReader . java to improve record tracking accuracy by using the current record number directly
added filtering for out years in CategorizationFragment to ensure only valid year formats are processed
updated drawing color in CacheableTextView , CellLayout , and HolographicOutlineHelper to remove unnecessary color range to improve rendering consistency and performance by using a solid color instead of a fixed color
* mesh . getrendermethod ( ) will never call checkmanagedanddirty ( ) if opengl 2.0 be available .
fix backgroundprocess to properly set the context on the invocation
hive - 23737 : default database name should be prepend for insert into table ( sergey shelukhin , review by prasanth jayachandran )
added a connection timeout setting in TestConnections . java and changed the count variable to final in StubConnection . java to improve connection handling and ensure immutability of the count variable
hive - 8703 : improve approx _ percentile query performance ( eugene koifman , review by wei zheng )
issue # 3777 - change default _ idle _ timeout and connection _ timeout to 30 second
fix sharing of user - specific data in v2 ( # 4527 )
updated type declarations for InetAddress and NetworkInterface to improve type safety to enhance code clarity and prevent potential type casting issues
refactor PlaybackControlView . java to replace view enabling / disabling logic with a separate setButtonEnabled method to improve code readability and maintainability by reducing redundancy
updated method signatures and conditions in Session . java and Token . java to use ` sessionID ` instead of ` session . idInternal ( ) ` to improve clarity and correctness in handling session information
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to ensure correct handling of immediate classpaths during export process
fix : do n ' t use exception probability when debugging
updated plate color calculation based on icon state in PredictedAppIcon . java to improve visual feedback for themed app icons
ticket # 269 : move mysqluser . touser ( ) method into it own method .
added " centre " alias to the aliases array in Middle . java to support centre - based centering functionality
added DirectUpload class import and injection method to CommonsApplicationComponent to facilitate dependency injection for managing direct uploads
added space adjustments for left and right axes in BarChartActivity and updated legend offset logic in BarLineChartBase to improve chart rendering accuracy and optimize legend positioning for better visual clarity
add new flavors and update Java library descriptions to include additional ABI types to enhance functionality by supporting additional ABI sources
added operation event status type handling to the OnlineHubService and changed the services list to an ArrayList to ensure accurate tracking of operation event statuses and improve flexibility in service initialization
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48737
( chore ) camel - jms : rename startbundle - > setup to teardown
ninja : fix jdk / tools / javac / sortedarraystringmaptest . java test by append classpath to process
updated the path separator logic in PackageResourceLoader . java to ensure proper file path handling for Android resources
[ javac ] improve performance of data set . minby ( int ) , maxby ( int ) and maxby ( int )
added an import statement for JUnit ' s Ignore annotation and applied an Ignore annotation to the WorkProfileTest class to temporarily disable the test due to bug b / 243855320
updated error message formatting to include escaped percent to enhance readability of error messages for easier debugging
fixed - jcachemanager . close ( ) method cause npe . # 1174
act - 2942 : reduce log level when closing command context
added an additional block to the initialization of the ALPNClientConnectionFactory in HTTP2Client . java to ensure the ALPNClientConnectionFactory is properly instantiated within the context of an operation
fix ( db ) : fix entity property write ( # 773 )
fix nullpointerexception in wav audio source ( # 5105 )
increased await timeouts in ContextRegisterListenerTest and SpringMvcClientBeanPostProcessorTest from 500 milliseconds to 5 seconds to allow more time for countdown latch to become available during tests
reduces log verbosity when determine effect light type for thing with wrong request add support
bug 10605 : db . properties be now configurable , take into account the config ' db . maxactive '
updated ` Reporter ` and ` ReturnsSmartNulls ` classes to accept an additional parameter for ` Object ` to enhance the clarity and functionality of exception handling in Mockito
change parameter type of generate method from DataFrame to DataFrame to ensure type safety by using the correct frame type directly
updated package - info . java files for mmm and ppp modules to improve module dependency management and organization
added a check for empty physical column names in OrcPageSourceFactory and created a test for it in TestHiveFileFormats to ensure that the code does not attempt to matches an empty column name when there is no physical column names
make method mix play compatible with ampersand , close # 1221
refactor JComponent and SynthTextPaneUI classes to improve code readability and maintainability
updated calculations in finder pattern finder and modified test cases in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to correct the calculation for improved accuracy and ensure accurate qr code rendering
removed unnecessary checks for empty leading include paths in PreprocessorDelegate . java to simplify the logic for improved readability and maintainability
fix npe in stringtemplate . ismatrixmultipoint ( ) .
activiti model : add search by x / $ x to find all search ( e . g . find all )
fix : always set a default sample value of 48000 for e - ac3 joc .
add getformula ( ) and setformula ( string ) to xssfname , to avoid runtimeexceptions if xssf be not a valid formula
increased the calculation for the target variable from 60000 to 90000 to accommodate larger datasets and improve scaling accuracy
fixed an off - by - one error in the type checking condition , and added a test for pattern facet state in GMLParserTest to ensure proper handling of empty constraints and validate functionality through testing
added a new test class ClassPathXmlJobRegistryContextTests to verify job registry functionality to ensure that job names can be correctly located and validated in the job registry
changed the data type of mHistoricTimes from float to long in MotionPauseDetector . java to accommodate larger time values beyond the expected threshold
camel - 12320 : camel - restlet should use advanced and not deprecated endpoint
camel - 14263 : remove default showout option from camel - log and use camel - log
renamed ` submitTraceEvent ` to ` writeChromeTraceMetadataEvent ` and encapsulated the event creation logic into a new method to improve code readability and reuse by reducing duplication
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders list to improve the accuracy of the order management by filtering out irrelevant order statuses
added pixel offset calculations and validation to ensure correct image layout to improve image processing accuracy and handle potential layout errors
fix event . getinterned ( ) handling of Ruby timestamps
added logic to handle paths ending with " / " in ContextHandler . java and a test for real path existence in WebAppContextTest . java to ensure that the server correctly retrieves the real path when it does not exist
8050214 : scriptfunctionimpl . type _ error _ throwable _ setter should throw typeerror instead of typeerror
fix scroll behaviour in jedittextarea for macos
fix crash in graphdecoder when callerloopscope be not setup
test : migrate sniperjavaprettyprinterjavaxtest to junit 5 ( # 4242 )
refactor URLOutputStream instantiation to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added Entity annotations to Mail class to facilitate entity injection for better data handling
update default values and command parameter settings for tablespace configuration to enable or disable the tablespace by default and improve index inclusion options
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to the internal buffer properties
added functionality to clear empty JSON files in ScanBatch to ensure the application handles empty JSON files gracefully
updated failure handling in StringSubject to include internal custom name and improved test case accuracy to enhance error reporting for better debugging and ensure correct behavior of comparison failures
added a regex pattern for library name matching in LibUtils . java to ensure compatibility with both dll and dylib formats
updated exception handling to catch both Exception and Error in JrtJavaBasePackages . java and PackageHelper . java to improve error handling by capturing more general exceptions
hbase - 8251 masterfilesystem . waitforrequencode ( ) should wait for file system to be write ( ram )
updated error messages in TranslatingJavacPhaseTracer . java to include class name and message to improve clarity of error reporting for unsupported compiler types
plugin cache optimization : remove unused method
fix issue with update the contact status .
minor javadoc improvement ( remove unused method )
added integration test for fetching account information in the BTCE exchange to ensure the PollingAccountService correctly retrieves account info from the BTCE exchange
added mouseWheel method to VDUInput and vt320 classes to enable mouse wheel functionality with improved control and metadata handling
fix : set net . java . games . librarypath when natives be build
# 795 - remove @ columnhstore annotation because it be now deprecate
added player skill flags to the metadata ( # 851 )
test : update loadbalancerwithservicetests to work with new master url config
fixed member creation in mapservice to be able to create memberimpl .
replaced ` System . getProperty ` with ` AccessController . doPrivileged ` for retrieving the OS version to enhance security by using a privileged action for property access
updated TemplateEngineFreemarker to use a configurable file suffix instead of a hardcoded value to improve flexibility in specifying the file suffix dynamically
[ issue # 7390 ] fix selectmessagemqbyhash problem ( # 7391 )
fix issue with dock panel animation not be complete , cause npe
added unit test for caret property binding in StyledTextAreaVisual . java to improve test coverage for caret property binding
added ` CxxBuckConfig ` and updated related classes to utilize ` declaredPlatforms ` from ` CxxBuckConfig ` to enhance code consistency and maintainability by centralizing platform management
replace SimpleParameterAccessor with ParameterAccessor in JpaCountQueryCreator and PartTreeJpaQuery to provide better parameter handling and parameter access capabilities
added a null check for the passwordAttribute before setting it in ldapAuthenticator to avoid potential NullPointerException when passwordAttribute is not set
[ core ] fix copy constructor for byte [ ] in default value array
updated SslContextFactory to check for null address and hostName before creating SSLEngine to ensure proper handling of null address cases to avoid potential NullPointerExceptions
updated assertions in TestFSTableDescriptors to use assertTrue instead of assertEquals to improve clarity and correctness of cache hit count validation
simonstewart : able to speed up the export of cookie , for the internetexplorerdriver
added a flag to track if the launcher transition has not been handled to ensure that controllers are only reloaded when the launcher transition state changes
nutch - 2333 htmlworker should encode utf - 8 in title ( fixes # 779 )
modified the IndexReader class to enhance search functionality to improve the performance of document retrieval operations
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH to 150 and modified related calls to use a new path separator to increase statistic prefix capacity and ensure consistent path formatting
added a new class ` bug6337518 ` that populates an ` JComboBox ` with ` JComboBox ` to address bug 6337518 related to arrow button functionality
refactor TestRandomAccessBuffer class for improved test coverage to enhance reliability of random access buffer operations
updated UserInfoActivity . java to modify method implementations to improve user data handling efficiency in the application
added content change notifications for HomeContentProvider in multiple services to ensure proper handling of content changes to the content provider
added stay navigation functionality to BubbleTextView and Launcher classes to enhance user experience by ensuring correct behavior when interacting with background elements
updated ` getFallbackResponse ` method to accept an additional ` Throwable ` parameter across multiple policy classes to enhance error handling capabilities in fallback policies
8057551 : let the - d flag dump _ all _ generate class to disk and work outside -- compile - only mode
[ java ] fix npe in uri with no tag .
updated JAVA _ REGEX _ SPECIALS to include " . " and added new test cases for SQL patterns to ensure correct parsing of SQL patterns and improve test coverage for new functionality
added functionality to set the action bar title in FileActivity and updated it in FileDisplayActivity to ensure the action bar title is dynamically updated when the file is saved
fix : when the first element be the last element of the list , it should be the last element of the list
removed the hour value from the schedule annotation from the CleaningService to a fixed value of " 0 " to simplify the scheduling and improve performance by reducing schedule time
updated TransactionalValidationListener to enhance partition handling based on table type to improve the accuracy of table path validation based on partitioned tables
updated ReplicationHandler and SnapPuller classes to enhance replication functionality and improve code clarity
changed the data type of generatedKeys and optimized SQL execution in ShadowSQLiteDatabase to improve compatibility with database insertion and ensure proper handling of auto - increment keys
simplified the lambda expression by removing an unnecessary space in the return statement to improve code readability and maintainability
update test to also fail to inline due to failure to inlin
[ issue # 4477 ] increase thread pool size in webclientfactoryimpl ( # 4898 )
deleted the ` HttpTestAccount001 . java ` file to the test class is no longer needed for the current project
http : / / issues . apache . org / jira / browse / amq - 4498 - fix callback callback test
camel - 6016 fixed the unit test error of camel - cxf
fix stringindexoutofboundsexception when use clearechooser in clientutils .
camel - slack should use java . time . duration where possible .
fix up event fire for itemstack drop in the client - side .
updated FormLayout dimensions and modified JCheckBox construction in TranscodingTab . java to improve UI layout flexibility and enhance user interface clarity
added a new file ` bug8057791 . java ` implementing a GUI with NimbusLookAndFeel to demonstrate the usage of NimbusLookAndFeel for graphical UI updates
updated conditions for flag assignment in LambdaToMethod . java and added a new LambdaInterfaceStaticField . java file to improve code clarity and functionality by refining the logic for determining static fields
besu : fix miss websocket method when engine api be add
changed the condition from checking if the ' to ' string is not empty to checking if ' to ' is null instead of checking if ' to ' is not empty to improve code clarity and prevent potential NullPointerExceptions
refactor ParquetFixedWidthDictionaryReaders to use a conditional logic for reading fields based on dictionary support to improve code clarity and ensure correct handling of dictionary data when reading records
updated conditions for calculating task and divider sizes in PortraitPagedViewHandler . java to improve clarity and correctness in layout handling for landscape orientation
added logging aspect and annotation for improved logging functionality in Spring Cloud application to enable unified logging before and after method execution , enhancing monitoring and debugging capabilities
updated thread state logging format in QueuedThreadPool . java to ensure proper handling of empty trace cases to improve debugging information by avoiding null pointer exceptions
updated the combinations method signature to accept an Optional implementation instead of an Optional to enhance flexibility in handling different implementations and improve code clarity
updated the calculation of ReferenceMap to include totalFrameSize to ensure the ReferenceMap accurately reflects the total size of the target
update TypesafeConfigurator to enhance type safety checks to improve reliability and performance of type management in the application
add karaf feature for camel - graphql component , and add a karaf test for camel - graphql use karaf
test : add test case for rfe2891944
removed URL encoding from StringBuilder in HttpClientIntroductionAdvice . java to simplify the code and improve performance by avoiding unnecessary encoding
replaced ` unsupportedPlatformTool ` with ` UnsupportedPlatformTool ` in ` CommandAlias . java ` to improve code clarity and ensure proper exception handling for unsupported platforms
camel - 3244 : fixed # 1034 recover be not always retry due to time issue .
added a size ( ) method to FlightConfiguration and its implementation in FlightConfigurationImpl to provide a way to retrieve the size of the map
add reflection - based access to addressmanager to prevent test failure .
updated COL _ SPEC and ROW _ SPEC for improved layout flexibility in VLCVideo . java to ensure correct alignment of UI elements within the user interface
rename bisq / bisq to bitsquare / bitsquare
update authority string from " com . klinker . android . talon . provider " to " com . klinker . android . twitter . provider " to align with the new project structure and ensure correct authority is used
mng - 2788 : user . xml be no longer an empty directory , just make it empty
added a call to bind the GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to ensure proper buffer management for improved performance
updated ServerHttpSecurity configuration methods to enhance security features and improve request handling
disable postgres stored procedure test ( # 2027 )
added default headers management in HttpClientProperties and CasCoreHttpConfiguration to enable dynamic header configuration for HTTP requests
add good error response for user password not valid exception
deleted the NoOpConfigPathGetter . java file to the class was deemed unnecessary for the current implementation
[ scb - 2657 ] fix engineauthservice signingkey ( # 3568 )
replaced CascadedStyle with CSSName and added checks for null or empty values to improve handling of float values and ensure proper rendering of inline blocks
planner - 279 - make planningfact collection property and property optional , add javadoc
updated the method for retrieving default headers from RestUtils to use MultiMap instead of Map to improve code readability and consistency in header handling
replace ` enc ` with ` charset ` in ` ProxyServer ` and ` Realm ` classes to improve clarity and consistency in character encoding management
added a method ` getJobId ( ) ` to ` StepContext ` class and a corresponding test in ` StepContextTests ` to provide a way to retrieve the job ID safely and ensure that the job ID is not null
replaced custom comparison methods in ` ExpandableUploadListAdapter ` and ` FileStorageUtils ` with direct comparison methods in ` Long . compare ` to improve code readability and efficiency by using direct comparison methods
reduce error log level for jdk http client from error to debug . ( # 4561 )
updated import statements in LegacyAuthenticationHandlerAdapter . java to streamline dependencies and improve code clarity
changed the access modifier of the WingDings class from final to public to allow access to the WingDings class from other packages
do n ' t remove filter without owner if the filter be not our own
added a wrap method in BCPGInputStream and removed it from multiple classes to streamline input stream handling by consolidating the wrapping logic into a single method
replace single output stream with BufferedOutputStream and ensure proper resource management to improve performance and ensure data is closed in case of exceptions
added a new test method ` testSelectAllFromView ` and modified column handling in ` HiveBaseResultSet ` to improve test coverage and ensure correct retrieval of data from view
modified FocusTransitionTest . java to include new test cases to ensure test cases reflect current focus behavior during transitions
mow - 295 fix build after gwt refactoring
added a check for ` sourceTask ` type before retrieving job counters and improved error handling for counters to ensure proper job instance retrieval and enhance robustness by avoiding null pointer exceptions
removed extra whitespace in HttpInput . java to improve code readability and maintain consistency
added an change listener to the AppearancePanel for color changes to improve user interaction by allowing color updates when the application changes
fix for last commit : do n ' t run taskhelper constructor with - h option
fix intermittent failure that be currently fail by the test
pdfbox - 4068 : fix deadlock in ccittg3 . tiff file creation
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize DefaultParameterHandler functionality in the language driver
lsra : optimization to avoid out of loop for uncached loop .
add micronaut support for groovy script . fix # 58 . ( # 58 . )
refactor : add closeInternally ( ) to pgresultset for good thread safety ( # 1657 )
initialize serviceAdvisorType to PYTHON to ensure proper initialization of service advisor type
avro - 2175 . avoid deadlock in genericdatumreader . getresolver ( ) .
change the constructor signature of path to be a list , not a collection , so it should be a delegate
replaced byte array declarations with a random byte array for memo data to improve code efficiency and maintainability by utilizing a consistent byte array representation
added a method ` setPersonalisation ` to generate a string representation of a given date and its locale to provide a way to set personalization of parameters in different locales
removed redundant code block from CodeGenerator to streamline logic to enhance code clarity
removed the 1 parameter from the scroll method signatures and adjusted its usage across multiple classes to simplify the scrolling logic and improve code readability
changed the access modifier of the pointer variable from private to public and added reset methods to allow external access to the pointer and allow for resetting the record ' s position
rename contentdigesthistory to bdbcontentdigesthistory to well reflect the bdb architecture
ternary to boolean cast should n ' t need to cast to a boolean
replaced ArrayList with a boolean variable for tracking the acceptance status to simplify the logic by using a boolean for clarity and efficiency
removed a redundant import statement and added a default value of false to streamline the code for better clarity and functionality
added isAutoIncrement method to LiquibaseDataType and provided its implementation in LiquibaseDataType to ensure proper method overriding for auto - increment columns in the database schema
added default error message for command failure due to internal server error
updated imports and added JVM options in LocalManagementTest . java to improve performance monitoring and ensure compatibility with JDK testing framework
replaced ` add ` method calls with ` push ` method for ` currentStatus ` and ` boosterStatus ` to improve the method ' s functionality for better clarity and performance
added support for ajp connector in GitBlitServer to enable dynamic port configuration for improved flexibility in communication
added type coercion logic in TransTypes . java and created a new Intersection03 . java file with a test case to ensure correct handling of compound types and validate functionality through testing
changed class name from EmbeddingTest to EmbeddingITest to clarify the purpose of the class as its integration test
added a method to start the toolkit thread only if it is not already started to optimize thread management by avoiding unnecessary thread creation
add a compression pool to the content substitution in parallel . also , remove it from the global cache .
update visibility logic to manage surface visibility based on window type to ensure proper rendering and prevent rendering issues on Windows platforms
simplified the temporary directory initialization by use the class name instead of a hardcoded string to improve maintainability and readability of the test environment
added parameters for enabling full and solidity node HTTP functionality to enable flexible configuration of HTTP services based on configuration settings
added a service property and modified the return statement in GoogleCloudFirestoreTicketDocument to include it to enhance the ticket document by incorporating service information for better context
updated Generate . java file with new functionality to enhance performance and maintainability of the code
updated the nullable parameter annotation in JsonFunctions and added new test cases for JSON handling to ensure correct handling of null arguments in JSON format functions and improve test coverage
introduced a new constant for dot - only visibility and updated badge size calculations to improve code readability and enhance the logic for determining badge sizes
change freemarkermanager # getconfiguration to be non - final
ww - 3114 add test for invalid exclude package pattern
added support for macOS specific device identification in AppleTest and IdbRunTests to ensure compatibility with macOS environments for improved test reliability
updated DefaultHttpClientFilter and TestDefaultHttpClientFilter to handle exceptions more effectively to improve error handling and ensure proper response status management
refactor the binding and execution of the root script and state saving logic to ensure scripts are correctly initialized and executed during the initialization process
added a new boolean flag TEXT _ BURN and modified conditional logic for rendering to enable conditional behavior for text burning and line counting
added teardown method to TestColumnAccess and TestReadEntityDirect classes to ensure proper resource management and prevent test flapping
added retrieval of parsers by name in SecurityNamespaceHandler to ensure proper retrieval of security parsers
added a new method ` fastpath ` to the ` BoundedLocalCache ` class and a corresponding test in ` BoundedLocalCacheTest ` to enhance cache management functionality and ensure correct eviction counts
refactor RawConnection to extend WebSocketConnection and implement flush and complete methods to improve WebSocket handling capabilities and enhance resource management
improve softassertionsperftest and softassertionsperftest ( # 1269 )
added a new constant TEST _ FAILURES _ EXIT _ CODE and modified python test execution logic to handle failure cases to ensure the test correctly exits with the expected success or failure codes for better test coverage
modify the handling of xAdvances to account for markupEnabled flag to ensure proper processing when markup is disabled or no glyphs are present
refactor score comparison logic in TestBooleanRewrites . java to use modern Java features to improve code readability and maintainability by utilizing modern Java features
update logic to retrieve the enclosing class of a class in TypeHandlerRegistry to ensure correct handling of anonymous classes while maintaining compatibility with anonymous class structures
use socketconnection . flush ( ) for consistency
added an initialization check and modified the removal of OnDrawListener in Launcher and LauncherAnimUtils to improve performance by ensuring listeners are only registered once and are removed correctly
refactor multiple classes including CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder to improve code organization and maintainability
replaced specific rule import statements with wildcard imports and updated condition check to exclude appLICABLE status to simplify import statements and ensure proper handling of appLICABLE states during assignment
change the default return value of getBoolean for MEDIAPARSERV2 from false to true to ensure that the media parser is enabled by default for optimal functionality
do n ' t generate intercepted type for method in aop - proxy . fix # 2941 ( # 2941 )
added permission checks for warehouseDir and partition in FolderPermissionBase . java to ensure proper permission handling and response handling for folder operations
do n ' t publish status in offline mode due to provider ' s registration state change .
updated color calculation in PastelColor . java to use a fixed base color value to ensure consistent color output based on a defined base value
modified implementation of ScriptEngineFactory to improve performance and maintainability of the code
updated the handling of bitmaps in the HolographicViewHelper to include original and outline variants to improve rendering quality by ensuring correct bitmaps are applied for different view states
cloud client : fix npe and add more log
modify the multiwordpreprocessor to also use the containing phrase , not the most recent one
[ hotfix ] [ test ] remove unused import
updated class loading logic to differentiate output formats based on Hive PassThrough output format to improve compatibility with Hive ' s Hive framework
updated ChunkListener , AfterChunk , BeforeChunk , and AfterChunk Java files to improve code consistency and maintainability
modified the range check for ' start ' and ' length ' to ensure proper bounds checking to prevent potential ArrayIndexOutOfBoundsException
updated conditional logic for handling directed graphs and modified UI messages to use HierarchicalUndirectedGraph to improve clarity and consistency in graph hierarchy and enhance user interface localization
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region , fixed c
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing interfaces with static and default methods to demonstrate the usage of default methods in static and static methods in interfaces
camel - 4490 : added support for password property resolve in keyselector .
replaced the handling of ThreadDeath with a direct throw statement in LogResolverBean . java to simplify code and improve readability by reducing unnecessary type checks
updated multiple Java classes related to key management and SSL configuration to enhance security features and improve code consistency across the application
updated JGit version to reflect the latest version and modified jar names to ensure compatibility with the latest JGit features and improvements
client : add optional client key for path - only operation ( # 2178 )
added transformerparser to make it easy to register the transformer use the ' transformer ' namespace .
replaced BACK _ FACTOR with REWIND _ TIME and modified conditions related to duration handling to improve clarity and efficiency in handling resume durations
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and ` JavaSEPort ` classes to control scrolling behavior in the UI components
api : fix printing of usage and permissions
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 50737
updated the sequence and unseq file handling in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to streamline the management of sequence files and consolidate the logic for merging files
remove @ override tag , now the new class do n ' t have to be use
[ netbeans - 1043 ] : synchronize the ruleset when it ' s a new project .
fix a synchronization issue where two thread resolve sootfieldrefs with phantom field type .
use name convention for elastic meter registry ( fixes # 430 )
added interfaces and methods to IController , updated TinyGController to implement currentUnits , and replaced AbstractController references with IController in BackendAPI to enhance controller functionality and ensure consistency in the codebase
added a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to validate the rendering behavior of horizontal rules
replace System . out . print calls with TTY . print calls in TypeSystemTest . java to unify output formatting for better consistency and readability
add miss javadocs , and fix some typo
update condition to check for frameLength being less than or equal to zero in LogInspector . java to ensure correct handling of frame lengths for improved functionality
modified IntFloatMap and IntIntMap to return default values instead of zero values to ensure consistent behavior by returning appropriate values when values are null
fix issue # 1395 : imagedownloadservice fail to update the form field size
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerExceptions during registration
simplified the node enumeration logic in multiple classes to improve code maintainability by eliminating unnecessary method declarations
add null check for the results list in RedisDistributedMapCacheClientService to prevent potential NullPointerException when results is null
added logging for MobFileCache configuration status and updated cache size logging to improve cache management clarity and provide better visibility into cache settings
refactored the ColConvCCMTest class for improved readability to enhance maintainability and clarity of test cases
replaced instance variable declarations with local variables for ` target ` and ` allowCovariantReturns ` , and updated method calls accordingly to enhance code clarity and maintainability by reducing instance variable usage
pdfbox - 5672 : remove some unused code , a suggest by valerybokov
replaced ` Float . toString ( ) ` with ` asString ( ) ` for JSON processing and added a new ` X ` class with a JSON representation to improve performance and clarity when handling string representations of JSON objects
avoid race - condition : fileconsumer . read should return immediately
added a new Runnable inside EventQueue . invokeLater for asynchronous execution to improve UI responsiveness by ensuring tasks are executed on the Event Dispatch Thread
updated the calculation of maxSize in CompressExtension . java to ensure correct maximum text and binary message sizes are used
updated the adjustment logic for steering values in TestAttachDriver , TestFancyCar , and TestPhysicsCar to simplify the steering value adjustment process for improved accuracy
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to improve performance and leverage built - in security functionality
updated JdbcSerDe to use LocalDate and LocalDateTime for handling date and timestamp values to improve date handling accuracy and consistency in date and time conversion
update VERSION from 2 to 3 and modify metadata reading logic to ensure compatibility with version 3 and improve memory handling
removed FlywayJpaDependencyConfiguration from FlywayAutoConfiguration and added a new CustomFlywayWithJpaConfiguration class to streamline configuration and improve compatibility with JPA
added sorted ( ) method to ClassesImpl . java to ensure the results are sorted before processing
added a method to retrieve the current stable state in LauncherStateManager and updated AbstractLauncherUiTest to use it to improve state management by centralizing the retrieval of the current stable state
refactor SharedInformer to improve code structure to enhance maintainability and readability of the code
refactor memory scope handling in TestCloseScope0 . java to support different Java versions to improve compatibility and maintainability with different runtime environments
change test timeout from 500 to 5000 to accommodate increased server response time
modified CaptchaChannelProcessorTests . java by modifying its content to enhance test coverage and fix existing bugs
add check for change in metadataimport and properly resolve the ownership of an item
added retry logic for saving the registry cache file to improve reliability by retrying failed properties saving after a maximum number of attempts
updated the parameter in the TrackingDirectoryWrapper instantiation from ' mergeDirectory ' to ' directory ' to improve clarity by using the correct directory context
[ test ] unusedimports no long exists on jdk 1.4 , thanks to donald for the patch .
added validation for insert overwrite queries on bucket partitioned tables to ensure that insert overwrite operations are only performed on bucketed tables to prevent runtime errors
updated SAML configuration assertions and added a default zone check in BootstrapTests . java to ensure correct validation of SAML keys and verify the availability of legacy SAML keys
fix excess . isassignableby code for enum field
fix deadlock in mailer model , now only send email if there be an e - mail address .
removed specific comment constants from CommentsParser . java to streamline code by eliminating unused constants
lucene - 1946 : do n ' t throw indexwriter lock release exception , throw ioexception instead
moved DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to better organize test - related classes under a more appropriate package
add conditional check before transform in expressionnode .
updated ByteBuddy instantiation to use TypeValidation . DISABLED to disable type validation for improved performance
refactor ` JavacRoundEnvironment ` to use ` TypeElement ` instead of ` DeclaredType ` to improve type handling and eliminate unnecessary type casting
updated lock timeout from 100 to 1 in multiple test files to ensure consistent lock behavior under expected conditions
allow logging . file and logging . path to refer to log system property
add fix for serviceapi to get redirect status code
added constants for service and version mappings and updated MicroserviceFactory to utilize them to improve code maintainability and ensure proper configuration handling
modify toethread to use beanname instead of proc . getName ( ) to ensure that the correct bean name is used for processing
updated database helper methods to use static variables and added database prefix usage to ensure database accessibility and clarify test expectations
updated return statement to retrieve unread unread count from the current account to ensure accurate unread count retrieval for user sessions
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method to improve clarity of thread pool preview functionality and ensure compatibility with JRE ranges
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and Parameter classes to limit the number of orders and prevent exceeding the specified limits
added null check for user before querying user settings in HomePage . java to ensure robustness by preventing potential NullPointerExceptions
[ hotfix ] [ core ] fix localfilesystem # match for relative wildcard path
added maximum width and height limits to rectangle creation in ComponentBuilders . java to ensure that the rectangle dimensions do not exceed limits for proper rendering
added logging for setting connection manager timeout and marked the request method as deprecated to improve debugging visibility and signal that the method can be removed in future versions
do n ' t log error when document can not be create
refactor code to use ` map ` for transforming filenames in ` CrateType . java ` and add a new test for ` RustBinaryIntegrationTest . java ` to improve readability and ensure the correct file path is generated for the generated output
added number validation and split handling in SpellChecker . java and created corresponding tests in SpellCheckerTest . java to ensure correct handling of numbers with separators in the spell checker framework
no actual changes were made to the MESSAGE constant to maintain consistency in code formatting
added methods to retrieve OCFileListFragment and show file actions in FileDisplayActivity to improve file management and action handling within the UI
hive - 23219 : remove daemon thread from replication handler ( jesus camacho rodriguez , review by gopal v )
replaced the argument in the update method call from recid to recid to ensure the update operation accurately reflects the intended data type
renamed the constructor parameter from ' materials ' to ' theMaterials ' and added a loop to remove all Rocksim component file columns to improve clarity and ensure correct handling of material parameters in the StreamerLoader
added additional gwt - related components and constants to DependencyBank . java for various components to enhance the functionality and maintainability of the codebase
added functionality to manage recycled views in AppsContainerRecyclerView to improve layout efficiency by ensuring proper recycling of views based on available and available dimensions
added a new test method ` testBuildingBinariesSeparately ` in ` AndroidBinaryCrossCellIntegrationTest . java ` to ensure the caching mechanism is correctly implemented when building binaries separately
fix / / baritone and add more room for mining ( # 440 )
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating Liquibase parsing and resource management
add bitmap handling for null values in FilterOperatorUtils to optimize bitmap processing when filtering is enabled
refactor validation for bootstrap method parameters in JDynamicInvokeExpr . java to ensure correct parameter types are enforced for bootstrap methods
upgrade to jetty 9.0 . 3 to try to fix the ci issue .
remove clearing of runtime options in CucumberInstrumentation . java to streamline code by eliminating unnecessary line options
changed the type of the contacts list from RegisteredServiceContact to DefaultRegisteredServiceContact and updated type casting in AbstractRegisteredService to improve type safety and ensure correct handling of contacts in the service
updated the logic for adjusting workspace labels based on cell padding to ensure workspace labels are displayed correctly based on available space
refactor assertions in ReplicationFactorTest to improve clarity and formatting to enhance readability and maintainability of the test code
[ gr - 39905 ] llvm be pre - initialized by auxiliaryenginecache because it define llvm # patchcontext ( ) , but llvm do actually not support pre - initialization .
removed JUnit Ignore annotations from ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest to enable execution of tests that are not ready or stable
replace RuntimeException with JsonIOException in error handling to provide a more specific exception for JSON - related issues
fix intellij warning in visualscoretagtest . java ( # 3596 )
updated error messages for clarity and adjusted directory handling in the Copy . java file system to improve debugging information and ensure correct directory structure during copying operations
refactor segment name validation by introducing a new method ` isHighLevelConsumerSegmentName ` to improve code readability and encapsulate consumer checks in a dedicated method
added methods to start activities in ShadowFragment and corresponding tests in FragmentTest to ensure proper handling of activities when the container is not attached
fix ( date ) : return current time instead of current time for date
updated the return value to include specific CPU options for target CPU to ensure compatibility with 64 - bit architectures on macOS
added a method to delete files associated with an account in FileDataStorageManager to improve file management by allowing deletion of files associated with accounts
updated the syntax in SchemaCrawlerCommandLine to include " - h " for help options to improve clarity and consistency in help output
added a new method createSuiteDescription and updated the equals method in Description to include a unique id validation to ensure that the unique id is not null and improve string comparison functionality
replaced the import of Hashtable with MultiFormatReader for decoding bitmaps to simplify the code and improve readability by using a dedicated method for decoding barcodes
removed the source list from the BuckTarget constructor and related classes to simplify the constructor signature and eliminate unnecessary complexity
added unit tests for the ` rangePastEnd ` and ` rangePastStart ` methods in ` GWCZoomContextFinderTest . java ` to ensure correct functionality of the ` ZWCZoomContextFinder ` under various scenarios
added a method to enable dependency tracking in JRubyScriptEngineConfiguration to improve tracking capabilities for dependency tracking
replace getRequestURI ( ) with getServletPath ( ) in PromptFilter . java to ensure correct authorization path handling
handle alreadyexistsexception first before try to add them to the database
increase resolution in welcomewindow so it do n ' t change size if the size of the image change .
add a default tuner name and improve tuner configuration handling to enhance clarity in tuner configurations and improve resource management based on running status
added HasTests interface to AbstractShBinaryDescription and added a new test method in ShBinaryRuleIntegrationTest to ensure that tests are correctly executed when a specific test is present
added a conditional check for " db : hsqldb " in TestFilter . java to ensure that the includeString variable is correctly set for SQL queries
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistent formatting
truffle : do n ' t materialize stack trace when there be no stack trace .
export jvmciveto to jdk after successful compilation
added test to ensure duplicatecommandhandlerresolver be not pick up during aggregate
[ flink - 20865 ] [ runtime ] add fine - grained _ shuffle _ mode to cluster .
fixed fish hook placement , close # 497
camel - 15656 : added javadoc for new ftp and sftp component
renamed methods and variables from ` commandRunner ` to ` stepRunner ` across multiple classes to improve code readability and consistency with naming conventions
change variable name from useShortNames to compressPackageNames in GangliaReporter . java to enhance clarity regarding the purpose of the variable
added a check for empty items in AppsContainerRecyclerView to prevent processing when there are no items to process
added a conditional annotation for bean name in ZipkinAutoConfiguration to ensure bean creation only if it does not already exist
- add support for mdc property in xmllayout a find in lbclassic - 22 contribution
added the ability to omit headers in response writer and named lists to enhance response processing by allowing the specification of the response header
fix the EscherProperty method to use getPropertyNumber ( ) instead of an ID and add a test case for various properties to ensure correct retrieval of property names and verify functionality through unit testing
fix : description . getbuildruletype ( string ) throw nullpointerexception
make fasthierarchy thread - safe , also add the modificationHierarchy call to the scene
fix a nullpointerexception in tradedatavalidation ( # 303 )
added a ` getObjectHash ( ) ` method to ` AbstractNamedObject ` and modified several methods in ` TableRetriever ` and ` DatabaseSchemaCrawler ` to include ` tables ` parameter to enhance functionality by allowing hash code generation and improve flexibility in column management
wallet : make transaction that be n ' t be able to change transaction confidence , by default .
fix for httpclient introduction not handle ` ` request header ' ' request . fix # 1450
fix # 2369 : filter out ` _ ` from recipe definition and condition ( # 2369 )
hbase - 2598 do n ' t swallow exception when closing hregion
replaced the manual null checks with direct equality checks for lengths to simplify the code and avoid redundant checks for equality
[ java ] do n ' t lose image when check for subscription .
8153222 : replaced reflection - based process . destroy with process . destroyforcibly
added check for Oracle in the test case to ensure compatibility with additional database types
camel - 2038 : camel - mail - try to connect to mail store only if test for connect to it .
added check to prevent parsing if there be more tokens in the query that have be consumed in the antlr
camel - 16641 - aws - translate : list all the available language in the enum - start with ` ` k ' ' complete
added getdataFileName ( ) method in Model . java and updated model initialization in Voice . java to properly retrieve the data file name for HMM models based on their content
added email domain getter and setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable flexible management of email domain in identity provider definitions
added new configuration constants for request timeouts in the Configuration class to improve configurability and allow for easier access to timeout values
add defensive code to avoid unnecessary processing if not necessary
added RedisCategory import and categorization for RedisServiceRegistryTests to organize tests by specifying Redis functionality
added parameterized tests for handling deprecated methods in ` FindDeprecatedMethodsTest ` and improved the method signature in ` FindDeprecatedUses ` to enhance test coverage and ensure correct behavior when no longer in use
added a call to the superclass ' s paintComponent method in WaterfallPanel to ensure proper painting of the component within the UI
removed unused imports from multiple classes to clean up the code and improve maintainability
updated event handling in ContractEventTriggerCapsule and LogEventWrapper to include event signature full to enhance event logging clarity by including additional information about the event signature
[ bug fix ] filetesthelper do n ' t care if the current sessionid contain an underscore
replaced ` clearRect ` method calls with ` fillRect ` and added color handling to improve rendering color customization and ensure consistent rendering behavior
jbrules - 3631 : if builder fail to compile , throw an exception
removed debug print statements from various Java files to clean up the code and improve maintainability
added a check for NaN values in scoreDocs [ 0 , 1 ] to ensure correct handling of NaN values in the field cache sorting logic
[ pytorch ] fix potential npe in checkdevicestate . isdynamicupdate ( )
added support for zero time strings in ColumnSnapshotGenerator and created a test for date default value in MySQLIntegrationTest to ensure proper handling of null values and verify default value behavior for date fields in the database
rename offerermultiSig to offererbtcpubkey , close # 861
updated type declarations and variable types to use wildcard generics for better type safety to enhance code flexibility and maintainability by allowing for broader type parameters
[ drools - 3762 ] fix keyset selection in kiesessionmodel ( # 2935 )
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure proper reference to the current configuration context
make modal base ui change in taskview only if modalness change .
added a test for creating codec options from the profile level in ShadowMediaCodecListTest . java and implemented native settings in ShadowMediaCodecList . java to ensure correct functionality of the codec settings handling in the application
fix # 5460 - confirm button focus after enter key
added validation for width and height , handled potential OutOfMemoryError , and ensured valid XRSurfaceData instance is used to improve robustness and error handling in image creation processes
replaced the thousands separator in FormatData _ uk . java with a Unicode escape sequence to ensure accurate representation of the thousands in Unicode format
replaced integer array of loops with an AtomicInteger for thread - safe updates to improve concurrency handling and prevent race conditions during concurrent operations
added beta flavor handling and updated UI components based on visibility in AchievementsFragment and LeaderboardFragment to ensure proper user interface feedback for unavailable beta flavors and improve user interface consistency
added access , name , and desc fields to the SearchMethodVisitor class to enable better access control and retrieval of search parameters
added sleep calls and modified exception handling to include InterruptedException to ensure proper synchronization during test execution and handle InterruptedException more gracefully
move setting of duration from resume stop ( ) to after resume ( ) to avoid exception if the duration have not be set yet
xml dsl : remove xml element mark for clarity , etc .
fix race condition in reader . readtxnSlow and reader . gettransientrowcount
add system property ` ` ssl . keymanagertype ' ' to thrift source and client
replaced JavaIsoVisitor with TreeVisitor for type checks to improve code maintainability and readability by utilizing Applicability for type inference
fix ` ` tab ' ' and ` ` repeat ' ' key handle in manual mode
rename accessspecifier . package _ private to accessspecifier . none , resolve http : / / github . com / codenameone / codenameone / issues / 220
refactor methods related to unhandled types in Check . java and add a new class T6199153 . java to improve method naming consistency and enhance error reporting for better debugging
updated the calculation of stripes and stripeStats in OrcInputFormat . java to ensure correct stripe statistics are retrieved based on input format
added a null check for the exception variable in JCache . java to prevent potential NullPointerExceptions when handling exceptions
( chore ) camel - myhentaicomics : update myhentaicomics to use https ( # 8370 )
add a commandline option to print the current version of the application to ensure the application provides a way to access the current version
fix parse error with applet in export ( bug # 1596 )
added default rotation handling and improved input connection management in ConsoleActivity and TerminalView classes to enhance user experience by providing visual feedback during keyboard interactions
changed the type of the ` hq ` variable from ` PriorityQueue < ? > ` to ` PriorityQueue < ScoreDoc > ` to ensure type safety and eliminate unchecked cast warnings
added a null check for ownerConnectionAddress before proceeding with further operations to prevent potential null pointer exceptions when accessing the owner connection address
camel - 2039 : added support for the custom headermapfactory to be use in the jolokia command line .
replace single quotes with single quotes in JavaCompiler . java to improve code readability and consistency
int - 1857 jms outbound gateway now register a definition parser for the outbound gateway .
updated index reference from ` i + 1 ` to ` i2 ` in the assertion check to correct the logic to correctly compare with the intended target array replacement
fix npe in abstractscriptprocessor ( # 5454 )
added support for PGStatement in the proxy implementation and created a test for it in ConnectionPoolTest to ensure proper handling of PG statements and verify functionality through automated tests
[ beam - 6157 ] only flush memtable when flush operation be successful .
updated log level from error to warn for missing memory limit in AtomicRemainder . java to better reflect the severity of the log output regarding memory limits
hbase - 27304 remove unnecessary optimisation of mintimestamp when calculate mintimestamp ( # 4173 )
fixed - ` ` timeout should be 0 ' ' for rblockingdeque and rblockingqueue . poll ( ) method from spring 3.0 . 8 environment
updated printMap calls to remove unnecessary string formatting to simplify output for improved readability and maintainability
fix documentation for miss engine class ( # 6800 )
fix : testng - 4759 : use class _ COMPARATOR . compare instead of stream . of
[ issue # 3223 ] fix rocketmq acl client do n ' t work properly ( # 3223 )
updated condition in BKDWriter to check for numDataDims instead of numIndexDims to ensure correct validation of data processing configuration
[ zeppelin - 5885 ] fix npe in notebookserver when null interpretergroup
mob - 867 : kernel . getlistelement ( ) return null for undefined variable ( should fix a bug )
removed the ` public ` access modifier from the ` verifyIdsAreStable ` method and the ` getNodeId ` method in ` NodeIdAccessor . java ` to enforce encapsulation as the method is intended for internal use only
cloudstack - 7000 : improve error message when attach a volume to a vm during snapshot creation
resolved - issue batch - 347 : remove unused public method from itemwriter
updated the mock Thing initialization to use a string argument instead of an empty string to provide a clearer and more descriptive representation of the thing implementation
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a test for it in ` ImageNameSubstitutorTest ` to provide a meaningful string representation of the ` ImageNameSubstitutor ` for better debugging and logging
replace FSDirectory with RAMDirectory for temporary directory creation to improve performance and resource usage during tests
added a private static float variable ` mLineHeight ` and modified its assignment based on its value to ensure line height is consistent and avoid potential issues with oversized text rectangles
refactor WalletAppKit . java for improved code organization to enhance maintainability and readability of the wallet app
bugfix # 256737 , make sure getinitstream ( ) always return an inputstream
fix remove chat transport option in the chat transport selector box .
added methods to resolve and replace tokens in Context and ContextImpl classes to improve token handling functionality in the application
updated the handling of BsqBlockChainExplorer to avoid null pointer exceptions to improve robustness by ensuring proper fallback when no BlockChainExplorer is present
added methods for attribute management in the Session class to enable retrieval and removal of session attributes for improved session management
add dbjson _ list test for the new bean type
fix initial page count for monotonicappendinglongbuffer to avoid extra array allocation
[ hotfix ] [ cli ] fix the wrong hyperlink in batch command line
added JSQL data source and transaction manager beans to BatchMetricsApplication to enable support for HSQL database connections in batch processing
fix # 547 - glowrootloghttpservice be now an httpservice . fix # 547
pdfbox - 1990 : do n ' t use stroke java composite , a suggest by gregory chanan
removed synchronization from the close ( ) method and added synchronization for refreshing the IndexWriter in DocumentsWriterPerThread to improve thread safety and ensure proper cleanup of index file operations
added methods to retrieve and set multiple and validation constraints in UiBinding to enhance property management and improve data handling for UI components
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for consistency to ensure correct representation of variables in the builder ' s method
full save : only update the stored tree for a full save , fix error handling
modified the condition handling in the Affix class to utilize a pattern - based approach to improve flexibility in condition management across different patterns
replaced explicit type parameters with the diamond operator in KrakenAdaptersTest . java to improve code readability and maintain consistency with modern Java conventions
removed unnecessary import of CharTermAttribute from DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
updated NBJavacTrees class for improved functionality to enhance performance and maintainability of the code
hive - 23790 : vectorizedprimitivecolumnreader need to check for unsupported data encoding ( gopal v , review by jesus camacho rodriguez )
updated logging logic in HttpSolrCall . java to use MarkerFactory and improved conditional logging to enhance code clarity and maintain consistent logging practices for better debugging
destroy metadata service proxy when instance be remove
fix infinite loop when maxlevel be less than 10 ( # 1375 )
updated message construction in HubChangeExecListener to include changelog registration status to improve clarity of communication failure messages by providing clearer context when the changelog is not registered
add qr code decoding hint to abstractblackboxtestcase . the test be fail though .
changed return type of executeCompilation method from int to ProcessExecutor . Result and added a new test for compiler error handling to improve type safety and ensure the build report contains the correct results
updated event range handling in ObjectStore . java to ensure proper range configuration for query processing
updated the logic in ValidatedLocalValidatorFactoryBean to streamline validation checks for configuration properties to enhance clarity and maintainability by consolidating validation checks into a single condition
remove a temporary block entity from the cache when remove them .
remove useless code in intrinsifyarraycopyphase . copy
enable debug log to investigate gump failure
replaced the WantedAnywhereAfterFollowingInteraction class with a more concise format in the exception handling code to enhance readability and provide clearer error messages during interactions
added validation checks for account existence in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that members are only created with existing accounts to prevent runtime errors
replaced the custom CommandComparator implementation with a TreeMap for sorted command display to improve code readability and maintainability by using a more suitable data structure for command sorting
chore : [ cloud ] update go namespace to match open source code ( # 87 )
replaced multiple ` addProperty ` calls with ` setProperty ` for metadata properties to streamline code readability and maintain consistency in property management
updated AsmLibraryLoader to accept a ClassLoader instance to ensure proper class loading behavior by using the interface class loader
pdfbox - 1473 : improved handling of rrcurvestring , see bugzilla 49933
updated Java2TypeScriptTranslator to adjust namespace export based on definition scope to improve code clarity and ensure proper namespace declaration formatting
replaced EmptyServerHandler with AbstractHandler that handles HTTP requests to improve request handling and output stream copying for better performance
simplified the listener registration in HelloInput . java to improve code readability and reduce unnecessary array usage
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 436 - avoid npe when look for root path
created and modified package names in multiple test files to ensure consistent organization and clarity in the test suite
fix issue with inverted image creation on android 4 . x grid ( # 3458 )
fix jvmci native image location warning during libgraal initialization
[ beam - 10727 ] remove portability unsupported test from pardotest
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 1 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization of enum sets
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and conferencemembers
log warn when max - size per _ node config do not allow any data in map
fix outdated text on normalize and findbugs
lucene - 3159 : fix unnecessary allocation in threadedacousticscorer . getlistiterator ( )
nethooks : return null instead of assertionerror if an exception be throw
build : fix a test that fail on window
added makeString methods with start and end parameters to multiple classes to enhance string handling capabilities for better performance and readability
replaced hardcoded order value with a static final constant in OidcServicesManagerRegisteredServiceLocator to improve code readability and maintainability by using a defined constant instead of a hardcoded value
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated related tests to enable validation of weak associations based on the provided rule
refactor Deflater class for improved performance to enhance compression efficiency and speed
added a try - finally block to handle potential exceptions to ensure that runtime exceptions are properly propagated to the caller
do n ' t convert empty string to version if there be no content
fix for # 3373 : nearbylistfragment do n ' t always return the list when it ' s empty
camel - 7999 : camel - mail - optimize content - type check for ` text ` component ( # 7000 )
changed the access modifier of AUTH _ MAGIC from private to public in OpenSSHPrivateKeyUtil . java and added a format check in OpenSSHPrivateKeySpec . java to allow public access to the AUTH _ MAGIC and ensure compliance with updated authentication specifications
refactor the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding behavior to enhance flexibility in updating item locations based on binding status
replaced specific Hibernate annotations with a wildcard import and modified entity management code to streamline imports and improve entity management during testing
updated import statements for ` DefaultOAuth2RequestFactory ` and added a user approval request method in ` TofuUserApprovalHandler ` to ensure proper class usage and implement user approval functionality
fix influx name convention apply to spring ( # 645 )
minor refactoring . avoid use println , do n ' t write to system . out
6986400 : change cookie to cookie2 in 6980004 fix
[ jbrules - 3695 ] prevent stack overflow when compare ` ` string ` ` to ` ` string ' ' for serialization
added functionality to clear all tasks through a click listener in OverviewActionsView to enhance user experience by allowing users to clear all tasks easily
updated the timeout value and refactored cluster stack version creation logic to improve stability and efficiency in handling cluster stack versions
remove memoryleaktest since that be a fragile way to check memory be handle by the vm .
modified the return statement to include the local host address or hostname to ensure the returned URL is formatted for local testing
added a check for MVDWAPI settings and modified the MVdWPlaceholderAPI plugin condition in ServerListener . java to ensure compatibility with the MvDWPlaceholderAPI plugin configuration based on the settings
fix partition assignment test by assert cluster size before terminate node
added a SingletonHolder class to manage FFI provider instantiation to improve flexibility and maintainability by allowing the use of different FFI provider implementations
tika - 3744 -- fix for npe in batchprocesstest due to hierarchical file list
added null checks and improved handling for null objects in MongoTemplate to ensure robustness and prevent potential NullPointerExceptions during object saving
nodeclass : set the position to node _ list for the position instead of the position for the direct input
added accTradeValue field and its getter method in BithumbTicker . java , and updated related classes to reflect this change to improve trade value handling and ensure accurate data retrieval
fix extra logging in realtimesegmentdatamanager ( # 11543 )
replaced hardcoded value for maxParallelThreads with a constant MAX _ PARALLEL _ TASKS to improve code maintainability and readability by using a descriptive constant instead of magic numbers
replace ArrayList with CopyOnWriteArrayList for headerReaders and dataReaders in FixedByteMutableForwardIndex and FixedByteSVMutableForwardIndex classes to improve thread safety when accessing shared resources concurrently
move dictionary - related dictionary implementation from o . a . c . b . c to o . a . c . protocolprovider .
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during processing
add a sleep to reduce flakiness in camel - mesv
updated condition in DelegationService . java to allow for greater than currentCycle to enhance logic for handling cycle conditions
updated ` RandomValueStringGenerator ` from 6 to 10 in ` JdbcExpiringCodeStore . java ` and modified assertions in ` CodeStoreEndpointsTests . java ` and ` AutologinIT . java ` to use ` 10 ` instead of ` 6 ` to enhance code generation accuracy and correctness in tests
added a check for UniqueConstraint to ensure correct matching of unique objects to improve type safety and correctness of the filter logic
updated the handling of description patterns and added multiple instances for multiple languages to improve accuracy of description parsing and enhance the reliability of the application
do n ' t swallow arrayindexoutofboundsexception and classcastexception during error handling
added a withReferenceFilter method to ListImagesCmd and updated ListImagesCmdImpl to use it to enhance image filtering flexibility by allowing dynamic values
camel - 8562 : remove the bridgeerrorhandler option from the endpoint ( # 8708 )
add logic to break ifndef or # endif in opexclusionutils and ensure all ops are set correctly
do n ' t open a database if there be an error
added new Politician instances and updated session insert methods in HonestPoliticianExample . java to enhance functionality by replacing various politician instances with more relevant Politician instances
[ zeppelin - 5885 ] fix error message in beanshellinterpreter with empty file
camel - 10494 : restlet component should use the port number or default port to configure endpoint .
removed unused imports and added a case for WALL _ SIGN in SchematicFormat . java to streamline the code and improve clarity by eliminating unnecessary dependencies
set the maximum length for query results in QTestUtil and update SessionState to use a property for configuration to ensure query results do not exceed database limits and improve configuration handling
changed access modifiers of userName and securityManager variables to private and refactored the createHttpConnector method to improve encapsulation and enhance configuration handling for HTTP connections
[ flink - 34402 ] [ connectors / kafka ] change naming of sink to be consistent with s3
updated the condition for determining the spark app name in HiveConf . java and HiveSparkClientFactory . java to ensure the application name is only set if it is not the default one
fix # 1108 - correctly resolve excluded property in managedclassfactory . findclass ( )
eranmes on behalf of emmasoderberg : implement maximize feature directly to webdriver server .
reapply : do n ' t ignore main cell ' s buck - out when create projectfilesystem
added a null check for the message containing " entity expansions " in the TestXMLEntityExpansion class to ensure proper handling of exceptions related to entity expansions
update table offset and length calculations to mask out sign bits to ensure consistent handling of integer values within positive range
added a customization method to the DirectMethodHandle class to ensure that the form ' s customized field is not set to null
refactor LineChartRenderer to use a variable for the number of floats and adjust boundary checks to improve code readability and ensure accurate boundary checks for rendering
refactor flavor handling in AndroidBinaryDescription to improve clarity and maintainability to enhance error handling for unsupported flavors and ensure proper resource resolution
updated buffer assignment from ` offset ` to ` i ` in ` Lwjgl11 . java ` to ensure correct buffer size is used for rendering
added new files for Property and PropertySuper , and created a test class for class resolution errors to facilitate proper handling of class loading and ensure proper error messaging during class resolution
fixed possible npe when node . shutdown ( ) be call before the group property be set
updated FilterChainProxy class to use FilterChjainProxy instead of String for better clarity to enhance code readability and maintainability by using a more descriptive class name
fix percentile agg in percentile mode ( # 9282 )
added loading checks for schema and modified table retrieval logic in MetaDataBasedSQLCompletionProvider and QueryTypeAnalyser to ensure that tables are only loaded if the schema is loaded , improving data integrity
changed the initialization of baseType from a new MutableColumnDataType to null and added literalPrefix , suffix , and localizedTypeName variables to handle cases where the value is unknown and ensure proper initialization of the data type
updated various Java files to replace HTML links with simplified syntax to improve code readability and maintainability
replaced singleton instances of ObjectEqualEvaluator and ObjectContainsEvaluator with single instances of BooleanEqualEvaluator and ObjectContainsEvaluator to improve efficiency and prevent unnecessary object creation
updated paths in BuildCommandIntegrationTest and ConfigSettingIntegrationTest for improved consistency to ensure uniformity in configuration handling across the codebase
added sound effect handling in AllAppsView . java to enhance user experience by enabling sound feedback on interactions
pdfbox - 4892 : do n ' t throw exception , throw specific exception instead
enable granularity for left axes in BarChartActivitySinus to improve data representation clarity by enable granularity settings
refactor version comparison logic into a separate method called compareVersions to improve code readability and maintainability
updated file paths and added OS checks in ContextHandlerGetResourceTest . java to ensure compatibility with test root and verify OS support
added close ( ) method to the PinotClientTransport interface and its implementations to ensure proper resource management and prevent potential resource leaks
improve mockappender to reduce time sensitivity
[ beam - 4142 ] improve error message when fail to parse non - directory resource
removed multiple unused import statements related to SpriteBatch in IsometricStaggeredTiledMapRenderer . java to streamline the code and improve readability
fix itemservice # unbind handle be not call correctly . fix # 2560
refactor configuration and attribute classes to improve code readability and maintainability
removed unnecessary condition for starting touch tracking in OtherActivityTouchConsumer . java to simplify touch event handling logic for better readability and maintainability
replaced dynamic button hierarchy with dynamic navigation button based on the current UI mode to enhance flexibility in button appearance based on the current device theme
replaced abort with throw in PolyBenchLauncher . java to ensure proper error handling by throwing an exception when the file cannot be determined
6996563 : 6984311 change forget to update vmstructs . cpp for new field _ operands
added block formatting context parameter to findBox and findElementBox methods to enhance layout management by incorporating block formatting context
updated WorkerProcess and WorkerShellStep to improve error handling and added a method to retrieve standard error output to enhance process execution flow and provide clearer error output during job execution
added null checks for the operator in Collections . checkedList and improved error handling in CheckedListReplaceAll . java to ensure robust handling of null values and provide clearer debugging information
added a volatile boolean flag to manage asynchronous operations in SslConnectionTest to ensure asynchronous operations are handled correctly during connections
added listener management for device configuration changes in DeviceFlag and modified default value in FeatureFlags to ensure listeners are registered only once and to improve device configuration efficiency
added an import statement for JUnit ' s Ignore annotation and annotated the GatewayRSocketIntegrationTests class to temporarily disable tests related to issue 2.2 . 0
added import for MalformedURIException in StandardRequestHandler . java to enable proper handling of malformed URIs in the request handler
[ fix # 75361756 ] instructorfeedbackeditpage : redirect the link to next page after click on the link ( # 7536 )
refactor KrakenStreamingTradeService to ensure ownTradesObservableSet is called only after subscriptions to improve thread safety and prevent unnecessary synchronization
replaced System . err . println with System . out . println for ignoring Class - Path entries to ensure that the warning logs are displayed in the standard output stream
pdfbox - 5573 : add option to make sparserowmatrix randomaccessmatrix ( a suggest by michael klink )
bug cs - 15648 : take the volume ' s pool id if it be null .
refactor file stream handling in Utilities . java to improve flexibility by supporting both local and local configurations
[ beam - 8470 ] update beam - guava dependency to v26.0 - jre ( # 15830 )
bugfix # 207357 , make sure internal state be reset before register memorycctprovider
fix an npe in the conferencechatmanager when try to obtain the result of an operation set for a user .
fix # 854 throw illegaluseractionexception if save fails
added a new ` FolderSyncActivity ` class and modified ` DrawerActivity ` to use it to enhance user experience by integrating folder synchronization functionality
[ flink - 23846 ] [ test ] refactors the test to use try - with - resources
fix problem with space after space in spanish tree
replaced the point value retrieval method in SimpleTextBKDWriter to improve accuracy by using packed value slices from the heapPointWriter
added a new class LocaleRandomizer to handle locale - related randomness to provide a centralized way to randomize and generate locale - related data in the project
tika - 3111 -- add mime type test for application / x - font - printer - metric and metadata .
bugfix # 197070 , remove 10.0 and add 10.0 to automatic upgrade
move the ` AccessController . doPrivileged ` call to encapsulate the ` run0 ( ) ` method execution to enhance security by ensuring ` run0 ( ) ` runs with elevated privileges
do n ' t set a read timeout to zero in an async parser , since that be no longer necessary .
change timeline metric delay from 120 to 600 to improve timeline performance by reducing the initial delay
added the previous . name to the error message in SelectStatement . java to ensure accurate reporting of restricted columns in SQL statements
added date formatting support to ThirdEyeJiraClient . java to enable proper handling of date values in the issue builder
priority generator . generatepriority ( ) move to header instead of lease . generatepriority ( ) for easy override .
added a constant for maximumCALAR replace code size and modified the condition for scalarReplace assignment based on its length to ensure that scalarReplace is only enabled when the actual size exceeds the maximum threshold for efficiency
added DATE _ TAKEN to the projection test and modified fileSortOrder calculations to include DATE _ TAKEN to ensure correct sorting order of media data in uploads
updated image drawing calculations in TexturePacker2 . java to correct image dimensions to ensure proper rendering of images without extra dimensions
fix # 5018 - lazy websocket upgrade filter do n ' t work
added shutdown calls for validateSignService and trxHandlePool in Manager , and refactored timer initialization in NodePersistService to ensure proper resource management and maintain consistency in timer initialization
added the ` RawJsonRequestBodyAnnotationProcessor ` to handle RawJsonRequestBody annotations in the Swagger generator and updated related files to enable support for processing ` RawJsonRequestBody ` in the generated Swagger documentation
added a method to create a Target object with specific extensions to enhance logging functionality by providing a more structured approach to target types
replaced the instantiation of ` ListBeanContainer ` with an ` ArrayList < > ` in ` BeanContainer . java ` and added unit tests in ` BeanContainerTests . java ` to improve flexibility in handling entries and ensure proper functionality through unit testing
hbase - 27844 addendum blockcounthitpercent change to blockcachecounthitpercent
camel - 14186 : cachedoutputstream should free the input stream when exchange be do to avoid oom .
fix teltonik deviceid for position ( fix # 1588 )
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` for reading the first line to improve compatibility with character - based processing
added a null check on the operator in the Attr class and created a new Test class for handling assignment operations to ensure proper handling of null assignments and demonstrate usage of UnknownClass in Java
added enableAccountHandling flag to BaseActivity and modified mixinRegistry call in FirstRunActivity to only call onCreate if the account handling is enabled
fix sochroneresource to detect intersection of any polygon , and avoid infinite loop
refactor DrillViewTable to use a list of paths instead of a single View instance to allow for more flexible handling of different paths within the DrillViewTable
added configuration parameters for the PooledByteBufAllocator in the PooledByteBufAllocatorL class to enhance buffer allocation options for improved performance
updated array type from double to short in ObjectInputStream and added a new CloneArray class for testing to improve flexibility in array handling and ensure correct serialization behavior
added a new configuration variable for the number of threads in LLAP io thread pool to allow configuration of the number of threads for low - level IO thread pool
svm : fix substitution for java 8
updated the bounding box logic in LatLonGrid and added a test for growing polygons in TestLatLonGrid to improve polygon handling capabilities and ensure correctness through testing
alexeibarantsev : implementing expected condition to make test more robust
added an additional parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its visibility to enhance file replacement logic based on whether an insert operation is permitted
added a test for theOuter class reflector in ReflectorTest . java to ensure proper functionality and coverage of inner class behavior in unit tests
updated configurations in IjProjectBuckConfig to use " auto _ generate _ android _ facet _ sources " instead of " disable _ r _ java _ idea _ generator " to enable automatic Android facet sources generation in the build process
refactor logging messages in HubChangeExecListener to use formatted messages to improve readability and maintainability of the code
[ mng - 7635 ] resolve quick link from parent configuration ( # 8635 )
remove @ EqualsAndHashCode annotation and override toString method in YamlConfigFileDTO to simplify equality checks and improve readability of the code
[ java ] add generic to avoid unchecked conversion in awaitableserverclientcallconfiguration
updated forName methods to include CallerSensitiveAdapter and adjusted ClassLoader handling to improve class loading flexibility to enhance compatibility with different class loading practices
[ ds - 4762 ] add authentication to request item repository it . ( # 4185 )
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to utilize a more appropriate exception handling framework
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow external access to the setSecurityContextAccessor method
updated Cucumber framework to use new features and improved date handling to enhance functionality to support date - based date representations in the cucumber framework
fix sf bug with spark plugin incompatibility
updated RestProxyFactory to use ` exchangeSpecification . getUri ( ) ` instead of ` exchangeSpecification ` in multiple services to improve portability and flexibility in API requests
remove debug code that print out redundant record .
camel - 18178 : camel - kafka - avoid commit empty offset / partition when auto commit be enable .
removed the releaseLock call and added outputStatement call in LoggingExecutor , and added a hasDatabaseChangeLogLockTable flag in StandardLockService to ensure proper lock management and enable database change log functionality
updated suppress warnings in AbstractAuthorizeTag and added deprecation in AuthorizeTagCustomGrantedAuthorityTests to improve code clarity and maintainability by addressing deprecation warnings appropriately
fix deadlock in database . closefiles and database . sync . close
spring auto - configuration : fix bug where nested type ca n ' t be determine when they have only one child .
updated the ticker data source from baseSymbol to counterSymbol to ensure the correct currency data is being used for the market data
camel - upgrade to camel - core 2.4 . 0 which fix the c error of camel - core
replace UUID . randomUUID ( ) with System . getProperty ( testId ) for testId to ensure consistency in accessing the testId property
batch - 1851 : fix thread safety issue in defaultjobparameterconverter
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
adjust the height scale for the height map in FractalHeightMapGrid . java to ensure consistent rendering by using the appropriate height scale
removed string equality check and updated test assertion to ensure inequality to improve security checks and ensure tests accurately reflect intended functionality
property dump - partition - id should default to false
added unit tests for TX output handling in UTXOSetTest . java to ensure correct verification and verification of transaction outputs in the unit tests
pmd : fix # 1022 unused field name false positive
pdfbox - 4892 : add null check to avoid npe
fix typo in jsrjoboperator . getjobrestartproperties and add a test
added a new boolean field ` disallowBatchOnCascade ` and a method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform ` class to control batch processing behavior during cascade operations
removed redundant principal assignment and updated the logic for creating a principal to streamline the code to improve clarity and efficiency in principal handling
refactor core closing process to use an ExecutorService for asynchronous execution to improve performance and prevent blocking the core closure process
added visibility logic for mActionsView when fullscreenProgress is zero to ensure proper visibility management of actions when fullscreen progress is in progress
[ hotfix ] [ runtime ] fix checkstyle violation in runidincrementer
renamed BasicEntity and TestUtil classes for consistency to improve code clarity and maintainability
added test assertions for retrievingMatched devices in SchemaRegionBasicTest to ensure the correctness of device retrieval and expected outcomes
hook metric collection exception outside of the eventbus thread ( # 12427 )
added null check for mSumChange and introduced a new EigenvectorCentralityBuilder class to improve accuracy of centralization calculations and provide statistics collection capabilities
802217 : update port usage in test to avoid conflict with java 8
fix geometrygenerator to use unsigned byte array instead of float array for vertex color .
fix blockentitybeacon ' sAmplifier ( # 418 )
refactor TubeCalc class for improved efficiency to optimize calculations and enhance performance
disable httpclient health check by default and non - activemq - service
validation : fix error message when no group be specify
added a key annotation and a timeout attribute to the JList drawn with incorrect colors to ensure the JList drawn with the correct colors in Nimbus L & F
modified the scheduler initialization to use a daemon thread to allow for speedment applications to exit via the main method completion
fix crash when parse lexicon with invalid version . close # 1404
added a reflection access check in the JavaAdapterFactory class to ensure proper handling of reflection - related methods
camel - 11446 : add test case for http : / / issues . apache . org / activemq / browse / amq - 213
modified the ` initIOContext ` method to accept an additional ` RecordReader ` parameter across multiple classes to enhance flexibility in handling different record readers within the job configuration
deleted unused ClassLoaderHolder and LoaderManager classes and refactored deployment logic in VerticleManager to streamline code and improve clarity by eliminating unnecessary complexity
added a new method ` configurationChanged ` and improved file deletion logic in ` FileStore . java ` to enhance configuration management and ensure accurate deletion of existing workspace roots
added try - catch blocks around session callback registration and unregistration methods to ensure proper handling of exceptions to prevent application crashes
updated directory paths for index settings in TestBackwardsCompatibility . java to ensure compatibility with the latest index configurations
[ hotfix ] [ akkarpc ] add new start function to akkarpcserviceutils
hbase - 21623 addendum set mapreduce . map . maxattempts to 3 for testexportsnapshot ( ted yu )
pdfbox - 2714 : set encoding scheme to ` ` fontspecific ' ' by default
fix # 1228 - internal error during ssl handshake .
added validation for IPv4 and IPv6 address types in InetAddress . java and improved address handling in NetworkInterface . java to ensure correct address types and enhance error reporting for invalid address types
added a test for JSON date serialization in a collection using TimeZone to ensure proper handling of date formats and correctly configure the default TimeZone
improve javadocs for message . getoriginalmessage ( ) ( # 1877 )
nifi - 4836 added log for sql generation and updated logic for putdatabaserecord
fix tableoutput . show ( ) to correctly fit on the last line .
pdfbox - 4892 : remove unneeded null check , avoid npe
[ github - 238 ] set low priority for format string checker . thanks to stephan siano for the patch .
add a property to ignore final loop variable in a for - each statement .
updated PDFExporter to set the PDF version and full compression settings , and modified property settings in PDFExporterTest to enhance PDF export functionality and improve clarity in preview properties
added unit tests for ` LdapUserDetailsMapper ` to ensure correct mapping of role attributes to authorities to ensure that the mapping functionality works correctly for both granted and non - retrieved roles
add read timeout to jndi ldap context for cloudstack
8209585 : [ graal ] vmtestbase / nsk / jvmti / scenarios / sampling test fail with ` ` too small stack of resume thread ' '
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
rename boolean fields and logic to clarify their purpose to improve code readability and maintainability by using more descriptive names
added a condition to check if the state handler is invalidated in the gesture state check to improve state management by ensuring the handler only processes valid gestures
updated distance calculations and rotation values in Workspace . java to improve user experience by adjusting the folder creation distance and orientation
updated OciConfigConfigSource to use ConfigProviderResolver and simplified property handling to enhance configuration management and improve code readability
update Testjsig . java file to enhance testing capabilities for improved reliability
fix mana endpoint on mana book , close # 48
regenerate client with updated copyright year ( # 4382 )
remove the useless serialVersionUID field and add a suppression warning for the jdk class
validate exchange tsfile during region startup ( # 12740 )
[ j2kt ] extend tostring ( ) to support null / null pattern use ternary operator .
updated error message formatting in ComparableSubjectTest . java to enhance clarity and consistency in error reporting during type conversion
fix for nutch - 2098 : upgrade to openxml 4.4 . 2 , and add standalone mode test .
updated the calculation for ` numSets ` and improved error messaging in ` Int2ObjectCache . java ` , and added a new ` equals ` method for comparing values in ` Map ` to ensure correct capacity constraints , enhance readability , and functionality for proper object comparison
removed unnecessary sorting of security filter chains in WebSecurityConfiguration to streamline security filter chain configuration for improved readability
removed the TimeInForce type from the MARKET order type in BinanceTradeService . java to simplify the order type initialization for improved functionality
implemented AbstractRangeRandomizer in FloatRangeRandomizer and modified related tests to enhance functionality to ensure minimum and maximum values are within valid ranges
updated KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to improve formatting for better readability in output
camel - 14263 : camel - core - optimize to only provide component documentation if need .
added error handling and test cases for ` bound ` in ` SourceUtils ` and created a new test class ` TestGetBound ` to improve robustness of type binding logic and ensure functionality is verified through unit testing
refactor parquet filter predicate creation to use a helper method to improve code readability and maintainability by reducing repetition
updated artifact name handling in BatchPropertyBeanPostProcessor and added cleanup methods in JobContextFactoryBeanTests and StepContextFactoryBeanTests to improve resource management and ensure proper cleanup during tests
update certificate handling to read and store certificates in a loop to ensure all certificates are processed at once to avoid potential data loss
changed the type of " libdefaults " from boolean to String and updated the return statement logic in Config . java , while introducing a new DnsFallback . java class to enhance type safety and ensure consistent behavior for DNS fallback configuration
add extra context to exception when tag write fails .
replaced ` success ` with ` url ` in ` DepositAddress . java ` and updated JSON property names in ` DepositAddress . java ` to better represent the purpose of the property and improve clarity in data representation
refactor the return statement in WindowsSecurity . java to use a lambda expression instead of an anonymous class to enhance code readability and ensure proper resource management
removed " address " from the scope in CommonOAuth2Provider and its tests to simplify the OAuth2 provider scope by only including email addresses
refactor ManagedSelector to utilize a CountDownLatch for better synchronization upon submit to enhance the startup mechanism by ensuring the submit process completes before proceeding
[ wled ] added saturation to wled handler ( # 1592 )
replaced the ` isValidCaller ` method with a static final set of ` VALID _ CALLERS ` to simplify the code and improve readability by using a more explicit collection type
added a new method caseJSRInst to InstSwitch . java to enable handling of JSR - specific case handling
added transaction management to the subscription activating subscriber and updated handleMessage method to include transaction handling to improve subscription performance and ensure message processing in a transaction context
replaced the SQL update statement with a new update statement for improved data handling to enhance query efficiency and ensure safe insertion of prepared statements
added elevation property to ContactItemInflater based on device size and SDK version to ensure proper elevation display for devices running Android versions below Lollipop
renamed ` typeInformation ` to ` identifier ` in multiple locations to improve clarity and consistency in identifier representation
replaced direct access to file operations with privileged actions in SandboxFileManager . java to enhance security by ensuring file operations are executed with privileged actions
added support for parsing and printing binary operators in Groovy to improve the parsing and representation of binary types in Gradle
updated logging message format in MetaDataFetcher . java to include the class name in the warning message for better clarity during invalidation failures
updated character handling in RecordInputStream and UnicodeString classes to use bitwise operations to ensure correct byte conversion and improve compatibility with compressed strings
add test for norway character in file name ( # 2688 )
fixed bug where password fail because of keyrevokedexception , it be n ' t appear to be a cancellation
added null check for statistics before handling cache in TimedMemberStateFactory . java to avoid potential NullPointerException when statistics is null
refactor MongoTemplateTests to improve code formatting and add a new test for removing an explicit collection to enhance readability and ensure proper functionality of the collection removal process
update copyright year to 2022 - month ago ( # 1335 )
[ beam - 8470 ] fix newline issue in coder # tostring ( )
added functionality to handle the visibility of the Clear All button in RecentsView and PagedView to improve user experience by ensuring proper scrolling behavior based on the hotseat ' s state
hive - 25402 : cache the iceberg table property for integration test ( adam szita , review by laszlo pinter )
added a method to check if the server is in use based on a message to improve error handling by preventing duplicate addresses
[ jdk - 8202015 ] set - cp in testnestmateattr to avoid add the cdp directory
replaced the use of logging . Logger with a verbose _ schema in Grep . java to improve clarity and reduce verbosity in logging output
added multiple @ Override annotations to multiple classes to ensure proper method overriding and improve code readability
# 1644 - enh : add support for nested use savepoint ( # 1138 )
changed the fetch size from a integer to a ThreadLocal variable in QueryProcessExecutor and MemIntQpExecutor classes to improve thread safety for size - based operations
[ java ] remove idle strategy that be no longer need .
allow optional return value to be set from blockinghttpclient . exchange , close # 1421
ambari - 8594 . slider view : add hdp _ version system property ( gour saha via srimanth )
added private fields for loaderClass and jusl , and implemented close methods for ServiceLoader to ensure proper resource management and prevent potential memory leaks during service loading
updated ` ParameterizedRobolectricTestRunner ` and ` RobolectricTestRunner ` to use a deep cloner for parameters and added a new ` DeepCloner ` class to improve code maintainability and ensure deep cloning functionality based on class loading
add set to disable stack trace in web server ( # 2936 )
8022598 : object . getprototypeof should return null for host object rather than throw typeerror
replaced direct usage of OopField with direct field references in SystemDictionary to improve code clarity and avoid potential issues with type resolution
updated JwkKeyListView and JsonWebKeyEndpoint to handle both RSAPublicKey and ECPublicKey types to improve compatibility with base64 encoding in JSON serialization
use only writable boot image heap if spawning be disabled
modified MBeanServerMXBeanUnsupportedTest . java file to enhance functionality and maintain consistency in test cases
removed unused import of OrderClassLoaders from MavenPluginCollector . java to clean up the code and reduce unnecessary dependencies
updated method names from Validator to validator across multiple actuator classes to improve clarity and functionality by returning null instead of checking transaction owner addresses
http : / / issues . apache . org / jira / browse / amq - 61616 - create sample script for activemq - broker
updated binary command sending logic to include min and max values based on min and max values to ensure correct representation of min and max values when they are invalid
use the emptyindex field in the dependencygraph proto to build a semanticgraph with the fake node use in ud
fix race condition on aeron instance when deal with correlation id .
added saveConflict method calls with updated state in FileDataStorageManager , FileDownloader , and FileUploader classes to ensure conflicts are saved when a file is down to maintain data integrity
updated type parameters in the ExecutionContext and related classes for better type safety to enhance code readability and maintainability by specifying generic types
replaced instances of ` StrUtils . splitFileNames ` with ` splitFileNames ` across multiple factories to unify the file splitting approach for improved consistency and maintainability
configure ` ` remarks reporting ' ' and ` ` useInformationSchema ' ' for oracle , mysql , and mysql
updated the constructor of ` mockedMethods ` to accept a ` handler ` parameter and added a serialVersionUID in ` SignedSupportingClassProxyFactory ` to ensure proper handling of method interception while addressing deprecation issues
replaced date handling with current time for trigger checks in FileChangedExclusiveReadLockStrategy . java to improve accuracy in tracking file modification times
[ hotfix ] [ sql - client ] fix potential classloading issue in executioncontext
added a new Runnable to update the buffer height and run it on the UI thread to ensure proper rendering of text when the buffer changes
fix a bug where pid end in ` ` service . pid ' ' would be screw up .
modified the logic for disabling freeze operations in OperationActions . java and removed the disabledFreezeOperation method in OperationRegistry . java to streamline the freeze operation handling and improve code clarity
added support for secure TLS configuration in TlsConfig . java and integrated it into TlsUtils . java to enhance security handling by allowing configuration of insecure connections
refactor code to simplify the path handling logic in JavadocTool . java and add a new test class T7091528 . java to improve code readability and ensure correct source and class paths are used
changed the iteration method and added a new ` edgeIdGDF ` implementation in ` ExporterGDF . java ` to improve case handling and ensure consistent data processing for edge columns
added cascade option to the OneToOne relationship to ensure that all related entities are persisted in a single bean
message : fix equal ( ) , equal ( ) and hashcode ( ) in equal ( )
fix encode issue with special character . ( # 3879 )
[ hotfix ] [ rocksdb ] remove unused method in rocksdbserializabletypevariablesized
added a method to check for static permissions in ProtectionDomain and updated subject handling in SubjectDomainCombiner to improve security handling by ensuring proper access to static fields
fix potential nullpointerexception when check for special flower recipe .
refactored parsing logic in Parser . java by introducing a while loop for reading lines to improve code readability and efficiency in parsing
added showConnectionErrorPopup method to UploadMediaDetailFragment and UploadMediaDetailsContract for error handling to improve user feedback by informing users of connection errors
added a new test file for handling unhandled requests in the Issue596 class to ensure proper 404 response handling for unsupported media types
fix bitwise operation for bits [ wordIndex ] in nodebitmap .
refactor ImportLayoutStyle class to improve layout management to enhance code readability and maintainability
added terminal configuration constants and modified console interaction logic to improve code readability and maintainability by consolidating terminal output handling
use mockito instead of the mockito - based mocking in the shadowaccountmanagertest
let analysistype . lookup ( ) return the correct type .
renamed methods in Pairs and InPairsExpression for consistency to improve clarity and maintainability of the code
nifi - 1241 : fixed setallCallable ' s handling of value in case of implicit wait time
[ issue # 6381 ] fix npe when unregistering consumer
[ java ] generate source identity for rejoin so that it be available to the driver .
added a new file TopTabAction . java that implements a toolbar to display a JLabel to provide a user interface for the TopTab within the application
camel - 14156 : fixed dynamicrouter eip to use reactive engine when in parallel mode .
updated imports and modified test class visibility in AggregateItemReaderTests to improve readability and ensure compatibility with JUnit framework
added a generic type parameter ` < T > ` in the ` AbstractObjectValueTypeMap ` class to enhance type safety and code clarity
# 1172 add fix for # 1173 ( # 1174 )
add validation to ensure the input length is within Short . MAX _ VALUE to prevent illegal argument exceptions when using negative lengths
[ gr - 2769 ] fix handling of loose value during load of min value .
renamed CategoryDataset , DefaultCategoryDataset , and SlidingCategoryDataset classes to improve clarity and maintain consistency in naming conventions
updated exception message format to include acceptable credential types to improve clarity of error messages for better debugging
updated the random number generation method for v [ 0 ] and v [ 1 ] in TestVectorUtil . java to ensure v [ 1 ] is a valid range for improved randomness
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified time comparison logic to improve precision of date comparison by handling time values directly
added SSL support by introducing a method to retrieve the SSL property to enable secure communication in the application for testing purposes
chore : enable safbrowsing feature in chrome , and add more test
[ fix ] bug fix in motor mount and recoverydevice .
added a condition to check if the configuration specifies that transcoding is not disabled to enhance rendering control based on the configuration setting
update method to return an empty list when there are no rows in the table to improve robustness by handling empty lists gracefully
added a custom ignore tag handling in RobustJavaMethodParser to ensure that native methods are excluded from specific ignore formats
camel - 13914 : do n ' t throw runtimeexception on optimizedlockexternedexception when it be not a transient exception
fix bug with parent config not be inject with @ configproperties ( # 5754 )
updated PreferencesActivity to extend LimitlessIDEActivity and added new padding and padding methods to improve UI responsiveness by ensuring proper placement of UI elements
deleted the ClusterNodeInfo . java file to the functionality was no longer needed or duplicated elsewhere
updated return statement formatting in ShieldedTransferActuator . java to improve code readability and maintain consistency in formatting
added debug output for Standard and Legacy ciphersuite in ServerHandshaker . java to enhance debugging information during handshake processes
modified the handling of template changes in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to ensure proper visibility handling for single templates when the user is selected
added a nodeLabelMap to manage duplicate node IDs and updated logging behavior to improve error handling and provide clearer diagnostics when nodes are duplicated
created a new file R2303044ListSelection . java for list selection functionality to implement a simple GUI that tests item selection in a list
[ java ] change checkkeepalivetimeout to hasclienttimedout to avoid confusion .
added a null check for mWorkspace in Launcher . java to prevent potential null pointer exceptions
added a new test method ` testCompoundPropertyTwice ` to validate the name of the compound property to ensure that the compound properties are correctly stored and processed within the context
hive - 23054 : add row _ count to child statsrulesprocfactory . updatecolumncount ( prasanth jayachandran , review by gopal v )
added new logic to retrieve and set path parameters in ` SpringBootDocBuildTemplate . java ` to improve code clarity and ensure correct handling of API parameters
remove unnecessary use of hashtable . no functional change .
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and modified the constructor logic to improve caching behavior based on remote configuration settings
replace RuntimeException with a more informative message for JSON parsing errors to enhance error reporting by indicating failure to parse
added a debug flag for debug logging in WidgetsModel . java to reduce log verbosity when debugging is disabled
8234567891 : ( doc ) java . io . ioexception should be throw for non - standard java . io . scanner
updated the calculation of numTerms in SimilarityBase . java and added a new test for setting discount overlaps in TestSimilarityBase . java to improve accuracy of similarity calculations and ensure correctness through unit testing
updated test cases to check for existing implementations of ` SimpleMailMessage ` and ` MimeMessageItemWriterTests ` before calling ` send ` methods to ensure compatibility with existing features and improve code robustness
added exit and quit methods with corresponding properties to Global . java and removed the duplicate quit method from ScriptingFunctions . java to standardize exit functionality and eliminate redundancy in the codebase
replaced instances of `ApplicationContext ` with a direct context closure in ` LoanBrokerSharkDetectorDemo . java ` to improve code readability and maintainability by reducing redundancy
renamed methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple classes to improve clarity and consistency in method naming conventions
server : fix getservicecookie ( ) to return null if no cookie find in vmware web service request context
reordered assertions in ResinAcegiAuthenticatorTests to ensure consistency in authority retrieval logic
updated the method calls in ECKey to use ` bigIntegerToBytes ( r , s ) ` with a value of 32 to ensure correct handling of larger values in the ECKey class
* fixed system property fml . disabledmods - > fml . modstates
removed redundant account selection logic and introduced a dedicated method to show an account chooser dialog to streamline the account selection process and improve code readability by reducing redundancy
[ flink - 21814 ] [ datastream ] add host and port information in exception when collectsink ca n ' t connect to the client
refactor decoding logic to check for empty results from validator smart contract call to ensure proper error handling for empty results during validation
modified the handling of JSON fields to check for an empty root directory to ensure that a null pointer exception is thrown when the root file is empty
http : / / issues . apache . org / jira / browse / amq - 4180 - remove unnecessary code in activemq - pool
[ java ] reduce memory allocation for refproc test so it do n ' t oom crash .
fix for open console ( fixes # 663 )
[ flink - 7600 ] [ kinesis ] shorten credential update delay to avoid updatecredentials exception
replaced instances of ` AlertDialog . Builder ` with a new ` showInfoAlert ` method for media detail messages to simplify the code for better readability and maintainability
renamed the loop variable from " priv " to " pack " in T4501661 . java and added a parameter for packing in the test method to improve clarity and functionality by explicitly managing the packing process
update jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBadUseCases . java to ensure compatibility with the latest Jetty features and improvements
replaced specific imports with a wildcard import and modified dependency creation logic to simplify import statements and add a utility method for checking dependencies to enhance code readability and ensure correct dependency resolution
added a set to track the number of streams and implemented a cleanup process for the inflater release to ensure proper resource management of ZipFileInputStream objects and prevent potential memory leaks
rename ` DATAMATRIX ` to ` DATA _ MATRIX ` in multiple files to improve clarity and consistency in naming conventions
http : / / issues . apache . org / jira / browse / amq - 4213 - activemq - 2892 - flaky test with thanks to edward capriolo
[ hotfix ] fix typo in getcurrentactiveconnections method name
replaced ` findAny ( ) ` method calls with ` getAnnotations ( Class < T > type ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated . java ` to streamline the retrieval of annotations based on type casting
add ppc64le to the list of supported ppc64le architecture in bits . java and bytearrayaccess . java
add details to the RuntimeException message for activity resolution failure to provide clearer guidance for debugging and guidance
update waitWithDeadline method to use Long . MAX _ VALUE instead of MINUTES to ensure compatibility with larger time durations and prevent potential issues with maximum values
fix ( dateutiltest ) : migrate datetimeutiltest to use java 8
refactor BytesRef class to improve byte reference handling to enhance performance and maintainability of the code
added a message to inform users when the YouTube Player fails on Lollipop to inform users that the player is not available and try to update it
added checks for unterminated dollar quote and named dollar quote in SQL statements to ensure proper parsing and error handling for invalid SQL syntax
add a null check for mVibrator and its vibrator before proceeding with vibration logic to ensure that vibration is only triggered when the vibrator is available
updated border configuration and adjusted color handling in DotRenderer . java to improve visual consistency and provide better arrowhead and column styling based on foreign key columns
added a method to check if encoded configuration is encoded in HiveConf . java and updated SetProcessor . java to use this new method to ensure proper handling of encoded configuration values during URL encoding
pdfbox - 2852 : swallow exception type to prevent application from cope with malformed input
updated X509Certificate class to improve certificate handling methods to enhance security and reliability in certificate processing
fix config loading issue with wavefront uri ( fixes # 3903 )
removed direct cache access and added loadImage method in NetworkedCacheableImageView and updated TaskManager to use them to improve image loading efficiency and simplify code structure for better maintainability
removed the ' view ' parameter from the ofFloat method across multiple classes to simplify the method signature and improve code readability
added methods to generate a formatted version of controllers in the DependencyBank class to ensure compatibility with updated controller versions for better functionality
[ her - 1817 ] improve javadocs for launchedurlclassloader ' s constructor .
check for wrong result set count in datasourcehealthindicator .
[ ds - 3952 ] add cache - control for Authenticate , improve authentication flow
added Locale . ENGLISH to the warning message formatting in ZkController . java to ensure consistent locale representation for warning messages
modified the constructor of SolrQueryParser to accept an additional parameter to enhance flexibility by allowing custom analyzer usage
corrected the copyright notice in multiple Java files to ensure compliance with licensing requirements and improve code cleanliness
removed a semicolon from MainTest . java to correct syntax and ensure proper execution
refactor TypeContributions class to improve code structure to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper size allocation for void columns in batch processing
updated variable from ` templateName ` to ` req . getName ( ) ` in ` StatementGenerator . java ` to ensure the correct request name is used for better clarity and usability
remove boolean . istypematch ( ) since the type can not be determine .
[ java ] add sessiondecorator . offer ( ) method to take a snapshot of the timestamp .
rename method ` trustAll ` to ` trustAll ` in ` XForwardedRemoteAddressResolver ` and update corresponding test cases to improve clarity and consistency in method naming conventions
add support for disable bootstrap in prep for 1.0 . 0 release .
hbase - 18886 get max file size and flush size from tabledescriptorbuilder in hbase - client ( ted yu )
fix problem with large number of commit in branch graph servlet
8023475 : [ test bug ] test javax / swing / jslider / 6794831 / bug6794831 . java do not wait long enough for test result
added a static final build ID constant and refactored build metadata handling into a separate method to improve code clarity and maintainability by centralizing build metadata retrieval
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to clean up the code and improve maintainability
fix race condition when deal with asynchronous channel , close # 1059
added default configuration copy functionality to TezConfigurationFactory to enhance configuration management for improved readability and maintainability
added null check for keyPurposes in TimestampedSigner . java to ensure proper handling when keyPurposes is not initialized
removed conditional check for mIsVisible in CustomPlaybackOverlayFragment to simplify logic for better readability and maintainability
added null check before stopping recent sounds and introduced a forget method to handle null values to improve robustness by preventing potential NullPointerExceptions during sound management
fix discontinuity issue with player ' s position discontinuity ( # 1443 )
added DecimalFormat and NumberTickUnit to units in NumberAxis . java to ensure consistent formatting and representation of decimal values
refactor TargetGraphAndBuildTargets usage to use builder pattern and simplify object creation to enhance code readability and maintainability by reducing boilerplate object creation
removed the IndexFileNameFilter class and modified condition checks in IndexFileDeleter . java to simplify the code by eliminating unnecessary dependency on IndexFileNameFilter
add the ability for bound box check in the dummy container , for # 3088
added compressionLevel parameter to several constructors in ApkBuilder and SignedJarBuilder to enhance certificate compression flexibility
added a test for including static fields in the generated JAR to ensure that the generated classes correctly include static fields in the generated JAR
updated ` UNDEFINED _ FIELD _ SIZE ` to ` UNDEFINED _ METRIC _ SIZE ` across multiple classes to ensure uniformity in handling byte data types and improve code clarity
updated failure message formatting to include a newline character to improve readability of failure messages in tests
replaced manual hashCode method with Objects . hashCode for id comparison to enhance code readability and avoid potential null pointer exceptions
added caching functionality to the Spring Data JPA join fetch service to enable dynamic updates of cached entities for improved performance
the correct pronunciation model for french localization
fix nullpost handling in simplehttp plugin and improve test
added a dispatcher to shutdown the okhttp client in ClientSideSlb . java and invoked it in ClientSideSlbTest . java to ensure proper resource management and prevent potential resource leaks during tests
updated texture positioning logic in TextureRegion to account for flipping to ensure correct vertical alignment based on clipping state
improve error message if no discovery strategy factory be find
added null check for contextPath and initialized it to " NA " to ensure contextPath is initialized and avoid potential null pointer exceptions
fix projectclassloader . reinittypes ( ) to support dynamic class re - loading
fixed # 394 - tree map root header not be initialize properly .
added support for using precompiled headers in the C++ rule configuration to ensure proper usage of precompiled headers and handle potential errors gracefully
replaced WeakReference with a custom AccWeakReference to incorporate security context handling to enhance security by ensuring privileged actions are executed with the correct access control context
changed method visibility of findNextIndex from private to private in ObjectMap . java and adjusted related calls in OrderedMap . java to enhance encapsulation and control over the removal process
changed the isDirect variable from true to false to correctly reflect its state in the VertexBufferObject class
fix type error due to wrong mapping of audioeffecthelpTextsmap . get ( ) result .
updated return type of localToAscendantCoordinates and localToDescendantCoordinates methods to return the coordinates instead of void to enable retrieval of coordinate data for further processing
pdfbox -5764 : use input . limit ( ) instead of input . capacity ( ) when read from randomaccessreadbuffer to avoid oom
added a null check before removing the close hook on the context to avoid potential NullPointerExceptions when context is null
updated border spacing calculations for folder cells in CellLayout and DeviceProfile to account for folder layout behavior and improve layout consistency
refactor ValueNumeric initialization to use a custom inner class for better type handling to improve code readability and maintainability by centralizing numeric parsing logic
modified the login check to include deferred authentication status to ensure proper handling of deferred responses in the form authentication process
updated command - line arguments from " -- module - start - ini = " to " -- add - to - start " to streamline argument handling for better clarity and functionality
added a default partition value to the dynamicPartitionFileRecordWriterContainer to ensure that the application uses a default partition name when no valid partition values are available
[ hotfix ] [ runtime ] add null check to streamnode
improve logging when there be classifier - related artifact
camel - 8569 : add rebalance test for kafka consumer . thanks to devendra khanolkar for patch .
improve error message when a class to dependency be miss in the classpath
fix typo in plugin name .
doc : add relative url to web reference ( # 269 )
fix flaky test : lumberjack multi - thread test ( # 1251 )
added check to prevent npe when player be destroy and the scoreboard be not create .
[ core ] fill out the miss @ return tag description
createapi : update updateuser api update documentation to be spec compliant
replaced switch - case statements with if statements for better readability and to streamline code for better maintenance and clarity
MetaDataExportMojo class to improve functionality to enhance metadata export capabilities for better performance
added exception handling for SQLIntegrityConstraintViolationException in Hive . java to ensure proper table dropping when a materialized view is used
changed the property name from " githubAccessToken " to " gitHubAccessToken " to maintain consistent casing for property naming
added a new file ` RoboExecutorService . java ` with a deprecated annotation to mark the class as outdated to discourage its use in future development
fixed # 2178 menu item for subgroups in group tree view for root group
modified the buildServiceAndSpanName method to enhance clarity and ensure proper path validation to improve code readability and prevent potential errors when processing paths
8076995 : gc / ergonomics / testdynamicnumberofgcthreads . java fail with java . lang . runtimeexception : ' new _ active _ workers ' miss from stdout / stderr
change return type and related methods from ImmutableFlavor to ImmutableSet < Flavor > in CxxPlatforms . java and KnownBuildRuleTypes . java to improve consistency and clarity in handling host platform data
modified SQL string construction in CreateTable and CreateTableDeParser classes to handle additional parameters to ensure correct parsing and output of SQL statements based on user options
chatviewerfragment : fix wrong alpha value for chat background .
test : migrate ctiteratortest to junit 5 ( # 4558 )
added token clearing functionality in multiple tokenizer classes to ensure proper execution of token clearing operations
add a test to prevent crash on a block statement
updated StateMachineConfiguration and StateMachineFactoryConfiguration to use generic types and added error handling for missing configurers to improve type safety and provide clearer error messaging when configuration is missing
simonstewart : fix the c error of the webdriver test suite
log4j2 - 1234 add support for number . format float to string component .
fix and simplify the logic in aggregatelazy # getcurrentscope
updated touchable insets in TaskbarDragLayerController to use TOUCHABLE _ INSETS _ REGION to ensure correct handling of touchable insets for improved user experience
ignore line follow by ~ in line and no line character in fenced code
added socketTimeout property handling in multiple classes to manage socket read timeouts to ensure that socket timeouts are accurately configured for improved connection stability
added sleep to give the test a bit more time for long run .
updated BufferedReader initialization to use StandardCharsets . UTF _ 8 for proper character encoding to ensure consistent character encoding when reading input streams
7057780 : ( coll spec ) list . iterator ( ) . next ( ) return null if there be no element to add
fix # 276 asyncfileimpl do not propagate failure future on write stream error
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to enforce consistent API status and improve code clarity
cloudstack - 4759 - get rid of npe when there be npe in Nuage vsp device .
rename ` retryUploads ` to ` retryFailedUploads ` in multiple classes to improve clarity and better reflect the purpose of the method
update constantpooltagtests to use jdk < 9.0 . 0 due to 1.8 . 0 change .
internal error handling in sketch , fixes # 3356
add a method to remove all client header , close # 1374
replaced Vector with ArrayList for array storage and updated method calls to improve performance and simplify code by using a more appropriate data structure
updated the default grid column value from 4.0 f to 3f to improve user experience by providing longer grid space
Updated the condition in CalcitePlanner . java to include a check for ` ! forViewCreation ` to ensure that the query execution does not proceed during view creation
hs2 : fix regex pattern in test to handle varying format
make snippetprinter more robust by try / catch everything when look for object
simonstewart : fix the firefox driver to be able to access page with an insecure ssl certificate .
fix ( byteblockpool ) : fix erroneous calculation of byteoffset + testbyteblockpool .
make interactionvalueencoder non - static , fix # 391
do n ' t close mailbox when exception happen in tcptransport # close
fix serial lint warning in loadxml ( )
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and updated the associated method in ` OcamlDebugLauncher ` to simplify the class design by removing unnecessary dependency on ` SourcePathResolver `
improve save change dialog ( # 4547 )
added service access validation and improved response type handling in OAuth20 device code requests to ensure compliance with OAuth 2.0 specification regarding response types and service accessibility
added a chk method call to the DrillBuf class to ensure proper handling of index values during data processing
hive - 23794 : add init tablemapperjob method to mapreduceutil , use inputformat if available for mapreduce .
removed redundant append ( ) call from AbstractJRubyMojo . java to streamline code by eliminating redundancy
sulong : throw meaningful error message if llvmpolyglot do n ' t have any language .
added validation for the reserve commit duration and deprecated version in ReplicationHandler to ensure compatibility with Solr 7.1 and clarify the reserve commit duration configuration
changed cache variable name from ` cacheVariableName ` to ` cacheForeignKey ` in ` DIHCacheSupport . java ` and updated related code references to improve clarity and consistency in caching mechanism handling
replaced the return type of ` long [ ] ` with ` Object [ ] ` for EC key pair generation to improve flexibility in handling different key types
[ hotfix ] [ runtime ] suspend a job in cancelling state when restart
replaced static initialization of ` mRotationTouchHelper ` with a direct instantiation of ` RotationTouchHelper ` to simplify the instantiation process and improve code clarity
[ miio ] avoid npe when there be no unifi port override ( # 8703 )
updated thread ID references from ` lwp _ id ` to ` long unique _ thread _ id ` across multiple classes to ensure compatibility with larger thread identifiers and improve clarity in thread management
remove offer after add / remove offer ( # 8594 )
remove reference to tlsv1.3 and use Constants . ssl _ PROTO _ TLSv1 _ 3 in test
modified MockitoMethodInvocationControl to handle Class mock instances separately and updated SystemClassUserTest to use doReturn for timing accuracy to improve mock handling accuracy and enhance test accuracy for better accuracy
replaced constructors in NotLoadedException with an instance of PartialDatabaseObject to improve clarity and consistency in exception handling
replaced import of DisplayUtils with a method call to set extra file to null in FileDisplayActivity to streamline file handling by eliminating unnecessary dependencies
added error handling and cleanup logic for file operations in StoreDirect and StoreWAL classes to ensure proper resource management and provide clearer error messages for file operations
added task snapshot retrieval in AbsSwipeUpHandler to improve task management during gesture handling
added hidden property and getter / setter methods to CommandArgumentDefinition and LiquibaseCommandLine to enable customization of command behavior based on user preferences
fix unstable test : upgrade to kafka 0.9 . 2
[ geos - 8042 ] make sure to use geoserverextensions in stylegrouphelper . parsestyledlayer ( )
added permission checks for launcher activities in InstallShortcutReceiver . java and modified PendingRequestArgs in Launcher . java to ensure proper handling of malicious intents and improve shortcut creation logic
added ` getId ( ) ` method to ` TiledMapTile ` and ` TmxMapLoader ` classes to ensure consistent identification of tiles during map loading
refactor Manager class to improve method organization to enhance code readability and maintainability
[ iotdb - 6667 ] fix jdbc example : update connection string to version 0.13 ( # 9667 )
added schemas and includedSchema properties to LiquibaseGenerateChangeLogMojo to enable flexible configuration of schema inclusion during change log generation
camel - 8193 fixed the illegalstateexception of jmxregistry # register method
change log level to warn in plannerbenchmarkrunner
removed the ' final ' modifier from the ' doPutRecord ' method in AbstractCacheRecordStore . java to allow subclassing of the method in the current context
fix the path in fileselectorfragment and Tools . dir _ gAME _ home to always return the game directory , not just the current directory .
added new test methods for handling large response content in FastCGIProxyServletTest . java to improve test coverage for HTTP client functionality and response handling
added a service starting call for ReadInteractionsService in MarkReadService . java to facilitate the marking of read interactions in the application
added a conditional check for ' lintClassfile ' before logging warnings for missing annotation methods to improve clarity and control over when to log warnings based on linting preferences
fix ( system ) : change default mail server port to 25
add retry logic for sslengine reloading ( # 9022 )
updated date format in ObjectMapperProvider from a simple time format to an ISO 8601 compliant format to improve consistency and clarity of date representation in the application
update error message in SpyingOnRealObjectsTest . java to clarify mocking limitations to enhance clarity for users encountering issues with private class visibility in Mockito
added functionality to manage line endings on NTL tags in InlineBoxing and LineBox classes to improve the handling of line endings based on the context
tika - 352 followup -- fix npe in unpackedcontent
removed unused import of DocCollection from TopicStream . java to clean up the code and reduce unnecessary dependencies
refactor NinjaServletContextTest to simplify input stream handling and add a new test method for multipart form data to improve code readability and ensure correct handling of multipart data in the servlet context
remove exposure property , it be now enable by default
added a check to ensure the current graph is a dynamic graph to prevent runtime exceptions when the current graph is not a dynamic graph
fix : improper handling of disabled bean via eager - init
camel - 7441 : jsonpath : add option to suppress exception from jsonpath
replaced a redundant call to create the ControllerLeaderLocator in HelixServerStarter . java to ensure consistent initialization of the controller leader locator
updated usage messages in CLHSDB and HSDB to reflect command - line syntax changes to clarify command usage for improved user understanding
refactored the configureChunkProvider method implementation in FaultTolerantStepFactoryBean and removed redundant listener registration in SimpleStepFactoryBean to improve code efficiency and maintainability by reducing redundancy
[ beam - 1347 ] remove deprecate io . write from write module
replaced direct calls to ` shadowAccessibilityManager ( ) ` with a reference to ` accessibilityManagerInstance ( ) ` to improve code clarity and maintainability by reducing method calls and enhancing readability
change notification to group display for flutter usage ( # 4461 )
removed references to SourcePathResolver and updated several Java - related classes to use AbstractBuildRule instead to simplify code structure and improve consistency in rule implementation
replaced a lambda expression with a direct instantiation of PostgreSQLEnumDataTypeHelper to simplify enum data type handling and improve code organization
updated log path assertion to use ` File . separatorChar ` to ensure compatibility with different file separator formats
updated references from ` getMapLocalWork ` to ` getMapRedLocalWork ` across multiple files to ensure consistency and correctness in naming conventions for mapred local work handling
updated error handling in HiveMetaStoreClient to specifically check for index tables to ensure that operations are only performed on valid tables to prevent runtime errors
update disabled flags in RecentsView when visibility is not visible to ensure proper user experience by disabling scrolling when the action view is displayed
added a conditional check to set a specific highlighter for non - Windows environments to ensure proper syntax highlighting for better compatibility across different operating systems
add necessary local variable annotation to noclassdeffounderror in cross - site scripting
changed file path handling from using ` toUri ( ) . getRawPath ( ) ` to ` toString ( ) ` to simplify the code by removing unnecessary URI conversion
removed unnecessary whitespace in removeCaptureListener method call to improve code readability and maintain consistency
changed the value of _ metaDataComplete from true to false to ensure that the metadata processing is not completed
updated the ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` for asynchronous execution to improve performance by offloading task removal from the main thread
added environment variable handling for release flavors in JsBundleGenrule to improve build configuration for Java flavors
6500701 : enhance for loop with generic generates faulty bytecode
add a test for handling carf new lines in comments and javadoc to ensure correct formatting of code elements in comments and javadoc
added a hubMode property to AbstractLiquibaseChangeLogMojo and updated its usage in AbstractLiquibaseMojo to enable dynamic configuration of the hub mode when provided
removed unnecessary null checks for processedItem in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify logic for handling null items during processing
added error handling for missing linkDb path in IndexerMapReduce to ensure that the job does not attempt to add an input path if it does not exist
replaced the dynamic method for retrieving the index writer ' s setIndexerThreadPool to dynamically load the setIndexerThreadPool method from the IndexWriterConfig class
updated SMS address format from " : 5000 " to " sms : / / " in GameCanvasImplementation . java to standardize the formatting for better readability and consistency
added serialization support for JobExecution objects in MapJobExecutionDao to ensure object integrity during job execution management
added a new file ` DownloadTest . java ` for testing HTTP requests in the Badlogic gdx framework to implement functionality for downloading image from a specified image
update language assignment to use normalized text in various files to ensure consistent language handling across the application
replaced UDFArgumentException with UDFArgumentTypeException for argument types in GenericUDFRound . java to provide clearer error handling for argument types in queries
add null check to managedependencies to prevent potential npe
added AntPathRequestMatcher instances for various URL patterns in SecurityConfig . java to enhance security by supporting multiple path matchers
ignore broken testconcurrentddpInserts . testconcurrentdppInserts ( ) until fix
do n ' t generate bean definition for @ object when there be no @ classelement
added an @ Ignore annotation to the HttpClientRedirectTest . java file to temporarily disable the test due to known issues
[ openwebnet ] fix delay in openwebnet energy handler ( # 10332 )
remove code that be identical to 3.0 . x due to apr crash
deleted the SunToolkitSubclass . java file , which contained a method to flush pending events in the AWT toolkit to the functionality was deemed unnecessary or redundant in the current codebase
fix issue with defaultrenderablesorter and add hasrotationorscaling ( ) .
added test to verify that the registerWrapperHandlerBeforePrimitive method works correctly to ensure type handlers are correctly registered according to the latest version of the API
pdfbox - 2378 : fix issue with pddeparation in 2d
updated URLs in CommonsApplication , PageTitle , and Utils to use BuildConfig instead of CommonsApplication to centralize configuration settings and ensure consistent usage of build configurations
camel - 18189 : camel - health - add health check for http component ( # 11345 )
fix a crash when chakram be place in the wrong place without a block .
added a test for altering a table with indexes extend primary keys in AlterTableWithViewsIT . java to ensure that the alteration process behaves correctly with different index configurations
replaced the offset variable with a final variable off in FileFloatSource . java and modified assertions in TestFunctionQuery . java to streamline document handling and ensure consistent assertion behavior
removed the ID field from the fields collection in MongoRecordReader to clean up unused fields to improve code clarity
added disconnect method implementation in YeelightHandlerBase and DeviceBase classes to ensure proper connection handling and state management during disconnection
add auto _ increment compatibility check and fix it for postgresql
fix # 3776 - improve sharedindexinformers performance ( # 3776 )
server : save private template detail when user vm be set
updated ShadowBitmapFactory to handle buffered images and improved color array initialization to enhance functionality and maintainability of image handling
removed deprecated constants related to shortcut and display modes from LauncherSettings to streamline code and remove unused constants
move data file to example package to avoid clash
added a new variable ` legendTop ` and updated the logic for updating the offset in ` PieChart . java ` to improve the legend positioning by ensuring correct placement of the legend
fix issue with black shaders with empty world .
add a new file ` MaryScriptCreator . java ` that implements a script generator for generating and displaying Mary scripts to facilitate the generation of script files with specified output and output formatting
nifi - 2594 : expose remote host in session attribute for listenhttpservlet .
refactor compaction logger initialization and log file deletion logic to ensure proper resource management and avoid potential memory leaks
removed the " xlink : href " prefix from the " license " and " locations " URLs to simplify the links retrieval process by removing unnecessary prefix
aws s3 stream upload : set a constant for the executor name , improve readability
hbase - 25943 do n ' t log a warning on closed regionserver in cluster shutdown
fix broken test ( duh )
trim whitespace from the active option before adding it to ensure consistent configuration handling by removing leading and trailing spaces
add wallpaper depth control functionality in DepthController to allow dynamic wallpaper zoom based on user preferences
updated OverseerTest to verify successful count of overseer actions to ensure accurate verification of overseer status in tests
8165628 : remove kernel . version - checking for x attribute
refactor ExecConstants to improve code organization to enhance maintainability and readability of the code
removed import of ScreenRecordRule and the associated annotation from ThemeIconsTest . java to eliminate unused dependencies related to screen recording functionality
added a method to set the scan attributes for paging in ScanUtil . java and updated TableSnapshotResultIterator . java to use it to enhance functionality by allowing scan attributes to be applied for paging
fix ( http ) : / / issues . apache . org / jira / browse / amq - 4694 - fix request . range = low value check
changed access modifier of keySizeEstimator and valueSizeEstimator from private to protected and modified cache size estimation to improve encapsulation and ensure better cache performance
cloudstack - 3563 : get zoneid from the host response , not from the caller
[ zeppelin - 3589 ] fix encode issue in livy interpreter
update method call from ` filesystems . remove ( zfpath ) ` to ` filesystems . remove ( zfpath , zfs ) ` to simplify the removal process by directly using the provided ` zfs ` variable
remove requestbuilder . tojson ( ) - > tojson ( ) for good performance .
increased poll duration from 2 milliseconds to 3 milliseconds in SoftAutoCommitTest . java to improve test reliability by allowing more time for hard commit processing
fix # 302 improve test for selenium - logging
updated classes related to the dial package to improve consistency in naming and structure to enhance maintainability and clarity of the dial - related components
updated error logging statements for consistency in SyncQueue . java to improve readability and maintainability of error messages
update testcontainers / ryuk version from 0.4 . 0 to 0.5 . 1 to incorporate the latest features and improvements in the container
updated ` getBootstrapPaths ( ) ` to ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a new ` TestHook . java ` class with multiple test cases to enhance boot class loading capabilities and ensure proper behavior with additional bootstrap paths
add correct patchy location for client launch to ensure it ' s load from the patchy folder by default .
[ hotfix ] [ yarn ] do n ' t use deprecated yarnclient
add miss localmapstatsprovider . statspermap ( # 1253 )
deleted the AllTests . java file to the test suite is no longer needed in the project
add support for special character $ { 30 } and $ { 31 } in stringbuilder .
add a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory management behavior of mock objects to ensure that memory calculations are not starving during large stack trace invocations
updated the method call to use ` getResultMappingsForRowKey ( nestedResultMap ) ` instead of ` getResultMappingsForRowKey ( nestedResultMap ) ` to improve clarity and ensure proper retrieval of result mapping data
added a new boolean variable ` eventHandled ` to the ` UIText ` class to ensure that events are handled correctly during processing
deleted the ` Controller . java ` file and changed the class name from ` Weldby ` to ` WeldModule ` to improve clarity and consistency in naming conventions
ruby flavor fix for monotorexecutor with zero - width quantifier
removed initialization of ` liquibaseProLicenseKey ` from ` AbstractLiquibaseMojo ` to allow subclasses to access the licensing key directly from the system properties
mondrian : fix npe in rolap cube .
[ gr - 45602 ] provide a way to generate debug information for substrate .
mondrian : fix for bug # 1743819 , document mondrianproperties . jdbcfactoryclass
added support for handling absolute friends path in Kotlin compiler and related classes to improve flexibility in specifying extra arguments for Kotlin projects
added support for BATK , BRAH , and MANDAIC scripts and refactored CheckScript to improve command line argument handling to enhance flexibility and maintainability of the script execution
updated equality checks in ExecutionCommand class to use ` . equals ( ) ` instead of ` = = ` to ensure accurate equality comparison between instances
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope object
updated CSS parsing logic to handle both number and percentage inputs to improve accuracy and error handling in the CSS parser
added a new test method to verify the results of local index reverse scan to ensure correct functionality of local index queries and improve test coverage
updated import statements and method names for clarity to enhance code readability and maintainability by using ApplicationProvider instead of InstrumentationRegistry
updated toast message to include additional context for better clarity to enhance user experience by providing more informative and context - specific messages
removed unnecessary boundary checks in RendererUtilities and updated test cases in RendererUtilitiesTests to simplify the logic for improved readability and ensure correctness of the test cases
replaced iterators with ArrayNode for ask and bid in KrakenStreamingAdapters . java to improve type safety and simplify the handling of JSON nodes
added error handling for SQLite execution when adding columns in FileContentProvider . java to address potential issues with duplicate column additions when upgrading from 24 - > 30
removed print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
hive - 23054 : add detail table load factor for map join . ( # 4309 )
updated the buildView method to accept a Context parameter and set background resources for selected items to improve resource management by ensuring proper background resource handling
added authentication handling capabilities to SecurityMockMvcResultMatchers to enhance security testing capabilities by allowing authentication assertions
vpc : setvpcid should be null to avoid npe
[ beam - 10955 ] skip flinksavepoint test on jdk11
fix the position of intdef annotation on field in the ui module
[ fix ] bug where actor action be not be decremented if it be use in a loop .
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest Bitmex API changes
[ task 70419 ] add test for parent and child orgunits in the relationship endpoint
fix a bug in lodcontrol when there be no geometry ( # 1572 )
fix conditionaltokenfilter ' s position increment bug .
make unsafestorenode , storefieldnode , and adjust graph . add to avoid unnecessary graph . unique ( ) call
replaced call to ` super . putAddress ` with ` io . putAddress ` in ` BoundedMemoryIO . java ` to streamline address handling for improved clarity and maintainability
added an assertion to verify that the load method does not result in an empty state to ensure that the event repository behaves correctly when no events are present
removed unused ` attributeTemplateName ` , ` attributeLine ` , and ` attributeCol ` from ` AuthenticationAttrProcessor . java ` to streamline the code by eliminating unnecessary parameters
added null checks for the key in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that the key is not null to prevent runtime exceptions
updated the ` setTypeface ` method in ` CodenameOneTextPaint ` to throw an exception if unable to set the typeface
implemented ` open ` method in ` AzurePinotFS ` , ` HadoopPinotFS ` , and ` PinotFSFactoryTest ` classes to enable reading files from both Azure and Hadoop directories
eranmes : remove deprecate method from webdriverrunner ( # 1304 )
modified conditional statement to check for size of items to simplify logic for better readability and maintainability
replaced the usage of ResultObject with direct field access and modified related methods to streamline the handling of constructor mappings and improve clarity in result processing
updated SQL string format in CreateTableGeneratorTest . java to include quotes around the table name to ensure compatibility with SQL syntax that requires quoted identifiers
modify filtering logic in VectorizationContext to support both PROJECTION and FILTER modes to enhance flexibility in processing vector expressions based on the type of filter mode
add a generic type check for moveselectorconfig in ExhaustiveSearchPhaseConfig . java to improve type safety by explicitly defining the type of moveSelectorConfig
replaced the instantiation of ReorganizeTableStatement with a new instance to streamline the code for better performance and readability
updated cluster name handling to use constants from the Apache IoTDB library to improve maintainability and consistency by using defined constants instead of string literals
improve connection handling in peergroup . connection ( ) . resolve issue # 248 .
nano style conversion for multiple style string ( blink , conceal , italic , italic , underline ) should be consistent
updated fixerschematic reader to use nbt converter instead of fixer to ensure correct handling of binary data
updated the return statement in NoToStringOnStringType . java to clarify the purpose of the string representation
8236106 : [ testbug ] shenandoah : make testthreadfailure more resilient
fix dataprovider # retrynotfoundexception : wrong number of call in a retry method
change return value from tokens [ 0 ] to tokens [ bandwidth ] to ensure correct data retrieval from the token array
simonstewart : adding unsupported operation exception to the webdriverbacked selenium interface
removed unused ` storePass ` parameter from ` doPrintEntry ` and updated related method signatures to streamline the printing process for better clarity and maintainability
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added checks for dialog shape and background color in setShape and setOpacity methods to ensure proper handling of component state between dialog and frame types
changed the ' state ' variable from private to final in DefaultProjectFilesystem . java to ensure that the state field cannot be reassigned after initialization
updated RedisObjectFactory to utilize RedisStandaloneConfiguration and improved password handling to enhance Redis connection configuration flexibility based on available settings
add a timestamp to chat room jabber when a message be delay .
replaced instances of Callback . Adapter with Callback . NOOP in notifyContent method calls to simplify the notification process for ContentResponse handling
refactored sharing operation handling in FileOperationsHelper and OperationsService to use an Intent for operations to improve code organization and enhance the functionality of sharing operations
do n ' t check for injected value when set field value
modified y - based loops in ClassicPlotManager to use a variable for minimum build height to improve code readability and maintainability by using a dedicated variable for y - based calculations
added check for nullpointerexception in smackintegrationtestframework ( # 3554 )
tmi - tiff : fix a bug with interop sub - directory reading
added ENABLED _ LS handling and improved dependency management in VersionTargetGraphMode and VersionedTargetGraphCache to enhance compatibility with version target graph modes in the codebase
added a condition to check if the child format is a video before processing to ensure that video formats are handled correctly based on the provided format condition
camel - 12470 - camel - automl : fix typo in doc
added a dynamic loading mechanism for the JNLP ServiceManager to enable dynamic loading of native libraries based on availability
updated CSVRequestHandler to support escaped characters in CSV comments to enhance functionality by allowing proper escaping of special characters
updated grant type validation in ClientRegistrations and modified corresponding test cases in ClientRegistrationsTests to ensure support for only the Authorization Code grant type and improve test coverage for related scenarios
improve exception . cause ( ) handling .
updated SQL query in DerivedTableIT and modified OrderedResultIterator constructor in ClientAggregatePlan to enhance query validation and ensure correct iteration behavior
added handling for the " RSquare " value in RegressionEvaluator and StreamExpressionTest to ensure correct square value is used in the regression evaluation process
added functionality to handle multiple request header names in ThreadContextMDCServletFilter to ensure proper processing of context attributes based on request headers
replaced casting of ` work ` with a class cast ` mapWork ` for better type safety to enhance code clarity and ensure proper handling of map work properties
refactored methods to improve image handling in PdfJndiReport and PdfSessionInformationsReport to enhance code readability and maintainability by encapsulating image creation logic in a dedicated method
updated caching strategy in JwtIssuerReactiveAuthenticationManagerResolver and added new tests for trusted issuer handling to improve cache management and ensure proper authentication flow for trusted issuers
check for the existence of the resource in AbstractScriptDatabaseInitializer and add a test for initialization failure when the database is initialized with directory locations to improve error handling and provide clearer feedback when the database is not initialized
sulong : support for create interop type without type , and fix up test
removed duplicate sleep calls from AbstractBasicMockingIntegrationTest to improve code clarity by eliminating redundancy
added a new file KernCrash . java that implements a kerning application with text layout to demonstrate the use of kerning text components in a graphical user interface
added a fail ( ) method to LinkedHashTreeMapTest . java to ensure proper failure reporting when the linked hash tree map is exhausted
added a method to retrieve network interfaces with a prefix to improve network address management and support for loopback connections
fix a potential memory leak in the housekeeper executor
fix checkstyle issue in util / grouptransferservice . java ( # 760 )
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
test ( db ) : add test case for issue # 247 . ( # 247 )
changed the type of the ' results ' variable from ` CategoryItem ` to ` String ` in the ` doInBackground ` method to improve type safety and handle exceptions more effectively
fix # 2879 add date validation test to check for leap year
added error handling for response processing in GrblController to improve user feedback by including specific error codes
updated return statement to include specific string resources for the home button label when there are no screens to improve user experience by providing more relevant labels
removed the count parameter from the getTrades method in BittrexMarketDataService . java and updated related calls to simplify method signature and eliminate unnecessary complexity
removed unnecessary whitespace and improved whitespace handling in ConsoleReader . java and MemoryHistory . java to enhance code readability and correctness in string formatting
update jdkPath path construction in JavaBuild . java to remove the " . jdk " suffix to streamline file path retrieval for better clarity and efficiency
refactor method calls from ` getDescription ( ) . getBuildRuleType ( ) ` to ` getType ( ) ` across multiple classes to improve code readability by centralizing type retrieval in a single method
updated JFCModel constructors to accept a logger parameter for logging warnings to enhance debugging capabilities by notifying warnings when settings are set
lucene - 2602 : do n ' t allow negative tolerance for tolerate operation
added methods to create and drop views in TestUtil . java and a corresponding test in DatabaseMetaDataTest . java to enhance functionality for creating and dropping database views and ensure proper privilege checks
refactor NaNTest . java to conditionally check for stable floats and double values based on JVM flags to improve test reliability by skipping tests when running on unsupported systems
added a new ` DesktopTaskbarUIController ` class and modified ` TaskbarManager ` to utilize it for functionality to enhance the taskbar feature management based on system features
added task count listener to ModItemAdapter for improved task management to enhance UI responsiveness by ensuring the correct task count updates
updated file handling methods in Files . java to improve efficiency and readability of file operations
refactored method signatures and variable names in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to improve clarity and consistency to enhance code readability and maintainability by using consistent naming conventions
changed DomainAwareServicesManager and ChainingServicesManager to extend ServicesManager to ensure proper inheritance of ServicesManager in the application
fix resource pack name in mod screen ( # 7975 )
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
added grow and growX methods to Cell class to improve the functionality of the Cell class for better memory management
replaced the use of StringTokenizer with a more generic Map for bindings to simplify the code and improve performance by eliminating unnecessary object creation
do n ' t swallow exception in testcase . patch by jbellis
replaced long array with byte array and updated iteration logic in MetricsMemoryTester . java to optimize memory usage and add a memory fail count check during the allocation process
deleted the JobParametersPrototype . java file to remove unused or redundant code related to parameter handling
added securityEnabled property and modified methods in MappingsTable and TableResolverImpl to enable retrieval of data connection type resolver based on security settings
rename ` APPLE _ SWIFT _ OBJC _ CXX _ HEADERS ` to ` APPLICATION _ EXPORTED _ OBJC _ CXX _ HEADERS ` in ` AppleLibraryDescription . java ` to clarify the purpose of the case by indicating it explanations
changed the DUMP _ TO _ FILE variable from true to false to disable DUMP _ TO _ FILE for improved functionality
add miss check for aws v7.1 avc in h.265 sparc ( # 5452 )
[ java ] fix issue with data not connect to server when use spy
add a check for no info in the output options when dbInfo is null to ensure proper handling of output options when no information is available
fix : uri . setport ( ) should always use 443 , not 443
added new output options for XML handling in DOMConverter . java to ensure proper error output settings for rendered HTML elements
updated assertion methods in Assert . java to enhance accuracy and performance of assertions
allow event to optionally retain the topic for publish message ( # 505 )
added " testCaseName " to the " testCaseName " field in EventSerializationTest . java to ensure proper serialization output for test cases
[ calcite - 2184 ] [ table - planner - blink ] fix non - determinism of tumble function name ( krisztian kasa )
remove reference to ` ` fastparse . core . parsed ' ' which be accidentally add in last commit .
be 7a2c2fe : add setsionidcontext method that throw sslexception if invalid session context .
replace condition checking for empty cp with isEmpty ( ) for better clarity and organization to improve code readability and maintainability by using a more descriptive method name
[ calcite - 2486 ] upgrade calcite to 4.0 . x due to deprecation warning ( jonathanhurley )
change log level from debug to trace for firmware update handler to reduce noise in logs when no firmware update handler available for a thing with UID
added test cases for handling null date and timestamp in ObjectTest . java to ensure proper functionality of the database when retrieving objects with null values
refactor string concatenation in StringSubject , Subject , and related tests for clarity to improve readability and correctness of string representation in assertions
added a test method to verify repository permissions for multiple teams to ensure correct access permissions are validated for repository roles
added a new file ` Test7088020 . java ` implementing MethodHandles for method invocation to demonstrate the usage of method handles with varying stack frames
replaced the audience restriction matching logic to use a HashSet for audience URIs to improve clarity and efficiency in audience validation
refactored ` afterAppAuthChanged ` and ` HttpLongPollingDataChangedListener ` to streamline cache refresh logic to enhance code readability and maintainability by reducing redundancy
speed up startup of StdErrLog by set null _ stderr only if _ stdout is null
added a new warning constant SEPARATION _ ORDER and modified logic in BasicEventSimulationEngine to track active stages to enhance warnings by providing a consistent ordering mechanism and ensuring only active stages are considered
updated the query optimization to use realtimeTableConfig instead of offlineTableConfig to ensure the correct table configuration is used for optimization
updated SQL command string construction and added new properties for Hbase site normalizer to improve clarity and functionality by ensuring correct settings are applied based on configuration
updated SavepointV2 and FileStateHandle for improved functionality to enhance savepoint management and state handling processes
added BluetoothClass handling in ShadowBluetoothDevice and ShadowBluetoothDeviceTest to enable testing of Bluetooth functionality and ensure it is correctly set
move containsprofile to it own class to make it consistent with other platform
drools - 3547 fix error message for empty ' list ' parameter in sum ( )
replaced the call to ` graphModel . getGraph ( ) . readUnlockAll ( ) ` with a direct call to ` graph . readUnlockAll ( ) ` to simplify code by removing unnecessary calls to ` graphModel `
updated the construction of coreNodeName to use nodeProps . getCoreName ( ) to ensure coreNodeName is correctly retrieved from nodeProps for better clarity
chatactivity : fix crash when click on updatebackpressure ( # 1496 )
put apache license header in one file by default
added a suppression annotation for the SimpleText codec in BaseVectorSimilarityQueryTestCase . java to prevent issues with codec compatibility during tests
updated element type checks in mmm Types . java and added a new class T7005671 . java with multiple type casting tests to enhance element type validation and demonstrate type casting functionality
updated triangle calculations in DelaunayTriangulator to use 20f instead of 2f to improve triangle precision and ensure correct rendering
7092447 : add miss javadoc warning for arraydeque , linkedlist , set , and vector ( # 862 )
refactor JWTClaimsSet initialization to use builder pattern for clarity to improve readability and maintainability of the code
fix performance regression for stack overflow ( un ) protection .
added new shadowing methods and removed deprecated methods in Robolectric and ShadowContentValues to enhance functionality and maintainability of the codebase
changed method calls from ` initiateGLInstances ( ) ` to ` initiateGL ( ) ` in ` LwjglCanvas . java ` and ` LwjglGraphics . java ` to streamline OpenGL initialization for improved compatibility
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` and updated comparison logic to improve code clarity and utilize the improved ` ArrayUtil . getUnsignedComparator ` method
refactor Locale handling to use a script key and manage locale properties more effectively to improve localization management and ensure proper default locale is set based on user - defined script
updated the method to return the last set text alpha instead of the current text alpha to ensure the view reflects the most recently set text alpha value
updated warning message from " Confimap " to " ConfigMap " in ConfigurationChangeDetector . java to ensure accurate messaging regarding the current number of ConfigMap properties
replaced custom test suite with a method call to retrieve all classes to simplify test suite management and improve code clarity
modified GzipFilter and GzipFilterDefaultTest to remove leading and trailing spaces from token handling to ensure clean input handling and improve test accuracy
updated the assignment of the output type in Response . java to ensure consistency in output type handling
updated regex implementation property from JDK to JONI to use the preferred regex implementation for improved performance and compatibility
fix crash when capture view background task
added style support to mary server and info request handler .
added a check to create a parent folder ' s parent directory if it does not exist to ensure that the process of creating parent directories to avoid runtime errors
updated warning log message to use " 127.0 . 0.1 " instead of " 0.0 . 0.0 " to ensure correct binding of the IP address
camel - 16400 : camel - jbpm - workitem should use apache karaf in karaf endpoint by default
pdfbox - 2184 : have a private constructor , a suggest by valerybokov
updated variable names from WorkModeToggleContainer to WorkFooterContainer and adjusted associated method calls to improve clarity and consistency in naming conventions
replaced multiple Dalvik - related classes with consistent naming conventions to improve code readability and maintainability
fix : add class cast for implicit type parameter ( # 790 )
fix ( core ) : fix unit test which fail from jdk - 8
removed unnecessary newline character from error message in QueryByExamplePredicateBuilder and modified string replacement logic in StringQuery to simplify error messages and ensure clarity in the output
updated eviction counter implementation and changed cumulative stats handling in ConcurrentLRUCache and FastLRUCache classes to improve cache statistics management and ensure accurate insertion of cache types
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWaitInJavaFXThread ` to enhance thread execution handling and ensure proper synchronization with FX applications
temporary fix for networkaddressmanagerserviceimpl - use instanceof for ip address check
set the data root and source root of the main window to the correct environment
added constructor to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration ` that logs the mode value to provide visibility into whether the admin client or server has been enabled in the specified mode
[ hotfix ] [ table - api ] fix typo in tableenvironment
updated timeout handling in MapperBuilderAssistant and MappedStatement classes to ensure consistent default statement timeout configuration
removed unused parameter ` hangingTscTimeout ` from multiple files to simplify code and improve readability by using a consistent option
added GeoLocationRequest and GeoLocationResponse classes to CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of geolocation requests and responses for improved data handling
updated artifact filesystem to ensure they are only instances of BuildArtifact to enforce correct validation for build artifacts
tika - 2778 -- add unit test for parse xls / xls file
make sure javascript can not trigger concurrent modification if it ' s modify
- 1 . fix race condition when read data .
added error messages for missing values in GuavaOptionalSubject to improve debugging clarity when assertions fail
updated visibility checks and simplified logic in BackgroundAppState and ShelfScrimView to improve code clarity and maintainability by using more descriptive constants and simplifying logic
fix a npe in the shader node editor when the navigator panel be collapse
mow - 1335 only set bound on image , not image
camel - 20297 camel - error -Occuredin - on - exception : remove thorough space
fix : astrodiscovery schedule with fixed delay instead of info
[ fix ] solves issue with color not be update when a light have n ' t be in use .
camel - 18097 : camel - jms : ignore test that hang the vm .
replaced specific imports in GuiceFactoryTest . java with specific imports for Guice - related components to enable dynamic dependency management and improve code clarity
added system feature management functionality to RobolectricPackageManager to enable dynamic handling of system features based on available features
added a new constant for path postFIX and updated the path handling logic in RCAFrameworkLoader . java , along with introducing a test case for it in RCAFrameworkLoaderTest . java to improve handling of relative paths and ensure proper functionality through unit testing
[ hotfix ] [ runtime ] remove unnecessary log at task # startcancelwatchedog
[ gr - 10727 ] avoid arrayindexoutofboundsexception when try to access property with no value .
fix for # 672 , do n ' t try to add a new node when the node be n ' t in the inline box
[ akamai ] send telemetry data in sync mode ( # 11767 )
removed conditional logic for altering the item item text column in UpgradeCatalog260 . java to simplify the code by directly changing the column type without altering it
[ flink - 23454 ] [ table - api ] add more permission check when create index / temp resource dir / dirs
refactor DatasetUtilities to improve data handling logic to enhance performance and maintainability of the dataset utility
a fix ( when pseudo element be match ) to the previous fix
fix checkstyle issue in util / gouraudshadingcontext . java ( # 700 )
updated taskbar visibility management for smoother transitions to enhance user experience by improving the animation behavior and visibility of the taskbar while interacting with different states
replaced multiple instances of " EECDH " , " RSA , " with " ECDHr " , and " SRP " to ensure compatibility with current cryptographic standards
added a check to ensure the connection is an instance of JdbcConnection before executing a query to prevent potential ClassCastException when accessing the database
updated index calculation logic in ServerMainTest . java to handle cases with a negative index value to ensure correct file existence validation based on the presence of the log file prefix
added methods to get the media recording MIME type to enhance media recording functionality for better user experience
fix ( tile ) : correct visibility of shaderhelper . useshaders ( )
fix logical error in druid adapter , result in incorrect result
updated the instantiation of ZkStateReader to adjust its configuration to ensure consistent timeout handling for ZkStateReader
pdfbox - 4441 : disable external entity and xmp metadata for metadata parser , a suggest by ralf hauser
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package to provide a standardized way to identify client registration identifiers
updated the method of skipping scripts in URLHelper from a conditional check to a while loop to improve iteration logic for better performance and readability
renamed ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and modified varargs access logic based on resolution to improve clarity of the variable ' s purpose and ensure proper type handling when varargs is required
fix for bug 647327 - border property template do n ' t check if border be not set or blank
changed log level from info to debug for reconnect backoff logging to reduce log verbosity and improve performance during debugging
replaced specific imports with wildcard imports and modified method signatures to utilize HubRegisterResponse to enhance code clarity and flexibility by utilizing the response from HubRegisterResponse
replaced manual byte manipulation with Byte . toUnsignedInt method across multiple classes to ensure consistency and reliability in byte operations
remove redundant parentheses in openTracingTransactionProducer . java to improve code readability and conciseness
change default value from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to enable caching functionality by defaulting to cache
set the rangePannable property from true to false in CategoryPlot . java to disable range pannging for improved functionality
fix work mode switch issue ( issue 10994971 )
changed access modifiers of ` glCaps ` , ` renderer ` , and ` FPSAnimator ` to private in ` Visualizer2TopComponent . java ` to improve encapsulation and ensure proper initialization of the animator
added exception handling for CancellationException in FunctionTest . java to improve robustness by gracefully handling cancellation scenarios
changed constructor visibility from package - private to protected in JarFileResource and JarResource classes to allow subclasses to access constructor and improve encapsulation
add some javadocs to track selection that be n ' t be correct .
added a loop to wait for the isUnseqMerging status to improve synchronization during unseq merging
updated Fee currency in BTCMarketsAdaptersTest from AUD to BTC to ensure compatibility with the latest trading requirements
updated SQL query and test methods for Hibernate and JPQL to ensure correct retrieval of data types and improve test accuracy
refactor Unicode . java to improve code readability to enhance maintainability and ease future modifications
updated the ` installAutoInstance ` method to accept a ` Service ` parameter and added a method to update Hive LLAP settings accordingly to ensure proper service context is used for managing Hive LLAP settings
no actual changes were made to the code logic to ensure consistency in code formatting or review changes
fix and simplify SSECustomerKey serialization ( # 2282 )
added support for handling BIG _ DECIMAL data type in RangePredicateEvaluatorFactory to improve data processing capabilities and provide clearer error messages for unsupported value types
fix treebackedprocessorwrapper so that it always return the same type
added annotation printing functionality to ParameterInfo . java to facilitate debugging by providing visibility into annotation usage
disable ac3 playback when in live tv mode
[ grid ] fix json output for localnode
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement . java and DiskFileItem . java to address dependencies related to DBCP and file upload requirements
added a test method for selecting tables and modified SQL queries in IoTDBExtendTemplateIT . java and IoTDBExtendTemplateIT . java to enhance testing for schema template handling and ensure correct functionality of SELECT statements
modified RTimerTree . java file to improve timer functionality to enhance the performance and accuracy of timer operations
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core . rules . graphbuilder ` in multiple Java files to reflect the new organization structure for better clarity and organization
add fix for issue # 358 ( canvas do n ' t account for flipped text )
[ java ] update client connector to use a unique naming scheme to prevent clash
reduce size of view result and add an error log pane to the title
add phone number to / scim user endpoint doc ( # 9123 )
changed class visibility from public to private and added a private constructor to prevent instantiation of these classes to enhance encapsulation and prevent instantiation
added null check for responseMap in JsonHttpPropertyRequest and improved error handling in URLStreamProvider to ensure proper error reporting for null responses and enhance robustness of HTTP status codes
refactor SolrRequestHandler class to improve code readability to enhance maintainability and facilitate future development
fix : xmlsuitest # testconfigurationisdynamic and xmlsuitest # testconfigurationisdynamic to skip default parallelism
summary : [ vmware ] move vmware - api test from test to testvmwaregateway
add handling for SCARD _ E _ NO _ SMARTCARD in the error check to improve error reporting related to smart card presence
added SuppressSysoutChecks annotation to Test2BTerms . java to temporarily disable console output during test execution
camel - 6569 : fix bindy to work with key - value pair return list .
disable owner / timestamp by default ( # 4104 )
fix bug : parametrisedexception be never null , so convert to throwable
fix ( uri ) : avoid npe when query uri without seed
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version from " 4.1 . 1 " to " 4.2 " and improved type handling in LiquibaseXMLTransformer to reflect the new version and enhance data retrieval consistency
bug 60790 - http ( s ) test script : set proxy cert validity to 90 second
updated ` frame ` and ` smoothDelta ` to include a ` lastDeltaUpdate ` variable and adjusted related calculations to improve responsiveness of animation timing based on elapsed time
added null check for paginator in HttpBatchReader and modified HttpScanBatchCreator to handle null cases to ensure proper parsing behavior when paginator is not available
added null check for ` compactionInfoClient ` in ` Worker . java ` and created a test for ` findNextCompactThrowsTException ` in ` TestWorker . java ` to ensure proper handling of null values and validate exception handling during compact requests
added functionality to save and retrieve instance state of fragments to ensure proper handling of fragment state updates in the ShadowFragmentActivity
formatted code for better readability in BatchResourceFactoryBean . java to improve maintainability and consistency of the code style
added a test for parsing Android color references in ColorResourceLoaderTest to ensure correct parsing of color references in the ColorResourceLoader
added handling for NoResultException in AbstractJPAQuery and created a test for unique results to improve error handling and ensure unique result functionality is correctly tested
fix for bug 4186 . getallparents method return nullpointerexception when add a collection .
updated depth preference retrieval to use LawnchairApp instead of a generic Preference instance to ensure compatibility with the LawnchairApp context for the depth effect
8067927 : [ testbug ] fix localmanagertest . java due to dependency on processtools
removed the parameter ` now ` from the ` updateTotalEnergyAverageUsage ` method and its usage invocation in the ` EnergyProcessor ` class to simplify the method signature by eliminating unnecessary parameters
[ ds - 3852 ] fix npe in extensionstack # tostring ( ) .
3 . x : flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . flatmap . freeze ( ) do n ' t dispose inner subscriber ( # 7090 )
fix ( http ) : ` ` connection pool have be shut down after connection pool have be shut down ' ' error
changed the initialization of ` androidPlatformTarget ` in ` AndroidPrebuiltAarDescription . java ` to ensure consistent usage of the toolchain provider for Android platform targets
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to update to the latest testing framework for improved consistency
removed duplicate ` SystemResourcesEdgeEventFetcher ` and ` TenantResourcesEdgeEventFetcher ` additions from ` EdgeSyncCursor . java ` to streamline resource fetching logic for improved clarity and efficiency
added a new test method to verify output hash calculation when cache is not writable to ensure correct output hash calculation when cache is not writable
camel - 8221 fixed the c error of camel - netty
update the alteration method to use Warehouse . getQualifiedName instead of a fixed old name to ensure correct table type is used for partition alterations
improve error message when the vertx instance be not create with prefernativetransport option set to true to create domain sockets
add test for enumtypehandler ' s color serializer ( # 5047 )
refactor StreamEx class for improved readability to enhance maintainability and clarity of the code
added hints for query and lock timeouts in SessionImpl . java to improve query performance by managing timeout settings effectively
add staticloggerbinder to be able to bind to slf4j - api .
remove unnecessary cloning of family in mmm , mmmmm Put , mmmmm Mutation , and mmmmm Mutation to ensure consistent behavior across different components of the system
updated TaskbarManager to implement orientation changes based on window configuration to ensure correct behavior of taskbar scaling based on new and old orientation settings
fix a xmpp crash with xmpp by properly unescape occupant to xml .
storedirect : fix npe when call put ( ) twice twice , fixes #265
add ` @ suppresswarnings ( ` ` mutable ' ' ) ` to several shade jar file .
jbrules - 3539 : better structure of executionflowcontroltest - add holder class to make it easy to run test
updated conditional checks for audio and subtitle tracks and improved logging messages for clarity to enhance code readability and ensure consistent logging format
modified the instantiation of NBWriteServlet and TestWriteListener to include an unlimited flag to control the performance of write operations by allowing unlimited writes
fix : do n ' t update total difficulty when import non - existent block
modified logic for determining current window seekability in DefaultPlaybackController . java to improve clarity and correctness when handling playback actions
improve performance of nativelibrarysupport # initalization
updatedUniform calculations for improved rendering accuracy in AllAppsView . java to enhance the visual responsiveness of the application based on updated constraints
added a check for the presence of a colon in the key alongside the existing index check to enhance validation logic for processing headers in HttpURLConnection
updated CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to include PrincipalResolver as a dependency to enhance authentication handling with named principal resolution
replaced ObjectMapper with JSONParser for parsing JSON responses to improve compatibility and flexibility in JSON processing
added a method to remove trailing slashes from a StringBuilder in IoUtil . java to improve string manipulation by ensuring safe handling of trailing slashes
added support for any ( ) and any ( ) pattern matching in the PatternsMatcher class to enable pattern matching functionality in the application
updated error message format in LoadIncrementalHFiles . java to use placeholder syntax to improve readability and maintainability of the error message
added potion potion fire event for wATER entity . close # 168
updated the method call syntax for starting or resizing reorder preview animations to improve code readability and maintainability
updated calculation of decreasePercent in ContractStateCapsule and adjusted formatting in ReceiptCapsule to improve code readability and maintain consistent formatting
updated async content handling in ` AsyncContentProducer ` and added a new test in ` AsyncIOServletTest ` to improve input readiness checks and validate idempotency of async requests
added null check for weightField in DocumentDictionaryFactory to ensure mandatory parameter is provided to avoid runtime errors
replaced the existing plist resolution step with a new variable substitution function to enhance the flexibility of managing plist variables in the build process
fix turret not drop team on turret , close # 269
cast the adaptOrder method to a Object type to ensure proper type casting to prevent potential ClassCastException
added a new file ` PreParseGrammarTest . java ` with XML grammar parsing functionality to facilitate testing of XML schema grammars by using the XMLGrammarPreparser
8278396 : fix doclint warning in javax . swing . plaf . model
fix that change style cause some text to be draw while edit a text
added a null check for currentUser in AuthorizeTag . java and a test case in AuthorizeTagTests . java to ensure unauthorized access to the current user when no user is found
camel - 8092 fixed the unit test error of camel - cxfrs
override the setupdata ( ) method in jdbcgeometrytestsetup , since the data object be create by other test .
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and reduce unnecessary dependencies
[ flink - 29096 ] [ backend ] re - throw error if restore attempt for already cancel task
bug 52379 - remotejmeterengineimpl : create rmi registry if server . rmi . create = true
ninja fix for log in compactionmanager when anticompactrange be false
added display metrics tracking and modified test cases for qualifier handling to improve performance and accuracy of resource qualifiers in the application
[ java ] add cluster memberid to service heartbeat to indicate when a member be in the cluster .
updated the logic for setting ` numAttributes ` based on the version of ` VersionCheck ` to ensure compatibility with both 21 and 21 versions for proper attribute management
modified the return statement to handle negative and positive values in CustomExpression . java to ensure correct evaluation results for special cases and improve hash code clarity
updated log statements in AjaxListener for clarity and correctness to improve readability and maintainability of log outputs
added authentication and authorization routes to the controller and implemented and tested methods in the controller to enhance user experience by providing authentication and authorization feedback
snippettemplate : assert that the next node be not be replace by the next node ( graal - 609 )
updated logger initialization to reference HttpClientRequestImpl instead of ConnectionManager to ensure correct logging context for the HttpClientRequest implementation
update track selection to prefer content over technical preference .
updated RuntimeSerialization class for improved functionality to enhance performance and maintainability of the serialization process
mow - 359 crop image now properly remove element if it be crop .
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new field ` allAppsCellWidthPx ` and updated its usage in ` WidgetPreviewLoader ` and ` WidgetCell ` to allow dynamic adjustment of width definitions based on the current device profile settings
tika - 2334 -- add content - type parameter in tika - core - add resource name if need .
updated URI construction in ThumbnailsCacheManager to use fileId instead of getRemotePath to ensure correct identification of local files in the thumbnail cache
fix issue with input field not be read when run with java 1.6
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new code
ambari - 3722 . ambari ui should have option to show error stack on the error page ( mahadev )
bug 14227 : fix account removal which be fail to cleanup the domain
removed redundant null checks for fremCall and dremCall in SPARCArithmeticLIRGenerator . java to simplify code for better readability and maintainability
drools - 1421 dmn fix build after upgrade to kie - internal
refactor onRequestPurchaseResponse to use Runnable for asynchronous execution to improve responsiveness and avoid blocking the main thread during asynchronous operations
[ beam - 10670 ] increase default timeout of unboundedsourcesystemtest to 1 second
updated import statements and modified resource name qualification logic to improve code readability and correctness in resource management
deleted two files and added classes MrefStat and MrefStat1 with relevant methods to introduced new class implementations for improved lambda method reference statistics
added StringUtils import and modified scope handling logic in DependencyInsight . java and DependencyInsight . java to ensure proper handling of blank scopes to improve code robustness
replaced exception handling for missing trades and error messages in BTCETradeServiceRaw . java to improve error handling and provide clearer feedback on missing trades and bad status
[ core ] use hamcrest assertion instead of junit in integrations / cdi / datasource - backport main ( # 1749 ) ( # 6164 )
add bitcoinuri . getpaymentrequesturls ( ) to return multiple payment request url
planner - 383 give a more helpful error message if a frompropertyvalueprovider do n ' t return a parameterized type
removed redundant line setting folder info in FolderPagedView . java to streamline code by eliminating unnecessary duplication
simplify lock owner check and improve event writing logic in JfrChunkWriter to enhance code readability and ensure proper event handling during buffer operations
[ buck ] minor refactoring to remove unnecessary stream . of ( ) . anyMatch ( ) call
updated LintUtility to use InputResource for loading linter configs to improve resource handling and error handling during the linter configuration loading process
replaced direct calls to updateBackgrounds and updatePaddings with a Runnable to ensure backgrounds and paddings are updated on the UI thread to improve responsiveness
fix issue with inventory not be able to extract item from each other . close # 961
added a case for OCELOT _ BABY in PlayerEvents . java to enable handling of OCELOT _ BABY event type
added multiple @ Public annotations to StateTtlConfig . java to improve code visibility and clarify the purpose of the methods
added null handling for variable ' x ' in PreparedStatement , Array , and Object classes to ensure proper handling of null values during set operations
[ java ] output valid description for all recordings in the archive .
change string concatenation from double quotes to single quotes in StringBuilder to improve consistency and performance in character handling
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest . java ` and modified the existing ` directory ` and ` propertiesFile ` paths to ensure proper JSON serialization functionality and enhance test coverage
remove transaction and block cache after test . resolve # 264
added support for enabling / disabling PRIVACY mode in the IP camera handler and updated corresponding methods to ensure proper handling of configuration based on the " LensMask " status in the application
removed NoSuchBuildTargetException from method signatures in BuckConfig and BuildRuleFactoryParams to simplify method signature by eliminating unnecessary exception handling
updated the constructor of ChangeLogIterator to accept multiple parameters to enhance flexibility by allowing dynamic initialization of ChangeLogIterator
fix display an error message for guest exception in the launcher .
[ ec2 ] respecting system property for option _ out _ tracing ( # 2162 )
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization of objects
updated the condition for handling the parent node in SpacesVisitor . java to improve clarity and correctness when processing J . Annotation annotations
# 1404 - enh : add copy ( true ) on servercacheoptions ( # 1404 )
added a new test method ` testHiddenBorder ` to ` VisualRegressionTest . java ` to address visibility issues with floated elements with overflow hidden
replaced ActionGraph with TargetGraph in WorkspaceAndProjectGenerator and ProjectCommand to enhance flexibility in graph usage and improve code clarity
update KucoinExchange to use PROD _ URI instead of LIVE _ URI to ensure consistency in URI format and improve error handling for invalid URLs
corrected the syntax for determining the resource path and modified the search path assignment logic to ensure proper path handling and improve clarity in resource path resolution
[ smart ] update unit label ( μ , µ ) ( # ² )
updated the method call from ` getMask ( ) ` to ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure compatibility with size packed data in the mesh
deleted the Tls12SocketFactory . java file to the socket factory is no longer needed in the project
fix incorrect resolution of new bib entry ( # 8785 )
added a check for Robolectric legacy mode in ResourcesTest . java to ensure compatibility with legacy resources when using Robolectric
make double precision for firebird ' s double precision nullable
added null checks for dataSource and transactionManager before initializing them to avoid potential NullPointerExceptions during object initialization
add a stub class to fix the build .
change test timeouts from a fixed value to a dynamic timeout of 60 seconds to ensure test execution does not hang indefinitely when the test fails
# 227 - eagerly use try - with - resources in ebeanserver _ savealltest .
lucene - 3111 : do n ' t score in termquery . scorer if scoremode . needsscore ( ) .
[ beam - 10399 ] fix npe in datalockmetrics . setmetrics ( ) ( # 10399 )
server : remove search for accountdatacentersvirtualsearch when do deploy vm ( # 7042 )
updated the ` DynamicPartitionPruner ` to use ` targetOi ` instead of ` oi ` and simplified object inspector initialization to enhance the flexibility and correctness of object inspectors based on column names
added a method to remove build artifacts and corresponding tests to enhance functionality and ensure proper cleanup of build artifacts before execution
added logic to set the row selection interval for the selected row in the table to ensure that the selected row index is retained when it is not zero
rename assertarraystoreexception to assertarraystoreexception for good readability .
doc : fix typo ( # 7591 )
add user - agent parameter to allow customization of user - agent
updated session management to use a concurrent map for asynchronous operations to improve performance and reduce contention during session restoration
modified assert message in ` IssueTest . java ` and refactored results in ` Reporter . java ` to use ` Collections . newSetFromMap ` for improved data provider generation to enhance clarity of test results and ensure uniqueness of returned data providers
fix npe when read beam - EWS file with no content - type
added activationrequestdenied event to allow for change to activation id ( # 1573 )
fix a bug in drawshape ( ) , it do n ' t fix intellij .
update task view snapshot radius ( fix # 1214 )
add more logging and correct swagger generation for 3rd party service
changed the return type of the put method from void to int in ArrayMap . java to enable retrieval of the index value for further processing
[ flink - 24190 ] [ kafka ] [ test ] increase broker startup timeout
[ issue # 4843 ] fix push consumption warn ( # 4894 )
updated header check logic in StaticServerHttpHeadersWriter to ensure no headers are added if they already exist to improve header management accuracy and prevent unnecessary header additions
added package access check for the listener type in EventListenerList . java to enhance security by ensuring proper package access validation
add custom content adapter for image and application
updated the applyIcon method to accept an additional nullable Task parameter to improve flexibility and prevent potential null pointer exceptions when processing tasks
changed try - with - resources to try - with - resources for DownloadStateCursor to ensure proper resource management and avoid potential memory leaks
fix sqm to sql ast conversion for path contain ' select ' clause
added JUnit integration tests and modified HibernateCursorItemReader and HibernateCursorProjectionItemReaderIntegrationTests to improve test coverage and eliminate unnecessary execution context handling
[ slip ] fix slow data transfer when poller thread be interrupt
added ENABLED _ TS handling in VersionTargetGraphMode and introduced ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency management for improved performance
refactor UpgradeCatalog150 . java for improved organization to enhance code maintainability and readability
rename networkparameters . testnet3 to testnet3 to avoid confusion .
remove unnecessary updateifinselection call from propertiesview
updated onboarding preferences handling in AppsDividerView and added null safety in ActivityContext to improve code readability and prevent potential null pointer exceptions
updated HdfsIndexOutput to extend BufferedIndexOutput and modified flush / write methods to improve performance and flexibility when closing the index output
pdfbox - 4892 : set clip to new rectangle if not already finish
removed synchronization check around local address assignment in SocketChannelImpl . java to simplify code by ensuring local address is only set when the channel is open
refactor the ` addToRow ` method for better readability and structure to improve code maintainability by encapsulating the row addition logic in a separate method
utils : fix renameto ( canonical ) to work with window .
fix : support for java 21 alpha in code39writer .
improve nodegenfactory to better handle expect return value
remove unnecessary check if stored field be already stored .
[ issue # 11307 ] fix timestamp _ sequence in where clause
fix : do n ' t update runnables when stacktrace be null
fix checkstyle issue with empty line in abstractgcsprocessor
replaced ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve synchronization and responsiveness during connection initialization checks
change directory retrieval in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to use " single " instead of null to ensure correct directory retrieval behavior for tests
updated ` UserData ` initialization and modified filter count handling in ` FaultTolerantChunkProcessor ` to streamline data processing and enhance clarity in filter count management
updated tab handling in FileWithTabs and T4994049 . java to improve formatting and functionality to enhance code readability and maintainability
replaced multiple checks for WindowsTerminal instance with ` assumeTrue ( ) ` to improve code readability and ensure proper assumption for terminal instances
[ # 8333 ] remove redundant admin check from getfeedbacksessionaction ( # 8344 )
update calculation of newSelection and adjusted velocity threshold in AllAppsView . java to ensure correct selection behavior and extend the threshold for better user experience
bugfix # 252222 , do not call threadinfo . initialize ( ) if no result be available
updated ` DataModelManagerDialog ` , ` DbConnectionDialog ` , ` ExportPanel ` , and ` FileVisitor ` classes to improve data encryption and enhance connection handling logic
replaced hardcoded buffer sizes with a static final variable for better maintainability to enhance code readability and reduce the risk of errors associated with string conversion
lucene - 4877 : remove dead code in documentswriter and add test for no segment index
bugfix : avoid npe when load object without dvert
modified FileDisplayActivity . java by refactoring methods and updating imports to improve code readability and maintainability
avoid unsupportedoperationexception by set fillinstacktrace ( ) to null
fix # 1435 : do n ' t draw label on out - of - box line ( # 1435 )
replaced singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility in managing display configurations
optimize the processing of quoted strings in ` valStr ` to improve code clarity and efficiency by eliminating redundant length checks
replaced Long conversion with IdConversion for converting span IDs and added a new test for the preHandle method to ensure proper handling of span IDs and validate functionality through unit testing
added a new test method ` testSmall ` to ` ServerDatagramConnectorTest ` and modified the ` ServerDatagramConnectorTest ` to include it to improve testing coverage for theDatagram connector functionality
added an extra space at the end of the assertion for COUNTRY _ CODE _ s in TestSqlEntityProcessorDelta . java to fix a syntax error in SQL query processing
modified caching logic in Cache . java to enhance performance and efficiency of data retrieval
rename variable ' e ' to ' ev ' for consistency to improve code readability and maintainability
lucene - 6338 : testunifiedhighlightertermvec : do n ' t wrap the reader mess up our count logic , by default
added a JFrame and JTextArea components to the GcodeTable class to provide a visual structure for user interaction within the GcodeTable
lucene - 7154 : remove webapp _ connect _ timeout a it be no longer need .
updated error handling in several classes for clarity and consistency to improve code readability and ensure proper error reporting
modified the TestMediaService class for improved functionality to enhance media service testing capabilities
remove link from help message , it be n ' t use anywhere in the doc .
add a new file MarketsPrintTool . java to filter out certain cryptocurrencies from Fiat and SQ to improve currency handling and display in the application
validate url component that do not contain character and underscore ( # 6372 )
added methods to register security key start and complete in AccountProxy and HttpAccount classes to enhance functionality and improve authentication handling within the application
modified the ServerSpanThreadBinder class structure to enhance thread safety and improve performance
fix placement of blockitemsystem . getuserpointer ( ) and remove useless call to getuserpointer ( )
add a number and a location type to the builder in Csv2Shape . java to improve representation of geometric data in CSV format
updated gas cost parameter handling in VM . java and removed unused imports in Program . java to improve code clarity and reduce unnecessary dependencies
updated method names and variable declarations in Parameters . java to improve clarity and maintainability of the code
added a call to setIgnoreNullValues to the piePlot class to handle null values to prevent potential null pointer exceptions
4 . x : remove unnecessary wait when iterate over cache
fix for pdfbox - 2147 : use - instead of _ when _ missing and add hyperlink support
refactoring : make allowedduringediting publicly available in a freeplane / exec action
set userModified to true in LoginSamlAuthenticationProvider to ensure user modifications are properly handled
added a new file TestSealedObjectNull . java to test the behavior of SealedObject with null values to ensure correct behavior when comparing SealedObject objects with null values
changed method names from onOpen to succeeded in ConnectPromise and adjusted session handling in WebSocketClientConnection to improve clarity and consistency in response handling within the WebSocket client
fix : update vanilla eventlistener , now work in 1.16 +
added a lastTradeId tracking mechanism for trades and modified Trade constructor to include the trade ID to ensure trades are fetched in the correct order and provide a unique identifier for better traceability
added a synchronized block to safely close the HMS connection to ensure proper resource management and prevent potential memory leaks
fix if glowserver seed can not be determine , use random seed
updated device profile sizes and added a new condition for Nexus 5 in DynamicGrid . java to improve visual consistency and accommodate new device profiles
2 . x : fix refcount disconnect if early connect ( # 4560 )
replace type ' s newInstance method with ReflectUtil ' s newInstance method in SynthContext . java to enhance instantiation handling for SynthContext
[ flink - 4635 ] [ php ] add support for whitespace within text mode
add checks for empty file and file conditions in SaveTask . java and implement new test cases in SaveAndLoadTaskTest . java to ensure that files are not deleted if they already exist and to validate functionality through unit testing
fix npe cause by race - condition in mlogwriter . updatetimeseries ( ) method .
added handling for MutableLogEvent in SmtpManager to ensure proper serialization and deserialization of log events
update the PADDING property to use NonNegativeLengthLike instead of LengthLike to ensure proper handling of negative lengths in the property builder
fix findbugs warning : getuser ( ) already take the request to create the context
builder : fix handling of exception in method
updated JUnitRunner and AndroidPlatformTarget to correct the method call format and added logging for Android SDK files to improve code clarity and enhance error reporting for build tools
update cacheSize calculation to use maxMemory / 8 instead of maxMemory / 16 to improve memory management by accommodating larger data sets
updated condition checks and data structures in InvocationStageTrace and TestInvocationPublishModelFactory to include start time in addition to finish and start conditions to ensure proper handling of start states in invocation stage tracing
added work around for npe issue with fips keystore and empty stream .
replaced a fixed port with a dynamic port assignment in UpstreamCheckUtilsTest to allow dynamic port assignment based on dynamic values
ticket # 4433 : if there be no other parent , it should n ' t be correct .
add shader limit for opengl 4.0 +
updated PopulatorContext . java to enhance data handling capabilities to improve data management and maintainability
fix an npe in save all notification . ( # 1588 )
added encoding detection and improved JSON string conversion in ZQLJobManager to ensure proper handling of character encoding based on system properties
added a check for an empty array in IkStepDefinition to ensure that the argument array is not ArrayIndexOutOfBoundsException
replaced hardcoded header values with a constant value from a class - level prefix to improve maintainability and reduce duplication in the code
camel - 19937 : camel - core - deprecate option that hide the option that be not in use
removed logging statements related to unsupported Apache Derby driver class version to clean up the code and improve maintainability by eliminating unnecessary error messages
[ drools - 7642 ] avoid flakiness in ksession unit test
fix thread safety issue with PersonNameSuggestionProvider
added conditional logic to update the hub . mode property based on configuration to ensure updates occur only when the new mode is already set , improving user feedback
added constants for Java VM version information and a test method for it to improve code clarity and ensure version validation for the Java VM
modified the font addition logging to handle CompositeFont instances and added a new DebugFonts class for debugging to improve logging clarity and facilitate debugging of font - related configurations
added HTTP _ 1 _ 1 negotiation check in NegotiatingServerConnectionFactory to ensure compatibility with the latest Jetty HTTP version
fix # 837 - jetty - http2 : maxconcurrentstreamstest . testconcurrentstream ( ) .
added a new file Test6741426 . java that implements a GUI test using NimbusLookAndFeel to create a user interface with a text field in the Nimbus look and feel
update error message in CsrfAwareEntryPointAndDeniedHandlerTest to include exception message to improve clarity of error reporting by including the exception message in the failure assertion
added null checks for dbMgdPath and dbExtPath before proceeding to ensure that operations are only performed if they are not null to prevent potential NullPointerExceptions
add package , so that s3 implementation can have it own
removed the accentColor parameter from setup methods and replaced them with a direct call to viewThemeUtils to simplify the setup process by eliminating unnecessary color parameter
updated the error message in TemporaryFolderUsageTest to use ` fileAtRoot ` instead of ` temp1 ` to provide clearer context for the failure condition related to folder path handling
updated type information handling in MappingMongoConverter for Map , Collection , and Object to improve consistency and clarity in type information management
check for null or empty address after addaddress in clientconnection ( # 15816 )
8225072 : add exception for expire docusign root to verifycacerts test
fixed bug in worker loop and make output count available for compute
fix [ tool ] : do n ' t set mode when popup be n ' t open
pdfbox - 4892 : fix off - by - one error that may occur with a large number of glyph
add a new test class ` FinalizerInfoTest ` to verify the finalization of objects in a garbage collector to ensure that the finalizer information is generated correctly and does not interfere with the garbage collector ' s behavior
fix java 8 compile issue ( # 5344 )
add logic to retrieve the receiver address from compaction proposal to improve handling of null addresses to avoid potential errors when fetching the issuance
refactor StringSubject class to improve string handling to enhance performance and maintainability of string operations
increase the size of longData from 1 , 000 , 000 to 1000 , 000 , and added an import for JUnit ' s Ignore annotation to temporarily disable the test while addressing an issue
renamed the method ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to maintain consistent naming conventions for clarity
updated query handling to replace " from : " with " @ " to ensure consistent query formatting
removed unnecessary conditional check for forRebalance in SimulatorDiscoverer . java to streamline code logic for improved clarity and performance
added a new POST endpoint for importing YubiKey accounts and integrated it into the YubiKeyAccountRegistryEndpointTests to enable the account management functionality and improve test coverage for account updates
updated shader - related constants and modified material data handling to streamline texture configuration and improve asset resolution accuracy
added null checks for cnt and adjusted padding in SideMenuBar and Toolbar classes to enhance robustness and improve layout handling for menu items
add note that the AbiWriterProtocol be n ' t be use for writing , but it should n ' t be a merging tool .
fix bug where dimension caption be n ' t set if no name
[ ds - 3952 ] fix incorrect behaviour for item . getcart ( ) return null .
updated conditional checks in CustomExpression . java to include null check for sim . getSimulatedData ( ) and modified variable names for clarity to enhance robustness by preventing potential NullPointerExceptions during runtime
send republish request instead of requestblindVotelistfromnetwork ( ) to avoid race
additional test ... not run during unit test , but useful for stress the pool
updated substring method calls in SubtitleUtils and RemoteUtil to use single quotes instead of single quotes to ensure correct parsing of lines with varying delimiters
comment : support backslashes in line separator ( # 2391 )
remove usage of atomicreference in singleimplementor snapshot , rely on atomicreferencefieldupdater to keep track of late snapshot .
added a null check for excludeSet before adding queries to avoid potential NullPointerExceptions when excluding main queries
fixed duplicate child cause by duplicate element in thing ( # 4105 )
replace printHelp ( ) calls with error ( ) for invalid commands to improve error handling and clarity on command input
fix angleloader when fail to load class .
added date parsing logic to handle specific date formats in DateConverter to improve flexibility in date parsing for various date formats
add test to verify that high - performance - java - persistence be not present in the database
replaced boolean variable ` canAccessDbaRecycleBin ` with ` canAccessDbaRecycleBin ` for better clarity to improve readability and ensure proper handling of database recycle bin access
added a static import for SimpleClientHttpRequestFactory and set connection timeouts to 30 seconds to setup the request timeout for HTTP client requests
fix up sourcetest to account for the fact that a path be already add to the original file system .
remove useless code in defaulthomefinder ( graalvm be not take into account the graalvm package ) .
added validity checks for access and refresh token validity seconds to ensure client settings are set to avoid unwanted values
updated the method to return defaultSdkVersion based on the application ' s Android API version to ensure compatibility with different Android API configurations
removed unnecessary ' this ' keyword from variable assignments in PropertyPlaceholderHelper . java to improve code readability and reduce redundancy
removed an extra constraint from the certificate fingerprints string in Resources . java to simplify the output for better clarity and maintainability
replaced fixed sleep duration with CountDownLatch and added synchronization for collection processing to improve synchronization and ensure all collections are processed in parallel
remove BigInteger from simpleTypes in MongoMappingContext . java to ensure compatibility with BigInteger data type handling
added a condition to check for the button text in the HomeFragment to ensure that the button is displayed correctly when it is not currently visible
updated condition in MEncoderVideo . java to check if Mencoder no out sync is enabled before proceeding to improve encoder behavior based on configuration settings for better performance
reduce event loop size down to 15
changed access modifiers of classes and methods in CountMin4 to protected and refactored feedback handling in AdaptiveWindowTinyLfuPolicy to enhance encapsulation and improve feedback handling functionality
added methods for retrieving and sorting file floats in ExternalFileField and created test cases for sorting functionality to enhance functionality and ensure correct sorting behavior for schema measurements
updated FetcherException message to reflect connection errors instead of invalid URLs to improve clarity and accuracy of error reporting for connection issues
added source information to the OpenRocketSaver and related features to enhance event handling by including the component ID for better data management
changed the visibility of the check method from private to protected to allow subclasses to access the method for enhanced extensibility
added functionality to handle synchronizing file operations in FileActivity to improve user experience by providing appropriate feedback for synced file conflicts
updated the URI construction in ThumbnailsCacheManager to use URLEncoder for file paths and added force icon support to improve image loading accuracy and ensure compatibility with external resources
added a check for the initialization state before proceeding with operations to ensure that operations are only performed when the client property is properly initialized
updated the initialization of total variable and modified the addition operation for value to correct the calculation logic for better accuracy in the set
added a lock timeout check before updating an entry in FeedRefreshUpdater to ensure proper handling of entries when a lock is unsuccessful
lucene - 8367 : fall back to unixuserprincipal . fromgid when a user be not define .
replaced the dynamic creation of nodes with a single edge array and refactored the algorithm for creating edges to improve performance and reduce memory usage during node creation and enhance readability
added a try - finally block to ensure proper resource management to ensure proper resource cleanup to prevent potential memory leaks
remove carriage return and other character in comment ( for now )
added strict parameter handling in properties file parsing to ensure default behavior is set when strict mode is not enabled
add alwaysinvalidconstraint annotation for custom constraint ( # 6307 )
camel - 16129 : camel - http - improve the verifier to check for http4 be a valid base on user forum .
lucene - 4489 : fix time issue in testcloudpivotfacet . testusagewithingfacet
removed unnecessary length checks for Integer and Long values in UBJsonWriter . java to streamline code for better readability and maintainability
updated ApplicationTest . java to include new test cases to improve test coverage and ensure robustness of application functionality
use stringbuilder instead of string concatenation to prevent memory leak
refactor ` Type ` to ` RoboType ` across multiple files to enhance code clarity and maintain consistency with RoboType representation
[ java ] return action . abort when archive or subscription be complete .
added support for ' cachekey ' and ' cachelookup ' in entityprocessorbase .
added a new file PutfieldError . java that demonstrates the throwing of IncompatibleClassChangeError to validate that the expected error is thrown during runtime exceptions handling
fix xmpp ` ` connection fail to connect to aws address ' ' issue .
test : patch by jbellis ; review by brandonwilliams for cassandra - 1500
replace usage of ` space . build ( ) ` with ` mark . single _ space ` in multiple Java files to improve clarity and consistency in code representation
[ java ] remove deprecate ` encodedlength ( ) ` from flyweight by encapsulate it in a dedicated method .
refactor TestMethodResultMapBuilder class to improve method result handling to enhance clarity and maintainability of test cases
added handling for Integer method calls using ConstantPool in FindNullDeref . java to improve error handling and bounds checking forSurrounding try blocks
[ flink - 21490 ] [ checkpoint ] avoid create unnecessary tasklocalstatestore lock
modified time formatting and replacement logic for various resources in mmm Utils . java and ppp Utils . java to improve consistency and clarity of time representation across the application
updated logic in Utilities and FloatingIconView to handle DeepShortcutView instances separately to ensure proper drawable rendering for both DeepShortcutView and ImageView components
updated JwtIssuerValidator to use Predicate for claim value comparison to enhance the validation logic to allow for more flexible handling of claims
updated method names and added new functionalities for Buy and Sell quick rate in Coinmate to improve code clarity and enhance functionality for market data retrieval
added a new configuration class for coveragura project data to enable dynamic class loading based on configuration instead of hardcoding the class name
added a check to ensure the EventBus is not registered multiple times to improve event management by preventing unnecessary registration of sticky elements
added ASCII - only check to normalize method in NormalizerBase . java to optimize normalization process by skipping unnecessary operations for ASCII strings
[ hotfix ] fix migration check in jobcoordinationservice
added error handling for SQL update statements in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistics SQL commands have failed and provides clearer error messages
camel - 8392 : upgrade mockito - core to version 4.4 . 0 for camel - cometd
modified HtmlTag . java to modify attributes and added comments to clarify the purpose of the styles in 5 to enhance code readability and prevent accidental overwrites
add a line break so that the < br / > tag do n ' t interfere with the html output
solr - 7461 : do n ' t allow empty ramusageestimator if there be no score
added a custom type adapter for String elements in CustomTypeAdaptersTest . java to ensure proper serialization and deserialization of custom type adapters
fix : use extra data from mining params in MergeCoordinator .
added a static final map to track the number of arguments to ensure consistent argument handling for dependency execution
camel - 14263 : camel - aws2 - * : where possible , give the example more context in the doc
[ 3.0 ] fix typo during migration ( # 8000 )
doc ( regen ) : fix wrong javadoc about list of part
fix an unsafe resource path in twitterbootstraputils ( # 2640 )
remove workaround for tika - 371 , do n ' t work well with postag string that be n ' t work well
hhh - 12947 add load ( ) method to uniqueentityloader and deprecate loadbyuniquekey ( )
hbase - 16219 fix race condition in regionserverflushtableproceduremanager and regionserversnapshotmanager ( stephen yuan jiang )
fix for setsize ( ) with no argument ( fixes # 2172 )
removed duplicate calls to fillPool ( ) in HikariPool . java to improve code readability and maintain consistency in pool implementation
removed multiple assureMatchVersion ( ) method calls from various filter factories to streamline code and ensure compatibility with Lucene ' s version management
fix proxying of abstract method be default method ( # 8727 )
tregex : fix parsing of comma after comma
refactor multiple classes including GuavaOptionalSubject , IterableOfProtosSubject , MapWithProtoValuesSubject , and ProtoSubject to improve code organization and maintainability across the codebase
make handling of negative payload length configurable in wsframe .
move the publish channel parser into the ' dispatcher ' package instead of the ' channel ' namespace
updated execution ID handling from String to Long in multiple classes to accommodate larger execution IDs and maintain consistency in data type across the application
pdfbox - 3000 : speed up by update a bit of image size by update a bit directly
solr - 4597 : remove useless log ` ` overlay version ' ' from solrconfig .
update delayUntil calculation in FileSyncAdapter to ensure synchronization delay starts from the current time to improve synchronization efficiency
update the variable assignment for ` afterConversionTime ` in ` SegmentV1V2ToV3FormatConverterTest . java ` to ensure consistency in variable formatting
replaced ` fullPath ` with ` Path ` for better type safety in ` addPathToMTree ` to improve code clarity and ensure consistent path handling throughout the application
fix class loading in jar : ` ` file : ' ' classloader issue in ` ` class : ' '
[ flink - 24586 ] [ table - common ] introduce timestampextractorutils for backwards compatibility
added a new class SpringSecurityAuthenticationSource to handle LDAP authentication sources to streamline authentication handling by integrating LdapUserDetails and AnonymousAuthenticationToken
updated AbstractConcurrentArrayQueue , ManyToOneRingBuffer , and ManyToOneRingBuffer classes to improve code organization and maintainability
change minSdk from Lollipop to KITKAT in ShadowAlarmManager to ensure compatibility with the latest Android SDK version
replaced the auto - suggest dialog implementation with a custom dialog using SimpleFormDialog to improve user experience by displaying custom file names directly
added a new test method ` testNewput ` and modified assertions in the ` StoreAPITest ` to ensure correct behavior of asset issuance methods and improve test coverage
updated the constructor parameters of the stream method in MongoTemplate . java to use the collection name directly to improve clarity and consistency in collection name usage
map overview : fix zoom when zooming / zooming
added similarity parameter to KNearestNeighborClassifier and updated related tests to enable customizable similarity calculations for classification results
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to improve query performance and maintainability by utilizing a constant score range
replaced ` toString ( ) ` method with ` getReason ( ) ` for retrieving reasons to improve clarity and accuracy in retrieving resource reasons
update package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added MTU request handling and tests in ShadowBluetoothGattTest . java to ensure proper MTU request behavior with callbacks in BluetoothGatt
replaced ` ByteArrayInputStream ` with ` createServletOutputStream ` in ` TestPayloadNameRequestWrapper . java ` to improve stream handling by providing a dedicated output stream
added logging for unsatisfiedlinkerror in vosksttservice .
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety when accessing shared resources
updated Japanese and Chinese resource files to include " all " and " grouped " translations to improve clarity and accuracy of displayed information in the Japanese locale
fix jdbctypemapping to handle biginteger value a well ( 0 - 1 )
modified methods in GenshinScene to ensure thread safety when adding / removing players to enhance performance by preventing concurrent modification issues
replaced screen reader checks with a thread - based approach using AccessibilityStateTester to streamline code retrieval and improve accessibility handling
updated command behavior checks in MenuBar and SideMenuBar to include SIDE _ NAVIGATION to enhance flexibility in UI behavior management for better user experience
removed unnecessary import and improved subscription handling in PoloniexManualExample . java and added state logging in WampStreamingService . java to enhance code clarity and ensure proper handling of connected states during streaming operations
added validation for energy limit parameters in UpdateSettingForEnergyLimitContractActuator . java and updated validation messages in UpdateSettingForEnergyLimitContractActuatorTest . java to ensure correct energy limit handling and improve error messaging for unexpected types
renamed variable ` url1 ` to ` javaUrl ` for clarity and consistency to improve code readability and maintainability by using a more descriptive variable name
camel - 5432 : fix camel - Soap - jaxb dataformat with namespaceprefixref property
updated assertions in TestRange to use a new method ` isSameDay ` for date comparisons to improve clarity and accuracy of date comparison logic
added a check for the existence of the Jetty Solr runner and verified the security properties in BasicAuthIntegrationTest and ZkStateReader to enhance test reliability by ensuring the correct authentication plugin is activated and validated
set price feed if user want to use sticky market
updated configuration settings for replication in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to ensure consistent handling of replication settings for test cases
8015342 : ` ` abc ' ' . lastindexof ( ` ` a ' ' , - 1 ) should evaluate to 0 and not - 1
added file download functionality using FileDataStorageManager to enable dynamic file management based on download status
[ java ] set the length of the random access channel in ` ` map . rawlog ' ' .
added a method ` checkIfRegistryRunning ` to check if a registry is running and introduced a retry logic for file deletion to improve reliability of registry checks and ensure file deletion is not successful
removed unused import statements from EditTest . java and added startLoading ( ) method in Quick3dMain . java and TextureTest . java to streamline the code by removing unnecessary dependencies and enhancing clarity in loading operations
removed unnecessary initialization of ` intBuffer ` , added ` @ SuppressWarnings ( " javadoc " ) ` , and removed redundant variables in various classes to improve code readability and suppress compiler warnings related to unchecked operations
added null check for instances in TraceFeignContext to prevent potential NullPointerExceptions during execution
phoenix - 4875 ensure transaction isolation level can be set to transactional _ enabled or transaction _ serializable ( samarth jain )
added transaction attribute handling in AbstractStepFactoryBean and ItemOrientedStep classes to ensure consistent transaction rollback behavior
refactor CasManagementWebAppConfiguration to use DirectCasClient and update security interceptor class to improve clarity and maintainability of client management
added functionality to open a category in the navigation drawer to enhance user experience by providing additional functionality for category addition
renamed method from ` cancel ` to ` cancelMatchingOperation ` and updated references in ` FileDisplayActivity ` to improve clarity of method functionality and ensure consistency in naming conventions
pdfbox - 3359 : avoid potential classcastexception , by evgeniy muravitskiy
updated font size handling in TerminalView and TerminalBridge to use TypedValue for consistent text size to improve clarity and accuracy in font size management
bugfix - do n ' t model an exception handler if the incoming fact
fix a few typo in javadoc ( # 1977 )
changed the return statement to instantiate a new ArrayList instance to ensure that the spans array is properly returned to prevent unintended modifications
removed locking mechanism from Liquibase ' s change log parsing process to simplify the code and improve performance by eliminating unnecessary lock checks
added a method to set the revision and modified the logic in MicroserviceVersions to reset the revision to null to ensure proper initialization of microservice versions by allowing a default revision value
updated foreign key and index handling to format foreign key and index names separately to improve clarity and consistency in foreign key and index retrieval processes
camel - 16736 - camel - aws2 - s3 : add a configuration test for the s3 endpoint - aws2 - s3 component
removed currency pair handling from BitstampAccountService . java and added a new method getBitstampUserTransactions in BitstampAccountServiceRaw . java to simplify the method signature and improve error handling during user transactions
added a try - catch block to handle NoSuchComponentException in BlueprintContainerRegistry . java to improve robustness by gracefully handling potential NoSuchComponentException
fix push ( ) not be support in the streamprocessor .
legacyaddresstest : fix test failure from jdk - 8283156
changed the access modifier of the findDropTargetAt method from private to public to allow access to the method from other classes
refactor notification setup to use a snackbar for improved user feedback to enhance user experience by providing a more informative notification mechanism
ensure netty provider close the channel if we throw an exception
remove redundant null check , use stringutils . isempty ( ) for clarity .
add some more javadoc to stubber and make them use the ant task by default .
[ flink - 4977 ] [ test ] ignore memorymanagertest pending fix for pan - 2840
nifi - 7239 - this close # 4074 . add timezone support to dto api .
fix split error when there be too many token in the data directory . patch by jbellis
no effective change - code cleanup - remove redundant try / catch
fix a bug where we do n ' t synchronize on active connection in circuitmanagerimpl . do n ' t want active connection to be active twice
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to simplify error handling by using the more appropriate exception type
- added getter / setter for source and sink in sourcerunner and make source / sinkRunner a public api .
FastBindLdapAuthenticationHandler : change log level from error to info for authentication failure to improve log clarity and provide more detailed information during authentication failures
updated ContainerOrderFocusTraversalPolicy . java for improved focus traversal logic to enhance user experience by ensuring proper focus traversal behavior
make getpointlength return int ( will be remove later )
removed unnecessary whitespace in the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactored database connection handling to ensure proper resource management with a try - finally block to improve error handling and prevent potential connection leaks
bump default tl version to v1.2 with a fallback for old jdks
[ java ] correct exception message in countermanager to avoid use wrong buffer
modified the condition for stopping audio in MediaManager . java to ensure proper audio playback based on the position of the queue
updated debug log statements in HttpConnection . java to use the connection object directly to improve logging clarity and eliminate unnecessary checks for cancelled states
added a transient field handling method in JpaPersistentPropertyImpl and corresponding unit tests to ensure proper handling of transient properties in JPA entity management
updated upgrade resource version assertions in UpgradeResourceProviderTest . java to ensure correct stack version handling for HDP - 2.1 . 0
avoid java . lang . classcastexception when eval call on trufflevm .
bug 57840 - proxy should only output debug log if it ' s binary type
updated the configuration key for the maximum data size in Hive ' s dynamic partition to ensure consistency in configuration settings for better performance
remove unused ( and buggy : remove unused code )
remove default _ OFFHEAP and replace with default in dictionaryindexconfig ( # 1193 )
replaced string concatenation with a constant line separator for consistency to improve readability and maintainability of the test code
updated DebugHelper . java files for consistency to improve code maintainability and readability
added ownership check for texture field in ParticleEffect and ParticleEffect classes to ensure that the texture is created if it does not already exist
added new LDAP configurations in HiveConf . java to enhance LDAP configuration options for improved authentication
[ amazonechocontrol ] add javadoc to datacatalog search interface
refactor input method manager calls for clarity in DetailActivity . java to improve readability and maintainability of the code
added a test for conversion between ` Piece ` objects to their corresponding map to ensure correct functionality and behavior of data type conversion in the application
updated the size threshold in TestFileSystem to reduce memory usage to improve performance by reducing the maximum size for memory management
update error message to good indicate that this do n ' t happen
added migrationFailedException handling to multiple database classes to ensure proper exception management during sequences drop operations
added a null check for the status variable in MainWindow . java to prevent potential null pointer exceptions when processing the status
updated the assignment of the ' f ' variable to properly reference the ' f ' variable to ensure proper variable usage for the field creation process
bug fix : menu icon and parent style be sometimes n ' t set when move
added a new test method ` findOneAfterUpsert ` in ` MongoTemplateTests . java ` to verify the behavior of upserting with non - existing objects in the database
hbase - 7694 fix potential logic vulnerability in binary search ( jun rao l )
added methods to record app launch statistics and improve null handling for shortcuts to enhance launcher functionality and prevent potential NullPointerExceptions during broadcasting
simplified graphics creation and disposal in JavaSEPort . java to improve performance and resource management by reducing unnecessary drawables
[ 4110 ] if the user be try to add a team in the list , it do n ' t refresh the team list
fix : return the correct id for player ' s inventory when the player ' s id be zero .
add conditional check for ' found ' before ' break ' in ConfigDescriptionRegistry . java to ensure ' found ' is processed only when necessary
added returnType variable to multiple parser visitors and updated corresponding method calls to ensure consistency in return type handling across the parser
modified the initialization of TileMapRenderer to handle blended tiles using an IntArray if available to improve flexibility in tile data processing for different types of blended tiles
updated the initialization of ` sunClasses ` to include necessary ` @ Classes ` annotations to ensure proper handling of concurrent collection types in the application
fix for prevent npe in getazimuth , see lgtm . com / codenameone / codenameone - complain .
remove unnecessary boxing / unboxing in throttler .
pipe : fix event that will not be add to pipe if a sub event be extend .
updated ZkController instantiation to use a timeout value of 1000 to simplify the timeout configuration for improved stability
added a new test method for passcode handling with client parameters in TokenMvcMockTests . java to ensure proper handling of client parameters during OAuth2 token processing
added support for customizable lengths in broken offset constructors in TestRandomChains . java to ensure proper handling of specific lengths and improve test coverage for input parameters
removed the unused JUnit Ignore import from RandomPlaneTest . java to clean up the code and improve readability by eliminating unnecessary dependencies
replaced calls to LLVMMemory . putI1 , LLVMMemory . putI8 , and LLVMMemory . putI16 with LLVMMemory . putI64 for various data types to ensure compatibility with 64 - bit architectures and improve memory handling
updated btCollisionObjectArray and btRigidBody to use ` getInstance ` for instance retrieval to simplify code by removing unnecessary object creation logic and enhancing readability
added a new build copyright property and updated AboutDialog to use " . info " instead of " http : / / openrocket . sourceforge . net / " to enhance copyright information and update copyright information for better user awareness
add getdistributedobjects method to jetclientinstanceimpl ( # 1602 )
added debug print statements and updated test values for fin properties to improve debugging visibility and ensure correct behavior of fin calculations
update memory calculation from TOTAL _ MEMORY to MAX _ MEMORY to ensure accurate memory allocation based on maximum available memory
[ iotdb - 3859 ] fix exception type in standalone schema fetch ( # 7097 )
remove some redundant validation and fix typo
updated the static string initialization and added exception handling for big _ integer _ t in JsonLoaderTest . java to improve JSON parsing reliability and handle specific edge cases
updated the constraint check for the table size in ObjectSet . java to ensure the error message accurately reflects the required capacity requirement
updated import statements for CachedRow , DatabaseSnapshot , and JdbcDatabaseSnapshot , and added null check for data scale in ColumnSnapshotGenerator to enhance code clarity and prevent potential null pointer exceptions
removed the @ AddToRuleKey annotation from several fields in AppleTest . java to simplify the field declaration and avoid unnecessary serialization
added exception handling for URI query in FileHelper and updated content management in TextHelper to improve robustness against security exceptions and ensure accurate content truncation
added new static final integer style with multiple attributes and implemented test cases for attribute resolution to enhance theme functionality and ensure correct behavior of attribute resolution
fix hssfworkbook . createSheet ( ) to properly delete sheet with disabled name , see bugzilla 49725
changed the method used to retrieve the color from primaryColor to elementColor to ensure the correct color is used for element styling in the activity
modified DefaultEventBus and DefaultPlatformManager to check for replyHandler before creating a Handler to improve null safety and simplify path resolution logic
added binary collation configuration and related methods in MariaDbDbmsType and DbmsType classes to enable dynamic SQL generation for collating strings in a consistent manner
added a default method ` whenType ` to handle tree types to provide a way to handle cases where the type does not match within the specified class
add helper method to retrieve the user view destination for the itemlauncher . this be useful for test .
replace successful response handling with temporary redirect to streamline the process of returning a temporary redirect
[ flink - 42863 ] [ kinesis ] improve error message for non - serializable deserializer
camel - 4970 : move camel - util - xml to tooling - api - java for camel - main
replaced a fixed sleep duration with a dynamic creation of the ZkClient and added a flag for the created state to ensure proper resource management and prevent potential resource leaks
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to better reflect the method ' s purpose related to handling banners transitions
refactor read method to use a common read method for clarity to improve code readability and maintainability by consolidating read logic
replaced ` BufferUtil . allocate ( length + 11 ) ` with ` ByteBuffer . allocate ( length + 11 ) ` to improve code clarity by using a more descriptive method for buffer allocation
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success to improve clarity and control flow in the upload process
[ type : bugfix ] fix bug when add microservice configuration ( # 4367 )
added a new file PicOfDayAppWidget . java to implement a parsing and updating of a PicOfDay application widget to enhance the application ' s functionality to support picture - of - day app widgets
internal lbvm : set default value to 0 to avoid error if invalid offering uuid be pass in .
updated import statements and modified join condition handling in HiveParserCalcitePlanner . java to use HiveRelOptUtil for improved query planning and ensure correct behavior with non - equality conditions
[ flink - 33580 ] [ doc ] deprecate operator transformation class that be not really in use
added user and password options for remote jmx credentials and updated JMXConnector instantiation to enable secure connection security by allowing credentials to be accessed
removed unnecessary initialization of BytesRef in Stemmer . java to streamline code by eliminating unused variables
fix bug where only holo screen be visible in all apps
ggbapiw : : getviewforthumbnail ( ) should return the 3d view if there be no thumbnail .
updated rotation calculations in GcodeRenderer . java to ensure proper vertical alignment and prevent rendering issues
added a new workspace option and updated related code to set the workspace directory to enhance functionality by allowing users to set the workspace directory
updated the file path in CLIManagerTest . java from " target / test - classes / options . apt " to " target / test - classes / options . html " to correct the file reference to ensure the correct configuration file is being tested
updated ScimUtilsTest to use JUnit 5 annotations and integrated PollutionPreventionExtension to improve test structure and maintainability
updated OAuthConfirmationController to replace ModelAndView with a Map for the model to streamline model management and improve code clarity
hhh - 16619 fix flaky test by clear stats
[ bluetooth . eventbushook ] make it possible for dynamic event handling .
open - issue batch - 159 : add comment to explain why this be need
changed the assignment of mNewScale from a final float to a non - final variable to simplify variable declaration for better readability and performance
6999086 : clarify that syncfactory . setlogger can throw nullpointerexception
added handling for unique key fields in LukeRequestHandler to ensure unique keys are correctly associated with the schema
added round border color functionality to Border and updated EditableResources to utilize it to improve color handling flexibility for border colors
fix assert . neverpartofcompilation after a compilation .
[ hotfix ] [ test ] fix usage of slotpoolbuilder in defaultschedulerbatchschedulingtest
fixed pong app stick forever when ping completes
added toolbar menu functionality to RecentChatFragment to enhance user experience by allowing users to interact with the recent chats menu
refactor InfoDropTarget and UninstallDropTarget classes to extend UninstallDropTarget and change method return types for better clarity to improve code readability and maintainability by using boolean return types instead of void
replaced calls to ` add ` and ` removeTail ` methods with ` push ` and ` pop ` methods in several classes to enhance scope management functionality for improved data handling
updated URLs in CommonsApplication . java to point to the common wikimedia library instead of the test project to ensure compatibility with the updated project structure
refactor index handling into separate methods for better readability and maintainability to improve code organization and reduce duplication in index update logic
replaced usage of ` Collections . sort ` with direct calls to ` Collections . sort ` in multiple classes to streamline sorting method calls for better readability and performance
added date format patterns for HR in FormatData _ hr _ HR . java to support proper representation of time and time patterns in the application
added functionality to clear the focus on the clickedView to ensure the user interface reflects the current state
fixed # 2825 when delete a language , it will delete all the spinner when the user delete the description
updated time zone identifier from " WSST " to " WSDT " across multiple language files to ensure accurate representation of daylight saving time zone across different languages
added methods for registering global and weak fields and refactored the FastGetField class to improve field access handling to enhance the functionality and flexibility of the field access mechanism
reflect : add default value of jsonnode . gettype ( ) and reflectdata . getfield ( ) for java . lang . null
fix seda blockwhenfull test : the test have enough time to create a block .
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerExceptions when the class is not initialized
hhh - 8040 add constructor for h2 and h3 ( # 465 )
camel - 3446 : add an explicit connection close option to the http producer so it do n ' t put the close message back .
updated socket timeout from 60000 ms to 120000 ms to improve stability during network operations
add test to ensure that ` ` free ' ' do n ' t result in zero value
refactor the Parser class in the code to improve code readability and maintainability
refactor CasProcessingFilter to improve code structure to enhance maintainability and readability of the code
refactored code to replace calls to ` getFirstChild ( ) ` with ` getFirstElementChild ( ) ` in multiple template parser classes to improve code readability and reduce casting overhead
planner - 549 fix arrayindexoutofboundsexception when remove enum
make wait for cluster node shut down to allow for environment to exit gracefully .
fix log message when can not clean cached bean
[ ds - 3989 ] set content - type to application / octet - stream for webdav
added a method to get the queue size from the delegate in LazyTraceThreadPoolTaskExecutor and created unit tests for it to ensure that the queue size functionality is correctly configured for async processing
fix distanceop for line with distance ( # 1600 )
ww - 3988 renames require field into requiredlabel to match ui attribute
fix problem with process event in purgingpartitioniterator ( # 11943 )
added a method ` getAsUnescapedPath ( ) ` in ` SchemaPath . java ` and updated references in ` VectorUtil . java ` to improve handling of escaped paths for drill functions
add getheight ( ) and getwidth ( ) to basemonochromebitmapsource in order to provide getwidth ( ) and getheight ( ) method .
added validation to ensure that polygons have at least three points to avoid runtime exceptions
replaced usage of ObjectMapper with ObjectMappers for better object handling to improve maintainability and reduce boilerplate code
ticket # 4810 : avoid npe , a suggest by valerybokov
updated ExternalNameRecord to correctly handle Unicode strings with multibyte flags to ensure compatibility with Unicode encoding while reading external names
nifi - 7462 - fix typo in abstractjmsprocessor ' s processor description
added login prompts handling in LoginInfoEndpoint to ensure sensitive information is included in the log output
replace listener removal method with a conditional check for equality to ensure listeners are only removed if they have the same value
added a functionality to toggle the spin action in PieChartActivity to enhance user interaction by allowing users to toggle visual spinning in the chart
bug 13925 : kill the copy process if the vm be run in stopped state
hbase - 1180 namespaceuditor # getstate should only return the state of a table if it have a namespace quota
removed unused import statements and added a resize method to AndroidInput . java to streamline code and implement pressure resizing functionality
refactored the ` propertySupport ` class to include a new method ` propertyValuesOf ` to improve test readability and facilitate easier property value retrieval
disable this test because it ' s always fail and block put
fix the hopperhock not use the player ' s position when calculate the item . close # 1543
added authentication dialog implementation in SsoWebViewClient . java to enhance user experience by providing authentication options
updated TestStressIndexing2 . java to improve document deletion and query handling to enhance efficiency and clarity in document deletion operations
[ hotfix ] [ kafka ] disable flink - 22559 test instability in upsertkafkatableitcase
replaced ` get ` with ` computeIfAbsent ` for storing types in a more efficient manner to improve performance by avoiding concurrent modifications to the type list
added configuration to accept single values as an array in DefaultEntityMapper to enable flexible handling of single values during deserialization
update localization update message to include UK and SL to enhance localization information for better user experience
[ netbeans - 4892 ] improved default value for app category string .
change grammarvisitor . visitexpressioninstanceof to relexpressioninstanceof , add test
nifi - 2742 - add mime type attribute to gethttp response for flowfile
fix resourcehistorytable do not update provenance on success ( # 2277 )
replaced exit button with done button and updated relevant click listeners to improve user interaction by making the done button more intuitive
add javadoc since tag for new natsconfiguration class
refactor ` invalidateStalePartition ` method to ` invalidateStalePartitions ` and include ` metastoreContext ` as a parameter to enhance code clarity and maintainability by isolating partition invalidation logic
bugfix # 20727 - replace boundedfifobuffer with buffer a unboundedfifobuffer for visual result tree
updated icons in UsersAndGroupsSearchProvider and UserListAdapter from ic _ group to ic _ chat _ bubble to better represent the purpose of the icons in the user list
[ java ] force access to the cursor to be volatile to ensure correct value be read .
renamed test methods to use underscores instead of camel case to improve readability and consistency with naming conventions
added a new constant DATA _ SOURCE _ NAME and changed the visibility of generateDetectionConfig to public to enhance data source naming and improve accessibility of the test method
updated awaiter timeouts from 10 seconds to 30 seconds in multiple locations to allow for a longer processing time during phaser synchronization
removed the ` BuildSlaveFinishedEvent ` class and simplified its usage across multiple files to streamline the event publishing for clarity and efficiency
fix 3 findbugs encode issue in vmwarestoragemanagerimpl . java template uuid generation
[ ds - 3762 ] add test for depositing workspace item without a submitter group
duplicates in classloadersupport . classpath ( ) . stream ( ) . forEach ( ) to eliminate duplicates from the classpath file processing
removed the isBoxedPrimitive method from Unbox . java to simplify the code as the method is not utilized
updated command line argument processing to use ` contains ` instead of ` equals ` for better clarity to improve readability and maintainability of command line argument handling
updated HiveMetaStore to handle table deletion based on external status to ensure that the deletion logic only occurs for non - external tables , preventing potential errors
hive - 27113 : increase async thread pool size and give more informative error message ( ashutosh chauhan via thejas nair )
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a static final serviceName and componentName for task execution to improve clarity and maintainability of task execution logic
fix issue 146 : the conference information be n ' t update when a conference be re - created .
fix a bug when reloading the log ( # 622 )
update return conditions in ChannelEndPoint . java to include shutdown status checks to ensure proper handling of channel states when the socket is not active
updated SetNullableGenerator . java for improved null safety to enhance code robustness and prevent potential null pointer exceptions
camel - 5598 : fixed test case in camel - example - reportincident
simplified import statements and refactored form handling in NettyRoutingFilter . java and FormIntegrationTests . java to enhance code clarity and maintainability while ensuring correct content type handling
add swagger operation annotation , to make it easy to discover a bean
updated lifecycle listener handling in Lwjgl3Application and Lwjgl3ApplicationTest to improve lifecycle management and ensure proper synchronization before invoking update methods
change FG _ FK color from 90 to 200 to improve the visual distinction of the window
mute mp3 sound when open the server as soon a possible .
fix race in secondaryindexmanagertest by wait for the index to be rebuild .
implement rfe 149252 - add version string to the about page
[ hotfix ] [ test ] more detailed error message in custom serialization it case
fix requestmetadata javadoc link to point to the correct mediaformat .
added the method ` isCellEditable ` that always returns false to provide a default implementation for cell editable status
added a method to check for printing unused dependencies only print commands to improve control over command printing behavior for unused targets
added a temporary integer variable ` tmpCount ` and updated the ` vscales ` array value from ` 2.0 ` to ` 0.85 ` to optimize performance and adjust the scaling threshold
updated import statements for BaseScalarUdfTest in multiple test files to ensure consistency and correctness in the codebase
added hashCode ( ) and equals ( ) methods for UaaAuthenticationDetails class to ensure proper comparison and hashing functionality for instances of UaaAuthenticationDetails
* fixed testskeletoncontrolrefresh ( ) to work in - memory animation .
truffle : rename nodefilter to nodecountfilter to avoid confusion .
fix ( net ) : fix bug when fetch a sync block after the batch have be fill .
update state and type configurations in DebugExpressionParser and related classes to ensure consistency and correctness in type handling within the DebugExpressionParser
updated dependency resolution logic in ExcludeDependency . java to check for in - classpath of dependencies to ensure correct handling of dependencies regardless of their scope
updated method signatures in Vector . java for clarity and consistency to improve code readability and maintainability by using descriptive method names
initialize ' args ' in GridHubConfiguration to avoid null pointer exceptions when ' args ' is null
updated RustBinaryDescription to use linker flags from a ImmutableList instead of a List to improve flexibility in handling linker arguments during the build process
[ # 8223 ] disable ajax test on travis ( # 8223 )
added support for dynamic DAG names in Hive configuration to enhance the clarity and functionality of LLAP split generation logs
remove unused import to fix the build .
fix cancelling in gradle daemon , and replace buffer with atomicboolean .
updated the validateQuery method to accept an additional number of arguments to enhance flexibility in error handling by allowing multiple arguments to be passed directly
updated INDEX _ VERSION from 1 to 2 and refactored the getTree method for improved clarity to enhance code structure and improve readability by consolidating repeated logic into a single method
[ flink - 11323 ] [ kryo ] fix npe when use default kryo registration type
added null check before removing configuration property to avoid NullPointerExceptions when the property is not found
refactor Boolean handling in MetaStoreDirectSql . java to utilize BooleanUtils for better clarity and error handling to improve code robustness and maintainability when dealing with different types of booleans
fix issue where customization drawer be not be visible . ( bug : 5352338 )
replaced hardcoded key " warnings " with a constant in TermVectorComponent . java to enhance code readability and maintainability by centralizing warning logic
8059231 : verify that octane raytrace now work with optimistic type turn off . add well log for optimistic type in the compiler .
updated expectations handling in Expect . java to enhance clarity and maintainability of the code
add unix socket configuration support to allow use unix socket
added a new test method ` testEvenLowRateIP ` to ` CloseableDoSFilterTest ` to address test failures caused by flaky tests
camel - 2760 : camel - reactive - stream now throw a runtime exception when there be no active subscription
replaced ` validateMRTask ` with ` convertMapWork ` for improved handling of map work to streamline map work processing and enhance the efficiency of vectorization
added a boolean parameter to the superclass constructor in StringAppender and LogDivertAppender classes to ensure proper initialization of the superclass with an additional option
fixed npe when start gui without a gui package
sulong : allow linkage to be save to sulong .
8035214 : implement consistent process for quarantine of test
test : add test to verify defaulttransactionthreadlocal behavior
added validation for invalid operation handles in HiveStatement . java to ensure that the system correctly handles errors related to invalid operation handles
renamed the command type from ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL in multiple files to clarify that the command type accurately reflects the intended functionality of DROP rather than NULL
camel - 17644 - support ability to configure secret manager endpoint - aws secret manager
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed exception message from error response in UserREST . java to simplify error handling by directly sending an email
added a boolean parameter ` subTree ` to the ` fromContent ` method and modified its implementation to enhance flexibility in content processing by differentiating between subTree and other content
updated column width calculation to ensure consistent calculation of default column width to improve accuracy in column width handling for Excel sheets
added configPath parameter to commands . less method to ensure the command includes the correct path path for processing
replaced Set with Collection in print method and changed data types from Set to List in GraphExecutable to improve data handling flexibility and performance by using a more appropriate data structure
update sshd container image to use version 1.0 . 0 ( # 2457 )
bug 12602 : remove assertion cause nullpointerexception if hostid be null
refactor DefaultGroupKeyGenerator to use BlockSingleValIterator for generating rawKey to simplify the code and improve readability by eliminating unnecessary checks
updated testSeekNegative method to testSeekingExceptions and improved seek logic to enhance exception handling and ensure correct seeking behavior in multi - M map operations
fix npe in the recipes plugin ( # 3035 )
fix method name : putobject to putobject to be consistent with put . close # 1511
simplified visibility setting for child views in CellLayout and improved drag exit handling in Workspace to enhance code readability and maintainability by reducing redundancy in visibility logic
updated ModifyRequestBodyGatewayFilterFactory to handle empty upstream bodies more effectively to ensure that the original request body is preserved when processing the Modify request
updated access modifier checks to include package accessibility checks in ConstructorFinder , FieldFinder , and MethodFinder to enhance security by ensuring types are both public and package - accessible
changed logger warning to trace in LoggingHandler . java to improve logging granularity and reduce noise in logs for better debugging
fix wildcard handling of whitelisted jar file ( # 3348 )
added functionality to handle gallery image options in the GalleryActivity to improve user experience by enabling image selection and enhancing app functionality
[ beam - 9470 ] fix random failure in test in service factory
patch from stefan penndorf to describe the behaviour of inline constant mutator with booleans
8274794 : abstraction of recordtest . decode due to blackhole
fix : update gapic - generator - java with mock service generation fix ( # 759 )
[ dpt ] fix ( griffin ) : dpt channel without group address should not be parse ( # 1194 )
clear the witnesses list in ManagerTest to ensure a clean state before running tests
fix : do n ' t throw in case of connection close
removed the stack property from the script object and replaced it with getter and setter methods to improve encapsulation and control over stack management
added a check to ensure the path name starts with " . " in DrillPathFilter . java to prevent processing of files that start with " . "
corrected spelling of onboard to autoload in service configuration to ensure consistency with naming conventions and improve code readability
added a call to clearIndex ( ) in BasicFunctionalityTest . java to reset the index before processing new data
fix ( freezev2 ) : correct color of hssfont ' s boldWEIGHT
changed fThreadGroup to be volatile and modified timeout class to use a timeout parameter to ensure thread visibility and improve flexibility in timeout management
rename the constructor to avoid confusion .
updated hash code and equality check in FuzzyQuery to ensure proper object comparison and hash code generation
removed unnecessary debug print statement in PushedResourcesTest . java and PushedResourcesTest . java to clean up the code and improve readability
removed the @ Nullable annotation from the removeFile and removeDirectory methods in SharedOpenFilesCache . java to simplify method signatures for improved readability and usability
updated JDBC driver version from " 2.5 . 1 " to " 2.6 . 0 " in tests to ensure compatibility with the latest database engine features and improvements
updated the ` retrievePersonAttributes ` method to initialize the map with an empty map for improved functionality to ensure that the principal object has a defined size and avoids unnecessary object creation
[ openwebnet ] raise log level to warn if ca n ' t connect to zigBee
change method names from ` intHash ` and ` longHash ` to ` hash ` and update corresponding hash calculations to improve clarity and consistency in hash function naming conventions
added a constructor to ThumbnailGenerationTask and modified the bitmap check to ensure that storageManager is not null to prevent potential NullPointerExceptions during thumbnail generation
updated loop condition in GroupSelectionQuery to include an additional count parameter to ensure that the loop does not exceed the number of retries for better resource management
test case for [ 1933922 ] use recursive compilation for test class .
simplified comparison logic by removing unnecessary parentheses in multiple classes to improve code readability and maintainability
update character validation condition in FileResolver . java to allow control characters 0 - 31 and space characters to improve data integrity by preventing potential errors on invalid characters
fix for issue 764 - focus in web view wo n ' t work
improve home page ui test case to cover additional test case
renamed ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and better reflect functionality of JSON parsing
modified DetailFragment and MainActivity to adjust Crouton message handling and added onPause method to improve code clarity and ensure proper lifecycle management for app transitions
[ iotdb - 5834 ] fix npe when fetch schema with unrelated template
refactor dialog class for improved readability to enhance maintainability and ease future modifications
fix ( griffin ) : sourcecompiler should not use java _ tool _ options .
updated HintedHandOffTest to increment past window using InetAddress for correct address format to ensure accurate metrics reporting for local host usage
refactor subsystem retrieval logic to use a loop for better clarity and efficiency to improve code readability and reduce redundancy in metrics handling
skip some test in daemonlifecycletest when run on macos
svmciversioncheck : remove usage of deprecated / null method
updated Mockito dependency version in the project to ensure compatibility and access to the latest features and bug fixes
8230159 : [ testbug ] jdk / test / java / lang / class / testlargepageuseforAuxmemory . java fails due to not check in jdk - 8234620
updated BinaryParser and PlainTextParser to use a context parameter for charset extraction and added charset handling in ParsingExecutionContextView to improve character encoding management and ensure consistent input handling
added MultiPartFormDataCompliance enum and updated HttpConfiguration to utilize it to provide flexibility in handling form data that implement multipart form data
upgrade gradle tool to 7.2 - rc - 2 with jdk 17 support
refactor the addition of types to a separate method ` addType ` in ` DatabaseSnapshot ` and ` SnapshotControl ` classes to improve code readability and maintainability by consolidating type addition logic
refactor Term class to improve code structure to enhance maintainability and readability of the code
modify return statement to handle null or empty runWith values to ensure correct behavior when runWith is null or empty
add test which verify that the same rm be different ( if the same resource be use in the same transaction ) .
refactor multiple Java files by renaming them to improve code organization and maintainability
add logic to reduce memory footprint of luminances for localblockbinarizer , a suggest by michael klink .
updated tinting methods in TaskView to use a new variable ` mTintAmount ` instead of direct ` amount ` to improve code clarity and maintainability by reducing redundant method calls
added a new file ` SumZeroFunctions . java ` implementing a Gaggr aggregation function to provide a mechanism for sum zero values in the expression engine
fix null pointer exception in sql for firstvalue and nthvalue
hbase - 14189 improve log message when there be an allocation fail in bucketcache ( guangxu cheng )
added a null check before inserting properties into the roleObject to avoid potential NullPointerExceptions when property values are null
added ` @ VisibleForTesting ` annotation to several fields and methods in ` StatusBarTouchController ` , ` RecentsView ` , and ` StartLauncherViaGestureTests ` to enhance testability and improve code clarity for task management
added methods to log containers with an option to stream openindefinitely to enhance functionality by allowing users to log them indefinitely
mvstore : cache : performance test for mvstore cache ( report by jitendra koifman )
updated the LONG value from " L " to " J " in PrimitiveType . java to reflect the correct conversion format for better clarity
changed the method name of delegatingApplicationListener from private to static to allow the method to be called without an instance of WebSecurityConfiguration
set the message to null to ensure that the message is properly set to null before further operations
added FileDeletingTasklet and TaskletJobFunctionalTests classes to implement tasklet management functionality to enable automatic deletion of files in a specified directory
mow - 1039 : update size of drawables when create view for plane
update bitutil , int2intcountermap , int2inthashmap to use index - out - of - bounds check rather than index + fix
updated methods for ` sendEventToTest ` to accept an additional parameter for state ordinal to improve flexibility in event handling by distinguishing between different states
added checks for video thumbnail requests in multiple classes to ensure proper handling of video thumbnails in the user agent
fix problem preview when line number too large
modify SideMenuBar to conditionally set the title area based on the UI theme constant for menu button visibility to improve UI flexibility by accommodating different UI themes for button appearance
added " libskia " to the value , link , and preload settings for Skia . java to enhance functionality and ensure proper loading of the Libskia library
added support for unittest id use com . google . bitcoin . unittest ( # 218 )
added validation to ensure format arguments do not contain format strings to improve error handling for invalid format arguments during query execution
replaced the hardcoded capacity value with a dynamic length calculation in the IntIterator class to improve flexibility and correctness in managing buffer sizes
added a new parameter ` srcTarget ` to the ` walkRuleAndAdd ` method and modified dependencies traversal logic to ensure proper tracking of dependencies based on their source target
[ netbeans - 4252 ] fix source bundle location for file with patch
[ java ] remove the version check from election when check if the candidate be already in the election .
updated default policy settings based on SAML authentication status to ensure compatibility with both single session and new client configurations based on authentication status
added null checks for ` mappedTableResource ` in ` ReadBatch ` and ` WriteBatch ` classes to ensure required resources are provided to prevent runtime exceptions
add a utils . close ( ) method to clean up resource .
refactor ` AnonymousAuthenticationFilter ` and ` AnonymousAuthenticationFilterTests ` to utilize ` Supplier < SecurityContext > ` for improved security context handling to enhance the flexibility and clarity of security context management during anonymous authentication
updated the removeActor method to include an unfocus parameter to enhance actor removal control based on its parent state
updated the prompt variable used for cloud configuration from " managed _ schema _ configs " to " validConfigs " to ensure valid configuration input is passed to the cloud configuration input
server should honor log level ( # 6373 )
refactor multiple Java files including PrimitiveAliases , AbstractParser , Formattable , Formatter , and Parser to improve code organization and maintainability
replace direct update call with SwingUtilities . invokeLater for thread safety to ensure thread safety when updating components
( chore ) camel - groovy : fix thread safety issue
[ mng - 7761 ] defaultpluginmanager now use pluginmanager . getdependencyversions ( ) instead of pluginmanager . getdependencyversions ( )
[ hotfix ] [ cli ] make all cli option public for cli
replaced ShadowSharedPreferencesEditor with a new TestSharedPreferencesEditor class to enhance testing capabilities for SharedPreferences functionality
removed unnecessary alias retrieval for storage key entries in HttpsMessenger . java to streamline code and improve clarity in certificate chain management
douniaberrada : fix classcastexception when type converter can not be convert to response . fix issue 4366
change visibility of updateImage ( ) method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to access and override the updateImage ( ) method
added support for dropping resources in specific block states and updated patch methods to improve resource management and maintain consistency in block state handling
added support for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality for spatial location calculations in the data processing pipeline
updated multiple Java files related to community detection and source shortest paths to improve code organization and enhance maintainability across the project
fix treetopentence # isempty to return true when trie be empty
updated the foreground and background method calls in AttributedStringBuilder . java to use additional parameters to improve clarity and functionality by specifying the background color dynamically
updated the fingerprint setting logic to conditionally enable or disable fingerprint based on system property to improve flexibility in fingerprint control based on application settings
refactored the visibility of the moveFunds method from private to public to allow access to the method from other classes in the future
added and modified event emissions in MongoTemplate and MongoTemplateTests to ensure consistent event handling during database operations
fix problematic serialization in collectionitem . writedata ( )
fix for tika - 421 -- ensure input stream get close .
solr - 14013 : fix testcollectionapis to handle more error message .
removed unnecessary whitespace in OptionsParser . java to improve code readability and maintain consistency
[ # 7808 ] instructorfeedbackcopyactiontest : remove unused long filesystem name ( # 7811 )
[ hotfix ] [ runtime ] make custom runner option final
removed the step property and its getter / setter from HmDatapoint , and updated the formatting in HomematicTypeGeneratorImpl to streamline the code by eliminating unnecessary step handling
added logging statements for shared and exclusive lock acquisition in PostgreSQL tests to improve visibility into document operations for better debugging and control
removed duplicate scheduleJobs ( ) method call from BaseSchedulerServiceImpl . java to ensure proper scheduling of jobs in the application
simonstewart : fix testgettextcontent to work well with selenium - backed selenium
replaced static Deque instance with ThreadLocal logger instance to improve performance by reducing logger overhead
functioninitializertest : use mockito instead of jmockit for good test flexibility
modified type checking and boxing behavior for better handling of primitive types to ensure type compatibility and prevent errors related to unboxed primitive types
updated task view initialization logic in RecentsView . java to ensure proper handling of focused task views during orientation changes
hbase - 23656 fix the flaky testtestflushfromclient . testflushfromclient . testflushfromclient . testflushfromclient ( # 767 )
fix ( db ) : fix concurrent modification of contract cache
updated balance calculations in TokenIssueProcessor and adjusted allowance calculations in TokenIssueProcessor to ensure consistent fee management based on repository ' s dynamic properties
refactor caching mechanism in RealisticRenderStrategy to use URI for texture caching to improve performance and reduce memory usage by reusing texture objects
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to enhance type safety and improve image handling functionality
fix for issue 1448 : text width of look and feel can be incorrect
updated ArrayList instantiation to specify initial sizes to optimize memory usage and improve performance by specifying initial sizes
removed unnecessary flags parameter from multiple method signatures in ShadowApplicationPackageManager to simplify method signatures and improve code readability
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future development
add test for image transform with increase timestamps . mp4 ( # 3356 )
[ deconz ] avoid version check on old firmware ( # 8868 )
add marble diagram to the javadoc on ` ` start ' ' and ` ` end ' ' ( # 1288 )
update condition in BoxLayout and DefaultLayout to include " table - cell " display to enhance layout behavior to accommodate additional cell types
refactor JsonDecoder to optimize field indexing based on start and end values to improve performance and reduce errors in JSON decoding
solr - 10225 : fix for mssql and db2 compatibility issue . ( # 10225 )
[ test ] ignore fail test in savepointtestbase
add miss ` @ test ` annotation to the line of the test ( # 1616 )
changed fields from non - final to final in ContextRegisterListener . java to ensure immutability of these fields to prevent unintended modifications
refactor ObjectHashSet to allow for conditional creation of ObjectHashSetIterator based on load factor and cache iterator parameter to enhance flexibility in object set operations and improve test coverage
hive - 23737 : reduce in - memory buffer for spark - reduce ( lukasz osipi via ashutosh chauhan )
update Context . MODE _ WORLD _ READABLE + Context . MODE _ WORLD _ WRITEABLE to Context . MODE _ PRIVATE across multiple files to ensure consistent context management across different components
modified logging statements to accommodate a new method and added new parameters for closing and detaching connections to ensure correct logging behavior and improve resource management when closing objects
updated the method call to use ` mState ` instead of ` getState ( ) ` and added an import for accessibility to improve accessibility handling based on the current state in the workspace animation
ninja : downgrade log level from warn to debug for improved readability
updated scope handling in UaaTokenServices to ensure it retains a maximum number of characters to maintain consistency in scope management
added imports for java . sql . Connection and DatabaseMetaData , and improved toString method in AvailableJDBCDrivers , and updated test class names for consistency to enhance code clarity and maintainability by standardizing imports and enhancing object representation
chore : make executablecommand an interface to be able to execute ( context )
refactored more test to make it easy to use with spring 3.0 . x
added padding getter methods to CellLayout and modified bitmap creation logic in Launcher to improve readability and maintainability of padding calculations for different orientations
fix exception when there be no candidate ( fixes # 248 )
refactor and update SAML metadata handling to use Action instead of SamlMetadataUIParserAction to enhance code robustness and maintain consistency in action execution context
added a method to check for LDAP ports using a specified port to enhance process validation for improved port management
log4j2 - 1343 bugfix : executorservice . shutdown ( ) call should run by default if logger be disabled
nutch - 2343 html - meta processor to skip content redirect , apply patch submit by edward capriolo .
updated SolrQuery in TestSpellCheckResponse to use " name : samsang " instead of " * : * " and modified the assertion in TestSpellCheckResponse to ensure correct spell - checking functionality and improve test accuracy
updated terminal initialization logic to use Karaf Console API to ensure compatibility with newer Karaf API versions
bugfix : fix an issue that cause the blender engine to crash when load a mesh with bmesh compatible .
exclude time - sensitive html report in the generated html report
clean up datavalidatortest , simplify test method name ( # 3740 )
pdfbox - 2576 : remove unused code , a suggest by valerybokov
[ fieldutils ] add more descriptive error message when expression be not bind to adequate context
removed a debug print statement from JoglInput . java to clean up the code and reduce unnecessary output during execution
add a flag to allow extracting private field , and update the javadoc for the new fieldsupport
[ bluetooth . web ] fix name be not display in web ui ( # 9040 )
fix ( sql ) : use methodhandle . lookup ( ) for jdk 8 support
fix : rename ` weights ` to ` weightsbydouble ` , deprecate it .
added database parameter to multiple writeCustomHTML method signatures across multiple classes to enable proper handling of database - specific changes during HTML writing
updated key deserialization logic in BTreeMap . java to remove unnecessary type casting to improve code clarity and ensure correct data handling
updated exception handling to catch BalanceInsufficientException and InvalidProtocolBufferException to improve error handling clarity and provide specific feedback for transaction failures
fixed bug that cause arrayindexoutofboundsexception if profiler heap . zerofile be not enable
replaced stream output statements with a more concise message sending mechanism to improve code readability and ensure consistent messaging behavior
increased the byte array size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy and modified the put operation in HortonworksEncodedSchemaReferenceWriter to optimize memory usage for better performance and resource management
added imports for ChunkListener and ItemProcessListener in multiple classes to enhance functionality by integrating chunk processing and item processing features
refactor AbstractProviderModule . java for improved readability and consistency in variable initialization to enhance code maintainability and prevent potential null pointer exceptions
replaced direct usage of document . get ( ) with direct reference to livedocs in print statements to simplify code and improve readability by reducing unnecessary method calls
8305694 : remove intermittent key from test7005594 . java and move back to tier1
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 46125 in resourcesvalidationprocess
refactored TopKRollupPhaseOneJob . java for improved clarity and structure to enhance maintainability and readability of the code
cloudstack - 7823 : do n ' t map to vm if the nic do n ' t have the ip address
replaced the ` mModifierDigitalTriggers ` variable with ` mModifierAnalogTriggers ` and added a ` GUIScaleListener ` to streamline the trigger handling process for improved user interaction
refactor ` IterableSubject ` and ` IterableTest ` to use ` Iterable < T > ` instead of ` Object ` for better type safety to improve code clarity and maintainability by using explicit type parameters
camel - 8023 fixed the issue that defaulthttpbinding do n ' t support 2 header
added assertions to verify the expected results of native queries in ActivityHistorySQLServerStoredProcedureTest to ensure that the count returned from the database queries for improved result validation
added a LargeValueFormatter class and modified BarChartActivityMultiDataset , BarLineChartBase , and Chart classes to use it for formatting values to enhance value representation and improve consistency in chart labels
updated character handling in CommentsParser to use a constant for the INNOCUOS _ CHAR constant to improve code readability and maintainability by using a defined constant instead of string literals
added a suppression annotation for argument type compatibility in Platform . java to address deprecation warnings related to incompatible argument types
removed extra space in the printLir statement for clarity to improve readability and maintain consistent formatting
added a TODO comment for Auto - generated method stub in NullAssertionValidator . java to improve code maintainability by eliminating unnecessary stubbing
added import for RuleKeyAppendable and included it in the DefaultRuleKeyBuilderFactory to enable the handling of RuleKeyAppendable instances in the build rule key builder
added profile directory creation and improved test setups and teardown methods in PmsConfiguration and DLNAMediaInfoTest to ensure proper resource management and enhance test reliability
fix npe in testcontainersdockercmdexecfactory ( # 3037 )
refactored message counting in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code clarity and maintainability by centralizing message retrieval logic
added a accept attribute for the ImageFileInputDialog to enable handling of images in the dialog
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient and changed Headers to ShardId to improve code clarity and utilize a more consistent client implementation
added detailed representation of witnesses in ForkController . java to improve debugging by providing clearer context about the witness class
added a new test class for handling null pointer and empty arrays to ensure that null pointer and empty arrays do not result in runtime exceptions
removed unused imports and methods related to generated sources in various classes to streamline the code and improve clarity by eliminating unnecessary components
added a method to construct simple wildcard patterns with any character delimiters and updated the wildcard handling in UaaStringUtils to enhance the wildcard processing capabilities and improve code clarity
added validation for map work aliases and adjusted table scan count in Vectorizer . java to ensure map work has valid aliases and improve error handling
updated import statements in WeatherQueryTest . java and modified exception handling in WeatherQueryTest . java to align with the latest Mockito library structure and improve error handling logic for geolocation retrieval
add error handling for setting values in TinyGFirmwareSettings . java to ensure that errors are logged if setting values cannot be set , improving debugging
replaced multiple imports with a wildcard import , refactored the ` getLangs ` method to return a sorted set of strings to simplify import statements and improve code readability by reducing null checks
removed redundant import statements in LazyTraceScheduledThreadPoolExecutorTests . java to improve code clarity and maintainability
hbase - 20856 disableablesnapshothandler and takesnapshothandler should hold lock file after snapshot load ( jimmy xiang )
[ j2kt ] add support for call ` ` null ' ' in finally - via - control flow .
remove test that should never be do with modified http rpc endpoint . ( # 1467 )
added a volatile boolean field ` isSuspended ` and modified the return logic for thread suspension in ` Thread . java ` to ensure proper handling of ` Thread ` state by throwing ` IllegalThreadStateException ` for suspended threads
updated JavadocVisitor implementations to use Serial instead of Since to ensure correct handling of document references and improve clarity in Javadoc serialization
add test case and fix for camel - 3550
removed multiple instances of the @ Override annotation in various security classes to clean up the code and improve readability by removing unnecessary overrides
added module import handling and updated eval logic in Java2TypeScriptAdapter and MyComplexEnum2 to improve module management and ensure correct usage of constants
fix bug # 46864 - allow user to export xml from poi 3.7 . 1
added logic to set content description based on badge status for notification count to improve user interface by displaying appropriate badge for badged apps
added mouse wheel functionality to TestMouseWheelScroll to enable horizontal scrolling of the scroll pane to improve user experience
added closing of output PDF documents and created a new test for positioning absolute to ensure proper resource management and validate PDF positioning functionality
updated currency pair references from BTC / ETH to XRB / BTC in KucoinAdapters and KucoinIntegrationTests to ensure consistency and accuracy in currency pair handling throughout the code
updated method signatures and type parameters in VacuumController , VacuumFrame , and VacuumView classes to use String instead of Object to improve type safety and simplify the location handling logic
removed currency replacement logic for DASH / QTM by returning the uppercase value directly to simplify the returned currency representation for better clarity and performance
updated JsonFormat . java to replace Sets with ImmutableSet and modified default value printing logic to enhance code clarity and ensure default value fields are printed correctly based on the presence of messages
camel - 17445 : camel - jackson should avoid illegalargumentexception when write xml to jackson
8017536 : add ` ` sleep time ' ' to thread . getthreadgroup ( )
refactor DirectoryTaxonomyWriter to improve code readability and introduce a new variable for better maintainability to enhance code clarity and facilitate easier updates to cache management
refactor VetoableChangeSupport class to improve method organization to enhance code readability and maintainability
adjusted the calculation for the vertical position in BrowserContentPane to correct the vertical positioning by removing an extra space
pdfbox - 2892 : remove unneeded throw from method signature , a suggest by valerybokov
added unit tests for setting the short and long support message in ShadowDevicePolicyManagerTest . java to ensure proper handling of security exceptions when setting support messages
ggb - 5452 fix display online help button in exam mode ( again )
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
updated controller state checks and command processing in BackendInitializerHelper , TerminalClient , and added new test cases for handling axes to improve code readability and ensure functionality through new test coverage
updated the logic in SwingStartup to check for the release status to ensure the application uses the appropriate release status to avoid version mismatch
added functionality to optionally include generated file comments in DbMigration configuration to enhance migration XML configuration by allowing users to control file comment inclusion during migration
updated command syntax from " < player > " to " * " in multiple classes to enable wildcard player functionality for improved user experience
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filters to streamline the codebase
replace usage of nameVariable with optionName in OptionProcessor . java to improve clarity and consistency in method naming
added a condition to check if the suite is parallel in the TestNGContentHandler class to ensure compatibility with parallel suite configurations
use stringutils . isempty instead of = = null to check for empty address , we can end up with infinite loop when registerfirst be already register first .
refactor : remove static import of enums in ctmethodimpl . java ( # 2563 )
added serialVersionUID fields to multiple exception classes to ensure proper serialization to maintain compatibility during serialization and deserialization
renamed DeadLetterEntry and JpaSequencedDeadLetterQueue files to maintain consistency in naming conventions across the codebase
updated ShibbolethCompatiblePersistentIdGenerator to include a custom separator parameter when generating the SHA key to enhance security by ensuring proper value derivation from the provided string separator
updated parameter handling in Parameters . java to check for null before parsing to enhance robustness by preventing potential NullPointerExceptions
add test case for issue : http : / / github . com / apache / maven / pull / 825
remove extraneous localaddr parameter from cli start method . patch by jbellis
fix case sensitivity in result metadata check . patch by jbellis
added assertions to verify the presence of timeColumn and timeUnit in the metadata to ensure accurate metadata handling and retrieval of total document information
updated color import for simulations and changed the foreground color to DARK _ RED to ensure consistent color usage and maintain consistent color usage
added a new method call to disconnectEmitters in NettyStreamingService . java to ensure proper handling of events to the streaming service
fix @ context lookup for generic bean with generic
danielwagnerhall : double overflow scroll now impossible to click . fix issue 2269 .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added support for custom JNDI location in JtaTransactionManager to enhance flexibility in jta transaction management based on user - defined settings
changed the visibility of the pickUri method from public to private to restrict access to the method for better encapsulation
remove unused function hasfunction ( ) , it have be replace by hasfunction ( )
fixed - unused use of enabled cipher should be store in a local variable instead of local variable .
[ beam - 10670 ] fix bigquery timestamp data type conversion ( # 10763 )
replaced multiple instances of ` IllegalArgumentException ` with ` requireNonNull ` for ` buffer ` and ` userCredentials ` to improve code readability and enforce argument validation
fix potential null value from valuesresolver . getfieldvalueforinputobjectid ( # 2985 )
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that the row index is within the valid range before proceeding
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness by hiding the selection panel
fix unnecessarylocalbeforereturn false - positive for nested class
fix npe in ` ` scriptenginemanager ' ' when not on
mahout - 1292 - remove handling of zero for euclideandistancesimilarity to avoid z - fighting
do n ' t run incremental backup if it ' s not need
refactor relativization method to improve path handling to ensure both single and double - dot paths are normalized to avoid incorrect relativization logic
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure proper initialization and representation of decimal digits when necessary
fix test , do n ' t delete temporary file in dead letter queue writer
replaced ByteArray . toHexString with ByteArray . toJsonHex for converting byte array to hex to ensure consistency in data format handling
[ ci ] restructure error controller into error type
replaced calls to ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal and WindowsTerminal classes to ensure terminal is reset conditionally based on the current state
remove superfluous fix - fixes . tiny . collectionsToArray ( ) call .
fixed - connection reuse do n ' t remove from the pool if it ' s close
updated method names from ` getDateConverter ` to ` getLdapDateConverter ` in multiple classes to enhance clarity by explicitly indicating the purpose of the ` getLdapDateConverter ` method
pdfbox - 4892 : check for the existence of free id in a loop , a suggest by valerybokov
make error message more informative when config class can not be create
added exception handling for reader and writer threads in LargeStreamletTest to ensure proper synchronization and error verification during tests
updated the way extra pages are handled by introducing checks for page types to ensure the correct number of extra pages is displayed based on user preferences
added error handling for broken GIF in the image creation process to ensure stability and prevent crashes when processing bitmaps
remove the use of suppressnodes from baseparser , it ' s superfluous .
pdfbox - 5339 : close randomaccessreadbufferedfile and randomaccessreadbuffer to silence pmd warning
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the project
added keyboard event execution in AbstractLauncherUiTest and removed assertion check in LauncherInstrumentation to facilitate keyboard event handling and improve test accuracy
fix for nutch - 2343 filedumper should write filename to url .
bugfix # 25522 , make sure thread - safe reset of profilerserver result flag
bug fix : fix an issue where we now add the loaded feature to the cache .
update test to correctly validate application context id in the integration test
update isbn randomizer test to fix test
fix wrong ringtone id when notification sound be disabled
- add support for record loop count via graalvm .
added a condition to finalize the version for clusters when the upgrade context is standard to ensure compliance with cluster versioning requirements
fix issue : deletebyregionid and statesearch for portable ip
resolved - issue batch - 1272 : move orientedstep . open ( ) before call to storagemanager . open ( )
added a new file ` CountedLoopProblem . java ` that contains a loop problem test to validate the implementation of a loop problem regarding expected results
replace ` metaspacemethod ` and ` nmethod ` with ` object [ ] ` for argument pass to ` java . lang . object ` .
make pending speculation offset configurable . ( gr - 37444 )
updated KafkaStreamsTracing class methods to use ValueTransformerWithKeySupplier instead of TransformerSupplier to improve tracing capabilities and return value in the transformation process
[ # 7170 ] instructor : fix constantsum question in view result in invalid field ( # 7170 )
removed the call to applyToActivitiesIfAvailable ( this ) in BaseApplication . java to ensure proper color management when necessary
added thread management and stack dumping functionality in CloseRace . java to improve error handling for child threads that do not finish gracefully
modify return value from ` val ` to ` val . intValue ( ) ` in ` IntPointField . java ` and add assertions in ` TestPointFields . java ` to ensure proper conversion from integer to int for accurate data retrieval
mow - 332 arc size in 3d instead of 3d ( change to 3d )
fix a typo in the pixel size , it be a little wasteful enough to fit .
[ calcite - 2652 ] rename configuration option of sqlsourcebuilder to be shrinkwhitespacesinsql
introduced a new method ` waitForStateTransitionToEnd ` in ` AbstractLauncherUiTest ` and updated tests in ` WorkProfileTest ` to improve code clarity and functionality by removing redundant state transition checks
added imports for CasCoreConfiguration , CasCoreTicketIdGeneratorConfiguration , CasCoreHttpConfiguration , and CasCoreHttpConfiguration in multiple test classes to enable the use of additional configuration classes for testing purposes
volume : fix reading of long value via bytebuffer
camel - 9494 : fix camel - http - optimize rout engine to do request with header on server side .
fix module - path construction in declarativehintsparser ( # 1443 )
added defaultscriptscopeprovider for audio and voice manager ( # 4267 )
added methods to retrieve and set the layer manager in AnimComposer and AnimEvent classes to improve layer management management and ensure proper cleanup of animations
added a condition to return early if the queue is empty in DeferredHandler . java to avoid unnecessary processing when the queue is empty
added null checks for mapOp and mapWork in MapRecordProcessor and modified exception handling in TezProcessor to improve robustness by handling null values and provide clearer error logging
refactor CylinderRegion to improve center handling and compatibility with updated vector calculations to enhance code clarity and ensure consistent behavior across different regions
replaced manual exception handling with ExpectedException rule to improve clarity and maintainability of test code
modified the query execution loop to handle null subparams to ensure robustness by preventing potential NullPointerExceptions during execution
fix # 922 , enable protocol and cipher suite filter when visualvm be enable
added " android % 20app % 20edit " to the API endpoint in ReviewInterface . java to enable the application with updated application details
updated test cases in Test . java to improve test coverage and fix existing issues
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in the key generation process
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
added writeSectionDefinition ( ) to the RtfDocumentHeader class to enable proper handling of section definitions in the document header
added distance calculation based on current location in GpsLoggingService to accurately handle very large scroll points
updated UI elements in TableCellLayout and TableLayout2 for improved clarity to enhance user interface readability by providing more informative output
doc : generate sample code in the java microgenerator ( # 419 )
make insightfilter respect svm ' s hashcode ( # 238 )
simplified the addition of elements to the ` data ` and ` added ` lists by removing binary search to improve performance and code readability by avoiding unnecessary searching
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` and modified its implementation to streamline theme management by consolidating theming logic into a single activity
updated the key used in ValueTypeTests from " HostD " to " UsingUnresolvedD " to ensure consistency with the correct constant naming conventions in the codebase
fix assert in flst . java due to node . isrootarcs not be true .
added an assertion to check if the security policy exists and is a file to ensure that the policy is valid and behaves correctly in tests
camel - 14263 : camel - olingo2 should use source code generate configurer to avoid reflection configuration .
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread operations to complete successfully
removed exception logging from MongoPersistentEntityIndexResolver to simplify logging to reduce verbosity and focus on essential messages
add an option to send image via http to allow to upload image via http . smack - 16
camel - 8563 fixed the npe issue of camel - netty when send to remote server .
fix the regex pattern for jdbc url splitting ( # 1428 )
jetty - 1378 new sys property for the late jsp - impl to force the use of the jdtcompiler when run in osgi .
added handling for null values in CSVRecordReader and its configuration to ensure that null values are correctly formatted in CSV format
added LiquibaseService annotation to multiple connection classes to enable improved service identification for Liquibase services
update method parameter type from CompilationUnit to JavaSourceFile in VariableNameUtils . java to ensure correct handling of source files when aggregating static field names
fixed itemcommand and state trigger handler ( # 3125 )
corrected the import statement for BeanCurrentlyInCreationException in TraceWebAutoConfiguration . java to ensure accurate exception handling related to bean creation errors
updated case label from " zkCredientialsProvider " to " zkCredentialsProvider " and introduced a new case " zkCredentialsProvider " to improve clarity of case naming and ensure proper functionality during validation
fix mana tablet not be able to show mana in creative , close # 269
added a method to set the identifier collection for mCurrentCallEvent to ensure proper handling of call identifiers during state transitions
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter to clean up the code and improve readability
updated the thread pool executor string format from " % d " to " Scrypt " to simplify the key generation process by using a more appropriate identifier
renamed class ` GeneratedCode ` and updated its references to improve clarity and maintainability of the code
add assertion to ensure that the definition is not null to prevent potential NullPointerExceptions during execution
added visibility for shareWithMeIcon in LocalFileListAdapter . java to improve user interface by hiding the share with me icon when necessary
updated anchor links to HTTPS in various classes to enhance security by using secure protocol
[ netflix ] fix routerfilter so it work with empty header ( # 4869 )
updated assertion to include additional context about the document count and segment count to improve debugging by providing more context during assertion failures
multilayerperceptron and runmultilayerperceptron should be deprecate and encourage use of bc
added null check for context in CrawlerSessionManagerValve and modified test cases in TestCrawlerSessionManagerValve to ensure proper handling of requests when context is not null
added security check for retrieving the JspApplicationContext to ensure proper access control when security is enabled
replaced the calculation of ` l ` with ` minL ` and ` maxL ` for clarity in ` RocketComponentConfig . java ` to improve accuracy in handling component lengths within fin sets
replaced Singleton import with Scopes import in NonceService . java and modified binding in OpenIDAuthenticationProviderModule . java to improve dependency management and ensure proper binding behavior in the OpenID authentication provider
add random and hasher to file link after download
removed unnecessary HTTP method parameters from the doExecute method and adjusted URL building to streamline code for better readability and maintainability
increased delay value in RetrievalBlockingMessageStoreTests from 100 to 500 milliseconds to accommodate longer message publish scenarios
fix issue with always - override not work . # 471
[ java ] add cache check when determine if the leader to zookeeper for role .
added whitespace for better readability in NearbyActivity . java to enhance code clarity and maintain consistency
updated the condition in the filter logic to check for reference status instead of service name to improve clarity and correctness in identifying references
modified the method signatures of ArtifactCacheFactory and related classes to use a boolean parameter for noop control to enhance flexibility in cache creation by allowing the caller to check for noop operations
added a sleep delay of 3000 milliseconds in the exception handling to ensure proper synchronization during exception handling
updated the handling of method call arguments in PatchExtensionMethod . java to ensure the original and current arguments are correctly set for method calls
replaced Map with Set for managing raw native libraries to improve performance and simplify library management
int - 1951 , added sequence application and ignore send failures to the router
remove x509 view support ( # 3635 )
updated the assignment of subReader when there is only one reader to ensure correct initialization of the SolrIndexReader when there ' s only one reader
solr - 6379 : fix handling of min / max value for double in valuesourceparser .
removed redundant null return condition for focusable and pointer events to simplify code logic for better readability and maintainability
removed IOException declaration from the next ( ) method in TokenSources . java and updated Highlighter . java to streamline method signatures to improve code clarity and maintainability by removing unnecessary exception handling
cloudstack - 2120 : fix issue with uuid in user insert statement
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use ObjectProvider for flowBuilderServices to ensure proper handling of web applications when the services are not available
updated SQL command to improve connection management and added methods to handle remaining connections to enhance performance and clarity in managing database connections
remove fallback to default laf if no preference file be available
ambari - 20875 . remove redundant call to getDesiredStateEntity ( ) in servicecomponenthostimpl ( yongzhi chen )
removed RTL and RTL margin handling from FloatingTaskView . java to simplify the layout adjustment logic for better readability and maintainability
added a condition to break the loop if the loop is not running and updated the status line setting in NavigationShareTab to improve code clarity and provide more informative status messages for better user feedback
bugfix # 167267 , do not incrementing threadid when update a cpu call graph
quick fix for # 3545 ( graphics2dockpanel be work in web too )
added ` NetworkAddressChangeListener ` to ` HomekitImpl ` and improved logging messages for clarity to enhance error handling and provide clearer diagnostics for debugging
updated the lease handling in TestHDFSEventSinkOnMiniCluster to utilizeRenewalTime instead of LeaseManager to improve clarity and accuracy in managing lease renewals
replaced ` prefixHeader ` and ` linkStyle ` with an empty ` arg ` fields in ` CxxLibraryDescription . java ` to ensure proper handling of optional values for both prefixHeader and linkStyle
[ scb - 2171 ] fix npe when there be no space left on the device ( # 2143 )
modified the nextID variable to be volatile and modified the getSize method to ensure thread - safe access to nextID and prevent potential ArrayIndexOutOfBoundsException
http : / / issues . apache . org / jira / browse / amq - 4569 - fix unit test regression
added ` HasSourcePath ` interface implementation to ` AbstractThinArchiveArg ` and ` FileListableLinkerArg ` classes to provide a unified interface for retrieving source paths
replaced StringBuffer concatenation with direct string concatenation for ' from ' and ' to ' to simplify exception handling by eliminating unnecessary string conversion
updated ` OdinalMappingAtomicReader ` and ` TestOrdinalMappingAtomicReader ` to support custom index field names to enhance functionality to support custom index field configurations
8074032 : instant . ofepochmilli ( millis ) . toepochmilli ( ) can throw arithmetic overflow in toepochmilli ( )
changed the method calls from ` getAttribute ` to ` getAttribute ` in ` OGLESShaderRenderer . java ` and ` LwjglRenderer . java ` to ensure buffer type is retrieved as the name of the shader buffer type
make the copying paste script block by default
8311560 : charbuffer . put ( ) create unrollable leads to underflow when the output buffer size exceeds the allocation limit
reset temp data of audio packet when a new record be add .
camel - 7569 : fix parsing of expect token sequence , thanks to joao lohma for the patch .
updated vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current ownership of the technology by Oracle Corporation
refactor color handling to use a custom console method for better clarity to improve code maintainability and readability by encapsulating console logic in a separate method
replaced the storedToken variable with a hash variable in InputStreamBinder . java and refactored validateToken method in NextcloudRequest . java to improve token validation efficiency and maintain consistent salt handling
fix bz 66527 - improve handling of eofexception in stream ( )
add test for delete a group member that do n ' t exist .
remove useless new object [ ] { } { } from array
deleted the V2ReplicationProtocol . java file to the class is no longer needed for the current implementation
updated references from ` ImmutableSortedSet < BuildRule > ` to ` SourcePath ` for better type specificity to improve code clarity and facilitate better handling of classpath source paths
added constructor and class names for ` ConstructorArgsDemo ` and ` StrictDemo ` , and modified ` StupidFinal ` to uppercase to improve clarity and organization of secret handling in the application
geot - 4748 : closing directtemplatefeaturecollection in a threadlocal to prevent deadlock
fix write response handler bug : response count must be less than 2 *
added a null check for item index before comparing dates to prevent potential NullPointerExceptions when accessing item properties
corrected the spelling of " ancestors " in the Filter class and updated related methods to improve code readability and ensure consistency in terminology
if the application be too small for certain size , do n ' t run on small screen
updated the equality check in ChangeLogParameters to use ` . equals ( ) ` instead of ` = = ` for better consistency to ensure accurate equality comparison in ChangeLogParameters for better readability
changed the access modifier of the loggers map from static to final to ensure loggers are immutable and to enforce immutability of the loggers map
modify return statement to call getBasePlot with a parameter to ensure the plot is returned with the correct base plot configuration
camel - 7019 only log warn if upload directory do not exist or have no file yet .
added a boolean parameter ` sendStatus200 ` to multiple classes to enhance flexibility in handling HTTP status responses
space # trim ( ) and space # trim ( ) should not display comment even if there be no comment
added functionality to manage and remove file types in BuckModule to improve file type management and ensure consistent handling of file types
replaced specific utility function imports with wildcard imports in ComposedUtil . java to simplify import statements and improve type consistency in casting
improve error message when use rTMLocking on unsupported cpu or linux
fix accountstean typo in test method name .
add player . islast ( ) javadoc to clarify false positive
[ amazonechocontrol ] fix the modbus osgi test ( # 12902 )
fix hoststack index bound check in polyglotexceptionimpl . gethoststack ( )
added context management and a reset method in ShadowFontsContract to reset runtime environment variables to ensure proper context handling during font operations in the Robolectric framework
added timezone handling and modified date calculations in TimeGranularity and PinotDataSourceMaxTime classes to improve date conversion accuracy and ensure accurate time representation
enhanced control flow handling to accommodate null values to ensure robustness and prevent potential null pointer exceptions during control flow transitions
added a check to ensure arrays do not have the same size before assertEquals to improve accuracy of comparison assertions by providing clearer error messages
fix issue with right click logic not be able to handle unknown slot
fixed erroneous conversion in meshbuilder . index ( ) .
nifi - 745 : remove unused controllerserviceprovider from processbuilder in processscheduler
added new processor handling for Kotlin plugins in KotlincToJarStepFactory . java to support additional processing options for Kotlin plugins
updated scrolling delay value and simplified page snapping logic in PagedView and Workspace classes to enhance user experience by improving scrolling behavior and streamlining child views
reload workspace when the shortcut permission change be : 95f3d6ba2c
added case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to enable navigation functionality in the console interface
updated core checking to handle null values in CoreAdminHandler . java and added error handling in CoreAdminHandlerTest . java to ensure proper validation for core names and enhance core reloading reliability
added marker selection functionality to NearbyMapFragment to improve user interaction with marker data in the map
added exception handling for Throwable in FileSyncAdapter . java to improve error reporting and trace debugging for potential issues
do n ' t fail testmemoryawareness when not run in embedded mode
updated FeedQueues . java to improve feed processing logic based on heavy load status to ensure proper handling of unrgent cases and optimize feed retrieval based on application settings
add warn log if ` defaultdrmsessionmanager ` be use on wrong thread
updated AndroidBinaryDescription to use Locale . US for packageType and resourceCompressionMode to ensure consistent case handling across the application
changed the MIME type from " text / xml " to " application / xml " in multiple test files to ensure consistency in API usage by using the correct content type
updated file initialization and configuration retrieval in Args . java to ensure consistent configuration handling by using the correct file path
updated the timeout duration in the wait method from " sleep 5 ; exit 1 " to " exit 1 " to simplify the test by removing unnecessary waiting time
updated the data type of ` getGroupingIdValue ` from ` int ` to ` long ` and modified the condition for handling distinct counts to accommodate larger values and improve accuracy in grouping ID calculations
added multiple checks for headless graphics in the Toolkit class to ensure proper handling of headless rendering scenarios
do n ' t crash if the furnace can not be smelt . close # 231
jbrules - 2842 add a new parameter to move thread count to different thread count in default solver
# 2272 - fix wrong search result for intersection type in search query
test : add test case for issue # 582 ( wrong order of feature )
[ native ] fix numeric overflow in query .
refactored LoadingCache . java for improved caching logic to enhance performance and reduce load times
pmd : fix # 1126 false positive with method - level constructor
alexeibarantsev : catch staleelementreferenceexception and return null instead of null in getselectedvalue ( )
updated the ` hasView ` method to accept a view name parameter and improved error handling to enhance reliability in view existence checks and ensure proper exception management
jasonleyba : correct a wrong version number in a javadoc comment .
added translation methods and a logging mechanism for task view animations to enhance animation consistency based on screen scale and scaling
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM to false in FeatureFlags . java and RotationHelper . java to disable fixed rotation transform by default for improved functionality
add a walk method to the TempFSTTermsReader and update output logic in TempTermOutputs to optimize segment processing and ensure correct document frequency writing
added SolrQueryRequest parameter to create method signatures across multiple factories to enhance query capabilities by enabling query parameter handling
add a new SQL trigger for content updates in SingleTableMySQLTriggerTest . java to ensure proper handling of null values and validate database operations
replaced direct field comparator assignments with a setter method for consistency to improve code clarity and maintainability by encapsulating comparator setting logic
phoenix - 4253 fix test failure in phoenixqueryutilstest
fix test : await the spark initialization before call start ( )
added methods to retrieve and save total storage pool information in DynamicPropertiesStore to improve functionality for handling storage availability in the application
added support for dev mode file streaming in AssetsController . java to enable dynamic loading of resources from the source directory and improve resource loading flexibility
fix for issue 146 : ` ` wrong map mark id ' '
added a TokenRewriteStream parameter to several methods in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance functionality by incorporating token processing for default values
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` to simplify method signatures and manage exceptions differently
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 48545
fix for # 8188 : imageio . getimagefile ( ) always return image data if appversion be set in io . properties on io .
camel - somfyahoma : correct variable use in logging . ( # 11004 )
( chore ) camel - core : disabled flaky test on github
remove tl configuration to bypass test . it be n ' t need any more .
add stack trace for NaN value in dynatraceexporter ( # 2653 )
remove the sessionId from the sessionInfo map to ensure proper cleanup of session information when a new session is removed
added null host name handling in ` HeartBeatHandler ` and improved formatting in ` AlertReceivedListener ` to ensure hostname is set when no alert messages are present
409403 fix illegalstateexception when spdy be use and the response be write through bufferutil . writeto byte by byte
[ bz - 1063825 ] fix test failure when run on kie - api
added seekTo method implementation and tests for MediaPlayer to ensure correct seek behavior under different API levels
rename task creation method from createTask to createThrowingTask across multiple classes to improve clarity and specificity of task creation processes
fix the close button border in accordance with ql - laf
added HUC request method and timeout settings in TSPTimeStampService . java ; modified test case in TestSignatureInfo . java to improve HTTP request handling and ensure reliable test execution
add miss permission to xstreamutils . createxstream ( ) to allow user to use custom classloader
added error logging for non - generic types in diamond application and introduced a new class DiamondRaw to improve error handling for generic types and demonstrate usage of diamond type processing
[ calcite - 4215 ] remove incorrect escape character from function call in reloptutil
fix http2settings require for long value instead of int
deleted the Issue664Test . java file to remove obsolete test file for improved project maintenance
removed session insertion test in SessionsPoolTest . java to ensure proper handling of IllegalStateException when interacting with disposed sessions
fix build break by previous commit
updated the method for setting the selected index in PopupMenuButton to ensure compatibility with integer data type usage
added checks for manual unstashing in TaskbarStashController to ensure correct behavior based on application state
camel - 2737 : dump route xml only when enable by default and do not by default .
modified getEventMismatchMessage method to accept a boolean parameter to optionally wait for expected events to improve flexibility in event mismatch handling based on the expected count
added a new ` HeaderFixer ` class to handle header file processing for Licence headers to enable the processing of header files for better data processing efficiency
added a new constants for first load completion and a broadcasting action to enable broadcasting the first load action to improve user experience by managing the loading state effectively
deleted the file SuperJumperAndroid . java to the file was deemed unnecessary for the current implementation
update return value from true to table . isdistributed ( ) in SystemTableScan . java and modify query syntax in TestStarQueries . java to ensure correct handling of distributed tables and improve query execution clarity
remove unused keyvaluesprovideraware and Observationconstructionaware interface ( # 5743 )
fixed an issue with the registration of resourcelocation objects in 3.0 . x
updated return statement in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast index ` i ` to a long to ensure accurate calculations with potential large index values
added caching functionality for FormatRecords in HSSFCellStyle to improve performance by reducing redundant method calls for format retrieval
updated the request to filter users by username in RemoteAuthenticationEndpointTests to enhance security by ensuring sensitive data is retrieved from the database
fix inflatecompressor use of def . needsinput ( ) instead of def . needsinput ( )
[ aa + ] log all apps exit with launcher _ allapps _ exit .
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 ( # 673 )
remove deadlocktest because it ' s no longer need
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 551 : do n ' t throw if the input field be n ' t exist .
added menu item for opening a JavaScript server in the browser and implemented server opening logic to enhance user experience by enabling quick access to the JavaScript server
added a new error message for inconsistent output scenarios involving multiple times to improve error handling and provide clearer context for semantic errors related to multiple outputs
modified the addition of an entry listener in BasicTest to include an equal predicate to ensure proper handling of null predicates in the addEntryListener method
fix arrayindexoutofboundsexception for reversed coordinate ( # 588 )
removed extra whitespace in setOpen method call to improve code readability and maintain consistency
added a boolean variable ` first ` to the ` TestPayloads ` class to manage the state of the payload processing logic
replace overview mode exit logic with a showOverviewMode method to simplify the overview mode handling for better code readability
camel - 11446 : camel - core - do n ' t use deprecated method on msgDispatch ( # 11509 )
int - 2294 fix max value for messagehandlerinterceptordefinition ( int - 3590 )
fix inspection violation : code style issue | unnecessary cast
httpclientrequestimpl : do n ' t write pending chunk when write body . fix # 483
updated the artifact replacement logic in GetMavenDependenciesTask . java to ensure correct identification of dependencies and improve clarity in dependency management
pdfbox - 2576 , pdfbox - 2576 : simplify code and avoid unnecessary typecast
removed unnecessary print statement from ReferenceUtil . java to clean up the code and improve readability
fix visibility predicate query name in field visibility schema transformation ( # 1428 )
added configuration parameters for JSON RPC SOLIDity port and updated service to use this parameter to improve flexibility in configuring JSON RPC port configuration for different environments
added a type check for the folder before removing it as a drop target to ensure type safety and prevent potential casting errors
refactor StubJarTest to use a new method for creating a stub JAR to improve code readability and maintainability by encapsulating creation logic in a dedicated method
added new Feature entries for setup wizard and workflow in StartPageTopComponent . java to enhance user guidance by informing users to setup wizard and manage complex projects with multiple files
fix potential deadlock in cassandraserver .
remove redundant check for null to simplify the logic for retrieving the availability state
change the return value from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository to ensure that the method returns all user information instead of just an empty value
modified the handling of ` onIdleTimeout ` and ` onFailure ` in ` HttpChannelState ` , ` HttpChannelTest ` , and ` ServerTest ` to improve task execution logic and ensure proper failure callback handling
fix potential non - blocking invocation of createendpoint ( jdk 9 )
added support for multi - column headers in TableBlockParser to improve table header parsing functionality for better handling of multi - column tables
update return value from 32.0 f to 31.5 f in Camera . java to improve camera precision and performance
added a preference for starting on - boot setup in GpsSettingsActivity and updated HTTP URLs in Utilities and GeneralLocationListener to streamline user settings and ensure compatibility with new features
updated the client secret value from 128 to 512 bits to reduce the maximum value for better security and performance
updated assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to clarify error message to ensure correct handling of null parameters in the test cases
temporarily ignore scheduled method metric test due to race condition
updated PinotFS implementation to throw exceptions and improved the initialization process to enhance error handling and ensure proper instantiation of PinotFS instances
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure correct date formatting for English locale in the application
added MetalLookAndFeel implementation to UIManager to enhance the visual appearance of the UI
refactor ping task handling to use a preDestroy method and ensure thread safety to improve resource management and prevent potential memory leaks
( chore ) camel - shenyu : do not print error message in global error handler
renamed parameter ` m ` to ` from ` in ` ModuleTable ` and ` PackageTable ` methods for consistency to improve code readability and maintainability by standardizing parameter names
added handling for CmdLineException in PinotAdministrator . java to improve error logging by capturing the caught exception for better debugging
replaced direct equality check with a new ` isEqualTo ( ) ` method and added ` hashCode ( ) ` method to improve equality handling and prevent unsupported usage of ` hashCode ( ) ` in ` Subject ` classes
removed unnecessary comment and updated PopupMenu initialization in CustomPlaybackOverlayFragment . java to improve code readability and ensure consistent state handling
update zoom level settings for map views in BasicMapViewer . java to ensure correct zoom behavior for improved map display
refactor admin user and group handling code to utilize ImpersonationUtil for improved clarity to enhance code maintainability and readability by centralizing user process logic
8028270 : files . readsymboliclink call accesscontroller directly so security manager ca n ' t grant the permission
added an argument extraction parameter to the DelegatedClientAuthenticationAction class and updated service resolution accordingly to enhance functionality by integrating custom argument extraction capabilities
changed the visibility of the defaultGroup variable from private to final to ensure the defaultGroup variable cannot be reassigned after initialization
tilesizechanger : destroy the tile cache before create a new cache . close # 1489
removed redundant calls to removeAllViews ( ) in CustomPlaybackOverlayFragment and InfoLayoutHelper to streamline the code by eliminating unnecessary duplication
refactor the cleaning logic in DatabaseCleaningService to improve efficiency to eliminate unnecessary iteration through feeds without subscriptions
replaced calls to CoreAuthenticationTestUtils . getAuthentication ( ) with direct authentication variables to simplify code and improve readability by reducing unnecessary method calls
nifi - 3076 : remove filebasedclusternodenetworktest . teardown ( ) from test to use class . getresource ( )
make sure conic floor point do n ' t evaluate nan but do n ' t kill kernel
pdfbox - 3636 : do n ' t throw eofexception if end of stream occurs
added @ SuppressWarnings ( " vararg " ) annotations to Fields . java and MockitoBeforeTestNGMethod . java to suppress unchecked warnings related to variable arguments in the code
added new methods and modified the image handling logic in CImage . java to enhance image processing capabilities and improve error handling during image creation
hbase - 20836 fix memory leak in maprdbfilterbuilder ( addendum )
changed the variable name from ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in multiple files to improve code clarity and consistency in naming conventions
replaced manual null checks with ` Objects . equals ` in multiple files to simplify equality checks and improve code readability
truffle : add nullness check to classpathsymbolresolver ( fixes # 26 )
added verification for various HTML error and invalid properties in NinjaDefaultTest to ensure robustness of the test cases for various HTML error and footer location
renamed the method from ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and modified its implementation details for better clarity to enhance code readability and maintainability by accurately reflecting the function ' s purpose and improving layout handling
updated timestamp view padding and modified list position offsets in DetailFragment and ListFragment to improve layout consistency and accommodate new design specifications
replaced the exception handling block and added a call to Thread . currentThread ( ) . interrupt ( ) in ZkStateReader . java to ensure proper handling of interrupted exceptions and maintain clearer error reporting
added null checks for field values in HttpFields . java and improved test coverage in RequestTest . java to ensure that empty headers do not cause runtime exceptions during request processing
server : check for static nat service in network before create static nat for macos .
added calls to resetHeaderScrollingState ( ) in OCFileListFragment . java to ensure proper header scrolling behavior and visibility management
fix issue where extra page hang around ( issue 11634172 )
added support for fixed width in bitmap font rendering to improve text alignment and rendering accuracy for fixed glyphs
removed the boolean parameter ` showTitle ` from the ` createFragment ` method and updated its implementation to simplify method signature and improve readability by removing unnecessary parameter
added preEvent and postTransition methods to AbstractStateMachineFactory to enhance state machine interception handling
fix javadoc typo in configdescriptionprovider
update role creation parameters and enhance Hive configuration handling in tests to improve role management and ensure compatibility with Windows environments
solr - 6792 : fix infinite loop bug in facetcomponent . count ( ) if sort by mincount be too small
updated the properties handling in CheckstyleReport . java to use a local configuration instead of a local file to improve flexibility and ensure the correct directory structure for the checkstyle cache file
added logic to stop all jettys in DeleteInactiveReplicaTest to improve resource management and error reporting for better debugging
added support for a filename argument in the FileActionsDialogFragment to enable users to specify a file name for action dialogs
updated direction handling in CellLayout to use a constant for invalid direction values to improve code clarity and prevent potential errors with direction values
fix : move account api endpoint to v1 / accounts ( # 4186 )
make jdbcPTest more robust by track down the execution id for a job
added a new interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client ` package to enable the admin client functionality in the application
updated import statements and added new visitIdentifier methods in FindTypes . java to enhance type handling and improve the functionality for better readability and maintainability
set the action text color of the authenticator activity to primary color to improve user interface by providing a clearer text for the action
added a new ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` classes for improved stream extraction functionality to enhance flexibility and usability when dealing with field values in the system
rename methods and variables from ` addTestStepsForBeforeHooks ` and ` addTestStepsForAfterHooks ` to ` createTestStepsForBeforeHooks ` to clarify the purpose of the method to improve code readability and maintainability
polish ` ` rename test to good name ' '
added a new method ` cancelClient ` to ` RpcServer ` and implemented the ` startDriver ` method in ` SparkClientImpl ` to handle client cancellation to improve client management by properly managing the cancellation of child processes
added handling for implicit coercion values in Skylark parameter info classes to ensure consistent behavior when retrieving default values in different attribute contexts
initialize lastDisplayedUser to an Optional . empty ( ) method to ensure lastDisplayedUser is initialized to an empty state
added a method ` findAll ( OrderSpecifier ... ) ` to ` QueryDslMongoRepository ` and modified the ` createQueryFor ` method signature to accept an additional parameter list to enhance functionality by allowing order specifications in query queries
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions during the stopping process
planner - 290 : exit the warm - up loop in case of a failure .
add miss implementation for xread / xread pipeline ( # 3568 )
updated LinkedBufferInput and StreamInput classes to remove unused references to improve code clarity and maintainability by eliminating redundancy
added a WebSecurityCustomizer bean and modified CasWebSecurityConfigurerAdapter to utilize it to streamline security configuration and improve code clarity
added a new test class for testing JDBC token store without DoAs to ensure correct functionality and behavior of the DBTokenStore integration under specified configurations
added a method to register content providers via ShadowContentResolver and updated ContentProviderController and ContentProviderController to enhance content provider management and ensure proper registration of content providers
replaced ` Version ` with ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure compatibility with the updated class path structure
fixed - connection manager keep alive be not properly set for single server configuration . # 6370
[ java ] : add ` context . getsupplier ` to be able to return a null value .
ggb - 2118 fix : do n ' t draw locus with no point in 2d
added error handling and improved WebSocket connection management to ensure stability during asynchronous operations and enhance stability
[ java ] implementing ability to create screenshot in web client .
use ` assertj ` instead of ` assertEquals ` in shadow packagemanagertest .
remove trufflelanguage . getcontextreference ( ) because it be not necessary .
reset mocking progress whenever instantiation fails . fix # 278
updated return statements in Actor . java and Group . java to correct the relationship between ascendant and local coordinates to ensure proper error handling by throwing an IllegalArgumentException for invalid actors
added location permission checks and modified the center animation in LocationPickerActivity to enhance user experience by allowing location access for upload map location
http : / / issues . apache . org / jira / browse / amq - 4635 - add initial jmx connection and incrementing counter
nutch - 2343 - fix gethttp request cookie when use http client
replaced manual intersection check with a method call to intersects to simplify the code and improve readability by using a more functional approach for intersection detection
replaced DeemphasisFilter with NonClippingGain for audio processing to improve audio optimization and reduce memory usage
added a monitoringUrl parameter to the ScrollingPanel constructor and integrated it into SystemInformationsButtonsPanel to enhance functionality by allowing users to browse and browse the monitoring URL
[ flink - 23790 ] [ k8s ] remove the unused kubernetes . service . create - timeout config option
updated icon resource settings for landmark , city , and empty photo in NearbyListFragment to improve user interface by providing appropriate icons based on place description
add null check for type . getpackage ( ) in DefaultPackageScanClassResolver . java to avoid potential NullPointerException when the type is null
added a new file PrintInlining . java that prints " Passed " to establish a basic program structure for testing purposes
fix : correct nesting in javadoc inline tag ( # 4088 )
[ java ] remove redundant field from archive .
updated the EdgeDataTableModel to use ` getEdgesAndMetaEdges ( ) ` instead of ` getEdges ( ) ` to ensure compatibility with both graph and meta edges in the data model
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up code and improve maintainability
updated logging messages for playback speed to use hexadecimal format to improve clarity and precision of playback speed logging
of - 2030 : added event when a room be create in the cluster manager .
updated the string value in AutoScalingHandlerTest from ' replicas ' to ' cores ' to ensure consistency in data representation for better clarity and functionality
added key manipulation methods for flip and mips in TextureHelper . java to enhance the texture manipulation capabilities for better visual representation
replaced ` PythonDslProjectBuildFileParser ` with ` CloseRecordingProjectBuildFileParser ` in multiple classes to improve event reporting functionality for build file parsing
add normalizationpass to passslavetest and fix regression in normalization .
updated the response body converter method from ` nextResponseBodyConverter ` to ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and added a test for it in ` Java8OptionalConverterFactoryTest ` to improve response handling consistency and ensure correct behavior through testing
[ hotfix ] [ core ] remove redundant isreed check in memorymanager
jbpm - 8042 - enh : add @ temporal to the consolesessionvo ( # 3752 )
added a new file Hbs . java and HbsTest . java to implement handlebar template rendering to facilitate the processing of model and view within the Jooby framework
chatmessageadapter : hide message in item if there be no hint .
[ iotdb - 4647 ] fix csv import error when import header name with type ( # 7600 )
try to stabilize confirmtest : wait until alert dialog appear
added a condition to return null if distinct column indices exist to ensure correct handling of cases with fewer than two column indices
add some test for url - based processing of jars .
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( # 673 )
replaced " websocket - server " and " jetty - websocket - client " dependencies with " jetty - websocket - client " to ensure compatibility with Jetty ' s websocket configuration
samlAuthenticateduser : fix return immutablesetablesettings ( # 4104 )
check for change in sketch header before repaint it , to avoid strange behavior
replaced instances of ` new Float ` and ` new Integer ` with direct return of ` bytes ` across multiple classes to simplify code and improve performance by avoiding unnecessary object creation
replaced ` getDate ` method with ` getTimestamp ` for result handling to ensure correct timestamp retrieval for database operations
fix an issue with the htmljndreportreporter when the bind object be an ` ` javax . naming . context ' ' .
updated database options handling in StorageUtils and modified log message format in Manager to improve database options management and enhance logging clarity for block generation success
change edge type check from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutable edges in the GEXF import process
add allow _ slippery _ touches to make statusbartouchcontroller slippery be : 918776ee51
fix int overflow when retrieve array dimension of the same type .
added Google Drive folder path constants to manage Google Drive folder paths to centralize folder path management and improve code maintainability
added ` ` shuffleSuggestions ( boolean down ) ' ' to enable use of arrow
added @ Nullable annotations to multiple method parameters in Truth . java to enhance code safety by indicating that certain parameters may accept null values
updated bitwise operations for value manipulation in ArrayUtil . java to improve clarity and correctness of the bit manipulation logic
added a new file ApiExceptionTest . java and modified ClassInstrumentor . java to add a method to check if the constructor can be instrumented to enhance error handling and improve the flexibility of the constructor instrumenting process
fix race condition in async streamin / out related code .
added keyguardSecure property and its getter / setter methods to ShadowKeyguardManager to enable secure handling of KeyguardManager based on API level 23 and above
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization of objects
updated string handling in GrblUtils to replace single quotes with single quotes and added a length check for overrideParts in GrblUtils . java to improve string processing accuracy and prevent potential ArrayIndexOutOfBoundsException
rename the test method from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables ` to correct the method name to reflect its purpose
do n ' t call checkdrivedisconnection after close to avoid deadlock
updated light count and iteration from 4 to 8 and changed shader from " light " to " vertexpath " to optimize lighting and ensure compatibility with the updated vertex path format
replaced instances of ` TestProjectFilesystems . createProjectFilesystem ( ) ` with ` ProjectFilesystem ` in multiple integration test files to simplify filesystem access and improve test reliability
changed the type of ` rerunFile ` and ` loadRerunFile ` methods from ` String ` to ` PathWithLines ` to improve type safety and reduce unnecessary object creation
updated Gson , JsonArray , and JsonObject classes to improve code consistency and maintainability
remove @ notnull annotation for test _ discovery . fix # 2022 . 1 .
added a call to ` Shadow . directlyOn ` to close the ParcelFileDescriptor instance to ensure proper resource management by closing the ParcelFileDescriptor objects
added thread - local support for managing prefix indices in ` BasisLibrary ` to improve thread safety and isolate prefix index states across different threads
added import for LogLevel and set the HttpConnection property to DEBUG to improve logging granularity for better troubleshooting and monitoring
added two calls to throwIfImmutable ( ) in IntList . java to ensure that modifications are properly validated to prevent unintended modifications
added @ NotNull annotations to onApplicationEvent method and modified ManagedChannelBuilder to use URI to enhance code robustness and ensure proper handling of URLs
refactor : move graal . java to jline - demo module ( # 209 )
fix unnecessary call to invalidatefunctionsarray in insightinstrument .
added platform - specific handling for manifest file generation in GenerateManifestStep . java to ensure proper line endings on Windows to avoid issues with Windows file handling
rfe - 3531161 : improve priority of null check - of - nonnull value
updated method signatures in ConfigDescriptionRegistry and added null checks in ThingResource to improve code robustness by preventing null pointer exceptions during configuration retrieval
fix masterjobcontext . createcancellationexception ( ) to throw runtimeexception instead of throwable
pdfbox - 2941 : fix initialization of cropbox when there be no cropbox
refactor ManagerBase class for improved functionality to enhance code maintainability and readability
added a new BooleanFlag named ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to allow accessing all apps from the system taskbar for debugging purposes
replaced the initActivity method with a direct initialization of FragmentActivity using Robolectric to simplify the process of starting and resuming FragmentActivity within the Robolectric framework
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` in ` FileProcessor ` to improve clarity and organization of coordinate processing logic
replace class names by replacing " ABCase " with " TestABCase " across multiple files to standardize naming conventions for better readability and maintainability
renamed parameter ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for ' getBlackholeAddress ' in Manager to enhance code clarity and prevent potential NullPointerExceptions
properly set the handler on rocketchangedeventhandler for the current rocketholder , add the dosimschanged ( ) method call
add a new class ChangeDependencyGroupIdAndArtifactId to change Maven dependency groupId and artifactId to provide functionality for updating dependency coordinates in Maven
refactored file system initialization and added a check for indexable segments in IndexingJob . java and improved segment validation in SegmentChecker . java to enhance code clarity and ensure proper handling of segment paths
8274234 : [ testbug ] gcobjectheapiteratoraddressorderedlist _ v1 test fail on aarch64
added caching for replacement paths and improved exception handling in PreprocessorDelegate to enhance performance by reducing redundant path resolution and enhancing error management
renamed JsonExamples class to Examples and updated package - info . java and package - info . java files to better reflect the purpose of the class and improve package documentation
added debug logging statements for extraction and processing entries in ViewExtractor . java to improve traceability and traceability of entry processing operations
for # 401 , apply a consistent copyright notice to the java / tree .
added a new Main class in the com . facebook . buck . oop _ javac package to provide a simple example of how to run the java oop entry point
fix a problem with xmpp account creation and operationfailedexception .
removed redundant ' continue ' statements from NativeScanner . java to streamline code for better readability and performance
changed package from ` net . pms . test ` to ` net . pms . configuration ` and removed unnecessary import statements to better organize the code by better reflecting its functionality and reducing unnecessary dependencies
replaced the use of ` ImmutableSet . builder ` with ` Supplier < ImmutableList < BuildRule > > ` for queried dependencies to improve performance by reducing the overhead of intermediate collections
replaced ` stream ( ) . count ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to optimize performance by using size instead of stream operations
added charset extraction from ContentStreamBase to metadata in ExtractingDocumentLoader to ensure proper handling of content encoding metadata
fix : account can now be in a domain ( 1 , 2 ) , if the domain be in a domain
fix shift - clicking when the shift - clicking button do n ' t move the player
add -- ignore - transitive - repositories cli option to ignore remote repository ( # 27 )
updated ContactsPreferenceActivity . java to remove the unused backgroundJobManager injection to streamline code by eliminating unnecessary duplication
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
added null check before closing selection object to prevent potential NullPointerException when selection is null
added a condition to break the loop if the current index equals the string length and matches the end character to ensure the loop does not proceed when the index equals the expected length
disable parallel server by default in Mvcitest to avoid travis ci failure
added a new user - defined function named " reverse " in UDFRegistry . java and created a corresponding class in UDFReverse . java to enable reversal functionality in Hive queries
updated context handler methods to use getRequestContextPath ( ) instead of getContextPathEncoded ( ) to ensure correct path retrieval for processing requests
updated Tracer class to improve performance to enhance the efficiency of tracing functionality
[ hotfix ] [ test ] ignore rocksdbstatebackendreaderkeyedstateitcase when not run
replaced specific JUnit assertions with wildcard imports in XMLChangeLogParserTest . java to simplify import statements and improve code readability
add circular buffer clear ( reset metric value to 0 )
updated forecastMinutes and forecastHours and forecastDays values in OpenWeatherMapOneCallHandler . java to adjust forecast settings for improved functionality
more test timeouts should help diagnose rare test failure
added logging for splitTaskIds change and implemented UI updates for the all apps item in the FloatingHeaderView to improve debugging capabilities and enhance user experience with animated transitions
[ core ] fix parse feature and rerun file path when all test pass
added system menu items for livingwood , livingrock , tesrick , tesrick locally .
fix three compiler warning : order of parameter in test method
added support for file size options in RCFileCat . java and introduced a method to get the number rows in RCFile . java to enhance functionality by allowing specification of file sizes and provide better information about file sizes
[ java ] correct the spelling of ` ` so ' ' and ` ` so ' ' in javadoc
[ pytorch ] fix nullpointerexception in checkndarray
[ hotfix ] [ flink - azure - storage - blob ] fix typo in blobserver
fixed bug 1114625 - unusedprivatemethod no long report false positive when a static method be invoke inside an anonymous class .
updated variable naming from ` lexicalScope ` to ` lexScope ` for consistency to improve code readability and maintainability by standardizing variable names
int - 1894 add test to check if sftp be auto - started
added methods to access root and child boundables in various classes to enhance the structure and functionality of the spatial index system
updated version parsing logic to handle the minor version number correctly to ensure accurate extraction of version number components and improve code reliability
fix potential npe in itemregistryimpl . persisttags .
[ flink - 21743 ] [ table - planner - blink ] support parse datetime string with timezone id and default value
hhh - 17100 fix regression relate to specific user in distributed query
refactor Log4j2ConfiguratorServlet to improve logging functionalities to enhance readability and maintainability of the code
hive - 5051 : storagebasedauthorizationprovider mask low level exception with illegalstateexception ( eugene koifman via ashutosh chauhan )
updated the method for putting " CC " in the CGoCompileStep class and added a new test for prebuilt C++ libraries with wrapped C++ to ensure compatibility with both prebuilt and wrapped C++ libraries and verify functionality through testing
fix : update crd - generator - java with new builder package structure
removed the @ Override annotation from the code to ensure proper method overriding behavior
increase socket timeout for http client to 3 hour .
added pipeline names as parameters in PerBuildStateFactoryWithConfigurableAttributes and RawTargetNodeToTargetNodeParsePipeline to improve clarity and maintainability of performance event tracking
[ java ] remove duplication of controller bean mapping in seleniumserver .
added Singleton annotation to ApplicationController . java to ensure a single instance of the ApplicationController is used throughout the application
replace direct username retrieval with a try - catch for OwnCloudAccount handling to improve username retrieval logic for better functionality
added batch status imports and a test for resuming a paused job in SimpleJobLauncherTests to ensure proper job execution handling and validation during paused job execution
added null check for cacheConfig before generating the value in HttpSyncDataService . java to avoid potential NullPointerExceptions when cacheConfig is null
[ grid ] making localnode accessible from selenium server ( grid node )
refactoring : remove dependency to the java . lang package in the getqualifiedname ( ) method .
pdfbox - 2516 , pdfbox - 2517 : do n ' t skip dictionary object when parsing non - sequential pdfs
mahout - 770 - fix checkstyle failure in testdistributedlanczossolvercli . java
modified HttpServerTestBase . java file to enhance HTTP server testing capabilities
- fix jpms render test to work with jdk 5
add test for dynamodbignorenulls and add test for it
improvement - spring - starter should be extend by redissonautoconfiguration . fix # 486
chore ( core ) : fix indicator to double ( # 245 )
add execInContainerWithUser method to ContainerState and ExecInContainerPattern to enhance command execution flexibility by allowing user - defined commands
fix # 3550 - nettywebsocket detect no - interested message ( # 3551 )
added test cases for handling semgrex attributes in the graph to ensure correct functionality and behavior of semantic graph attributes in the graph
added a broadcast intent to send " CLEAR _ PULL _ UNREAD " in HomeFragment . java to enable notification for cLEAR pull requests in the application
removed conditional checks for preGingerbread and OverScroller initialization to simplify code for better readability and maintainability
fix # 778 . [ hapi ] need to flush default profile validation before destroy
camel - 17815 : do n ' t start veto camel context if it can not be start .
added FloatingActionButton and implemented a main FAB menu functionality in ShareActivity to enhance user experience by allowing direct access to media maps
added inline Parslet support and improved date parsing functionality in ToDateTokenizer to enhance date parsing reliability and provide clearer error reporting
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated various error messages in ErrorMessages _ sv . java and XPATHErrorResources _ sv . java to improve clarity and consistency in terminology
added a check for server status before binding operations service connection to ensure operations service is only bound when the server is not currently checked
fix ` ` null ' ' value issue on some sql node
added process waiting and error handling in CxxPreprocessAndCompileStep and implemented waitFor method in ManagedThread to ensure proper handling of process termination and interrupt threads to improve stability and error handling in thread execution
added a new boolean variable ` requireAllRepositorySources ` and updated the ` CoreAuthenticationUtils ` to utilize it to control repository requirements for principal attributes during authentication
fix maximum size check in ` mapcontainer . getmapcontainer ( ) ` . ( # 1288 )
add support to enable or disable ssl protocol for http / 2 communication ( # 6741 )
replaced ` AtomicBoolean ` with ` AtomicReference ` for thread - safe access to improve performance and memory management in the ` SetOnce ` class
updated QueryDslMongoRepository to return the key of the property based on the expression to ensure proper handling of the property name retrieval when no path expression is provided
updated assertions and error messages in RoundRectBorderTest . java to ensure correct behavior of border comparisons and improve clarity in test failure messages
attempt to verify that we have at least one config node for a genesis node for bft ( # 2139 )
remove parallel test , it be not need anymore .
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' , added a validation check for the ' sign ' array length , and improved error logging to ensure correct thread counting , validate input parameters , and enhance error information clarity for debugging
inverted the condition for non - Windows environments in ProcessInformationsPanel . java to ensure that the process is only executed when the operating system is not Windows
replaced repeated collection methods with static methods in MoreCollectors . java to improve code readability and maintainability by reducing redundancy
added null checks and improved WebSocket client handling in the Bitmex streaming services to ensure proper initialization and prevent potential null pointer exceptions
added validation for lat and lon in GeoPointField to ensure that invalid inputs are handled correctly to prevent runtime errors
updated method names and logic inWorkflowFilesService and OozieProxyImpersonator classes to improve clarity and consistency in handling file creation and saving operations
8235528 : incorrect gpl header cause re script to miss swap to commercial header for licensee source bundle
modified the ` getTableDocument ` method to include a ` withDependents ` parameter and adjusted related calls to enhance flexibility in handling dependent tables based on specified dependencies
added logic to display a dialog for consecutive uploads without coordinates to improve user experience by guiding users on how to upload contributions without coordinates
added caching for profile data retrieval and modified profile serialization logic to improve performance by reducing redundant object creation and enhancing query profile data handling
added new logic to extract and set properties from source and target ID types in JpaMetamodelEntityInformation to improve handling of property values for better entity identification
add index timestamp validation for bootstrapping last DDL timestamps for tables and views to ensure accurate timestamp generation for operations involving table and view timestamps
enable default exception mapper for jersey to be use by dropwizardresourceconfig
fix exception due to undo / redo icon while edit entry
updated the ` nativeCreateNSWindow ` method to include ` ownerPtr ` instead of ` contentView ` to allow for proper management of the owner ' s NS window pointer
updated SQL execution to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure consistency with the database schema for file operations
added a new case for STOCK in the Tile class and modified event handling to allow for proper animation and animation control for the Stck object
fixed - commandasynchttpclient . readasync and writeasync method throw classcastexception : ' codec ' must be use for object ' s
no effective change - remove debug message from typeframemodelingvisitor
fix interruption when back progress be cancel
changed the ` _ initialPageNo ` variable from final to non - final and added a new ` _ contentLimits ` list based on its value to allow for dynamic adjustment of content limits based on the initial page number
fix incorrect crc calculation in jedisclustercrc16 . ( # 7597 )
added comment parsing functionality to FormattedSqlChangeLogParser and created a test for it in FormattedSqlChangeLogParserTest to enable proper handling of comments in SQL syntax and ensure proper parsing behavior
plexus : jar - maven - plugin : expose archiver in the generated jar instead of create a new one each time
replace HumanReadableException with BuckUncheckedExecutionException for class usage file loading to improve error handling by providing more specific exception type
refactored conditional checks and added a multiAggregationTest method in DaemonTest . java to improve code readability and enhance functionality for aggregation operations
added support for reading pixel data using ByteBuffer in GwtGL20 . java to enable pixel reading functionality for improved compatibility with GWT backend
added a new test method ` testDebugInfo ` and modified debug method invocation in ` PrintR ` and ` VarDump ` classes to improve test coverage and ensure correct debug information handling
replaced the handling of UnmodifiableClassException with a more generalized exception handling mechanism to ensure that Byte Buddy could never occur for Java classes while maintaining clarity in error reporting
[ gr - 21038 ] enable trace of class initialization trace .
no effective change - tidy whitespace in baserequesthandler
replaced Google Guava cache implementation with Caffeine cache implementation to improve performance and efficiency of topic route caching
mbtilesfiles : add read - only mode to the connection pool ( MBtilesread only )
updated INVALID _ SOURCE _ TARGET _ RELEASE regex to allow for a maximum release value of 1 . 9 to ensure accurate handling of invalid target release formats
updated URI construction in DetailFragment . java to include location intent for geolocation when location is not available to improve user experience by providing direct access to geolocation data
nifi - 12370 fixed npe when process invoke on empty invoke parameter context
8254566 : clarify the spec of classloader : : getclassloadinglock for non - parallel capable loader
added a method to set the origin response headers in ProxyRequestHelper to ensure proper handling of HTTP headers for response headers
removed instantiation of ProfileSettingDrawerItem in GpsMainActivity to streamline profile setting functionality for improved user experience
tld : enable dynamic generation of dtd when the jasper . xml _ validation be enable
simonstewart : fix the test for executejavascript to work as expected .
added maxRows handling and modified fetch size logic in IoTDBStatement . java to ensure that the maximum number of rows does not exceed the specified limit and improve error handling
fix http : / / code . google . com / p / mybatis / issues / detail ? id = 536 - sql - select - count - optimized - with - sql - select - count
added listener handling for node and mouse left click events in the StandardVizEventManager to enable proper interaction with node and mouse devices based on selection settings
[ java ] replace integer . valueof with an explicit zerobuffer method for consistency .
- add code to make xorgroup accessible from the terminalnodememory object .
remove getheight and getwidth from lcduiimagemonochromebitmapsource , because it ' s not use
refactor path resolution logic into a separate method and enhance readability to improve code maintainability and encapsulate path resolution logic
fix # 550 - qualify identifier in dstu2 xml output ( # 550 )
updated the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and modified URI handling to accommodate encoded URLs to enhance the WebSocket upgrade functionality by allowing the transition to only URIs with encoded URLs
move execution - specific test to a separate class in [ gr - 3990 ] .
added a method to retrieve the CxxPlatform from HaskellBinaryDescriptionArg and updated the way CxxPlatform is retrieved to improve code readability and maintainability by encapsulating platform retrieval logic in a dedicated method
added imports for Javadoc , Field , and Similarity classes in the respective files to enhance Javadoc documentation and improve code clarity
updated ConcurrentLinkedStack to improve null handling and method naming conventions to enhance code readability and ensure proper functionality of the ConcurrentLinkedStack implementation
add isMatched ( ) and setMatched ( ) method ( # 1355 )
added null check for mDirectories before iterating to avoid potential NullPointerExceptions to prevent potential NullPointerExceptions when mDirectories is null
added a condition to check if overview state is disabled and the first layout is not the home gesture to improve state handling logic for better user experience
add package - info . java files for various Apache Lucene packages to enhance documentation and clarify package structures
added a method to set the visible auto - leveler text in the AutoLevelerTopComponent to improve user experience by providing localized strings
added event listener handling for post - optimize updates in DirectUpdateHandler and DirectUpdateHandler2 classes to ensure that listeners are properly invoked when an update occurs
updated CompressionMode to use ` true ` for padding length and adjusted ` Inflater ` initialization to ensure compatibility with padded data and improve compression efficiency
fix ( shaderc ) : remove useless user _ data check in shaderc .
retryingmetastoreclient fix : do n ' t retry on meta - store server that be not local
fix exception stream log in heliossolologservice ( # 4186 )
refactor ` Subject ` class references in ` mmm ` and ` ppp ` files to improve code clarity and maintainability
make abstractserializationservice thread - safe . fix # 3562
fix findsimilar color bug for hssfPalette , see bugzilla 48532
fix : [ tpu ] proper html syntax for v1 api ( # 9035 )
danielwagnerhall : adding numeric id and list test , for issue # 26 .
added a flags parameter to multiple registerReceiver methods in ShadowApplication and ShadowContextImpl classes to enable flexible control of receiver registration based on user - defined flags
build ( build ) : upgrade ffmpeg to 0.10 . 9 . final
modified OggInputStream and OpenALMusic classes to incorporate a previous input stream handling to improve resource management and prevent memory leaks associated with input streams
replaced the hardcoded string " response was null " with a constant ` RESPONSE _ WAS _ NULL ` to improve code readability and maintainability by using a named constant
increase the condition to not print anomaly warning when anomaly count = = 0
refactor Toast usage in BaseActivity and add settings for info display to improve user experience by providing immediate feedback when info is enabled
updated the method call in TracingFeignClient from ` delegate . method ( ) ` to ` delegate . requestTemplate ( ) ` to improve request template handling by utilizing the recommended method for HTTP requests
added new imports and modified exception handling for LDAP operations to improve error handling and ensure valid LDAP names are processed correctly
refactor retain logic into a separate retain method to improve code readability and reduce duplication
add fakelistview . performitemclick ( ) test that demonstrate that listview . performitemclick ( ) be fire .
[ hotfix ] [ test ] fix invalid cluster initialization in checkpointfailuremanageritcase
deleted genericitemuiprovider . java ( # 4999 )
added getter and setter for the selected object in the sipcom selector box . thanks to jason derek for the patch .
added Isolated annotation to MetaInfConfigurationTest for filesystem pool access to enable parallel testing of filesystem pool functionality in the test
fix ( http ) : make sure we pass the correct host string to the http connector .
updated token validity logic in DynamicClientRegistrationEndpoint to handle different grant types to improve flexibility in setting access token validity for heart mode and enhance client registration behavior
hbase - 26016 fix broken test for java / lang / management / gc / split _ log _ counters . java and add a new cloverinstrumentationfilter ( # 2602 )
added support for the Smartmi Evaporative Humidifier device in MiIoDevices . java and modified the write statement in ReadmeHelper . java to enhance compatibility with new humidifier features and improve code clarity
fix plausible to break on invalid block ( # 486 )
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes or packages
ambari - 20746 change to warn log if ambari do n ' t have baseurls for install package step before eu / ru ( dlysnichenko )
fix the add method in inthashset to return true when containsmissingvalue be false
added Serializable interface to RuleAdministratorImpl class to enable serialization for the rule administrator object
[ wip ] [ wip ] add support for wildcard origin to cross origin filter ( # 5883 )
updated test cases in BaseG3dHudTest . java to replace " g3d / cube _ anim . g3dj " with " g3d / knight . g3 dj " to improve test accuracy and maintainability by using more relevant models
added a solidified position update error handling for genesis block updates to improve error reporting for invalid solidified positions during block updates
hbase - 8703 [ euphoria - operator ] fix npe in execresult . copy ( )
added a method to check if the user is authorized to access the page to enhance security by restricting access to sensitive information
replaced the implementation of ` writeTo ` in ` ClassMirror ` and ` StubJar ` with a method to retrieve stub class bytes to streamline the code and improve maintainability by encapsulating functionality in a dedicated action class
added internalLinkText to display shared internal link text based on whether the file is a folder or a file to enhance user clarity by providing more relevant information about shared files
fix test that fail on a system with locale different than english
fix test failure on bamboo ( # 1355 )
added methods to hide IMEs in AllAppsContainerView and updated it in LauncherAllAppsContainerView to improve user interface responsiveness by managing keyboard visibility appropriately
added test to save data in - memory .
replaced parent path retrieval with a more direct method to retrieve themntonname for improved efficiency to streamline code and enhance readability by eliminating redundant checks
add test case for issue # 1599 resolution of method call
added support for optional coordinates in the Spawn command to enhance the functionality by allowing users to specify additional spawn coordinates
fix issue where folder could get stick in infinite recursion when resize
code installation : move graph . copy to final in graalcompilertest . method in graalcompilertest . java too
replaced newDirectory ( ) with newMockDirectory ( ) in TestIndexWriter . java to reliably create a mock directory on Windows to ensure compatibility with Windows ' s behavior
added plugin check class names in UpgradeCheckRegistry and adjusted database column addition in UpgradeCatalog280 to enhance plugin check management and maintain consistency in database schema handling
fix minor flaw in source code format of environment . java
added import for LuceneTestCase and annotated the test class to address the bug related to SOLR - 7421 in the RecoveryAfterSoftCommitTest
updated the file system separator handling in CodenameOneImplementation . java and removed unnecessary warning in HashtableContent . java to ensure proper path construction and improve code clarity by removing unnecessary checks
change ` FLAG _ IGNORE _ HDMV _ DTS _ STREAM ` to ` FLAG _ ENABLE _ HDMV _ DTS _ AUDIO _ STREAMS ` in ` DefaultTsPayloadReaderFactory . java ` to enhance the functionality by enabling HDMV DTS audio stream mode
replaced specific resource imports with a wildcard import and modified XMLChangeLogSAXParser initialization to simplify import statements and improve resource handling efficiency
disable jdk tl for now - issue # 402 .
updated ` AbstractCxxDeps ` to use ` @ Value . Immutable ` and removed the ` EMPTY ` constant to improve immutability of ` CxxDeps ` and simplify the dependency management
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualStubDirectory ` to improve clarity and consistency in naming conventions
updated the formatting of the resizeThreshold annotation in Int2ObjectHashMap to enhance code readability and maintain consistency
updated folder name hint and text setting logic in mFolder . java to ensure proper handling of empty folder names and hints based on conditions
update client loading test to include a unique identifier to ensure tests are validated for multiple clients in the service
changed access modifiers of methods from public to private in ShadowSQLiteDatabase . java to enhance encapsulation and restrict access to utility methods
updated string concatenations in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to handle closed values appropriately to ensure consistent behavior when the object is closed and avoid potential errors
updated references in MimetypeIconUtil . java to improve code consistency and maintainability
guvnor - 5272 : remove superfluous period in method name .
added a test for negated instance checks in UnnecessaryParenthesesTest . java and updated the logic in UnwrapParentheses . java to ensure correct handling of unnecessary parentheses and improve type checking accuracy
added a new ` teleport ` method and modified the ` Location ` class to use it to enhance functionality to support dynamic teleportation of location objects
replaced manual Base64 encoding with Base64Utils for both modulus and exponent in TokenKeyEndpoint to enhance security and adherence to URL - safe encoding
updated imports in TranslatorManagerHelper . java to include ProjectComponent and modified statistics reporting functionality to enhance project tracking capabilities by incorporating project information
rename ` ContainerAnnotation ` to ` ContainedBy ` to improve clarity and intent of the annotation ' s purpose
added an assertion to check that the getId ( ) method is not null to ensure that the result is not null to prevent potential NullPointerExceptions
modified the setUpRevampedTweet method to include a muffled check and improved return logic to enhance user experience by ensuring correct retweeter detection based on visibility
update verification text in UserProfileActivity to use dynamic theme based on settings to enhance user experience by allowing theme customization
replaced static instance initialization with a direct instance variable in AbucoinsDigest to simplify the object creation and improve performance by reducing unnecessary object creation
camel - 14726 : camel - mongo - db should use autowired option to avoid potential npe .
[ geot - 5569 ] add support for last source index to the feature reader ( # 4237 )
log a warning when hive metastore get corrupt column statistic
added a call to check security status using UserGroupInformation to ensure proper handling of security - related permissions
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth files to improve code organization and maintainability
[ geos - 4744 ] properly escape email in geoserverhomepage
fix ( engine ) : automatically enrich module - info . xml for each engine
added feature count validation and modified output for MFCC and MFCC variables in JoinModeller . java to ensure correct representation of features and improve code clarity
apps - 588 fix check for empty string in algebraprocessor
( chore ) camel - single - node - kafka : avoid unnecessary log linefeeds
updated references to use PlaybackStateCompat for action and playback state management to ensure compatibility with older playback API versions
updated IgnitionHandler , MotorMountHandler , FlightConfigurationID , and FlightConfigurationID classes to manage motor events and delays more effectively to ensure consistent handling of device configurations during automatic separation and improve code clarity
tika - 2776 -- format string ( ` ` utf - 8 ' ' , ` ` utf - 8 ' ' ) should throw an exception if ascii name length be incompatible
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to temporarily disable the test due to compatibility issues with JDK 1.7 and above
refactor lock file creation into a separate method for clarity to improve code readability and maintainability by encapsulating lock file creation logic
updated references to " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added new notification settings to ensure compatibility with newer features and improve user experience
do n ' t attempt to authenticate with federated user that do n ' t have password
make executemethodnode not throw classcastexception for non truffleobject
refactor : remove unnecessary @ Disabled annotations and simplify the filtering logic in JakartaClientShutdownWithServerWebAppTest . java to improve code readability and maintainability
fix : logback - 513 : do n ' t log an error if the filter be nativly deny .
7057785 : add note about optional support of recursive method for self - referential collection / map
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to utilize the latest features and improvements in Lucene
added logic to handle backings and schemas in the MissingPrimaryKeyChangeGenerator class to improve the handling of missing primary keys and ensure proper schema management during change generation
updated MsckOperation to include MetastoreException handling to improve error reporting for invalid partition names
[ flink - 21690 ] [ connectors / kafka ] retry kafkaproducer to retry committable before recovery
fix rocketmq proxy for message receipt handle . fix # 3783
added service handling to DockerComposeContainer and created a new test class for service validation to enable dynamic service discovery and ensure proper functionality when the Docker Compose service is used
copy collectionutil . entries to avoid concurrent modification exception
replaced HTML cleaning and parsing with standard HTML output to simplify code and improve error handling by returning an empty xml string
removed unnecessary condition for disabling all apps in Launcher and updated child layout retrieval in Workspace to streamline logic for better readability and maintainability
change data type of energy variables from int to double in MeterRealtimeBodyDataDTO . java to improve precision in energy management calculations
added a new JApplet class to handle directory creation and deletion to ensure proper functionality of the file chooser when the backspace button is pressed
added a configuration update state and implemented closing methods in Spark client and HiveConf to improve resource management and prevent memory leaks when Spark configuration is updated
added a longPressIndicator method to AppIcon and AppIconMenuItem classes and updated Launchable to use it to provide a customizable shortcut indicator for improved user experience
write empty polymorphic wkb in binary / binary mode ( # 863 )
refactor UnflavoredBuildTarget to use a builder pattern and add interner for better memory management to improve code clarity and ensure unique instances of the UnflavoredBuildTarget
added a new class MultiplyByMaxInt that includes a method that calculates the maximum integer values to implement a performance test for handling integer multiplication more efficiently
removed the action view collapsed check and set the drawer indicator enable status in OCFileListFragment to ensure the drawer indicator is only displayed when the current file is in a valid state
removed unnecessary import statements from TestRAMDirectory . java to streamline the code for better readability and maintainability
replaced FixedBitSet with BitSet for the ` isAccept ` variable in ` Automaton . java ` and ` Operations . java ` to optimize performance and improve memory usage by using ` BitSet `
drools - 3357 dmnevaluatorcompiler : replace string concatenation with message constant ( # 3348 )
replaced ` @ ContainedBy ( A . class ) ` with ` @ Repeatable ( A . class ) ` in multiple test files to improve code clarity and maintain consistency in annotation usage
updated file sending message to include a formatted duration to improve clarity and provide better context about file duration
updated class name handling in OpenMBeanAttributeInfoSupport . java for consistent access checking to ensure proper package access validation by using a safe class name method
use the global response count of readresponsestolver instead of the global response count of the cluster . patch by jbellis
adjust freeSize calculation by converting s to 16 to ensure accurate size management for memory allocation
implement touch event handling in AnyKeyboardView and associated classes to ensure proper touch event processing for touch interactions
replaced the instantiation of SslContextFactory with SslContextFactory . Server in multiple files to enhance SSL context configuration for improved server handling
refactor : remove puppeteer PrivilegedSocket from pg _ stream . connect ( ) to a more generic socket instantiation
modified the InputTest class to enhance test coverage to improve reliability of input handling functionality
added a method ` pauseBlurs ` and modified ` finishRecentsAnimationOnTasksAppeared ` to accept a null parameter to enable control of the pause blur when tasks are finished
removed redundant current location marker code and improved null handling for current location marker to enhance code readability and prevent potential NullPointerExceptions
update client removal logic to use clientDetailsService directly instead of the client object to ensure the secret is removed accurately based on the client ' s ID
updated SqlSourceBuilderTest to use @ BeforeEach instead of @ BeforeAll for XML parsing to improve test efficiency by eliminating unnecessary XML parsing
increase await termination time for activemqmessageconsumer . getconnection ( ) to 60 second .
added test cases for handling unknown keys in SlidingGanttCategoryDataset to ensure proper error handling and messaging for invalid key inputs
updated filterConditions initialization to handle null conditionDataList to improve code robustness by avoiding potential NullPointerExceptions
* no more memory leak in lightcontrol , and add some documentation .
updated suppressed warnings and improved stack frame handling in StdErrLog . java to enhance code clarity and maintainability by addressing minor warnings
refactor HttpSessionEventPublisher to utilize a context retrieval method to ensure that the context is correctly set and not null , improving code reliability
remove a semantic check for the CREATE CQ statement in ASTVisitor . java to address compatibility issues with CQ syntax version 0.14
[ flink - 30141 ] [ doc ] add comment about upgrade to flink - io - tdb
[ gr - 43925 ] customplification : fix bug in customplification .
updated the method call to set the context for the fileIcon to ensure the correct context is used for improved functionality
updated method call to use schema . getName ( ) instead of readIdentifierWithSchema ( ) to ensure correct retrieval of indexOrConstraintName based on the schema context
[ beam - 13777 ] fix bigqueryio . parsetable do n ' t support timestamp column . ( # 14288 )
implemented ` findViewWithTag ` method in ` ShadowView ` and ` ShadowViewGroup ` classes to provide functionality for finding views with tags based on their content
updated for - each loop syntax to use generics across multiple files to improve type safety and code clarity
removed unused import of PColumnFamily from various classes to clean up the code and improve maintainability
added support for JSON values and constructors in the DocAnnotation and JavaClassUtil classes to enhance flexibility in handling JSON annotations and improve code clarity
svm : fix logic to handle jar for resource .
lucene - 2486 : remove doclint warning from cuda and cuda - api
modified ResourceLoader class to include FileFilter for resource directory handling to improve efficiency and support for multiple resource directories
fix redstone torch not connect to glow ( # 1052 )
[ calcite - 4215 ] support variablebinary type in calcite - 4215 in calcite - 4215
removed unused import of DateHelper from NoteAdapter . java to clean up the code and reduce unnecessary dependencies
modify backup message handling to better reflect the success state of backup loading to improve user feedback by indicating that the backup was created successfully
ticket # 3174 : make sure the correct style be set on the eview - in the chat window
updated file creation logic in ShadowParcelFileDescriptor . java to simplify the code by removing unnecessary file creation and enhancing readability
sec - 1569 : remove unnecessary call to securitycontextholder . getcontext ( ) in stackbasedsecuritycontextholderstrategy .
rename rule from " optimizations " to " controversial " in BooleanInversionTest . java to clarify the purpose of the rule by indicating it belongs to the controversial context
added unit tests for ` XorNeutralSnippet ` and ` XorReference ` classes , and modified node handling logic in ` IntegerEqualsNode ` and ` BinaryNode ` to improve coverage of integer equality canonicalization and enhance for - node behavior
added a static final Type STRING _ ARRAY to the TypeFactory class to support Java String array type handling in the application
refactor keyboard hiding logic to use a dedicated method to improve code readability and maintainability by encapsulating keyboard hiding logic
fix blockstatecontainer not be able to resize bit , close # 285
updated assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest for improved clarity and consistency to enhance test readability and ensure accurate cache management
cache the maximum texture size to prevent lag . close # 641
[ java ] : re - order of parameter in trystoplogrecording to be consistent with other method in interface .
added a check for the ` isInTransform ` flag in the ` SemanticAnalyzer ` class to initialize ` startPosn ` to zero when necessary
add querycontext . isskipstartree ( ) to disable star tree
fixed # 2381 nearby progress bar not show in npe conditionally .
add method for reverse a map and get a bimap to maptransformer
modified the EmeddedObjects and EmbeddedObjects classes to improve code consistency and maintainability
added support for launcher widget span in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget management and improve data retrieval efficiency
updated classes to use ` EventObject ` instead of ` ChangeEvent ` for better event handling to improve clarity and maintainability of event handling in the application
added methods to get and set the calling process ID in ShadowBinder to enable improved control over the calling process ID for testing purposes
replaced AutoValue with a null - safe approach for the ExpectationFailure class and added additional methods for message and cause to improve flexibility and prevent null pointer exceptions in the ExpectationFailure class
remove warn about not support for deserializing message with name . close # 2373
update calculations for newW and newH by introducing conditional checks to ensure proper scaling behavior when target dimensions are not positive
added support for Unicode escape characters in Markdown rendering classes to ensure proper handling of newline and escape sequences in Markdown output
added an AlertDialog button to change text color and refactored password setting logic to improve user experience by providing immediate feedback on share creation and deletion actions
[ java ] fix bug relate to map / unbind channel on window .
changed method visibility from public to package - private for several methods in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java to enhance visibility and encapsulation of test methods
added slider keytab options to LlapOptionsProcessor to enable dynamic configuration of keytab settings for improved security
added animation control to the ` tearOutGraphViewContainer ` method and updated its usage in the ` DataBrowser ` class to improve animation management and ensure proper parent context is used for the graph view
added a mechanism to track and validate bind completion runnables in the LauncherModel class to ensure proper loading behavior during shortcut execution based on loading state
fix : node - paths - convert and nodemanagememoryMergeoperator ' s isfinished check ( # 148 )
updated method signatures to include " guid " instead of " error " and added a new method ` setCheckValid ` in ` ValidationReport ` to enhance clarity in method purpose and implement validation checks more effectively
added a safe method to retrieve the provider name and improved exception handling in RSAClientKeyExchange . java to enhance security by providing clearer error messages when the cipher provider is unavailable
updated references from ` getDynamicConfiguration ( ) ` to ` flinkConfiguration ( ) ` across multiple files to ensure consistency in referencing the flink configuration for improved functionality
changed log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity for better debugging
remove useless code in aggregateLifeCycle # format
change BITMAP _ HEIGHT and BITMAP _ WIDTH from private static to public static to allow external access to these constants for better flexibility
removed the @ Ignore annotation from CovariantOverrideTest . java to ensure the test runs without an ignored test case
refactor ` curly ` method to use a new ` qtype ` function and improve code clarity to enhance maintainability and readability by encapsulating the type handling in a dedicated method
camel - 1767 : camel - core - optimize to not use reflection when load route definition .
added space minimum and maximum settings to the X - axis of the ScatterChart to improve visual spacing for better data visibility
modified the string concatenation syntax by removing unnecessary quotes to ensure proper formatting of the output string in the builder
added default implementation for ` shouldPreserveDataStateOnReapply ` in ` SplitScreenSelectState ` and ` BaseState ` classes , and implemented animation end logic in ` StateManager ` to ensure data state preservation during screen updates
added a check for the presence of the UTF8 key in the properties file to ensure the UTF8 key is present before proceeding with operations
solr - 3995 : fix test failure cause by lucene - 3995 .
added a UI event for long - pressing an AllApps item in the StatsLogManager to enable logging of user interactions for improved analytics
storewal : do not commit or commit if there be no change . # 112
added a condition to check for a valid sector preset before displaying land info in the control condition to ensure thatectorLandInfo is only displayed when a valid sector is present
replaced casting to CompositeType with generics for better type safety across multiple classes to enhance type safety and eliminate unchecked cast warnings
refactor Enum class to improve readability and structure to enhance maintainability and ease of understanding for future developers
throw illegalargumentexception if nearbyrandom from nearbyselectionconfig do n ' t have a nearby random
remove threadlocal cache because it ' s not necessary .
[ geos - 7868 ] newlayerpage : hide create sql view and wms layer data container
initialize assignment of availability _ availability to UNAVAILABLE to ensure visibility of availability status in context
updated PBFT processing logic to include a check for sync finish to ensure accurate handling of commit messages during synchronization
fix : migrate retry setting to grpc _ service _ config ( # 192 )
updated the value of _ freeSpaceReclaimDisabled from boolean to int and modified related methods to enable a more flexible free space reclaim setting based on a parameter value
changed visibility of KDC option constants from public to private static in KDCOptions . java and added a new KdcDefaultOptions class to enhance encapsulation and improve the management of KDC configuration options
refactor writer initialization and assignment in Json . java to ensure proper resource management and avoid potential memory leaks
fix a crash when the user click on a profile ( # 2438 )
changed method name from paintBackground to paintComponentBackground in Slider . java to better reflect the functionality of the background painting process
added a method ` valueFromClassConstant ` to retrieve a value from an object value constant to ensure proper handling of property values for both FQN and dot types in the configuration
( chore ) camel - kafka : log error when init fail
replaced a set of Strings with an ImmutableSet containing multiple locations to improve flexibility in resource configuration by allowing multiple locations for the build property
- enable the ' auto - create - channels ' option for the message bus by default
added functionality to extract and index keywords from HTML documents to enhance search capabilities by including relevant keyword metadata
update SDK version check from S to R to ensure compatibility with newer Android versions
modified the conditional structure of the code to ensure ` _ addresses ` is always set based on the provided list of addresses
replaced ` new CorrespondenceSubclassToFactoryCall ( ) ` with ` CorrespondenceSubclassToFactoryCall . class ` to simplify the code by using the class reference directly
more generic javadoc since this class be now use by the configuration
change isbnbibTexfetcher to return a good error message ( # 4137 )
[ gr - 37684 ] fix gwt context leak when enter or leave internal truffle context .
added null check for text before firing data changes in TextField to avoid potential NullPointerExceptions when processing text
fill in some blank , such a by reuse code from the dvparser project
add line trimming to strip whitespace from end of line in SuffixURLFilter . java to ensure consistent and clean input handling
added a check to return early if the player is in Godmode to improve performance by avoiding unnecessary processing in the game mode
ggb - 5452 fix : button disappear on double click should n ' t disappear
modified constructors of LinkedHashMapCache and TCache to accept ` accessOrder ` as a parameter to enhance flexibility in cache configuration by allowing different access modes
removed redundant channel . close ( ) calls and adjusted buffer handling in ChannelEndPoint . java to streamline resource management and ensure consistent buffer operations
added validation for keyIndex and modified keyIndexBuilder instantiation to improve robustness and simplify key index creation
added a Locale import and modified exception handling in DirectUpdateHandler2 . java to ensure consistent exception handling and maintain locale consistency
make storage check - guard optional for canonicalization ( graal - 424 )
ignore non - exception dispatch block when check out - of - bounds .
do n ' t apply Controversial to disjunction in viewfilter when we ' re not in response to high variance .
replaced ` BuildTarget . copyOf ( buildTarget ) ` with ` BuildTarget . copyOf ( unstrippedTarget ) ` in multiple files to simplify code and improve readability by eliminating unnecessary parameters
refactor SqlRunner . java to improve code structure to enhance maintainability and readability of the code
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and updated related method signatures in ` FileStorageUtils . java ` to improve compatibility with larger date values and enhance code readability
rename ` knownApis ` to ` knownSdks ` and introduce a new method to retrieve SDKs to improve clarity and efficiency in handling SDK entries in the DefaultSdkProvider
fix # 248 : use confidenceprogressindicator instead of progressindicator for offer creation
updated user agent check from " Cling / " to " UMS / " in RequestHandler and UPNPControl classes to ensure correct identification of UMS services in the application
fix forge build and add iterator to tilebuilder .
added message type and updated onCreateViewHolder method to distinguish between message types to improve message handling in the crowdfunding chat interface
replaced ` memEncodeUTF16 ` method calls with ` memEncodeASCII ` in LinuxLibrary and MacOSXLibraryDL to ensure proper encoding of ASCII strings in the library names
separate out a specific conj class into a conj class to eliminate some conflict with advcl
replace the ` canvas ` parameter with an ` image ` parameter in the ` insert ` method and add drawing functionality for images to streamline image handling and enhance visual quality for better UI appearance
add a default implementation for the apply method in RefactorModule and remove the getVisitors method in AddGradleEnterpriseToMavenProject to enhance modularity and improve code readability
added methods to retrieve child elements by name in Xml . java to improve functionality for fetching child elements recursively
added " Content - Charset " header with value " UTF - 8 " in HttpSolrServer and BasicHttpSolrServerTest to ensure consistent handling of character encoding in HTTP requests
replaced hardcoded UI state with a dynamic flag for improved configurability to enhance flexibility and maintainability by allowing dynamic UI state updates based on device and layout preferences
removed the private ClientConfigurationService instance in IntrospectingTokenService . java to streamline the client service initialization process for improved functionality
updated the exception message format in HiveRecordSet . java to provide more context about the error during record reader creation to improve debugging by providing clearer context on errors during the opening of Hive split
remove the ownerId field from NodeEntry . java to simplify the code by eliminating unnecessary fields
cloudstack - 8840 : fix typo in backupsnapshotafertakingsnapshot - > backupsnapshotaftertakingsnapshot
added score calculation to the merge method in TextFragment . java to ensure consistent scoring when merging text fragments
remove dependency to digester in md4passwordencoder because it ' s not use
added a validation check for the maximumUnimprovedStepCount property to ensure it is greater than zero to prevent illegal argument exceptions during execution
fix exception when edit a file without currently open any edit
replaced deprecated ` verify ( ) ` methods with ` Mockito . verify ( ) ` in ` BDDMockitoTest . java ` and added new test cases in ` BDDMockitoTest . java ` to improve consistency and leverage Mockito ' s verification functionality
change from Thread . currentThread ( ) . getContextClassLoader ( ) to PathScanner . class . getClassLoader ( ) to ensure correct class loader is used for improved functionality
added a check to ensure the code first is not in the PojoClient to improve performance and prevent unnecessary processing of the sayHi2 method
fix log in abstractsplitbraintroxyproceduretest [ hz - 2197 ] ( # 24090 )
added null checks for logout in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure proper handling of logout scenarios to avoid potential NullPointerExceptions
implicit locus : improve output of gbasis ( )
refactor DockerComposeContainer to utilize a log consumer mechanism using a concurrent map to improve performance and readability when processing Docker logs
updated the generic type parameter in the testMapping method from Class < ? > to Class < ? > to ensure type safety and improve clarity in the method signature
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to ` ThrowingSupplier ` to simplify the creation of a supplier from an ` Supplier `
replaced ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to return a boolean indicating success or failure
fix ( http ) : fix content - type post with camel - platform - http - vertx
added methods to replace platform separator in paths with platform - specific separators to ensure consistent path formatting across different operating systems
added a null check for authorizationContext parameters before processing to prevent potential NullPointerException when retrieving parameters
replaced the load method with an throwExceptionIfFail execution to enhance error handling by throwing an exception when the library loading fails
updated SDK version from " 4611349 " to " 4514284 " and implemented new stop methods in ShadowTextToSpeech to reflect new features and enhance functionality for handling text operations in the application
fix equal and hashcode in transactionlog ( # 2175 )
added enableSqlWithoutProfile property and corresponding getter / setter methods to JdbcEnvironmentProperties , modified profile handling in JdbcEnvironmentRepository , and updated test cases accordingly to enable SQL without profile functionality for improved performance
clean up write data to prevent memory leak
fix compiler warning . ( # 7127 )
fix [ licensing ] : fix 1904 - 154 / 1904 - 01 - 01 : 00 : xx ' s format in calendar
fix issue with cachedthreadstatesgaugeset . getthreadinfo ( ) and add threadinfo with depth 0
added transaction log handling in UpdateLog and adjusted sleep duration in LeaderTragicEventTest to improve transaction management during leader elections
bukkit : update fastasyncworldedit to use pre - 1.17 for 1.17 release .
fix jetty - 9 when create a segment that have no output directory , create the output directory again
added a method to calculate normal vectors in ObjUtils and updated TriangulationHelper to use this method to improve code clarity and reduce redundancy in vertex processing
updated the JdbcAuditService to use IdentityZoneHolder for principal and identity zone ID to ensure consistency in accessing identity zones and improve data retrieval logic
updated the SpanCollector class to enhance span collection functionality to improve performance and accuracy of span collection
added a null check for the session info in AuthorizationFilter . java to ensure that session information is not null before proceeding with operations
refactor TransactionIsolationLevel for improved transaction handling to enhance performance and maintainability of transaction isolation logic
updated method names from printLVgroups to printLogicalVolumegroups to clarify the purpose of the method related to volume management
[ grid ] update test session to use the current thread .
refactor CookieManager to improve cookie handling logic to enhance performance and maintainability of cookie management
replaced the creation of an ArrayList from a loop to returning an empty ArrayList directly to simplify code and improve performance by returning an empty list directly
add a new OverviewToAllAppsTouchController to the list in RecentsUiFactory to enhance user interaction by providing visual feedback on touch inputs
replace the method ` scaleHotseatWithWorkspace ` with ` getHotseatScaleAndTranslation ` in ` LauncherState ` and update ` WorkspaceStateTransitionAnimation ` to simplify hotseat scaling logic and improve code readability
added a check for JUnitRule in the DefaultStackTraceCleaner logic to ensure elements below the JUnitRule are excluded from stack traces
[ java ] fix potential npe when copy mapped memory .
feat ( freezev2 ) : fix bug with remove balanceslistener
attempt to fix realisticrenderer ' s text color when there be no drawable
added null check for httpClientResponse in HttpClientBeanPostProcessor and updated logging calls in Issue546Tests , WebClientExceptionTests , and TraceZuulIntegrationTests to ensure proper handling of null values and improve logging consistency across the codebase
fix gl200 decoder issue ( fix # 3967 )
updated timing logic in FullDetailsActivity for episode playback to ensure accurate detection of played episodes based on last update time
well handling of elliptic node , spanish xml tree reader
clear iso when there be no dc value for it . this fix bug # 1422 .
allow reactiveloadbalancerclientfilter to override the scheme if the service be secure
remove duplicate bytebuffer allocation cause batchdispatchrequest to become unnecessary
[ gr - 24488 ] fix invalid warning about miss full path
replaced a lambda expression with a Correspondence . from method to simplify the code structure to enhance readability and maintainability
corrected the spelling of " isNonUSSupported " in multiple files to ensure accurate detection of non - English locale support
clear static analysis warning : null check be useless at this point .
add minecraftforgeclient for the improved performance of render block
added a return statement to TxCacheDB . java to improve function exit point clarity
fix : use jdk . internal . org . objectweb . asm instead of com . sun . xml . ws . asm .
refactor FastDictionary class to improve performance to enhance efficiency in data handling operations
update to make sure we do n ' t close the nio session if an exception be throw .
[ fix # 1200 ] add test data for flight event . ( # 1377 )
[ beam - 7954 ] update beam connector to disable protobuf import from vendored grpc
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration to ensure the namespace declaration is added to the correct element
[ # 11945 ] instructor : add support for instructor profile picture in feedback result page ( # 11945 )
modified the initialization of rules in DefaultPasswordValidator to use a list of rules based on the password length to optimize rule management by limiting the number of rules based on the password length
douniaberrada : change remote control command count from 50 to 20
removed JUnit import and annotation from ProxyClassSerializationTest . java to exclude the test annotation from execution
refactor code in DLNAMediaInfo to simplify thumbnail scaling logic to improve code readability and maintainability by using consistent formatting
remove speculativeguardmovementphase optimization since it be not need .
added a check to ensure that the authentication manager is not overridden when the specific bean definition is not present
modify the handling of forwarded addresses to support both IPv4 and IPv6 addresses to ensure proper handling and processing of IPv6 addresses in forwarded requests
set the length of the StringBuilder to zero in ConsoleReader . java to avoid unnecessary line breaks during console output
ww - 3441 make allow / disallowed role protect and add javadocs
update OpenIDE - Module - Specification - Version from 1.48 and 2.8 to 1.55 , and adjust project configuration to reflect the latest version releases of the module
hbase - 27180 set the buffer size for ssl handler in hbase _ server _ netty _ tl _ wrap _ size ( # 4671 )
Updated multiple Java files to reflect changes in package names to Ensure consistency and accessibility of classes across the project
modified FixedLengthTokenizerTests to remove dependency on JUnit ' s TestCase and added new test methods for IncorrectLineLengthException and IncorrectLineLengthException to ensure correct handling of incorrect line lengths and improve test coverage
refactor OpenSamlAuthenticationRequestFactory to allow dynamic protocol binding based on defined constants to enhance flexibility in configuring the protocol binding for SAML2 authentication requests
modified DepthController to use AttachedSurfaceControl for applying SurfaceControl transactions to enhance functionality to utilize the current rendering context for surface control transactions
updated version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure compatibility with the latest release version
hbase - 27569 use hbase . region . table . create instead of hbase . write . ( # 4617 )
updated sublist operation in TsFileManagement . java for clarity and correctness to ensure proper functionality when accessing the unSeqMergeList
camel - 3223 : fix genericfileconverter to support fileinputstream .
added a login method to ShardManager and modified DefaultShardManagerBuilder to conditionally execute login to improve flexibility in authentication during shard manager initialization
removed unnecessary whitespace in the DeleteGlobalRef function call to improve code readability and maintain consistency
updated the join table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to better reflect the purpose of the registered service
updated HttpSender to check if the response completion is marked before terminating the response to improve handling of response completion in case of a failure
[ # 7762 ] instructor : show comment : show only for user student in edit question ( # 7762 )
added linked profile handling and linked profile checks in BMPImageReader . java to ensure correct color space settings for different operating systems
updated the range parameters for ` setSimpleCuboid ` and ` setSimpleCuboid ` methods in ` ClassicPlotManager . java ` to ensure correct placeholder logic for plot world points
attempt to fix nightly build ( issue # 511 ) .
refactor gridPresenter initialization to use a separate method for setting grid sizes to improve code readability and maintainability by reducing duplication
change to true in contributionslistfragment to fix bug ( # 4759 )
added a test for skipping a specific query in DistinctPrefixFilterIT and modified scan handling in BaseResultIterators to ensure proper filtering behavior during query execution
pdfbox - 4068 : added test for acrobatcheckbox group property in getoptionvalues ( )
added a method to retrieve the last modified timestamp of a file to enable checking file modification times for better resource management
updated the condition in HiveIcebergStorageHandler to include a check for metadata tables to ensure that metadata tables are validated correctly during the operation
fix # 355 - auto - fill should not use currency other than the default currency
changed exception handling from IOException to Throwable in WriteFlusher . java to capture a broader range of error conditions
added a start - enter animation flag in the IconRecentsView class to handle task item range changes based on the current state of content fill animation
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to store the active key ID for better tracking and management
[ zeppelin - 5388 ] fixed name of action label and method in sendmailactions
change ` isActive ` from non - volatile to volatile to ensure visibility of changes to the value in the socket server
replaced ` isDesc ( ) ` method with ` isAsc ( ) ` in multiple files to standardize the method naming for clarity and consistency in order by operations
avoid classcastexception when try to cast to char in a string
added a check for the ownCloud application name in the DisplayUtils . java file to ensure that the app is displayed accurately based on the application context
hbase - 7930 hbase . rootdir . perms should be set to 700 on start ( stephen yuan jiang )
fix ( chore ) camel - jakarta and camel - javax - web - exchange locale mismatch
8196609 : improve javadoc for java . time . instant . getepochsecond
updated the default state format from int to String in multiple classes to ensure consistent state format handling and improve data type consistency
removed conditional type specification from logging statement in CentralAuthenticationServiceImpl . java and updated condition in AbstractTicket . java to streamline logging for improved readability and correctness
ignore illegalargumentexception when load pmd file - patch by stu hood ; review by jbellis for cassandra - 179
fix the check for file extension in the resource set to ensure that the file name ends with a slash .
updated PluginParameterExpressionEvaluator constructor to include PathTranslator and added checks for file paths to improve path handling and ensure correct behavior for file paths
[ beam - 1348 ] move protobuf coder registration to beam - extensions module ( # 16901 )
modified ` HqlQueryRenderer ` to update ` tokens . add ( new JpaQueryParsingToken ( ctx . op ) ) ` to include a ` false ` parameter to control the parsing behavior of queries when dealing with signed integers
updated LaunchLugHandler and RailGuideHandler to use lug instead of lugFore instances and adjusted separation calculations to improve clarity and functionality in managingLaunchLug instances and ensure correct separation calculations
added a method to retrieve the nonce factory in BitmexStreamingExchange to provide a default implementation for nonce retrieval
( chore ) camel - mail : replace string concatenation with parameterized logging
[ java ] default timeout for ` driverconductortest ` to be millisecond .
initialize loaded classes to false in ScanSpec . java to disable unnecessary class loading during scanning
added a call to grab focus on the search field in FullTextSearchPanel . java to ensure the search field receives focus after processing
copy the nio params to make it easy to read ( # 2362 )
replaced an assertion in StatementTest to check for a random value to enhance test stability by skipping false positives in random scenarios
updated the assertion error message in TestSolrConfigHandler . java to include server information to improve debugging by providing more context about the expected and expected values during assertion failures
replaced HttpMethod and related mock objects with ServerHttpRequest and ServerWebExchange mocks in CsrfWebFilterTests to enhance test reliability by using the appropriate reactive types for server requests
added density handling to regex pattern in FilterResourcesStep . java to improve clarity and accuracy of drawable descriptions based on density
added a buttonUIID variable and updated UIID methods to use a prefix for better clarity to enhance code readability and maintainability by centralizing component handling logic
removed unnecessary DENSITY _ 600 check for displayInfo rotation to simplify the condition for better readability and maintainability
8215029 : [ backout ] c2 : assert ( ! = 0 | | ! = - 1 ) fail : wrong return value of arraycopy . clone ( )
solr - 6157 : awaitsfix replicationfactortest until we can make the build work
fixed - rqueue . get ( ) method may return null if requestid be null . # 4370
simplified the condition for updating credentials in FileDownloader . java and FileUploader . java to improve code readability and maintainability by reducing redundant checks
modified the closing logic in Compactor . java to handle null scanner gracefully to ensure proper resource management by closing all store file scans when no scanner is available
fix statistic statistic on unknown network ( # 13177 )
added a nonce parameter and claims retrieval in TokenMvcMockTests to ensure correct nonce value is used for token claims during testing
refactor various chart and plot editor classes for consistency to improve code maintainability and readability
fix issue with layer pane not be set in some case . http : / / github . com / codenameone / codenameone / issues / 3485
removed unnecessary imports and added a new method ` maxY ` to handle height calculations to improve code clarity and ensure proper functionality based on the owner ' s height
fix # 3181 : database login dialog should not close automatically when database be not connect ( # 3186 )
replaced a static final string DOCKER _ COMMAND with a reference to Platform . DOCKER _ COMMAND in DockerTestUtils . java to ensure consistent usage of the Docker command across different platforms
refactor TestIsartorValidationFromClasspath to improve null safety and readability to enhance code stability by ensuring the InputStream is not null before proceeding with further operations
updated TaskbarView and CellLayout to utilize a configurable color for folder leave behind drawing to improve flexibility by allowing different color settings for folder background effects
report an error message when the version do n ' t match canary
bug 10789 : identityproxy table name validation : do n ' t throw when the table name be null
added new module persistent lists and corresponding methods to StartArgs . java to allow configuration of module persistence settings for improved control over the application
updated argument validation logic in GeminiMarketDataService . java to ensure correct handling of additional arguments and improve error messaging for last trade time
replaced HashSet with LinkedHashSet for questions in VerifyPasswordResetRequest to ensure consistent iteration order of questions during verifying password reset
add a simple tester response that logs the status of the map realm .
exclude multiple setup packages from AuthCheckFilter to improve efficiency by avoiding unnecessary dependencies
[ flink - 14022 ] [ runtime ] improve scheduler . postdelayed runnables to avoid run out of sequence
updated method signatures to use varargs instead of arrays to improve code flexibility by allowing variable argument length
modified XMLParser to handle end - of - stream conditions to improve robustness by preventing null pointer exceptions during reading
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address issue where text overflow issues occur on specific page sizes
adjusted padding values for the arrow in DeepShortcutsContainer to ensure proper alignment based on icon positioning
remove extraneous printstacktrace ( ) call from interrupted exception
added a refreshView parameter to the updateThumbnail method to improve the handling of task refresh during gesture state changes
pdfbox - 2147 : use correct package name to avoid package - private dependency .
[ 4566 ] allow empty in domain name ( # 4566 )
removed redundant ` this ` references from multiple references in various activities to improve code readability and maintain consistency across the codebase
adjusted the maximum document ID handling in SizeBasedDocIdSet and related classes to improve clarity and efficiency to ensure consistent document ID limits during processing
improve file dialog when user click on an exist file ( patch from david mollitor )
removed minimum widget span and adjusted page count handling in AppsCustomizePagedView . java and AppsCustomizeTabHost . java to optimize widget performance and improve code maintainability by centralizing page count updates
[ fix ] fix update of component bound when initialize flightconfiguration
fix for camel - 4406 : fix typo
updated DateTimeFormatter instantiation to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3952 ] added permission filter to object endpoint .
added a test method to verify the behavior of the StarTreeConfig builder when missing parameters are missing to ensure that the builder correctly handles missing dimensions and metrics in the builder
updated the ` recipientList ` method signature to accept an additional parameter ` recipient ` to enhance flexibility in recipient handling based on the context
modified InlineLayoutBox and HoverListener to improve parent node handling and repaint logic to enhance UI rendering efficiency and maintain visual consistency during modifications
replaced the detection of authentication methods with an operation service implementation to streamline the authentication process and improve service management
