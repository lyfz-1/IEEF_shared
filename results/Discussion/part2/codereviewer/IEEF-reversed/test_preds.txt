refactor SocketAppender initialization to use setRemoteHost and setPort methods to improve clarity and encapsulation of socket configuration
refactor header handling in BasicAuthPlugin to use a dedicated method for clarity to improve code readability and maintainability by reducing duplication
updated the method call to retrieve the message length in ManyToOneRingBuffer . java to ensure correct message length retrieval from the buffer
cloudstack - 3549 : fix npe when calculate overcommit ratio for vm detail cpu / ram
added a constructor to ShadowPaint that initializes and retrieves the anti - alias flag to enable the creation of ShadowPaint instances with specific flags for better
updated the title of the MassSetFieldsDialog to use a localized message to improve user experience by providing clearer context for the dialog '
tweak detection test to not fail if eclipse be not available
added a check for non - empty nonce in ` getNonce ( ) ` and modified authentication scheme handling in ` NettyAsyncHttpProvider `
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` class to utilize it for handling socket connection events to improve
refactor conditional statements in OrcEncodedDataReader . java for clarity to improve code readability and maintainability
updated filter condition in HomeConnectBridgeHandler to check if the thing is enabled to ensure only active things are processed in the filtering process
added null checks before removing and adding policies in AuthorizeAdminServlet to prevent potential NullPointerExceptions during role addition
updated assertions in DefaultTypeAdaptersTest and ObjectTest to use regex instead of conditional checks to improve code readability and maintainability by simplifying
added JSON serialization and logging for DAG information in TezTask . java to enhance the functionality by providing detailed context and description for the D
bugfix # 216331 , add getheaptime ( ) method to hprofheap and use it in computesummary ( )
replaced RxJava2Tasks with CommonsApplication for fetching upload count to streamline the upload count retrieval process and improve code maintainability
removed unnecessary checks for database lock mode in MVTable . java to simplify the lock logic for better readability and performance
[ issue # 5271 ] fix commitlog offset overflow bug ( # 5272 )
added a check to mark folder info as open if it is marked as open to ensure that the associated folder is not marked as open when it
add a test to verify that PGProperty names are sorted in ascending order to ensure that PGProperty names are returned in the correct order during sorting
removed the constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN from Common . java to streamline the
updated ` supportsDrop ` and ` getUninstallTarget ` methods to use ` ItemInfo ` instead of ` Object ` to improve type safety and
updated assertion in RequestBuilderTest to use getMessage ( ) method instead of hasMessage to improve clarity of error message validation
replaced hardcoded TAG _ RETAINED _ FRAGMENT with dynamic retrieval of NearbyMapFragment and NearbyListFragment to
renamed the parameter ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor to improve clarity and consistency in
added a configuration option for sending zero anomalies in EmailConfiguration . java and modified EmailReportJob . java to check if the email
[ hotfix ] [ kafka ] fix npe in flinkkafkaconsumerbase # open
added user and geofence methods to the DataManager class to enable retrieval of user and geofence data from the database
added a constructor to the BlockingResponseListener that accepts a maximum length to improve flexibility in handling response size limits
defer the deserialization of the message to an async thread to be able to handle more incoming , still i can send more than i can
replaced System . out . println with logger for snapshot paths and added a try - finally block for resource cleanup to improve logging clarity and
updated URLs in test assertions from " / " to " example . com " in LoginSAMLAuthenticationFailureHandlerTest . java to ensure consistency in
updated test cases in ConfigMetadataProviderTest . java to improve test coverage for configuration handling
updated the ` updateNoteReminder ` method to use ` noteToUpdate ` instead of ` note ` for clarity to improve code readability
refactor directory stream filtering to use a custom AcceptAllFilter class to improve code readability and maintainability by encapsulating the filter logic
refactor JdbcTestDataSet to improve code readability to enhance maintainability and facilitate future updates
added ClassNotFoundException handling to the lookupType method in CompilerToVM and HotSpotJVMCIRuntime classes to improve error handling and provide clear
refactor Docker image name validation into a new utility class to improve code readability and maintainability by centralizing tag validation logic
updated the dialog message for login failures from username and password to incorrect credentials to improve user feedback by providing clearer feedback on authentication failures
fix issue with the autowire on the contact list when the contact list be empty
added tests for SAML configuration properties in SamlIDPRefreshMockMvcTests to ensure correct behavior of SAML configurations across different identity zones
added checks for non - numeric items in the ComparableVersion class and implemented a new test case for Mng 7644 to ensure proper handling of
updated mode settings and adjusted return values for width and height in Sheet . java , and added padding and margin properties in UIManager . java to
updated package structure and imports for ParallelUniverse and related classes to organize code under the internal package for better maintainability and clarity
updated method handle assignment and simplified constructor invocation in LocalCacheFactory and NodeFactory to improve code readability and maintainability by reducing redundancy
updated the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve the
added functionality to display self - loops in the graph preview to enhance user interface by providing visual representation of self - loops
rename ` ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 ` to ` ALLOW _ TVM _ SOLIDITY _
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule ` to improve clarity and consistency in method naming
added a call to set the drag handle indicator translation Y to zero in AllAppsTransitionController to ensure the drag handle indicator is centered on the
removed unnecessary logging statements in CollectionViewer , CommunityViewer , and ItemViewer to streamline log output for better readability and performance
added clarification on filter pushing behavior during query optimization in HiveConf . java to improve understanding of filter management during query optimization
added an assumption to the ScanningAppProviderRuntimeUpdatesTest to skip tests on non - OSX due to build server issues
added Maven bundles for Jetty ALPN client in TestJettyOSGiAnnotationParser . java to enable support for Jetty ALPN
fix for act - 188 : do n ' t retry a job if it ' s already retry
refactor transaction handling logic to improve code readability and maintainability
replaced ` @ AddToRuleKey ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to exclude
simonstewart : make the firefox custom profile launcher work well on linux .
replaced putIfAbsent with a conditional check for key existence in colFamToDynamicColumnsMapping to improve code readability and avoid potential race conditions
[ hotfix ] [ runtime ] fix checkstyle violation in util module
added a check for client version and view type in MetaDataEndpointImpl . java to ensure compatibility with older client versions that do not support view types
added logic to update student cascading when instructor be add to course
updated import statement for TestCellReference in AllXSSFTests . java to use the correct TestCellReference class to ensure compatibility with the
add a check for block hardness in the lenspiston . close # 182
added a new file ` LongPointerPressTest3049 . java ` that implements a UI component with network error handling to facilit
remove inlining check from partialevaluator , since it ' s not inlined
refactor code to use ternary operator for null checks in BaseBuilder and XMLConfigBuilder to improve code readability and maintainability
simplified the condition in ListBlockParser and added a new test for deeply indented list in SpecialInputTest to improve code cl
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it to improve code reusability and
ignore webfluxnotincludetests until http : / / github . com / spring - cloud - gateway / issues / 1070 be fix
[ wasm ] remove unused ` ` tojsstring ( ) ' ' method from testcaselogger
reformatted code in RouteStartupOrderLastTest . java to improve code readability and maintainability
added a condition to check if the video format is a video before processing web subtitles to ensure web subtitles are only processed for video formats
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing the use of TLS algorithms
server : do n ' t allow to start vm from a local storage pool if the hypervisor type be different from the local storage pool
refactor cache entry logging to include cache entry details to improve logging clarity and traceability for cache operations
add option to skip model update after manage dependency
added a test for sending a PendingIntent with a request code in ShadowActivityTest . java and implemented the send method in ShadowActivity . java
updated the rendering behavior of the RocketFigure3d class by enabling and disabling the FBO and improving the overlay graphics
added synchronization to the ` HydrawiseAccountHandler ` and ` HydrawiseControllerHandler ` classes to ensure thread safety when modifying the `
added a ` @ BeforeClass ` method to ` TestCoreAdminApis ` to skip tests on Java 9 due to ` EasyMock `
updated year retrieval to use ` get ( ChronoField . YEAR _ OF _ ERA ) ` instead of ` Math . abs ( ) `
fix possible npe when disconnect the jabber connection
updated the string concatenation for commit IDs in TxnHandler . java to ensure correct retrieval of commit IDs from the database
replaced ` ByteChunk ` with ` ByteBuffer ` for improved performance and clarity to enhance performance and maintainability of the BufferedInputFilter
added a ` toSync ` method to ` AsyncUtils ` and created corresponding tests in ` AsyncUtilsTest ` to facilitate asynchronous
added ActionGraphBuilder to multiple compiler factories and updated related methods to enhance dependency management for action graph building
added a test for uploading files with hidden file input in UploadTest . java to ensure that the upload functionality works correctly with hidden input elements
removed redundant import of ` java . util . Date ` and streamlined exception handling in ` SQLManager . java ` to improve code clarity
added a check for the existence of a file before returning the local Maven directory to ensure the method returns the correct local Maven directory if the file
apps - 2633 : set algebra label invisible as soon a hidden prefix be
fix : nullpointerexception in ctelementimpl # getmetadata ( ) ( # 3748 )
replace setflags ( ) with addflags ( ) in defaulttrackoutput
do n ' t reorder if it ' s already sorted by id
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added null check for backupFolder before logging expiration log to avoid potential NullPointerException when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` that demonstrates the use of ` Array . newInstance ` with a
added @ AddToRuleKey annotation to toolType in ClangCompiler and GccCompiler classes to ensure toolType is included in the rule
replaced hardcoded value of 10000 with a constant PINCODE _ TIMEOUT in PinCheck . java to improve code readability and maintainability
[ prometheus ] fix regression in prometheus exemplar sample
removed @ Ignore ( " requires mongodb server " ) annotations from multiple test classes to enable tests that require MongoDB server for execution
fix a compile error in the unit test of consumeuncompressedcompressedmessage
updated condition in MetaDataSource to check if the table is an artificial table to ensure proper handling of non - artificial tables in
updated file status checks from checking if a file is a directory to checking if it is not a directory to improve clarity and correctness of
updated session attribute handling logic in MongoSessionManager . java to improve null and empty attribute checks to enhance robustness of session management by ensuring that
now call setsizefromlayout ( ) rather than fix to a 320x240
replace direct reference to ` _ stopping ` with a local variable ` CountDownLatch ` to improve code readability and prevent potential null pointer exceptions
removed unnecessary whitespace in method parameters in HuobiStreamingService . java to improve code readability and maintainability
camel - 16462 : defaultmessagelistener should use system . currenttimemillis ( ) instead of stopwatch
refactor exception handling in DelayedMonoPublisherTest to use a lambda expression to improve readability and maintainability of the code
updated the assertion in WebsocketTest to check if the expected error is not an instance of WebSocketHandshakeException to improve error handling by providing a
refactor AllAppsTransitionController to use View . OnLayoutChangeListener instead of an anonymous inner class to improve code readability and maintainability by
updated variable names from " theHandler " to " handler " for consistency to improve code readability and maintainability by using a more descriptive
added support for ' default - output - channel ' attribute on the < router / > element in the xpath - router - parser ( int -
changed cacheSeconds from an integer to a string representation in MessageBundleProperties . java and updated cacheSeconds handling in CasCoreWebConfiguration . java
updated the version string from " 3.0 . 0 - rc1 " to " 3.0 . 0 " in multiple test files to
removed the append method call in ByteBufferPool . java to streamline the code by eliminating unnecessary operations
added a check for the presence of " alt - rt . jar " in the boot class path to warn users when " alt - rt .
updated usernames in JdbcScimUserProvisioningTests to use uppercase instead of lowercase to ensure consistency in user identification and improve test reliability
replaced ` Arrays . asList ` with a ` List ` for managing options in ` FlightRecorderProfiler . java ` to improve flexibility
added a method to check if the stream is empty in WebCamInputPanel and modified the dialog behavior in WebcamInputDialog to ensure
added a condition to check if the content view has content before proceeding in HttpParser and implemented a new test for chunked transfer encoding in Proxy
( chore ) camel - atmos : fix typo in documentation
added support for " printf " and " print " target method names in Java2TypeScriptAdapter . java to enhance functionality to support additional print
added a new file TestCapacityUntilGCWrapAround . java to test capacities on 32 - bit platforms to ensure that increasing metaspace
updated package - info . java files in mmm and ppp packages to ensure consistency and clarity in package documentation
update endTime calculation logic in SamplingStatCalculator . java to ensure endTime is updated correctly when the resource is stamped at the start time
added unit test base on user forum issue
tmi - jpeg : do n ' t throw exception on bad icc profile chunk
fix terra shatterer rod cause reequip animation
removed configuration bindings from JoobyModule and added a method to ignore specific entries in SpringModule to optimize bean registration by avoiding unnecessary
use container . getparentclassloader ( ) instead of thread . getcurrentclassloader ( ) . getclassloader ( ) .
add support for additional nameupdater . properties file ( jmeter - 1 . x )
added initialization of the ` started ` variable in ` EllipsoidRegionSelector ` to ensure that the ` started ` state is correctly set for
updated URLs from " http " to " https " in JavaSEPort . java to enhance security by using a secure connection
[ geos - 10368 ] validate sortby attribute in getfeature request
updated null check from ` equals ( ) ` to ` null ` in ` AbstractJdbc2DatabaseMetaData . java ` to improve code clarity
added graphics configuration and updated image handling in DiagramGenerationTest . java to ensure consistent image rendering and improve test reliability
add check for null sideddelegate in fmlcommonhandler to prevent npe .
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
make the test more reliable by use asserttrueeventually instead of sleep
added methods to tokenize and join tokens in StringUtil . java to improve tokenization functionality for better string manipulation
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5278 ,
refactor command parsing and highlighting logic in SystemHighlighter . java to improve code clarity and ensure correct command handling during parsing
updated VERSION and VERSION _ DATE constants to " 1.0 . 1 - SNAPSHOT " and set VERSION _ DATE to " PENDING " to
updated buffer position setting to use dimensionSize instead of idx to ensure correct buffer positioning based on dimension size
added support for a new request for drag - and - drop state in the Quickstep and System UI components to improve drag - and - drop
[ log4j2 - 1349 ] add test for socket traffic class in java 7
pdfbox - 4071 : add tlsv1.2 to the list of supported cipher
updated description text retrieval from place . getDescription ( ) to place . getLongDescription ( ) to improve clarity of displayed place descriptions
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the " value " field
updated HqlQueryRenderer to handle multiple reserved words and added schema scoping support for function names and schemas to improve query parsing accuracy and support
updated the null check message from " d " to " s " in SubscriptionHelper . java to improve clarity by providing a more descriptive
refactor Parser class to improve code readability to enhance maintainability and facilitate future feature additions
modified the ` offsetStreamIndex ` method to include a new parameter ` indexStartsAtOne ` and adjusted its logic to ensure correct stream index
tika - 697 : add x - cpio to the mime type , and add it to the test file
[ hotfix ] [ table - planner - blink ] remove getmonotonicity method from sqloperatortable
added equals ( ) , hashCode ( ) , and toString ( ) methods to OneTimeTokenAccount and OneTimeToken classes to enhance object comparison
added a condition to check if the assistant is not launched when fling to ensure proper handling of touch events when the assistant is not launched
added a new class SolarisShortDSA for generating and verifying a DSA key pair to address a specific Solaris
added toggleSearchLabel ( false ) method to ListFragment . java to disable search label functionality for improved user experience
cloudstack - 6333 : fix the bug of createvolume api - use lock instead of find in volsDao .
refactor mConnection to a new DetailsServiceConnection class and update its initialization logic to improve code structure and ensure proper cleanup of the ServiceConnection
replaced the handling of SSLPeerUnverifiedException with an AtomicReference for error reporting to improve clarity and maintainability of error handling in
added an equals method to the ConjunctionScorer class to enable comparison of Scorer objects based on document equality
added a null check for the item in bindItems method and logged an error message if it fails to improve error handling and debugging for item binding
fix race condition in cpmemberaddremoverest by use getmetadatagroupid instead of initial _ metadata _ group _ id
updated cache size comparison and added logging for cache shrinking to improve cache management efficiency and enhance debugging visibility
updated API path from " / api / v2 " to " / api / v3 " and modified order properties in various classes to align
added a new method ` empty ( ) ` to the ` freenect2 ` class to provide a way to check if the object is
drill - 8023 : drill - 8416 : fix memory leak when read empty dictionary page
updated argument length from 2 to 3 and added validation for market data type in SerumStreamingService . java to ensure correct input validation and improve
add config to disable the animation when an item be charging on top of a mana pool .
[ java ] do n ' t rely on ischallenged in aeroncluster . connect to avoid deadlock .
do n ' t swallow interrupted exception in waitforhelper
replaced conditional checks for directory creation with an assumption for filesystem support in DefaultServletTest . java to ensure the test only runs on non -
removed duplicate injection of dialog and open screen styles in ResourcesInjectorFull . java to improve code clarity and maintainability
updated file handling in BaseLiquibaseTask and DBDocTask to use FileResource instead of String to improve compatibility with the Apache Ant
use getx ( ) and getx ( ) in isequal ( ) to avoid possible npe
removed TODO comments in LongConcurrentLRUMap . java and made CacheEntry class final to improve code clarity and enforce immutability of fields
camel - 14284 : quote the literal in the resource configuration so that it ' s easy to read
updated the KRB5CCNAME environment variable handling in FileCredentialsCache . java and modified the ccache argument handling in EmptyCC . java
corrected the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to ensure
enable fast sync by default if there be insufficient peer
danielwagnerhall : fix checkstyle issue in java / awt / window / webdriver / webdriverservlet . java
do n ' t expand " AreEqual [ Segment [ x , y ] , Segment [ z , w ] ] " format expression for segment
added a check to clear pending rendering operations when the implementation is minimized to optimize rendering performance by avoiding unnecessary operations when the implementation is minim
do n ' t sleep if the test have pass the deadline
fixed continuously update delay time window in write - behind queue
set the icon of a JLabel to null in GroupTreeCellRenderer to improve visual clarity by removing unnecessary space
updated test cases in TestBlacklistAwareRedirectResolver to use setStrictMatch ( false ) instead of setStrictMatch ( true ) to ensure correct
added IO import and modified test cases in ShutdownMonitor and ShutdownMonitorTest to improve resource management and enhance test coverage for the ShutdownMonitor functionality
replace autoCommitMemory with 2 * moveSize and adjust related chunk fill rate calculations to improve memory management and ensure correct fill rate handling
refactor serialization logic to use a local variable for class type to improve code readability and maintainability
[ hotfix ] [ runtime ] move componentclosingutils to coordination package
server : destroy volume when vm transition from error state to error state
server : fix npe in getipv6rangefromcidr method ( # 5380 )
updated class and variable names from ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderConfigurer ` to standardize naming conventions
increased the timeout duration for the getLeaderRetry method from 15 seconds to 30 seconds to improve reliability of leader retrieval in tests
added logging functionality and simplified error handling in multiple parameter classes to improve error reporting clarity and facilitate easier debugging
updated drawing coordinates in URLImage . java from - x and y to - y to correct the positioning of the image to ensure the image
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
do n ' t throw indexoutofboundsexception if the item be empty
[ hotfix ] [ stream ] add exception to streamtaskexception in streamconfig
refactor tag processing logic in Preprocess . java to improve clarity and efficiency to enhance readability and maintainability of the code
updated the formatting of the ` read ` method in ` MessagePack . java ` to improve code readability and maintain consistency
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a way to define
do n ' t encode empty extension list ( fixes # 489 )
updated string splitting in ` Artifact . java ` and ` LibraryManager . java ` to use backslashes and improved null checks for artifact extraction
added an alias for the " node _ popup _ scripting " menu entry in ScriptingMenuEntryVisitor . java to enhance clarity and
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants in OverviewActionsView . java
camel - 14284 : camel - jms should use getout ( ) instead of getout ( ) to get jmsmessage
[ hotfix ] remove unnecessary ` ` throws ioexception ' ' from test method
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java to remove obsolete components to streamline codebase
updated ` __ content ` , ` __ contentETag ` , and ` __ icontent ` variables , and added a new ` MicroServlet `
fix onsubscriberedo to use backpressureutils . getandaddrequest ( ) and add unit test for repeat and distinct
added logging capabilities and improved error messages in SpeedmentImpl . java to enhance debugging capabilities and provide insights into component lifecycle events
add a new file LoadDSpaceOAIConfig . java to initialize the DSpace OAI configuration to enable dynamic loading of the application configuration
updated StoreScanner to handle null keys and row retrieval logic , and modified test cases in TestWideScanner to enhance robustness and improve test coverage
camel - 16462 : camel - test - jmx should be enable and disable jmx if not use .
replaced hardcoded ' / ' with a constant for the package separator in SourceLineAnnotation . java and updated source path handling in SourceCode
added YARN binary path handling and application info printing in HiveConf and RemoteSparkJobMonitor classes to improve configuration flexibility for YARN
added support for maria database connections in DbConnectionManager to ensure compatibility with both MySQL and Maria databases
[ hotfix ] [ log4j2 - 1348 ] fix splitlogmanager # split ( ) for empty log directory
added a new file ExecuteAndReturnStringTest . java to implement a test for validating network error handling in the application
added a new file InvokespecialInterface . java that implements an interface and invokedynamic method to demonstrate the use of invokespec
[ hotfix ] [ runtime ] fix checkstyle violation in evictingboundedlist
do n ' t set turncosts if we do n ' t need them
added a condition to check if the style ' s backgroundDisabled is not null and validated selection to ensure that the selection cannot be negative to prevent
added a null check for the method name in RpcServer . java to ensure proper error handling for unsupported operations
updated the calculation of hotseat cell size and icon center in TaskbarViewController . java to improve layout consistency and visual appearance of
updated the way partition values are constructed in ExpressionTree . java to simplify the code and improve readability by directly accessing partition values
fix serialization of namedtaskdecorator and taskdefinition for v4.1
updated the directory retrieval from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` to ensure the correct directory is used for the
changed the boolean value of the ` equal ` variable from ` false ` to ` true ` and updated the conditional check for display mode equality to
pdfbox - 4892 : fix latex conversion for high - codepoint unicode character
added ISO control character handling in OAIDCCrosswalk . java and Item . java to ensure proper formatting of ISO control characters to improve
danielwagnerhall : fix for npe on back navigation
added a clear button to the DataBrowser class and modified the BookmarksPanel class to exclude the BOOKMARKFILE _ EXTENSION check to enhance
updated the base URL construction method in OAuth2AuthorizationRequestRedirectFilter . java to utilize UrlUtils for better URL handling to improve code cl
updated date assertions in SoftAssertionsTest to use parseDatetime instead of Date to improve clarity and accuracy of error messages in assertions
modified the adaptOrders method to include a reverse parameter and adjusted limitOrders initialization to enhance order adaptation functionality by allowing for reverse order ordering
delombok now print ` ` var var ' ' instead of ` ` var var ' '
simonstewart : fix the build by remove unused import
updated Configuration initialization to set the default value to false and removed conditional logging for overriding Hive configuration properties to improve configuration flexibility and reduce unnecessary logging
changed the method call from ` super . drawChildren ( batch , parentAlpha ) ` to ` super . draw ( batch , parentAlpha )
added unit test base on user forum issue
use the engine ' s tomcat base property instead of the global ' s one
added tests for retrieving the best date - time pattern based on the locale in ShadowICUTest . java to ensure correct behavior of ICU '
updated the color code mapping in PlotSquared . java to use a different color scheme to improve the visual appearance and readability of the plot
added ZuulProperties dependency and modified constructors in TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration to enhance configuration management
tika - 2348 -- add test for time zone in fontparserstest
added new files ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to use ` getBuildTime ( ) ` to
updated the calculation of ` xDist ` to use ` Math . abs ` to ensure that ` xDist ` is always non - negative for
deleted the GUIRWTester . java file to remove unused code that is no longer needed in the project
removed nullable annotations from constructors and methods in LazyMessage and StandardSubjectBuilder to simplify code by eliminating unnecessary null checks
updated the error message format in TestStream . java to include additional parameters to improve clarity of error messages for better debugging
move markup - related classes from org . thymeleaf . thymeleaf . templateparser to org . thymeleaf .
added a test method for XPath string evaluation in XPathTest . java to ensure correct parsing of XPath strings in the evaluation process
[ hotfix ] [ future ] add miss @ nullable annotation to futureutils
add warn if invokedynamic be not resolve during call - graph construction .
updated email addresses from " myfakeemail @ gmail . com " to " myfakeemail @ example . com " in ContextTest .
updated HTTP response handling in HttpConnectionTest . java and modified URI comparison in URIUtil . java to ensure correct HTTP status code is returned for
added the ` getColumnDataType ` method implementation in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a
fix : throw unsupportedoperationexception in async and sync client interface ( # 3365 )
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
replace long startTime with Instant for better time handling to improve performance and readability by utilizing Instant instead of long
added version handling for media info parsing in LibMediaInfoParser . java to ensure compatibility with newer media library versions
added methods to create proxy instances for IdeaDependency classes in ProjectReader . java to improve dependency reflection handling for IDE plugins
added a new ` SerialHeap ` class and updated ` CollectedHeapName ` to use it instead of ` GenCollectedHeap ` to
added multiple @ SuppressWarnings ( " serial " ) annotations in GsonTypes . java to suppress serialization warnings in the code
change mouse wheel event to use mouse . getposition ( ) instead of mouse . getposition ( )
datamongo - 1608 - fix npe in findbyfirstnameignorecase when parameter be null
[ hotfix ] [ table - common ] fix incorrect return value in maptypeinfo . equals
added a new method ` retrieveByIssuer ` to ` XOAuthProviderConfigurator ` for retrieving active providers based on issuer to improve error handling for
pdfbox - 4892 : fix parsing of cmap with poor whitespace
refactor service handling in ContactsBackupJob to use OperationsService for file expiration to improve code organization and ensure proper binding and unbinding of
refactor constraints handling in ` Attr . java ` and add new classes ` T6938454a . java ` and ` T69384
add accountid . isconfighidden ( ) method and use it to check if the account be hide .
added a check to log an error message when the number of supported display bounds does not match the existing display information to improve debugging and monitoring of
replaced ` SchemaUtil . getSchemaName ( ) ` with ` schema . getSchemaKey ( ) ` in ` PMetaDataImpl . java `
[ web ] fire passive login on click instead of on load
added a new file Box2DTest . java and updated references in GDXTester . java and JoglApplication . java to implement
patch by jbellis ; review by brandonwilliams for cassandra - 1522
[ hotfix ] [ network ] set default buffer request timeout to 5 minute
added support for the gapic generator in the speech - related components to enhance the functionality and usability of the speech client
added help button and help action to openoffice panel to provide users with easy access to the help page
fix ( netty ) : add child option to configure netty tcp nodelay
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceFundingHistoryParams to use a wildcard return type to
refactor class loading logic to use a transient Class < ? > reference to improve performance by avoiding repeated calls to getClassName ( )
refactor connection handling and response redirection in DecodeServlet . java to improve error handling and streamline image decoding process
added a method to convert null handling to QueryDSL ' s NullHandling and created a new integration test for it to enhance query flexibility and
added null check for the actor in ParallelAction and modified action handling in SequenceAction to ensure actions are only processed when the actor is not null
refactor ( cttypetest ) : fix checkstyle violation in cttypetest . java
added synchronization around accessing shared data structures in HDFSEventSink to ensure thread safety during concurrent access to shared data structures
added a new interface ` Issue888 _ JavaI ` and a corresponding test class ` JJ ` , ` JK ` , and
added functionality to revoke an existing agent certificate in CertificateManager . java and created a corresponding test in CertificateGenerationTest . java to enhance certificate management
added a check for HTTP 204 responses in AbstractHttpTest and implemented a test for WriteBodyAfterNoBodyResponse in HttpServerTestBase to ensure
added error handling for script engine loading in ScriptTransformer . java to ensure compatibility with Java 6 and improve error reporting for script evaluation failures
updated METASTORE _ CONNECTION _ POOLING _ TYPE to include DBCP and HikariCP configurations to enhance connection pooling flex
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added file lock and unlock functionality to the FileMenuFilter and OCFileListFragment classes to enhance user experience by allowing toggling of file
updated versioning information in mmm and ppp files to improve clarity and maintainability of the codebase
clear endpoint cache when update keyspace
refactor synchronization logic in Locks . java to use a dedicated waitForState method to improve code readability and maintainability by centralizing wait
updated method signatures and return types to use ` SkylarkRuleContextAttr ` instead of ` Map < String , Object > ` to
simonstewart : move storage interface to a separate class , so that it can be reuse by the html5 driver
fix ` ` create or replace view ' ' option to work without it
changed exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error handling by providing a more
updated the query string retrieval logic in SpellCheckComponent . java to ensure the correct query string is used for improved functionality
added validation for header values to ensure proper handling of illegal characters and whitespace in headers to prevent runtime errors when processing headers with illegal characters
replace instanceSize with arrayBaseOffset and introduce afterFieldsOffset in HybridLayout and HostedInstanceClass classes to improve clarity and
make apexcommentcontainer . setcontainscomment ( ) non - experimental
hhh - 10663 add warn log for lazy association with @ fetch ( fetchmode . join )
refactor NoGetOperationsFilter and NoUserOperationsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter to simplify the filter implementation and
added database and table name assertions in TestCompactionTxnHandler and updated database and table names in TxnHandler to ensure consistency in database and table
camel - 1645 : added unit test base on user forum issue
added a check to ensure the trace is only added if the block is not processed to avoid adding unnecessary traces when the block is already processed
updated the null check in ProviderManager to use CollectionUtils . contains to ensure proper handling of null elements in the providers list
simplified the return statement in InsertOrUpdateGeneratorPostgres . java to directly return the PostgresDatabase instance to improve code readability and
added tests for local index filtering and modified page filtering logic to improve test coverage and ensure correct handling of pagination scenarios
added a check to prevent adding a collection with the same name that has already been used in the past to ensure that collections with the same name
updated cursor positioning logic in VDUBuffer and vt320 classes to ensure correct positioning based on screen base and cursor positioning
added a constant for " useRetries " in HttpShardHandlerFactory to provide configurable retry behavior for HTTP requests
updated the VERSION _ NUMBER regex pattern in JavaVersion . java and added a new test case in TestJavaVersion . java to ensure correct parsing
[ hotfix ] [ runtime ] do n ' t run task if there be no input gate
added miss @ org . junit . test ( ) to testreceivingmessagesourcetests
added null check for properties in RemoteCluster . java to avoid potential NullPointerException when properties is null
updated IOException handling in FileSystemBlobStrategy to set the cause of the IOException to improve error reporting by preserving the original exception context
updated error message in ClusterStackVersionService and RepositoryVersionResourceProvider to clarify stack upgrade status to improve user understanding of stack upgrade
added a private ` TxConfidenceListener ` instance and updated its usage in the ` addConfidenceListener ` and ` removeConfidenceListener
[ netbeans - 4447 ] add support for ` ` g1 perm gen ' ' to jmxsupport
removed unused imports and refactored return statements in NearbyController . java to streamline code and improve readability by eliminating
pdfbox - 4892 : make class public , add javadoc
added a check for non - home activities in the gesture handling logic to ensure that home activities are correctly handled during swipe - up gestures
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to improve clarity and functionality
updated method names in ShadowTelephonyManagerTest and modified return values in ShadowTelephonyManager to ensure consistent casing for network and
updated the unfreeze amount setting in the UnfreezeBalanceV2Actuator class to ensure the correct amount is set for unfreezing
change ' minute ' to ' match ' in conference scheduling xml file
replaced ` Files . copy ` with ` FileUtils . copyDirectory ` in ` FirefoxProfile . java ` to improve code consistency and leverage
refactor AbstractListAssert , AbstractUriAssert , AbstractUrlAssert , ArraySortedAssert , and Lists classes to improve code organization and maintainability
refactor Observable class to improve performance to enhance efficiency of data handling operations
refactor pushAll method to use addMultiFieldOperation and add tests for multiple pushAll functionality to improve code clarity and ensure correct handling
added a null check for randomUUID before setting it in MockHubService to avoid potential null pointer exceptions when generating a random UUID
added hover event handling in InputConsumer and OverviewInputConsumer classes to improve user interaction by dispatching hover events based on hover events
added a sleep mechanism for bootstrap configuration in CoreContainer . java to ensure proper handling of configuration during the bootstrap process
camel - 8552 : camel - netty4 - http should use http header size and not max size
increase the number of client retries from 5 to 35 in HBaseTestingClusterAutoStarter . java to allow more retries for client operations
replaced the method of resolving the template file path from using ` toPath ( ) ` to using ` new File ( getAbsolutePath ( ) ) `
[ gr - 28654 ] fix encodedgraphcachetest . testencodedgraphcachetest failure .
updated query command from " customer _ count " to " all _ tables " and added a new test for " dump _ tables " to improve
added functionality to adapt and store currency metadata from KrakenAssets to improve currency management in the KrakenAdapters class
added a custom ` toString ` method to the ` AnyOf ` class and created a corresponding test class to provide a clearer string representation of
replaced direct calls to ` entry . getKey ( ) ` with a local variable ` dimensions ` in ` AlertTaskRunnerV2 . java
[ influxdb ] fix warn about miss measurement / database setting
refactor method names from ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming
updated IP address filtering logic in NetUtils . java to use dynamic filtering options and added a method to check for unique local addresses to enhance flex
replaced the direct call to getColumnNames ( ) with a new method that returns quoted column names to improve code readability and maintainability by
added methods for setting system properties and retrieving properties in WrapSystem . java , while updating method names in StrUtils . java to improve property management
added a constructor to the UpdateRequest class that accepts a URL to facilitate the creation of UpdateRequest instances with a specified URL
removed static modifier from enum enum serialization in ProtoTypeAdapter . java to allow for instance - specific serialization in the same package
added an experimental format warning to the response handling logic in DataImportHandler and ReplicationHandler to inform users that the response format may change in the
updated debug log message formatting and added a method to format the list of values to improve clarity and usability of debug output for better debugging
fix row height in addition to the default label font .
[ issue # 5691 ] fix issue where we do n ' t check for confirm offset when send heartbeat message .
fix npe in cqlinputformat due to miss mean _ partition _ size / partitions _ count
simplified the condition for checking the class name in JUnitTestsShouldIncludeAssertRule . java to improve code readability and maintainability
[ drools - 770 ] fix rule terminatinelpinedtuple equality check
added StageIDsRearranger import and resolution logic in TezCompiler . java to enable dynamic stage ID rearrangement based on configuration
patch by jbellis ; review by brandonwilliams for cassandra - 1422
updated memory consumption logic in LotsOfOutput . java to improve clarity and accuracy of memory consumption checks
added imports for ` Document ` and ` DimConfig ` in multiple facet - related classes and modified the ` DEFAULT _ DIM _ CONFIG
added support for anonymous - read - only configuration in LdapAutoConfiguration and LdapProperties classes to enhance LDAP configuration flexibility by allowing configuration of anonymous
refactor DatabaseMetaData class to improve code structure to enhance maintainability and readability of the code
( chore ) camel - example - echomodule : make class private
added ` finishMocking ` method to ` MockitoSession ` and modified ` DefaultMockitoSession ` to handle ` Throwable ` to improve
removed extraDeps from the build parameters in GoTestDescription . java and added new test cases in GoTestIntegrationTest . java to streamline
replaced ` buffer ` and ` flushing ` with ` readBuffer ` and ` writePending ` in ` SPDYAsyncConnection ` to improve
replaced ` BlockLiquid . getStaticBlock ` with ` BlockLiquid . getFlowingBlock ` in ` BlockLiqu
updated AndroidLocationPlayServiceManager and BackgroundLocationHandler to use data URI instead of extra for background class name to improve flexibility in handling different
camel - 14263 : camel - apr should use source code generate configurer to avoid reflection configuration .
[ hotfix ] [ table - planner - blink ] support streamingplan in clifrontend
fix craftingmanager . getshapedrecipe ( ) and craftrecipes . computeifabsent ( ) .
try to fix intermittent ci failure
simplified conditional checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a pattern matching for temporary pg _ temp _ files in NeuteredLinesFilter . java to enhance filtering capabilities for temporary pg files
chore ( regen ) : update gapic - generator - java version to 2.1 . 0 ( # 602 )
added conditional logic to handle INTERVAL data types and modified type checks for LONG , NCLOB , and NVARCHAR to improve data type
[ wavefront ] do n ' t publish histogram if it ' s a publishing histogram
updated the handling of upstream URLs in ShenyuClientRegisterSpringCloudServiceImpl and modified the DivideUpstreamUtils to include
added a new method ` registerListener ` to ` ShadowSensorManager ` to enable listener registration with specified rate and max latency
added socket exception handling for full method , full URI , and header tests in SelectChannelServerSslTest to improve error handling and logging for SSL
camel - 13663 : camel - ignite now use apache ignite 1.5 . 0 . final
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 263 . fix
pdfbox - 2576 : do n ' t swallow exception , just return false
added tests for the ` setDisplayHdrCapabilities ` method and exception handling in ` ShadowDisplay ` to ensure proper functionality and behavior of HDR capabilities
added a finally block to reset the classloader variable to ensure proper cleanup of resources to prevent memory leaks
enhanced error messages in SemanticAnalyzer to include source , column , and target names to improve debugging and clarity of error messages for better debugging
added a default constructor to the Message class to enable instantiation of Message objects without parameters
do n ' t report a low priority for non - awt component
updated ` PhoenixDecimalObjectInspector ` and ` PhoenixObjectInspectorFactory ` to accept ` PrimitiveTypeInfo ` as a
modified the handling of GZIP output stream to check if the response has already been committed before using it to improve output stream management and avoid unnecessary encoding
updated variable and method names from ` WWWAuthenticate ` to ` authenticateHeader ` for clarity to improve code readability and maintainability by
added a condition to check if the name starts with " EJS " or " org \ ibm \ \ g " in the directory to ensure
updated thread name retrieval to use a dedicated method for retrieving the thread group name to improve code readability and maintainability by encapsulating the logic
added logging functionality to MethodInvocationPrivilegeEvaluator to improve debugging capabilities by providing detailed information about access denial
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nut
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
server : fix vm migration for vm with iso
updated signal handling logic in SigInt . java and modified test method names in SigIntTest . java to improve clarity and correctness of
replaced static import of ` isEmpty ` with ` ArrayUtils . isEmpty ` for consistency to improve code readability and maintainability by using a central
updated Spring Boot test configuration and added a discovery client bean in AxonAutoConfigurationWithSpringCloudTest . java to improve test isolation and
added multiple @ Override annotations in ColorRGBA . java to ensure proper method overriding and improve code clarity
planningvariabledescriptor , planningvariabledescriptor , planningvariableselector , planningenvironment , planningenvironment , planningenvironment ,
added build time handling to the TwoLevelArtifactCacheDecorator and related classes to improve artifact cache management by incorporating build timing information
replaced the use of ` getFields ( ) ` with ` getDeclaredFields ( ) ` in ` GroupByOperator . java ` and updated the condition
added null check before adding block appearance to prevent potential null pointer exceptions during block addition
added CNC _ BTC currency pair and corresponding constants in BTCEUtils , Currencies , and CurrenciesDemo to support trading
updated skewAllowance from 5 to 15 and adjusted related configurations to improve flexibility in handling skew allowance for SAML responses
added sorting functionality to SongListActivity and updated query settings in Utils to improve user experience by providing a more relevant sorting option
added a method to read the request body into a byte array if it is null or is a TypedByteArray to ensure proper handling of request bodies
deprecate mobspawnerblock and signblock , introduce legacybaseblockwrapper
refactor Iceberg branch creation logic to use SnapshotRef for tag checks to improve clarity and accuracy in error handling when creating a branch
replaced ` newArrayList ` with ` Collections . singletonList ` for setting external group whitelist to improve code readability and maintainability by using a more
refactor ` PhotonMappingDemo ` and ` HybridDemoSsboInstancing ` and ` PhotonMappingDemo
updated password change requirement check and added logging for unsupported operations in IdentityProviderEndpoints to improve error handling and provide clearer logging for unsupported operations
added a line to remove the assumeReflective variable from the notInitializedInConstructors list to ensure that uninitialized fields are properly managed during constructor
modified error handling in JdbcExecutor to use the closed connection URL to provide clearer error messages for SQL execution failures
added a new method ` testRequiredBody ` to validate the behavior of the ` testRequiredBody ` method in the Spring MVC client to
updated regex patterns for user and password patterns in CredentialInjector . java to improve clarity and accuracy in matching user and password patterns
added a new menu item " Item4 " and a key handler for the ENTER key in ActionListenerCalledTwiceTest . java to enhance user
updated print statements for clarity and modified assertions in TestCoreParser . java to improve debugging output and ensure correct behavior of query results
corrected the order of equality checks in SimpleNode . java to ensure proper comparison of node IDs during equality checks
changed the visibility of the PopulatorContextStackItem class from public to package - private to restrict access to the class within its package for better
updated how documents are retrieved and added unit tests for the MoreLikeThis class to ensure accurate document count handling and improve test coverage for the More
refactor code formatting for better readability in QuestManager . java to improve code clarity and maintainability
[ hotfix ] [ test ] make networkbufferpooltest extend from testlogger
updated query append syntax in MongoSessionDataStore . java to improve readability and maintainability of the code
add unsafe . getlong ( object receiver , offset , condition , locationidentity ) to native code
update time zone for " Asia / Amman " from ARAST to EET across multiple language files to correct time zone representation for
updated the id from 90000010 to 90000011 in DeprecationLogger . java to reflect the correct versioning of the logger
added exception handling for JDBC exceptions in SessionImpl . java to improve error handling for rollback - only scenarios
do n ' t show the file extension when there ' s nothing to download
disable menu bar on macos
[ giac ] add piecewise integration test for ca
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods from private to protected
added a new variable ` modWhiteListPattern ` to ` HiveConf ` and a test for modifying ` hive . metastore . uris
removed the entry entry from the invalidClasses map to streamline the entry loading process by eliminating unnecessary entries
updated target retrieval to use player ' s team instead of team ' sharded ' to ensure accurate target retrieval based on the current player ' s
updated the cookie builder to use the domain name from domainHelper instead of a hardcoded value to improve flexibility by allowing dynamic domain configuration
updated nullable validation logic in ColumnChangeGenerator and MissingTableChangeGenerator to ensure correct handling of nullable constraints based on search conditions
refactor and rename SecurityToken - related classes for improved clarity and consistency to enhance maintainability and readability of the codebase
added tests for deleteQuery and add a new query in CustomCollectionTest . java , and made several variables static final in CompositeIdRouter .
added snapshot handling functionality to ` ExecutablePreparedStatementBase ` and updated related methods in ` PostgreSQLIntegrationTest ` to improve data management for PostgreSQL snapshots and
updated conditional checks for cached files and cache sizes in DefaultServlet . java to ensure proper handling of cached files and improve code readability
improve drag - and - drop functionality ( # 4338 )
updated method calls in ExecutionUnitRunner and CucumberTest to use Description . createTestDescription and modified test assertions in CucumberTest
replaced ` ! isEmpty ( ) ` with ` StringUtils . isNotEmpty ( ) ` for version and buildTime checks to improve code readability and
removed the ` public ` access modifier from several methods in ` TimeUtils ` and updated imports in ` GitBlitSuite ` and ` Time
refactor security frame handling in RefectionMHTests to use a new helper method for clarity to improve code readability and maintainability
updated file extension check from " jpg " and " jpeg " to " . jpg " and " . jpeg " to ensure compatibility with
updated method return logic in NativeImageDebugInfoProvider to handle HostedMethod instances to improve method resolution for better debugging information
added icon retrieval methods in Data classes and updated ClassDisplayed initialization in DataTableTopComponent to improve visual representation and provide a default display option for
updated substring logic to handle cases where the last character is not present in the request name to improve robustness by avoiding potential StringIndexOutOfBoundsException
modify the replacement logic in FindAndReplace . java to handle dollar signs to ensure correct replacement behavior when the regex is specified
fix an npe that could occur if the client do n ' t connect to the smack server .
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a method to copy directories from a specified source directory to a specified destination directory to ensure that files are created if they do not already exist
added an exception throw for unknown datum classes in JacksonUtils . java to improve error handling for unknown datum types
replaced direct calls to buildAbiFromClasses ( ) and buildRuleResolver . addToIndex ( ) with calls to HasJavaAbi
updated height calculation in SelectBox . java to use itemHeight directly to simplify height adjustment logic for better readability and maintainability
added normalization for database and table names in ObjectStore . java to ensure consistent database and table naming conventions
added schema handling for Oracle databases in DbSqlSession . java to ensure correct database metadata is used for Oracle databases
do n ' t log out when we handle them ourselves
[ hotfix ] [ test ] fix flakiness in test
updated FastImportAction to check for null candidates before retrieving priviledged elements to ensure robustness by handling potential null pointer exceptions
updated the logic in ContainerLifeCycle to use a boolean flag for managed beans to improve clarity and maintainability of the lifecycle management logic
rename iexecutionattributesdialect to iexecutionattributedialect for consistency with other dialects
added metadata . clearUnsafe ( ) method to AlterTest . java to ensure safe clearing of metadata during tests
pdfbox - 4892 : avoid npe if the location be null
added null check for measurement in TabletInsertionDataContainer and implemented exception handling in DisruptorQueue to improve robustness by preventing null pointer
deleted the Session2Token . java file to the class was deemed unnecessary for the project
bug cs - 16725 : remove the dest volume if the target volume can not be remove
added ` Install ` functionality to ` SystemShortcut ` and integrated it into ` InstantAppResolver ` to enhance user experience by allowing installation of instant
added a NullAuthoritiesPopulator to LdapAuthenticationProvider and created a default implementation to ensure proper role retrieval when no authority is provided
added system property ` ` retrolambdaJarPath ' ' and modified its retrieval logic in ` Executor ` and ` CN1BuildMojo
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the camera building process and
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` and improved exception handling to enhance performance
added a method to handle null results in JMESPathExtractor to ensure proper handling of null values during extraction
updated import statements in AuthorizeTag . java and added a null check for currentUser ' s authorities to improve code clarity and prevent potential NullPointerException
updated assertion order in test classes to improve consistency to enhance readability and maintainability of the test code
cloudstack - 7892 : fix the typo in the exception message for vgpu enable vms
updated the handling of class and method annotations in RobolectricTestRunner and modified the collection type in Config to improve clarity and ensure
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize socket communication for improved performance
added a method to check for partial partition keys in HiveAlterHandler to ensure consistency in partition key equality between old and new partitions
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to allow toggling of icon
updated conditional statement formatting in SimulationStatus . java to improve code readability and maintainability
replace SharedBlockingCallback with Callback in StandardDeployer and StandardUndeployer classes to improve code readability and utilize more efficient callback management
added WorkspaceListener to PreviewControllerImpl for managing workspace updates to ensure the preview graph updates correctly when a workspace changes
added checks for VM anonymous classes in ReflectionFactory and modified class name retrieval method in ReflectUtil to improve handling of anonymous classes and enhance class name
refactor TransportHelper class to improve code organization to enhance maintainability and readability of the code
added import for ResourceLoader and modified the file path format in CatalinaAcegiUserRealm . java to improve resource loading functionality and
updated logging messages for server and manager initialization in AmbariServer . java to enhance clarity of log messages for better debugging and monitoring
added null checks for init and modify nodes in JSONWriter . java to ensure robustness by preventing potential NullPointerExceptions during initialization and modification processing
refactor ` run ` method to accept a ` FileSystem ` parameter and update user creation logic in ` SliderAppsViewControllerImpl . java
added a check to ensure backgroundManager is not attached before attaching it to avoid potential NullPointerExceptions when the backgroundManager is already attached
added functionality to set the current tab in ` AllAppsTabbed ` , ` Launcher ` , and ` PagedView ` , and
added null check for the URL in BaseDataSource and created a test for invalid URL in SimpleDataSourceTest to ensure robust error handling for invalid URLs
added JUnit conditions and modified the initialization of PebbleTemplateEngine in PebbleModuleTest . java to enable tests only on supported
added EditNameDialogListener to handle directory creation in FileDisplayActivity to improve user experience by enabling directory creation functionality
added functionality to toggle the visibility of the bar border width in multiple activities to ensure the chart updates correctly when the border width is set to 1
updated the exchange URL from " www . okcoin . com " to " www . okex . com " in OkCoinExchange . java
jbrules - 2835 : add a deciderscorecomparator to the stepscope so that it do n ' t interfere
replaced FileChannel with SeekableByteChannel for reading input streams to improve performance by using seekable byte channels
refactor ` getFlattenFieldTransferPair ` to accept ` FieldReference ` as a parameter to improve code readability and maintainability by redu
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
refactor conditional checks for SERIALIZATION _ TYPES _ KEY in SerializationConfigurationParser . java to improve readability and maintainability of the
added heap limit configuration for debug devices in QuickstepProcessInitializer to ensure proper memory management during development on debug devices
refactor sumWithCompensation calls to use a local variable for clarity to improve readability and maintainability of the code
log4j2 - 1349 : re - enable test until we figure out why it fail on ci
added a try - catch block for handling top - level deletion in PrecompactedRow . java to ensure proper serialization of top - level deletion
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest .
add a meterregistrylifecyclelistener to meterregistryautoconfiguration to close meterregistry on stop
fix ( configcenter ) : log warn when config center be not find ( # 10355 )
added error handling for certificate generation in CertificateFactoryTest . java to ensure expected exceptions are thrown when generating certificates with specific byte arrays
camel - 15836 : simple language to parse binary expression with ambiguity . thanks to benjamin graf for
removed unnecessary null checks from onTabUnselected method in EditorActivity and added focus change handling in IDEEditor to streamline focus handling and
improve access log error message to include the user ' s name
updated scaling factors in SkeletonModelGpuSkinningTest and modified animation time calculation in OgreXmlLoader and SkeletonModelViewer to
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotation to UpgradeResponse . java to indicate that the class is outdated and should not be used in new code
added support for specifying the output directory for generating d . ts files during the transpilation process to allow users to generate d . ts files
[ hotfix ] [ stream ] fix fetch timeout for kinesis consumer factory
[ beam - 3340 ] add . html file extension to stream dataflow worker
updated the maximum number of metastore server threads from 100 , 000 to 1000 to optimize performance and reduce resource usage
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` in ` RecentsModel . java `
replaced mMaxShadowRadius with shadowRadius in SwipeUpAnimationLogic . java to ensure the correct shadow radius is applied during animations
added a new test method ` chainNestingAndAggregation ` to the ` ChainParserTests ` class to verify the functionality of the ` aggregator
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure the loop
do n ' t call isinternal for non - polyglot source .
updated conditional check for previousCachedFilePath in CreateKeytabFilesServerAction . java to ensure correct comparison of file paths when previousCachedFilePath is
added DisplayController import and modified WindowManagerProxy instantiation to include DisplayController functionality to enhance functionality by integrating display management capabilities
added a check for root directories in MetalFileChooserUI and SynthFileChooserUI to improve user experience by displaying the name of the
replaced ` getToolkit ( ) . getScreenSize ( ) ` with ` Toolkit . getDefaultToolkit ( ) . getScreenSize (
[ te ] fix typo in api doc
added unit tests for entity insertion and removal in JPASQLBase . java to enhance test coverage for query results retrieval with factory expressions
updated drag index logic for point removal in FreeformFinSetConfig . java to ensure correct drag behavior when a point is removed
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to reflect the
[ fix ] fix typo in runtime error message and spend all gas
updated error message formatting in ` ElementsShouldSatisfy ` and ` ZippedElementsShouldSatisfy _ create _ Test ` to include
marked the Weights class as deprecated to indicate that the class should no longer be used in favor of an alternative implementation
use platform - specific unsafe plugins in amd64graphbuilderplugins .
added @ Hint ( isDep = false ) annotation to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and AndroidBinary
change mCenterPagesVertically from true to false in AppsCustomizePagedView . java to ensure that the center pages are displayed
updated the call to ` migrationInfo . doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to ensure that the ` doneProcessing
updated variable names from " HOST " to " BASE _ URL " across multiple files to enhance clarity and consistency in configuration management
updated attribute handling from Object to List < Object > in WSFederationClaimsReleasePolicy . java and added tests for common name and email address
updated table creation and query processing in TestJdbcWithMiniLlap . java and added database key handling in LlapBaseInputFormat .
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate the parsing and deparsing of SQL
added a new method ` startCopyMode ( ) ` to handle copy mode for devices running ICE Cream Sandwich and I
refactor ` writeXmlOutput ` method to use ` DocumentBuilder ` and ` DocumentBuilderFactory ` for XML output generation to improve XML output handling and
added unit test base on user forum issue with custom aggregation strategy
( chore ) camel - core : remove dependency on internal exchangehelper from camel - core
move basicconfigurator , contextinitializer , and socketmin to correct package .
added a condition to check if targetVN has the PHI _ NODE flag before comparing with sourceVN to ensure that the targetV
remove unused import , a suggest by valerybokov
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to enhance method invocation functionality with additional parameters
refactor multiple dataset classes related to Box and Whisker calculations and histograms to improve code organization and maintainability
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit5
updated equality checks in ` NormUpdate ` and ` MemoryIndex ` classes to use ` . equals ( ) ` instead of ` = = `
changed the access modifier of the singleton variable and the constructor from public to private to restrict access to the singleton instance and improve encapsulation
replaced direct usage of testPluginDefinition ( ) with variable pluginDef for clarity and reusability to improve code readability and maintain
updated the method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` to ensure the correct table header row is retrieved
refactor TypeAdapter methods to simplify null handling to improve code readability and maintainability
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added a new class EXIFReader to read and process EXIF metadata from a file to facilitate the extraction and processing of Ex
change default value of ` toStandardUnit ` from ` UNKNOWN _ TO _ SDK _ VERSION ` to ` NONE ` in ` CloudWatchMeterRegistry
[ rhdm - 1826 ] [ rhdm - pmml ] fix illegalargumentexception when apply pmml model
updated the string format in FluentProtocol . java to include a newline character for repeated CounterCurrencyTransferStartedMessage to improve readability and clarity
added a check to return early if the bubble bar visibility is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not
[ gr - 36400 ] handle branchtargetindexoutofboundsexception in substrateaarch64backend
added a try - finally block around the initialization of the JDKLogManager in JDKXRLogger . java to ensure that initialization occurs even if
added a ` find ` method to ` TicketCatalog ` and improved logging in ` DefaultTicketCatalog ` to enhance ticket retrieval functionality and enhance
refactor SSL connection handling in TestSSL . java to improve readability and maintainability of the code
[ hotfix ] [ runtime ] fix deadlock in sortmerceresultpartition
in progress - issue batch - 159 : jmsio do n ' t support write and read ( )
added support for retrieving plugin handles by type and sort in the PluginHandleController and related classes to enhance functionality by allowing retrieval of plugin handles based
modified span creation in DefaultSpanCreator and SleuthAdvisorConfig to call start ( ) instead of start ( ) to ensure proper span lifecycle
added GLKViewDrawableProperties to IOSApplicationConfiguration and updated IOSGraphics to use these new configurations to enhance flexibility and customization
refactor login logic in LoginIT . java to use attemptLogin method and add a test for user locking after failed attempts to improve code read
[ pytorch ] throw unsupportedoperationexception for real ( ) and complex ( )
modified the lock name retrieval logic in SynchronizationStatistics . java to use a while loop to ensure the lock name is retrieved even if the thread
refactor Implements and ShadowPicker classes to improve code organization to enhance maintainability and readability of the codebase
refactor HttpClientOptions initialization to use TransportClientConfig for connection settings to improve configurability and flexibility of HTTP / 2 connection settings
added support for DynamicArray in DynamicStruct and improved error handling in SolidityFunctionWrapper to enhance type compatibility checks and enhance error messaging
added a boolean parameter to getStringProperty and getFloatProperty calls in InlineLayout . java and FontUtil . java to ensure compatibility with CSS properties that
added constructors to CopyStep for improved path handling and test coverage to enhance functionality and ensure correct behavior of the CopyStep class
fixed - rsemaphore . addpermits ( ) method do n ' t work for rseemaphore . addpermits
camel - 13660 : fix camel - core test to work with camel - core 2.1 . 0
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` and ` FlavorParserTest ` to use it
updated witnesses handling from List < String > to List < ByteString > in WitnessScheduleStore . java to ensure consistency in data type usage
added a check for non - empty results before printing to avoid printing empty results
refactor ConcurrentLinkedQueue to handle null items more efficiently and introduce a new RemoveLeak class for testing to improve robustness of
added a ` addSpecialTokens ` parameter to the ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer ` to
[ hotfix ] [ runtime ] use collections . nCopies instead of manual list creation
updated LoadSingleTsFileNode to use alignedChunkData for chunk addition to ensure correct data size is set for chunk data handling
added session storage context handling in the BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer classes to improve session management and
add a test to demonstrate that schema validation work
added a default constructor to TypeAdapter and updated comments in Java 17RecordTest and ReflectionAccessTest to clarify that the test is disabled
refactor event handling in Debugger and introduce prepareKill method in SuspendedEvent to improve clarity and error handling during suspension
refactor AntPathRequestMatcher class for improved readability to enhance maintainability and clarity of the code
[ ds - 3952 ] remove unused ' null ' parameter from createresourcepolicy ( ) method .
added null check for _ deflaterEntry before releasing it to avoid potential NullPointerException when _ deflaterEntry is null
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure cleanup of resources after each test execution
updated checksum computation to normalize Unicode characters to NFC to ensure consistent checksum formatting and prevent issues with unknown Unicode characters
refactor command handling and completion logic in Example . java to improve readability and maintainability of the code
made the ` keyListener ` variable final in ` BasicProfilerState ` and added multiple @ Override annotations in ` BaseAppState ` to
replaced the type casting of ` objectToSave ` with ` dbDoc ` in ` MongoTemplate . java ` and added a new test
added a check for multiple remote addresses in RequestUtils and corresponding tests in RequestUtilsTest to ensure correct parsing of remote addresses and validate functionality through
changed the return type of ` getJobArgs ` method from ` String ` to ` ObjectBuilder ` and updated its implementation in ` JsLibrary .
updated ` CookieManagerTest ` and ` UnmodifiableMaps ` to use ` NO _ PROXY ` and improved local host address retrieval to enhance
modified glyph processing logic in GlyphLayout . java and added a test for whitespace wrapping in BitmapFontTest . java to ensure proper handling of whitespace
added support for pausing and resuming Pulsar splits in PulsarSourceReaderBase and PulsarPartitionSplit
added HIVESCRIPTIDENVVAR configuration for script operator ID in HiveConf and ScriptOperator to enable dynamic assignment of script operator IDs in the
refactor getListedTermCounts method to use streams for sorting and counting terms to improve performance and readability by utilizing streams for term count
added action for toggle if a single step size should be use or if it should be separate for xy and z
updated FileMenuFilter to use final variables and added user ID retrieval to enhance immutability and streamline file locking functionality
hbase - 25832 roundrobintableinputformat do n ' t store regionserver split in hashmap ( # 3323
updated header values for Sampled from " false " and " true " to " 0 " and " 1 " in HttpClientRequestAdapter and its
pdfbox - 4892 : simplify code , a suggest by valerybokov
updated GwtApplication and GwtGraphics to support fullscreen mode functionality to improve user experience by allowing dynamic screen sizing based on fullscreen
changed the type of ` issuers ` and ` normalizeResource ` from ` String ` to ` URI ` and modified parameter names for consistency to
add a new test class SoulApacheDubboClientConfigurationTest for the SoulApacheDubboClientConfiguration to ensure
updated asset path resolution in SkinLoader . java to use resolve ( ) instead of Gdx . files . internal ( ) to improve code
added trace logging for attributes in ChainingAttributeReleasePolicy and changed log level from warn to info in OidcDefaultJsonWebKeystoreCache
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple files to improve thread safety by interrupting the locking mechanism
removed unnecessary whitespace from the package declaration in the Compiler class to improve code readability and maintainability
refactor conditional logic in NullDerefAndRedundantComparisonFinder to use an else statement for better clarity to improve code readability
do n ' t pass contentid to manifestfetcher , use defaulthttpdatasource instead
added a configuration property for the maximum number of prepared statements cached per database connection to allow dynamic adjustment of the maximum number of prepared statements per connection
changed the return type of the set method from WritableConfig to Configuration across multiple classes to align with updated configuration handling practices
added error handling for command payload errors in AutoScalingHandler . java to improve error management and provide clearer feedback for command failures
refactor CombinedDataset class to improve data handling to enhance efficiency and maintainability of the dataset processing logic
updated variable name from ' buffer ' to ' b ' in InflateIn _ DeflateOut . java to improve code readability
added methods to remove cryptography restrictions in the Utilities class to enhance security by ensuring only restricted cryptography permissions are removed
added a check for cancellation before processing chunks in the entity to ensure that chunk generation only occurs when the event is not cancelled
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest ` to verify the behavior of page margins
added null check and initialization for vContext in Vectorizer . java to ensure vContext is always properly instantiated before use
fix wialon speed setting ( fix # 688 )
hbase - 16400 disable user metric by default ( chunhui )
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if
replaced instance variables ` mUserPresent ` and ` mVisible ` with ` mAttached ` and added a conditional check before unregistering the
refactor AsyncFile , AsyncFile , HttpClientRequest , HttpServerResponse , NetSocket , NetSocket , and ReadStream classes to improve code organization
add params to zadd call so it do n ' t have to call getclient ( ) .
fix checkstyle issue in util / ds - common / src / main / java / org / apache / dspace / service / dspace
renamed the test class from ` TestAsyncMessages ` to ` TestAsyncMessagesPerformance ` to better reflect the purpose of the test to better
refactor node optional handling in VersionedTargetGraphBuilder and add test support in VersionPropagatorBuilder to improve code clarity and ensure correct target
updated the epoch time comparison logic in TimeZoneProvider . java to use constants instead of hardcoded values to improve code readability and maintainability by
updated the calculation of the length in EscherBlipRecord . java and added a new test class TestOLE2Embeding . java
updated the initialization of ' row ' and ' column ' variables in JSONParser . java to correct the column starting index for proper JSON parsing
replaced instances of ` JavaType . FullyQualified ` with ` Pattern ` in ` FindTypes . java ` and ` JavaType .
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added trailer playback functionality to improve user experience by allowing users to play
added a method to remove glyph information from the cache and modified the freeing logic in CStrike . java to improve memory management by ensuring
act - 1392 : terminate all process after a process be terminate ( act - 1393 )
camel - 6796 : fix camel - core - xml type name strategy to use @ xmlrootelement annotation .
updated the endpoint in SimpleHttpClientTests from " http : / / www . apereo . org / scottb . html " to
add option to reset all preference to default value
hbase - 26928 thriftmetrics should be protect ( chunhui )
[ danfossairunit ] remove deprecate channel ` manual _ fan _ speed ` ( # 15980 )
use hamcrest assertion instead of junit in examples / integrations / cdi / spring - boot - spring - boot -
removed redundant code for stopping expansionHelper in TweetActivity . java to streamline the code by eliminating redundancy
added null and index check in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure proper handling of null values and improve object comparison
server : add root disk size custom parameter in vm template ( # 4568 )
added preference management for visibility in PredictionRowView to enhance user experience by conditionally showing suggestions based on preferences
[ geos - 10560 ] add bbox cr support to apiBBoxparser and featureservice
added validation methods for value and position parameters in LibrustzcashParam . java to ensure values are non - negative and validate Merkle
moved ithrowableentity to fml . mods . fml . common . registry . ithrowableentity
added random number generation for x and y in NodeDataImpl . java to enhance randomness in node positioning
updated the method name from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to
refactor JavacStep to use a try - with - resources statement for better resource management to ensure proper closure of the Javac
update version number from 0.9 . 1 to 0.9 . 2 in mmm Version . java and ppp Version . java to
added a condition to check for DEEP _ SHORTCUT item type in LoaderCursor . java to ensure proper handling of deep shortcuts in the
added a hashCode method to the TimeGranularitySpec class to ensure consistent hash code generation for instances of different data types
changed visibility of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclasses to access these classes for better extensibility
added a boolean flag ` useProxyResponseCode ` to control NTLM proxy usage based on response code to ensure proper handling of NTL
[ gr - 32233 ] aarch64 : fix aarch64move . ldr and aarch64macroassembler .
server : do n ' t calculate vm mem for all vms in the case where there be only one available vm
added a check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` to ensure ` includeScore ` is only
updated the audio codec from 22050 to 44100 in AudioRecorderTest . java to improve audio recording accuracy in the test
update calculation of newOriginX to account for minimum X scale in RocketFigure . java to ensure correct positioning of the rocket
updated DruidQueryBasedInputFormat to handle both null and empty data sources and set default interval to improve robustness of data source validation and
added a new ` ORIGINAL _ TYPE ` field and modified the pattern matching logic in ` CustomProperty . java ` to enhance the functionality
added a static method ` create ` to create ` IndexImpl ` with a parent and data map to facilitate the creation of `
simplified the return statement for checking boundary period to improve code readability and maintainability
updated SchemaCompatibility to include location in mergedWith method and added new test cases for compatibility checks to ensure correct merging of schema readers and writers with
added persistent attribute type handling and modified path retrieval logic in QueryUtils . java to improve entity path processing and ensure correct association type handling
added synchronized blocks to the spans list and modified return statements in TestSpanHandler . java to ensure thread safety when accessing the spans list
update method signatures to replace ` List < Object > ` with ` List < ? > ` in multiple classes to enhance type flexibility and improve
updated exception handling and logging in ViewContextImpl . java to improve error handling and provide more informative log messages
refactor OAuth2AccessTokenEntity class for improved readability to enhance maintainability and facilitate future updates
updated error messages to specify that the service cannot process requests due to status changes to improve clarity in error reporting and ensure proper response handling
added new project files for iOS data and moe resources in GdxSetup . java to enhance image loading capabilities for better resource management
replaced the existing merge scheduler with a ConcurrentMergeScheduler in TestSearcherManager . java to improve indexing performance by utilizing a concurrent merge
added null and empty checks for session state and improved list handling in GenericUDTFInline to enhance code robustness and prevent potential NullPointerException
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code readability and maintainability
added multiple calls to preventDefault ( ) in SpreadsheetKeyListenerW . java to improve user experience by preventing unintended actions
added service registration and unregistration for persistenceProviderService and sessionFactoryService in HibernateBundleActivator . java to ensure proper cleanup of resources
fix incorrect timeout calculation in hikaripool
do n ' t create the component . xml file if it do n ' t exist .
updated file name handling in Compat and FileOpener classes to improve consistency and ensure correct file path processing across different operating systems
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to indicate that the method
improve error message when ` -- p2p - port ` and ` -- rpc - ws - port ` be specify multiple times (
added a null mask feature to the WebSocketClient to enable customizable mask generation for WebSocket connections
refactor genUDTFPlan method to return a Pair of RelNode and RowResolver instead of a single RelNode to improve code cl
[ hotfix ] [ network ] add node selection stats for preferred / non preferred node
added a new class ` Person ` with getter and setter methods for the ` name ` field to provide a mechanism for setting and getting the name
added a boolean variable ` hasOwnerPtr ` and modified the owner pointer execution logic to improve clarity and functionality of the owner pointer handling
added clock functionality and fade - in effects in PlaybackOverlayFragment to enhance user experience by providing visual feedback during playback transitions
remove unnecessary call to world . updatecomparatoroutputlevel ( ) since it be already call by blockstate ( ) .
removed the ` final ` modifier from the ` IMPL ` variable and improved exception handling in ` SegmentReader . java ` to allow dynamic
added SwingUtilities . invokeLater for fireCellUpdatedEvent in Sudoku . java to ensure UI updates occur on the Event Dispatch Thread to
removed ` DefaultInetAddressAdapter ` and ` DefaultCollectionTypeAdapter ` from ` DefaultTypeAdapters ` and replaced it with ` Class `
added methods for handling double , long , boolean , and string values in the Series class and corresponding tests in DataFrameTest to ensure proper validation and
updated the option for audio time stretch from " -- no - audio - time - stretch " to " -- audio - time - stretch " to
mondrian : fix logic in geospatialutils for polygon query
server : fix npe when try to get disk offering from service offering object
added cleanup method to hazelcasttest to ensure all resources are properly released after each test
added tests to validate the behavior of AES / " 2 / NoPadding " and " 9 / NoPadding " algorithms in BlockCipherTest .
added filters to print operations logs in QFileClient to improve clarity in logging output for better debugging
fix issue with @ stub and @ singleton annotation in @ beandefinition
set currentconnectionaddress to proxyaddress if it be null .
replaced the use of Math . addExact with MathUtils . cappedAdd in WebSocketConnection . java to simplify the demand calculation and improve
replaced manual resource management with try - with - resources for ImageOutputStream to ensure proper resource management and avoid potential memory leaks
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct starting of ` SearchActivity ` across multiple
removed the ' this ' keyword from the instantiation of ` schemaCrawlerOptions ` and updated the ` toString ` method in ` GrepOptions `
http : / / issues . apache . org / activemq / browse / amq - 2279 - add osgi configuration for
added dependency injection for PersonRepository in RepositoryIndexCreationIntegrationTests to improve test configuration and facilitate dependency injection
changed the exception type of the ` stop ` method from ` Exception ` to ` InterruptedException ` in ` UIServer . java ` to improve error
fix switch / cases indentation see camel - 14540
refactor mouse handling in ThemeSelector to use a separate handleMouse method to improve code readability and maintainability by encapsulating mouse event processing
added a new abstract class ` AbstractMinMulticastFlowControlRhsPadding ` and modified ` AbstractMinMulticastFlowControlFields ` to
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative to enhance flexibility in handling text editing
change exception to illegalargumentexception for stattokentannotator
added a condition to check if the query is distinct and modified group column counting logic in QueryGenerator to improve query handling for distinct queries and ensure
jninativesimilarlinkage : add getname ( ) and getdescriptor ( ) method to jninativesimilarlink
add javadocs and fix a typo
added a null check for children before iterating over its elements to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition variables and updated parsing context handling in MessagePackParser . java to enhance token location management and improve error handling during parsing
added locale management after tests in AbstractSolrMorphlineTestBase to ensure consistent locale settings after tests run
removed unnecessary conditional checks for launcher size in LauncherFragment . java to simplify the code for better readability and maintainability
added unit tests for the MetricsReporter class to ensure the registration functionality works as expected for various metrics types
( chore ) camel - osgi : remove unused import
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for rectangle objects
replaced hardcoded " sink " with dynamic selection of the sink list name in tests to improve test flexibility by allowing multiple sink names
updated DSAParameterGenerator to handle unexpected strength values and replaced hardcoded ONE values with BigInteger . ONE to improve parameter validation and ensure correct value
added LLAP _ DAEMON _ USE _ FQDN configuration and updated related classes to use it to enable FQDN support for AM
fix clientoutofmemoryhandlertest failure due to race condition
added a getCmoObjectId method to multiple shape classes and updated setObjectId calls to use it to ensure consistent handling of shape IDs across different components
added a new test method ` testWithDistinctScalarQuery ` to the ` DistinctTest ` class to verify the functionality of a distinct query
refactor multiple task classes to improve code organization to enhance maintainability and readability of the codebase
remove bindextensionadapter and unbindextensionadapter from managedkubeclient , since they be no longer use
refactor subtitle display in DetailsDescriptionPresenter to use a new utility method for better organization to improve code readability and maintainability by centralizing
updated JUnit imports and annotations from ` @ Before ` and @ AfterEach ` to ` @ BeforeEach ` and ` @ AfterEach `
do n ' t swallow exception , log error
replaced calls to ` intPool . reset ( false , false ) ` with ` bytePool . reset ( ) ` in ` TermsHash
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
updated the API level check from S _ V2 to TIRAMISU and added a new WindowSessionDelegateU class to support T
refactor URL generation logic in UrlHelper . java and add a test for handling non - standard port in UrlHelperTest . java to improve
added support for MSSQLDatabase in foreign key constraint generation to ensure proper handling of foreign key constraints for MSSQL databases
hbase - 22859 fix checkstyle violation in hstore and replicationsource
fix emzuli pipe not pick up item in the pipe ' s colour if it ' s n ' t already in the pipe ' s
simonstewart : add a way to set the logging flag to the htmlidentifier
updated HiveLookupTableSource to use getTableSchema ( ) instead of getProducedTableSchema ( ) and modified SQL queries in HiveLookupJoin
clarify that player . setlistener ( ) can be call from multiple thread
updated the schema name handling in SequenceSnapshotGenerator to use CatalogAndSchema to ensure compatibility with Liquibase ' s schema configuration
updated color scaling logic in SpriteBatch and SpriteCache , and replaced ProgressiveJPEGTest with AlphaTest in LwjglDebug
fixed - redissonconnection class should use batchpromise . tocompletablefuture . join ( ) instead of tocompletablefuture . join (
added logic to retrieve the base URL from the Solr Solr client and check if it is not already present in the statisticYearCores collection to ensure
renamed the method ` launchTask ` to ` launchTaskFromView ` and introduced a new method ` launchTaskFromView ` to improve
refactor MorfologikFilter to use DictionaryHolder for dictionary resource loading to improve code clarity and flexibility in handling dictionary resources
updated sorting options for community and critic rating in GridFragment . java to improve clarity and accuracy of the displayed community and critic rating
added imports for ViewKt and ListRow , and modified visibility logic for header items in CustomListRowPresenter to enhance UI behavior by ensuring
refactor the switch - case structure in StressAction . java to use a try - finally block to ensure proper resource management and avoid potential
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced calls to ` isCaseSensitive ( ) ` with ` instanceof ` for DB2Database checks in multiple files to improve type safety and
[ thymeleaf / thymeleaf - core ] add support for jsr310 serialization
replaced ` org . apache . log4j . MDC ` with ` org . slf4j . MDC ` in `
replaced TypeBearer with Type in PhiTypeResolver . java to improve type safety and clarity in type merging operations
removed unnecessary line breaks in CoinbaseTransaction . java to improve code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` and modified ` ProjectCommand ` to include a ` shouldForceBuildingWith
refactor idle strategy initialization in Ping . java to improve code clarity and ensure proper garbage collection
replaced ` ContentProvider ` with ` ContentResolver ` in the ` OCFile ` class and updated related references to ensure compatibility with the
removed unnecessary state change checks for autoscale , createMissingNodes , and self - loop checkboxes in ReportPanel . java to streamline the
[ hotfix ] [ test ] fix npe in testinglogicalslot
add a new recipe class to remove calls to ` System . gc ( ) ` and ` Runtime . gc ( ) ` to the JVM to
removed redundant calls to super ( ) in multiple exception classes to improve code clarity and maintainability by eliminating unnecessary super ( ) calls
added a method to set the UIID in the ScaleImageLabel class to ensure the icon is updated when the UIID changes
refactor variable name from ` foundEntry ` to ` update ` for clarity to improve code readability and maintainability by using a more
added support for " - cp " option alongside " - classpath " in the argument validation logic to enhance flexibility in command - line
updated compiler option from options to compiler in avutil . java to ensure compatibility with the latest compiler requirements
set the ` initialized ` variable to true in ` StorageService . java ` to ensure proper initialization state for the storage service
updated Test7196045 . java file to improve test coverage and fix existing issues
updated density and decay values in ShaderParametersLightShaft . java from 1.5 f to 1.0 f and 0.9
added ` withState ` and ` stateData ` properties to ` OidcConfiguration ` and modified related methods in ` OidcRedirectActionBuilder
chore : ddl - ddl - add unique constraint for non - nullable column ( # 1188 )
added federated sharing capabilities in UsersAndGroupsSearchProvider and updated folder visibility logic in EditShareFragment to enhance user experience by allowing federated
added a method ` needsDocValues ` to the ` TestBBoxStrategy ` class to indicate that document values are not needed for this strategy
updated buffer alignment handling and improved exception message formatting to enhance clarity of error messages and ensure robustness against unknown source file names
added a new method ` intForEach ` in ` Int2ObjectHashMap ` and improved formatting in ` IntObjConsumer ` to enhance
fix worldserverscoreboard not associate scoreboards early
changed return types of count methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository classes
updated MManager . java to modify MTree snapshot creation logic to improve clarity and functionality of snapshot creation logic
updated the calculation of dot product scores in VectorUtil and TestVectorUtil to improve accuracy of dot product score calculations and enhance test coverage
added functionality to store and retrieve the last confirmed block number in the dynamic properties store to enhance the system ' s ability to track and manage the
replaced the method for setting the language and country with a call to Systems . setLocale in GpsMainActivity and MainPreferenceActivity to stream
added a check for the database creation status in LauncherClings . java and implemented the new database creation logic in LauncherProvider . java
updated assertions and exception handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and ensure proper collection removal
refactor conditional logic for determining if datamodel is null to improve readability and maintainability of the code
added thread handling in TestIndexWriterDelete . java to check if the current thread is the same to avoid potential race conditions during execution
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access and override the method
updated import statements and refactored methods in FullDetailsActivity and BaseRowItem to use ModelCompat for SDK compatibility to ensure compatibility with the
added attribute handling for SVG elements in BatikSVGDrawer to ensure all SVG attributes are set correctly in the document
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error handling for user configuration parsing
added a check for " WaitForResult " in CodenameOneActivity and modified how waitingForResult is set based on the intent extras to
refactor the PriorityQueue constructor to accept a Supplier < T > instead of a boolean parameter to enhance flexibility by allowing the supplier of sentinel
added widget description handling and visibility management in WidgetCell . java to improve user experience by displaying relevant widget information when available
added a maximum attribute count check in the Attribute class to ensure that registration does not exceed the defined maximum allowed attribute count
move predicatestest to impl package to avoid circular dependency
camel - 16400 : camel - core - optimize defaultheaderfilterstrategy to make it case insensitive .
modified InlineLayout and Breaker classes to improve line break handling and alignment logic to enhance code readability and maintainability by clarifying
added nullability annotations and improved view inflation logic in ShareUserListAdapter . java to enhance code robustness by ensuring non - null
updated the ` shouldInstrument ` method to include an additional check for ` isFromAndroidSdk ` to improve the accuracy of instrumentation checks based on
added a condition to return the last column index if the association is an insert destination before the source to ensure the correct column count is returned when
use ` ` / sys / fs / cgroup / memory . max ' ' instead of ` ` / sys / fs / cgroup / memory .
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in multiple files to improve
added error handling for null rule in JavaTestRule . java to provide clearer feedback when a specified source under test is not among its dependencies
enable proxy for minecraft 1.9 . 4 and 1.10 . 2
added a check to ensure atIndex is non - negative to prevent potential index out - of - bounds errors
increased timeout duration from 100 milliseconds to 500 milliseconds in BuckBlockJUnit4ClassRunner and increased sleep duration from 1000 milliseconds to
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to improve dependency injection and encapsulation of AssistContentRequester
replaced ` StringUtil . createReadableString ` with ` StringUtil . encode58Check ` in ` VoteWitnessProcessor . java ` to improve address
updated test cases in DefaultMethodRegressionTests . java to improve test coverage for default methods
refactor WorkloadManagerMxBean to improve code organization to enhance maintainability and readability of the code
updated Kafka exception type from KafkaProducerException to KafkaException in KafkaOutboundAdapterParserTests to align with the updated Kafka library structure
added a call to close the container loader to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and corresponding tests in FaultTolerantExceptionClassesTests to provide functionality for managing rollback
[ hotfix ] [ config ] improve error message when config be not configure
added ` Collections . emptyMap ( ) ` to ` TableConfigTuner ` methods and updated method signatures to include ` extraProperties ` as a
added a check to prevent duplicate instances of the same instance in the PinotRealtimeSegmentsManager to improve efficiency by avoiding redundant segment additions
added a check to return null if touchable is disabled to ensure proper handling of disabled touchables in the application
added a new test method to verify the functionality of precompiled headers in a cell to ensure that the build process correctly handles precompiled headers in
throw a retryable exception if cache config be not create yet
updated package installation logic in JSweetTranspiler and added a new method in ProcessUtil to check node package installation to improve clarity and
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enhance management capabilities for MBeans in the application
updated condition in LongClickableSpan to set the inAppBrowser flag to false to simplify the conditional logic for better readability and maintainability
updated string comparison methods in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` ` . equals (
updated conditional check in ` mmm Types . java ` and added new classes ` T6558559a . java ` and `
add some more information to the worldeditlistener to help diagnose the problem .
camel - 14263 : camel - kafka should shutdown the kafka consumer when it be terminate
removed the default example method from the Schema class to simplify the schema documentation and improve clarity
replaced thread interruption logic with a loop that continues until the thread is alive to improve control flow and ensure proper termination of the loop
added functionality to remove time columns from the dimension list in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of time columns in
corrected a logical operator in a conditional statement in FacetComponent . java to improve code readability and maintainability
replaced LinkerProvider retrieval with CxxPlatforms . getParseTimeDeps in RustBinaryDescription and RustLibraryDescription to stream
added ' name ' property and its getter / setter methods to multiple authentication - related properties classes to enhance property management for better clarity and functionality
added logging statements to CFGPrinterObserver and improved error handling in IdealGraphPrinterDumpHandler to enhance debugging capabilities and ensure robust printer connection
refactor scan range retrieval in BaseQueryPlan and add small scan threshold configuration in QueryServices to improve code readability and maintainability by central
added routeId to the retry filter ' s toString ( ) method in RetryGatewayFilterFactory . java to provide more context about the filter being
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
replaced the onOverviewShown method implementation with DiscoveryBounce ' s showForOverviewIfNeeded method across multiple files to streamline the handling of
refactor null and size checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex . java and add a test for
updated the ` publish ` method call to use ` updateLastState ` instead of ` true ` to ensure the correct state is published during updates
updated string concatenation syntax for SKEWED _ STRING _ LIST _ VALUES in MetastoreDirectSqlUtils . java to ensure proper syntax
added a null element to the exp list in SpliteratorCollisions . java to ensure that the first element of the list is added to the
simonstewart : add ` ` textcaseensensitive ' ' and ` ` exacttextcaseensitivetest ' '
replaced the ' do ' loop with a ' while ' loop in ManyToManyConcurrentArrayQueue . java to improve code readability and maintain
no effective change - add backward only fetch size support for mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to prevent sending 404 back to the client when the channel is already closed
pdfbox - 4892 : optimize arraylist creation , a suggest by valerybokov
added support for rounded corners on windows in QuickstepAppTransitionManagerImpl to ensure proper window radius adjustment based on system capabilities
replaced ` ShapeDrawable ` with ` View ` for the background and icon in ` DesktopTaskView . java ` to improve layout handling
added a new instance of UpstreamCheckService in UpstreamCheckServiceTest . java to facilitate the creation of the Upstream
removed warning log statements for immortal sessions in AbstractSession and AbstractSessionManager to reduce log verbosity and improve performance by reducing log
hive - 2697 : do n ' t swallow exception in zookeeperhivelockmanager # getlocks ( )
[ hotfix ] [ javadocs ] fix checkstyle violation in executionconfig
updated mipmap generation logic in FileTextureArrayData . java to conditionally use custom data to improve performance by avoiding unnecessary mip
camel - 13631 : fix test case to use single quote instead of double quote
added selection functionality to the List class to ensure that touch events are not eated when not selectable
removed unnecessary check for empty vector vector values in LlapArrowBatchRecordReader . java to streamline the code by eliminating unnecessary checks
added file separator handling and tests in PolicyContext and TestPolicyContext classes to ensure correct parsing and evaluation of file paths across different operating systems
changed ` Set ` to ` List ` for ` flatQueries ` and ` expandQueries ` in ` FieldQuery . java ` to improve performance
refactor TLSRestrictions class for improved security to enhance security by enforcing stricter certificate validation
replaced direct producer closing with a daemon task execution in KafkaManager . java to improve resource management by ensuring producer is closed in a separate thread
updated the assertNodeStateProvider method to accept an additional parameter for ignorableNodeValues and modified its usages to enhance functionality by allowing the
added a lock file deletion if it exists in RocksdbMavenPomCache . java to ensure the cache is cleaned up when it
hbase - 26964 fix the test failure of minizookeepercluster . testhquorumpeer
added a new method ` getResponse ` to ` RestClient ` for obtaining the response from a REST call to improve error handling and logging for
[ hotfix ] [ table - planner - blink ] fix copy of segment tar uri string in ingestionutils
updated loginStudent method parameters from TEST _ STUDENT2 _ ACCOUNT to TEST _ STUDENT1 _ PASSWORD in AllAccessControlUi
added null checks for mCurrentItem ' s itemId in EnhancedBrowseFragment and StdBrowseFragment to ensure robustness by preventing potential NullPointerException
increased the number of strings from 500 to 100 in TestSpecialOperations . java to accommodate a larger number of string inputs
replaced the direct instantiation of ByteArrayInStream with an empty byte array to simplify the code and improve performance by avoiding unnecessary byte array allocation
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a check for direct substates in AbstractStateMachine to ensure proper handling of substates during transitions
added checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding test cases in MultimapTest . java to ensure correct equality
added the JoinOperation interface to the PostJoinOperation class to enhance functionality by integrating JoinOperation as a new operation
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest ` to verify PostgreSQL functionality to ensure proper execution and
fix for http : / / issues . apache . org / activemq / browse / amq - 5035 - test failure on j
rename AvaticaDatabaseMetaData . java to improve clarity to enhance code readability and maintainability
replaced integer constants for lifecycleTime , idleTime , and maxWaitTime with string representations in MongoDbConnectionPoolProperties . java to enhance flex
do n ' t use null mediaformatfactory in sdputils . createaudiomediaformat to avoid npe .
refactor filter handling methods in FacetProcessor to return boolean values to improve clarity and control over filter application logic
added functionality to enable or disable the timeout handler based on a configurable parameter to improve flexibility in handling timeout states during shuffle operations
replaced hardcoded value for mQuickStepStartingRotation with a constant QUICKSTEP _ ROTATION _ UNINITIALIZED to improve code
camel - 13663 : camel - core - optimize log and deprecate xquerybuilder # evaluateaslist and # evaluateasbytessource
use dataresource . class . getresource ( ) instead of this . getclass ( ) . getresourcepath ( ) .
add test coverage for edge case tokenizer ( # 1751 )
added a check for the presence of the ' atlas ' property in the map to ensure that the required ' atlas ' property is present to avoid
( chore ) camel - core : remove unused propertyplaceholderhelper . java
added a call to close the database in BlockchainTest . java and removed unnecessary ReceiveSource instantiation in KafkaTest . java to improve resource management
refactor code to use a separate method for retrieving lines from a literal to improve code readability and maintainability by encapsulating line extraction logic
updated import statements in WebServiceInboundGatewayParserTests . java to ensure compatibility with the latest version of Spring framework
refactor SQLBindings to use a List instead of an ImmutableList for improved flexibility to enhance code readability and maintainability by using a
added support for checking if the Java environment is OpenJDK to enhance compatibility with OpenJDK environments
added a keepAlive ( true ) method call in ReactorClient . java to enable connection stability by enabling keep - alive functionality
replaced hardcoded attribute names with constants from ShaderProgram constants in MD5Renderer . java and ObjLoader . java to improve maintainability
camel - 17763 : camel - jbang - make it easy to configure component and whatnot .
updated the null check for accountCapsule in UnfreezeBalanceActuator . java to ensure proper handling of null accountCapsule instances
updated version number for 3.8 . 1 to 3.8 . 1 in XMPPServer . java to reflect the current release status of the
replace instances of ` t ` with ` t . unannotatedType ( ) ` for consistency to ensure correct handling of unannotated types
updated assertions and configuration settings in StorageGroupProcessorTest . java to ensure correct processing of TsFile processors based on sequence and sequence file size
updated class loading mechanism to use the new " ee10 " package and improved environment management to ensure compatibility with the latest Jetty EE
added a parameter ` waitbeforestart ` with a value of 2500 in ` FFMpegVideo . java ` to set the wait time
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related classes to simplify the constructor signature and improve code
fix accessorstest to handle out - of - bound access
add a method to compile a method that return a citargetmethod .
updated test annotations in DynamoDbTicketRegistryTests and BaseAuthenticationRequestRiskCalculatorTests to use ConditionalIgnore and RunningStandaloneCondition to
fix boat not render correctly with water target . close # 189
updated the ` toString ( ) ` method in ` Directory ` and added a ` getLockID ( ) ` method in ` RAMDirectory ` to
removed the ` allowExperimentalOptions ( ) ` method from the conditional check to simplify the condition for better readability and maintainability
added utility methods for asserting paths in BDDAssertions . java to enhance assertion capabilities for improved code readability and usability
updated variable name and logic for handling host values in ForwardedRequestCustomizer . java and ForwardedRequestCustomizerTest . java to improve
updated logging level from debug to warn for Kubernetes config files and improved debug message formatting to provide clearer guidance on config file usage and
added handling for OCFile and upload statuses in UploadListActivity to improve file management and user experience during upload processes
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` and ` ProviderInstaller ` to utilize it for loading crypt
replaced instances of ` Span ` with ` TraceMessageHeaders ` in the ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests
updated the SelectFromDatabaseChangeLogStatement to use a ColumnConfig with a computed name instead of hardcoded values to simplify the database change log
hhh - 13664 - update postgresql jdbc driver to 1.1 . 1
fix calculation of partition count when datamemberssize be 0
added checks to determine if the execution scheduler is started before starting it to ensure proper handling of scheduler state and improve error logging
removed unnecessary ` toString ( ) ` method call and improved conditional logic in ` BoxBuilder . java ` to enhance code readability and maintain
fix checkstyle issue in util / statisticmap . java
updated the staged rectangle slide end value from 383 to 500 in TabletSplitToConfirmTimings . java to improve the responsiveness
updated button labels and descriptions in WaveInfoDialog and PlacementFragment to use bundle keys instead of hardcoded strings to improve localization support and maintainability
updated condition in BukkitMain to check for ownership of owned plots to improve functionality by allowing road item removal in the plot area
added a test for the setTouchExplorationEnabled method in ShadowAccessibilityManagerTest and modified the listener handling in ShadowAccessibilityManager
pdfbox - 5328 : avoid arrayindexoutofboundsexception in cmapsubtable . charcode ( )
use getname ( ) instead of getpropertyasstring ( ) to get the name of the user object
replaced multiple instances of NPOIFSFileSystem instantiation with a single method call to create a POIFSFileSystem instance to streamline code
added import statements for PlotArea and modified return logic in Move . java to ensure the code correctly retrieves the plot ' s area before proceeding
updated the version regex pattern in TestWebHCatE2e . java to allow additional characters in the version string to ensure accurate version matching
updated the check for ` count ` from ` 0 ` to ` 1 ` in ` Filters . java ` to ensure that ` count ` is
add client id to kafka consumer when there be multiple consumer thread
added error handling for non - boolean values in JavacCompiler to improve robustness by throwing an exception when the compilation fails
mow - 169 do n ' t repaint the view if it ' s already visible
camel - 14284 : fix checkstyle violation in camel - spring - batch
added a method to check if an animation has finished based on a state time to provide a way to determine if the animation has finished
updated import statements in LoginInfoEndpoint . java and added a new test for custom favicon with line breaks in LoginMockMvcTests . java
added a null check for ` otherUrl ` in ` TimeLineCursorAdapter ` and modified the refreshing text in ` HomeFragment ` to
ggb - 1561 fix for space character in eg ` ` space ' ' and ` ` backspace ' '
refactor ObjectHashSet to improve performance to enhance efficiency of set operations
refactor equality checks for arrays in DataUtilities . java to simplify null checks and improve code readability
fix forge ' s itemstack comparison , allow for deletion of enchanted books , mc - 12770
test ( async ) : add test for async rest endpoint ( # 2323 )
rename ` TARGET _ FLAT _ HEADER _ MAP _ SUFFIX ` to ` TARGET _ USER _ HEADER _ MAP _ SUFFIX ` and
added error handling and improved logging for email sending failures in MailService . java to enhance debugging capabilities and provide clearer insights into email
replaced ` resetTaskItemView ( ) ` with ` resetToEmptyUi ( ) ` in ` TaskHolder ` and ` TaskItem
added multiple test cases for partition retrieval in TestHiveMetaStoreClientApiArgumentsChecker to ensure correct functionality of partition retrieval with different batch sizes
added a closing brace to the FileListListAdapter class to ensure proper syntax and prevent compilation errors
replaced ArrayList with List in OCFile . java and OCFileListAdapter . java to improve flexibility in data structure usage
corrected the index reference from ` getChildAt ( 1 ) ` to ` getChildAt ( getChild ( 2 ) ) ` in ` Bubble
removed unnecessary " org . eclipse . jetty . util . server . internal " and " org . eclipse . jetty . server
removed the ` true ` parameter from the ` S3Request ` constructor in ` S3Request . java ` to allow the ` S3
update jfxradiobutton animation when there ' s no timeline
updated the condition for handling zero splits in DeweyNumber . java and added a corresponding test in DeweyNumberTest . java to
updated category set string handling in MwVolleyApi . java to replace " Category : " with " " to improve clarity and consistency
updated the assertion message from " Invalid close control status code 1111 " to " Invalid close code 1111 " in WebSocketClientTest . java
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader to ensure robustness by preventing potential NullPointerExceptions
removed redundant code in PersistentAttributeTransformer . java to streamline the code for better readability and maintainability
pdfbox - 2576 : avoid classcastexception in pdfnumbertreenode if page label be not a number
added a new test class TestPorterStemFilter to validate the PorterStemFilter functionality to ensure that the PorterStemFilter correctly processes
do n ' t write index update if the operation be successfully write
corrected the package name from ` org . springframework . batch . core . exlore ` to ` org . springframework . batch
fix possible deadlock in chatwindowmanager .
replaced direct calls to Sys . touch ( ) across multiple Java files to streamline code by eliminating redundant calls to Sys . touch
updated command from " - mardu " to " - mardu " in HgCmdLineInterface and removed untrackedFiles (
camel - 14263 : camel - netty should use the timer from the endpoint instead of create a new one for each endpoint
changed the ` direction ` , ` position ` , and ` intensity ` fields to ` final ` in ` DirectionalLight ` , ` Point
added minimum values of 1 for width and height in X11GraphicsConfig and WGLGraphicsConfig to ensure minimum dimensions of 1 to avoid errors
added ` toString ( ) ` method to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes and corresponding tests to ensure proper
added a new class AnnoFilterTreeSet to filter out annotated classes based on inner classes to optimize class loading by avoiding unnecessary checks for
updated the handling of newLength in BytesColumnVector . java to ensure newLength does not exceed Integer . MAX _ VALUE to prevent integer overflow
fix flaky writebehindmapstorewithevictionstest . testwritebehindmapstoreswithevictionstest
updated method signatures from ` JScrollPane ` to ` JComponent ` in ` MotifScrollPaneUI ` and ` XTextAreaPeer ` to
add expandtopoly ( ) for polynomial function , a suggest by michael klink
added a null check for the table before retrieving column class to avoid potential NullPointerException when table is not initialized
added error handling when creating CustomChange instances in CustomChangeWrapper . java to ensure robust instantiation of CustomChange objects and avoid runtime exceptions
added functionality to ` DistBuildConfig ` and updated related classes to use ` BuckConfig ` instead of ` ConfigPathGetter ` to enhance
show a warning when double entry point be use
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to a known issue to track
modified the ` doJoin ` method to return a boolean indicating success or failure to provide feedback on whether the join operation was successful
removed the getAutodeps ( ) method from JavaLibraryDescription . java to simplify the interface by eliminating unnecessary functionality
updated Intent flags to include FLAG _ ACTIVITY _ NEW _ TASK in LauncherTimelineCursorAdapter . java to ensure proper task management during
added a new method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide a way to check paging order
updated assertions in RepositoryConventionPluginTests to reference the correct repository URL to ensure tests reflect the correct repository configuration
add a new cluster affiliate task so that it can be run from a background thread .
improve error message when invalid uri be pass in .
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added support for handling arrays in CacheKey and refactored equality checks in CacheKeyTest to improve functionality and maintainability of cache key comparisons
updated file type detector implementations across various file system classes to utilize the FileSystemProvider ' s FileTypeDetector to improve compatibility with different operating systems and
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
refactor ` ShadowVirtualDeviceManager ` to use ` VirtualSensorCallback ` and ` VirtualSensorDirectChannelCallback ` instead of ` VirtualDevice
added a condition to check if the context is not removed from the session before execution in HttpSessionSecurityContextRepository to ensure that the session context is not
replaced the variable name ` lch ` with ` loopback ` and modified the logic for retrieving the loopback address to improve clarity and functionality
replaced BUF _ SIZE with DEFAULT _ BUF and updated related buffer initialization in Zlib . java to improve clarity and consistency in
added secure validation checks in KeyInfoReferenceResolver and improved exception handling in TransformXPath to enhance security and provide clearer error messages for better
added a boolean flag to track the installation status of the iconChangeListener to ensure that the action listener is only set when the icon is properly initialized
added Russian language support to the Language . java file to support Russian - speaking users
hhh - 14663 change duration type from second to NANOSECOND in basesSqmToSqlAstConverter
disable frame state verification in substrategraphkit for now
added system property resets and teardown methods in RobolectricTestRunnerTest . java and TestUtil . java to ensure proper cleanup of test
added support for loading SLF4J LoggerFactory in ViewClassLoader to enable support for SLF4J logging in the application context
added a check for " jar " packaging in ChangePackaging . java and created a new test for it in ChangePackagingTest .
updated file downloading method to use ` withExtension ( " txt " ) ` instead of ` download ( ) ` in ` FileDownloadViaHttp
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to reset the command buffer
updated JogService and Settings classes to use preferred units instead of default units to improve clarity and consistency in unit selection handling
updated date formatting in DatePatternConverterTest to use UTC timezone to ensure consistent date formatting across different time zones
modified the return statement in Terminator . java to improve code clarity and maintainability
enhanced error messages for invalid file URIs and improved exception handling for hostname resolution to provide clearer feedback on invalid file URIs and ensure proper
use jabrefexecutorservice instead of separate thread for show notification
improve test reliability by remove sleep
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve performance and reduce contention in concurrent data structures
added the ` ignore ` method to various logging classes to check if a throwable is ignored to enhance logging functionality by allowing ignored exceptions to be logged
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerException when accessing runningTaskView
removed unnecessary type casting of item . getDamage ( ) in BukkitWorld . java to simplify code and improve readability
removed the image cleanup method from PanelManager to streamline image processing by eliminating unnecessary code
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for directory management and unmap functionality to enhance directory handling capabilities in Solr
added a null check for the BaseColor object before initialization in PdfCleanUpProcessor . java and updated test cases in PdfCleanUpProcessorTest
updated the assertion in QueryEqualityTest from " graphTerms f = field1 maxDocFreq = 1000 " to " graphTerms f = field
updated the implementation of ExtendedOperatingSystemMXBeanImpl to improve performance and maintainability of the code
added functionality to install and manage left commands in the SideMenuBar to ensure that the title bar displays commands correctly within its parent layout
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and modified ` setUpWindow ( ) ` in ` TweetActivity `
added support for SybaseDatabase in the DropPrimaryKeyGenerator to enhance compatibility with additional database types
refactor Client class to improve code readability to enhance maintainability and facilitate future updates
[ java ] wait for the leader to be ready before record the last record position .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement in NearCachedClientMapProxy . java to ensure proper termination of the method execution
updated package - info . java files in mmm and ppp packages to ensure consistency and clarity in package documentation
added a method to shut down the HTTP server with a try - catch block to handle potential exceptions when starting the server
camel - 15836 - camel - aws2 - s3 : fixed checkstyle violation in camel - aws2 - s3
[ hotfix ] [ runtime ] use taskmanagershandler . task _ manager _ id _ key instead of parameter _ tm _ id
bug 10363 : drop network offerings that do n ' t exist in 228 to 229 db upgrade
added a new test class ` TestThriftCLIServiceSecurity ` and modified the password handling in ` TOpenSessionReq ` to ensure that the
added a ` maxEnergyLimit ` variable and updated its assignment logic in ` VMActuator . java ` to ensure energy limits are accur
added a new property ` maxInMemorySize ` to ` HttpClientProperties ` and updated the ` webClientPlugin ` method to use it to
refactor caching logic in Cache . java to improve performance and maintainability of the caching mechanism
added two new test files , RunCucumberTest . java , StepDefinitions . java , and StepDefinitions . java , for Cuc
refactor double value handling in TypeJsonUtils and add tests for NaN and infinite values in TestArrayOperators to improve robustness against JSON parsing
removed duplicate byte array operations in Utf8StringBuilderTest . java to streamline the test by eliminating redundancy
added checks for parameter sets and introduced a method to check for non - null keys to ensure that only valid and non - null parameters are processed
camel - 10363 : add support for limit on number of output in load balancer . fix issue with limit on number of output .
updated the assertion in TestIndexWriterExceptions to use ' assertEquals ' instead of ' assertEquals ' to improve clarity and correctness of
updated hash handling in several classes to use a new ` Sha1HashCode ` class instead of ` String ` to improve performance and reduce memory
added methods to convert Enum values to integers and long in AsmRuntime . java to improve functionality for handling Enum values in the runtime environment
add miss tag for mangrove swamp , deep dock , and deepower biome ( # 9047 )
replaced the ASYNC _ IMAGE _ LOADER _ THREAD _ PREFIX with a new REQUEST _ IMAGE _ THREAD _ PREFIX and introduced
changed access modifiers of several fields and methods in BaseTableUpsertMetadataManager from private to protected to allow subclasses to access these fields and improve code
replaced occurrences of " \ u0646 \ u064a " with " \ u064a \ u0631
replaced ` getImage ( ) . equals ( varName ) ` with ` hasImageEqualTo ( ) ` for image comparison to improve code read
( chore ) camel - jbang : add -- repos to run command
added handling for NaN scores in CrawlDbReader to improve robustness by preventing invalid scores from being processed
added timestamp handling and cleanup methods in OnStartupTriggeringPolicyTest . java to ensure proper file management and cleanup after tests
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and added window
[ hotfix ] make checkpointscleaner implement autocloseableasync
added a new file ` XPathWhiteSpaceTest . java ` that implements XML schema validation to facilitate testing of XPath whitespace handling in XML
fix ( bonsai ) : do n ' t override trie log layer during getmutable ( )
refactor FilledNewArrayInstruction class for improved clarity to enhance maintainability and readability of the code
increased the timeout duration of the SimpleNetworkTest tests from 60 seconds to 1000 seconds to ensure tests do not hang indefinitely
updated the method to check if the path path ends with a slash instead of substring to ensure correct handling of file paths that end with a slash
added a print statement to indicate the failure of loading the skin file to improve debugging by providing visibility into the loading failure
refactor LgoLevel2BatchSubscription to use markDirty ( ) and filter in LgoGroupedLevel2Update to improve clarity and
added a new constant ` UNDEFINED ` in the ` Result ` class and replaced instances of ` new Result ( status , null , null , null
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper exception handling for null callbacks in the database
refactor uploadjobmultipartoperation to use operation class instead of asyncjoboperation class ( # 19489 )
[ zeppelin - 5457 ] do n ' t recover data at position in case of corrupt journal .
bug fix : do n ' t return summary level for a node that do n ' t have a child
replaced the ` pos ` variable with a ` sizeMask ` and modified the ` ensureAvail ` method to optimize buffer size handling to
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java to temporarily disable tests
replaced the variable ` targets ` with ` endpoints ` and adjusted its assignment logic to improve clarity and correctness of endpoint handling logic
removed unnecessary whitespace in FileManager . java to improve code readability and maintain consistency
updated TransformFunctionType to include additional transform functions and modified TransformFunctionFactory to include these functions to enhance the functionality and consistency of transformation functions in
added ` getSimpleName ( ) ` and ` getEnclosingElement ( ) ` methods to ` VariableElement ` and ` package - info . java `
updated RFC reference from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compliance with RFC standards and improve
fix incorrect type cast in searchannotationvisitor
replaced ` LruCache ` with a for - loop for processing selected items in ` ListActivity ` and ` NoteAdapter ` to improve
simplified conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated ConfigFileApplicationListener to check if the path is an absolute URL and modified the path assignment logic to ensure that absolute paths are correctly handled as
updated PreviewPositionHelper to accept a Context parameter and modified clip insets calculation based on multi - window mode to improve functionality and flexibility in handling
[ java ] do n ' t publish a new leadership term if it do n ' t exist .
updated assertions in PMDCoverageTest to check for exceptions and XPath attributes to improve error handling and ensure accurate logging messages
modified ByteArrayInputStream . java to adjust skip logic and added a new Skip . java class for testing skip functionality to improve stream skipping logic and provide a
modified the condition to check for ` promptUpdate ` before calling ` showChangelog ( ) ` in ` UpdaterTask . java `
peer : do n ' t call blockchaindownload if there be too many header .
add rt . jar to the STANDARD _ LIBRARIES list in modclassloader
refactor connection handling logic in AbstractHandshakeHandler . java to improve clarity and maintainability of the handshake process
updated parameter retrieval methods to use Utils . Prop constants instead of string literals to improve code readability and maintainability by using defined constants
added a check to ensure the response is only sent when the request has not been committed to improve error handling by logging a warning when the response
updated condition checks in HttpSession . java to handle negative hold values and streamlined the polling logic to improve robustness and clarity of the session
updated fadeOutFakeTaskView to false and added conditional logic for hotseat icon visibility in SwipeUpGestureTutorialController to
add name to prefab when it ' s not present ( # 4560 )
replaced the initialization of ScimGroupExternalMembershipManager with a direct addition of " internal . superuser " to the external group set to
updated thirtyDays variable initialization in FreezeBalanceActuator . java and added validation for transfer amount in TransferActuator . java to ensure
updated lastIndexOf method to use File . separator instead of a hardcoded ' / ' to ensure compatibility across different operating systems
ggb - 1186 show error dialog only when there ' s no error
updated GpsMainActivity to use session description instead of an empty string and replaced Intent with EventBus for event handling to improve user experience by
updated JsoupNonVisualRegressionTest to conditionally check the number of pages of a document to ensure that the document is correctly saved
rename androidbufferallocator to androidnativebufferallocator and deprecate the old one
added handling for flags that start with " ! " in Main . java and PrimaryItem . java to ensure correct processing of flags that start with
jdbchistorycache : do n ' t throw npe ( we do n ' t use it )
replace string comparison with reference comparison for item use op in BattlePassManager . java to improve code readability and maintainability
updated QueuePriorityTest to use a fixed item count and improved assertions to enhance code readability and ensure accurate testing of priority elements
cloudstack - 4561 : remove unused test code in affinityapitest
added a null check for the command and updated conditional checks for verbose and help options to improve error handling and provide user guidance for command usage
change default light output size from 7 to 4 ( # 1358 )
changed the visibility of the Scanned class from static to public to allow access to the Scanned class from other packages
modified ClassWriter . java to include a blank line option and added a new class T8032819 . java for testing class fields to enhance
added an assertion to check if the ' sn ' field has a length to ensure proper validation of the ' sn ' field in the Person class
added null check for file extension before checking for DENYLIST to improve robustness by preventing potential NullPointerExceptions
replace return statement with continue in ContactRightButtonMenu . java to improve flow control in the code execution flow
[ hotfix ] fix checkstyle violation in share group assignment
simplified the screen index calculation in InstallShortcutReceiver . java to improve code readability and maintainability
refactor the binding process in PlainSocketImpl to use a delegate instance and ensure proper resource management to improve code clarity and maintainability by
added functionality to manage and clear removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve the management and display of removed items
updated log message to refer to element ' s in - view center point instead of the center of element to improve clarity of log output regarding
added a new file bug4865918 . java that tests the scrollbar block increment functionality to verify that the scrollbar block increment behaves correctly
replaced ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` and removed unnecessary initialization to streamline the
updated import statements and added group triggers functionality in QuestCommand . java to improve command handling for group triggers in the player ' s scene
fix a crash when try to select an account without a file manager
added Lombok ' s @ ToString annotation to PartitionChangeEvent and TbApplicationEvent classes to improve readability and facilitate debugging by
updated configuration URI in CloudService to use a constant for better maintainability to improve code readability and maintainability by centralizing configuration URI
removed setViewportComponent and setJScrollPane methods from BrowserPanel to simplify the code by eliminating unnecessary components
added support for the FORWARD _ DEL key and modified event handling in various classes to enhance keyboard navigation and improve code clarity
added a conditional check for indexing MIME type parts based on configuration to improve flexibility in handling content type parts based on user - defined settings
added a pattern to find the author of a method in JSDoc . java to improve the handling of method declarations by identifying and extracting the author
hbase - 25829 fix typo in metric constant name ( # 2539 )
added ` DrillHiveMetaStoreClient ` and ` DrillHiveMetaStoreClient ` to ` HiveDatabaseSchema ` and `
updated oauth2LoginLinks method to accept a MultiValueMap < String , String > for query parameters to enhance error handling by incorporating
updated TCKChronology and TestUmmAlQuraChronology to use " Islamic Umm al - Qura Calendar " and
disable audio support for firefox in ie
added a method to append server interceptors in GrpcServerBuilder and removed an unused constructor in InterceptorConstants to enhance server configuration flexibility by allowing
added default charset support to table creation statements in TestCompatibility . java to ensure compatibility with different database configurations
removed unnecessary line breaks in WriterRecordBatch and StreamingAggTemplate classes to improve code readability and maintainability
[ hotfix ] [ runtime ] fix checkstyle violation in executiongraph
added a ` hasFrom ` flag to the ` Delete ` class and modified the ` DeleteDeParser ` to conditionally append " FROM "
updated method names and logic for handling multi - status responses in SynchronizeFolderOperation . java to improve clarity and functionality of multi - status
refactor applicable test checks into a utility method for better readability to improve code maintainability and reduce duplication
updated the regex pattern in LogAnalyser . java to include a period at the end of the log line to improve the accuracy of log
( chore ) camel - google - cloud : enable integration test when application credential be not provide
fixed - redissonsearch . value ( ) method do n ' t support both inclusive and exclusive parameter
refactor license handling in CCLicenseStep . java for improved type safety and clarity to enhance code readability and maintainability while
make sure we do n ' t throw a npe if there be no globalid
replace ` actual . equals ( ) ` with ` objects . getComparisonStrategy ( ) . areEqual ( ) ` in ` OptionalAssert .
refactor memory management in NoNewLineParagraphCssApplier and ParagraphCssApplier to use a boolean variable for maximum margin to improve memory management
added a new test class ` TestArrayCopyToFromObject ` to validate array copying behavior to ensure that ` ArrayStoreException ` is properly thrown when
replaced ` Escaper . escapeAsBashString ` with ` Escaper . escapeAsPythonString ` in Python path insertion
fix for http : / / issues . apache . org / activemq / browse / amq - 2276 - do n '
fix craftinghelper . findfiles ( ) to accept an optional visitallfiles parameter
added JUnit Ignore annotation to TestLlapSignerImpl to mark the test case as unstable due to issue HIVE - 22621
added a null check for the exception returned from the client ' s doRequest method to ensure that the assertion only checks for a non - null response
( chore ) camel - spl - engine : prevent duplicate class loading
removed unused imports and updated server version comparison logic in CustomPlaybackOverlayFragment and PlaybackController to streamline code and improve clarity in server
replaced ` BasicKrb5Test ` with ` OneKDC ` and modified ` KDC ` and ` OneKDC ` to
updated Jsr250Voter to return ACCESS _ DENIED or ACCESS _ ABSTAIN based on jsr250AttributeFound to ensure
updated import statements in MP4Parser . java for consistency and clarity to improve code readability and maintainability by organizing dependencies
added HS2 _ PROXY _ USER constant and modified sessionParams handling in ConnectionFactory . java to ensure session parameters include the user ' s
camel - 16462 : camel - hdfs : add support for snappy compression ( bzip2 and snappy )
added a delay of 1000 milliseconds in HttpClientTest . java to allow time for asynchronous operations to complete before proceeding
fix bug # 49596 - allow xssf cell to be remove from array when setcelltype ( cell _ type _ blank )
updated glyph offset logic in GlyphLayout . java and modified text in BitmapFontTest . java to fix text formatting issues and improve test clarity
replaced hardcoded ISTIO _ VERSION and CONTAINER _ ISTIO _ BIN _ PATH with Commons . ISTIO _
replaced ` apiClient . ReportPlaybackStartAsync ` and ` apiClient . ReportPlaybackProgressAsync ` with ` TvApp . getApplication ( )
patch by jbellis ; review by brandonwilliams for cassandra - 1422
putfromloadallbackupoperation and putfromloadalloperation now check if the record store exist in memory before call putfromloadall (
updated the return statement to combine LENGTH _ BIT and ERROR _ BIT in ResponseFlag . java to ensure both LENGTH _ BIT and ERROR _ BIT
[ ds - 3952 ] fix default policy for community with no read policy .
replaced direct instantiation of CompositeFont with a ConcurrentHashMap to optimize memory usage by reusing CompositeFont instances
updated prefHeight calculation to initialize prefHeight to 0 instead of using getHeight ( ) to ensure consistent height behavior for node elements
( chore ) camel - dmn : fix dmn feel validation
removed unused imports and improved type safety in multiple Java files to enhance code clarity and prevent potential runtime errors
changed method visibility of ` finishRunningRecentsAnimation ` from private to public and updated execution method to use ` MAIN _ EXECUTOR `
added null check for node id in ElementFactoryImpl and enhanced edge handling in ImportContainerImpl to improve robustness by preventing NullPointerExceptions and
add warn log for unknown response
nifi - 12690 : fix nifi - 12690 : binfiles do n ' t create a session when it ' s
refactor the way the closest CoreBuild is retrieved by using a loop instead of a single tile to improve efficiency by dynamically finding the closest core
added a check to skip copying content - length in the RestTemplateCopyHeaderFilter to ensure that the request does not include the content - length
updated Java2TypeScriptTranslator to handle String and Character literals correctly and added assertions in SyntaxTests to improve TypeScript translation and ensure correctness
updated filter filter calculations and size settings in multiple classes to improve performance and responsiveness of the filter algorithm
hbase - 15411 add - allregions option to canary to check if all region be run on a regionserver
[ hotfix ] remove unused node module from testcassandraconnector
added a call to reset the cursor position in the KahaDBStore class to ensure the cursor is reset when data changes occur
added minimum size setting for CallDialog and adjusted frame dimensions in OneToOneCallPanel to ensure call dialogs are properly sized to accommodate
fix blockfalling ' s state information be lose during world gen . close # 3503
refactor TestHTTPSamplersAgainstHttpMirrorServer to use JUnit framework and simplify setup methods to improve test readability and maintainability
added null check and removal logic for KerberosPrincipalDAO and removed unused imports in KerberosPrincipalEntity and KerberosPrincipalHostEntity to improve
removed the boolean parameter from the getTableSnapshot method call to simplify the method call by eliminating unnecessary parameters
improve error handling by log a warning if the poller run too quickly .
updated error message in AndroidGradleBuilder to clarify the build hint related to Monetization setup to improve user understanding of the
updated the creation of ` FileTranscodeVirtualFolder ` to use ` getDisplayName ( ) ` instead of ` getName ( ) ` and modified the
[ drools - 6271 ] resolve relative package name for spring - inf . classes when run with maven - plugin
added an assumption to check if the runtime version is 19 to ensure compatibility with specific features in CheckIndexTest
removed unnecessary context parameter from assignTargetsForSplitScreen method in AbsSwipeUpHandler and updated target assignment logic in RemoteTargetGluer to
refactor LeaderLatch class for improved readability to enhance maintainability and facilitate future updates
added methods to initialize and retrieve parameters for Zksnark in SolidityNodeHttpApiService to enhance the functionality of Zksn
transaction . getdepthinblocks ( ) now return a future rather than throw an exception .
added a createMediaRecorder method in CodenameOneImplementation and corrected spelling in Location and MapComponent classes to improve code clarity and
set default platformName to " ios " to ensure compatibility with iOS platforms
doc : generate sample code in the java microgenerator ( # 446 )
added braces around conditional statements in Graphics2D . java to improve code readability and maintainability
pdfbox - 3017 : fix typo find by codespell on fossies . org
added error handling around outgoing frame processing in AbstractExtension . java to improve robustness by ensuring that exceptions are logged and handled appropriately
replaced manual exception handling with privileged actions in ContextHandler . java to improve security and simplify caller class retrieval process
added logic to set the parent of all child categories to null in FeedCategoryREST to ensure that all child categories are cleared when a specific category
updated ContributionManagerDialog to use dynamic titles for different contribution types to improve user experience by providing clearer context for contributors
added a BigDecimal field ` vwap ` to the ` Ticker ` class and updated related constructors and methods to enhance the ` Ticker
added a TextView to manage the visibility and padding of the noWidgets view in SearchAndRecommendationsScrollController and WidgetsFullSheet to
add rendergraphapi to make it easy to add a tintnode to the render graph .
added primary color to NCFirebaseMessagingService to ensure the service uses the correct primary theme color
updated ShadowUsbManagerTest . java to improve test coverage to enhance reliability of the USB manager functionality
updated calculations in ` AbstractDifferenceRecommenderEvaluator ` and added logging in ` AverageAbsoluteRecommenderEvaluator ` and ` RMSRecommenderEvaluator
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is updated correctly
updated bounds calculation to ensure minimum values of 1 to prevent potential rendering issues with negative dimensions
pdfbox - 4071 : use linkedhashmap instead of hashmap to preserve insertion order
replaced nativeClosureManager with closurePool in NativeClosureFactory . java to improve closure management by utilizing a centralized closure pool
( chore ) camel - test - dsl : migrate test to junit 5 ( # 4527 )
added new files ` WebsocketIngressIntegratedBootstrap . java ` and ` WebsocketPluginTest . java ` to implement and test WebSocket integration
[ dsm - 3952 ] remove unused test ( # 3952 )
refactor authentication comparison logic to use a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by
added a conditional check for the JNI " jnr . ffi . compile . x86asm " system property to ensure that the X
replaced calls to ` callNode . getType ( ) ` directly with a local variable ` callNodeType ` to improve code readability and reduce
added a new annotation interface ` Insecure ` and modified the constructor in ` MessageBuffer ` to enhance type safety and clarify the purpose of
added new configuration variables for various Hive settings in HiveConf . java to enhance the configuration options for improved functionality and performance
initialize scopes and policies with a new HashSet in ResourceSet . java and add a null check in DefaultResourceSetService . java to ensure that
made the ` decrefOnClose ` field final and modified the constructor of ` MultiReader ` to accept a ` Collection < ReaderFinished
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , and TestFrameSize classes to improve code
danielwagnerhall : use setvalue ( ) instead of towebelement ( ) . clear ( ) in test
added ` final ` modifier to classes in ` GsonTypes ` and ` LinkedHashTreeMap ` , ` LinkedTreeMap ` , and `
changed return types of keySet ( ) and values ( ) methods from Set < Integer > to KeySet and Collection < Integer > to improve type
added a duration property and modified background color handling in FlipTransition to allow customization of animation duration based on user preferences
added logging statement to indicate that subsAreValidForStreaming is not set to true to improve traceability of the subscription validation process
bump major and minor version for forge 1.10 . 0
replace System . err . println with LowLevelLogUtil for warning messages in StackLocator . java to improve logging consistency and support multi - release
add java 16 validator and post processor to the parser ' s parser configuration
updated padding settings for the status view in ExpansionViewHelper . java to ensure proper layout behavior for different replies
updated version check and callback handling in AbstractPartitionPrimaryReplicaAntiEntropyTask . java to improve code clarity and ensure proper callback execution
added metadata handling functionality to SeedUrl and SeedResource classes to enable storage and retrieval of additional information associated with seed URLs
add a null check for declaration before creating a cloned pattern to avoid potential NullPointerException when declaration is null
[ hotfix ] [ test ] fix typo in testcoprocessorwhitelistmasterobserver
ww - 4352 add package name to the generated action config name ( # 4353 )
updated assertions in IterableTest to explicitly cast null arguments to Object array to ensure proper type handling for null arguments in assertions
added stream ( ) and parallelStream ( ) methods to MapIterable and PrimitiveObjectMap classes , and created corresponding tests in MapIterableTestCase
modified return statement to clone the notifInfo object to ensure that the original notifInfo object remains unmodified
ggb - 1357 fix problem with duplicate key in web ( for web )
refactor AEADBlockCipher class for improved readability to enhance maintainability and facilitate future feature additions
added ` isVariableLocal ` methods to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a check to initialize the ` id ` variable in ` PackageResourceTable . java ` and changed the default resource mode from ` best `
added a condition to check if ` ulSize ` is zero and ` ulPos ` is zero before retrieving the ` head _ Table ` and
updated the ` SignPlugin ` constructor to accept a list of ` HttpMessageReader < ? > ` instead of a static list to allow for
refactor Int2ObjectCache class for improved performance to optimize cache retrieval performance and reduce memory usage
added validation check for MavenDeployer instance in StandardMavenAuthenticationProvider to ensure proper handling of remote repository instances during authentication
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - enedis : enable ssl for enedis connection
added imports for OracleSqlOperatorTable , SqlStdOperatorTable , and OracleSqlOperatorTable , and refactored HiveFunctionRegistry to use
resolve http : / / issues . apache . org / activemq / browse / amq - 2279 - add mbean support for
updated the method signature of getBuildTargetForAlias to include a possiblyFlavoredAlias parameter and modified its logic to remove the ' # '
camel - olingo2 : fix olingo consumer to return 0 for empty feed
added a mapping of Hive version strings to their equivalent versions in MetaStoreSchemaInfo . java to ensure compatibility with different Hive versions by returning the
server : do n ' t try to expunge a vm that be already expunge
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used in new code
refactor ONDashClockExtension and AlarmReceiver to use a new method for retrieving alternative titles to improve code readability and maintainability
updated GoogleAuthUserConfigTable to use " nvarchar / varchar " instead of " varchar " for database columns and modified assertions in tests to
replaced ` commit ( ) ` with ` apply ( ) ` for saving shared preferences across multiple classes to improve performance and consistency by utilizing
added TestIdleListener to the StandardSession in AsyncTimeoutTest . java to enable handling of idle states during session creation
[ beam - 8470 ] add test _ id to test table name in bigqueryioit
added background resource and reset functionality in HotseatPredictionController and set background to null in BubbleTextView to enhance visual appearance
mondrian : rename getflushafterquery property to flushafterquery
[ native ] add test for nativeworker native query
updated LIMEExplanation to check for ALL _ OUTPUTS before retrieving active features to ensure correct retrieval of active features based on the model '
added a new parameter ` args ` to the ` AppleSimulatorController ` , ` InstallCommand ` , and ` AppleSimulator
fix npe in lineselection # getabsoluteposition when the area be negative
added a check for the current state of the pipeline before proceeding to ensure that the pipeline is only processed if the current state is available ,
added clipping to the background view in QsbWidgetHostView to enhance the visual appearance by improving the background appearance
added performance tracking for flag processing and improved input handling in multiple classes to enhance performance monitoring and enhance input validation for flags in plots
replaced multiple specific OpenGL imports with a wildcard import and modified depth handling logic in FloatingTextRenderer . java to improve code readability
move libffi - specific class to libffi - libffi - linux and fix compile error
refactor JdbcAggregationRepository to use a configurable propagationBehavior variable instead of using a hardcoded value to improve flexibility and maintainability of transaction
[ refactored ] support l1 and l2 regularization in base layer configuration
added error handling for reading and writing operations in AbstractChecker . java to improve robustness by logging errors during read / write operations
changed the visibility of the colorStack variable from static to instance to allow multiple instances of GlyphLayout to maintain their own colorStack instance
updated method calls from ` getMappedStatement ` and ` hasStatement ` to ` getMappedStatement ` and ` hasStatement ` to enable the
converted ` tradableIdentifier ` and ` currency ` to lowercase in ` BTCEPollingMarketDataService . java ` to ensure
updated assertions in ChannelStateTests to reflect correct command addresses to ensure accurate validation of command states in tests
remove ` versionedhashes ` from ` enginepayloadparameter ` ( # 6017 )
set trigger price to empty when create offer
refactor : fix checkstyle issue in studentfeedbacksubmissioneditsaveaction
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 1563 addendum fix hstore . isdebugenabled ( ) to check if the result be true
# 927 - fix for # 927 - entitybeanintercept . setmanyproperty ( ) do n ' t call setloadedproperty (
added a new boolean variable ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to allow configuration of
added static methods nSetLayerType and nSetLayerPaint in ShadowRenderNode . java to enable customization of layer type and paint settings
replaced specific AWT imports with wildcard imports and added visibility handling for JPopupMenu in LWChoicePeer to improve code readability and
removed redundant initialization of the ` insert ` variable in ` StressProfile . java ` to streamline code by eliminating redundancy
replaced calls to ` scala . collection . JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable `
added null check for requests before processing in MockServerEventLog . java and enhanced logging in HttpForwardObjectCallbackActionHandler . java to improve
log warn if property file can not be load
refactor session dataset handling in ClientMain . java to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added a check for multicast support and network up status in SetOutgoingIf . java to ensure that multicast functionality is only allowed when the network is
modified the instantiation of ` sqlCommand ` to include a length parameter to ensure that the command is properly formatted for further processing
updated methods in UnDelegateResourceActuator and removed redundant time - related methods in BandwidthProcessor and EnergyProcessor to streamline resource
added a method to set and retrieve the InvalidSessionStrategy in SessionManagementConfigurer to ensure that the invalidSessionStrategy is not null and improve
improve error message when a token can not be find
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of keys in a map to ensure that the map
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 349 . add
added a method ` ensure ` to ` ServerWebSocketContainer ` and updated ` DirectUpgradeTest ` to use ` Handler ` instead of ` Context
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in the ` toLanguageFlags ` and ` getLanguageFlags ` methods to standardize the
pdfbox - 4892 : use point2d instead of float , a suggest by valerybokov
added an EMPTY constant for MethodHook and simplified the initialization of hooks in Method . java to improve performance by avoiding unnecessary object creation
added a ` grantAccess ` flag to the ` MockAuthenticationManager ` class and modified the authentication return logic to allow users to control access to
updated afterJob methods in JobListener , CompositeJob , and SimpleJobListener classes to accept a JobExecution parameter to enhance job listener functionality by allowing
added a check for file execute permissions in SharedLibraryLoader . java to ensure files are only written if they have permission to execute
feat ( time seriesquery ) : update protoc to v3.20 . 3 ( # 130 )
bug 60533 - fix bug in samplerservice to use the correct data type
added constants for battery level , annotation , timing period , and profile name in BundleConstants . java and updated CustomUrlManager . java to
change method signature from Hashtable to Map in applyRule method to improve flexibility in handling different data structures
ggb - 1883 move absolute screen locables from widget to object ( not widget )
updated the resize method in JoglGraphics and modified texture and UI configurations in ProjectiveTextureTest to ensure proper resizing behavior and enable
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void to improve method usability by allowing the method to
camel - 3490 fixed the issue that property component be not resolve from the classpath . thanks to benjamin graf
updated condition in ActionScheduler to check if the current time is less than or equal to the last attempt time to ensure that the scheduling logic correctly
updated debug log path from " ums _ dbg . zip " to " / tmp / ums _ dbg . zip " and added null
fix ( renderdebugconfig ) : bind the hud _ hidden event to renderdebugconfig ( # 4896 )
add a reset gate method to the pipe so it can be reuse by other pipe .
added locale management to the TestSupplementary class to ensure the default locale is restored after running tests to ensure consistent locale behavior during tests
updated the randomness of the team color from 0.8 to 0.4 in the Team constructor to improve the randomness of the team
replaced Set with ArrayList for activeMatchedStates and modified logging statements to improve performance and ensure logging occurs only when fine logging is enabled
updated the condition to check for null annotation in SoftAsserts . java to ensure proper handling of cases where the annotation is null
updated error messages in StorageResources and added exception handling in StoragePluginRegistryImpl to improve clarity of error messages and handle specific exceptions more effectively
feat ( calltreeprinter ) : rename csv report to csv file
added null checks and improved note handling in DetailFragment . java to ensure robustness by avoiding potential NullPointerExceptions
added logic to track and calculate the total number of loaded tasks in the AssetManager class to improve accuracy in loading calculations based on the number of
danielwagnerhall : disable native event on window by default
added custom metadata handling for Nutch in the Injector class to allow dynamic configuration of score and fetch interval based on user - defined metadata
updated import statements from ` org . apache . commons . collections ` to ` org . apache . commons . collections4 ` to ensure compatibility with
added a method ` isShareSchema ( ) ` to ` CoreContainer ` and a corresponding test in ` TestCoreContainer ` to enable sharing
updated sizeInBytes method calls to use ' true ' for consistency across multiple classes to ensure accurate size representation in the indexing process
replace assertEquals with assertNull for version1 _ 2 in VersioningTest . java to ensure that version1 _ 2 is correctly initialized and
updated SQL query to include type information for non - null domain columns to ensure proper handling of non - null domain columns across different PostgreSQL server versions
[ java ] do n ' t call appendnewleadershiptermevent in appendnewleadershiptermevent when leadership
removed unused import of MediaType and updated the buildMediaType method to use MediaType . APPLICATION _ JSON _ VALUE to streamline code by eliminating
replaced calls to ` bytes . fillUsingLengthPrefix ` with ` bytes . fillAndGetIndex ` across multiple files to improve performance by using
added a boolean variable to check if the base is compacted and valid transaction IDs are valid to improve code readability and ensure proper transaction cleanup
set default values for immutable storage and qualifier encoding schemes in PTableImpl . java to ensure proper initialization and avoid potential null pointer exceptions
added new files PojoProducersCustomized . java and RestProducersCutomized . java to implement customization and cutomization
replaced hardcoded string " cache " with a constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability
removed redundant registration of AesGcmSivProtoSerialization to streamline serialization process and improve code clarity
make daylight sensor recipe use ore dictionary wooden slab close #
refactor session - related classes for improved clarity and consistency to enhance maintainability and readability of the session management system
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed the ` SourcePathResolver ` parameter to simplify the class
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 13536 - fix test failure on oracle
adjusted the drawing position of the sprite batch in HelloWorld . java to correct the positioning of the texture to ensure the sprite is drawn
modified the y - coordinate calculation logic in PlayerFunctions . java and improved string representation in PlotId . java to enhance code clarity and
added a deprecated static final Version constant for Lucene 8.5 . 0 to signal that this version should no longer be used in favor of
updated the string concatenation in the print statement for clarity to improve readability of the print statement for better debugging
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to verify SQL parsing and deparsing for signed
replaced String dependenciesType with SemanticGraphCoreAnnotations . DependenciesType in CoNLLUOutputter . java to improve type safety and
refactor ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods to use ` parseContext . makeTargetDescription ` to
updated test method from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to improve test
updated configurationBlocks array size from ` Block . blocksList . length ` to ` 256 ` and adjusted loop iterations accordingly to improve memory efficiency and
updated print statements to use System . out instead of PlotSquared . log and modified title handling logic in BukkitMain . java to improve
updated SQL statement escaping logic for PostgresDatabase in AbstractSQLChange . java and AbstractSQLChangeTest . java to ensure correct SQL generation for
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and its implementations in ` MutableBagFactoryImpl ` to
updated validation checks for file names and attributes in BuildNavAndPDFBody . java to ensure correct file format and improve error handling for adoc
updated MqttBrokerConnection constructor to include a new boolean parameter to ensure compatibility with updated protocol requirements
refactor ChangeSet retrieval logic to check for a root change log before retrieving the change set to improve robustness by ensuring the change log is
[ issue # 5370 ] fix the issue of empty response body ( # 5370 )
added database drop functionality in TestHiveMetaStorePartitionSpecs and logging in TestObjectStore to improve database management and facilitate debugging
added a new parameter " order _ currency " to the BithumbAuthenticated and BithumbAccountServiceRaw classes to enhance functionality by allowing
deleted the SSEFluxWebConfig . java file to remove unused configuration to streamline the codebase
updated method return type checks to use ` getReturns ( ) . isVoid ( ) ` instead of ` getFullyQualifiedName ( ) ` to
[ te ] add listyamls ( ) endpoint to return list of yaml ( # 4890 )
removed the public access modifier from the equals and hashCode methods in the Marker class to enforce encapsulation within the class hierarchy
replaced anonymous ThreadFactory with a lambda expression and refactored awaitTermination method to improve code readability and maintainability by reducing red
added unit tests for ` PersonWithAList ` in ` MongoTemplateTests ` and created a new class ` PersonWithAList ` to
simonstewart : do n ' t scroll the applet if the size difference be small
replaced direct toolbar visibility setting with a delayed execution using a Handler to ensure the toolbar is displayed after a delay to improve UI responsiveness
[ iotdb - 3640 ] fix duplicate data read in series reader ( # 7340 )
server : do n ' t try to save vm password when router be stop .
set default values for usingOutputStream , usingWriter , and isCharacterEncodingSet in Response . java to ensure proper resource management and prevent potential issues
added a warning check for assignment side effects in GroupDialog to enhance user experience by preventing unintended side effects from being assigned
refactor JSON and JSONObjectConvertor classes for improved consistency to enhance maintainability and readability of the codebase
updated the icon width check from maxHeightWithMargin to maxWidthWithMargin in FileUploadApiController . java to ensure the icon does not exceed the
refactor code for improved readability and functionality in ` RegisteredServiceProperty ` and ` JwtTokenCipherSigningPublicKeyEndpoint ` classes to enhance
added file reading and mime type checking functionality in Basic . java to ensure proper handling of file system content types across different operating systems
fix nettyconnection . iscompressed ( ) and nettyconnection . addcompression ( ) not implement .
added a static method ` doesClassLoaderDescendFrom ` to ` Util ` and removed duplicate code in ` MethodHandles ` to streamline class loader
removed the try - catch block from the ` connect ` method in ` ChannelProvider ` and ` ProxyChannelProvider ` to simplify the method signature
added functionality to handle empty final columns in CSV processing and created a test for it to ensure proper handling and testing of empty final columns in CSV
added gravity and margins to NearbyMapFragment to improve layout consistency and visual appearance of the nearby map
added two test methods for verifying distance calculations in GeoPath to ensure accuracy of the interpolation algorithm ' s distance
added exception handling to methods in LeafFilterFactory , ParquetFilterPredicateConverter , and TestParquetRecordReaderWrapper to improve robustness by
added language setting logic for video streams in LibMediaInfoParser . java to ensure correct language is set for video streams
added a warning log when schemas in the new version are less than the old version to inform users about potential compatibility issues with schemas that may have
replaced repetitive ` System . arraycopy ` calls with a ` addAll ` method across multiple array - related classes to improve code readability and
added braces around the try - catch block for closing the connection to improve readability and maintainability of the code
added constructors and assertions for null and empty client registrations in InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to ensure proper initialization
added a method to reset the UI state in SchemaUpgradeHelper to ensure that the UI state is correctly reset after schema upgrade
added functionality to handle pending exceptions in JUnitReporter to improve error reporting by distinguishing between pending and non - strict failures
add a playerselector . java patch to allow . in entity selector . close # 17987
added Closeable interface to the Selector class to enable proper resource management and support for closing the Selector class
updated connection pool configuration in MaxConcurrentStreamsTest . java to optimize connection management for improved performance
added multiple calls to stringType ( ) in CoreOptions . java to ensure consistent string type handling across the application
updated HqlQueryRenderer to handle character and parameter contexts and modified test configurations in EclipseLinkUserRepositoryFinderTests to ensure compatibility with H
updated status handling in multiple classes to use HttpStatus constants instead of hardcoded values to improve code readability and maintainability by using named constants
pdfbox - 4892 : simplify code , a suggest by valerybokov
fix hikariprophicpscollectortest failure due to slow connection creation
updated ParquetFormatPlugin and ParquetGroupScan to use expandSelection for file selection and added metadata file existence checks to improve selection logic and
updated the success flag and improved the compilation process in Jsr199Javac . java to ensure proper handling of compilation success based on
added a new ` TableModelListener ` class and integrated it into the ` DefaultSortedTableModel ` to enhance event handling for table changes in
[ hotfix ] [ server ] fix serverconfig # setconnectiontimeout ( )
added document provider handling for devices running Android KitKat and above in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to
removed the call to ` Log _ OC . startLogging ( getAppContext ( ) ) ` in ` MainApp . java ` to stream
added error handling for wrapped ` RequestRejectedException ` in ` FilterChainProxy ` to ensure proper handling of wrapped ` RequestRejectedException ` to
updated the calculation of ` newSize ` and modified the arraycopy call to use ` this . length ` instead of ` length + length ` to ensure
pdfbox - 4892 : throw an exception if the filter list be empty , a suggest by valerybokov
add a new stopwatch class to make it easy to start a new stopwatch
set the initialization state of PListStore to true to ensure proper initialization of the PListStore
added @ Deprecated annotation to multiple classes to signal that these classes are outdated and should no longer be used in favor of newer alternatives
[ hotfix ] [ zeppelin - 4346 ] fix classloader issue in interpreterserver
fix nullpointerexception in commandsourcestack . getentity ( )
updated minSdk version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility
corrected the variable name from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java `
improve display of bean name in query plan
replaced " wro / all . js " and " wro / all . css " with " static / all . js " and
added a new test method ` showLatestTimeseriesTest ` to the ` IoTDBMetadataFetchIT ` class to verify the functionality of the
rename " appContextLocation " to " contextConfigLocation " across multiple files to improve clarity and consistency in naming conventions
updated exception handling in OCSPChecker to differentiate between CertPathValidatorException and other related exceptions to improve clarity and specificity of exception
benchmarker : add option to disable write output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` for verifying slice size reopening functionality to address issue # 815 related to map
fix miss pipe recipe in the crafting system . close # 1956
[ mahout - 663 ] fix infinite loop in sequentialaccessSparsevector . iterator ( ) .
added handling for Shulker entities in BukkitMain . java and integrated metadata management in EntitySpawnListener . java to enhance entity
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
added imports for File , OutputStream , and FilenameFilter , and implemented methods to retrieve maximum directory and file name lengths to improve code clarity and
added a check for tag matching in UpToTagChangeSetFilter to improve error handling and provide user feedback when a tag is not found
[ beam - 10670 ] use java . util . arraylist instead of com . google . common . collections . lists
refactor BrokerRoutingManager to improve code organization to enhance maintainability and readability of the routing logic
changed color constants for volume and up paint in CandlestickRenderer from Color . gray to Color . GRAY and Color . G
refactor layout parameter handling in InsettableFrameLayout to use a new class for layout parameters to improve code clarity and maintainability by
added a new method ` getDuration ( ) ` to the ` BuildTargetDurationListener ` class and updated corresponding tests to include a new duration field
replaced @ Profile ( " db " ) with assumeTrue ( " db " ) in multiple integration test classes to ensure tests only run when
added a null check for the user object before processing claims to avoid potential NullPointerExceptions when the user is null
camel - 3443 : camel - jbang - add advicewithroutebuilder to replace route from endpoint . thanks to benj
replace concurrent skip list with non - blocking set for statement
api : listpublicipaddresses - add networkid parameter to listpublicipaddresses api command
added tests and implementation for ignoring battery optimizations in ShadowPowerManager and ShadowPowerManagerTest to ensure correct behavior of the isIgnoringB
updated the Jetty version retrieval to use a build property instead of a hardcoded value to enhance flexibility by allowing the Jetty version to
added tests to validate the behavior of the VerifcationInOrderVerifier to ensure that the verifier correctly reports the number of invocations in order
modified the evaluation logic in TRegexExecNode to handle no match instances to improve debugging clarity and ensure accurate evaluation of regex results
added " - foreground " flag to the profile start method in NewProfileExtensionConnection . java to ensure that the process starts in a foreground mode
replaced ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve clarity
replaced the ` parseFieldnames ` map from a ` Map < String , String > ` to a ` String [ ] ` array to
replaced ` getFile ( ) ` with ` getFile ( ) . getName ( ) ` in ` CodeEditorView . java ` and added null
improve error message for skipped entries in ClassFileReader and JdepsTask to enhance debugging by providing more context about skipped entries
added LinkStorage to Fetcher and updated FetcherMain and FetcherTask to utilize it for better document storage management to enhance functionality and
updated the populateBubble method to accept an existing bubble and modified its logic to handle the case where an existing bubble is already populated to improve
( chore ) camel - schedule : remove unnecessary check if warn be enable .
refactor ` buildRpcExt ` method to accept a single ` Method ` instead of an array to simplify method signature and improve code readability
[ java ] use nak delay generator for multicast conductor and receiver .
replace GsonBuilder with JsonObject and add client properties to the response to enhance JSON serialization for client information
added a conditional check before setting the average price for open orders to ensure that the average price is only set when the field amount is non -
removed the rawExecutionReports method and simplified the assignment of executionReports in BinanceStreamingMarketDataService . java to streamline the code
added a method ` fail ( Exception e ) ` and modified the ` fail ( Exception e ) ` call in ` LdapTimeoutTest . java
fix for ticket : 308 -- ignore non - existent user dictionary .
added a check for blank password file or credential store alias in AmbariServerConfigurationHandler . java and updated test expectations in RootServiceComponent
added a check to skip parsing of a segment if it already exists to improve efficiency by avoiding unnecessary processing of segments that already have been parsed
[ hotfix ] [ yarn ] add a config option for application attempt failure validity interval
do n ' t try to unload the h2 driver if it be not include
hbase - 24463 add default readtype configuration for snapshot - based inputformat scanner ( miklos gergely , review
added fixed height and width parameters to the LoginInstanceRequest class to enhance user interface by allowing dynamic adjustment of instance login dimensions
added cornerRadius parameter to multiple update methods across multiple classes to allow dynamic adjustment of the corner radius during animations
updated the COMMANDS _ TO _ REMOVE string to include " DESC ( RIBE ) " and " SHOW [ RIBE ]
work around bONEcp bug in getconnection ( )
rename the method ` txnEnsureReserve ` to ` txnCheckReserve ` and introduce a new method ` txnEnsureBackupReserve
added a final char array to the FirstOfStringsMatcher class to store string data for further processing
updated DELETE statements to include " DELETE ROWS CLIENT SELECT " and " DELETE ROWS SERVER SELECT " in CostBasedDecisionIT and DeleteCompiler
added retryability check for SocketException in BaseServiceException to improve error handling by distinguishing between socket timeouts and socket exceptions
added a new parameter ` rapidInstallTypes ` to several methods in ` AdbHelper ` , ` RealAndroidDevice ` , and `
updated the regex pattern for the seed pattern in SortTest . java to allow additional characters to be processed in the seed pattern
refactor ` MultimapSubject ` to use a factory for creating ` IterableValuesForKey ` and ` iterableEntries ` to improve code clarity
simplified the return statement in Workspace . java by removing unnecessary condition to improve code readability and maintainability
added a ` transmux ` boolean field and related builder methods in ` Transformer ` , ` TransformerInternal ` , and ` TransformerEndTo
added localization handling for string values in Picker . java to ensure that localized strings are properly displayed to the UI
camel - 2347 : camel - cxfrs - fix the npe issue of default cxfrsconsumer
hhh - 13564 - handle lock acquisition and deadlock in postgresql 11.1
added assertions to ensure queryId is initialized before executing a query in TestJdbcDriver2 . java and modified imports in HiveStatement . java to
exclude usesunboundedpcollections from pardotest since it do n ' t use it
removed unnecessary HTML tags in GpsSimpleViewFragment . java to simplify the code for better readability and maintainability
[ java ] remove unused leadershiptermid from log replay .
replaced direct calls to ` getHttpExchange ( ) ` with a local variable ` exchange ` in ` HttpSender . java ` to improve code
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
rename ` token ` method to ` apiToken ` in ` AppOpticsPropertiesConfigAdapter ` to improve clarity and consistency in API token
added null checks and improved equality and hash code generation in Recipe , SearchResult , and Markers classes to enhance code robustness and prevent
pdfbox - 4892 : use double instead of float for getfontsizeasfloat , a suggest by valerybokov
fix addressbook docooresultparser to handle multiple email
updated exclusions handling in RawMavenResolver to use a set instead of a stream to improve clarity and efficiency in managing exclusions
added error handling and updated currency pair information in DSXAdapters and DSXPairInfo classes to improve robustness and provide clearer error handling
updated TestBlockingIO , TestParsingTable , TestResolvingIO , and TestValidatingTable files to improve code organization and maintainability
[ drools - 90 ] fix kiemoduleincrementalcompilation test failure
updated the initialization of the ` copy ` variable and added a check for ` sobj . has ( k ) ` before invoking ` defineOwnProperty
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
fix hostfielddesc to use unreflect method handle instead of findstaticgetter / findsetter .
added a method parameter for CompletableFuture in DefaultNullnessAnnotations . java to enable null handling for completion stages in the database
updated the calculation for the freeze checkpoint duration in PlaybackController . java to correct the calculation for the freezing point based on the current
added import statements for Whitebox and Annotation in AbstractCommonPowerMockRunner . java and removed it from PowerMockRunner . java to streamline
updated the unmarshalIn method to use realType ( ) instead of typeCode to ensure compatibility with the actual object type during unmarshalling
refactor indentation handling logic in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
replaced LuceneTestCase with JUnit TestCase in TestSingleTokenTokenFilter to standardize testing framework usage across the codebase
modified the column writing logic in HtmlProcessInformationsReport . java to include a wrapped text cell to improve the readability of the output by
refactored JdbcStepExecutionDao and MapStepExecutionDao to utilize ExecutionContext and LobHandler to improve code organization and maintainability
added a condition to check if the media folder should be hidden before adding it to the root folder to ensure that the media folder is only added
added null check for actor and updated widget management logic in SplitPane . java to improve error handling and ensure proper management of widgets
added handling for JavaType . Parameterized in RemoveUnusedImports . java to improve type management by associating parameterized types with their corresponding package names
fix npe in uniquemodlistbuilder when there be no modinfo
changed the logger initialization from instance variable to static final in TicketGrantingTicketImpl . java to improve memory efficiency by reusing the logger instance
updated the SQL string in PhysicalPlanTest . java to include a new version of RLE to ensure compatibility with the latest version of the timeseries
added a method ` isValue ( String value ) ` to ` AttrData ` and modified ` Converter ` to check for value existence to improve value
added support for handling character modifiers in specific locales in CPlatformResponder . java and implemented methods in LWCToolkit . java to improve
[ java ] set aeron _ publication _ connection _ timeout for c medium driver .
added a check to return false for specific request URIs in GTVGFilter . java to ensure that only relevant URIs are processed to prevent processing of
added assertions to verify the installation of the APK in TestUtil . java to ensure that the device is rooted before proceeding with the
no effective change - move sqllimiter to oracleplatform
updated the expected length of enabled secure transport protocols from 1 to 3 in tests to ensure the tests validate the correct number of enabled secure transport protocols
updated paths in DiffRuleKeysScriptIntegrationTest . java to use the correct library version to ensure compatibility with the latest changes in library dependencies
added a check to ensure that dismissal occurs only when the haptic is not running to improve user experience by preventing unintended
fix explosion exploder not be set correctly for projectile
added ` setHasStableIds ( true ) ` and modified ` getItemId ( int position ) ` method in ` SymbolInputAdapter . java
updated the API path format for the getBook method in Bitfinex . java and changed limit values in BitfinexPollingMarketDataService .
camel - 13636 : camel - core - xml should not escape single quote in test
[ hotfix ] [ k8s ] improve the string representation of kubernetesleaderelectiondriver
refactor SqlSessionFactoryBean for improved clarity to enhance maintainability and readability of the code
[ hotfix ] fix nullpointerexception in tripleinvoker # getpurearguments
fix polygonregionloader gwt compatibility and error
added a method ` isStarted ( ) ` to check if a deadline is active and implemented timer registration logic in ` RawStoreProxy ` to
added handling for ` ClosedChannelException ` in ` NettyRequestExecutor ` to provide clearer error messages when a channel is closed
updated text setting logic in ItemListActivity to handle null genres to improve robustness by preventing potential NullPointerExceptions
[ hotfix ] [ checkpointing ] ensure that reset hook be call in region recovery
fix entitydatajsonformat . entitydatajsonformat . extractmap ( ) and entitydatajsonformat . entitydatajsonformat . extractmap
[ hotfix ] [ runtime ] fix npe in walnode # getoldestunpinnedmemtableinfo
refactor handler invocation in Endpoint . java and add a new test for retrying same host on callback failure in HttpTest . java to improve code
fix checkstyle issue in com . oracle . truffle . tutorial . background
added a new test class SQLServerEscapeQuestionCharacterTest to validate SQL Server query escaping to ensure correct handling of special characters in query parameters
added @ NonNull annotations to constructor parameters in CamelModule and modified findBean method in JoobyBeanRepository to enhance null safety and improve
replaced synchronized block with a while loop in JavaFXSEPort . java to improve code readability and performance by using Util . wait instead
updated package structure from ` com . kenai . jaffl ` to ` com . kenai . jaffl . provider
refactor cropBehaviour creation and loading logic to use a dedicated method for different image object types to improve code readability and maintainability by
removed the appName parameter from the configure methods in InputRC and related classes to simplify the configuration process by eliminating unnecessary parameters
[ gr - 19640 ] add test for ignore dependency for install / uninstall
danielwagnerhall : add -- headless = chrome to the chrome option to allow headless mode to be run in
replace value assignment with value interning in VersionedValue . java to improve memory efficiency by reusing string instances
added a check for " MOVE " status in addition to " DELETE " to allow handling of the " MOVE " status alongside
updated date formatting strings in FixedDateFormat . java to ensure consistency in date formatting across different locales
updated import statements in SplitSystemCatalogIT , ViewIT , and PhoenixQueues to use the direct Google common Lists class instead of
[ hotfix ] [ network ] do n ' t try to spill an already release buffer
added a check for the ` UntrustedVisitFlag ` in the visit permission logic to ensure only authorized players can visit untrusted plots
fix a bug where the jabber provider would n ' t start if it be already register .
update character checks in BasicURLNormalizer and add a new test for curly braces to improve URL normalization handling for specific characters and ensure functionality with curly brace
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access and improve encapsulation
added a check to compare the lock rate between two encodings to ensure consistency in the encoding logic
added a method to retrieve the project path and modified the generateProjects method to return an ImmutableSet of generated project paths to enhance project generation functionality by
removed conditional check for native digit before setting the zero digit in HostLocaleProviderAdapterImpl . java to simplify code logic and ensure valid calendar IDs
added a new file ` MSwingUtilities . java ` that implements Swing utilities for image scaling and error handling to facilitate easier
camel - 3446 : mailproducer now have a callback so it can be use to send to the mail server .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to enable dynamic refresh of configuration properties
added unit test base on user forum issue
added Main . java and ScriptRenderer . java files to implement scripting functionality in the application
added a condition to check if the input state is __ NONE before processing form data in Request . java and implemented a new test for query handling
added boundary checks for glyph width and height in BitmapFont and implemented a method to check if an actor is a descendant of another group to improve
replaced ` reportFailure ` method calls with ` runCloseHooks ` in ` DeploymentManager ` and added a new test for context shutdown hook
fix lexicon recipe mapping not respect item damage
replaced hardcoded sleep duration with a constant value for timeout to improve code readability and maintainability
replaced specific imports with a wildcard import and modified conditional logic to check for non - blank names before comparing display names to improve code readability
use class . getresource ( ) instead of url . geturl ( ) to get holidayxmlurl
added a new file ` FieldUtils . java ` with utility methods for reflection - based field access to improve code readability and facilit
removed the speculative type check in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to simplify
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding for widget custom content to improve layout
do n ' t sync xabber account if there be an error while load the account .
added a new method ` setvar ` to facilitate setting a variable in the command line interface to provide users with the ability to
fix animal tame event not be fire in catentity .
fix ( core ) : improve performance of windowframe . getrow ( )
pdfbox - 4892 : add test to verify that / help font be present
added a method to set the application ' s mode in PageListController to ensure the application uses the correct mode setting
added support for optional Docker file path and build arguments in ImageFromDockerfile . java and created a new test class DockerfileBuildTest .
added a null check before creating new ThreadInfo instances in ThreadInfos . java to avoid redundant object creation and improve performance
updated the condition in PieChartRenderer to use a constant for floating - point precision to improve code readability and maintainability by using a
[ hotfix ] [ checkpointing ] add more logging in singleinputgate and singlecheckpointbarrierhandler
added new table types to the Schema class to enhance the functionality and usability of the schema management system
added support for minimum similarity in FuzzyQuery and FuzzyTermEnum classes to enhance query flexibility by allowing users to specify a minimum similarity
rename method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java ` to improve
update layoutwrappingencoder to support immediate flush on outputstreamappender rather than on the enclosing appender .
added Rabbit and Kafka auto configuration classes to ZipkinAutoConfiguration to support additional auto - configuration options for Rabbit and Kafka
added null check for component before calling super . remove in JLayer . java and created a new test class bug6875716 . java
replaced the import of ` avro . shaded . com . google . common . base . Function ` with ` com . google . common
fix a bug in the block processing code that could cause an infinite loop .
refactor icon rendering logic and add getter and setter methods for legacyRenderer to improve code readability and allow configuration of legacy rendering status
replaced the ` intToFourBytes ` method with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and `
added a null check for mObserver in the NavigationModeFeatureFlag class to prevent potential NullPointerException when mObserver is not initialized
modified the generic type of the ` thenComparing ` method in ` Comparator . java ` and added a new ` Department ` class with
refactor DocIdSet class to improve code readability to enhance maintainability and reduce complexity
updated the anomaly result ' s end time setting to use the current time bucket instead of null to ensure the anomaly results reflect the current
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException does not occur during parsing
added a classloader to the enhancer configuration in MockFactory . java to ensure the correct class loader is used for mocking classes
added a new ` OriginalFormat ` class and modified ` ConverterWithEnumFormat ` to include it to enhance the format handling for different object types
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils . java to improve maintain
refactor JAWTRenderer class to improve rendering performance to enhance rendering efficiency and reduce memory usage
camel - 14836 - camel - aws2 - * : improve the auto - discovery capability of the lambda client
cloudstack - 8038 : ensure that only valid and valid mac address be generate for the vm in the network .
removed authorization header check in ProxyServlet . java to simplify authorization handling logic
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to ensure proper execution of commands during context creation
added ` getDetails ( ) ` and ` setDetails ( String details ) ` methods to various authentication token classes to provide detailed information for authentication
modified the calculation of ` randUsePoints ` in ` SolrTestCaseJ4 . java ` to ensure ` randUsePoints ` is set
fix for geot - 4561 , add space to the end ( ) method
updated TimeFormat methods to accept a Locale parameter to ensure consistent time formatting across different locales
added sorting logic for named arguments in GroovyParserVisitor and updated import statements in GroovyPrinter to improve code readability and maintainability by using stream
added bounds checking for bottom , left , and right inset dimensions in Border . java to ensure proper positioning of inset dimensions to prevent
refactor gesture state management in TouchInteractionService to use a unified DEFAULT _ STATE instance to improve code readability and maintainability by centralizing
replaced Joda - Time with Java ' s Instant and DateTimeFormatter for version formatting to improve compatibility with modern Java date handling practices
refactor openblas and openblas _ nolapack files to improve code organization and maintainability
replace commons . io . ioutils with java . io . io . close ( )
added synchronized keyword to initTxnMgr method to ensure thread safety during transaction manager initialization
increased the wait time in ` AbstractDistribZkTestBase ` and ` AbstractFullDistribZkTestBase ` to
added a new class ` SearchResults ` to handle search results to provide a structured way to store and retrieve search results in a structured manner
do n ' t create a refresher if it do n ' t exist
pdfbox - 4892 : fix potential nullpointerexception in bytecode . getprimitives ( )
added new version constants for " 8.10 . 0 - cfs " and " 8.11 . 0 - nocfs " , and
updated the feature flag for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the
added a method to retrieve tenant pools for the current instance in InstanceResource . java to provide access to tenant pools for the current instance configuration
refactor ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods in ` TopFieldCollector . java
added a method to check if the interface is a string and updated imports in InlineBytecodeGenerator and InlineByteBuddyMockMakerTest to
added logging statements to CxxCompileStep and CxxPreprocessStep for better diagnostics to improve visibility into compilation and preprocessing processes for better
add stringutil . removecharacter ( string , char ) method ( # 24489 )
[ 3.0 ] add support for metadata service protocol ( # 9809 )
jbpm - 4641 - add datatransformer interface to allow compilation and transformation of expression
changed the type of values and objval from Object [ ] to Number [ ] [ ] in DistributionGraph . java to improve type safety and
removed unnecessary conditional check in FormatStringChecker . java to simplify the condition for better readability and maintainability
updated the initialization of SolrCore in ElectionContext . java to improve code clarity and maintainability
refactor ITestDbTxnManager for improved transaction management to enhance code readability and maintainability
refactor database connection handling to use try - with - resources to ensure proper resource management and automatic closure of the connection
added a method to test the MapModel functionality in both CodeFirstPojoClient and CodeFirstPojo classes to ensure correct functionality of the
pdfbox - 4892 : improve code readability , a suggest by valerybokov
modified the selection behavior of scaleOffsets in ScaleDialog . java to ensure the selected item is correctly set based on the selection state
do n ' t update player step status if they do n ' t have it
pdfbox - 4892 : do n ' t throw exception when there be no appearance stream
changed SortedSet to LinkedHashSet for storing keys in ExecuteSqlCommandStep . java to maintain insertion order while maintaining insertion order
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 in CancelEventTimer . java and modified method signatures
updated preload dependencies in dc1394 . java to ensure compatibility with the latest library versions
added a conditional check for agentSupport before setting all constructors to public and created new test classes for mocking static methods to ensure that mocking
pdfbox - 4892 : simplify code , a suggest by valerybokov
use xtoolkit to set window title to avoid problem with x11
updated depth calculation logic in XRSurfaceData . java to handle pixel size correctly to ensure correct depth is set based on the color model '
added error handling for unsuccessful responses in OkHttpDataSource to improve error reporting for HTTP data source failures
added a static method ` exit ` to the ` TopLogging ` class and updated its usage in ` TopThreadGroup ` to improve error handling
updated the logic for determining the starting index in the NativeRegExp class to ensure correct handling of regex patterns regardless of global state
planner - 468 ignore test that fail due to optaplanner 6.3 . 1 +
fix incorrect index in defaultallocator .
added a method to clean entries without feeds in DatabaseCleaner and updated FeedEntryDAO to use this method to improve data integrity by ensuring all
change return type of appendToLabel method from void to AtomicCounter to enable method chaining for better usability
[ java ] implement no - op idle strategy in low latency medium driver .
added handling for HTTP status NOT _ MODIFIED in CacheControlHeadersWriter and CacheControlServerHttpHeadersWriter to ensure that headers are only written
refactor ` InstrumentationPartialEvaluationTest ` to replace ` SpliceInstrumentListener ` with ` ToolEvalNodeFactory ` and update related methods
modified the paintTabArea method to correctly calculate the dimensions of the tab area to ensure proper rendering of the tab area by accounting for insets
modified the parameters of the ` getKrakenDepth ` and ` getKrakenMarketDataService ` methods to accept ` Object ` instead
( chore ) camel - ftp : added getfileseparator ( ) and getabsolute ( ) method to the file component
added JSON serialization and deserialization support for JavaProvenance in JavaProvenance . java and updated MavenProjectParser . java to use this new build
added trace logging for Hive functions and non - deterministic UDFs in HiveFunctionRegistry . java and implemented a new test case in TestInbuilt
increased loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage and ensure more comprehensive
patch by jbellis ; review by gdusbabek for cassandra - 1186
added error handling for writable output files in NativeErrors . java to provide clearer feedback when tests are executed as root
added package info retrieval in LauncherModel . java to check if the application info is enabled to ensure that the application is enabled before proceeding
cloudstack - 7761 : fix db upgrade error ( # 7762 )
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a test for non - skippable exceptions in FaultTol
replaced ` startsWith ( ) ` method with ` regionMatches ( ) ` for better case - insensitivity matching to improve accuracy of string
added imports for SourcesFileResults and SourcesFileErrors , and modified dataTables return logic to utilize global data tables to improve data table management
added import for Overview and implemented task dismissal logic in TaplTestsTaskbar to ensure tasks are properly dismissed from the
cloudstack - 7769 : upgrade from 4.14 to 4.15 . 0 to 4.14 . 0 to 4.15
removed unnecessary null checks and simplified connection handling in LdapClient . java to improve code clarity and reduce potential for null pointer
refactor index handling in SequenceAction . java to use a temporary variable to improve code readability and maintainability
patch by jbellis ; review by brandonwilliams for cassandra - 1422
added a check to skip synthetic fields in ReflectUtils . java to ensure that synthetic fields are handled correctly during processing
added LoggerProvider to manage logging functionality to enable better integration with SLF4J for logging in the application
changed the type of the ` builder ` from ` ImmutableMap < String , String > ` to ` ImmutableMap < String , Object > ` and updated
added deprecation warning for multiple glue class configuration in SpringFactory to inform users about potential issues with the Spring context configuration
added a new method ` deepStart ` to the ` Startables ` class that accepts a list of ` Startable ` objects to enhance functionality
removed the deprecated method reservePrimitiveExtensionArray from Shape and its implementation in ShapeImpl to streamline the codebase by eliminating obsolete functionality
fix laser not be able to place laser in itext . close # 182
refactor object name validation logic in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
set the expiration messages period of policyEntry to zero to prevent memory leaks during test execution
removed null check for ` p ` and ` handlerName ` in ` RequestHandlers . java ` to simplify the code logic and improve readability
updated the method to replace hyphens with dots in the servlet name to ensure proper logging format for servlet names without hyphens
updated the handling of the PYTHONPATH environment variable in ProjectBuildFileParser . java to improve clarity and functionality of environment variable management
refactor audio frame size handling and error reporting in DirectAudioDevice and Toolkit classes to improve code clarity and ensure robustness against audio
updated ElasticSearchStringLookupService to handle null enums gracefully to improve robustness by avoiding potential NullPointerExceptions
updated the format string for unexpected end of segment messages in CommitLogReader . java to improve clarity of error messages for better debugging
added a policy assignment in WebSocketSession to ensure the WebSocketSession uses the correct policy from the container scope
removed unnecessary check for static fields in the current class scope to simplify the logic for determining static fields in the current class scope
updated the webroot parameter used in the createContext method from UI _ DIR to webroot to allow dynamic configuration of the web root for the
( chore ) camel - spring - dsl : migrate test to junit5 ( # 4505 )
replace reflection with direct call to monitoredvmutil . isattachable ( vm )
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to enhance clarity and consistency in header creation functionality
replaced individual imports of trade DTOs with a wildcard import and added a method for placing stop orders to streamline import statements and
added buffer reset calls in ReduceRecordProcessor . java to ensure the buffer is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when restoring original view properties
updated the range check for ` decExp ` in ` FloatingDecimal . java ` and added a new ` ToString . java ` class for
updated property type validation in PropertyDescriptor . java and added a new test class Test7189112 . java for property setter validation to ensure proper
removed the maxVersion parameter from the getVersions method in RealTimeGetComponent . java to simplify the version retrieval process by eliminating unnecessary
added a check to set the origin header in NettyRequestFactory to ensure the origin is correctly set based on the security context of the URI
updated animation logic for previousTask and nextTask in RecentsView and added animations in TaskView to enhance user experience by providing smoot
updated error messages in ORCRecordReader to include field details to enhance debugging clarity by providing more context in error messages
added new audio samples for Tears of Steel and BIPBOP 4x3 in DemoUtil . java to enhance video
removed HINATE52 _ ENTITY _ MANAGER _ INTERFACE and HINATE _ JPA _ METAMODEL _
updated log initialization to specify the correct class path for ExecRpcInvoker and WritableRpcEngine to ensure accurate logging context for the RPC invoker and engine
added diagnostic logging functionality and a new test for union and fixed fields in TestSpecificCompiler . java to improve error reporting and validation of generated code
modified the session handling logic in WebSocketEndpoint . java and added a new test in WebSocketIT . java to ensure that sessions are closed when not
updated delay values and method names in multiple services for improved clarity to enhance code readability and maintainability by using more descriptive names
replaced OpenSymphony mappings with Apache Struts mappings in XmlConfigurationProvider . java to ensure compatibility with the latest version of the Apache software
added conditional logic to stop video streams based on the ` stop ` flag to ensure that video tracks are stopped correctly based on the ` stop `
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new ` BittrexChartDataPeriodType
removed unused imports and updated import statements in GMLExamples . java to streamline dependencies and improve code clarity
updated the method from ` substream ( 200 ) ` to ` skip ( 200 ) ` in ` TargetType58 . java ` to improve
hhh - 10956 throw a npe if a composite identifier be not find for a property
rename ` ` find ' ' to ` ` download ' ' in externalfiles
refactor URI registration logic to include host and port information to improve clarity and functionality of URI registration handling
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code readability and maintainability
added a check for blank OSDB hash before retrieving the OSDB info and replaced List declarations with generics to improve code robustness and type safety
added token transfer functionality to RuntimeImpl and MUtil classes to enhance token management and validation within the contract processing
camel - 14284 : camel - ftp should use current dir if stepwise mode be enable .
updated the method reference from ` getSearchBindDN ` to ` getSearchBindPassword ` in ` JacksonLDAPConfiguration . java ` to ensure correct
added a check for empty result set in MapJoinOperator and modified conditional logic in HybridHashTableContainer to ensure proper handling of join results
updated HTTPSPDYAsyncEndPoint to accept an AsyncEndPoint instance and added getter methods for local address , host , port , and server name
added " id " extra to various adapters and fragments to ensure unique identification of tweets for better user experience
added proxy - authorization handling and refactored disconnect logic in HttpURLConnection to improve connection management and ensure proper handling of proxy authorization
replaced ` int ` with ` AtomicInteger ` for ` _ numChildren ` in ` TraceContext ` to ensure thread - safe incrementing of
removed redundant ' final ' keyword from multiple Java files to improve code readability and maintainability
disable the test annotation in ValueTypeTests . java to temporarily disable it during the test execution
rename resourcefactoryserviceimpl to kiescannereserviceimpl so that it would well reflect our new kieservice interface
replaced ` IN ` with ` NOT _ IN ` in multiple predicate classes to ensure consistency in predicate naming conventions
replaced ` AccountUtils . AccountNotFoundException ` with ` Exception ` in multiple files to improve error handling and provide more informative error messages
added null check for witnessService before validating permission to prevent potential NullPointerException when witnessService is not initialized
updated the method for obtaining the expression string in JoinDesc . java to ensure proper retrieval of the expression string from the colExprMap
added a check to ensure the item ' s Javadoc is not present before setting it to avoid potential null pointer exceptions when accessing the Java documentation
rename ` holderMethod ` to ` holderMetadata ` and update related getter and setter methods in ` CompiledICHolder . java ` , and
updated revalidate calls in Tabs . java to use revalidateWithAnimationSafety ( ) instead of revalidate ( ) to improve consistency
[ hotfix ] [ runtime ] do not throw unsupportedoperationexception when serialize metricgroups in bulkformat
updated the calculation of the ' y ' variable in the Polygon class to ensure consistent calculation of ' x ' and ' y ' based on the
updated cache creation method to use a generic Configuration type to ensure type safety and avoid unchecked cast warnings
updated the condition in ` InheritanceUnsafeGetResource . java ` and added a new class ` Bug2974855 . java ` to
refactor ShadowCookieManager to improve cookie management functionality to enhance performance and maintainability of cookie handling
added a storage - based authorization check for external table drop in Hive to ensure backward compatibility during storage - based authorization checks for managed tables
added an brace to the conditional statement in Stage . java and adjusted the position of the background drawing in ProgressBar . java to improve code readability
sulong : cache the platform byte order in llvmlanguage . getbyteorder ( ) .
updated the PING _ TIMEOUT _ PROPERTY _ NAME from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers .
modified the initWebViewLogin method to accept a baseURL parameter and updated its logic for loading the web view to allow dynamic URL loading based on
corrected a typo in the exception message from " Paramter " to " Parameter " in CallableStatementHandler . java to improve clarity
updated the ` @ RequestParam ` annotation in ` AuditEventsMvcEndpoint ` and modified test cases in ` AuditEventsMvcEndpointTests ` to allow
rename exponentialtimer to precisethroughputtimer for clarity and consistency
fix a bug in softbodytest that cause the test to fail
[ hotfix ] [ table - planner - blink ] make interface public
[ zeppelin - 4661 ] fix log message in zeppelinwebsocket and zeppelinhub
add test for jingle namespace with no redundant namespace .
add a null check to the redplasma stat collection so that it do n ' t throw a npe .
added HTTP / 2 header handling in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler to
refactor condition checks in the plot removal process to improve readability and maintainability of the code
updated delimiter and string appending logic in SimpleReport . java to improve readability of report output by adjusting line boundaries
removed the option ` - XDIgnore . symbol . file ` from ` JavapTask ` and added a new class ` T68
rename ` TickerDemo ` class to ` StreamingTickerDemo ` and update method visibility to improve clarity and align with new naming conventions
refactor contract handling in Runtime . java to include null checks for contract properties to improve error handling and provide clearer contract validation messages
make sure input3d be create only for non - applet apps
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
do n ' t throw parserexception in scripttagpayloadreader
updated the method ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` in ` JpaRepositoryConfigExtension ` to ensure compatibility with the
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to allow for
updated variable assignments from ' this ' to ' IOSGLES20 . x ' , ' this . y ' , ' width ' , and
removed UploadPathActivity and its associated logic from ComponentsModule and UploadPathActivity to streamline the codebase by eliminating unnecessary components
update return statements to handle DOCS _ ONLY conditions in SimpleTextFieldsReader . java to ensure correct term frequency handling based on index options
fix : set the source start of the implicit constructor in the parentexiter ( # 2616 )
added a ` Database ` parameter to multiple ` populateValidatePrimaryKeyIfNeeded ` and ` populateValidateForeignKeyIfNeeded ` methods to ensure compatibility with Oracle databases
refactor Database class to improve code structure to enhance maintainability and readability of the code
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
updated iterator assignment in PointInSetQuery . java to use ' this ' keyword for clarity to improve code readability and maintain consistency in
updated the substring method in SchematicHandler . java to remove unnecessary substrings to improve code readability and maintainability by eliminating
added a switch statement to handle specific collection types in AbstractCollectionAssert . java to improve type handling for collections in the assertion logic
changed the enum declaration from static to instance in ProcessExecutor . java to allow the Option enum to be accessed without an instance reference
added a confirmation dialog for posting with a twitlonger in Compose . java and ComposeActivity . java to enhance user experience
replaced the ` toggleKeepInSync ( ) ` method with direct calls to ` getFileOperationsHelper ( ) . toggleKeepInSync (
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) ` in ` ImageUtil . java
added new classes ` ControllerCounter ` and ` DBCallback ` for MongoDB - related functionality to facilitate tracking and database operations within the
added the ' final ' keyword to the ticketId parameter in the deleteTicket method to enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java that initializes a Flyway application context to facilitate Flyway migration
replaced instances of ` isEmpty ( ) ` with ` size = 0 ` in ` HashMap ` and added a new class ` OverrideIsEmpty
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the release of
added nullable annotation to the ` modify ` method in ` CompressionCodec ` and ` ZlibCodec ` classes to improve code safety by preventing
added null check for mainAttrs and improved resource management in TestHelper to ensure robustness by handling potential null values and ensuring proper resource closure
renamed test classes from " Test " to " Tests " to standardize naming conventions for consistency across test files
update hotspotprofilinginfo . getcompilersize to support different ir type .
pdfbox - 4892 : remove cloneable from cellcopypolicy , a suggest by valerybokov
added a method to reset the icon load result in FloatingIconView to ensure consistent icon loading behavior across the application
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated IconRecentsView to handle landscape orientation and adjusted margin dimensions to improve layout consistency for landscape and portrait orientations
deleted the AddAdapter . java file to the functionality is no longer needed in the project
fix a bug in the nonstaticlifter that could lead to a nullpointerexception .
modified the method signature of ` processSortCols ` to include a ` boolean processSortCols ` parameter and streamlined the bucket column processing logic
[ log4j2 - 1343 ] make testlogwatcher more robust against race condition
added a print statement to print " < any > " in Java2TypeScriptTranslator . java to improve output formatting for TypeScript translation
updated the SDK version from " 4799589 " to " 4913185 " in SdkConfig . java to ensure compatibility with the latest
added a conditional check to set SPRING _ AOP _ PROXY _ TARGET _ CLASS to true in TraceEnvironmentPostProcessor . java to
removed the conditional check for singletonLock in TypeCachingBytecodeGenerator . java to simplify the code by assuming singleton lock is always available
renamed ` responseClassCallback ` and ` forwardClassCallback ` to ` responseClassCallbackWithClass ` and ` forwardClassCallbackWithString
refactor file writing methods to include an option for appending output files to improve flexibility in file handling by allowing users to choose whether to append
added a check to ensure ` mavenSettings ` is not equal to ` getSettings ( ) ` in ` MavenExecutionContextView . java ` to
added a ` name ` property to ` BuildRuleSourcePath ` and ` PathSourcePath ` classes and updated constructors to accept it to enhance
updated the service redirect URI comparison logic in ` OAuth20CallbackAuthorizeEndpointController ` to use ` matches ` instead of ` getRegisteredOAuthService
refactor annotation retrieval logic in multiple classes to use a centralized ` AnnotationParser ` method to improve code maintainability and reduce redundancy in
updated method calls to use ` getBadgedIconForUser ` and ` getBadgedLabelForUser ` instead of ` getBadgedDrawableForUser
updated the default value for the line separator to specify both LF and CRLF for the output to provide clearer guidance on the default behavior for
fix problem with bestpathaccuracytracker and bestpathaudietracker that do n ' t implement interface
sanitize the input string in BaseController by removing unwanted characters to enhance security by preventing XSS vulnerabilities
chore : update java and python dependency ( # 6 )
added IOException handling to the buildFileNamesCanBeDifferentCrossCell method to ensure proper functionality of build file names in inter - cell scenarios
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future updates
updated container type assignments in ` AllAppsRecyclerView ` and modified the ` logDeepShortcutsOpen ` method to accept a ` View `
hbase - 25712 add deprecation to byteBuffallocator ' s config key ( # 2580 )
improve test coverage for nativeworker
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types in ` Executable . java ` and updated references in
refactor TestFSTs class to improve code structure to enhance maintainability and readability of the test cases
apps - 2338 fix label height calculation for latex and text
hbase - 26958 increase to upper bound region split policy should use initial size instead of flush size ( chunhui )
removed model state reset and loader initialization in LauncherClings . java to streamline the loading process and improve UI responsiveness
removed null assignments for keys and updates in ManagedSelector . java to streamline the code by eliminating unnecessary initialization
added a set to exclude specific Spring datasources in the SpringDataSourceBeanPostProcessor to allow specific beans to be excluded from processing
added a call to storeUndoInfo ( ) in TableValuesView . java and simplified the conditional check in TableValuesPanel . java to improve
camel - 15836 - camel - aws : improve error handling for aws sdk v1 / v2
refactor channel triggering logic to use a loop for multiple channels to improve code readability and maintainability by consolidating channel processing logic
disable test that fail due to unfavorous benchmarks
added a test for illegal database names in IoTDBSessionSimpleIT . java and improved error handling in PartialPath . java to ensure that
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are reset before garbage collection
replaced ` desiredWorkspaceLeftRightMarginPx ` with ` desiredWorkspaceHorizontalMarginPx ` and introduced a method to calculate the horizontal margin based
reformatted code in CharTokenizer . java for improved readability to enhance maintainability and clarity of the code structure
chore : update gapic - generator - java version to 2.1 . 0 ( # 658 )
updated the constant string value for XENSERVER _ NETWORK _ LABEL from " xenservernetworklabel " to " xennetworklabel " to
updated libGDX version from " 1.5 . 5 " and " 1.5 . 6 - SNAPSHOT " to " 1.
removed the metricNames set and its getter method from SolrCore . java to streamline the code by eliminating unused metrics
replace URI . create ( ) with Path . fromUrl ( ) in MavenManifestFactory . java to improve path handling by using Path instead of
replaced direct platform detection with a static final boolean IS _ MAC to improve code readability and maintainability
refactor JdbcAggregationRepository to improve data aggregation logic to enhance performance and maintainability of the aggregation process
added logic to clear and add slotList elements from another Frame instance to ensure proper management of the slot list
set m _ predCount to - 1 in PredicatedNodeTest . java to initialize m _ predCount to - 1 to initialize m _
added a method to merge configuration properties in ConfigurationSpringInitializer to enhance property management by merging keys from the configuration
updated the ` setupLogging ` method to accept a ` org . slf4j . Logger ` as a parameter and streamlined the logging
replaced instances of ` HashMap ` with ` LinkedHashMap ` in ` aliasToWork ` across multiple files to maintain the insertion order of operators in
added logic to retrieve the JDBC handler map if it is null and the type is an instance of Class to ensure proper retrieval of the JDBC handler
added debug logging statements in multiple item writer classes to improve visibility into the writing process for better debugging and monitoring
updated the parsing logic to handle trailing semicolons in the input string to ensure proper parsing of the input string without trailing semicolons
updated the handling of closeHandler in VertxHttp2Handler to use executeFromIO to ensure that closeHandler is executed on the correct thread
make xssfevaluationworkbook . gettable ( ) cache xssftable instance to improve performance
updated schema text detail type check and simplified conditional statements in BaseSchemaTextFormatter . java to improve clarity and maintainability of the schema text
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to ensure compatibility with
changed the implementation of ` HashSet ` to ` LinkedHashSet ` for ` roots ` and ` leaves ` in ` SparkWork . java ` to ensure
updated the handling of table scan operations for join in SkewJoinOptimizer . java to ensure the operator tree is properly cloned before proceeding to
added a null check for the client ID before processing in DynamicRegistrationClientConfigurationService and updated JSON processing in JsonFileRegisteredClientService to enhance
[ te ] clear achievementlist . field _ 187981 _ e after clear it
initialize variables in MutableDatabaseInfo and MutableJdbcDriverInfo to an empty string for userName , productName , productVersion , and driverClassName to
updated permission link from " link _ share _ read _ only " to " link _ share _ view _ only " in QuickSharingPermissionsBottom
added LongBuffer support to ByteBuffersDataInput for reading long values to improve performance and memory management during long data reading operations
refactor UnixFileAttributes to use sec and nsec instead of seconds and ctimes for clarity to improve readability and maintainability of
added a new file TestNoEagerReclaimOfHumongousRegions . java with a class that manages humongous memory
added search visibility management to the AllAppsContainerView based on user preferences to enhance user experience by allowing customizable visibility of the app search bar
[ feature ] fix envroutetoolfeature # routes ( # 1868 )
added null checks for ' cur ' and ' next ' in LineChartRenderer to prevent potential NullPointerExceptions during rendering
added a new action class ` ReloadPageAction ` and integrated it into the menu to allow users to reload the current displayed page easily
changed log level from info to warn for various log messages in ` plot _ rating ` , ` plot _ helpers ` , and ` plot _
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided to avoid runtime errors
use serviceloader . load instead of factoryregistry . lookupproviders ( ) in geoserverextensions
added a call to close the table in the finalize method of HiveHBaseTableInputFormat to ensure proper resource cleanup and prevent potential memory leak
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and logging in ` HiveViewImpl ` and ` JdbcConnector `
updated XML feature settings and improved generic type usage in multiple classes to enhance code clarity and maintainability by using explicit generic types
updated JdbStopThreadidTest to use jdb . contToExit instead of jdbCommand . waitPrompt for application exit to improve
added a new method ` getType ( Uri uri ) ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enhance
updated the variable name from ' runnable ' to ' entry ' in ExpressionThreadPoolManager . java to improve code readability and maintain consistency in naming
updated the default HTTP port property from " port " to " vertx . httpPort " to allow dynamic configuration of the HTTP port based on
changed the listener method from ` addCaptureListener ` to ` addListener ` in ` ButtonTable . java ` to improve clarity and consistency in
updated DEFAULT _ BATCH _ SIZE from 10 to dynamic based on available processors to optimize resource usage based on available processors
[ hotfix ] [ runtime ] add error log when establish resource manager connection in taskexecutor
updated exception handling and logic in LambdaRewriter . java for null classFile to improve error handling and provide a fallback mechanism for lambda expressions
updated the IllegalArgumentException message to include the min and max values to improve clarity of the error message for better debugging
updated onMessage method signatures across multiple state machine classes to include an entity parameter to enhance message handling by associating the state with the correct owner
added new interfaces Cursor , Database , and Row classes for database operations to provide a structured way to handle database operations and row retrieval
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
# 138 - enh : add getbeanid ( ) method to ebeanserver interface ( # 138 )
updated the transformation method in RuleSetToDocs . java to use a dynamic method for XSLT to improve flexibility and maintainability of the code
added a new List < RequestMatcher > to manage request matchers to improve the handling of multiple request matchers in HttpSecurity
implement equal ( ) , hashcode ( ) , and hashcode ( ) for ContactResource class to ensure proper resource comparison and hashing functionality
move the getrequest ( ) method from abstractprocessor to abstractprocessor to reduce duplication .
updated logging messages in FileManager . java for better clarity to improve the readability and understanding of the save operation process
added a teardown method in TestIndexSearcher and reset mock control in TestJdbcDataSource to ensure proper cleanup of resources after tests are executed
added imports for LambdasWithInterfaces and removed redundant lines in SyntaxTests . java to streamline code and improve readability by elimin
refactor ConnectionModel and ModeledConnection classes for improved organization to enhance maintainability and readability of the codebase
upgrade to tika 1.2 . 2 , remove deprecated parserdecorator
fix fml security check for ddedicated server . close # 1358
refactor variable declarations in AccountUtils and IndexedForest classes for consistency to improve code readability and maintainability
updated parameter from " swap " to " rename " in TestCoreAdminApis . java and modified RENAME method in CoreApiMapping .
added a new test method for handling JSX comments and improved formatting in the parser to enhance code readability and maintainability while ensuring correct
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for testing purposes
added error handling for missing Buck configuration in end - to - end tests to improve user feedback when Buck configuration is missing
added physical memory checks in TestStringBufferAndBuilderGrowth . java to check if the machine has a physical memory to ensure the test does
mondrian : deprecate maptosolastatedateconverter . convert ( propertymap ) , use conversionservice instead
added a success flag to HiveMetaStoreClient . java to indicate successful operation completion
updated string comparison from ` = = ` to ` . equals ( " * " ) ` in ` ResourceReferenceInfo . java ` and changed
updated video link checks to include " amp . twimg . com / v / " in addition to " vine . co / v /
mark AreaReference class as deprecated to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes for improved readability to enhance maintainability and facilitate future updates
added assertions and modified reference kind handling in MemberName . java to improve error reporting and ensure correct reference behavior during method invocation
updated the default value for submitKeyUpdates from " false " to " true " and added synchronization around the runChange method to ensure thread safety
bug fix : do n ' t ignore mouse event if it ' s not a mouse event
camel - 3560 : fixed the issue that bean . type can not be find . thanks to benjamin graf
updated multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
refactor exception handling in AgentRunnerTest to improve clarity and consistency to enhance code readability and maintainability
updated descriptions in multiple classes for clarity and consistency to improve code readability and maintainability by providing more descriptive descriptions
refactor face handling in ObjLoader to use a local variable for activeGroup to improve readability and maintainability of the code
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future feature additions
replaced instances of ` reentrantLock ` with ` lock ` across multiple files to improve clarity and consistency in variable naming
updated the ` getBomReference ` method to include ` mavenPackaging ` parameter and modified its usage in the ` printMavenAsCy
replace back ( ) method with back ( evt . getComponent ( ) ) in UIBuilder . java to ensure the correct component is passed for back
fix checkstyle issue in saslauthentication . java
updated generic types in ObjectArraySubject and related classes to use a more specific generic type to improve type safety and flexibility in handling nullable arrays
replaced NutchConf with getConf across multiple files to standardize configuration usage across the codebase
replaced the method to remove the boards pane and updated the selection logic in SheetAssembly . java and StubsController . java to improve
added a method to retrieve the session ID in RemoteWebDriver to provide access to the session ID for external use
added null check before setting time intervals for nodes and edges in ImportContainerImpl . java to avoid potential NullPointerExceptions when setting time intervals
updated the command line argument from " - logLevel INFO - serverPort " to " - serverPort " to simplify the configuration for better readability
updated error logging message format in FunctionRegistry . java to improve clarity of error messages for better debugging
use crawldatametadata instead of robolectricrobotshonoringpolicy in dispositionprocessor
added JUnit @ Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
( chore ) camel - catalog - maven - plugin : fix test on window
added a method to retrieve the alternative path in ExpectNewDemo . java to improve robustness by handling potential runtime exceptions during input stream operations
updated input initialization to use getFirstFilter ( ) instead of input to ensure the correct filter is initialized for processing
added protectionDomain parameter to the BufferAlignmentAgent constructor to enhance the functionality by allowing access to the protection domain
added dispose method to WaterRipples class to ensure proper resource cleanup to prevent memory leaks
added a configuration option to disable unsafe optimization on external tables to enhance performance by preventing unnecessary semi - join operations on external tables
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
updated wallpaper offset settings in Launcher and Workspace classes to ensure consistent wallpaper display behavior
modified the return value of SybaseASADatabase and modified SQL query generation in SequenceSnapshotGenerator and CreateSequenceGenerator to ensure proper handling of
nifi - 1744 : fix npe in putsql when the autocommit be set to false
added directory creation logic in SnapPuller and corresponding tests in TestReplicationHandler to ensure proper directory structure and validate the handling of XSLT files
updated AppTargetId from " id : launcher " to " launcher : launcher " in AppEventProducer . java to standardize the target format
refactor framer . frame ( ) to not return a bytebuffer .
refactor constructor parameters in multiple classes for consistency to improve code readability and maintainability
added an extended parameter to the GenericUDFStringToMap class for text splitting to provide clearer guidance on how to split text into key
updated ` PlainFormatter ` to use ` java . time . temporal . ChronoUnit ` and ` java . time . TemporalUnit ` to improve
replaced the TIMEOUT _ MS constant with a RETRY _ CLOSE _ TIMEOUT _ MS and modified the close method to introduce a retry mechanism
hhh - 12963 use methodhandles . privatelookupin ( ) instead of reflection
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated log message from " Closing proto event file " to " New proto event file " in HiveProtoLoggingHook . java to clar
added JUnit @ Ignore annotation to SamplingNamingTest . java to indicate that the test produces a sample result that should never be frequently
updated the error message in IllegalArgumentException for clarity to improve the readability of the exception message for better debugging
wagoncart : do n ' t throw exception when try to convert string to binary
added support for ordered sheet records in XLS2CSVmra and BoundSheetRecord classes to enhance functionality for organizing BoundSheet records based on
updated calculations for average impulse in ThrustCurveMotor . java to use start and end thrust variables to improve accuracy in calculating
updated InputSystemJme instantiation to accept a InputManager parameter to enhance flexibility by allowing custom input management
refactor hash code field offset setting logic in UniverseBuilder . java to improve clarity and ensure offset is non - negative to enhance code
kristianrosenvold : remove deprecate block . getmesh ( )
rename keytabPath to localKeytabPath and update related logging in YarnApplicationMasterRunner and YarnTaskManagerRunner to improve cl
added Option . EMPTY _ WORD _ OPTIONS and modified matchers in LineReaderImpl . java to conditionally handle words based on its value to improve
update pushViewReplicaUpdates method to include writeCommitLog condition to ensure correct handling of view replica updates based on commit log status
updated clipboard handling logic in CaptureActivity . java and added default button ID handling in PreferencesActivity . java to improve user experience by enabling auto
added a new test method ` testBatching ` to ` JoinedTableTest ` and modified ` additionalProperties ` in ` JoinedTable
added a check for ` EntityExistsException ` and improved logging for duplicate timestamp errors in ` JpaPersistenceService ` to enhance error logging
deprecated the use of the -- format option in CucumberOptions and updated the plugin reference in RuntimeOptions to encourage the use of
removed the save ( ) method from PMS . java to streamline the code by eliminating unnecessary functionality
simplified the back key listener check in the ExtendedEditText class to improve readability and maintainability of the code
updated the implementation of ` ensureCapacity ` in ` AbstractStringBuilder ` and added a new ` Capacity ` class with tests for its behavior to ensure
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to improve user
patch from daniel bonniot from bug # 46956 - support for endnote relation in xwpf
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent and updated getCredentialsWithSameUsernameAndPassword method to include clientInfo to enhance event details for
added a test method to verify GDAL version information in BridjOGRDataStoreTest . java to ensure the GDALVersionInfo is correctly
added a new class ` Lifecycle ` to handle network error events to facilitate the initialization and management of network components in the application
deviantart ripper now try to download a non - existent url , if it do n ' t exist .
removed unnecessary imports and simplified the loop structure in RocketFigure . java to improve code clarity and maintainability by eliminating unnecessary
added support for retina rendering in PJOGL and modified viewport and scissor calculations to improve compatibility with different screen resolutions and enhance
re - enable auto - selection of project offline option ( # 5239 )
replaced ` PackedInts ` with ` BlockPackedWriter ` and introduced a constant for block size in ` DiskDocValuesConsumer .
refactor DefaultRouteBuilder to use originatingType ( ) instead of status to improve clarity and efficiency in handling status routes
removed data list management and simplified response creation in GoAwayTest . java to improve code clarity and reduce unnecessary data processing
added support for setting properties for maps and created a new FluentSetterBean class to enhance bean configuration flexibility and improve test coverage for fluent setter
updated method signatures in BlockingHttpEndpoint and HttpEndpoint to return a ListenableFuture < HttpResponse > instead of a ListenableFuture < ? >
updated fileUrl and related tests to use " folder " instead of " noop " to ensure correct sorting behavior for files based on the specified folder
updated logging statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity and accuracy of
added image scaling settings to the document settings class to enhance image processing capabilities in the document system
updated the handling of aggregate functions in TSServiceImpl . java to include the aggregate function name in the column addition to ensure that the aggregate function
replaced LuceneTestCase with AbstractNestedTest and introduced cleanup method in TestSystemPropertiesInvariantRule to improve test structure and ensure proper
added functionality to select and display the XCap server URI in the PresencePanel to enhance user experience by allowing dynamic configuration of the XCap server
ww - 4382 add configuration option to disable error handling in dev mode
added stopEditing methods to CodenameOne , Display , TextArea , and AndroidImplementation classes to handle text editing events to improve user experience
nifi - 1233 : fix npe in controlrate when group attribute name be null
renamed the parameter ` includeUndoModify ` to ` isNewComponent ` and updated related logic in the ` showDialog ` method to improve cl
added error handling and logging in ChatAnnotation . java to improve error reporting and ensure thread safety when sending messages to the client
added a check to ensure the test is only run on Windows to avoid false negatives on non - Windows operating systems
added SQL _ SERVER _ SNAPSHOT to TransactionIsolationLevel to enable support for SQL server snapshot functionality
added a wait loop to offer new recids in AsyncWriteEngine . java to ensure that the system does not hang indefinitely when
remove dependency on jrecompat , use java . util . zip instead
updated command class handling in RegisteredServiceSimpleFormController to check for null before creating a new service instance to ensure that services are only created if
change default disk _ failure _ policy from best _ effort to ignore . patch by stu hood ; review by jbellis for cassandra
removed the public access modifier from several methods in RipperInterface and RipStatusHandler classes to enforce encapsulation by restricting access to
[ java ] do n ' t try to discover local peer when it ' s not an ip address .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to simplify the class by eliminating unused functionality
updated import statements in PinotSegmentRebalancer . java and modified computePartitionAssignment method to include ClusterDataCache to enhance partition assignment computation by
kristianrosenvold : remove the deletecontainer method from docker - api
simonstewart : fix parsing of the pipe - separated command
add retry rule to createglossarytests to increase test stability
replaced references to ` allOfRef ` and ` oneOfRef ` with ` Components . COMPONENTS _ SCHEMAS _ REF
refactor EntityDeletedEvent to use JsonUtils for JSON serialization to improve code readability and maintainability by eliminating unnecessary field assignments
added a check for " gop " in FormatConfiguration and updated related imports and logic in DLNAMediaInfo and LibMediaInfoParser
added a new file TestProfileReturnTypePrinting . java that implements a test for profile return type printing to facilitate testing of return
replaced direct locking mechanism with ReentrantLock in ParseConfigUtils . java to ensure thread safety during configuration updates
add acquirereleasecolumnssegmentoperator to the minmaxvaluebasedselectionorderbycombineoperator ( # 10727 )
danielwagnerhall : remove the @ ignore annotation from the firefox profile test
updated the ` HasAndroidDeviceDetails ` class to include ` @ return ` annotations and modified the ` getSystemBars ` method to return a
do n ' t re - add dead bug to project stats ( we do n ' t have them )
[ netbeans - 4652 ] do not show ` ` disabled ' ' button when import from gtk
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added a check to return a date in the future if the recurrence is empty to ensure that a valid execution time is returned when no day is
refactor upload button handling in ShareActivity to use a menu item instead of a Button to improve code clarity and maintainability by streamlin
updated multiple Java files related to message security handling to improve code clarity and maintainability
added the ` loadMetaData ` method to ` MeXBTExchange ` and ` RippleExchange ` classes to load exchange metadata from an
added serialization support for Writable types in CrawlDbReader to enable proper serialization and deserialization of Writable objects in JSON format
remove testjaspicbasicauthenticator because it be n ' t use anymore
updated the @ Component annotation in MDNSDiscoveryService to include a service reference to ensure proper configuration management for the MDNS service
added null check for messageItem before scrolling to the position in ChatViewerFragment to prevent potential NullPointerException when messageItem is null
updated ForkJoinPool instantiation in TestBPIndexReorderer . java to use a custom thread pool to improve thread management and performance in concurrent
updated assertions in RoleCommandOrderTest to check for DATANODE and NAMENODE roles to ensure correct role - based dependency validation
added methods to restore and dedup local table information in PartInfo . java to ensure proper handling of table information during serialization operations
standardized spacing in conditional statements across multiple Java files to improve code readability and maintain consistency
added transformation matrix for bitmap rendering in BitmapFontTest . java to improve rendering quality by applying transformations correctly
[ hotfix ] [ python ] skip built - in aggregate in streamphysicalpythongroupwindowaggregaterule
removed the ` hasPendingEcho ` field and its getter and setter methods from ` EndpointState ` , and updated logging in ` Gossi
added a method to retrieve unreachable token owners in the Gossiper class and updated the host check in the StorageProxy class to improve the
[ geosymbolic ] do not change to multiply if it ' s an expressionnode
updated content type handling in FormAuthenticator and added getter and setter methods in SavedRequest to improve flexibility in setting and retrieving content types for
changed variable access modifiers from ` _ display ` to ` final ` and added null check for ` localEnv ` in ` XToolkit .
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
use reentrant read / write lock instead of synchronize
added a test for reading identity providers in a specified zone to ensure proper authentication and access control for identity providers in different zones
replaced ` scheduleJob ` with ` new ExpireJob ( ) ` in ` ObjectTypeNode . java ` and added null check for `
removed the import of org . jasig . cas . authentication . principal . Service in SendTicketGrantingTicketActionTests . java to
[ issue # 5692 ] send heartbeat to all broker when rebalance be change ( # 5693 )
fix ( core ) : make detached mkdir mode configurable
[ java ] add a test to check that the follower be still stable when there be a slow follower .
[ auth ] [ year ] should be [ auth ] [ year ] instead of [ authors3 ]
replaced direct calls to ` getCxxPlatform ( ) . getLd ( ) ` with ` CxxPlatforms . getParseTimeDeps
removed the ` initialized ` flag and refactored the ` dispose ` method in ` GoogleCloudAPI ` and added the ` dispose ` method
camel - 16462 : fixed the issue of dofile on completion when the file name be dynamic .
added a new boolean field ` reopenReaders ` in ` SolrConfig ` and modified the condition in ` SolrCore ` to conditionally check for
add ` ` dialect ' ' attribute to mapwriter
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a duplicate method in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest . java `
refactor Condition class to an interface and simplify its implementation to improve code readability and maintainability by reducing boilerplate code
replaced TermQuery with ConstantScoreQuery and adjusted the expected score calculation in TestFacetsCollector . java to improve query performance and accuracy in
removed unused ` java . lang . invoke ` classes from ` ConcurrentClassLoadingTest . java ` to clean up the code and reduce unnecessary dependencies
added a method to retrieve the direct nearby upload preferences in the CommonsApplicationModule to improve the handling of preferences for nearby uploads
added support for database compatibility checks for " SYSIBM " and " SYSDUMMY1 " modes in the parser and mode classes to
refactor logging statements in TraceGatewayEnvironmentPostProcessor for improved readability to enhance code clarity and maintainability
fix bug # 56956 - documentproperties . getcustomproperties ( ) return wrong pid when add a custom property
[ geotiff ] fix npe in geotiffreader . read ( )
refactor CliDriver and SessionState to improve execution handling and return values to enhance code clarity and ensure proper resource management during driver execution
updated MockRestAdapter to use rx . schedulers instead of Executor for asynchronous tasks to improve concurrency handling and error management in the MockRest
modified the ` selectByRuleIdSet ` method to accept a ` List < String > ` as a parameter and added a default implementation to
added a method to add a stack trace for exceptions in ExitStatus to improve error handling by providing detailed stack trace information for exceptions
fix the multiblock render handler do n ' t send the right click event to the player .
renamed ` columnFamily ` to ` columnFamilyColumn ` for consistency and clarity to improve code readability and maintainability by using a more d
removed unnecessary import statement from PlotConfiguration . java to improve code clarity and maintainability
refactor ` DefaultIOSInput ` to use ` UIAlertController ` instead of ` UIAlertView ` to improve the clarity and functionality
replace ` params . getBuildTarget ( ) ` with ` nativeLinkable . getBuildTarget ( ) ` in ` PythonUtil . java ` to
renamed the parameter from ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more
removed an assertion to check for a null message in AdvServiceTest . java to ensure that the service ' s message is correctly validated and
refactor key handling in MappingMongoConverter to improve clarity and efficiency to enhance readability and maintainability of the code
updated Timber logging syntax in NearbyMapFragment . java to improve code readability and maintain consistency in formatting
camel - 16400 : camel - jbang - use ` ` deprecated ' ' instead of ` ` javaType ' ' a a key to
added null check for terms in FuzzyLikeThisQuery and implemented a test for non - existing fields in FuzzyLikeThisQueryTest to
modified the ` writeApplicationsLinks ` method to accept a boolean for better control over the display of application links to enhance the display of application links
refactor createmissingidentifiers to use identifierservicefactory instead of dspace ' s servicefactory
updated byte assignment in VectorColumnAssignFactory to use the getLength ( ) method instead of bytes . length to ensure accurate byte assignment based on the
changed the method signature of getDisplayScript from abstract to non - abstract to provide a default implementation for the method that always returns null
refactor sequence handling in RemoteWebDriver . java and update test ignore annotations in BasicKeyboardInterfaceTest . java to improve code clarity and
pdfbox - 4892 : optimize arraylist initialization , a suggest by valerybokov
added synchronization and a check for empty active interfaces in NetworkConfigurationWatcher . java and a null check in NetworkManagerListenerImpl . java to ensure
fix bug # 45538 - handle nested object in hssfworkbook . getallembeddedobjects ( )
added import statement for jogamp . common . os . elf . Shdr in ShaderNodeLoaderDelegate . java to utilize
replaced hostParams with roleParams in AmbariManagementControllerImpl . java to ensure consistency in variable naming for better readability and maintain
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of font names
replaced GlStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
refactor Calendar handling in LiveTvGuideActivity and ProgramListAdapter to use current start and end dates consistently to improve clarity and
updated method invocation in MockGateway and added new test classes for PowerMock functionality to improve method resolution and facilitate testing with nested classes
try to load libfreetype . so and libfontmanager . so from libfreetype . so and libfontmanager . so
fix bug in functionparser for multi - variable function
improve performance of safepoint elimination
fix ` typeframemodelingvisitor . isinstance ` not work for ` java . lang . class ` and ` java . lang .
added LocalizedString class and refactored method argument handling in multiple classes to enhance localization support and improve code readability
added a ` disableClasspathSearch ` property and its getter / setter in ` ServerConfig ` , and modified the conditional check in ` DefaultContainer
made audio format fields final and replaced array copying with Arrays . copyOf for better immutability to enhance thread safety and ensure immutability
updated the default retries value from 0 to 2 in Reference . java and corresponding test in AnnotationPropertyValuesAdapterTest . java to increase the default
added functionality to load settings from a JSON file to enhance flexibility in texture packing options
added text views for uploaded images and used by wiki in AchievementsFragment to improve user interface clarity by displaying relevant image status
added mock and logger methods for annotation processing round and processing round in TranslatingJavacPhaseTracerTest . java to enhance test coverage and
added a new ` CategoryInfo ` class and updated the query parameters in ` CategoryInterface ` and ` MwQueryPage ` to enhance category
removed " username " and " password " from assertions in AuthzAuthenticationRequest . java to simplify input validation for improved clarity
added accessibility support for the taskbar timeout alarm in TaskbarStashController . java to improve user experience by hiding the taskbar
added a check for the ' ^ ' character in the signature parsing logic to ensure proper exception handling for cases with already thrown NoSuchElementException
update access flag handling in ClassVisitorDriverFromElement . java and add tests for stubbing interfaces , enums , and abstract enums to ensure correct
added null checks and improved null handling in IntervalFilter and LowpassIntervalsSource classes to enhance code robustness by preventing potential NullPointerExceptions
added tests for the ` entrySet ( ) ` iterator behavior in ` MapInterfaceTest ` to ensure correct behavior of the ` entrySet ( ) `
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility for the TreeMap class
fix imagedata . createdat ( ) to use epochsecond instead of epochmilli
grobcov : add ` ` grobcovf2m ' ' to the singularws ' s ` ` grobc
added private and public key deletion for accounts in AccountRemovalJob . java to enhance security by using public and private keys for account keys
refactor keep - alive header to use a utility method to improve code readability and maintainability
fix postjoinmapoperation when map have no interceptor and member join
disable inlining for text , javascript , and cs in the standarddialect so that it do n ' t interfere with
[ hotfix ] [ table - common ] remove unused parameter spillenabled from hybrid hash table
refactor environment variable retrieval to use ` Optional ` for better null safety to improve reliability by avoiding reflection when accessing system environment variables
pdfbox - 4071 : fix checkstyle issue in util / actionmapper . java
added SerializableMode import and modified code formatting in Mockito and PluginSwitch classes to enhance serialization support and maintain code consistency
fix bug where field value be not be set to null when there be no annotation
added support for isolation level in select statements and modified parsing logic in Parser . java and Mode . java to enhance query flexibility and improve compatibility
refactor HiveConnection to use private static final constants for transport mode and HTTP path to improve code readability and maintainability by eliminating
added a method ` isCacheable ` to ` GlobalOrdinalsWithScoreQuery ` that returns false to indicate that the query is not
added a new file TestStrangeControl . java that implements a simple thread execution with StrangeControl to facilitate testing of Str
updated the generated file name in BuildTargets from " . json " to " . jsfile " and " . jslib " to ensure the
added selectionStart and selectionEnd fields with their respective getter and setter methods in ShadowEditText . java to enable tracking of the start and end
refactor gRPC server initialization to use try - with - resources and improve resource management to enhance code readability and ensure proper cleanup of server resources
updated Jooby and Router classes to enforce required path parameter and improved routing logic to enhance robustness by ensuring required path is provided
added a null check for fst in FreeTextSuggester . java to throw an exception when lookup is not supported at this time
updated string formatting in T4975569 . java and added error handling for jar URL verification in T6729471 . java to ensure
added support for loading an AbiWriter class in JavacInMemoryStep . java to enhance ABI processing capabilities in the application
suppress intellij warn about booleanmethodisalwaysinverted
log warn if the scheduled thread have be stop
refactor EnergyEndpointer class for improved clarity to enhance maintainability and readability of the code
refactor presets handling in ComponentPresetChooserDialog to use orderedKeyList for improved clarity and efficiency to enhance code readability and maintain
fix checkstyle issue in repository / repository / indexdatabase
camel - google - salesforce : fix switch / cases indentation see camel - 14540
added a method to retrieve the exported header style in CxxLibraryDescription and updated references in CxxLibraryMetadataFactory and CxxLibraryMetadata
deleted the Constants . java and DistanceUtils . java files to remove unused components to clean up the codebase
refactor key extraction in RandomPartitioner to use substring for better clarity to improve readability and maintainability of the code
do n ' t fail build - time initialization if there be no @ fold annotation
fix : add support for create an inline rolebinding
added logging statements for session cookie configuration in UaaSessionCookieConfig . java to improve traceability and debugging during session management
updated the calculation of the file name to use the current year instead of a fixed value to ensure accurate identification of the file name based on the
updated variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve code clarity by using a more descriptive
added error handling for invalid options in JavapTask . java and created a new class T8033711 . java to ensure proper
replaced ` collect ( Collectors . toList ( ) ) ` with ` toList ( ) ` in multiple Java files to improve code readability and
updated logging level from error to warn and modified return logic in TaskDriver . java to improve logging clarity and handle shutdown conditions more effectively
[ hotfix ] [ network ] [ network ] enable tiered storage for hybrid result partition
refactor code to use a helper method for checking success status to improve code readability and maintainability
fix ( desktop ) : enable gl20 by default for desktop
removed unnecessary check for VoidType in JimpleBody . java to simplify the code for better readability and maintainability
replaced ` DefaultSourcePathResolver ` with ` SourcePathResolver ` and modified method signatures in ` OutputMacroExpander . java ` to
fix logexceptionsqltest . assertnoleveljobslefteventually ( ) to check for light job instead of regular job
added a condition to check for both " / build / " and " \ \ build " paths in MergeWordsListTask . java to ensure
refactor instructorfeedbackresponsecomment to use string key instead of attribute key
removed unnecessary whitespace in the if statement in Container . java to improve code readability and maintainability
added a new file ` TestEscapeThroughInvoke . java ` containing a test class for object escaping to demonstrate the behavior of object
replaced direct stream skipping with IOUtils . skip for reading bytes to improve code readability and leverage Apache Commons IO for better performance
added interceptor handling for connection pool start and closure in ConnectionPool and JdbcInterceptor classes , and improved error logging in DataSourceProxy and TestSlow
changed catch block from Exception to Throwable in CoreContainer . java to handle broader error scenarios and improve error handling
hbase - 25856 lrublockcache . calculateblock ( ) should return 0 when eviction be not in progress ( addendum
removed the check for a task count of zero in RecentsView . java to simplify the code by directly retrieving the task count without unnecessary
added instance configuration change listener to HelixBrokerStarter and increased sleep duration in HelixServerStarter to ensure proper routing table configuration and
added CoinmateMetadataServiceRaw and CoinmateStatic interface and updated CoinmateExchange and CoinmateMetadataServiceRaw classes to
improve error message for $ { basedir } and $ { project . basedir }
pdfbox - 4892 : avoid duplicate key in coswriter , a suggest by valerybokov
[ beam - 10670 ] add displaydata support to transform . setdisplaydata ( )
replaced ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat ( (
disable cryptographic algorithms in ClientJSSEServerJSSE . java to enhance security by preventing the use of weak algorithms
updated check statements in OptionData . java to use addSubcommands ( ) and addSubcommandGroups ( ) instead of addSubcommands ( ) to ensure
updated module - info . java files for mmm and ppp modules to improve module dependencies and organization
added error handling in ensureConnection method and updated error assignment logic to ensure proper exception management and provide clearer error reporting
updated sCheckingEvents initialization in LauncherInstrumentation . java and modified mFinished assignment in LogEventChecker . java to ensure proper handling of
refactor exception handling and writer closing logic in FileSinkOperator . java to improve error logging and resource management to enhance robustness by ensuring proper
added diagnostic logging to the task execution in SchemaGenerator . java to improve debugging by capturing diagnostic information during execution
replaced SemanticException with OptiqSemanticException in SemanticAnalyzer . java to improve error handling by providing a more specific exception type
refactor DataSourceMonitorTests to improve test coverage to enhance reliability of data source monitoring tests
added a caching mechanism for loaded resource paths in ClasspathMethodScanner . java to improve performance by avoiding redundant scans of resource paths
( chore ) camel - test : fix npe in testserviceutil when testinstance be null
added null check for ` o ` in ` RoutingInBoundHandler . java ` to handle cases where ` o ` may be null to ensure
[ ekey ] log ip address when receive packet from unknown source .
updated imports for ArrowBuf and modified allocator usage in AsyncTaskCopyLocalJars , WritableByteChannelAdapter , Deserializer , and Netty
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTP headers and bodies in HttpConnection and implemented a test for unexpect behavior in RFC2616BaseTest to ensure proper handling
refactor subscription handling in MultiTimeout . java to improve clarity and efficiency of subscription management to enhance code readability and maintainability while ensuring
fix race condition in leveledmanifest . getcompaction candidate
added a test annotation to the TestOrcTimezone1 class to enable unit testing for the ORC timezone functionality
replaced the method for checking conditional metrics and timers with a new method that accepts substrings for enabled metrics and timers to improve clarity and
added error handling for JSON processing in PinotSegmentRestletResource . java and streamlined object setting in TraceContext . java to improve robust
modified JTable rendering logic to handle null columnClass and added a new Test6888156 class with a test case to improve robustness
added a conditional check for the existence of the shell environment before adding it to the arguments to ensure that the correct shell path is used based on
updated the parameter in the deleteWithoutSubscriptions method from 10 to 1 to optimize the deletion process by reducing the number of subscriptions
replaced List with LinkedHashSet for testInstances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
updated BTreeMapTest to use transactionDisable ( ) instead of deleteFilesAfterClose ( ) and fileMmapEnableIfSupported ( )
added a return statement for the iterator in SortedIntList and created a new Iterator constructor in SortedIntListTest to ensure that the iterator is
added unregister method call in DefaultRemoteProxy and changed exception handling in JMXHelper to improve resource management and enhance error handling clarity
[ hotfix ] [ rocksdb ] change default writebuffer size to 64mb in rocksdbconfigurableoptions
updated constructor parameters in Style . java to use style . getBgImage ( ) instead of style . getBgColor ( ) and style .
replaced ` addArgument ` with ` addArgumentNoEncoding ` for message handling in ` FacebookShare . java ` to ensure proper handling of message encoding
[ beam - 10650 ] remove console output from samza runner ( # 10650 )
michaeltamm : use ocean gun instead of nature . ogg in the helloaudio example
[ hotfix ] [ test ] fix checkstyle violation in looprotationbadnodescheduler
added TypeInformation parameter to the convertToMongoType method across multiple classes to enhance type conversion functionality to include additional type information for improved type handling
fix inputbox text display for complex unit
danielwagnerhall : fix copyright year for sendkeytoactiveelement
added methods to handle image scaling and resizing in AddAndScaleMultiImage . java to improve image rendering control and prevent negative target sizes
removed unused methods ` extendArgumentCheck ( ) ` and ` extendWrapStore ( engine ) ` from ` DBMaker . java ` to stream
add a call to updateshiftstatenow ( ) in order to be able to set the shift state on the keyboard .
removed the DETECTED _ ACTIVITY constant and related methods related to activity detection to prepare for backward compatibility while maintaining backward compatibility
updated import statements from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket
removed the import statement for Buildable in AaptPackageResources . java to streamline dependencies and improve code clarity
added comments to unused variables in multiple Java files to clarify the purpose of unused elements in the code
updated the exception message in WebSocketUpgradeHandler to include the status code of the upgrade protocol to provide clearer feedback on the status of the upgrade
corrected formatting of the blockMode assignment in P11Cipher . java to improve code readability and maintainability
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed redundant code in Merge . java to streamline permission checks for plot ownership to enhance code readability and maintainability
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpRequest , and Response classes to streamline code by eliminating outdated functionality
replaced ` com . sun . speech . freetts . PhoneSet ` with ` de . dfki . lt . mary .
refactor stripQuotes method to use PlanUtils for consistency across classes to improve code clarity and maintainability by centralizing quote stripping logic
refactor rendering logic in DLNAResource to use parent context instead of a static Rendering class to improve code clarity and maintainability by
added a new repository list to include resolution and remote artifact repositories in DefaultPluginManager to ensure all relevant repository information is included in the plugin '
camel - 3569 : fix the unit test failure of cxfrsproducerclientfactorycachetest
chore : fix typo find by codespell on fossies . org
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable test due to frequent failures
added a new File instance creation in ZipFile . java to facilitate the creation of a File object from a specified name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in
fix ( core ) : make channel uid non - final ( # 4893 )
added stack trace logging functionality to GenericDAOImpl and introduced StackTraceUtils for stack trace handling to improve debugging capabilities by providing detailed stack trace information during
removed the @ Test annotation from FormLoginIntegrationTests . java to enable the test to run without failing
refactor unparse logic in FunDefBase and ParenthesesFunDef to conditionally use parentheses based on argument length to improve code
updated GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY to use Multimap for managing cluster configurations to
updated variable name from ` supressWarnings ` to ` suppressWarnings ` and added support for Java version 11 in ` UnsafeAutomaticSubstitutionProcessor
updated JsonTreeReader to handle unexpected JSON element types and added tests for nextJsonElement and nextJsonElement methods to improve error handling and ensure
added support for command - line arguments with a dash in TestCommand . java and a corresponding test in ExternalTestRunnerIntegrationTest . java to
added methods to dedup and index Solr in SolrDeleteDuplicates and SolrIndexer classes to enhance functionality for handling duplicate and indexing documents
[ hotfix ] [ table - planner ] support flink planner in sql example
added clearDatabase ( ) method to MssqlIntegrationTest . java to ensure a clean database state before running tests
updated progress display logic and added disposal logic in Progress and RSSReader classes to improve user experience by ensuring proper disposal of progress listeners and
added a check to ensure the parent file exists before proceeding to avoid potential errors when the parent file does not exist
added utility methods for writing and closing POIDocuments in IOUtils . java to improve functionality and ensure resources are closed when writing to documents
updated print statements in JavaBuild . java to include carriage return characters for runOptions and sketch name to improve readability of the output by
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` _ dotsPerPoint `
added generic user search functionality in CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance user authentication
added default port handling in NettyHttpServer , DefaultRouteBuilder , and Router classes to enable dynamic configuration of server and HTTP ports based on
update SnmpTargetHandler to check if the ThingHandler is initialized before updating the ThingStatus to ensure that the thing status is correctly verified after
update instructorfeedbackeditpageaction to include instructors with submit privilege
added @ Incubating and @ Deprecated annotations to AvailableSettings . java to indicate that the class is outdated and discourage its use in
refactor file extraction logic in FileResolverImpl and add a new WarFileResolverTest class to improve path handling and ensure correct extraction of
updated the string format for newFlushedSize in DocumentsWriterPerThread . java to include docstores to improve clarity of log output
use unlocalized name instead of function _ 149739 _ a ( # 3560 )
do n ' t strip whitespace for x , y in imageprocessor
increased the timeout duration for the lazy weak lock from 1000 milliseconds to 1000 milliseconds to improve thread management by allowing more time for the lock
updated parameters in MetadataIndexNode deserialization and added a test for MeasurementChunkMetadataListMapIterator to enable exact search functionality in the TsFileSequence
( chore ) camel - csv : remove unused parameter
added preferred size adjustment for the pane in NavigationShareTab . java to ensure the pane displays the correct size based on the list ' s preferred
replaced OffsetAttribute with State in BeiderMorseFilter and added a test for custom KeywordAttribute in TestBeiderMorseFilter to
updated the UpnpAudioSinkReg , UpnpHandler , UpnpServerHandler , and UpnpEntryQueue files to improve code organization and
fix warp lens collided at x , y , z
added a ` toJson ` method to ` JsonTest ` and modified import statements in ` JsonTest . java ` to enhance testing capabilities for JSON
refactor MutableContextDataSupplier class for improved clarity to enhance maintainability and readability of the code
modified exception handling to log a warning instead of throwing an exception to improve error handling by logging warnings instead of throwing an exception
updated the parameter of KubernetesMockServer from true to https to enable secure communication for the Kubernetes server
add stamp to foreigncallnode so that it do n ' t have to be add to the graph .
updated HTTP method and header handling in DefaultServlet and DefaultServletTest to support POST requests instead of unsupported methods to enhance API compliance and ensure proper
tika - 2892 -- fix for tika - 449 - use locale - dependent locale for long string format
refactor exception handling in ShowFileRequestHandler to use rsp . setException ( ) instead of throwing exceptions to improve clarity and maintainability of error
added try - catch functionality and exception handling in ReflectorClassWriter . java and corresponding tests in ReflectorTest . java to enhance error handling
added a ` clamp ` method to the ` Vector ` class and its implementation in ` Vector2 ` to enable clamping of vector values based
added client details entity imports and modified OAuth2 authentication handling in ChainedTokenGranter . java to improve security by ensuring requested scopes are
refactor BC _ instanceof implementation to improve code readability and maintainability
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 352 . remove
updated UaaUrlUtilsTest to use JUnit 5 annotations and changed method visibility from public to package - private to enhance test structure and improve
hhh - 13850 : remove type parameter from nativequery and nativequeryimplementor
added caching mechanism for font aat information in SunLayoutEngine . java to improve performance by avoiding repeated lookups of font attributes
replace IntBigArray with IntArrayList in TypedSet . java to improve memory efficiency and performance by utilizing a more efficient data structure
danielwagnerhall : use sessionid instead of sessioid to get the current window handle
[ hotfix ] fix checkstyle violation in brokerrequestutils
refactor InjectorBuilderImpl to use a map instead of a LinkedList for instance management to improve code clarity and maintainability by organizing instances
replaced calls to ` getAbsolutePathToBuildFile ` with ` getBasePath ` in ` RawTargetNodeFactory ` and ` BuildTargetToRaw
added null check for the value before parsing to avoid potential NullPointerExceptions when processing input
add keepalivemanager to keepaliveservice so that keepalivemanager can be initialize .
updated the default load factor from 0.67F to 0.67 in IntHashSet . java to improve the initialization factor for better performance
added a method to retrieve all data type physical variations in VectorizationContext and updated related classes to utilize this method to improve data handling efficiency
move htmlassettranslator and stringsresourceloader from com . google . zxing to com . google . zxing .
refactor conditional checks in OverviewState . java for better clarity to improve readability and maintainability of the code logic
added JPA entity annotation to BaseActivityEventEntity . java to enable entity - based persistence for improved data handling
added tracing functionality for TouchInt in NavBarSwipeInteractionHandler and TouchInteractionService to improve debugging and monitoring of touch interactions
added a new file InvalidOptions . java that tests the handling of deprecated and unknown options to provide a mechanism for validating and reporting command - line
added a check to log an error message when the number of supported display bounds does not match the existing display information to improve debugging and monitoring of
refactored the ` getClientIdAndClientSecret ` method into a static method in ` OAuth20Utils ` to improve code reusability and
disable unwrapping of servlet exception in errorpageerrorhandler by default
added a condition to set the status of ShortcutInfo to DEFAULT in PackageUpdatedTask . java to ensure proper handling of shortcuts with default status
camel - 14263 : fixed the issue that seda component do n ' t allow to set a size for an unbounded queue .
add batch update start and end methods to the app class to enable batch updates for improved performance
added HttpClient configuration and validation in ThirdEyeApplication . java to enable HTTP client functionality for improved testing
added sorting functionality to JobInstanceFetchRequest and updated JpaJobPersistenceImpl to enhance request processing capabilities by allowing sorting of job instances
updated the cancelCryptoFacilitiesOrder method to return a CurrencyPair instead of throwing an exception to enhance the functionality by allowing cancellation of market orders
ggb - 1357 fix : hide keyboard when click on av
simplify llvmbitmove . memmove ( ) by use nfi . getfunctionhandle ( )
reformatted code for consistency and readability in BindLdapAuthenticationHandler . java to improve maintainability and clarity of the authentication process
ggb - 1888 disable the block tooltips for now .
updated DefaultDateTypeAdapter to use getDateTimeInstance ( ) and added timeStyle parameter to enhance date formatting flexibility for better date representation
updated playerSet string format from " < UID : " to " ( " to improve clarity of player representation in the command
added a check for empty lists in the List class to ensure the method returns the correct instance when the list is empty
added exception handling for InvocationTargetException in ParametricCallable . java to ensure proper handling of CommandException instances during execution
modified the getLikeExpression method to accept a boolean parameter for handling LIKE expressions to enhance flexibility in expression evaluation based on the presence of regex
added start and stop methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl to provide a way to start and stop the stream supplier components
set default locale for child child in LuceneTestCase to ensure all available locales are set before running the child in the test case
updated multiple Java files related to PostgreSQL connection and SSL handling to improve code consistency and maintainability across connection - related components
refactor context handler initialization into a separate method to improve code readability and maintainability by reducing duplication
camel - 17836 : camel - test - osgi - blueprint now work in osgi blueprint
nifi - 9352 : fix test to work with jdk 1.6
refactored the ` returnTypeSubstitutable ` method to use a ` Warner ` parameter for improved type - checking logic to enhance
added a ThrottleType enum and modified throttle processing logic in TestExecutor . java to allow differentiation between CHARS and BYTES throttle types for
removed unnecessary pixel variable assignment in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to improve code cl
updated annotations in Annotation . java and AnnotatedElement . java to improve code clarity and maintainability
added a new interface Model in the org . apache . poi . hssf . model package and updated Sheet and Workbook classes to implement
camel - 2276 : camel - http - xxf and camel - http - jersey should use camel _ filter _ pattern
added ` clearEntityManager ` functionality to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` to enable configuration of clearing the entity
added null checks for ` ShortcutInfo ` and improved error handling in ` InstallShortcutReceiver ` , ` Launcher ` , and `
fix coremapnodepatterntrigger to work with jdk 1.8
updated exchange specifications from BTC - e to Wex to reflect the correct architecture for the Wex exchange
added null checks for columnReaders and reader in OrcEncodedDataConsumer . java and modified setBuffers method in EncodedTreeReaderFactory . java
added null check for files in SegmentInfos and implemented a test for opening IndexReader after deletion to ensure proper error handling when no segments are found
updated HSearchSortHelperImpl and FhirResourceDaoR4SearchWithElasticSearchIT to remove the " lower - ord " suffix
added a check to ensure percentValue is non - negative before returning it to prevent potential division by zero errors
updated condition checks for ` limit ` in ` RangeInputStream ` and ` RangeReader ` to handle zero and negative values to ensure correct handling of
camel - 19850 : camel - core - optimize routscollector to reduce log verbosity
[ hl ] fix offset calculation in hlchunksource . getnextchunk ( )
refactor test classes to extend LuceneTestCase instead of TestCase to improve test organization and align with Lucene ' s testing framework
[ hotfix ] [ stream ] fix flow control in statefuloperator
removed null check for fill and stroke in Area . java and Line . java to streamline bitmap shaders by directly setting the bitmap shift
removed dbExists method and related tests from Blockchain and BlockchainTest to streamline database existence checks and improve test coverage
trim whitespace from the matched string in SQLPlusSupport . java to ensure consistent formatting by removing leading and trailing whitespace
added multiple calls to setAsync ( true ) in Http11AprProtocol . java to enable asynchronous processing for improved performance
ggb - 1359 do n ' t set divider location when there ' s no divider
added health check metrics and updated the health check method in PinotControllerHealthCheck to improve monitoring and error handling for controller health checks
hide shared avatars from the item view in LocalFileListAdapter to improve the user interface by removing unnecessary content
remove unnecessary @ clientbundle . source from mebisresources
( chore ) camel - core : fix off - by - one error in camel - core
added a log level check before executing commands in LogInterceptor . java to ensure that commands are executed only when the logging level is fine
replaced CountDownLatch usage with assertWaitUntil in EventBusTracingTestBase . java to improve clarity and reliability of span completion
replaced the default locale initialization with a getter and setter methods in QueryParser . java to improve encapsulation and provide a consistent way to access
fix order issue in entrycustomizationdialog and fieldsetcomponent
jbrules - 2835 : fix manners to work with beta node constraint
added OCSP unauthorized handling in OCSPResponse . java and created OCSPUnauthorized . java to enhance security checks for OCSP responses and
replaced Thread . sleep ( 2000 ) with a loop that checks server state to improve server state management and ensure proper exception handling
added methods to track and update the open connection count in SourceCounter and AvroSource classes to enhance monitoring capabilities for active connections in the application
add a builder method to the interface to allow field definition to be add to the interface .
replaced the method ` createDefaultJavaPackageFinder ` with a new method ` getSrcRoots ` in ` BuckConfig . java ` to
replaced OutputWriter with PrintWriter in ScriptExecutable . java to enhance output handling capabilities
updated file creation logic to use a random UUID for temporary files to ensure unique file names and avoid conflicts during test execution
added support for handling DataTable in JRubyStepDefinition to improve integration with Cucumber ' s DataTable functionality
updated method names and logic in SearchImagesRenderer and ApacheHttpClientMediaWikiApi for better clarity and functionality to improve code readability and maintain
[ doc ] fix typo in readsentimentdataset javadoc
improve error message for formula parse failure
added getter and setter methods for the bind address in WebSocketClient . java and made the _ websocket field private to improve encapsulation and control over
[ java ] do n ' t delete archive directory when shut down the cluster .
simplified size setting logic in WidgetGroup and added hit method in Actor class to improve code readability and maintainability by consolidating size
replaced direct comparison with Boolean . valueOf for sessionFixationAttribute in HttpSecurityBeanDefinitionParser . java to improve clarity and avoid potential
fix ( openui ) : fix switch statement in lalogiclinesfragment
danielwagnerhall : implement resetbackoff ( ) and incrementbackoff ( ) in chromebinary
added methods to retrieve HTTP method and route from the WebClient in TraceExchangeFilterFunction to enhance the response handling by incorporating the
let precompactedrow use integer . min _ value to avoid deadlock
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest .
[ # 7368 ] add parameter to feedbackcontributionquestiondetails ( # 7369 )
added calls to ` PublicMethed . waitProduceNextBlock ` with ` blockingStubFull ` in ` ContractInternalTransaction003 . java
added SuppressFBWarnings annotation to KafkaExactlyOnceSink . java and modified KafkaRecord . java to remove Serializable interface from KafkaRecord . java
added PGConnection to the proxy instantiation in PooledConnectionImpl . java and created a test for PGConnection in BaseDataSourceTest . java to
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info and changed log level from warn to trace in TokenAuthenticationHandler . java to provide clearer information about the
deprecate hazelcast . shutdown ( ) in favor of hazelcast . shutdown ( )
added handling for unlimited key JCE requirement in AmbariManagementControllerImpl and improved command reporting in AbstractServerAction and FinalizeK
added support for ITERATOR and END handling in NamedListCodec to enhance the serialization and deserialization capabilities of NamedList objects
do n ' t throw exception when assign lost partition during commit
added schema inclusion rule to ApiExample . java to ensure schemas are included in the output
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to ensure the test accurately verifies
added coordinate sequence validation for the ring creation in SDO . java and corresponding test cases in SDOCreateTest . java to ensure valid ring
added methods to retrieve the base name and dimension count from a constant pool to enhance functionality for handling array type in constant pooling
added debug evaluation output methods to HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator to enable control over debug evaluation behavior
refactor ( testmodule ) : migrate test to junit 5 ( # 4529 )
removed the ' false ' parameter from the ExoPlayerProfile instantiation in LegacyMediaManager . java and updated the live TV check in Play
added a return statement in DynamicStyleBar . java to ensure proper termination of the method execution
added SLF4J logging for database property settings in Utils . java to improve visibility into database property changes for debugging purposes
refactor ReactiveAuthorizationManager to improve authorization handling to enhance security and maintainability of the authorization process
added a check for boolean types in the type promotion logic to ensure both objects and boolean types are handled correctly
rename llvmbitureobjectnuller to addressnuller to be consistent with other class .
refactor multiple Java classes for improved organization and consistency to enhance maintainability and readability of the codebase
add unit test to verify transaction aware cache proxy
added a method to calculate the bounding box of a mesh in Mesh . java to enhance mesh rendering capabilities by allowing dynamic bounding box calculations
added a new enum TargetHashFunction to determine the hashing function to allow users to choose between SHA1 , Murmur3 , and M
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of the code
added high - light color and alpha settings to ListViewMultiChartActivity and modified highlight paint behavior in BarChart to enhance visual clarity and
added a line to store the sgPathPlanMap in the pgSgPathPlanMap to ensure the correct storage of the sgPathPlan
[ hotfix ] [ test ] fix typo in infinispanremoteproducerit
added a check for artifact existence in MavenArtifactFetcher and implemented a locking mechanism in MavenDependencyResolver to improve artifact fetching reliability and prevent data
updated fragmentShader string to include GL _ ES conditionally to ensure compatibility with OpenGL ES and improve rendering performance
changed the type of ` servers ` and ` tables ` from ` SortedSet ` to ` Set ` in ` RSGroupInfo ` and ` Test
added a try - catch block to load the JspPage and modified log level from warn to debug if debug logging is enabled to improve error handling
updated CustomAnalyzer and TestCustomAnalyzer to improve version handling and added a test for version aware analysis to enhance the custom analyzer ' s functionality and
added a test for retrieving package archive info in ShadowPackageManagerTest to ensure correct retrieval of package information from package archive info
replaced direct calls to ` method . invoke ` with ` MethodUtil . invoke ` across multiple Java files to enhance security and maintain consistency in
added import statements for ProjectConfigurationStartEvent and TaskStartEvent in GradleBuildService . java , and modified progress listener in Main .
removed synchronization block from AndroidWebDriver . java to improve performance by reducing unnecessary synchronization
do n ' t terminate pool if initializationfailtimeout be set to 0
removed the ` timeOut ` parameter from the ` getResult ` method and added a new ` error ` method in the ` Net ` class to
changed the ` isNative ` field to be transient and updated the ` addEntry ` method to use ` false ` instead of ` in .
fix checkstyle violation in com / centrypoint / centrypointcallstubmethod . java
rename ruleenablehandler to ruleenablementactionhandler ( # 4693 )
refactored multiple classes related to HTML tag handling to improve clarity and maintainability of the code structure
updated debug logging statements in AuthzAuthenticationFilter . java and AuthzAuthenticationManager . java to improve clarity on request handling and password matching
updated source and sink options handling in KafkaDynamicTableFactoryTest and UpsertKafkaDynamicTableFactoryTest to improve clarity and functionality to enhance
added null check for repository in UsersPanel . java to ensure robustness by handling cases where the registrant repository is not found
added conditions to check for additional font formats in SunFontManager . java to ensure compatibility with additional font formats
refactor type matching logic in AnnotationMatcher . java to improve clarity and accuracy of type matching to enhance code readability and maintainability by
replace " OFF " with " SEVERE " in Grep . java to improve clarity of error reporting
added a check for debug level before logging messages in FaultTolerantChunkProcessor . java to improve performance by avoiding string concatenation when debug
replaced includes list with excludes list in the SurefirePlugin class to simplify the handling of includes and excludes to improve code clarity and
added a condition to check if moving to the default screen on the home intent to ensure the home intent operates correctly when moving to the default
updated maximum bitrate from " 110 " to " 30 " in the configuration to allow more comprehensive bitrate settings
removed duplicate option checks from the getOptions ( ) method in CommandLineParser . java to simplify the code by eliminating redundancy
trim whitespace from the description return in MutableDatabaseProperty . java to ensure consistent data formatting by removing leading and trailing whitespace
simplified output filename assignment in XOMParserTest . java to improve readability and maintainability of the output file path
fix ( core ) : remove unused processid in error log message ( # 1181 )
added getLoadedMusic and getLoadedSound methods to MusicLoader and SoundLoader classes to provide access to the loaded music and sound
removed unused imports and added generic type casts in OnBeanCondition . java to improve code clarity and ensure proper type casting
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording functionality for test cases related to bug b / 2156737
disable lr pause button in cpufeature and memoryfeature
refactor preference handling in Preferences . java to use a single method for creating account preferences to improve code readability and maintainability by reducing
fixed an issue where the presence be not be send to the client . jm - 106
refactor StringBuilder initialization in ObjectInputStream to use a bounds check for utflen to improve memory efficiency by allocating appropriate initial capacity when utflen is
disable statsd export for spring endpoint test
refactor InterruptedException handling in the code to improve code readability and maintainability
refactor ServiceTicket class to improve code readability to enhance maintainability and facilitate future updates
refactor connection logic to use a boolean variable for HTTPS success to improve code readability and maintainability by reducing redundancy
modified the conversion logic to check if the target type is a String before checking if it can be converted to a String to improve type safety and
[ ds - 3952 ] fix the test failure of the itemfilter plugin
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to the AuthenticatorActivity in PasscodeManager . java to ensure that the
refactor ( patternparameterconfigurator ) : remove deprecate annotation ( # 2328 )
modified the ` beginDraggingWidget ` method to return a boolean indicating whether the widget was started successfully to enhance the method ' s functionality to
added JUnit Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root and collected components in DynamicStyle . java to ensure safe execution and avoid potential NullPointerExceptions
add the ability to write confusion matrix to the test file .
fix a bug in jmeterthread . setlastsampleok ( true )
added unit tests for ` getConnectedDevices ` and ` removeDevice ` methods in ` ShadowBluetoothHeadsetTest ` to ensure correct functionality
fixed typo in propertybindinvertest . java and propertybindingsupport . java
added " clone " method to the objectMethods set and introduced a constant for the finalized method in ResultObjectProxy . java to enhance functionality
[ hotfix ] [ yarn ] add null check for counters object in integrationtestbiglinkedlist
send ` ` cangetinstanceinfo ( ) ' ' instead of ` ` cangetinstanceinfo ( false ) ' ' when object id be
updated the service filter logic in SamlIdPServicesManagerRegisteredServiceLocator . java to ensure that the registered service matches the specified service name
added a null check for getActivity ( ) before executing the UI thread in PhotoFragment . java to prevent potential NullPointerException when accessing getActivity ( )
( chore ) camel - logging : use standard naming convention
added methods to set and get the string type in DatabaseAdaptor and changed access modifiers in JDBCSessionDataStore to allow subclasses to access and override string
updated UIMAUpdateRequestProcessorTest to use suggested _ category instead of language in assertions and modified test method to handle exceptions to improve test
refactor thread name handling by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods in ` SessionState
refactor TaskletAdapter class to improve code organization to enhance maintainability and readability of the code
relates to drools - 2200 ( drools - 2200 ) and drools - 2280 ( drools - 2280 )
disable splash progress on mac by default
added tooltip text for the showCGCP checkbox to improve user experience by providing context - sensitive information
replaced ` getTypes ( ) . add ( e ) ` with ` addType ( e ) ` in ` EnumFactory ` and ` InterfaceFactory
add text and description to the retarget action ( # 5239 )
apps - 2841 use stringtemplate . defaulttemplate for getlabel ( ) instead of simple ( )
updated BRIGHTNESS _ FACTOR to use double instead of int to improve precision in BRIGHTNESS _ FACTOR calculation
do n ' t parse history entry for ` ` add to branch ' '
added a ` isAdmin ` parameter to the ` createUser ` method and implemented ` listUsers ` and ` userIsAdmin ` methods in ` Home
added null checks for writeMethod and updated type comparisons in IndexedPropertyDescriptor , Introspector , and PropertyDescriptor classes , and created a test class
[ dynatrace ] remove use of % s in dynatraceexporterv2
updated method signatures in Context , Request , and Response classes to improve clarity and consistency to enhance code readability and maintainability by using more
add setcapabilitiesfrompongebuilder method to messagestack that also deserialize capability from nbt
[ hotfix ] [ test ] fix test failure in lifecycleutilstest
added validation for CreateSmart and TriggerSmart contracts in Wallet . java and modified contract retrieval logic in GetContractServlet . java to ensure proper contract
added package - info . java files for various packages and modules to provide package - level documentation for better organization and clarity
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a loop for handling the tail ' s next node to
added duplicate file handling in JavadocTool and refactored test execution in T7091528 to improve code efficiency by avoiding redundant parsing
change default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic accordingly to ensure proper handling of
added support for adding new user parameters in the LoginServerTokenEndpointFilter to enhance flexibility in handling user credentials during OAuth token authentication
added a new constant ` C _ KEY ` and modified language comparison logic in ` LanguageFactory ` and ` CPPParserTokenManager ` to
replaced instances of ` ThreadPoolExecutor ` with a dedicated ` MoreExecutors ` class to simplify thread management and improve code maintainability
added HTTP headers for caching control and expiration in LoginService and FormAuthenticator to ensure proper handling of HTTP responses in the application
add exception message to voicemanager # sendmessage ( ) ( # 2638 )
updated imports and test suite names in HSSFTests . java and improved readability in TestEmptyDocument . java to enhance test coverage
renamed FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve clarity and consistency in naming conventions
added null check for the output file before retrieving its absolute path to avoid potential NullPointerExceptions when accessing the output file
added import for ExternalResourceControlPriority and set access controller priority for external resource resolution in Java2DRenderer . java to enhance access control control
added error handling for drawing graphics in TestTriggerCoverage . java to ensure compatibility with JDK failure when rendering graphics to avoid build failures on specific fonts
changed the visibility of the ` mbean ` variable and modified the ` main ` method in ` GetInternalThreads . java ` to be final and
added check for empty comments before processing whitespace in TabsAndIndentsVisitor to ensure proper handling of whitespace comments in the analysis process
updated assertions in SimDistribStateManager and TestTriggerIntegration to use greater than 100.0 values to improve test reliability by reducing
updated file path and ID comparisons to be case - insensitive in DatabaseChangeLog , RanChangeSet , and NotRanChangeSetFilter classes to
updated the ` getString ` method in ` ShadowBundle ` to return a default value when the key is not present to enhance functionality by providing a
updated date formatting logic in TweetActivity to account for militaryTime settings to ensure consistent date representation based on user ' s locale
nifi - 1181 : return an empty list if there be no connection to the process
refactor focus request logic in DetailFragment . java to improve code readability and maintainability by encapsulating focus request logic
update classpath handling in App . java to include quotes around file paths to ensure proper formatting of file paths in the application
make sure solve ( ) be synchronize to avoid memory leak
added import statement for ` org . springframework . integration . core . Message ` in ` GenericMessage . java ` to enable the use of
refactor SQL queries in PostgresConnector and MapReduceJobHistoryUpdater for improved clarity and performance to enhance readability and maintainability
updated filter selection logic in AquaFileChooserUI to ensure only valid file filters are set to improve user experience by preventing unint
added synchronized block around content packet processing in P2PTransportManager . java to ensure thread safety during concurrent access to shared resources
updated the method to return string values for Boolean objects in ArrayPtg . java and added a test for the toFormulaString method in Test
updated import statements in PGtokenizerTest . java to use specific assertion methods to improve readability and maintainability of the test code
refactor variable handling in Java2TypeScriptTranslator to correctly identify and print final variables in anonymous and method contexts to improve clarity and correct
added PostgreSQL sequence handling in AddAutoIncrementChange . java to support auto - increment columns to ensure compatibility with PostgreSQL ' s auto - increment functionality
updated byte reading logic in DataInput . java to ensure correct handling of negative values and improve readability of character reading logic
updated assertions in ImageParserTest to check for " Dimension VerticalPhysicalPixelSpacing " and " Dimension HorizontalPhysicalPixelSpacing " to ensure that the
updated the method call from ` getParent ( ) ` to ` getParent ( ) ` in ` Component . java ` to ensure the correct parent component
refactor import statements and formatting in multiple Java files to improve code readability and maintainability
replaced ENGINE _ finish ( ) with ENGINE _ free ( ) and added ENGINE _ init ( ) in NativeCryptoTest . java to ensure
added iteration methods and updated event firing logic across multiple controllers to enhance event processing capabilities and improve clarity in event handling
updated HttpContent handling in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper release of HttpContent resources to improve resource management
added a call to deleteLogs ( ) in TestRecovery . java to ensure logs are cleaned up after tests are executed
updated URL handling in BrowserActivity to launch a new activity if the URL contains " twitter : / / " to improve user experience by allowing direct
added a method to await the host status in DeploymentGroupTest to ensure the host status is up before proceeding with the test execution
updated logResult method call from false to true in VisibilityController . java to enable logging of allowed labels for better visibility tracking
updated the maximum auto - retries configuration from 0 to 25 in RestTemplateRetryTests . java to increase the maximum number of retries for better reli
removed unnecessary print statement in TranslatorSupportTest . java and added @ Override annotations in StandardTypeMapperComponent . java to improve code clarity and
added support for the FRACTION type in ResourceLoader and Converter classes to enhance resource loading capabilities for fractional values in the application
removed file confirmation check from BasicFrame . java to simplify the code by eliminating unnecessary confirmation
added assertions for tagGroupId and tagArtifactId in findNewerDependencyVersion method to ensure that tagGroupId and tagArtifactId are not null
hbase - 26958 namespacestatemanager should throw quotaexceededexception when table quota exceed in the namespace
refactor multiple token - related classes for improved consistency to enhance maintainability and readability of the codebase
lucene - 9698 : add miss copyright header to test / java / util / fuzz / testfuzzpreloop . java
added a check to ensure f0 is non - negative to prevent potential errors when f0 is negative
removed exception handling for database catalog retrieval and added null checks for primary and foreign key columns in TableRetriever to improve robustness by preventing potential
remove the clearencoders ( ) method and use a thread - safe concurrenthashmap instead .
added functionality to allow or disable empty screens in SharedPreferences to enhance user experience by allowing customization of empty screens
added a warning log message indicating the deprecation of cucumber - needle in favor of cucumber - cdi2 or cucumber
updated theme handling in ShadowThemeTest and modified related methods in ShadowArscAssetManager and ShadowVMRuntime to improve theme management and support for
updated failure messages in VerifyFast . java to use ` Arrays . toString ( ) ` instead of concatenation to improve readability and clarity of
no effective change - code cleanup - no effective change - code cleanup
added type checking for propertyNode in CodeGenerator and created prototype getter and setter functions in ScriptObject to ensure proper handling of property access and enable
updated the shuffle method to use a random seed to ensure consistent randomness in the readers list
updated the display name assignment logic in UsersAndGroupsSearchProvider to handle both remote and known sharing scenarios to improve user experience by providing clearer
added a check for blank path in CookieRetrievingCookieGenerator to ensure a valid path is always provided to avoid potential errors when the path is
fix checkstyle issue in util / jvm / jvmstat / jvm . java and attachmodel . java
replaced ` getBackupCount ( ) ` with ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java ` to ensure the
updated pageNumber comparison logic in ValidationResult . java to check if the page number is not equal to the current one to ensure that the page number is
added a condition to check if the focused widget is not null and equals to ensure proper handling of the focused widget in the UIDropdown class
fix checkstyle issue in util / soundutil . java ( # 754 )
refactor ApplePackageDescription to use a dedicated method for retrieving the AppleCxxPlatform flavor domain to improve code clarity and maintain
add test for ` ` show ololo from ololoed ; ' ' syntax
changed method name from ` onConnect ` to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a new file ` TestGetLoggerNPE . java ` that tests the ` getLogger ` method to verify behavior when ` getLogger ` is
added a data structure with a getter method in PathSharingContext and removed sharedMap initialization in ScriptedProcessor and ScriptedDecideRule to
do n ' t throw espressoexception if it be n ' t synchronize .
added regex pattern matching for NEXT _ VALUE _ FOR and modified constructor and methods in NextValExpression and ReflectionModelTest to enhance functionality to support
improve error message when resource bundle be not pre - cached
replaced ` readBuffer . drainTo ( e - > { } ) ` with ` readBuffer . drainTo ( e - > { } )
added support for " Leverage _ Level " parameter in QuoineExchange and implemented order direction property in QuoineNewMarginOrderRequest
added boundInitialization method to PropertyDescriptor and created a MyBean class with property descriptors to ensure properties are correctly bound and validated for MyBean properties
replaced failsafeWidth and failsafeHeight with a SetDisplayModeCallback interface in LwjglGraphics . java to improve flexibility
added a check to reset the buttonsAwatingRelease variable if it is not null to ensure proper cleanup of button states in the component form
fix wrap width in linecell # computeprefheight ( double . max _ value )
corrected spacing in the error message in XSLTErrorResources _ it . java to improve code readability and maintain consistency in formatting
changed ` HashMap ` to ` LinkedHashMap ` for ` paramValues ` in ` CustomChangeWrapper ` and ` CustomPreconditionWrapper ` to maintain
replace string concatenation with String . format for better readability to improve code clarity and maintainability
simplified the method for retrieving the namespace URI to improve code readability and maintainability
added support for nested joins in multiple test classes to improve test coverage for join - related functionality
server : fix listvirtualmachines api to return root admin only
added caching for JavacFileManager in SourceFileManager and modified constructor in CompletionProvider to include cursor parameter to improve cache management for Java
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
updated import statements in KuduIOIT . java and XmlIOTest . java to use static assertions instead of JUnit assertions to
add support for optional output handler in textrenderer and metadatarenderer
fix ( tcp ) : fix symbol file mapping ( # 1464 )
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the test output and improve readability
removed the Reflection class and its references from jooby . internal to simplify the codebase by eliminating unnecessary components
refactor ThreadlessExecutor to use a dedicated methods for tracking the finished state and timeout to improve code readability and maintainability by encapsulating
removed unnecessary try - catch block in DateTimeFormatter . java and added unit tests in TestDateTimeParsing . java to improve code clarity and ensure proper
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and update related method and variable references to improve clarity and consistency in
added a new file ` T7034495 . java ` with multiple interfaces with generics to prevent crashes related to unhandled WILDCARD cases
replaced the do - while loop with a while loop in LotsOfEvents . java to improve code readability and maintainability
updated conditionals in TransclusionDecideRule . java for handling specific nop characters to ensure correct control flow for different operating systems
remove versionutils . getversion ( ) in favor of versionutils . getversion ( )
added unit tests for the HSSF name record and its definition in TestBugs . java to ensure correct handling of " Print _ Area "
modified the creation of MindIcon to handle cases where the name does not contain a leading slash to ensure that the icon description is properly formatted
updated onHomeIntent method to accept a boolean parameter for internalStateHandled in Launcher and LauncherCallbacks classes to enhance functionality by allowing the
replaced the direct call to ` getPreferDependencyTree ( ) . orElse ( false ) ` with a boolean variable ` preferDependencyTree `
implemented the ` showDetails ` method across various activities to support displaying file details with an active tab to enhance the user experience by allowing users to
updated function names from " $ apply " to " apply " across multiple files to standardize function naming conventions for better readability and maintain
hunspell : fix high - level encode problem
updated header description formatting and modified parameters in SourceBuilder . java to enhance the clarity and functionality of parameter handling in the code
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure data is updated when data changes occur
removed the method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to streamline the code by eliminating unused functionality
updated type checking in RemoveJavaDependenciesAdapter and added assertions in Collections . java to improve type handling and ensure correctness of collection operations
chore ( chore ) camel - aws : remove unused method
updated error messages in ` doDudPasswordTest ` to reflect specific length constraints to ensure accuracy in error reporting for invalid input lengths
improve error message in hazelcasttestsupport # testcollectioncontent
improve graphbuilderphase to handle special case of bailout
mow - 129 make sure we do n ' t crash if there be an image on the right side
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a limit parameter to the getOrderBook method in YoBit classes and updated related method calls to allow control over the number of orders returned
replace GotWrongOOMEException with HeapOOMEException in StressHierarchyBaseClass . java and update related exception handling to improve clarity
set max string length to integer . max _ value in standarddataflow
updated the retrieval of the engine string to use an empty string as a fallback to improve robustness by avoiding potential null pointer exceptions
rename ` FullIterator ` to ` WheelIterator ` and update method references accordingly to improve clarity and consistency in the code structure
improve error message if a custom bug pattern be not find
fix flakiness in localchunkprovidertest
changed the visibility of the uncomplete checklists menu item from true to false to ensure the uncomplete checklists menu item is not displayed in
refactor DefaultResultSetHandler to improve result map resolution and introduce a new Contract class with associated fields to enhance code clarity and facil
updated null check and unregistering logic in OverviewComponentObserver . java to ensure proper handling of null defaultHome and prevent potential NullPointerExceptions
removed the import and annotation for VertxGen in PumpImpl . java to streamline code by eliminating unnecessary dependencies
removed unnecessary casting to FileDisplayActivity in FileDetailFragment and OCFileListFragment to simplify code and improve readability by directly using the m
updated token trimming in ConfigAttributeEditor and added a test for trailing and leading spaces in ConfigAttributeEditorTests to ensure proper formatting of tokens
renamed classes ` ClassUsingAnotherAuxiliary ` , ` ClassUsingAuxiliary ` , and ` SelfClassWithAux ` to improve
fix unnamed module lookup for jdk9 +
added a check for " pg _ " in the case handling of " TABLE " in DatabaseMetaData . java to determine the relationship kind based on
chore : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
updated the RQST field description and exception handling in ThriftHiveMetastore . java and HiveMetaStore . java to correct the
added a new module - info . java file containing module exports and dependencies to define the module structure and dependencies for better encapsulation and modular
fix # 4444 - connection timeout intermittently when use jetty 9.4 . 25
updated Log4j2LogDelegateFactory to utilize LogManager for logger creation and added NoExceptionInInitializerErrorTest to improve logging functionality
updated the ` LIBJVM ` initialization and added server VM checks in ` Test7029048 . java ` and ` TestHelper
refactor ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
replaced the null value with " org . postgresql . ssl . LibPQFactory " in PGProperty . java to ensure compatibility with the
disable interprocess semaphore test until i figure out why it fail
sort theme keys in EditableResources . java to ensure consistent ordering of resource names for better usability
added OSVTerminal class and registered OSV flavor in TerminalFactory to support OSV - specific functionality in the terminal framework
added support for additional file extensions " . gr " and " . grs " in the ClassType class to enhance flexibility in handling different
replaced HashMap with TreeMap for combinedVectors in DrillTestWrapper . java to ensure predictable iteration order for vector results
added a condition to iterate over both names and values in XPathEntityProcessor . java to ensure that the loop correctly iterates over both names and values
refactor WebSocketPolicy class for improved readability to enhance maintainability and facilitate future updates
changed instance variables and method names from static to instance variables and methods in ShadowTelephonyManager and ShadowWifiManager to enhance flexibility
add option to perform default - based resolution when resolve message in standardmessageresolver
updated class and constructor usage for MethodVisitor and CheckClassAdapter in AsmUtil . java to use generics to improve type safety and eliminate unchecked
added a new LoggingAuditService class for logging user authentication events to enable structured logging of user authentication success and failure events for better auditing
added nullability annotations to temperature parameters in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder classes to improve robustness by handling
fix : do n ' t generate proxy for abstract class
camel - 3495 : allow to configure http proxy via system property http . proxyhost and http . proxyport .
updated MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " in TemplateDTO . java to ensure compatibility with the
added a call to ` jdkSerialFilter ( ) ` in ` System . java ` to enable the use of the JdkSerialFilter
camel - jbang - add more detail to the log about the pool size
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple animation classes to simplify the method signature and
updated the parameter name from ` realtimeTableConfig ` to ` rawRealtimeTableConfig ` in ` ensureRealtimeClusterIsSetUp `
added methods to check and set error status in ValidationReport and updated validation logic in DisallowValidator and RefValidator to improve error handling and reporting
updated inline QSB handling in InvariantDeviceProfile . java to support both portrait and landscape modes to enhance flexibility in managing
updated the ` createClassPath ` method to include ` throws Exception ` and utilize ` URLDecoder ` for decoding the location string to improve error
updated regex patterns in TransformSteps . java to accept a wildcard character to improve flexibility in matching input parameters
fix npe in toolkit . setproperty ( ) and pgraphicsjava2d . setimage ( )
refactor timeout handling in FaultToleranceTest to use a configurable timeoutMs instead of a hardcoded value to improve flexibility and maintainability of
updated package - info . java files in mmm and ppp packages to ensure consistency and clarity in package documentation
added a method to set the Docker image URL in the Environments class to ensure the application uses the correct Docker image configuration
danielwagnerhall : do n ' t use system . gc ( ) in the test so that it do n '
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replaced the method ` createHardLink ` with ` copyFile ` and added error logging for file copying operations to improve error handling and provide clear
rename methods from ` appendToDescription ( ) ` to ` getDescription ( ) ` across multiple classes to improve method naming consistency and clarity in the
[ pytorch ] add check for device in functioninfo ( # 1749 )
added a check for ` xml ` instance before visiting ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to ensure proper
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` in ` NotesHelperTest ` and ` ReminderHelperTest `
added new ` new GasLimitRule ( ) ` and ` new ParentGasLimitRule ( ) ` to ` CommonConfig . java ` to
changed the visibility of the ` setupData ( ) ` method from public to private in multiple test classes to restrict access to the ` setupData
rename ` autocommit ` to ` runInTransaction ` and update related logic in ` ChangeSet ` and ` XMLChangeLogHandler ` to
added null check for listener in TripleServerStream . java to prevent potential NullPointerExceptions during stream processing
updated URL formatting in JobManagerOptions . java and RestartStrategyOptions . java to use { { . Site . BaseURL } } instead of {
add a new test method ` testIssue154 ` to ` SelectTest . java ` to ensure SQL queries are correctly parsed and deparsed for
refactor Common class to improve code readability to enhance maintainability and facilitate future development
refactor app launching logging and event assertions to use try - with - resources for better resource management to improve code readability and ensure proper
refactor StreamExecDeduplicate class to improve code readability and maintainability
add warn log when send kafka message to topic
dataes - 351 - add immutable property to simpleelasticsearchpersistententity and fix javadoc
make sure setcoord do n ' t fail if set undefined
added scroll handling logic and logging for swipe events in AskGestureEventsListener . java to improve swipe responsiveness and debugging capabilities
refactor comparison logic in NGramEstimator to compare keys with their corresponding values to improve the accuracy of the NGramEstimator by considering
updated imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple files to align with
updated method calls in StatsLogCompatManager to retrieve folder icon properties to improve clarity and maintainability of the code by directly accessing folder icon
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file ` TestSkeletonPredicates . java ` to implement and test skeleton predicates in the IR framework to facilitate testing of
added a setter method for the TransferHandler and modified equals and hashCode methods in SelectionHighlighter . java to enhance object comparison and hashing functionality for
added a new file ` StringResultConverter . java ` and modified ` AsmRuntime . java ` and ` AsmUtil . java `
camel - 19751 : camel - account , camel - metadata , camel - http : / / issues . apache . org / activem
updated the condition from ` WaitForSingleObject ( console , 100 ) ! = 0 ` to ` WaitForSingleObject ( console , 100 ) =
added null checks and adjusted buffer limit handling in BufferUtils . java to ensure robust buffer initialization and prevent potential NullPointerExceptions
updated the assertion in TestSolrDiscoveryProperties to check the file separator instead of a fixed path to ensure compatibility across different operating systems
modify OS detection logic in AutoUpdaterServerProperties . java to include support for Windows and macOS versions to ensure compatibility with additional operating systems and
updated Lock constructor to accept a string lockName instead of a File object to improve clarity and flexibility in managing lock file names
replaced appIcon with allApps in Overview . java to improve clarity by directly referencing the All Apps view instead of a specific
updated method references from ` Invocable . InvocationType ` to ` InvocationType ` in ` ClientDatagramEndPoint . java ` to improve
corrected the spelling of " oreder " to " order " in the GET _ STEP _ EXECUTIONS string to ensure accurate
updated button handling in LwjglInput to use gdxButton instead of returning Buttons . LEFT to ensure correct button assignment based on
[ hotfix ] [ task ] add test for submit _ reject and submit _ approve
replaced instances of ` logger ` with a static final ` LOGGER ` instance across multiple builders to improve consistency and encapsulation of logging functionality
updated expiration time calculation in SsoAccessTokenProvider and modified test methods in SsoAccessTokenProviderTest to improve accuracy of expiration handling and enhance test
skip some test that fail on window
feat ( ci ) : upgrade mockito to version 2.7 . 0 ( # 2394 )
rearranged conditional checks for defaultCloseOperation in JFrame . java to improve code readability and maintainability
refactor database connection handling in LibraryScanner . java to improve resource management and avoid potential null pointer exceptions
replaced the use of ` metricsContext ` with a call to ` super . initializeMetrics ` in ` SuggestComponent . java ` to
updated string formatting for file and folder counts in OCFileListFragment . java to improve clarity and maintainability of the code
change default value of hashknownhosts from " yes " to " no " in ScpServerTestSupport . java and modify loadKeys (
refactor SourceVersion class to improve code readability to enhance maintainability and facilitate future updates
added a new test class ThreadFactoryTest for testing thread factory functionality to ensure that the ThreadFactory implementation behaves as expected for different thread groups
added a method to retrieve the lock period based on the support for maximum delegate lock period to enhance flexibility in lock period adjustment based on dynamic
added a new TicketModel instance in EditTicketPage . java to initialize ticket data for further processing
changed the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the option to allow dimiss
updated constructors in various assertion classes to include the class type parameter to improve type safety and ensure proper type casting during object instantiation
added a new menu item ` MENU _ QUOTE ` and modified its value in ` TweetActivity . java ` to enhance user interaction
make sure interrupt be clear before start a new thread
renamed ` codecPassthrough ` to ` decryptOnlyCodecFormat ` and updated related methods for clarity to improve code readability and
added a conditional check for the result before offering and closing failures in ServerHTTP2StreamEndPoint . java to ensure that failure handling is only
updated German and French error messages in XSLTErrorResources _ de . java and XSLTErrorResources _ fr . java to improve clarity
added ThreadSafe annotation to CheckpointsCleaner . java to ensure that the class is executed in a thread - safe environment
replaced ` Observable . OnSubscribeFunc ` with ` Observable . OnSubscribe ` in ` MockRestAdapter ` and ` RestAdapterTest `
[ hotfix ] fix checkstyle violation in componentpresetmanager
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration for unique column names in HiveConf . java and updated corresponding
fix for ticket : 284 : fixed audio effect not be update for the first time .
added validation to check if a session is invalid and updated test assertions to enhance error handling and improve code clarity
deleted the ExceptionHelper . java file to the class is no longer needed for error handling functionality
jcex25519 : use 255 bit securerandom instead of 256 bit random
added a codec setting for the Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with the latest L
[ hotfix ] [ runtime ] add log for empty checkpoint range header
added support for RSA / ECB / OAEPPadding algorithm parameters in the OperatorHelper to enhance security by enabling the use of O
replaced instances of ` DARWIN _ AARCH64 ` with ` MACOS _ AARCH64 ` across multiple files to ensure compatibility
added handling for SecurityException in DebugSourcesResolver to improve error reporting for source resolution failures
modified the conditional logic for returning transport values based on the operating system type to ensure correct handling of UNIX systems in the code
updated error handling and logging in FileUploadUtils , ControllerConf , and UploadRefreshDeleteIntegrationTest to improve error reporting and enhance file management functionality
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory freeing to improve memory management and prevent memory leaks
enable fastsyncchaindownloader by default
removed unnecessary timezone offset setting in SimpleDateFormat . java and added a new test class Bug7130335 . java to improve code clarity and
refactor calculations for selected icon and current row and selection in AllAppsView . java to improve code readability and maintainability by reducing
server : do n ' t add default hypervisor if it do n ' t exist
refactor StringBuffer class to improve performance to enhance efficiency of string manipulation operations
added a new variable ` ruleUID ` to the ` RuleResource ` class to ensure that the rule ' s UID is correctly assigned to the
added null check for the listener before unsubscribing in RegistryProtocol . java to prevent potential NullPointerException when the listener is null
add pretty print property to jolttransformjson ( # 4068 )
change accessibility of access _ table from private to public to allow access to access from other class .
updated error messages from " Resource ' classpath does not exist " to " No resources were found at location " in DataSourceInitializer and DataSourceInitializerInvoker
make xmpptransport . dorun ( ) throw ioexception instead of stop ( )
refactor multiple classes related to control and response handling to improve code organization and maintainability
added parameters for effectiveClusterVersion and isUpgradeSuspended in AmbariManagementControllerImpl . java to improve handling of upgrade suspension
updated copyright year in FindsByCssSelector . java to reflect the current year of the project
removed the initialization of a list of fields from the writer object to streamline the code by eliminating unnecessary local variable
added encryption and signing key sizes to OAuthProperties to enable dynamic configuration of encryption and signing keys for improved security
hbase - 26903 replace getcolumnfamilies ( ) . length with getcolumnfamilycount ( )
use a more relaxed aliascheck for ci on
refactor serialization classes for improved consistency to enhance maintainability and readability of the codebase
[ java ] add reset ( ) method to clustermanager to reset idle strategy .
updated the incrementation of currentChunkID in ChunkedWriter . java to ensure correct initialization of the writer
added a new abstract class AbstractJobExecutor for job execution handling to provide a base implementation for job execution in batch processing
replaced ` return ` with ` replayFuture ` and modified the return statement in ` RecoveryStrategy . java ` to improve code clarity and
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added a method to return an empty list when Consul is disabled in AbstractConsulClient to ensure proper handling of service IDs based on the discovery
replaced Float . floatToIntBits ( ) with SecureRandom ( ) for hashSalt to prevent collision attack in hashSalt generation
improve runtimecompilationfeature . printfailedruntimecompilationtrace output
updated the calculation of currentStart and baselineStart in TimeOnTimeComparisonHandler . java to ensure that both currentStart and baselineStart are correctly
updated ` answer ` method to handle abstract methods in ` CallsRealMethods . java ` and added tests in ` CreatingMocksWithConstructorTest
refactor checkPackageAccess method to accept Class instead of String to improve type safety and flexibility in package access checks
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup methods to improve plugin initialization and error handling
improve bold font handling for contribs in ContributionListPanel . java to enhance readability and maintainability of the code
added a new request flag ` REQUEST _ HAS _ TIS ` across multiple handlers and updated related logic in ` LauncherInstrumentation ` to
removed unnecessary try - catch block and refactored action listener initialization in ConnectAction . java to improve code readability and maintainability
updated the data structure from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` to improve type safety and clarity in
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 563 : add
added handling for the HOME and END keys in the Less . java file to enhance input parsing and improve user interface functionality
removed synchronization for accessing connected plots in PlotHandler . java to simplify the code by eliminating unnecessary synchronization
simplified intent creation and chooser creation in Utilities . java to improve code readability and maintainability by encapsulating intent creation logic
mondrian : make roster constructor package - private again
added basic constraints to the certificate generation to enhance security by enforcing stricter certificate validation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest ` to address test failures due to incorrect transform offsets
simplified the assignment of ` ps ` in ` TrieDateField . java ` and ` TrieField . java ` to directly use `
removed the TaskbarStateHandler class and its associated logic from BaseQuickstepLauncher . java to streamline the codebase by eliminating unnecessary
added a new file ` ArrayLength . java ` that tests the behavior of ` getField ( ) ` and ` getFields ( ) ` for array
make sure hazelcast process be clean up before destroy it in hzstartit
replaced the @ Singleton annotation with @ ApplicationScoped and refactored the save method to use @ PostConstruct and @ ApplicationScoped to improve
update assertions and modify newValue logic in Safepoint . java to ensure value is non - negative and correct value assignment
updated threadNameField to use " Ljava / lang / String ; " instead of " [ C ] " and changed return type from char
updated the default random seed from ` System . currentTimeMillis ( ) ` to ` 42 ` in ` Lucene90HnswGraphBuilder `
refactor stroke and font handling in PGraphicsJava2D to improve flexibility by allowing customizable stroke and font settings
refactor the expansion logic in SqlValidatorImpl to use a new method ` expandDynamicStar ` to improve code readability and maintainability by
added a method to find nested children in Comment2000 to facilitate the processing of nested comments in the code
added import for Messages and set a status code for the PMS frame in HTTPServer . java to enhance user experience by providing a warning icon
use getmodifiersex ( ) instead of getmodifiers ( ) , remove deprecate method
move amd64countleadZerosnode and amd64counttrailZerosnode to amd64countleadingZerosnode and amd64
camel - 10650 : fixed npe in entityparser when disposition notification be not set .
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
added a clearLog method to ErrorConsoleController and implemented its functionality in ErrorConsoleViewModel to improve user experience by allowing users to clear logs
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the animation controller
replaced ConsolePlayer with LocaleHolder and updated message formatting in Debug . java , CaptionMap . java , and DummyCaptionMap . java to
updated connection pooling methods in ` ConcurrentBatchIdentifierTest ` , ` SequenceOptimizerIdentifierTest ` , and ` AbstractTest ` classes to optimize
[ java ] add opera blink capability to the default driver session .
show an error dialog when download fails
added new LIFX product types to the LifxProduct class to enhance functionality and support for additional features in the game
added asynchronous handling for replica creation in OverseerCollectionProcessor . java and modified CollectionAdminRequest . splitShard in CollectionsHandler . java to
removed unnecessary ` private ` modifiers from ` PGSQL _ PK _ BYTES _ LIMIT ` and ` PGSQL _ PK _ BYTES _ LIMIT `
updated LogPanel initialization to use the repository model if objectId is empty to ensure the correct repository reference is used when creating LogPanel instances
changed the unit of the parentTail vector from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to correct the
added a ` browserDestroy ` method to ` AndroidImplementation ` and modified the ` deinitialize ` method to ` destroy ` to improve resource management
added a wait for active collection readApiTestViolations in AutoScalingHandlerTest . java to ensure that the test does not hang indefinit
refactor loop to use an index - based approach for processing elements in ScreenTerminal . java and update imports in Tmux . java to
updated the SoftResetAction class to use ControllerState checks instead of backend status checks to improve code clarity and ensure accurate state management for the
disable on - disc stream cache to speed up texture pack reloading .
added ` parentFolder = PMS . get ( ) . getDLNAResource ( objectID , mediaRenderer ) ` to ` Request . java
cloudstack - 3446 : fix typo in networkofferingvo . java ( # 2296 )
replaced direct deletion of temporary files with an anonymous inner class to ensure proper resource management and avoid potential memory leaks
added error handling for Forbidden responses in StandardGitHubRepository to improve robustness by logging the response for forbidden requests
log4j2 - 1343 add method getoriginal ( ) to messagefactory2adapter to get the original messagefactory
added @ SuppressWarnings ( " BanSerializableRead " ) annotation to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex pattern from " [ 0 - 9 ] { 1 , 2 } " to " [ 0 - 9 ] { 1 , 3 }
added initial and dismiss delay settings for the ToolTipManager in ExtractionModelFrame . java to improve user experience by providing smoother transitions
refactor ProjectCommand methods to use a passedInTargets set instead of options to improve code clarity and maintainability by centralizing target graph
added timezone setting and a test for the format2445 method in TimeTest . java to ensure correct handling of time zones in the test
refactor MediaSessionConnector to improve session management to enhance performance and maintainability of media session handling
use the endpoint ' s ssl implementation instead of a new jssefactory
updated the accuracy display in the GpsLoggingService to use the accuracy from the current location instead of the altitude to ensure accurate accuracy representation in
added a check for futures enabled in BinanceExchange and updated BinanceAccountService to use the user reference instead of the order ID to ensure
continue issue 675 [ rename instructoraccountmanagementhelper . accounts to instructoredatransferaccountmanagementhelper . instructoredat
added a method to set the accept queue size in the ThriftHttpCLIService to allow dynamic adjustment of the maximum worker thread count
updated the way the watch service is disabled by using a constant for the property name to improve code readability and maintainability by avoiding repeated
camel - 7999 : camel - jms - enable ssl support by default in camel - jms
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker ` and updated tests in ` TestWindowFunctions ` to
updated the calculation of the duration variable in GCInspector . java to ensure that it may be zero for a really fast collection
fix : fix npe when get Javadoc comment on method with line comment .
replaced unsafe methods with a native method for reading reserved memory in macOS to simplify memory handling and improve compatibility with macOS environments
added calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of
hbase - 26956 : hbaseadmin # waitforoperation should include procid in the tostring ( ) method of hbaseadmin
camel - 14263 : camel - cxf - add a constructor to get the service class .
refactor YamlChangeLogSerializer to store databaseChangeLog as a container map instead of printing it directly to improve data organization and facilit
updated print statements in SchemaPrinter . java to include a newline character to improve output formatting for better readability
removed unnecessary code and improved message sending in DebugRoadRegen . java and SchematicHandler . java to streamline the registration
updated context reference from ` getContext ( ) ` to ` getActivity ( ) ` in ` HomeFragmentNowPlayingRow ` and ` HomeFragment
updated @ GeneratedValue annotations to include the ' native ' generator and added it to multiple classes to enhance the functionality and flexibility of the generated
removed the country parameter from the getSystemTimeZoneID method to simplify the method signature by eliminating unnecessary country parameter
updated write method to include position and remaining bytes in BZip2Codec . java and modified ByteBuffer initialization in TestBZip2Codec . java
mow - 718 move logger init logic from appw to appframe
added a constant VALUE _ TYPE _ EMPTY in the Type class and modified the Value class to use this constant to facilitate handling of
replaced ` = = ` with ` . equals ( ) ` for string comparison in ` GroupManager ` class to improve null safety and avoid
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class to improve code readability to enhance maintainability and facilitate future development
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated tests accordingly to replace ` newInstance ` with ` newInstanceExact `
fix misspelling of ' compacted ' to ' row '
added a type adapter for ArtifactVersion and updated Gson instantiation to use this adapter to enable serialization of ArtifactVersion objects in JSON format
refactor array manipulation logic in NativeArray . java to handle current and previous entries more efficiently to improve efficiency by avoiding unnecessary operations when
replace file saving logic with parent file retrieval in FileUploader . java to improve file management by ensuring the correct parent file is set during uploads
added a new file UTF8ReaderBug . java to test handling of supplementary UTF - 8 characters in XML parsing to ensure correct parsing behavior
added unit test base on user forum issue
updated subscription streams from " ethbtc @ depth " to " ethbtc @ depth20 " in BinanceIntegration and BinanceUs
added a resetAllocation method to the Wrapper class and invoked it in the SimpleParallelizer class to ensure that initialAllocation and maxAllocation are reset
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
replaced direct usage of System . getProperties ( ) with synchronized block for setting configuration properties to ensure thread safety when modifying system properties
add comment to discourage re - adding the status inheritance
refactor AbstractDoubleArrayAssert for improved clarity to enhance maintainability and readability of the code
updated width and height calculations to account for index boundaries in mLabels to ensure proper adjustment of width and height based on the length of mLabels
added ` testDelay ` and ` testAbort ` methods to ` CodeFirstSpringmvcIntf ` , ` TestResponse ` ,
replaced ` d . get ( fieldName ) ` with ` d . getValues ( fieldName ) ` for accessing string values to improve performance by accessing
replaced the usage of CxxLink with BuildTargetSourcePath in Omnibus . java to utilize the new BuildTargetSource
disable the versioning feature for now
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` to track the number of files
removed the " - b " argument from command - line arguments in AidlStep and GenAidlTest classes to streamline command
fix ( obligationanalysis ) : delete obligation from comparison ( fixes # 767 )
added a TODO comment to the FakeHttpLayer class to prepare for future testing of the functionality
[ hotfix ] [ runtime ] remove error handler from embeddedleaderservice
refactor CompositeDiscoveryClient to use reactive programming for flowable streams to improve performance and readability by using reactive programming
replaced ` applySystemConfiguration ` with ` applyQualifiers ` for better clarity and consistency to improve code readability and maintainability by
[ hotfix ] [ config ] improve the description of jobmanager . max - execution - attempts .
replaced ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` and updated related visibility logic in ` WidgetsFullSheet . java
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5358 ,
refactor test setup in AuditAliasCommandIntegrationTest to use a dedicated setup method to improve code organization and clarity in test setup process
removed unnecessary logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and reduce unnecessary
( chore ) camel - cxf : disable test that be not applicable in this scenario
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging errors during the refresh process
updated ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` RequiredArgsConstructor ` and added a method to
added a method to check and set default background fill settings in HSSFCellStyle . java to ensure consistent handling of foreground and background fill
refactor ZonedDateTimeFormatterBenchmark for improved readability to enhance maintainability and ease of understanding for future developers
refactor ` DistributedUpdateProcessor ` to use a new method for checking buffer updates to improve code readability and maintainability by encapsulating logic
added a null check for the rocket ' s stage in SimulationListHandler . java to ensure proper handling of cases where the motor is
make / editreplace / / editscript / / update and / / editreplace / / editscript / / remove do n ' t work
refactor ExtendedMasterSecretExtension class for improved clarity to enhance maintainability and readability of the code
changed variable declaration of InputProcessor to be final to ensure that the processor reference cannot be reassigned after initialization
added a call to onWriteFailed in WritableKeyProcessor to notify listeners when the end of the stream is reached during write operations
added a new constant " CUBE " to the MySQLDatabase class to support additional database interactions in the application
added a try - catch block around the rm call in TestReplicationHandler . java to handle potential IOException during the removal process
renamed ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and updated related methods and
replaced reflection - based field access with direct method calls in DefaultOkHttpClientFactoryTest to improve code readability and reduce dependency on reflection
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the output stream in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerExceptions during execution
ggb - 1353 fix for av not be visible in avvieww when there be no av
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified its logic to allow conditional execution based on the
refactor HttpRequest class to improve request handling to enhance performance and maintainability of HTTP request processing
added functionality to store and update the pull unread status in shared preferences to enhance user experience by tracking unread pull notifications
fix npe in isnullnode when the parent be not an object .
updated graphics initialization and memory calculations in Box2DTest . java , Pong . java , and Pong . java to improve rendering accuracy
added null check for mCommentsRecyclerView and LinearLayoutManager in ViewPostDetailFragment . java to improve robustness by preventing potential NullPointerException
change log level from trace to warn for background operation cancellation to improve logging granularity for better error tracking
added logging for method instance names and flags in JimpleBodyBuilder . java to improve debugging and ensure correct handling of method instances with abstract flags
simonstewart : do n ' t invoke mouse up callback on ie10 +
updated the ` getNotificationUsers ` method to include ` deviceId ` as a parameter and modified the filtering logic in ` CacheManager ` to enhance
change base url for cgiarprovider to use the new version of srtm
removed property listeners and set bottomPanel to null in MotifFileChooserUI . java , and added a new class bug6520101
replaced ` return ` with ` boolean return true ` in ` hollowhistoryui ` , ` hollowdiffui ` , and `
refactor methods in BuildRuleResolver for improved rule resolution to enhance type safety and error handling for optional build targets
added visibility control for the transportSpinner based on the makingShortcut flag to improve user interface responsiveness by hiding the spinner when the shortcut
added null check for attributes _ field and created new classes with annotations to ensure proper handling of null values and improve code clarity
refactor backPressed methods across multiple fragments to return a boolean indicating success or failure to improve code readability and control flow in the back navigation
added support for long view index functionality in QueryServices and updated the method for obtaining the view index data type to enhance flexibility in handling
corrected spacing in SDRTrunk . java to ensure consistent spacing in string concatenation
updated privateKeyPath path handling to use StringUtils . cleanPath to ensure the path is clean before processing to prevent potential issues with path formatting
simplified the ` diffDropColumn ` method by eliminating unnecessary parameters to streamline the method signature and improve code readability
replaced instances of ` Version . LUCENE _ 40 ` with ` TEST _ VERSION _ CURRENT ` in ` IndexWriterConfig `
hbase - 26958 add option to disable column family check in importtsv
[ java ] replace log recording channel with log subscription id .
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " startApplicationDetailsActivity " ) ` and added
added a condition to return early if the first element of the JSON node is " i " to optimize processing by skipping unnecessary processing for specific JSON
refactor Procedure class to improve code readability to enhance maintainability and facilitate future development
updated resource bundle loading to use the system ' s default locale to ensure that resource bundles are correctly loaded according to the system ' s default locale
[ kotlin ] support normalization of array creation in kotlin compiler .
updated condition checks and logic in PerSegmentSingleValuedFaceting . java to ensure correct handling of term enum positions and counts during faceting
fix ` ` author ' ' field not be present in the metadata . ( # 7041 )
added a static requirement for ` jdk . unsupported ` in ` module - info . java ` and created a new test class ` OSG
fix for nifi - 1066 : allow controller service to be enable via propertybindingserviceprovider . enablereferencingservicesgraph (
hbase - 13658 htable . waitforallpreviousopsandreset ( ) should use setautocommitto instead of setaut
fix : cast the ` ` ifelement . getThenStatement ( ) ' ' to ` ` ctstatement ` ` ( # 4769
added ` hasUserData ( ) ` method to ` SimpleFeatureImpl ` and its implementation in ` SimpleFeatureImpl ` and ` Property ` classes
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils . java ` and ` ExplainTask . java ` to simplify method
refactor RelyingPartyRegistration class for improved clarity to enhance maintainability and readability of the code
added a method to enable logging in the JavaCompiler class to ensure that all logging handlers are logged for the current package
added a new class ` InJavaSourceSet ` to handle Java source sets in Java code to facilitate the processing of Java source
testGDALParser now check if the gdalinfo file exists before attempting to access it to improve test reliability by verifying the gd
added a new static method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of getter instances based on
removed unnecessary check for useExternalStorage in DirectUpload . java to simplify the condition for better readability and maintainability
added a new constant INDEXER _ NO _ COMMIT in IndexerMapReduce and updated related job handling in IndexingJob and ObjectCache
storage : allow disk offering id to be pass when create a volume
updated assertions in ToHtml . java and BaseTestCellComment . java to check for non - empty notes instead of empyy notes to
added null checks and resolution for ` Period ` objects in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to ensure proper handling
added a new file ` Issue382 . java ` to handle specific error responses to enhance error handling capabilities in the application
replaced the private static method ` signum ` with a static import and simplified the return statement in ` PositionUtils . java ` to improve code
set the visibility of the holder text to GONE when certain conditions are met to improve user interface responsiveness by hiding the holder when
fix ( astparentconsistencychecker ) : fix bug in get import kind for ctreference
[ java ] use firefoxdriver . getprofile ( ) to get firefox driver profile
updated LiquidBlock class to extend BucketPickup and modified its properties to enhance block functionality and improve data encapsulation
fix intermittent failure on slow ci server
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate
replace existingObservation with distinctObservation for clarity to improve code readability and maintainability by using a more descriptive variable name
updated ` TEST _ NIGHTLY ` , ` AWAITSFIX ` , and ` BADAPPLES ` to use the annotation for test
updated method names and logger initialization logic in SQLEditorSupport . java and SQLExecutionLoggerImpl . java to improve clarity and
add denyaccess ( class . class ) and denyaccess ( proxy . class ) to graalcontext
replaced direct calls to ` getRGB ( x , y , c , d ) ` with ` getDataElements ( x , y , d
updated HiveAbstractReader to use partition data instead of table data to ensure transactions are correctly associated with the correct partition data
refactor the condition for determining scroll behavior in the launcher overlay to improve clarity and maintainability of the scrolling logic
mondrian : add an implementation of batchbuilder to allow modification of the jdbc batch size
improve error message for unexpected input
added a new class ` MockWithStaticStateDemo ` and a test for spying on a class retains state to facilitate
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing and deparsing for
added error handling for null UGI in SecurityUtil . java to ensure proper execution of actions when UGI is not available
updated error handling to include the error code in OpenALMusic . java to improve error reporting by including the error code in the exception
camel - 15836 : camel - quartz should use the same parameter name a other quartz component . thanks to benj
updated the logic for determining the precision and scale in RexNodeConverter to ensure correct handling of unscaled values for accurate SQL type generation
updated the retrieval of vendor and device properties from ` getAttestationMetadata ( ) ` to ` Optional . ofNullable ( Attestation :
updated the assertion in WalletTestAccount003 to use a timestamp instead of a test name to ensure the test accurately reflects the current time
replaced AxialStage with RocketComponent in BasicFrame . java and refactored selection handling in DesignPanel . java to improve code
added long running time configuration with getter and setter methods in Args . java to enable dynamic adjustment of the VM ' s long running time based on
updated priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW in FindRefComparison . java and added a new
updated import statements and method signatures in HttpServerProvider , ScriptEngineManager , and FtpClientProvider classes to use java . util . ServiceLoader
[ geot - 6761 ] fix xssf decimal binding to use toplainstring ( ) instead of tostring ( )
replaced assertEquals with assertEquals in TestRestClientRequestImpl . java to improve readability and maintainability of the test code
updated the condition to check if the reference database equals the comparison database before proceeding to ensure uniqueness constraints are only created if they do not already
removed the ` addAndroidConstants ` method and streamlined the asset path handling in the ` IjProjectTemplateDataPreparer ` class to
updated assertions in DuplicateCookieTest . java and SessionRenewTest . java to use awaitility for request checks to improve test reliability by ensuring
added additional key - value pairs to the ImmutableMap builder in ChromeTraceBuildListener . java and ChromeTraceBuildListenerTest . java to enhance the
[ gr - 26354 ] use modulesupport . getresourcebundle in jdk 11 +
fix ` ` match limit ' ' to ` ` match order ' ' in hepplanner
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval and printing of exchange metadata to facilitate
added the ` strictfp ` class to ` FloatingDecimal ` and ` FormattedFloatingDecimal ` , and implemented a new ` testStrict
replace unparseIdentifier with columnName in ColumnStatsSemanticAnalyzer to simplify the column name appending process
added a test for replacing variable declarations in JavaTemplateContextFreeTest . java and modified the contextFreeTemplate method in BlockStatementTemplateGenerator .
added a condition to check if the class is non - synthetic in InstantiateStaticClass . java and introduced a new test method in Bug1282
replace projectFilesystem . getPathForRelativePath with basePath in WorkspaceAndProjectGenerator . java to simplify path handling by directly using basePath
added handling for pending rescues in IkStepDefinition . java to improve rescues management during message invocation to improve error handling and
[ hotfix ] [ table - common ] make equal ( ) and hashcode ( ) method overrideable
added a method to retrieve the default SyncLevel and updated the SyncLevel enum to improve flexibility in managing sync levels and provide a default value
test : increase wait time in controlcommandstest
added a condition to check if the slice state is not REREVERY in the RecoveryStrategy class to ensure that only non - recovery slices are
updated the ` create ` method call in ` opencv _ core . java ` to ensure consistency in the image creation process
added ` sdkPath ` to ` AppleBundle ` and ` SwiftStdlibStep ` classes and modified the ` makeProcessExecutorParams `
[ hotfix ] [ runtime ] remove dead lock in transientblobcleanuptask
server : fix npe when try to acquire lock on static nat
refactor PasswordEncoder and StandardPasswordEncoder classes for consistency to improve code maintainability and readability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type
refactor BetterBlockPos class to improve code organization to enhance maintainability and readability of the code
updated the method to retrieve the ServletContext by class loader to ensure compatibility with dynamic class loading based on the current class context
updated version handling logic to differentiate between nightly builds and non - nightly builds to improve clarity and maintainability of the
added support for removing trailing spaces from Oracle database statements in LoggingExecutor and JdbcExecutor to improve SQL statement handling for Oracle databases
added a new constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to ` IsNullValueAnalysisFeatures ` to provide a configuration option for
fix ( hawtio - system ) : use hardcoded port for jolokia test
updated BLOB _ SIZE , PLAY _ MARGIN , and SLIDER _ MARGIN values , and refactored time
added a method to add a multifactor authentication provider bypass in DuoSecurityMultifactorProviderBypassConfiguration to enhance security by
reformatted method signatures in MaxRectsPacker . java for improved readability to enhance code clarity and maintainability
( chore ) camel - jbang : fix checkstyle violation in camel - core
added methods to set and get the help page in PMS . java and refactored help page retrieval in HelpTab . java to improve
added two new files , GeocodeProviderFactory . java and Constants . java , implementing a base class for geocoding and constant management to
updated import statements in LuceneAnalyzerUtil . java and LuceneTokenizer . java to use the correct CharArraySet class to ensure compatibility with
[ hotfix ] [ test ] add unit test for the new option constructor
do n ' t delete non - existent object in python proxy
modified conditions in ` SegmentsInfoRequestHandler . java ` and updated collection creation in ` CollectionsAPISolrJTest . java ` to ensure correct
updated the calculation of numPredictiveAppCols to use a conditional value based on whether the device is a phone to improve accuracy in determining the
added a static method ` hasScalarSubqueryInput ` to ` JoinUtils ` and refactored related code to use it to improve code
added a new class ` BlockBuildCraft ` to handle block removal in the build craft system to facilitate the building of
updated layout parameters for drag - and - drop functionality in DeviceProfile . java to improve layout alignment and alignment of the search bar
fix yahoosession . run ( ) to start ( ) instead of run ( )
updated the handling of the local metastore client in HiveMetaStore and Hive classes to ensure proper cleanup of the metastore client and
updated the method to retrieve the display script with the DISPLAY locale and added a test for the handling of the DISPLAY locale to ensure correct script retrieval
replaced static imports for BASE _ URL _ PROP and CORE _ NAME _ PROP with direct references to ZkStateReader to improve code
replace ThreadLocalRandom with Random for random number generation to improve performance and reduce dependency on ThreadLocalRandom
added a check for launcher readiness before executing backup methods to ensure that backup operations are performed only when the launcher is ready to avoid errors
replaced string concatenation with string concatenation in IllegalArgumentException messages to improve clarity and readability of error messages
added unit test base on user forum issue
rename methods and variables related to body space to bar space across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
( chore ) camel - core : use temporaryfolder for file message history test
added debug logging configurations to the Grasscutter class to facilitate easier debugging and monitoring of the application
changed the visibility of ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` from instance
added a check for the workspace state in the overview mode and implemented a method to retrieve the current state in the Workspace class to ensure proper behavior
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
added a cache check before notifying the new template in SnippetTemplate . java to ensure that notifications are only sent when caching is enabled for
added a new constant ` SCOPE _ SOLR _ CORE ` to the ` Context ` class and updated related classes to utilize it to
datametadatatest : add test for primary key in measurement table
rename -- permissions - config - path to -- permissions - config - file in pantheoncommand
updated logging statements in HttpSessionContextIntegrationFilter . java for clarity and correct session handling to improve code readability and ensure correct session creation behavior
added a new file TestIfWithDeadRegion . java that implements a method to retrieve a string using a Supplier to facilitate testing
corrected a typo in the file name from EnglishUdLas to EnglishUsdLas and updated the corresponding test to ensure
added HighResolutionTimer management to test concurrent access in SnowflakeIdGeneratorTest to ensure proper handling of high - resolution scenarios during tests
added a staticUi boolean to AppSettings and modified MainFragment to conditionally hide the toast bar based on its value to enhance user experience by
replaced the anonymous Privilege class with a lambda expression in WindowsSecurity . java to improve code readability and ensure local resource is properly
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and added client ID check in ` WhitelistLogout
updated dialog display in MEncoderVideo , NavigationShareTab , and PluginTab to use localized messages instead of hardcoded strings to improve internationalization
tika - 3746 -- add mime type test for poi - ooxml and poi - vnd . openxmlformats - off
updated logging statements to use ` FixJava ` for better clarity and improved type safety to enhance code readability and maintainability by using
camel - 13663 : camel - eip - document - enricher - remove unused constant and update documentation - enricher to use xml
do n ' t wait for migration to complete when the endpoint be remove
added debug logging for audio notification and playback devices to improve traceability and debugging of audio device handling
added WebSocketConfig to manage maximum frame payload size in WebSocket connections to enable configurable WebSocket settings for improved performance and flexibility
added support for multiple test suites in CacheValidationListener by implementing ISuiteListener and TestListenerAdapter to improve performance and efficiency of test execution by
updated content length handling in MoreIndexingFilter to check for non - empty trimmed values before adding to the document to ensure that only non - empty
do n ' t synchronize on solvingjob # terminate ( )
added handling for PathAlreadyExistException during time series creation in MManager . java to improve error handling when attempting to insert non - existent time
added a check method to the Authz class to provide a way to check if a specific condition is met
changed visibility of several methods from public to protected in multiple classes to restrict access to these methods for better encapsulation
bug 10729 : fix the bug of listpublicipaddresses api command
update HttpParser to initialize _ valueString to an empty string instead of null when compliance is not RFC2616 to simplify code and improve readability
refactor ` completeInitialization ` method to use ` internalSetContextClassLoader ` and ` System . initErrEncoding ` and ` System . out
added methods to create and retrieve the external storage directory in ShadowEnvironment and created unit tests for external storage state to enhance functionality and ensure proper state
[ jbrules - 2835 ] add test case for mvel type coercion
updated import statements and adjusted formatting in LoggingConfig . java for consistency to improve code readability and maintainability
added exception message to log message in ActionNode . java to improve debugging by providing more context during exception handling
added logic to strip " tel : " from the ` toNumber ` string if it starts with " tel : " to ensure proper formatting of
refactor visibility logic for shared file icon in FileListListAdapter to improve readability and maintainability of the code
deprecated the HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated its usage in TestTxnCommands3 . java to
refactor ExecuteStatementOperation and Operation classes to use a configuration overlay for session management to improve code clarity and maintainability by centralizing configuration
refactor BTCMarketsStreamingAdapters and BTCMarketsWebSocketSubscriptionService to use standard Java collections instead of Google Commons collections to
fix ogrdatastoretest to compare type name instead of name
removed the method ` onErrorInStep ` from ` StepListenerSupport ` to provide a placeholder implementation for error handling
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 14284 : fixed the camel - netty - http component to use the correct port
replaced System . out . println statements with logging statements in TestNonBlockingAPI . java to improve logging consistency and control over log output
added a boundary check for the row index in the DbConnectionDialog to prevent out - of - bounds access to the connection list
[ net . sourceforge . pmd . rules . methodwithsamenameasenclosingclass ] bug fix : method with same name
added ExtendedPlatformComponent and modified ManagementFactory to utilize it to enhance management capabilities by integrating platform - managed objects
replace single quotes with double quotes in SQL queries to ensure proper handling of single quotes in SQL queries
updated package paths for parsing DTOs in test classes to ensure correct loading of DTOs from the directory structure
refactor TextEscapeUtils for improved formatting to enhance readability and maintainability of the code
added a filter parameter to AbstractSpatialFieldType and modified FilteredQuery instantiation to enhance query filtering flexibility based on local parameters
removed progress display for auto - email notifications in GpsLoggingService and added a post for updating results email sent in AutoEmailHelper to stream
replace ArrayList with HashSet for inlinks and replace get method with iterator in multiple classes to improve performance and ensure proper iteration over inlinks
added synchronization to the stopScan method in TradfriDiscoveryService to ensure that the results are removed when the stopScan method is called
updated testFilterForPartition method to accept a boolean parameter for filtering at the server side to enhance flexibility in testing partition retrieval based on server
added Abandoned status to TicketModel and updated related statuses in TicketBasePage and TicketetsPage to enhance ticket management by incorporating
change default value of columnAliasPrefix from " c " to null across multiple platform classes to ensure consistent behavior when columnAliasPrefix is not set
updated LlapRowRecordReader and LlapRowInputFormat to use BytesWritable instead of Text for data handling to improve performance and memory efficiency
add a non - native jvms detector , log a warning if run on a 32 - bit jvm .
pdfcopy : do n ' t add ` ` b ' ' to the ` ` parent ' ' field if they do n ' t have
added a new option ` DAEMON ` to the ` OptionEnum ` and implemented a daemon mode in ` TerminalClient ` to enable
added a new class ` FlushIndexTask ` to manage index flushing to facilitate the flushing of the index writer in the benchmarking
patch by jbellis ; review by brandonwilliams for cassandra - 1421
added a condition to check for SEASONS output alongside TEXTS _ NOSORT in the MediaLibraryFolder . java file to
added a new file LocalSocketAddress . java to test IPv6 availability of a DatagramSocket to ensure that the local address is correctly bound to
updated grid size points in GridSizeMigrationTask . java to align grid size coordinates with new configuration requirements
replaced calls to ` getName ( ) ` with direct access to ` ci . name ` in ` SerializerPojo . java ` to improve
added read - only context management and modified transaction handling in the Context class to enhance transaction management and prevent operations in read - only contexts
refactor LookAndFeelCommand class for improved readability to enhance maintainability and facilitate future updates
updated calculation of lastRunEnd and modified condition in BlockBoxing . java to improve accuracy of boxing logic by using ceiling instead of
added EOFException handling to the GracefulStopTest to ensure proper exception handling for EOFException scenarios
refactor locking mechanism and streamline HTTP response listener retrieval in NetJavaImpl . java to improve code readability and maintainability by reducing
refactor NetworkParameters class for improved clarity to enhance maintainability and readability of the code
updated account asset optimization setting logic in DynamicPropertiesStore . java to ensure proper account asset optimization is applied based on configuration settings
added a new constant for J9 _ GC _ POLICY _ NOGC in VM . java to manage garbage collection policies for improved performance
added error handling for invalid protocol buffer exceptions in TransactionCapsule . java to improve robustness by throwing a P2pException for invalid contract
pmd : remove unused exceptiontypechecking . java
updated resource retrieval to use English language and improved error logging message formatting to enhance user experience by providing a fallback mechanism for missing localization resources
added a new file ` ProcessorInfo . java ` to provide utility methods to determine available CPU processors to enhance CPU management capabilities and ensure compatibility with
add - html option to generate html output
fix ( logback ) : make logger . config optional
updated HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent classes to improve data handling and encapsulate cluster - related variables to enhance code readability and
updated the configuration for the TagPropagationFinishedSpanHandler in SleuthTagPropagationAutoConfigurationTests and added a new test for it to ensure
refactor rustDepType assignment logic to use a switch statement for different crate types to improve code readability and maintainability by consolid
updated oauth2LoginLinks method to accept a MultiValueMap < String , String > for query parameters to enhance error handling by incorporating
hbase - 26958 avoid npe in halfstorefilereader when seek to the first key
hhh - 6642 - add support for ` ` always ' ' to @ generationtim . when ( )
added unit test for layer normalization with nan in the samediff backend to ensure that the layer normalization function works correctly with different input configurations
refactor file sharing functionality by centralizing file operations in FileOperationsHelper across multiple activities to improve code maintainability and reduce duplication across activities
added a new file ` LiquibaseUpdateMojoExecutionTest . java ` to test the execution of ` LiquibaseUpdate
convert proxy type from lowercase to uppercase in setProxyType method to ensure consistency in proxy type handling
add minecraftforge . getversion ( ) and dungeonlootattempts ( ) to make thing initialize .
refactor JdbcDatabaseSnapshot to introduce tablesOfColumnsFetched and improve column filtering logic to enhance performance and maintainability by reducing redundant database
added a Container to the CSS border in CSSBorderTest . java to enhance the visual appearance of labels in the UI
added a new ` RetryableStatusCodeException ` class and modified the configuration for the ` RetryAutoConfiguration ` and ` RetryInterceptorAutoConfiguration `
update superclass parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout to ensure compatibility with the latest layout requirements
updated the calculation of the parentTaskName to use System . currentTimeMillis instead of nanoTime to ensure accurate task naming by using the current time instead of
added error handling for invalid Add Service requests in ServiceResourceProvider . java to improve robustness by throwing an IllegalArgumentException for invalid input
refactor conditional logic for handling unversioned files in IndexDatabase . java to improve clarity and maintainability of the code
[ giac ] round ( - x [ 0 ] , - x [ 1 ] ) should be round ( - x [ 0 ] ,
refactor AnonCipherWithWantClientAuth class for improved clarity to enhance maintainability and readability of the code
added @ Deprecated annotations to multiple methods in ProducerTemplate . java to indicate that these methods are outdated and should not be used in new code
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
fix flakiness in evictiontest
refactor ` encodeInternal ` method to use ` saltedPass ` instead of ` input ` for improved clarity to enhance code read
replace local variable ` viewTreeObserver ` with direct calls to ` mTaskRecyclerView . getViewTreeObserver ( ) ` to improve code read
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
fix sstablemetadata to use long . max _ value instead of long . min _ value
set the preferred size of the security panel to 200x60dp
added null and empty checks for reply handling in multiple classes to ensure that replies are compressed only if they are not null or not empty to improve
updated the ` toString ` and ` hashCode ` methods in ` HitbtcBalance ` to use ` Objects . equals ` and removed the
fix ( sql ) : fix order by statement in order by
updated return statement to return addrs . toString ( ) instead of a generic string to improve clarity of the return value for better debugging
replaced context aware actions with direct access to the OpenCookie lookup in EditGcodeFile . java to improve code readability and streamline
updated import statements and replaced BasicHttpClientConnectionManager with HttpClientConnectionManager in JsonToGrpcApplicationTests . java to ensure compatibility with the latest
updated energy calculation logic in PipePowerWood . java to ensure energy is accurately set based on available energy to improve accuracy of energy transfer
added a check to delete the temporary output file if it exists to ensure the temporary output file is deleted when it exists
updated the constructor parameter name from " tid " to " id " in BitstampWebSocketTransaction . java and added a new test method in Bit
added time limit checks in ReplayProcessor and ReplaySubject classes and corresponding tests in ReplayProcessorTest and ReplaySubjectTest to ensure
updated expectedCitation string formatting in CitationStyleGeneratorTest . java to improve code consistency and readability
added a new SQL insert statement and modified the way video hdr format is set in MediaTableFiles . java to improve code readability and
g3d : add show _ definition _ for _ equation _ in _ exam feature to allow show definition for equation in exam
fix npe in sipcommbuttonui if the component be n ' t yet initialize
hbase - 16462 set scan cache to 100 when startrow be null ( liang xie )
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes to improve code readability and maintainability
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to provide a debug option for enabling transient task
[ hotfix ] [ runtime ] fix checkstyle violation in execution and executionvertex
added a condition to set density to 3f when scale is 3 to ensure consistent density handling for 3D graphics
rename the ` optional ` field and related methods from ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity
hbase - 25832 regionstatestore . getregionstatus ( ) do n ' t log stacktraces in case of exception
[ hotfix ] [ test ] fix flaky test in testclusterupgradetest
updated warning messages in AsyncHttpConnection and refactored async context handling in AsyncContextTest and SelectChannelAsyncContextTest to improve clarity
added a new parameter ` showArrow ` to the method signature of ` SearchUiManager ` to allow control over the visibility of arrow elements in
added lock mode handling for MVStore in Database . java and removed the test method from TestRowLocks . java to streamline the locking mechanism
skip a test that fail on amd64 for now .
added type checks for Integer , StringValue , and IntValue in Scalars . java to improve handling of different input types for improved functionality
updated error handling for primary key specifications in CreateTableStatement . java to provide clearer feedback on the requirements for primary keys
added conditional logic to set drawable resources based on the device ' s LMP status in multiple classes to enhance UI appearance for devices running L
fix an npe in vmservicemanager . getflutterviews ( ) ( # 4890 )
added methods to create header writers for content type options , caching control , and HTTP strict transport security in HeadersConfigurer . java to streamline
refactor ObjectEnumerableAssert to improve code readability to enhance maintainability and facilitate easier debugging
[ java ] rename smoketest to disablecdptest and add javadocs .
added type attribute to @ aggregateroot to fix test failure
added functionality to handle prebuilt Python rules and module directories in Python - related classes to improve the management and accessibility of prebuilt libraries in
updated the handling of HTTP client authentication in NetServerOptionsConverter and related classes to ensure consistent client authentication behavior across the application
updated REPLDIR and REPLCMDIR paths to use $ { system . name } instead of " / user / hive / " to
refactor task view handling in RecentsView . java to improve clarity and efficiency to enhance code readability and maintainability by redu
add a timeout to the test so it do n ' t fail on slow machine
removed the call to clearAll ( ) in DataTableTopComponent . java to streamline the code by eliminating unnecessary functionality
fix typo in templateflowcontroller variable name
updated the exchange count handling in the OperatorTreeGenerator and added a new test case in the PipelineBuilderTest to ensure the correctness of the
added ClassLoaderHandler to the module - info . java files to enhance class loading capabilities in the application
fix problem that lead to a nullpointerexception in the guiscoredirector . setbestsolution ( ) method
added JsonIgnore annotation to ApplicationSettings . java to exclude certain fields from JSON serialization
changed the condition from checking if throwable is null to checking if throwable is not null to ensure that the code executes only when throwable is not null
refactor null check for queryInfo in QueryTimeManager . java to improve code readability and maintainability
fix auto workbench not show when there be no material
fix an npe in gl200textprotocoldecoder ( # 3778 )
renamed timeColumnName and related fields to incomingTimeColumnName and incomingTimeFieldSpec in AvroRecordToPinotRowGenerator . java to improve
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
work in progress : add support for initializable instance in container .
[ java ] add longtasktimer . sample tag to the context .
changed data types and calculations for SYNC _ DELTA _ RATE and interval handling in AdaptiveFetchSchedule . java to improve precision
add warn log for deprecation of unquoted fragment expression
change the type of ` _ attributes ` from ` HashMap ` to ` ConcurrentHashMap ` in ` SessionData . java ` to ensure thread safety
resolve http : / / issues . apache . org / activemq / browse / amq - 2636 - copy the original message
added constants for main and secondary colors and modified the extractInto method to accept them to enhance color extraction functionality and improve handling of dark text hints
add the data folder to the srcFolderPathList if it ' s accessible to ensure that only accessible subfolders are included in the srcFolderPathList
updated ` OmniNotes ` to return false for debug builds and replaced ` TextUtils . isEmpty ( ) ` with ` StringUtils . isEmpty (
changed the initialization of the sessionRegistry variable from an instance of SessionRegistryImpl to a local variable to improve flexibility by allowing the sessionRegistry
added logging for reconnection completion and error handling in NettyStreamingService to improve debugging and error tracking during reconnection attempts
replaced instances of ` Factory ` with ` Proxy ` and updated assertions to use ` Proxy ` instead of ` Factory ` to ensure compatibility with
replaced ConcurrentLinkedQueue with ConcurrentHashSet for thread storage to improve performance and reduce contention in concurrent thread management
replaced string concatenation with String . join for message formatting in SocketExceptions . java and updated exception message validation in ExceptionText . java to improve
added a check to ensure the view directory is within the repository to prevent errors when the view directory is accessed outside its repository directory
remove drag - and - drop from tab header ( # 7370 )
added use of ` UseCompressedClassPointers ` in multiple test files to ensure compatibility with compressed class pointers in the dump and load process
peer sync : remove check for update log state in active or replaying .
deleted the ConnectionHook . java file to remove unused connection hook implementation to streamline the codebase
removed ` waitForReplicasInSync ` from multiple test classes and added a method to check replica synchronization to improve synchronization handling and clarify test
camel - 16467 : camel - core - xml - dsl - dsl - add support for arrayenum type in rest dsl .
updated ApexLanguageModule to use the current version from the Jorje services instead of a hardcoded 45 string to ensure compatibility with
fix javadoc warning in the java . base module
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread management to improve thread management and ensure consistent execution of aggregation tasks
updated WebSocketAsyncConnection and WebSocketServerFactory to use ByteBufferPool instead of StandardByteBufferPool to improve memory management and performance by utilizing the provided
added scrollToPositionWithOffset calls to rvThumbnails in UploadActivity . java to improve user experience by scrolling to the correct position based on
fix ( sql ) : fix ( sql ) : fix timestamp override in column alias
refactor animation handling in LauncherAnimUtils and add new transition animation methods in LauncherStateTransitionAnimation to improve animation performance and maintainability
added a check to disable the default user agent in HttpClient if the configuration is set to enhance security by preventing unintended user agent settings
added a check for pubsubHubBub before handling the feed in FeedRefreshUpdater . java to ensure feed handling only occurs on supported Pub /
changed the access modifier of the finalize method from public to protected to restrict access to the finalize method for better encapsulation
updated the method name from ` isAnonymousOrLocalClass ` to ` isAnonymousOrLocalOrSyntheticClass ` and modified its logic to
add a web app to make it easy to start the rest server
added a check for null leftTableAlias in CalcitePlanner and implemented a method to retrieve the table alias containing a column in RowResolver to
updated triggerKey method to include a prefix " Trigger " for better clarity to improve readability and maintainability of the code
updated logging levels from info to warn for transaction broadcasts and improved error handling to enhance visibility of transaction broadcasts for better debugging and monitoring
fix basicmaptest fail due to concurrentmodificationexception
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` to ensure
added a new enum ` TlsClientCertPolicy ` and modified ` GitBlitServer ` to use it for client certificate policy handling to
added a debug log statement indicating that a new alert message has been saved to the Kraken Futures stream to improve visibility into the subscription
added HTTP headers support to the ProxyWebSocketHandler to enhance WebSocket handling by allowing customizable WebSocket protocol headers
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to facilitate easier troubleshooting of query
updated the formatting of dimensions and label in HolidayEventFormatter . java to ensure consistent formatting of dimensions for better readability
replaced innerClassFieldMadeFinal test with ignoreInnerClass and introduced a method to ignore innerClass fields to improve test clarity and
refactor UnexpectedJobExecutionException for improved clarity to enhance maintainability and readability of the code
deleted the ` shouldUseOpaqueButtons ` method and simplified the assignment of ` buttonShouldBeOpaque ` in ` AquaLook
updated ` DrillSidewaysQuery ` and ` DrillSidewaysScorer ` to use ` DocsEnum ` instead of ` int
added a new entry for GeoDegeneratePath in the classRegsitry map to enable the usage of GeoDegeneratePath in the
removed the ` preFill ` parameter from various constructors in ` ParticleEffectPool ` , ` FlushablePool ` , and ` ReflectionPool
added logic to update and apply the taskbar state based on the launcher state to ensure the taskbar stashed correctly when not in the launcher
added null check before comparing styles in CascadeDeleteVisitor to prevent potential NullPointerException during style removal
refactor GuiUtil methods for setting maximum and preferred sizes , and modify MarqueeLabel initialization in StatusTab . java to improve
refactor icon assignment logic in FileTreeViewHolder . java for improved readability and maintainability to enhance code clarity and maintainability
updated assertions in ParallelUniverseTest from ` isEqualTo ` to ` contains ` to allow for more flexible validation of qualifiers
added synchronization to the iteration over results in XMLReporter . java to ensure thread safety when accessing shared data structures
add test for native probability function query
added a call to deregister the ShutdownThread in ClientContainer to ensure proper cleanup of resources when the container is terminated
hhh - 13544 - drop temporary table after use in sybase ase15 dialect
simonstewart : do n ' t convert color to rgb in htmlunitdriver
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter to improve code readability to enhance maintainability and facilitate future updates
updated the hexadecimal string format for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve clarity of reserved memory information for
keep track of skipped ad group when release ad
added a suppression warning for UndefinedEquals in MultimapSubject . java to improve code clarity and suppress warnings related to the method ' s
updated the string resource used for fetching the frequency property from ` deg _ text ` to ` unit _ hz ` to ensure accurate representation of
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated the initialization of the TreeMap to initialize with includedLabelSets directly to simplify the code by eliminating an extra method call
[ fix ] [ scene2d ] fixed npe in vlinelighter Flat class
refactor code to use try - with - resources for better resource management and add visibility tags to span tags to enhance code readability and ensure
replaced ` ZoneId . of ( ) ` with ` TimeZone . getTimeZone ( ) ` in ` ScheduledTrigger . java ` to ensure proper
added AsyncBucket and InMemoryExtension classes and updated related classes to use the new AsyncBucket and InMemoryExtension to improve asynchronous handling and support
updated the handling of the classes directory in the resexhausted003 test to check for the existence of the " test . class . path
corrected formatting in AbstractConnector . java for consistency to improve code readability and maintainability
refactor OngoingStubbing class for improved readability to enhance maintainability and clarity of the codebase
refactor web server management by introducing conditional reuse based on the presence of a web server to improve resource management by allowing the reuse of the
updated the variable name from productConstructor to constructor in HttpClientUtil . java and added a static import for SolrHttpClient in SolrTestCaseJ4
log an error if the thread allowlist be not clear
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests ` to ensure the processor uses the correct item writer
dmndtanalyser : do n ' t call findgaps / findOverlaps ( ) when hit policy be collect ( #
[ beam - 8470 ] add test for sliding window combine in pipeline runner
added a conditional check for ` allAppsDirty ` before binding apps and made ` t ` and ` count ` variables final in ` Launcher
removed the assertion for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to simplify the test by eliminating unnecessary checks
updated the logic for identifying and counting the number of beautifulTriplets in the Solution class to enhance the accuracy of the beautifulTriplets
refactor useScreenMenuBar logic to utilize AccessController and LWCToolkit for property retrieval to improve compatibility with macOS and enhance
update glowentity and glowplayer to pass fall distance to setrawlocation ( )
refactor query logic in SimpleJpaRepository to use CriteriaBuilder for filtering results to improve query performance and clarity by using a more efficient
updated BlockUtil to include timestamp , parent hash , nonce , and number from genesisBlockArg to ensure accurate information is passed to the builder for
use safepointinsertionphase instead of loop safepointsafepointinsertionphase .
hbase - 25829 fix the npe in rsgroupinfomanagerimpl . listchildrenandwatchfornewchildren ( )
changed access modifiers of methods in ArtifactResolver from package - private to public to allow broader access to these methods for external use
added thread termination and disposal logic in multiple classes to ensure proper resource management and prevent potential memory leaks
added a check to ensure maxBufferedDocs is at least 1 to enforce valid input constraints to prevent illegal argument exceptions
added state management for login progress in LoginActivity to improve user experience during configuration changes
added null checks for source and value extraction in Pump . java and implemented a reverse test for UUID sorting in PumpTest . java to
updated access modifiers from private to protected for several methods in HttpShardHandlerFactory and LBHttpSolrServer classes to allow subclasses to access and
updated the order in ` BaseAuthenticationServiceSelectionStrategy ` from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE to
added Jetty server configuration to TestJNDI . java to enable handling of context handlers for JNDI interactions
reformatted code for consistency and clarity in SortedDynPartitionOptimizer . java to improve readability and maintainability of the code
changed the return value of the method from checking if the loop is an instance of NioEventLoop to always returning true to ensure that the
updated the logic for setting the number of nulls in StatsUtils to ensure that the new number of nulls does not exceed the existing number of rows
camel - 16400 : camel - jbang - export should not load camel - kamelet from yaml yaml file
replaced OkHttpOAuthConsumer with OpenStreetMap authorization handling in OSMJob . java to enhance security by ensuring users are authenticated before uploading
refactor ptx backend to use compilationresult instead of void
added clientAuth property and its getter / setter in IoTDBRestServiceConfig . java , and modified RestService . java to conditionally set
simplified the injection process in ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSameParentFieldInjection
refactor BloomFilter64bit class to use InitializingBean and modify expectedInserts , hashCount , and hashCount to enhance bean initialization
updated cursor adapter behavior in HomeFragment and added refresh preference in TweetPager to ensure the cursor reflects the current state and refresh the user
updated intermediate header height ratio from 1f to 75f to improve layout responsiveness
replaced ` RuntimeEvent ` with ` RecompilationEvent ` in multiple files and added a new class for handling recompilation events to
added configuration for host system prepments in multiple classes to enable dynamic configuration of host system installation status
added a new parameter ` logEveryUnknownFileFormat ` to the ` include ` method and modified its logic in ` DatabaseChangeLog . java
added a loop to delete leading slash from the location to ensure the location starts with a leading slash
added property handling for entities and scores in StaticPipeline to enable dynamic configuration of entities and scores based on provided properties
refactor file path handling in Frame . java and WhoopsModule . java for improved clarity and functionality to enhance file path management
[ geos - 8246 ] fix nullpointerexception in catalogrepository . getdatastorebyname ( )
refactor assertions in the Assert . java file to improve code readability and maintainability
rename ` MultiLineTests ` to ` MultiLineGridLikeTextTests ` and introduce ` MultiLineJaggedTextTests ` to
camel - 16462 : fix unit test for two consumer on the same topic
replaced ` IMeasurementSchema ` with ` MeasurementSchema ` in ` writeAligned ` and ` writeAlignedWithTablet ` methods to simplify the
updated the loop structure and added memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve
updated logging library reference from " slf4j - log4j12 - . * " to " slf4j - reload4
[ hue - bridge ] fix the occasional test failure on macos
refactor package structure for various activities from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities
added @ Ignore annotation to KieContainerSolverFactoryTest to mark the test as ignored until DROOLS - 1276 is resolved to
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` _ service ` , ` _ topicName ` , and ` _ gitHub
refactor AbstractExpressionPart to improve code readability to enhance maintainability and ease of understanding for future developers
[ hotfix ] [ javadocs ] fix typo in taskslot
[ netty ] replace fire _ exception _ on _ failure listener with close listener .
added error handling for lock release in MoveTask . java to improve robustness by logging exceptions when attempting to release the lock
replaced the use of ` Properties ` with ` ResourceBundle ` for retrieving GEM _ PATH and RUBY _ VERSION to improve resource loading
transaction : use byteutil . empty _ byte _ array instead of a static zero _ address array
refactor initialization of ClassInfo in ClassGraphClassLoader . java for clarity to improve readability and maintainability of the code
[ hotfix ] [ test ] fix jobmanagerstartuptest failure on window
chore : add google : : datastream : : lpha and google : : datastream : : v1a to the list of resource that
added a Bundle instance to the builder in FileDisplayActivity . java to facilitate the handling of additional bundle data during the build process
changed the loop condition from break to continue in ParticleEmitter . java to ensure all particle processing continues instead of terminating
updated expected cluster name expectations from 2 to 1 in AmbariManagementControllerImplTest . java to ensure tests reflect the correct cluster functionality
removed nullable annotation from the SERVICE column in TransientSessionTicketImpl . java and added error handling for NoResultException in JpaTicketRegistry .
updated Bug4823811 . java file to address and resolve bugs related to Bug4823811 functionality
refactor argument addition to use a path relativizer for pattern deletion to improve code readability and maintainability by using a dedicated function
[ decoz ] schedule initial request for discovery service ( # 14829 )
added an attribute field and modified methods in ShibbolethCompatiblePersistentIdGenerator . java to enhance the flexibility and functionality of the ID
removed unnecessary whitespace in RequestValidationService . java to improve code readability and maintainability
refactor keyboard logging to use a Bundle for statistics logging to improve code readability and maintainability by encapsulating message handling
removed redundant lines in FileNodeProcessor . java and added necessary imports in MManagerBasicTest . java and MTreeTest . java to improve
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
add a testslurpfile ( ) to make sure slurpfile ( ) do n ' t throw runtimeioexception
changed access modifier of ` client ` from protected to private and added @ FunctionalInterface annotation to several classes to enhance encapsulation and indicate that
replaced repetitive span retrieval logic with a dedicated method ` spanWithName ` to improve code readability and maintainability by reducing duplication
added support for DateWritable in Hive and related classes to enable date handling functionality in data processing to enhance data processing capabilities for date types in Hive
replaced hardcoded comma in split method with Patterns . COMMA _ SEPARATOR to improve code readability and maintainability by using a defined constant
ggb - 1888 double conversion : use parser to convert input to double
refactor column count comparison logic in SemanticAnalyzer . java to improve clarity and maintainability of column count checks
refactor score update logic in WANDScorer . java to improve clarity and correctness to enhance code reliability and maintainability by
refactor Correspondence class to improve code structure to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to improve code clarity and reduce potential naming conflicts
updated ` curPixVal ` initialization in ` XRSolidSrcPict . java ` and added a new class ` WhiteTextColorTest .
use collection instead of list to avoid duplicate in biome dictionary .
corrected the spelling of " withinTolerance " to " exceedsTolerance " in BoundedLocalCache . java to improve code readability and
updated the test stability annotation in TaplTestsLauncher3 . java to include local and submission flavors to improve test stability tracking
updated package - info . java files in mmm and ppp packages to ensure consistency and clarity in package documentation
added a check for non - empty logFileSuffix before processing to ensure that logFileSuffix is not only non - null but also not empty to avoid
refactor PythonBuckConfig to improve code structure to enhance maintainability and readability of the configuration management
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest and updated ShadowApplicationPackageManager to return an array to enhance
[ meiligao ] fix meiligao alarm ( fix # 348 )
added null check for tile before accessing its properties in PowerDiode . java to prevent potential NullPointerExceptions when tile is null
refactor cache management to use an asynchronous task for trimming cache to improve user experience by providing feedback during cache deletion operations
chore ( deps ) : upgrade dependency from google - api - java to google - common ( # 584 )
replaced return statements with exceptions for unauthorized access in BasicAuthAccessControlFactory and ZkBasicAuthAccessControlFactory to improve error handling for unauthorized
added a new abstract method ` schedulePeriodically ` and modified existing method signatures in ` Scheduler . java ` to improve code clarity and eliminate
replaced ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( ) ` in ` FileDisplayActivity . java `
added logging and exception handling for file matching in StreamUtil . java to improve error handling and provide clearer feedback when multiple files match the specified
refactor create _ table method to use CreateTableRequest instead of EnvironmentContext to simplify table creation logic by eliminating unnecessary environment context
added a volatile boolean flag ` aborted ` and modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker `
added indentation checks in multiple block parser classes to ensure indentation does not exceed a specified threshold to improve parsing efficiency and prevent unnecessary block startings
added network wifi status broadcasting and event handling in the application to enable users to change their network status in the application
simplified the condition for checking if a control frame is not final in the FrameGenerator class to improve clarity and maintainability of the
set the visibility of the collapse handle view in WidgetsBottomSheet to improve user interface by ensuring the handle is visible
added two new classes , Issue475 . java and XSS . java , with test cases for handling HTML and JavaScript parameters to enhance security
added a check to return early if units to scroll are zero to optimize performance by avoiding unnecessary processing when there are no units to scroll
updated conditional check from ` size ( ) > = 1 ` to ` size ( ) ! = 1 ` in ` Manager . java ` to
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes , along with corresponding unit tests for enum handling to
added hashCode method to IPPPrintService and created TestRaceCond class for verifying equality of print services to ensure consistent hash code generation
remove db2i and db2z version field from db2i and db2z dialect
added check for transaction ' s platform fee before verifying connection status to ensure that transactions are only processed when the platform fee is greater than zero
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
add clear data first sub - sample by when buffer be encrypt .
removed the ` public ` access modifier from several class constructors and constructors in several classes to simplify class visibility and improve encapsulation
added import statement for Retrofit class in Part and PartMap classes to enable Retrofit functionalities in the codebase
refactor JsonBuildHelper and ParamsBuildHelper for improved handling of object types and parameters to enhance code readability and maintainability while ensuring
added TYPE _ TASKBAR _ OVERLAY _ PROXY to AbstractFloatingView . java to support taskbar overlay functionality in the floating view dialog
fix : update gapic - generator - java with mock service generation fix ( # 136 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation responsiveness based on
removed the ' true ' parameter from the createRenderScript method call to simplify the script creation process by eliminating unnecessary parameters
fixed typo in javadoc for pmd . java
refactor system bundle check to use a dedicated method in PluginManagerActivator to improve code readability and maintainability by centralizing system bundle
updated import statements and formatting in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
keychaintgrouptest : use constant instead of hardcoded value
replaced ` rocketConfiguration ` with ` defaultConfiguration ` and added selection logic for the default configuration to improve clarity and functionality of the
server : fix npe in findattache ( ) in agentmanagerimpl
fix npe in defaultrecordstore when value be null
cloudstack - 3549 : do n ' t return null in case of agent setup failure
updated error messages in ParamAction . java to use dynamic attribute names to improve clarity and maintainability of error messages
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept an Object instead of InvocationContainerImpl to
added method to strip method parameters from the method name in LocationOpener . java to improve the handling of method names by removing unnecessary parameters
updated version name and code for the GreatVoyage application to reflect the latest changes and improvements in versioning
fix output filter to allow command in a set instead of a list
[ geot - 7294 ] symbolmblayer should use label key instead of hardcoded string
ggb - 1342 fix : center and resiz popup after drag ( )
updated error messages to replace " Table : " with " Table - " and " Module : " to ensure consistency and clarity in error messages
added a new listener class ` StartingWindowListener ` and updated its usage in ` QuickstepTransitionManager ` to improve code organization and encapsulate
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to enhance code documentation for better clarity and maintainability
updated exception handling in CheckPackageAccess . java to specify " PackageAccess . impl " and " PackageDefinition . impl " to improve clarity
increased the timeout from 30 seconds to 90 seconds and added an assertion to ensure the test does not hang indefinitely
changed the loggingEnabled variable from a boolean to a Boolean in XRLog . java and added a null check for it to ensure logging is
added @ JsonIgnore ( true ) annotation to the Schema class to prevent serialization of sensitive fields during JSON processing
increased the test timeout from 5000 ms to 10000 ms in TestNonTxIndexBuilder . java to allow more time for tests to complete
refactor train method in SimpleNaiveBayesClassifier for improved clarity and consistency to enhance code readability and maintainability by
refactor CheckHelperModule to CheckHelperControllerModule and add CheckHelperAuditModule to enhance audit capabilities and improve module initialization
rename mmm Prototype and ppp Prototype files to improve clarity and maintain consistency in naming conventions
added a check to retrieve the table ' s transactional status from the Hive metastore to ensure that the table ' s transactional status is correctly
[ java ] move recordingwriter . writefragment ( buffer , header ) to onblock instead of onfirstwrite ( ) .
fix non - negative timeus value for cuesubtitle .
make kairos datastore test work with alias
updated currency pairs in VaultOfSatoshiBaseService to use " USD " instead of hardcoded values for trading pairs to enhance
hhh - 13594 close the entitymanagerfactory on test failure
updated KafkaSender import from Kafka11 to Kafka in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to ensure compatibility with the latest
added new files GwtBinaryIntegrationTest . java and A . java to implement integration tests for Gwt binary to ensure the build process correctly
updated loading cause label visibility logic in BrowserContentPane and modified ResultSetRenderer initialization in SQLConsole to improve user experience by preventing unnecessary loading causes
updated random value retrieval logic in EnhancedRandomImpl . java and improved test cases in EnhancedRandomImplTest . java to enhance random
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to enhance XML security property management for improved configuration
added new interfaces and classes with default methods in InlineDefaultMethod . java to implement and test default method functionality in Java
replace LIKE with GLOB for string matching in SqliteFieldPredicateView . java to improve performance by avoiding unnecessary string matching
( chore ) camel - dmn : make method protect
fixed - script _ load command should be execute on slave node instead of on slave node
do n ' t call field . setword / field . setword / array . array _ base _ offset in espresso .
replaced debug log statements with verbose log statements across multiple Java files to improve logging granularity and provide more detailed information during project generation
correctly retain and release the fmlproxy packet in the dispatch process .
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS in ExecConstants and updated WebServer to use this constant to improve
refactor shortcut management by replacing the ` idsToShortcuts ` map with a ` removedShortcutInfos ` list and adding a check for empty
remove unnecessary type check before convert to string in defaulthttpclientbinderregistry
removed the case for ` android . R . id . home ` in ` DetailFragment . java ` to streamline the navigation process in the
added a condition to check if the Android market is present before including play services to ensure that play services are only included when the market is present
refactor cell parsing logic in TableBlockParser and add a new test for handling out - of - whitespace cells in TablesTest to improve code
added support for a bridging header in the NewNativeTargetProjectMutator and related classes to enhance project configuration flexibility by allowing users to
replaced the usage of ` Path ` with a ` Set < JavaType . Method > ` and modified method handling in ` PotentiallyDead
added support for diamond redundant argument detection in type inference to enhance type inference capabilities for better error handling
replaced calls to ` startSend ( ) ` in ` HighwayClientFilter ` , ` RestClientSender ` , and ` RestClient
removed import of Utils and logging statement from SolrCacheHolder . java to clean up the code and improve logging clarity
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error management by rethrowing the original exception
updated the condition in the Test6796786 class to compare two floating - point values instead of a static float to ensure accurate comparison of
added " logback . dev . xml " to the list of file paths in JoobyMojo . java and Main . java
added a new class JaasEventCheck to handle Jaas authentication events to enable monitoring of authentication success and failure events in the application
refactor QuickstepTransitionManager to use a list of views to animate instead of individual views to improve code readability and maintainability by consolid
updated string comparison logic in ConjunctionSolrSpellChecker and added unit tests for it to ensure that the spell checker correctly handles non - identical
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to align with
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : allow hardcoded script timeout to be specify in the config ( # 4569 )
updated JDBC _ TABLE and JDBC _ SCHEMA parameters in AbstractJDBCConnectorProvider . java to improve clarity and consistency in table naming
corrected the spelling of " sqlUpdate " in multiple files to ensure consistency and accuracy in the SQL update statement
refactor schemaTypeCache to use a more concise computeIfAbsent method to improve code readability and performance by leveraging built - in
updated header handling logic in StaticServerHttpHeadersWriter to check for duplicate headers to ensure headers do not overwrite existing headers when writing with different cas
added JUnit @ Ignore annotation to LatticeDemo . java to temporarily disable tests that relies on files only within CMU
added a call to create a storage directory in TestCollector . java to ensure the storage directory exists before running tests
added chunked streaming mode configuration to StarTreeJobUtils to optimize data transfer efficiency during streaming
jsonschema : add basicsyntaxchecker , multiplesyntaxcheckertest , singletypesyntaxcheckertest , and basictypesyntaxcheckert
hbase - 27035 upgrade protobuf to hbase 1.1 . 2 ( addendum )
added a new ` Node ` class and a test method in ` BeanPopulatorTest ` to ensure that bean structures do not cause stack overflow
modified the ` getRemoteName ` method to throw an ` IOException ` to ensure proper error handling when accessing the remote name
added handling for IllegalArgumentException in UserAccountManagerImpl and replaced OwnCloudClient with HttpClient in ClientFactory and ConnectivityServiceImpl to improve error
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enable the use of AspectJ mode with protect - pointcut definitions
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by controlling endpoint identification
added a new method ` remove ( int index ) ` to the ` OHLCSeries ` class and created a corresponding test in ` OHLC
replaced invocation method from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) . joinInternal ( )
updated joint destruction logic to properly destroy and remove joints to ensure proper resource management and prevent memory leaks
fix npe in searchfilter when no filter
[ hotfix ] [ test ] move sourcereaderbasetest to testutils package
added multiple null checks for document and folder in DocumentsStorageProvider . java to ensure proper handling of missing documents and improve error reporting
added two new files , HookDefinition . java and JavaHookDefinition . java , implementing a hook to provide a mechanism for registering before and after
refactor flushIfDeadlockRisk logic into a new method named flushIfDeadlockRisk to improve code readability and maintainability
updated setExoOptions method to accept a boolean parameter for allowTs and modified videoDirectPlayProfile container setting to enhance flexibility in managing
remove user and role from identifier collection in DMRDecoderState . java to ensure proper handling of user roles during decoding
added an INVISIBLE constant and improved the toString method in Color . java , and refactored imports in RailButtonShapes . java
updated null handling logic in CountAggregationFunction and added tests for COUNT ( * ) and COUNT ( * ) options in NullHandlingIntegrationTest to
initialize the ` deep ` variable to - 1 in ` InternalTransaction . java ` to ensure a default value of ` - 1 ` is set
escape the name in the buffer to prevent XML injection vulnerabilities
updated file directory initialization to use a configurable work directory instead of a hardcoded default to improve flexibility and allow for customization of the work
add support for ` ` deprecation ' ' attribute on rule element ( # 3441 )
make amd64directcallop use codebuffer . position ( ) instead of label .
refactor TimeRange to use constants MIN _ TIME and MAX _ TIME instead of instance variables to improve code readability and maintainability by central
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future updates
refactor code to extract JSON emissions into a separate method and handle SSL connections to improve code readability and maintainability by reducing
updated attachment handling logic in DetailFragment and introduced a new gallery activity in GalleryActivity to improve code clarity and functionality for handling video and image
fixed npe in tank when there be no fluid
updated CsharpLibrary . java to handle both Csharp and PrebuiltDotnet libraries using RuleAnalysisLegacyBuildRuleView to improve
handle iq . type . get send to the pep server . jm - 118
intrinsificationphase : do n ' t create a graph if there be no runtime
added a condition to check if the active state is not empty before calling refreshActiveWork in MetricTrackingWindmillServerStub and updated
pdfbox - 4892 : do n ' t increment tempoffset if there be an eof marker , a suggest by valerybok
added constructors to LwjglApplet for managing the canvas and configuration to improve the application ' s notification handling and ensure the application is properly
simplified the string representation of Docker configuration in EnvironmentAndSystemPropertyClientProviderStrategy . java to improve readability and maintainability of the
refactor LDAP authentication handling to streamline password policy application logic to improve code maintainability and readability by consolidating authentication logic
refactor Int2ObjectCache class for improved performance to optimize cache retrieval performance and reduce memory usage
added a private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated its usage in ` LdapUtils ` to enable
refactor Readable class to improve readability to enhance maintainability and ease of understanding for future developers
updated JsoupNonVisualRegressionTest to use TestSupport . WITH _ FONT for PDF document processing to simplify the test by removing unnecessary
updated the icon for the share menu item in CaptureActivity . java to improve clarity and consistency in the user interface
updated Java version detection logic in Constants . java to accommodate different Java versions to ensure compatibility with Java versions starting from 1.9 or
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 136 for jdbc
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filteredSet in Enclosed . java to improve performance and memory usage by using a more suitable data structure
added multiple @ Override annotations to CentralAuthenticationServiceImpl , ImmutableAuthentication , and AbstractCasProtocolValidationSpecification classes to ensure proper method overriding
added new import statements for png , jpg , and gif in ChartProvider . java to improve code readability and maintainability
use file . getparent ( ) instead of file . getpath ( ) for work directory preference
simplified the return statement in JavacParser . java and added a new class ExtraSemiTest . java for testing Java source
added support for querying users by their creation time in JPA queries to enhance user querying capabilities by allowing users to find users based on their creation
updated Test15FloatJNIArgs . java file to improve code clarity and maintainability
updated import statements and formatted version strings in mmm plugin . java and ppp plugin . java to improve code readability and maintainability by
nifi - 1181 : fix off - by - one error in mockprocesscontext . decrypt ( )
[ java ] add ensurenotreentrant ( ) call during archive callback .
refactor dependency merging logic to check for null before merging to improve robustness by avoiding potential null pointer exceptions
added ` timeout = 10000 ` to the ` @ Test ` annotation in ` SslBytesServerTest ` to prevent test timeouts during execution
peer : fix typo in peer . connect ( ) javadoc .
updated methods in RealtimeIndexingCoordinator , RealtimeSegment , StreamProvider , and StreamProviderConfig to use an interface instead of a class to
replace direct call to ` viewCaptureDataSupplier . get ( ) . writeTo ( out ) ` with a null check for ` exportedData `
refactor scrolling logic in RecyclerViewFastScroller to use a dedicated method for calculating the scroll thumb radius to improve code readability and maintain
updated the command to restart IntelliJ and modified import statements in BuckWSServerPortUtils . java and BuckEventsConsumer .
added a conditional check for Windows platform in the JCheckBox initialization to ensure proper functionality on Windows platforms
updated imports from javax . servlet to jakarta . servlet in HttpConfigurationAuthorityOverrideTest . java to align with the latest Jak
added handling for vertical bar layout in QuickstepAppTransitionManagerImpl to ensure correct window sizing based on device profile to improve layout respons
added full - screen exclusive mode handling to XWindow and XWindowPeer classes to improve user experience by enabling or disabling full - screen
[ net . pms . util ] fix parse played duration string with length > 8
added methods to manage credentials for MapWork and ReduceWork in DagUtils . java to enhance security and functionality by ensuring credentials are correctly marked
( chore ) camel - core : use entry set instead of keyset
trim whitespace from the last name in Thread . currentThread ( ) to ensure consistent thread naming by removing leading and trailing whitespace
updated error message from " Not yet " to " Not yet " in GpsMainActivity . java to clarify that the description is
refactor Job class to improve code structure to enhance maintainability and readability of the code
added a new abstract class ` Unused ` with methods related to integer , boolean , string , and double fields to enable testing of the `
updated key from " hbase _ master _ host " to " hbase _ master _ hosts " in multiple Java files to ensure consistency in
deleted the EventReaderDeserializer and EventWriterSerializer interfaces to remove unused classes to streamline the codebase
changed the return type of the performJoin method from GenericRecord to List < GenericRecord > and updated related methods to handle multiple output records to
updated MAX _ DELEGATE _ LOCK _ PERIOD validation and adjusted related logic in ProposalUtil . java , CommonParameter . java , and
server : fix nullpointerexception when network rate be 0
removed initialization of services and updated the applySpecification method in CmcExchange to streamline the constructor and ensure proper service initialization
updated the configuration retrieval logic in GossipLocalNode . java and changed constant names from " config . json " to " config . conf " to
set default value of ` hazelcast . client . tpc . enabled ` to ` false ` via system property ` hazelcast . client .
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple application classes to ensure compatibility with the
refactor division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverse to improve clarity and functionality of mod
modified the handling of the ` key ` variable in ` NamedObjectList ` to ensure it defaults to an empty string when the ` name ` is
updated method names from ` cleanupEmptyDir ` to ` cleanupEmptyTableDir ` across multiple files to improve clarity by accurately representing the
refactor AsyncCache and Cache classes for improved organization to enhance code readability and maintainability
added import for RCFileInputFormat and registered it in SerializationUtilities . java to enable support for RCFile input format in serialization processes
added methods to retrieve Java type and category information for a given column in TypeMapperComponent to enhance type handling capabilities for columns in the application
added error handling for invalid host headers in Request . java and created a test for it in RequestTest . java to improve robustness and ensure
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` instead of ` TimeZoneFinder ` to improve compatibility
implement addOutgoingValues and forEachOutgoingValue methods in StandardOp . java to enhance functionality for managing outgoing values in the operation
changed access modifiers of directory variables in SegmentCoreReaders and SegmentReader to private to enhance encapsulation and improve code readability
do n ' t query the main _ thread _ profile _ capped _ id table if it do n ' t exist
add a validation check for annotation definitions in non - required rules to ensure that annotation definitions are not allowed in Buck rules with required _ for
updated constant names from " greekLowerCase " , " irishLowerCase " , " UAX29UrlEmail " , and " t
pdfbox - 4071 : fix typo find by codespell on fossies . org
replace old lucenesearchrequestprocessor with discoverysearchrequestprocessor since dspace 4.0
added a list of date and time identifiers to the BasicDateTime class to ensure accurate representation of date and time in the application
updated SurfaceSyncGroup instantiation to include a name parameter to provide a clearer context for the TaskBarController
updated delete method to directly use getId ( ) instead of getObjectId ( ) and modified assertions in GridFsTemplate and GridFsIntegrationTests to
added tests for retrieving total size and bytesSoFar in ShadowDownloadManager and implemented corresponding methods in ShadowDownloadManager to enhance testing coverage for download manager
modified the logic for inserting text in the TextField class to handle both ENTER _ DESKTOP and ENTER _ ANDROID characters correctly to improve
added a null check before proceeding with comparison in GroupNodeViewModel to prevent unnecessary processing when the target object is the same as the current
refactored the ` afterSetStatements ` method in ` Lower ` and ` BlockLexicalContext ` classes to improve handling of terminal state
added hashCode method to IntervalXYDelegate and updated equality checks in XYSeriesCollection to ensure consistent hashing behavior for instances of IntervalXYDelegate and XY
add cleanup to clientqueuereadisruptiontest to ensure all thread be clean up
updated formatting in CloudWatchAppender . java and renamed test methods in RegisteredServiceScriptedAttributeFilterTests . java to improve code readability and maintain
updated method name from ` GsonBuilder . serializeSpecialDoubleValues ( ) ` to ` GsonBuilder . serializeSpecialFloatingPointValues ( ) `
added calls to ` PublicMethed . waitProduceNextBlock ` in ` HttpTestZenToken002 ` and ` WalletTestZ
added checks for non - empty language tags and improved language tag handling in Locale and LanguageEnhanceTest classes to ensure proper language tag normalization
add kvm . ssh . to . agent configuration to control whether or not the management server can SSH into KVM Agents
removed public access modifier from ScheduledAction and related constructors in SchedulerWhen . java to enhance encapsulation and improve code readability
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to ensure compatibility with the latest astuetz library version
added a condition to check if the string does not contain a dash to ensure that the filter does not contain a dash to avoid potential issues with
updated sorting column label text from " natural order " to " Natural column order " and refactored DataBrowser and Desktop to
replaced the call to ` Arrays . copyOf ( in , 6 ) ` with a call to ` Arrays . copyOf ( in , 6 )
replaced ` write ( remoteAddr ) ` with ` write ( htmlEncodeButNotSpace ( remoteAddr ) ) ` in ` HtmlSessionInformations
fix itemstatetriggerhandler . contains ( ) to check for ` ` smarthome / items / ' ' instead of ` ` / '
no need to synchronize on formatcache in fasthttpdateformat .
refactor file moving logic to use a parallel executor service using a fixed thread pool to improve performance by allowing concurrent execution of move operations
added a new ` trigger ` method to the ` WrapTimer ` class with a specified period to enhance timer functionality by allowing customizable time period
added support for LOCAL _ DATE and LOCAL _ TIME types in TypeStringUtils to enhance type type handling for various date and time types
added a verbose option to the error logging in AbstractStatusReporter to provide more detailed error information during execution
fix for issue 533 : unbundled and undo / redo button do n ' t disappear when the menu be open .
s2s vpn : do n ' t allow s2s vpn connection to be esitished between the same account and the same domain
removed error handling for exceptions in CursorReadingTask and added a new test for error handling in CursorReadingTaskUnitTests to simplify error handling logic
pdfbox - 2576 : do n ' t attempt to create thumbnail / text for encrypted pdfs
[ 3.0 ] fix the issue of zk service not be shutdown ( # 10355 )
refactor AnomalyDetectionResource and AnomalyDetectionResourceTest classes to improve code readability and maintainability
replaced ` getSelectedItemId ( ) ` with ` id ` and updated the deleteItem method to use ` getContentResolver ( ) . delete `
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
updated the method signature of ` replaceOrderBulk ` and changed its return type from a collection to a list of ` ReplaceOrderCommand ` to
refactor the ` enterDefault ` method to ` enterIdentNode ` and implement the ` enterFunctionNode ` method in ` Lower ` to
added a new utility class ` J9ConstantHelper ` for retrieving long values and updated ` ObjectHash ` to utilize it to improve code
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification behavior in a multi - threaded environment
of - 2692 : send removal of roster from transport session when a roster be offline
replaced calls to ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a
updated method call formatting in CodeGenerator . java and FunctionObjectCreator . java to improve code readability and consistency
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerExceptions when extTypeCustomDesers is
remove system . setProperty ( " mockserver . logLevel " , " WARN " ) from Main . java to reduce log verbosity during testing
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and reduce unnecessary dependencies
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline the code
updated scoreMap to include contentID as a key and modified scoreMap retrieval to use termScoreMap instead of scoreMap to improve clarity
updated conditional checks in U64 . java to use negative values and added a new eq method to improve error handling for negative parameter values
removed headline style from MainViewModel . java to improve the visual appearance of the main view
updated notifyChange method to include support for dark text in WallpaperColorInfo . java to ensure notifications are triggered correctly based on the support
[ hotfix ] [ checkpointing ] fix checkstyle violation in checkpointrequestdecider
updated the maximum pool size and keep alive time constants in the Parallel class to improve thread management and optimize resource usage
replaced the filtering method from ` filter ` to ` anyMatch ` in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java `
added support for non - Windows ServerCore tests in OpenCVImageFactoryTest . java to ensure compatibility with Windows ServerCore containers
fix for http : / / issues . apache . org / activemq / browse / amq - 2636 - set prefetch for
fix ` ` java . lang . classcastexception : java . lang . classcastexception : java . lang . classcastexception :
added a @ Repeatable annotation with a Issues interface in Issue . java to allow multiple Issues to be associated with a specific type and
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified test
updated socket connection logic to use a dynamic proxy host if available to improve flexibility in socket configuration based on system properties
[ hotfix ] [ javadoc ] fix typo in slotstatus
removed unused import of ClassUtils from ReflectionUtils . java to clean up the code and improve readability
replaced instances of ` HashSet ` with ` LinkedHashSet ` for ` _ excludeProtocols ` , ` _ excludeCipherSuites ` , and ` selected
added a static resource variable to cache the system resource to improve resource management by avoiding repeated calls to the system resource
added a constant for the extra size of the plaintext segment in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to
added a test to verify that invalid fallback routes throw an IllegalArgumentException to ensure proper error handling for invalid fallback URIs in the circuit breaker
added SSL support to the HttpClient configuration in AppPage . java to enhance security by allowing hostname verification during HTTP requests
replaced resetBytesReadCounter ( ) with setSizeLimit ( 0x7FFFFFFF ) in PerformanceTest . java to optimize memory usage
moved the ` preferAES ` property and its getter / setter methods from the ` ProtectionPolicy ` class to the ` StandardProtectionPolicy
( chore ) camel - opentelemetry : use log instead of system . out
remove unstable test from elbintegrationtest . testloadbalancerinstanceoperations
changed method name from setAlarm to setRingtone in AlarmReceiver . java to improve clarity by indicating the method ' s purpose
added error handling for file creation in DiacriticTest . java to ensure robustness by logging an error message when locale or file system
hhh - 13564 - fix timeout in ojdbc6 when use oracle 11
enhanced error handling by checking for the existence of the Atlas image file before reading it to improve robustness by providing clearer error messages when
added locking mechanisms to manage cluster state changes in AmbariManagementControllerImpl . java to ensure thread safety during concurrent access to shared resources
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that the result set does not close a closed statement to ensure that the result set does not close the underlying statement
do n ' t call mark ( ) on an inputstream if the buffer be large than the file
added logic to remove pre - deleted databases from the schema map in ClusterSchemaManager to ensure that only relevant databases are removed from the schema map
modified the handling of the " chunkedWriter " in Http1xUpgradeToH2CHandler . java to ensure proper processing of chunked data
updated item deletion logic in EnhancedBrowseFragment and added a delete item confirmation in FullDetailsFragment to improve user experience by confirming item deletion
added a new interface ` RuleBank ` and modified ` RuleFinder ` to use it to streamline rule matching and improve code organization
handle potential exceptions during initialization and finalization in JcaTlsCrypto . java to improve error handling and prevent application crashes
added new files TestMonomorphicObjectCall . java and Object . java to implement and test monomorphic object calls and finalization processes
replaced the method ` removeMetaDataSource ( session session ) ` with ` toFront ( ) ` in ` DataBrowser . java ` and
hbase - 26467 scanquerymatcher should use the same time range for different column family ( addendum )
[ hotfix ] [ runtime ] rename local - state directory to local - state - directories
modified the ` AlterTimeSeriesStatement ` constructor to accept a boolean parameter for the ` isAlterView ` variable and updated its usage throughout
simonstewart : fix matchtext to display human - readable name
added error handling when retrieving the routing table builder in HelixBrokerStarter . java to improve robustness by preventing application crashes due
replaced ` putAll ` method with ` putIfAbsent ` for ` body ` in ` HttpClientIntroductionAdvice . java ` to ensure
http : / / issues . apache . org / jira / browse / amq - 3833 - use char [ ] for jms password
bug 7035 : list domain in search api - allow search by domain name in recursive mode
refactor equals and isUniformDistribution methods in Counters and CountersTest classes to simplify comparison logic and improve code readability
changed the parameter name from ' status ' to ' original ' in the initialize method of BasicTumbleStepper to improve clarity of
sulong : fix race condition in llvmamd64syscallclockgettimenode . getcurrenttimemillis .
refactor variable handling in PrettyPrinter to use a local variable for clarity to improve readability and maintainability of the code by reducing
added a null check before creating nodes in LRUDictionary to avoid unnecessary object creation and improve memory management
refactor DatagramSocket and DatagramChannelImpl to improve filtering logic and streamline data reading to enhance code clarity and ensure proper handling
nifi - 9107 converted remain nifi - enrich - bundle test from junit 4 to
added a new file ` NutchServerInfo . java ` with class properties and methods for managing server information to provide a structured way to
replaced ` OffsetAttribute ` and ` PositionLengthAttribute ` with ` AttributeSource ` in ` EdgeNGramTokenFilter . java ` to
add ' using timestamp ' option to cql and thrift inserter
updated DSAParameterGenerator to handle unexpected strength values and replaced hardcoded ONE values with BigInteger . ONE to improve parameter validation and ensure correct value
updated Numbers class to use new methods for bit manipulation and refactored float and double handling to improve performance and readability by utilizing
updated the mask comparison logic in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for
added handling for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to improve error handling for specific SQL exceptions related to constraint violations
( chore ) camel - kafka : fix checkstyle issue
added a new method ` addTab ` and refactored tab creation methods in ` Tabs . java ` to improve tab management functionality and
replaced instances of ` toArray ( new Object [ 0 ] ) ` with ` toArray ( new Object [ 0 ] ) ` in multiple Java
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment and mockenvironmentbuilder
refactor conditional return statements in MavenVisitor . java for clarity to improve readability and maintainability of the code
updated mock identifiers from " MOCK _ APP _ SECRET2 " , " MOCK _ APP _ NAME2 " , " MOCK
added a new file FormatCheckingTest . java that tests class name formatting to ensure proper error handling for illegal class names in the Java process
updated line number assignment in CodeGenerator . java to improve clarity by directly using the line number instead of retrieving it from the statement object
added a try - catch block around the result addition in ConfigHelper . java to handle potential exceptions during configuration retrieval
added two overloaded createToggle methods for RadioButton in RadioButton . java to enhance the flexibility and usability of the RadioButton class
updated LRUCache initialization to include cacheSize and increased CHUNK _ METADATA _ CACHE _ SIZE from 100 , 000 to 10 , 000 to improve
in progress - issue int - 663 : add support for ' capacity ' attribute on channel
fix npe in osgimanagementnamestrategy when symbolicname be null
added support for load mode from system property -- external
added error handling for adding and removing the shutdown hook in IOManager and improved logging in YARNSessionFIFOITCase to enhance robust
updated ` RobolectricTestRunner ` to use ` androidManifest . xml ` instead of ` projectRoot ` to improve clarity and specific
updated header propagation logic in AbstractMessageProducingHandler and added a test for non - existent headers in AbstractReplyProducingMessageHandlerTests to
updated comparison logic in CompareMode . java to improve performance and accuracy of comparison operations
added ` HasTests ` interface to ` Arg ` and implemented it in ` RustBinaryDescription ` and ` RustLibraryDescription ` to
updated drawable resource names for placeholder and error in FileMessageVH . java to improve clarity and consistency in icon naming
refactor OnExitTest class for improved clarity to enhance code maintainability and readability
added onUserPreferenceChanged method to recreate the taskbar when user preference changes
added support for dynamically dumping the heap in both Ibm and non - Ibm VM environments to improve flexibility and performance of heap dump
camel - mybatis : fix session leak in camel - mybatis
simonstewart : implement the ` ` wdswitchtowindow ' ' and ` ` wdquit ' ' method in the ie driver
updated the TriggerPattern annotations and variable declarations in IteratorToFor . java to ensure compatibility with Java 5 and improve type safety
set application state to unavailable even if this application will be discard immediately
updated position and limit checks in ByteBuffer and StringCharBuffer classes to improve clarity and correctness of position and limit calculations
updated the method call from ` toUri ( ) . toString ( ) ` to ` toString ( ) ` in ` ConditionalResolverMergeFiles .
refactor setEmpty method implementations across multiple array data classes to ensure proper array handling and avoid potential index out - of - bounds errors
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
added a new Document instance and updated the assertion in TestMultiPhraseQuery . java to improve document handling and ensure the test accurately verifies the
fix : do n ' t assign pending ticket for offline payment
added a thread reference for onTimeout in HttpChannelState . java to ensure proper handling of onTimeout events and prevent illegal state exceptions during listener
updated logging statements to include detailed messages and debug level in multiple test classes to improve debugging capabilities and provide more informative log messages
updated package - info . java files in mmm and ppp packages to ensure consistency and clarity in package documentation
updated read method to conditionally use ConsistencyLevel based on local SERIAL consistency level to ensure data consistency across different serialization levels
added support for the " Home " model in the HeosDiscoveryParticipant and modified the handling of the serial number in the HeosPlayerHandler
added a new ` Wait ` class and modified ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` classes to support
updated Neo4j to utilize AttributeController for managing node and edge attributes to improve attribute management and ensure correct labeling of nodes and
added a null check for serverName in SessionManager . java to ensure robustness by preventing potential NullPointerExceptions
nifi - 1342 : move rocksdb - related class to nifi - controller - repository
updated the method to retrieve the " IS _ GRANTABLE " string from results to ensure correct retrieval of the " IS _ GRANTABLE
added logging statement and modified URL validation logic in JavascriptContext . java to improve debugging visibility and ensure proper handling of JavaScript URLs
( chore ) camel - cxf : skip cxfmtom test on macos
added a check for a new column descriptor before modifying it in LoadTestTool . java to ensure proper handling of column modifications based on the existence
added the Disposable interface to the Texture class to implement the Disposable interface for better resource management
updated WebappRegistrationHelper and FragmentActivator to use WebBundleDeployerHelper and modified OSGiAppProvider to set extractWars
feat ( goquorum ) : check goquorum privacy when use goquorum
replace IOException with Throwable in HttpInput . java to improve error handling by providing a more general Throwable instead of IOException
added a condition to skip Thailand for the JP country in the LocaleTest . java file to prevent issues related to the JP
updated response type references from ` Wrapper . class ` to ` HostResponse . HostResponseWrapper . class ` across multiple services to ensure consistency in
added a check for the boost in the FilteredQuery class and modified the hashCode calculation to include the boost value to ensure accurate query equality and
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
fix for # 3776 , use scrollpanel instead of listbox in texteditadvancedpanel
added a new file ` TestCMSClassUnloadingDisabledHWM . java ` to test CMS class unloading behavior based on metaspace size
added a check for empty entities before creating ItemTossEvent to avoid potential NullPointerExceptions when accessing the first entity
renamed ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and updated related references to improve clarity and consistency
patch by jbellis ; review by brandonwilliams for cassandra - 1422
added null check for the ' type ' attribute in MiniAapt . java and created a corresponding test in MiniAaptTest . java to
added support for the SPEL operator in the OperatorEnum and created a new SpELJudge class to enhance the functionality of the Operator
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in localexecutionplanner
bugfix # 208244 , use java . awt . eventqueue instead of sun . swing . service
updated imports in ConscryptTest . java to use Assert . assertEquals to improve test clarity and maintainability
added logging for attribute name resolution failures in ` AttributeResolution9 . java ` and corrected the type of ` start _ offset ` and ` length
updated the source and target options in SetupHid . java from " 1.5 " to " 6 " to ensure compatibility with the latest
[ calcite - 1882 ] pushprojectintotablesourcescanrule now support metadata - only projection
updated AboutActivity to sort localized names using canonical names to ensure consistent sorting of localized names for better user experience
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming before posting a delayed action to ensure that refresh behavior is only triggered when live streaming is not active
added the exception parameter to the MappingException constructor in AuditConfiguration . java to improve error handling by providing the cause of the exception
( chore ) camel - core : fix flaky test in camel - core
updated generic type parameters in AbstractType instantiation to use wildcard generics to improve type safety and flexibility in handling generic types
added support for checking transport support in GitClientApplication and updated RepositoryUrlPanel to utilize this method to enhance the application ' s ability to
added detailed logging for long press navigation handling in multiple input consumer classes to enhance debugging capabilities and provide clearer context for different input consumers
added null check for mavenMetadata and updated filtering logic to handle cases where mavenMetadata may be null to improve robustness and prevent potential NullPointerExceptions
8268294 : [ testbug ] testlargepageuseforheap fail with ` ` java . lang . runtimeexception :
do n ' t run event migration if db do n ' t exist
http : / / issues . apache . org / activemq / browse / amq - 2379 - make test work on window
added a new test class ` TestObjectStreamClass ` for testing serialization and deserialization to demonstrate the behavior of ` ObjectStreamClass
removed redundant checks for ` target . getDataCenterInfo ( ) ` in ` ZoneAwareDiscoveryFilter . java ` to simplify the conditional logic for
changed logging level from error to warn in OpenTracingTracer . java to provide a less severe warning level for tracing data capture failures
added a toString ( ) method to the Generator class to provide a clearer string representation of the generator collection
refactor URI handling to improve clarity and correctness in quoting URIs to enhance code readability and ensure proper handling of different URI formats
added error handling for non - existent resources in ClusterControllerImpl to provide clearer feedback when a requested resource does not exist
refactor response handling in AccepttoApiUtils to improve error handling and logging to enhance robustness and clarity of API response extraction process
removed unnecessary ByteBuffer allocation for Android versions below 5 in VertexBufferObject . java to simplify code and ensure compatibility with older Android versions
refactor SybaseASADatabase class for improved readability to enhance maintainability and clarity of the codebase
mondrian : backward compatibility of hashjoininfo ( add support for force projection )
added a new method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` sd ` variable for
added FLAG _ ONE _ SHOT , MUTABLE , and IMMUTABLE flags to PendingIntent and modified PendingIntent creation logic to
added methods to append and read column ID configurations in HiveFileFormatUtils and updated HiveInputFormat to use this method to improve clarity and
replaced the method ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper
added multiple instances of DisplayTemporaryToast ( ) in SavedExperiments . java to improve user feedback during temporary operations
added version assignment logic in ServiceModule and a corresponding test in ServiceModuleTest to ensure service version is correctly set to parent version if it is
added a new test class ` RawSerializationTest ` for validating JSON serialization of various collection types to ensure that the ` toJson ` method correctly handles
simonstewart : rename seleniumserver to sslcertificategenerator for clarity and consistency .
refactor the iteration over replies in ExpansionViewHelper to use an index - based approach to improve performance and readability by using an index
increased the timeout duration in the test for ResourceAccessException to allow more time for tests to complete successfully
added a test method to verify the payload decoding of DelimitedPayload and NGram in TestNGramFilters . java to ensure that
refactor AclImpl to improve code structure to enhance maintainability and readability of the code
removed duplicate test methods and added a new test for different array sizes in EasyRandomTest . java to improve test coverage and ensure correct behavior of
cloudstack - 3549 : fix npe while try to stop a vm
added a thread - local variable ` __ tryWriteAgain ` to manage the execution of ` _ runCompleteWrite ` to control the execution of
reformatted conditional statements and added a method to check ancestor visibility to improve code readability and maintainability
added logging for the rolling - update step failure in RollingUpdateOpFactory . java to improve visibility into deployment failures during the rolling update process
[ hotfix ] [ table - common ] fix checkstyle violation in sinkprovider
added authentication failure handling for username not found in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve user authentication feedback
updated AtMostXVerificationTest . java to improve test coverage to enhance reliability of at - least - x verification functionality
updated default QTYPE from " lucene " to " luceneQParserPlugin . NAME " across multiple files to ensure consistency in the default
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added an ` isInitialized ( ) ` method to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a new
updated the ` test _ fetch _ token _ from _ authorization _ code ` method to use ` shouldHaveIdToken ` instead of ` id
added methods to start and end transactions in DatabaseAdapter and refactored account management in GncXmlHandler to improve transaction handling and ensure proper
replace byte array reading with ByteArrayOutputStream for reading input data to improve performance and reduce memory usage
added multiple @ Override annotations and simplified exception handling logic in MessagingTemplate . java to improve code readability and maintainability by eliminating redundant
added an ` isAcceptable ` method to ` AutoFormatVisitor ` to check if the source file is an instance of ` J . Compilation
updated TestIndexWriterMergePolicy to set maximum buffered documents and RAM buffer size to improve performance and resource management during index merging
added functionality to clear witness capsules and updated test cases for witness management to enhance witness management functionality and ensure correctness through testing
added error handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by ensuring numToEvict does not exceed size limit
flume - 224 : remove log4j level parameter from flumenode and flumemaster
updated authentication metrics in BasicAuthIntegrationTest and modified daemon stream execution in DaemonStream to improve accuracy of authentication metrics and improve thread management in the
replaced HashMap with LinkedHashMap for the nodes variable in DependencyUtil . java to maintain the insertion order of nodes in the graph
add error response to jerseysupport and fix module - info . java
refactor header validation logic in Http2TestBase . java to use a new method ` validateHeader ` to improve code readability and maintain
added a switch - case structure to handle specific property keys in systemProperties to improve code readability and maintainability by avoiding redundancy
changed method parameter types from ` String ` to ` CharSequence ` in ` contains ` and ` doesNotContain ` methods to enhance flexibility in
[ gr - 18654 ] add miss to investigate jfr / jfr / internal / jvm . countertime ( ) and
rename IntUtilsTest class to PrimUtilsTest to better reflect the purpose of the test class
updated the connection factory handling in PersistenceManagerProvider to use a new DataSource instance to ensure the correct connection factory is used for compaction scenarios
refactor DeploymentOptions class to improve code readability to enhance maintainability and facilitate future updates
refactor ` updateTextButtonWithDrawable ` method to use ` Drawable ` directly instead of ` ConstantState ` for drawable creation to improve code
refactor XMLParser and YamlParser to use try - with - resources for better resource management to improve code readability and ensure proper resource closure
added support for the COALESCE SQL operator in RexNodeConverter and registered the COALESCE function in SqlFunctionConverter to
camel - 16462 : camel - hl7 - fix the unit test fail on the ci - server
updated JavassistProxyFactoryFactory to use the current thread ' s context class loader to ensure proper class loading during proxy factory generation
refactor DefaultDateTypeAdapter constructor to remove unnecessary parameters and add synchronized keyword to ensure thread safety during serialization and deserialization processes
refactor method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to use setURI ( uri ) and simplify query handling to improve code clarity and maintainability by eliminating
modified the ` filterOldEntries ` method to filter out old entries based on specific criteria to improve data integrity by ensuring only relevant feed entries are
change log level from fatal to warn in FSHLog . java to better reflect the severity of the log message
replaced the implementation of the ` getValues ( ) ` method in ` NodeMap ` with a new ` NodeMapIterable ` class to enhance
renamed the variable ' predicate ' to ' subPredicate ' for clarity to improve code readability and maintainability by using a more d
added a check for non - empty fields before adding aggregation operations and modified return logic in RexToMongoTranslator to ensure operations are only added
add admin to the admin list if it be empty .
replaced calls to ` MultiFields . getFields ( searcher . getIndexReader ( ) ) . terms ( ) ` with ` getSlowAtomicReader
no effective change - use objecthelper to tostring ( ) instead of objecthelper . tostring ( )
updated the conditional check for ` primitiveType ` in ` GroovyParserVisitor . java ` to ensure it returns the correct name when ` primitiveType
[ gr - 22877 ] remove uninterruptible code from frameinforesultset . hashcode ( )
increased the timeout value of offerTimeout from 100 to 300 in SedaBlockWhenFullTest . java to allow more time for
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to
updated the calculation of ` readLen ` in ` MessageUnpacker . java ` to ensure ` readLen ` does not exceed the buffer size
updated import statement for Nullable from the common library to the core library to ensure compatibility with the latest Micrometer library version
updated SQL query to include user serial identifier in IconDB to ensure data integrity by filtering out user - specific icons
fix ( http : / / issues . apache . org / activemq / browse / amq - 2276 ) : fix back
added a boolean parameter for checking if the resource is a class file and modified whitelisted resource addition logic to ensure that whitelisted resources are only added when
fix baremetal foreign key constraint when upgrade from 4.1 to 4.2
removed the IJava2DRenderer interface and its implementation from Java2DRenderer . java to simplify the class structure by eliminating unnecessary
added onTearDown method to DefaultAudioSink to handle offload buffer clearing to ensure proper cleanup of offload buffers when the audio track
added a scheduled task with configurable delay initialization and scheduled time for upstream tasks to improve task scheduling flexibility and performance in the upstream cache management
refactor StreamType class for improved readability to enhance maintainability and facilitate future updates
updated assertion in Recording . java to include context for the expected output to improve debugging by providing clearer context on the assertion failure
updated FilestorePage and RootPage to include admin role checks and modified message formatting to enhance security by restricting access to admin users
( chore ) camel - elasticsearch : disable test until it can be fix
updated the ` accept ` method to check the declaring class of the ` Lifecycle ` method before evaluating its parameters to ensure that the method only accepts
updated button text from " leftButtonAltcoin " and " rightButtonFiat " to " buyAltcoin " and "
camel - 16400 : fixed restlet endpoint to handle invalid url . thanks to jens kleine - herzbruch
block : remove unused ` height ` parameter from ` createnextblock ( ) `
removed Serializable interface from BTreeMapJava and updated serialization methods in ConcurrentSkipListMapTest to simplify serialization handling and improve test reliability
added null check for exception cause in startup rule execution to improve error handling by providing more informative error messages
refactor conditional check for command mode in Main . java to improve readability and maintainability of the conditional logic
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter .
deleted the PlainVerifier . java file to the functionality is no longer needed in the project
added a condition to close system windows when the Alt - Tab action is triggered to ensure the system window closes when the Alt - Tab action is
updated dialog handling in DialogFragmentIT and removed unused imports in OCFileListBottomSheetDialog to improve code clarity and ensure proper dialog state
updated charset parsing in RestAdapter to specify UTF - 8 encoding to ensure proper handling of character encoding in MIME types
added a call to the superclass ' s deinitialize method in the TextField class to ensure proper initialization of the TextField class
replaced manual serialization with TestUtilities for LogFormat in LogFormatTest . java to simplify code and improve maintainability by utilizing existing utility
updated the parsing method to use ` previousUntilLastClause ` and modified the initialization of ` IFill ` in ` GroupByFillDataSet `
updated array size validation logic in JAXWSExceptionBase . java to throw a negative array size exception to ensure proper handling of negative array sizes and
test : migrate ctunresolvedimporttest to junit 5 ( # 4529 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow more time for thread execution
[ hotfix ] [ test ] change default slot share group from legacy to region
added title property and its getter / setter methods in ShadowActivity , and updated annotations in ShadowDialog , ShadowTextView , ShadowToast ,
replaced Apache Commons Logging with Apache POI logging in POIFSFileSystem . java to improve logging consistency and maintainability across the codebase
updated alarm handling logic in InstarHandler . java to streamline alarm handling and improve clarity to enhance code readability and maintainability by
add local map stats for delete operation
updated enum declaration formatting and modified status check in Response . java to improve code readability and maintainability
replaced the direct use of PLATFORM _ CLASS _ PATH with a method to find the javac location to improve code clarity and
add project name to ` flutter create - additional - settings ` ( # 1560 )
added a new test class ` DeprecatedStubbingTest ` for testing deprecated stubbing behavior to ensure the correct behavior and interaction of the mocking
updated import statement for DispatcherType from org . eclipse . jetty . server to javax . servlet in ITBraveServletFilter .
add some more test case to cover edge case that also occur in treebank
add an option to disable rsa key exchange by default
refactor variable names from ' output _ reader ' to ' reader ' across multiple files to improve code readability and ensure proper resource management
updated PubSubAPI and SDMAPI to use oAuthFactory and oAuthServiceHandleId and added deleteServiceAndAccessToken methods to improve service management and
updated the animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java
added functionality to handle UpdateRegionLocationPlan in ConfigPhysicalPlan and updated logging levels in ProcedureManager and RegionMigrateProcedure to improve region management and
added a new file ` FileDialogLeakTest . java ` to test the behavior of ` FileDialog ` in a concurrent environment to ensure
moved TestOpenTableInCoprocessor from org . apache . hadoop . hbase to org . apache . hadoop . hbase .
[ gr - 28654 ] disable uninterruptible method in truffle feature .
[ hotfix ] [ table - common ] remove unused splitmessagetypemethod in protobuf format
updated the condition from checking for ` dims [ 1 ] . disi ` to checking if ` dims [ 1 ] . disi ` is
updated methods in ExoPlayerTest and DynamicConcatenatingMediaSource to use ` assertTimelineChangeBlocking ` instead of ` assertTimelineChange `
added Java version checks for minimum Java version in Constants . java and updated helper method in Helper . java to improve compatibility checks for Java version compatibility
updated the FileReporter constructor to explicitly cast null to String and File to ensure proper type handling for null inputs in tests
updated the condition from ` isFalse ( ) ` to ` isTrue ( ) ` for checking end - to - end encryption keys to ensure the
added back and up navigation functionality to the DirectMessageConversation class to enhance user experience by enabling the home button in the action bar
added user retrieval functionality in the RpcServlet and updated protocol version to 6 to enhance user management capabilities in the application
added @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to enable support for amd64 and x86 _
replaced the variable ` startClass ` with ` originalStartClass ` in the ` notFound ` method call to ensure the correct class is used
updated exception message and added local handling for parameter register numbers in DexBody . java to clarify error handling and improve local management for
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
jbrules - 2835 : fix the nimbus look and feel when use nimbus look and feel
no functional change - code cleanup , no functional change
refactor AnimatorListenerAdapter to use local variables for alpha and translation values to improve code readability and maintainability by reducing redundancy
dumpedprivatekey : fix typo in error message
change offerpayload . extradatameta ( ) to newofferpayload . extradatameta ( ) to avoid npe
updated milestoneParameters initialization to conditionally use open tickets or repositories based on the milestone state to improve flexibility in managing ticket parameters based on the
increase the battery capacity from 640 to 80 in PipeItemsWood . java to ensure the battery is up to date for
added a new method ` getClusterKey ` to retrieve the cluster key based on both blueprint name and revision to improve clarity and maintainability of
initialized the downgradeAllowed variable to true and added a test for downgrade functionality in UpgradePackTest to ensure proper handling of upgrade pack down
updated XML scanning method calls to use NameType . ELEMENTSTART and NameType . ATTRIBUTENAME instead of NameType . ATTRIBUTE to ensure
feat ( library ) : enable emulate system load library by default
replaced instances of ` APP _ NAME _ COMPARATOR ` with a new method ` getAppNameComparator ( ) ` in ` LauncherModel
replaced ` out . putNextEntry ( new ZipEntry ( entryName ) ) ` with ` out . closeEntry ( ) ` and added
updated assert statements in TestSecretKeyCredentialHandler . java for improved clarity to enhance test output for better debugging and traceability
camel - 3038 : camel - spring - boot routebuilderfinder now use springcamelcontext instead of applicationcontextaware
[ hotfix ] [ doc ] fix typo in metricoptions # description
hbase - 25815 testfulllogreconstruction . testfulllogreconstruction fail on slow ci server
added ` reuseAddress ` to ` DatagramSocketOptions ` and overridden methods for setting ` sendBufferSize ` , ` receiveBufferSize ` , and
fix checkstyle issue in client / serverconfig . java ( # 778 )
danielwagnerhall : remove deprecate locatable interface , since it ' s no longer use
updated error messages in VersionInfo . java to clarify the requirements for the VERSION _ FIELD field to improve clarity and accuracy of error
replaced instances of ` equalityPredicateColumns ` with ` predicateColumns ` in ` StarTreeIndexOperator . java ` to simplify the code
refactor code in HelloMessage and HandshakeHandler for improved readability to enhance maintainability and clarity of the message handling process
fix checkstyle issue in util / navigator . java
updated variable access modifiers from private to static in RecordReaderFactory . java and added a new test class for ParquetRecordReaderConfig registration to
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL queries in MongoQueryCreator to enhance query creation capabilities for MongoDB
updated GROUP BY clause handling in CalciteSqlParser to include a new method to check for expressions outside the GROUP BY clause to improve clarity
updated ` MappedByteBuffer ` and ` FileChannelLinesSpliterator ` classes to utilize ` AtomicInteger ` for buffer unmapping to improve memory management
refactor code to use a single validator variable instead of multiple calls to l . getValidator ( ) to improve code readability and reduce repetitive
added a scheduled method to the CircuitBreakerImpl class and updated timeout constants in the CircuitBreakerTest class to improve asynchronous handling of circuit breaker
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags to simplify intent configuration for better readability
changed the property from " ajax " to " progressbar " in SubmissionController . java and FileUploadRequest . java to enable progress bar functionality
updated the display name in TableExtRetrieverTest from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to
made ` addExportedCount ` and ` getExportedCount ` methods synchronized to ensure thread safety when accessing shared variables
updated import statement for IntRangeUtil . requireNonNegative from IntRangeUtil1 to IntRangeUtil . requireNonNegative to ensure correct usage
added checks for illegal characters and updated string appending logic in HttpParser . java , and added a test for encoded headers in HttpParserTest .
updated the layout reference in ConfigurePagerActivity from trends _ activity to configuration _ activity to align the activity with the new configuration layout
updated log message format in SLWTTextListing . java to include position information to improve clarity of log output for better debugging
refactor ForceLeaderTest to conditionally use Tlog replicas and add a new test class for it to improve test reliability by allowing for
refactor Thread class to improve thread management to enhance performance and maintainability of the code
refactor template file suffixes to use a configurable set and introduce forceTemplateMode to improve flexibility and control over template file resolution based on
camel - 8457 fixed the issue of camel - cxf do n ' t set the namespace attribute in the soap message
reformatted the YamlRepresenter class for consistency and clarity to improve code readability and maintainability
updated string formatting in ToChar . java and added SQL insert statement in TestFunctions . java to improve code readability and ensure correct SQL execution
added checks for valid transactions and write IDs in GenericUDTFGetSplits . java to ensure compatibility with valid transaction and write ID configurations
refactor JsonSerDe to use Collections . emptyList ( ) instead of ArrayList for column and column types to improve code readability and efficiency by
added null check for book path and improved loading logic in DataHolder . java to enhance robustness by preventing null pointer exceptions when loading
added a check for ` nextSid ` in the ` manufactureStrings ` and ` addToStringTable ` methods to ensure all strings are
refactor grid column handling in AppPreferencesImpl and ExtendedListFragment to use DEFAULT _ GRID _ COLUMN to improve code clarity and ensure
updated the error message for the " diff " field in Platform . java and ComparisonFailureWithFieldsTest . java to clarify that line
added a boolean flag ` waitingForKeys ` to ` DecoderInputBuffer ` and updated related logic in ` ClippingMediaPeriod ` and
removed unnecessary API path annotations in OkexV3 . java to streamline API endpoint structure for better readability and maintainability
updated conditional checks in LineUtilitiesTests to use braces for clarity to improve readability and maintainability of the code
added error logging for varargs and old array syntax in JavacParser . java and created new classes VarargsAndOldArraySyntax . java
log if defaultdrmsessionmanager be use on wrong thread
added support for METHOD context in VariableContext and implemented corresponding tests in TestVariableContext to enhance functionality to support method calls and improve test coverage for
added tests for invalid JSON parsing in ExperimentParserTest and removed the asNullableBoolean method from ExperimentJSONParser to ensure proper error handling for invalid
updated buffer limit assignment logic in Piece . java and modified buffer limit assignment in SharingPeer . java to ensure correct position is set for
added HttpClientProperties and modified NettyRoutingFilter to include response timeout functionality to enhance HTTP client configuration flexibility and manage response timeouts effectively
refactor ` NativeLinkTargetGroup ` and ` NativeLinkTargetInput ` methods to use ` getTargetForPlatform ( cxxPlatform ) `
( chore ) camel - main : add test base on user forum issue
added support for handling RexFieldAccess in ASTConverter and implemented conversion logic in RexNodeConverter to improve the handling of field access expressions
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
allow proxy . noproxy predicate to be apply to webclient request uri ( # 1560 )
refactor certificate chain handling in PKCS12KeyStore and add test cases for trusted certificates in StoreSecretKeyTest to improve code clarity and ensure proper
added reflection access checks and refactored related methods in NativeObject and Bootstrap classes to enhance security by ensuring proper access control for reflection classes
removed the public access modifier from the CollisionMap constructor in CollisionMap . java to enforce encapsulation within the package
tradeservice : deprecate getrawinputfromtransactioninput ( ) and replace with nullcheck ( )
refactor conditional statements to use a switch statement for setting log level to improve code readability and maintainability by using a switch statement
cloudstack - 3446 : remove region _ id from user and account record in db ( # 3447 )
bug 60284 : throw encrypteddocumentexception for old excel file that do not support encryption
add -- add - exports = org . graalvm . nativeimage . builder / com . oracle . svm . core . jdk
updated visibility setting for the holder image in TimeLineCursorAdapter . java to improve code clarity and maintainability
increased the timeout duration for the scheduler and sleep durations in BatchingStateChangeUploadSchedulerTest . java to allow more time for retries during
modified the handling of external files directory creation and deletion logic in ` ShadowContext ` and ` ContextTest ` to improve directory management and enhance test
replaced custom ExceptionFactoryImpl instantiation with method references to simplify exception handling to improve code readability and reduce boilerplate code
increased WAIT _ TIME _ MS from 10 , 000 to 60 , 000 to allow more time for the wait period to complete before proceed
updated import statements and added audience handling in ConnectOAuth2RequestFactory and ConnectTokenEnhancer classes to improve clarity and functionality of audience
camel - 14263 : camel - kafka - remove default value for breakonfirsterror
added a new constant ` selectableItemBackground ` in ` R . java ` to define a background color for selecting items
replaced individual imports of trade DTOs with a wildcard import and added a method for placing stop orders to streamline import statements and
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type handling for updated records
move resumablerandomaccessfilelistener to com . ning . http . client . extra . resumable . resumablerandomaccessfilelistener
replaced " AccessLogValve $ 3 " with " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java to ensure
added a loop to update formats in HSSFDataFormat and updated test assertions in TestWorkbook to ensure correct handling of formats and improve test
[ hotfix ] [ kafka ] mark non - deprecated method in flinkkafkaproducer a deprecated
updated the condition in CompressedInputStream to check for maximum compressed length to ensure correct validation of input stream length based on maximum compressed length
camel - 16400 - camel - spring - data - redis - idempotent processor should support expiry and contains ( ) method . thanks to
fix vanilla to use metadata instead of damage .
added conditional logic to handle local repository in LegacyLocalRepositoryManager to ensure that the correct artifact path is returned based on the layout type
[ hotfix ] [ runtime ] only start local task manager if it have be successfully initialize
added details for deploying files in AbstractArtifactResolutionException to provide clearer guidance for users to deploy files in a designated repository
replaced calls to ` getTemporalPath ` with ` getInternalTemporalPath ` in ` UploadFileOperation . java ` and added a method to
updated import statements and added a method to find FeedEntryStatus by its entries in FeedEntryStatusDAO . java to improve code clarity and
added thread execution handling in ` ContextImpl . java ` and improved variable naming in ` BlockedThreadCheckerTest . java ` to enhance
updated the ` instantiate ` method to accept a ` formatterString ` parameter and added a null check for ` ctorArg ` to enhance error handling
updated LoadContactsTask to handle file input stream based on SDK version to ensure compatibility with devices running Android O or above
replaced setter methods for remoteAddress and remoteAddress with instance variables in Credentials . java to streamline the code by eliminating unnecessary setter methods
added a null check for the realClass in Robolectric . java to ensure that the shadowClass is annotated with @ Implements to prevent
http : / / issues . apache . org / jira / browse / amq - 3833 - allow tlsmutualauthenticationrequired to
updated import statements and added a test for handling SSL exceptions in BasicHttpTest . java to ensure that the server correctly throws a ConnectException and
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to provide access to the consumer and producer objects for external use
added import statements for ArrayList and ArrayList in FrameRenderer . java to improve code readability and maintainability
updated warn log message to indicate SMS instead of email to improve clarity regarding the configuration of SMS settings
# 169 - draft - query optimization for live bean
added error handling for IOException in MultipartBody . java to improve resilience against IO issues during file transfer
updated array declaration syntax in ExecutableFactory . java and ZipFolder . java to improve code readability and consistency
updated package - info . java files for consistency and clarity to improve maintainability and readability of the codebase
fix attach file action not work directory ( # 4691 )
added LoadOptionsBuilder and SchemaInfoLevelBuilder to AccessTest . java to configure load options for SchemaCrawler options
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
replace throwing an exception with returning null in TestReader . java to simplify error handling by avoiding parsing errors
added methods to set name , enabled , and expanded properties in ProjectProperty to ensure properties reflect the prototype ' s properties for better clarity and
refactor connectionInfo initialization to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ doc ] fix checkstyle violation in datastreamjob
updated error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and avoid resource leaks
camel - 3560 fixed the issue of service class not be find in camel - cxf
added support for H2 - 14 protocol in HTTP2ServerConnectionFactory to enhance security by ensuring only valid protocols are accepted
refactor variable handling in LambdaToMethod and add lambda handling in ClassFileVisitor and LambdaTest classes to improve clarity and functionality of lambda parameter
minor tweak to the tregex pattern so that it would well reflect our new rule that also include the where clause .
increased the timeout value for the file copy operation in DL4JInceptionV3Net . java to allow more time for
added a setSlop method to the mpq object to enable phrase slopping functionality in the query parser
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test stability by allowing more time
increased the number of servers parsed from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to
add ` ` loadgame ' ' and ` ` loadlastgame ' ' to ` ` terasology ' ' and ` ` screenshot '
updated visibility condition for the compound view to check if edit options are available to ensure the view displays only when edit options are available , improving
added a minimum progress value of 1.1 f to ensure progress does not exceed 1.0 f for better stability
move the packetreceived ( ) method from clientsession to componentsession and remove it from session .
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for the service before accessing its properties in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUI
added ` hidden = true ` to the ` PantheonCommand ` class to indicate that the account level permissions should be hidden by default
added a method to disable instrumentation for specific CoroutinesRoom class to improve performance by avoiding unnecessary instrumentation for specific classes
added logging for context class loader retrieval in NegotiateAuthentication . java to improve error handling and debugging capabilities during authentication
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the code by eliminating an unused method
camel - 14263 : camel - jms should use thread pool if need . thanks to daniel for the patch .
refactor AuthenticationProvider and TargetObject classes to improve code organization to enhance maintainability and readability of the authentication logic
pdfbox - 4892 : do n ' t call flushlines ( ) and closemcblock ( ) if the writer be a tagged
log4j2 - 1349 add unit test for patternlayout .
simonstewart : do n ' t throw unsupportedoperationexception when run test in hta mode
updated the method signature in ` Service . java ` to use ` MwThankPostResponse ` instead of ` MwPostResponse `
implemented the SocketBased interface in ChannelEndPoint and updated SslConnection to use it to enhance socket handling capabilities in the connection process
updated the logic for managing the revoking store ' s maximum size based on the latest block header number and solidified block number to ensure
added unit tests for the HQL collection implicit joins in HQLTest . java to ensure correct functionality of the HQL collection queries in the
updated assertions to normalize output across different operating systems to ensure consistent line endings across different operating systems
replaced references to ` toCommit ` with a ` filesToCommit ` collection in ` IndexWriter ` and added assertions to prevent unreferenced
added @ Final annotation to several methods in BaseError . java to enforce immutability and promote method overriding in subclasses
added validation for the resource percentage in ConsumeUserResourcePercentActuator to ensure that the percentage is within the valid range of 0 to 100
added a condition to check for the legacy login display based on resource configuration to enhance user experience by allowing customization of legacy login display based on
rename the test class from ` StreamNetworkThroughputBenchmarkTests ` to ` StreamNetworkThroughputBenchmarkTest ` to improve clarity and consistency in naming
updated response page assignment logic in EditTeamPage . java to ensure consistent navigation to the UsersPage page
updated debug log message to include exception details to improve error reporting for better debugging
refactor shutdown logic in ConnectionManager to ensure server socket channel is properly closed to improve resource management and avoid potential resource leaks
refactor Rocket class to improve code structure to enhance maintainability and readability of the code
added a new method ` createDynPartSpec ` to encapsulate dynamic partition specification logic to improve code readability and maintainability by reducing
simplify round _ half _ up _ factor calculation and add debug output .
added visitDirectory method to JarDirectoryStep and implemented directory entry handling in DirectoryTraversal and JarDirectoryStepTest to improve directory traversal functionality and ensure
added a new file ` JWKSetEditor . java ` that implements the ` PropertyEditorSupport ` interface for setting a JWK set to enhance the
replaced the ` finish ` method in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` to simplify term handling to
fix toespressonode and invokeespressonode do n ' t call method . getparameterklasses ( ) .
change default value of ` fetcher . threads . per . host . ip ` from ` true ` to ` false ` to ensure that the fetcher
updated conditional checks for queryTimeout and transactionTimeout in StatementUtil . java to improve clarity and correctness of timeout validation logic
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and included target configuration hash in the generated path to ensure that the generated path
refactor ReplicaPosition class to improve code readability to enhance maintainability and facilitate future updates
server : fix the issue that the initial delay for network usage stats update task be incorrect
updated animation interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use a constant FINAL _ FRAME to improve code readability
updated swipe length calculation in Background . java to account for display density to improve swipe responsiveness based on user interface responsiveness
added module - info . java for the org . eclipse . jetty . http3 . server module and updated the relevant Java files to ensure proper module dependencies and exports for the HTTP / 3 server
fix ( core ) : remove unneeded cast in jsontype
simplified the assignment of the ' ctx ' variable by removing unnecessary parentheses to improve code readability and maintainability
[ hotfix ] [ checkpointing ] fix checkstyle violation in checkpointconfig
refactor ` reportInnerClassReferences ` to use ` Element ` instead of ` TypeElement ` for improved type safety to enhance code clarity
updated the command string concatenation in TimestampCheck . java to include an additional space to ensure proper formatting of command output for better readability
replaced FluentIterable with Java Streams for file listing to improve code readability and leverage modern Java features
[ 3.0 ] add support for register = false to serviceconfig ( # 3560 )
stop otr session on disable otr in the setting . fix # 98
added new properties for node label outline size and transparency in NodeLabelRenderer to enhance visual customization options for node labels
refactor ProxySelector , URL , and URLStreamHandler classes to improve code readability and maintainability
updated the boolean parameter from false to true in Win32FontManager . java to enable font management functionality in the application
added a null check for the ' v ' object before visiting it in TreeVisitor . java to ensure that the cursor is set before visit
fix jdtbatchcompiler crash when run with - h : + noclasspath
added ` contentAlignmentPoint ` and ` textAnchor ` properties and their corresponding getter and setter methods in ` LabelBlock ` to allow customizable
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code structure to enhance maintainability and readability of the code
change the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and add null check for ` networkInterface ` to improve
updated ` fromRfc1123DateString ` and ` fromRfc1123DateString ` methods to include ` Locale . US ` parameter to ensure consistent
updated the download method to accept a file extension to ensure that the download functionality operates correctly with pdf files
nifi - 9041 - add property to allow output flowfile even if no hit be find for query
fix the calculation of an hour cost per month in the service offering
[ java ] fix switch / cases indentation see camel - 14540
fix ( streamfilesp ) : remove uncheckrun ( ) from readfilesp
refactor widget skipping logic in PageChangeListener . java for clarity and efficiency to improve readability and maintainability of the code
added a method to check if the workbook is read - only and updated the handling of read - only usernames to improve data integrity by preventing
added error handling around unregisterInvalidatedSessions ( ) method in PluginMonitoringFilter . java to improve robustness by logging exceptions during session checks
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the message in updateStatus from " reachable = false " to " not reachable " in HueLightHandler . java to clarify
fix game setting not load properly . close # 74303
add ` ` unit . millions ' ' and ` ` unit . thousands ' ' to the ui
added support for parsing both byte and string types in MessagePackParser to enhance data handling and improve error management for invalid
added parameterized tests for querying reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to enhance test coverage for query
added tests for serialization and deserialization of nested maps in MapTest . java to ensure correct handling of nested maps during JSON serialization and deserialization
added offset adjustment logic in GeometryUtils . java to ensure coordinates are within the defined bounds to prevent out - of - bounds errors during rendering
removed unnecessary casts and added sorting order functionality in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and functionality by utilizing
improve error message if test plan can not be find
updated method names from " dbmsName " , " schemaName " , " tableName " , and " dbmsType " to " getDbms
modified the argument assignment logic to handle both strict and non - strict identifications to ensure proper handling of setter arguments based on the type and strict
updated the default protocol setting in JettyHttpComponent9 . java to use the configured protocol from the specified class instead of a hardcoded value
set default value of displayVolume to true in VolumeVO class to ensure volume display is enabled by default for better user experience
updated JavahTask to use a boolean parameter for versioning and modified the version method to accept both full and full versions to enhance clarity
refactor condition checks and logic in ChangeLogParameters . java for better clarity and efficiency to improve code readability and ensure correct retrieval of
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for non - critical issues
hhh - 12973 skip test for basicformatterimpl cause exception during formatting of sql string
updated socket timeout handling in sslSocket initialization to ensure socket timeout is set before starting the handshake to improve connection reliability by ensuring the socket timeout
updated action bar size calculation in multiple fragments to account for MainActivity ' s translucent state to ensure consistent behavior across fragments when not in
set the CHA option to true in EspressoOptions and mark classes as final in DefaultClassHierarchyOracle and NoOpClassHierarchyOracle
resolve amq - 2212 | https : / / issues . apache . org / activemq / browse / amq - 2212 - fix resource resolve for rar with weblogic - set the thread context class loader for the thread that start the embedded
refactor JodaTimeRangeRandomizersTest to use AssertJ assertions and simplify data provider usage to improve test readability and maintainability by
http : / / issues . apache . org / jira / browse / jakartaee / browse / jakarta -
fix : add node readiness check to baseoperation . isready ( )
replaced ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to ensure all endpoints are processed from the handler
added a null and empty check for creationStatements in IdTableHelper . java to avoid potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig and UserRpcConfig to reflect the new version of the RPC protocol
added a security check in ObjectStreamClass . java and ObjectStreamField . java to ensure package access checks are performed under a security manager to
removed unused methods from Utils and made UGSCommandCount private in XLCDCommunicator to improve code clarity and encapsulation
replaced ImmutableMap with a HashMap for tag management to improve code readability and maintainability by using a more structured data structure
danielwagnerhall : fix checkstyle violation in clientdriversuite
change default setting from Level . OFF to Level . ERROR in Launcher . java to set the application ' s error level for better debugging
changed private variables from non - final to final in IconNormalizer . java to ensure immutability and improve code readability
added functionality to enable or disable the first call prepare command based on a boolean value to enhance the flexibility of prefix invocation based on the first
replaced ` showWorkspaceAndExitOverviewMode ( false ) ` and ` showWorkspaceAndExitOverviewMode ( true ) ` with ` showWorkspace (
replaced ` asEagerSingleton ( ) ` with ` @ Singleton ( ) ` in ` AuthWithStoreFeature . java ` and removed
modified the ` incomingAssociations ` method to include a ` ignoreInvisibleAssociations ` parameter and updated the condition for handling invisible associations to improve flex
bug 11344 : remove the private ip from the capacity table if it be remove from the db
added information about the ' Basic Usage ' section for empty diagram and Linux 4.6 + in ProfileServlet . java to provide guidance on
fix # 1566 - require field should apply to ref field
renamed ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasCoreConfigurationAutoConfiguration ` and ` Cas
refactor FeatureFlags class for improved clarity to enhance maintainability and readability of the code
updated UUIDs and UUID formatting in ConfigStore . java for improved clarity and consistency to enhance the readability and maintainability of hue
added caching logic for picture in TimeLineCursorAdapter and TimelineArrayAdapter to improve image loading efficiency based on cached data
updated compaction configuration message in HiveConf . java to clarify that compaction on insert - only tables will always run via queries regardless of configuration
added a null check for the storage path in the condition of mWaitingToSend to ensure that the storage path is not null before proceeding with
replace resize threshold checks with a new method ` checkResize ( ) ` for better clarity and maintainability to improve code readability and ensure
refactor LDAP connection handling to improve code readability and maintainability
added @ Deprecated annotations to the @ XmlAttribute annotation in AggregateDefinition . java to indicate that the @ XmlAttribute annotation is no longer required and
removed multiple debug logging statements from TouchInteractionService and RecentsAnimationDeviceState to streamline the code and reduce unnecessary logging for better
added a condition to check if className starts with " com . intellij . rt . junit . 37 " since Intelli
updated assertions in TestMultiSearcher to compare against both hits2 and hits3 to ensure correct length validation for multi - search functionality
added a new class LucenePackage with a private constructor to facilitate the retrieval of the Lucene package to facilitate
corrected the addition logic for sizeInBytes in RAMDirectory . java to correctly account for the difference between existing and existing sizeInBytes
updated calculations in StatsRulesProcFactory and added estimate methods in GenericUDAFBloomFilter and BloomKFilter classes to improve accuracy of
added a null check for the drawer toggle before executing animations to prevent potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to convertToAuthentication method to suppress warnings related to unused subject references
added logic to determine if modules should be scanned based on class loader settings to improve flexibility in module scanning for different class loader implementations
fix msbib export format to correctly handle corporate language field ( # 4379 )
added a method to cancel core recovery in the CoreContainer class to improve core recovery management and error handling during shutdown
updated time measurement methods in ` bug5070081 . java ` to use ` TimeUnit ` instead of ` System . currentTimeMillis ( ) ` to
simonstewart : allow click on the first element of the list instead of only the first
fix typo in javadoc ( # 1073 )
added trust resolver , role hierarchy , and permission evaluator to the SecurityEvaluationContextExtension class to enhance security expression configuration and ensure default values are correctly
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize defaults correctly for valid DH parameter generation
replaced direct usage of ` FileStorageUtils . getSavePath ( ) ` with ` FileStorageUtils . getUsableSpace ( ) `
updated the combine method in DistinctSqlAggregation to handle multiple values and added a test for it to improve functionality and ensure correct behavior of the
added a test to verify that post - login activities are executed for a user during successful authentication to ensure that the user ' s authentication process beh
add an argument to extractorframesare to allow customization of the extractor stripper
refactor CharArraySet to simplify code and improve the contains method to enhance readability and maintainability of the code
fix the check for unsupported track format in muxerwrapper .
updated ` JsBundleGenrule ` and ` JsBundleGenruleDescriptionTest ` to use ` AndroidPackageable ` instead of ` JsBundle
added UTF - 8 character encoding support and refactored string handling in StringDictionary to ensure proper handling of UTF - 8 characters and improve performance
rename " Logical Analyzer " case to " Logic Analyzer " and update drawable resource references to improve clarity and consistency in naming conventions
added static variables for instanceClassName and instanceClass and modified the instantiation logic in AbstractVector . java to improve performance by reusing instances of Vector
removed syncMetaLeader ( ) method call from CMManager . java to simplify the code by eliminating unnecessary synchronization
update feedbackcontributionquestiondetails to return an empty html instead of null for missing response
added TestLoggingExtension to DiagramRendererTest to enable logging functionality during tests
updated method signatures to include a ` useCamelCaseMapping ` parameter across multiple classes to enhance functionality by allowing case - insensitive property name mapping
added support for the VIOMI Internet electric water heater 1A ( 60L ) device to the MiIoDevices class to
refactor code to use a local variable for SslSessionData to improve readability and reduce repetitive method calls
added a new file ` CreateNewSpreadsheet . java ` to implement and demonstrate the usage of the ` create ` method in
replaced ` Duration ` with ` long ` for TTL and ` timeToLive ` in ` CacheProperties ` and ` RedisCacheConfiguration ` to
replaced CONTENT _ URI with CONTENT _ URI _ NO _ NOTIFICATION in multiple files to prevent notifications from being sent during backup operations
updated testCompile group version from ' 2.14 . 0 ' to ' 2.27 . 2 ' in SwaggerResolveTest . java to
updated synchronization from lucidaFontName to this in SunFontManager . java to ensure thread safety by synchronizing on the current instance
added a condition to check if ` c ` is equal to ` ' < ' in ` DocClassUtil . java ` to ensure correct handling
removed String . format call from the return statement in Workspace . java to simplify the code and improve readability
added import for Liquibase Scope and displayed a message when no validation errors are found to improve user feedback by providing feedback when validation errors
refactor IntegrationTestContextLoader to utilize WebMergedContextConfiguration and improve resource loading to enhance configuration handling and ensure proper servlet context initialization
modified component scrolling logic and added checks for pointer events in multiple classes to improve responsiveness and ensure proper handling of component interactions
updated formatting in RamlType . java for consistency to improve code readability and maintainability
added a new class ` ClientStat ` and updated ` StatsService ` and ` DefaultStatsService ` to use ` String ` instead of `
updated the expression replacement logic in CellContentConverter . java to include additional line breaks to improve readability and maintainability of the code
simonstewart : fix regex to match on window and linux .
mondrian : fix typo in mondrianproperties javadoc .
added stack trace printing functionality in ProcessTools . java and updated launcher path handling in CustomLauncherTest . java to improve debugging capabilities and ensure correct
added a test for embedded image in TumblrRipperTest to verify the functionality of the TumblrRipper
added a conditional check before converting storeType in CodeGenerator . java to ensure convert is only called if there is a slot for the storeType
[ chunk ] do n ' t try to open data source in initializationchunk .
replaced the import of ` IndexWriterConfig ` with ` PrintStreamInfoStream ` and added a method to convert ` ByteArrayOutputStream ` to UTF -
added support for loaderrorhandler attribute in tika - config , and add a dummyparser so that it can be use by tika -
added package - info compatibility checks and improved generic type initialization in DocLint . java and DocLintTester . java to enhance error handling
added support for an additional import command in DataImportHandler and defined a constant in DataImporter to enhance functionality by allowing import commands to be processed
added a new test to verify that inner classes do not modify definitions if the ignoreDefinition flag is true to ensure that inner classes are not modified
removed unused import of android . util . Log in JettyService . java to clean up the code and improve readability
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and modified related calculations to include it to enhance item
simonstewart : add a ` ` / quitquitquit ' ' servlet to stop the jetty server
fix npe in llvrealtimesegmentdatamanager ( # 10727 )
added Windows - specific handling to skip processing for Teredo nic display names to ensure compatibility and avoid conflicts with Teredo network configurations
fix : do n ' t attempt to add a contact if it be already connect .
replaced bean registration method from ` getReaderContext ( ) . getRegistry ( ) ` to ` registerBeanComponent ( new BeanComponentDefinition ( bean
change the parameter of the drawBitmap method from ' left ' and ' top ' to ' null ' to ensure the drawBitmap method handles null
update MeitrackProtocolDecoder and TotemProtocolDecoder to use yymmdd instead of yymmy to improve accuracy of
changed access modifier of getFontPath and getPlatformFontPath methods from public to protected in SunFontManager and X11FontManager classes to enhance encaps
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods are outdated and should not be used in future development
fix clientmapstoretest # testremotemapmaxsizeexception to also catch ExecutionException
added functionality to keep empty sentences in document processing to allow users to control whether empty sentences should be retained for improved document processing
added error handling for artifact subdirectory creation and improved exception messages in MavenArtifactFetcher . java to enhance robustness by providing clearer error messages
updated ` ReusableCompiler ` to remove ` IDELazyTreeLoader ` and modified ` JavaLanguageServer ` to return ` NO _ MODULE
bug 10363 : fix npe in directagentattache when resource return null
refactor sendemail ( ) so it do n ' t need to catch an exception
pipeitemsobsidian no longer throw an npe if the item be n ' t in the inventory
updated DateFormatEvaluator to accept a Locale parameter for date parsing to ensure consistent date parsing across different locales
added a boolean field ` includeDecals ` to ` StorageOptions ` and implemented its getter and setter methods in ` StorageOptionChooser ` to
updated generateDocumentation method to include a null parameter and added a suppression warning in LiquibaseTest . java to enhance functionality by allowing
updated HiveProtoLoggingHook to set per - job queue and improved JSON handling for end times to enhance performance tracking and ensure accurate event logging
updated log messages in StopFilterFactory , SuggestStopFilterFactory , SolrIndexConfig , and DocExpirationUpdateProcessorFactory to improve clarity
updated the version check in ignoreRecordAttribute to use a dynamic major version from the runtime to ensure compatibility with different class file versions
added a new test class ` LdapPasswordAuthenticationTest ` to verify LDAP password authentication functionality to ensure proper authentication and retrieval of user attributes in the
updated import statements and condition check in TaskCompiler . java to utilize BasicStatsNoJobTask for footer scan validation to improve code clarity
fix an npe in reload manager ( # 3560 )
refactor VisibleAdvance class to improve code organization to enhance maintainability and readability of the code
fix # 4790 : handle terminal exception in reflector . start ( )
updated conditional checks in EdgeDataTable . java and NodeDataTable . java to include dynamic number columns to ensure compatibility with both numeric list and dynamic number
added null checks for groupId and version in RawPom . java to ensure that required values are not null to avoid potential NullPointerExceptions
added a null check for apiInfo before assigning it to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code organization and maintainability
added lighting and disposal methods for textures and shaders in FlameRenderer . java to enhance visual rendering capabilities and improve resource
add a menu item when there ' s no item in the list editor
modified CSS parsing logic to include bounds checking for character array access to improve robustness and prevent ArrayIndexOutOfBoundsException
added logic to enable or disable the default look and feel decoration based on application properties to enhance user experience by allowing custom look and feel
removed unnecessary ' this ' keyword from SQL query and simplified method calls in HostRoleCommandDAO . java to improve code clarity and reduce unnecessary
updated function names from F5 _ UNKNOWN to F5 _ TRANSPONDER _ TEST _ REPLY and F6 _ TRANSPONDER _
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and correctness of swipe actions to enhance user experience by
replaced HostDatabase with ColorStorage in ColorsActivity . java to utilize a more efficient color storage implementation
refactor String class methods for improved readability to enhance maintainability and ease of understanding for future developers
removed redundant SLF4J logger initialization across multiple classes to improve code clarity and reduce unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide a way to retrieve global entries from the
added assertions for the ` sendcoin ` method in ` MultiSign34 . java ` to ensure that the ` sendcoin ` method behaves
( chore ) camel - cucfilter : migrate cucfiltertest to junit 5 ( # 4527 )
updated classpath appending to use the system ' s path separator to ensure compatibility across different operating systems
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow for instance - specific access to the augmentSuccessView
updated field retrieval method in TestUtil and added assertions for properties in AbstractEntity and Person classes to improve clarity and correctness of field presence
removed the configuration parameter from Outlink instantiation in multiple parser classes to simplify Outlink creation by eliminating unnecessary configuration parameters
removed the ` LexicalContext ` parameter from multiple methods in the ` Lower ` class to simplify method signatures and improve code readability
added imports and modified the return statement in UseLambdaForFunctionalInterface . java to include modifiers and remove unused imports to improve code clarity
fix bug in testnganttask where class selector be not be add to the classfilesets list
removed unsupported Aggregate input handling in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unnecessary checks for
add miss mappings . mapping to the registry , fix a bug where an entry could not be register .
updated variable assignments for x3 and y3 in Intersector . java to ensure correct assignment of coordinate values for intersection calculations
added default methods for SBE encoding and limit in MessageDecoderFlyweight to indicate that these methods are not yet implemented by the current version
refactor ElasticsearchContainerTest to use a dynamic version string for client cluster health checks to improve maintainability and ensure compatibility with different elasticsearch versions
replaced direct byte array copying with ByteBuffer copying for PeerMessage parsing to improve performance by avoiding unnecessary byte array copying
added version handling to ClusterDefinition and updated related properties in GSInstallerClusterProvider to support versioning and improve cluster management functionality
camel - 7999 : camel - ftp should use source code generate configurer to avoid reflection configuration
zeppelin - 3663 . add ready status when there be no dependency to download
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified ` Gen . java ` to ensure
added basic constraints check in ForwardBuilder and created BuildEEBasicConstraints class for certificate validation to ensure proper handling of basic constraints during forwarding operations
added initialization logic to JdbcPostgresqlDAO for handling PostgreSQL version 9.5 and above to ensure compatibility with PostgreSQL versions 9.5 and above
updated WebSocket implementation to enforce maximum message size and added buffer size validation in AbstractWebSocketConnection to ensure that the input buffer size does not exceed a
removed undeleteAll and rollbackUndeleteAll variables and replaced them with pendingDeleteCount in SegmentReader . java to streamline deletion logic and
added null check for scopes before validating it in ClientRegistration and updated test cases accordingly to ensure that scopes are not null before proceeding to avoid
added null checks for orderBy before adding it to the expression and explanation to avoid potential NullPointerExceptions when orderBy is not initialized
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t wait for snapshot to be back up when vm be in kvm state
updated the initialization of the HiveLog4j message to store it in a variable before logging to improve logging clarity by logging the initialization message
added a check for an empty tasks list before accessing the first element of the tasks list to avoid potential NullPointerException when no tasks are available
do n ' t fail the delete operation if the node do n ' t exist .
improve code cleanliness and remove unused code
added error handling for empty barcode input in Code128Reader and Code39Reader , and improved null check in TruePositivesBlackBoxTest
replaced TreeSet with LinkedHashSet for storing cipher suites in SSLContextImpl . java to maintain insertion order and improve performance
updated character validation logic in Escaper . java and corrected a typo in InternationalizationTest . java to improve code clarity and
updated SqlSource to check for both String and CharSequence return types and modified SqlProviderTest to use StringBuilder instead of String to improve flexibility in
updated import statements and modified aliasChildren handling in InternalMNode . java to improve code clarity and prevent potential null pointer exceptions during aliasChildren
added a method to calculate the layout transition offset for a page in PagedView . java and updated scroll delta calculation in Workspace . java to
renamed ` synthetic ` to ` pruned ` and updated related code for clarity to improve code readability and maintainability by using more d
added a call to setAccessible ( true ) in WidgetInterceptor . java to enable access to the method from other classes
added a condition to set literal initializer for the ' database . server . id ' field in ConnectorConfigGenerator . java to ensure that literal initialization
updated Mozilla version in AbstractRipper . java from Macintosh and Intel Mac OS X to Windows NT and KHTML to
added a web interface item to the popup in BasicSystemUtils . java to enhance user experience by providing a direct access to the server ' s
refactor HandleGetter to use a static final variable for actualValue and update innerThen statements accordingly to improve code clarity and maintainability by
added error handling for Record creation in EncryptedSlideShow . java to improve robustness by preventing application crashes due to ArrayIndexOutOfBoundsException
[ hotfix ] [ checkpointing ] improve logging of checkpointio behavior
removed redundant call to loadBattlePassManager in Player . java to avoid null pointer exceptions during avatar loading
updated Docker image version from 1.0 . 0 to 1.1 . 0 and modified SSH configuration options in PortForwardingContainer . java to
added memory allocation and garbage collection calls in ThresholdTest . java to facilitate garbage collection during testing
added checks for log name prefix before and after in StdErrLog . java and updated logging messages in StdErrLogTest . java to improve
fixed - rremoteservice . getremoteaddress ( ) method do n ' t take into account service name . #
added ` isSelected ( ) ` and ` setSelected ( ) ` methods to the ` MultiButton ` class and updated the ` isSelected ( ) `
rename ` UpNextActivity ` to ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to improve clarity and consistency in
[ issue # 5560 ] fix the bug that brokercontroller do n ' t start in controller mode ( # 5560 )
refactor RedisReactiveHealthIndicator to utilize ReactiveRedisConnection for command handling to ensure proper resource management and avoid potential memory leaks
refactor theme color retrieval to use a resource ID instead of a brand color to improve code readability and maintainability by centralizing theme color
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added multiple type adapters for various types in ToolingApiLauncher to enhance the flexibility and usability of the tooling API launcher
updated the order of parameters in TestPayloadCheckQuery . java to ensure consistency in the query execution order
refactor ConsoleReader to streamline character printing with mask handling and add a new test for reading lines with a mask to improve readability and
added user information to the exit message in BaseCommand . java to improve user feedback during command execution by including the client ' s user context
move modulesupport and test to graal - api . move them to graal - compiler - api .
[ hotfix ] [ runtime ] remove unused slotsharinggroup constructor
updated version - specific logic in StreamExInternals . java and modified the drop - while check in StreamExTest . java to ensure compatibility
updated texture resources in DecalTest . java and MusicTest . java and modified color clearing in SimpleDecalTest . java to improve
rearranged registration and unregistration of the system dialogs receiver to improve code readability and maintainability
updated import statements in HostsRemovedEvent . java to ensure consistency in code structure
added support for introspection in ClientDetailsEntity and modified token validation logic in ChainedTokenGranter and IntrospectionEndpoint to allow intros
updated write method to include HTML encoding for remote user and session attribute to improve security by preventing XSS vulnerabilities
added PhrasePrefixQuery and SpanQuery annotations to PhraseQuery and SpanQuery in Query . java to enhance query documentation with additional functionality for
replaced size ( ) = = 0 with isEmpty ( ) in commentsInserter and commentsToAttribute checks to improve code readability and
updated logic in NoValueOfOnStringType . java to handle binary expressions more accurately to improve clarity and correctness in string concatenation
updated method signatures in AbstractAssert , Assert , DateAssert , and Descriptable classes to use Object instead of A to enhance type flexibility
refactor ThrowingFunction interface to use a generic type instead of a lambda interface to improve type safety and clarity in handling exceptions within the
added methods for retrieving and setting uploadBehaviour in AppPreferences and updated PreferenceManager to use these methods to improve encapsulation and maintainability of
fix ( prettyprinter ) : handle case where we do n ' t have a final field in the constructor
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s built - in
corrected the method name from ` isValidSEnding ` to ` isValidEnEnding ` and removed an unused variable to improve code clarity and
updated the drawable resource for the PageMarker from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to accur
added a volatile integer ` reinvocations ` and updated logging statements in ` BasicInvocation . java ` to track and track the number of re
updated the calculation of topPadding in DefaultLookAndFeel . java to use getInnerHeight instead of getHeight to ensure proper vertical alignment of the
added a break statement in Recognize . java to ensure proper flow control in the code execution
added preference - based lock home screen functionality in multiple classes to enhance user experience by providing haptic feedback during drag operations
updated ExcelBatchReader to handle string formula cells correctly and added a new test for text formula in TestExcelFormat to improve flexibility in handling
fixed bug 1381950 - immutablefield no longer report false positive for anonymous inner class .
added a user agent field in CommaFeedConfiguration and updated HttpGetter to retrieve it to ensure the application uses the correct user agent from the
avro - 905 . java : add miss @ xmlattribute ( required = true ) to propertydefinition and avrodataformat
changed log level from info to debug for file not found message to improve logging granularity for better troubleshooting
rename the class from QueueTest to QueuedPipeTest to clarify the purpose of the test class
updated the version check to use ` OfflinePlayer . class . getUniqueID ` instead of ` PS . get ( ) ` to improve compatibility with
updated the logic in DefaultRoutesCollector to handle both null and empty include patterns and improved error logging to enhance robustness and clarity in
added a vertexColor feature and modified OpenGL color handling in PShape3D . java to allow customization of the rendering color based on
added a boolean parameter ` isPkColumnFiltered ` to the ` printForeignKeys ` method and modified related method signatures to support filtering of primary keys
replaced the use of ShadowMatrix with direct calls to matrix . getValues ( m ) in ShadowMotionEvent . java to simplify the code and
removed the import of MetaRules from multiple Java files to simplify the package structure and improve code organization
removed the handling of class definitions and simplified the return statement logic in GroovyEngine . java to simplify the code and improve readability by simplifying
move brandingservlet to plugin package and add plugincontextlistener
removed redundant print statement for command output in NativeCodeGenerator . java to streamline output formatting for better readability
replaced multiple calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with a single call to ` fireChangeEvent
added unit tests for expected exceptions in ThrowableAssert _ hasCause _ Test . java to ensure proper error handling when assertions have different cause types
remove unused variable ` flatten ` and ` pack ` from ` AutomaticDependencies . java ` to improve code clarity and reduce redundancy
rename ` requestedScopes ` to ` allowedScopes ` for clarity to improve code readability by using a more descriptive variable name
danielwagnerhall : add firefox and capability test for marionette
camel - 3496 : camel - jmx - add route description to camel - core and camel - jmx
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a line to set the edge ' s weight in ImporterCSV . java to ensure that the edge ' s weight is correctly set for
add a method to calculate the cost per month for aggregated quota tariffs
updated SQL query to include an additional ' d . adsrc ' field in DatabaseMetaData . java to ensure accurate retrieval of column default values from
add a sanity check so error be a bit more
updated the User class to return a detailed string representation of the user details to improve the readability of the user ' s information for debugging purposes
updated body extraction in MessageHelper to check for null before converting to a string to improve error handling and provide clearer feedback when the message body
[ hotfix ] [ runtime ] rename taskdeploymentdescriptorfactory . fromexecutionvertex to execution . fromexecution
improve roster access method to check for group visibility .
added classpath reference in AbstractJRubyMojo . java and removed unchecked suppression in CucumberMojo . java to ensure proper
updated assertions in MethodHandleImpl . java and added a new userMethod method in MethodHandlesTest . java to ensure correct type validation and add
added imports for StopFilterFactory , NamedSPILoader , and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , AnalysisSPILoader
updated width and height comparisons in URLImage . java to ensure correct rendering behavior when dimensions differ from placeholder image dimensions
added a condition to check if the class name does not start with " META - INF / " and modified the logic for appending package names to
added import statements for Display and Form , and modified createImageToFileSystem and createImageToStorage methods to use final parameters to improve code clarity and
updated assertions in StackWalkerTest to use a dynamic version check based on the major version to ensure accurate validation of the number of values based on
changed the visibility of the ` addViewportJob ` method from protected to public to allow broader access to the method for external use
removed the number of partitions parameter from the buildFlow method and related tests to simplify the method signature and improve code clarity
removed server restart settings and server exit checks in TestDatabase . java to streamline server management and ensure proper shutdown behavior
added null and empty check for block in NodePathsConvertOperator and modified child iteration logic in SchemaQueryMergeOperator to improve robustness and prevent
added functionality to retrieve and display the total harvesting time in CallInfoFrame , IceUdpTransportManager , and TransportManagerGT
updated particle rendering parameters for FPS , count , max , and percent completion in ParticleEditor . java to improve visual consistency and performance of
added configuration handling for the " keyserver _ port " property in Hadoop environment to ensure that the " keyserver _ port " property is reset
added a transparent background color to SvgViewerFactory to enhance visual appearance by providing a transparent background
removed the minSdk parameter from the @ Config annotation in ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the code by removing unnecessary
refactor ` containsExactly ` method to accept varargs instead of a first and rest parameters to improve clarity and usability of the method
updated the capacity and refillGreedy methods in the Bucket4jFilterFunctions . java file to improve clarity and functionality of the
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to clarify functionality and improve code readability
added support for materialized views and associated hooks in the optimizer and SemanticAnalyzer classes to enhance query processing capabilities by integrating materialized views and
added error handling for NoClassDefFoundError in REngine . java to ensure proper handling of cases where no class definitions are found
refactor span handling in TraceWebFilter to use a new SpanAndScope class to improve clarity and maintainability of span management in the
updated exception handling in AbstractUpdateCommandStep to use a fallback message when the cause is null to improve clarity of error messages by providing a
updated SolrServerException constructor to include the base URL parameter to improve error handling by providing more context about the Solr server ' s base URL
updated printSetupRecord logic to set the landscape state to false to ensure correct print setup behavior when landscape orientation is not set
updated return statement to handle null values in JavaVoidObjectInspector to improve robustness by avoiding potential NullPointerExceptions
added validation to ensure argument names do not contain tabs or spaces to prevent runtime errors from invalid argument names
refactor AndroidLocationPlayServiceManager to use in - memory background location listeners to improve performance by avoiding unnecessary updates when the activity is unavailable
updated condition to check for primitive type from ! = GL10 . GL _ POINTS to equal ( GL10 . GL _ POINT
truffle : fix trufflestring equality check for byte array .
added a line to set the command list in the ComboBox class to ensure the command list reflects the current state of the component
nifi - 7041 : allow alias filename to contain hyphens .
updated ZkCLI . java to use a dynamic Zookeeper host string instead of hardcoded strings to improve flexibility and ensure consistent use of
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to use ` . equals ( ) ` for
added a conditional check for remote gRPC status before posting a severe event to ensure that a severe event is only sent when the remote gRPC status
refactor method signatures in XYItemRenderer and related classes for consistency to improve code readability and maintainability
add entity id to the tick ' s entity in case it ' s already in the world .
added a method ` getErrorString ` to return a string value based on the error code to improve error handling by providing a standardized string representation
mary : add support for the ` ` locale ' ' query parameter to inforequesthandler .
updated the server URI handling in RFC2616BaseTest to use " http : / / myhost : 1234 / tests / " instead of
added a method call to addToHelperList in the Construction class to enhance the functionality of the helper list management
added a condition to handle cases when the length is - 2 in GlyphLayout . java to ensure proper handling of edge cases in text rendering
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security by ensuring proper permissions are enforced during
refactor directory handling logic in ReceiveExternalFilesActivity to check for file existence before populating directory list to improve error handling and ensure valid folder
fix npe in testng when service loader classloader be null
removed debug logging in BarrowmanCalculator and adjusted deltap calculation in TubeCalc to improve performance and reduce log verbosity during calculations
updated node and edge column retrieval logic in TimelineControllerImpl . java to ensure correct column assignment based on the existence of the table
added registration of extra components for the BrokerAdminApiApplication to enable customization of additional components for the broker admin application
added a test method for bug - 4658 and modified query execution logic in MultiCfQueryExecIT . java to ensure correct handling of
peergroup : use a linkedlist instead of a fixed - size list to improve performance
fix a bug in abstract builder that cause a crash .
added configuration for simple consensus snapshot trigger threshold in ConfigNodeConfig and updated retry attempts in RatisClient to allow dynamic configuration of retry attempts
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
avoid throw an exception if a remoteproxy be not a
updated PackageParser to extend AbstractEncodingDetectorParser instead of AbstractParser to enhance parsing capabilities for ZIP entries
added a new file TestSplitThruPhiDivMod . java with methods for testing modulo operations to address a problematic division problem in the
added methods to lookup generic interfaces and superclasses in TemplateRegistry for improved type handling to enhance flexibility in template resolution for generic types in
increased the initial capacity of ByteArrayOutputStream from 512 to 1028 to optimize memory usage for large data sets
added comments to the languagesExcluded array to indicate that Chinese , Indian , and Fersian symbols are not yet available to clar
updated byte array handling in TransferCompletionHandler to accommodate larger data transfers to ensure that the transfer process does not exceed the expected buffer size
use windowadapter instead of windowfocuslistener in the gui
added a null check for the source ASTNode before throwing a SemanticException for invalid aliases to improve error handling by providing a clearer error message
added scaling logic to the SkeletonRenderer class using the center of the AABB to ensure proper rendering of skeletal mesh by applying
added getSolrHome method to DistributedClusteringComponentTest and BaseDistributedSearchTestCase classes to provide a consistent way to retrieve the Solr
added ComponentScan annotation to SpringWebConfig . java to enable component scanning functionality in the Spring context
removed the getAccount method from UserListItem to simplify the code by eliminating unnecessary account conversion
added unit tests for package installation and application information handling in ShadowPackageManager to ensure correct default values are set for package and application information
refactor AvailableSettings class to improve code readability to enhance maintainability and facilitate future updates
added TransactionCapsule imports and initialized TransactionCapsule variables in TransactionTrace . java to enhance functionality by allowing initialization and finalization of TransactionCaps
add a configuration option to disable the random member list ( # 16921 )
replaced Text ( ) with CrawlDatum ( ) in SegmentReader . java to improve data handling by using CrawlDatum instead of Text
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future updates
updated configuration path formatting in TsfileDBConfig . java and modified fetchSize handling in QueryProcessExecutor . java to improve code readability and
updated the error message in GenericUDFTrunc from " trunk ( ) only takes STRING / CHAR / VARCHAR types as second argument " to "
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve readability
initialize the title variable to an empty string to ensure the title variable has a default value to avoid null reference issues
set response body to null if request do n ' t have a body
deprecate the embeddedserverinstance interface for backwards compatibility
add support for macadapter . registermacevents ( ) instead of macadapter . registermacevents ( )
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity
changed return statement from toEnum ( type , s ) to return in HandlerLibrary . java to ensure proper handling of enum type conversions
made the ` hideUnprivilegedObjects ` variable final in ` PgConnection . java ` to ensure immutability of the ` hide
fix compilation error in audiodatasourcetest due to configurationmanager
added support for saving Giphy Android 11 video URLs in IOUtils to support compatibility with Android Q and above
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 536 : add
refactor multiple classes related to EhCacheTicketRegistry , LdapPasswordPolicyEnforcer , GoogleAccountsService , SamlService , and SAMLCom
refactor logger instance retrieval to use computeIfAbsent for clarity to improve code readability and maintainability by simplifying the logic
deleted the DataOutputOutputStream class and updated imports in HbaseObjectWritableFor96Migration . java to streamline the codebase by removing unused or
removed the configuration setting for the " hive . stats . column . autogather " property in TestAcidOnTez . java to stream
change log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity for non - critical messages
added a method to retrieve the default provider name based on the RI type to ensure consistent provider identification across different operating systems
added Captor - based field processing in MockitoBeforeTestNGMethod . java to enable proper handling of Captor - based fields
improve error message when there be no test case
added import statements and modified prefix computation logic in GroovyAutoComplete . java and GroovyLanguage . java to improve code clarity and ensure proper handling
fix ( core ) : switch to osm for import
simonstewart : do n ' t re - connect to the server if the server fail to start
changed mHideSysUiScrim from final to non - final and updated its visibility based on user preferences to allow dynamic modification of the
refactor cancel logic in Call and OkHttpCall classes to improve error handling and ensure proper cancellation of operations
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and correctness of swipe actions to enhance user experience by
updated RequestMatcher interface to extend from org . springframework . security . web . util . matcher . RequestMatcher to ensure compatibility with the Spring
updated ` DeferredAttr . java ` to include ` IF ` in the list and added a new ` ImplicitLambdaConsideredForApplic
make j2kt and j2kt integration test more consistent with j2kt
added unit tests for qualifier application in DeviceConfigTest . java and updated dimensions calculation in DeviceConfig . java to ensure correct handling of display metrics
replaced IOException with RuntimeException in ExternalViewReaderTest . java and updated timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource in RootCursor from a logo to a mipmap . ic _ launcher to improve the visual appearance by using a
added a content text to the error builder in FileUploader . java to enhance error reporting by including the content content
refactor ConcurrentHashMap class for improved concurrency handling to enhance performance and maintainability of the code
added methods to adapt and return UserTrades and UserTrade objects from an array of AbucoinsFill to improve data handling and integration with
updated return statements in Claim . java and modified clearAsPlayer method in SetBlockFast _ 1 _ 8 . java to ensure proper handling of
simonstewart : allow the htmlunitdriver to work with both firefox and internet explorer
added handling for VARBINARY data type in BlobType . java to ensure correct database data type is returned for VARBINARY definitions
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5203 & cookie =
added synchronization to the language variable initialization in LibFFIContext . java to ensure thread safety when accessing shared language variables
replaced ` Context ` with ` ContextInternal ` and updated thread checks in ` InboundBuffer ` to ensure compatibility with Vert . x thread
added a new method ` deadServerNoTimeout ` and modified timeout handling in ` LdapTimeoutTest . java ` to improve test reliability by
corrected a typo in the usage message from " UniocdeData . txt uniName . dat " to " UnicodeData .
camel - 7999 fixed the cxf test error of camel - cxf
refactor multiple Synth UI classes for consistency and clarity to improve maintainability and readability of the codebase
added support for BoosterSet in ComponentAssemblySaver and modified return value in BoosterSet to ensure proper handling of BoosterSet instances
enable proxy authentication for jabref ( # 9041 )
replaced instances of ` __ blockchain __ FORK _ COUNT ` with ` BLOCKCHAIN _ FORK _ COUNT ` across multiple files to
replace throwing an InternalError with a return statement in mmm Class . java to improve error handling by providing a clear return value instead of throwing
replaced mortbay logging with Apache Commons logging in TestIPCUtil . java to improve logging consistency and maintainability
removed chunked transfer handling from the HTTP client request in NettyRoutingFilter . java to simplify the code and improve readability by directly using the
added a call to clearAttributes ( ) in PatternTokenizer . java to enhance the functionality of the PatternTokenizer class
updated VerificationAfterDelayImpl to include a polling period and improved error handling for verification failures to enhance reliability by allowing a configurable polling period
added configuration for Hive authorization manager and modified conditional checks in SemanticAnalyzer to enhance security by ensuring proper authorization management during testing
zeppelin - 4357 : copy all interpreter and library from zeppelin - core to zeppel
hbase - 10660 addendum fix checkstyle issue in hbase - thrift module
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to known issues
updated the ` calcXBounds ` method in ` BarLineChartBase ` , ` CombinedChartRenderer ` , and ` Renderer ` classes to
added error handling for XML parsing in a try - finally block to ensure resources are released properly to improve resource management and prevent potential memory leaks
release the header buffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to use it
added null and closed check for the result set before closing it to prevent potential NullPointerExceptions and ensure proper resource management
updated the driver version from - 1 to 10 in DerbyDatabase . java to support the latest features and improvements in the database
fixed bug 1371408 - usestringbufferlength now recognize empty literal correctly .
removed error logging statement in RemoteSparkJobMonitor . java to streamline error handling and reduce noise in logs
modified the createDb method to return a connection object instead of void to ensure proper resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , and ListResourcesTest classes to improve code readability and maintainability
hbase - 11858 add off - peak compaction option to hbase . hstore . compaction . max . size
added conditional handling for the " address " field in BitstampDepositAddress . java and created a new test class DepositAddressJSON
replace IllegalStateException with IllegalArgumentException in BufferingResponseListener to ensure proper error handling when capacity is exceeded
updated the method to use ` toAbsolutePath ( ) ` for the ` linkPath ` parameter to ensure that the path is correctly resolved to
updated InvocationFinishedEvent to implement MetricsEvent and changed operationType to InvocationType to enhance metric tracking capabilities and improve thread - safety
refactor network interface retrieval logic to check for multicast support before returning the first one to improve robustness by ensuring only supported network interfaces are returned
removed duplicate code for checking valid checksums in ChangeSet . java to streamline the code for better readability and maintainability
added a clone method to BufferedChecksumIndexInput that throws an exception to indicate that the clone method is not yet implemented
updated return statements in Circle . java to use ` radius ` instead of ` Math . sqrt ( x * x + y * y ) `
added a conditional check for the frequency band identifier before setting it in P25Channel . java to ensure that the frequency band is only set if
replaced ` tapSquareSize ` and ` tapSquareCenterX ` with ` tapRectangleWidth ` and ` tapRectangleY ` to improve
set default _ replicate _ on _ write to false by default
added a lastFillTime parameter to the CryptoFacilitiesAuthenticated and utilized it in the Util class to allow users to specify the last fill
added getDelegate method to TraceCallable and TraceRunnable classes and corresponding tests in TraceCallableTests and TraceRunnableTests to provide access to the delegate
updated Snackbar message handling in FileActivity and added synchronization actions in FileDisplayActivity to improve user experience by displaying relevant error messages instead of
added a new method ` quiche _ conn _ stream _ writable ` in both ` ForeignIncubatorQuicheConnection ` and
added a boolean parameter to the JavaScript context constructor to enable additional functionality in the context handling
removed alignment parameters from TableCell constructors in BaseTextFormattingHelper and TableCell to simplify code and improve readability by using default alignment settings
added a new file ` TracingAutoConfiguration . java ` to configure tracing in a Cloud Foundry application to facilitate automatic tracing configuration
updated the content addition logic in Submissions . java to use a Para for better structure to improve readability and maintainability of the code
refactor ` getPrunedQueryableSegments ` method to accept a list of ` IndexSegment ` and add segment decrement logic to improve code
updated VertxBufferTest . java to improve test coverage to enhance reliability of buffer operations
add a unit test for the hsmf messagesubmissionchunk , a suggest by michael klink
changed access modifier of mContext from private to protected to allow subclasses to access mContext for better
removed unused imports from ShowTablesOperation . java and ShowViewsOperation . java to clean up the code and improve readability
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use it to improve error handling by providing additional context
[ hotfix ] [ runtime ] fix return value of jobcompletionfuture in jobcoordinationservice
updated the ` bitsToHumanReadable ` method to include a new class ` mimeType2HUmanReadable ` and ` bytesToHumanReadable
replaced the instantiation of ` TieredMergePolicy ` with a direct instantiation of ` TieredMergePolicy ` to simplify the code
added a check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is disabled
updated error log message to point to a specific documentation link to improve clarity and understanding of the error context for users
updated loadSettingModels method to accept an InputStream parameter for reference properties to enhance flexibility in loading settings from different input sources
added null checks for incoming fields , TermsEnum , DocsAndPositionsEnum , and LeafReader in FilterLeafReader . java to ensure robust
add default key size provider to jcecmcontentencryptorbuilder and add test for key size
updated IOException messages in NetSocketReader and removed redundant constructors in SoftEndOfStreamException to improve error handling clarity and reduce unnecessary code
remove @ inject injection that be not need and break the build
updated the expected size in BundledDistributionTest from 9 to 10 and added assertions for database users in PostgreSQLTest to ensure tests reflect the correct
[ hotfix ] [ stream ] allow user to specify job name for print and log
updated scale calculation in OverviewState . java to account for two - panel layouts to ensure correct scaling based on the device profile ' s cell
updated IcePlainsBiome class to extend SnowyBiome and modified population logic to improve biome functionality and ensure proper population of
removed unnecessary time zone parameters from methods in StorageUtils and adjusted related logic to simplify time handling and improve performance by eliminating unnecessary time zone
[ wasm ] add isqualified flag to thisreference .
updated regex pattern in XhamsterRipper . java to allow a broader range of URLs to the Xhamster domain to improve
fix infinite loop in glowworld . getentities ( )
hhh - 13564 - oracle dialect should add schema to the table name when it ' s present
fix a syntax error in the flutterconsolefilter ( # 5370 )
added functionality to select and hide the " select all " menu item based on the number of files to enhance user experience by allowing users to select
[ java ] : fix termoffset calculation in network publication .
fix typo in javadoc of guildupdateownerevent
added conditional logic to increment inPortalTicks based on creative mode to ensure inPortalTicks remains within a valid range for creative mode
added support for chart compression in ClusterMonitorTileSkin and updated spacing calculations to improve visual consistency and readability of the chart display
refactor multiple codec template classes for consistency to improve maintainability and readability of the codebase
change variable types from int to long for length calculations in Base64 . java to ensure proper handling of larger lengths and avoid potential overflow issues
removed unnecessary null check for header in renderer configuration to simplify the condition for better readability and maintainability
server : do n ' t allow disk offering change if the service offering be the same
updated imports and refactored order builder in HitbtcAdapters . java to use specific DTOs to improve code clarity and
rename ` idleCount ` to ` consecutiveIdleCount ` and update related logic in ` LLRealtimeSegmentDataManager . java ` to improve
updated the description URI in JRubyScriptEngineFactory from " jruby " to " jrubyscripting " to ensure the description accurately
updated variable name from ' name ' to ' displayName ' in ConfigCategory . java to improve clarity and consistency in variable naming
updated conditional check for exchangeAmount in ParticipateAssetIssueActuator . java to ensure proper handling of negative values for exchangeAmount
removed the infinite loop condition in FeedUtils . java to simplify the code by eliminating unnecessary iterations
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to validate HDF4 file reading and metadata handling
added a new flag ` CALCITE _ 6092 _ FIXED ` and modified time casting tests in ` SqlOperatorTest . java `
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added methods to quiet close all AutoCloseable instances in CloseHelper . java to improve resource management by ensuring all closeable resources are properly closed
updated the confirmation message in RemoveFileDialogFragment to use a common confirmation string to improve clarity and maintainability of the confirmation process
added null checks before drawing images in the Pixmap class to prevent potential NullPointerExceptions when drawing images
replaced ` ReflectionHelpers . callInstanceMethod ` with ` Unsafe . class . invoke ` for invoking the ` defineClass ` method to improve
updated the regex pattern for hostname validation in GUIUtil . java and added comprehensive tests in GUIUtilTest . java to improve accuracy
refactor conflict handling in CachedRowSetWriter to use a long variable for better readability to improve code clarity and maintainability by using
update build script to use pubspec . yaml instead of version . yaml ( # 1181 )
added a check for reference equality in the ReferenceMemory class to ensure proper handling of references when the reference is the same as the current instance
added logic to inject seed files in the URL directory and improved error handling for null pointer exceptions to enhance robustness and provide clearer error
added a condition to check if ` hideOriginal ` is true before setting the visibility of ` originalView ` to ensure ` originalView ` is
make sure maxnodes be always non - negative for unrolled loop
added a check for texture coordinate type before initializing texture data and logging warnings if unsupported to enhance error handling and provide clearer diagnostics for unsupported texture
added error handling for file deletion in EncodeActivity and improved product retrieval in SupplementalInfoRetriever to enhance robustness by logging errors and ensuring
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality by providing seek and close methods for better resource management
updated substring calculation in HandleDAOImpl to use oldPrefixLength instead of locate to improve accuracy of substring handling in the database query
replaced the manual addition of a collection to the convertedValsList list to simplify the code and improve readability
added a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used in favor of a new implementation
added a nightly warning feature to inform users of potential bugs in the Universal Gcode Sender version of the Universal Gcode Sender
modify getresponsessortedbyrecipient to return user _ nobody _ text instead of empty string
update return message to clarify the purpose of the ` throws ` declaration to improve the accuracy of the return message for better understanding of
deleted ` CacheApplication . java ` and refactored ` CommonsApplication . java ` to use ` cacheData ` instead of ` Cache
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future updates
updated RuntimeEnvironment to use ResourcesManager for configuration updates on devices running KitKat and above to ensure compatibility with newer Android versions and improve
added logic to handle the existence of a stack repository update link in the VersionDefinitionResourceProvider to ensure that the stack ' s update link is
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
fix npe in cfmetadata . getindexes ( ) when oldindexname be null
added package imports for internal resolver helpers and readers in CheckPackageAccess . java to enhance package access checks for XML processing
rename ` persist ` method to ` add ` in ` JobRepository ` and related classes to clarify the method ' s purpose in managing
added handling for LoopExitNode in GraphUtil . java to correctly replace loop begin input with the exit node ' s loopBegin input to ensure
replaced RecyclerView with WidgetsRecyclerView and updated related calculations in SearchAndRecommendationsScrollController . java to improve layout consistency and
added a condition to check if the terminal is supported before proceeding to enhance user experience by preventing errors when the terminal is not supported
changed data types from long to int for fiveSeconds and timeAllowed in CloudExitableDirectoryReaderTest . java , and added time limit checks
added session validity check in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure proper session management and improve test coverage
refactor code to handle null values for " columnNames " and compared values to improve robustness by avoiding potential NullPointerExceptions
replaced ` Vector ` with ` ArrayList ` for managing ` RadioButton ` instances to improve performance and modernize the code by using a
updated UserManagerCompat and UserManagerCompatVN to extend UserManagerCompatVM instead of UserManagerCompatVL and UserManagerCompatV
added methods to retrieve database version information in MockDatabase , AbstractDatabase , and HibernateDatabase classes , and updated ReorganizeTableStatement to
refactor ActionGraphCache to utilize MapDifference for better handling of mismatched rules to enhance clarity and maintainability of mismatch information in
added LockDatabaseDesc and UnlockDatabaseDesc classes to the Hive query plan to provide detailed information about database locking and unlocking functionality
refactor RankingTopComponent and RankingUIModel to use setter methods for properties to improve code readability and maintainability by
added handling for disconnect messages based on remote ID length in HandshakeHandler . java and updated logging in NodeImpl . java to improve disconnection handling
added a test method ` testSetDeleteSG ` for setting and deleting storage groups in ` IoTDBAuthorizationIT . java ` to ensure proper
chore ( bazel ) : fix link in proto file to use : : cloud : :
updated type validation logic to handle named variables in method and variable declarations to improve type validation accuracy and provide clearer error messages for missing types
added methods to handle after and before test classes in StepScopeTestExecutionListener to improve test context management during test execution
[ java ] fix validation of buffer ratio for counter manger and tidy up constructor chaining
updated the ` toString ( ) ` method in ` MultiSteps ` and ` SendEmail ` classes to use placeholder syntax to improve logging readability
added cloning functionality for joinKeys in JoinDesc . java to ensure proper handling of join keys during query execution
updated WebAuthnConfiguration to use PrincipalResolver for authentication handler registration to enhance security by ensuring proper principal resolution during authentication
updated ` addSettingsFromFile ` method to accept an ` ImmutableList < Path > ` parameter for search paths in ` XcconfigStack ` to
added ' final ' modifier to several lists and sets in Oracle . java to enforce immutability and improve code safety
[ hotfix ] [ checkpointing ] exclude unaligned checkpoint option from documentation
[ calcite - 2283 ] do not throw unsupportedoperationexception for function ` ` nullsfirst ( ) ' ' , ` `
add compiletheworld . println ( string ) and compiletheworldtest . log ( boolean )
added a check for LocalVariable instances in LambdaRewriter . java to ensure proper handling of non - LocalVariable instances to prevent runtime errors
added support for MySQL in CreateTableGenerator to handle timestamp column types to ensure proper SQL syntax for timestamp columns in MySQL
added context class loader management and cleanup in EnvConfiguration . java to ensure proper resource cleanup and avoid potential memory leaks
added a condition to set the ejection delay when stageNr is zero in the SimulationListHandler to ensure proper handling of motor configurations when
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related test methods to improve clarity and align with
refactor TransactionUtil2 class to improve transaction handling logic to enhance performance and maintainability of transaction processing
updated issuer validation and issuer resolution methods to accept an optional OAuthRegisteredService parameter to enhance flexibility in issuer resolution based on OAuth registered services
added null check for the DocCollection reference in ClusterState . java to improve robustness by providing a clearer error message when the collection is
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in `
added support for foreign database and schema names in ForeignKeyColumn and related classes to enhance functionality by allowing configuration of foreign database and schema names
[ java ] throw aeronexception when an election fail to join the log .
replaced the import of ` shadowOf ` with ` Shadow . extract ` in ` ShadowActivity ` and ` ShadowBluetoothDevice ` to
added error handling for null or empty root in FileSelection . java and introduced a test for DRILL4192 in TestBugFixes
deprecate oninventorytick ( ) in favor of item # onarmortick ( ) .
fix ( export ) : add ` ` war ' ' extension to export .
added null check before calling invalidateOptionsMenu ( ) on getSherlockActivity ( ) to prevent potential NullPointerException when accessing getSherlockActivity (
updated widget binding logic in AppsCustomizePagedView and added options handling in Launcher and PendingAddItemInfo to improve widget management
added capability constants and corresponding constants in EcobeeSensorThingHandler . java to enhance functionality to support additional air quality features
refactor code to improve readability and consistency to enhance maintainability and adhere to coding standards
added environment variables for AAPT and AAPT2 in Genrule . java and updated corresponding tests in GenruleTest . java to support the
do not dump access table if truffle . truffle . branches be set to false .
added null check before disposing of the message to prevent potential NullPointerException when the message is not initialized
changed the db field from private to final in TronStoreWithRevoking . java and modified initialization methods in TxCacheDB . java
updated logging messages in CoreContainer . java to clarify that log watching is not yet implemented for log4j
replaced printStackTrace ( ) calls with fail ( ) for exception handling in CategoryPlotTests . java to improve cloning failure reporting and ensure proper
replaced ByteArrayOutputStream with SmallByteArrayOutputStream and added a check for null to improve robustness and prevent potential NullPointerExceptions during dialing and data
use intmap instead of hashmap to save attribute in vertexbuffer . type instead of string - based map
removed ` territory = en _ us ` from the JDBC connection configuration in ` AbstractDIHJdbcTestCase . java ` to simplify the
changed the type of firstExchangeTimestamp and lastExchangeCompletedTimestamp from Date to Object and added null checks for it to improve handling of null values
updated Javadoc and added new output checks for class implementations in TestHtmlTag . java and TestUseOption . java to enhance code clarity and
updated condition to check if the result is incomplete and contains items greater than 10 to ensure that the completion status is valid before processing items
updated command - line usage and modified time column handling in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and correctness of
updated the output format handling in ` SiteSnapshotVariationsTest . java ` and ` OutputOptions . java ` to correctly determine the SVG file
updated condition in DeviceProfile . java to check for QSB and hotseat bar bottom space to ensure proper behavior when QSB is disabled
add equal and hashcode to animationlist to avoid npe
added a ` _ date ` field and its setter method in ` AbstractGenerator ` , updated header handling in ` HttpGenerator ` , and removed
replaced Adler32 with CRC32 in Store . java to improve performance and accuracy of checksum operations
updated the default value of the XenHeartBeatInterval property from " any # of seconds " to null to allow for the heartbeat
added a new warning constant ` ZERO _ AREA _ FIN ` and modified geometry warning checks in ` FinSetCalc . java ` to improve
remove @ jsonproperty order and use @ jsongenerator for documentmetadata .
hhh - 13814 - support trunc ( timestamp , ' ? ' ) for oracle and db2
added a check for memory pool not found errors in MetricUtils and updated related error handling in MetricUtilsTest to improve error handling and provide clear
updated ` ensureSignedUp ` method to include JavaScript support and improved error handling in ` UserTests ` , ` UserContext ` , and
updated error messages to use ` RUNTIME _ PROTOTYPE _ TYPE ` and ` Types . classNameWithEnclosingNames ( ) ` instead
replace " / generateAnomaliesInRange " with " / replay " in the BACKFILL constant to replace " / generateAnomal
replace instances of new DataWord ( ) with a new DataWord ( 1 ) in the return statements to ensure the code accurately reflects
refactor badge application logic in AllAppsContainerView to use BubbleTextView instead of BubbleTextView to improve code clarity and
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated comments in ResourceService and ResourceHandlerTest to clarify that the context handler starts correctly after the context handler collection is started
[ java ] remove workaround for workspace _ custom draw identifier in cling .
truffle : remove assert that lookupmodule be n ' t null .
updated the method name from ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to ` shadowInvocationWhenChildIsInstrument
updated imports in ItBitDemo , ItBitOrderBookDemo , ItBitTickerDemo , and ItBitTradesDemo to use the updated
ww - 4322 fix npe in profile and scopeinterceptor
made Utils , ApplicationUtils , and Whois classes final and added private constructors to prevent instantiation of utility classes
fix ( regress ) : fix resource leak in regress api
updated serialization and deserialization logic in Util . java to use specific class names for Vector and Hashtable to improve clarity and maintainability of the code
added ` tableNameWithType ` to the warning log message in ` RetentionManager . java ` to provide more context about the retention time being
trim whitespace from the first element of fragmentList before checking its length to ensure consistent length validation by removing leading and trailing whitespace
fix resourcepackfilenotfoundexception on modfile . getfilepath ( ) .
replaced instances of TransformerBuilder . Node and TransformerBuilder . Edge with instances of TransformerBuilder in PartitionToolbar . java to simplify the code and
removed unnecessary condition for showing as grid in RecentsView . java to simplify the scrolling logic for better readability and maintainability
changed the return type of the calculate method from Map < String , String > to BMIViewObject in multiple classes to simplify the method signature
removed the comparator from the thenComparing method in QueryCommand . java to simplify the comparison logic for better readability
adjust damage calculation for block hay bale to ensure proper damage handling for hay bale entities
refactor environment variable handling and improve clarity in WindowsProcessAddressSpace . java , J9DDRImageProcess . java , and New
added support for custom plugin properties in OptionsParser and corresponding tests to enhance configuration flexibility and ensure correct parsing of plugin properties
updated the condition to check if the hashTable is not empty instead of using a null check to improve code robustness by avoiding potential NullPointerException
[ hotfix ] [ table - common ] fix timestamp . of ( ) for non - nanosecond precision
[ java ] do n ' t cache archive context in clusteredserviceagent .
added a condition to check if the compiled state is not modified before proceeding to ensure that the code only executes when the compiled state is not
added image2 and h2 test methods and their corresponding test cases to enable testing of image2 and image2 - related functionalities in the
refactor TogglableFlag to improve default value handling and add listeners for the NAMESPACE _ LAUNCHER namespace to improve code cl
updated logging messages to use placeholder syntax for improved readability to enhance clarity and maintainability of log output
added a condition to return early if the current platform is ANDROID to optimize performance by skipping unnecessary operations on Android devices
use hamcrest assertion instead of junit in examples / integrations / spring - boot - starter - hamcrest -
added new functional interfaces for primitive type predicates in the com . speedment . common . function package to enable functional programming capabilities for primitive types
changed ` getSubsColor ` and ` setSubsColor ` methods to return ` String ` instead of ` int ` and updated related methods to
added a conditional check before deregistering the invocation registry to ensure that deregistering only occurs if the completion operation is successful
replaced the manual frame handling with the output method in AbstractWebSocketConnection to simplify the code and improve clarity by directly using the output method
added a check for the " redirected " flag before starting the WelcomeActivity in LoginActivity and set it in SignupActivity to ensure the
added ShadowCheckedTextView class and its implementation to enable testing of the CheckedTextView functionality in Robolectric
added Serializable interface to ParserState and made several fields transient in AccessorProperty and Property classes to ensure proper serialization of the ParserState class and
added " identrustdstx3 [ jdk ] " to the VerifyCACerts . java file to enhance certificate validation by including
removed redundant settings for TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline the configuration process by elimin
fix a bug where occupant ' s nickname be not parse correctly .
updated QuicSession and QuicConnection to use a consistent context parameter across multiple session classes to improve code consistency and maintainability by standardizing
updated method calls from ` writer . setMergeScheduler ( ) ` to ` writer . getConfig ( ) . setMergeScheduler ( ) ` to
refactor ICU4JImpl and TextPosition to use variable names for better readability to improve code clarity and maintainability by reducing
added handling for ComputedDateValue , ComputedNumericValue , and ComputedDateValue in the AddDefaultValueChange and AbstractDatabase classes to
refactor NbtScoreboardIoService to improve code organization to enhance maintainability and readability of the code
do n ' t try to resolve service provider metadata if it do n ' t exist
make graphprinterdumphandler public so that it can be use by the graphprinterdumphandler
added BigDecimal import and adjusted average price calculation in HuobiAdapters . java to improve accuracy in financial calculations for orders
updated ProjectionOperation and TypeBasedAggregationOperationContext to use Field objects instead of String to improve type safety and clarity in handling projection fields
modified the ` addViewer0 ` method to check if a player is already in the ` viewers ` collection before sending a packet to ensure
added a ` MyConstantState ` class and modified ` FolderAdaptiveIcon ` and ` ShiftedBitmapDrawable ` to utilize it to
refactor connection handling in SPDYClient to use a more descriptive variable name to improve code readability and maintainability by separating
fix protostuffobjectoutput . writeobject ( null ) to avoid npe ( # 9041 )
pdfbox - 4892 : improve code style , a suggest by valerybokov
refactor BarrowmanCalculator to improve code structure to enhance maintainability and readability of the code
added a conditional check to return early if the number of axes is not shown to improve performance by avoiding unnecessary calculations when the number is not
replaced direct calls to setFilter and setWrap with unsafeSetFilter and unsafeSetWrap methods to improve safety and prevent potential issues with filter
updated the returnToWorkspace method call in XmlWorkflowServiceImpl . java to ensure consistent handling of workspace item retrieval
refactor SSL connection handling in CustomUrlJob . java and add a new class CustomUrlTrustEverything . java for SSL trust management to
updated clock rate retrieval methods to use ` getRealUsedClockRateString ( ) ` instead of ` getClockRate ( ) ` to improve cl
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
updated the method to return the module name instead of the product name and added a method to set the module name in the AppleLibraryBuilder
added locking and unlocking around the release process in TestSlot . java to ensure proper resource management during the finishReleaseProcess process
# 156 - fix for # 156 - allow findids ( ) to work with id list
updated WebSocketServletRFCTest to use a ByteBuffer instead of a close frame to improve readability and ensure correct response header validation
[ wasm ] fix memory leak in native - image .
simonstewart : add ttl to sql query for log collection ( # 2297 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified related methods in CustomChangeWrapper and CustomPreconditionWrapper to
updated DeploymentExceptionTest to use Jetty ' s Server and HandlerCollection for improved server management to enhance test setup and teardown functionality for better
added error handling for Fresco initialization in CommonsApplication and NearbyController to improve robustness by catching potential exceptions during initialization
modify return statement to handle null and empty object names more gracefully to improve robustness by avoiding potential NullPointerExceptions
updated exception message from " could not find file " to " could not open file " in Command . java and TestPrint . java to improve
[ hotfix ] [ table - planner - blink ] make planner and executor class constant
updated variable names and logic in KeyTool . java for clarity and improved subject name handling to enhance code readability and ensure proper subject
added a deprecated annotation to the RuntimeOptions class to indicate that the class is outdated and will be removed in future versions
replaced byte encoding with direct byte retrieval for string encoding to simplify code and improve performance by avoiding unnecessary byte conversion
added a new interface ` PermissionEvaluator ` in the ` org . springframework . security . expression ` package to provide a mechanism for determining permission
added handling for the ` ERASE _ LINE _ ON _ FINISH ` option in the ` LineReader ` and ` LineReaderImpl `
added a condition to check if the server name does not already exist to ensure that the server is not marked as online when it does not already
replaced instances of SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ SIGN _ ERROR across multiple
refactor expandwar to use urlconnection instead of juc . getjarfile ( )
fix ( netty ) : improve error handling in defaulthttpclient and fullnettyclienthttpresponse
changed Container initialization from center to centerAbsolute in Picker . java to ensure the spinner is centered within its absolute position
[ hotfix ] [ network ] fix the issue of interruptable buffer request in networkbufferpool
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve code clarity and ensure proper cleanup of MBeanServer
replaced the JUnit runner annotation with a RetryTestRule in AbstractIT . java to improve test reliability by utilizing a retry mechanism
updated the auto - commit logic in CallTask and QueryStateMachine classes to use required transaction ID instead of a static auto - commit flag to
added package - info . java and reformatted import statements in CsvFieldType . java , CsvTable . java , and CsvTableScan . java
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ stream ] use lambda instead of anonymous class
refactor URI handling in Request . java and add a test for CONNECT requests in RequestTest . java to improve code readability and ensure correct
updated storage point retrieval methods in MainApp and WhatsNewActivity to use legacy available storage points to improve compatibility with newer Android versions and enhance
added methods to handle session availability and unavailability in SessionManager to improve management of client sessions by updating their priority and status
added " liquibase . pro " package to scan for " liquibase . pro " in ServiceLocator . java to enable scanning
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider ` to simplify the method signature
updated the ` loadWithNewGlobal ` method to accept an additional argument list to enhance functionality by allowing multiple arguments to be passed during global loading
updated variable names from ` startIdx ` to ` startIdx ` for consistency and clarity to improve readability and maintainability of the code
replace ` length ( ) ` method with ` toIntExact ( ) ` for ` footer ` and ` stream ` in ` HiveClientModule .
updated method names from ` isExceedRandomizationDepth ` to ` hasAlreadyRandomizationDepth ` across multiple classes to improve clarity and
added support for function support for LEAD and LAG in UnsupportedOperatorsVisitor . java and a corresponding test in TestWindowFrame . java to
clear the proxy request headers in AbstractProxyServlet to ensure no existing headers are retained during proxy requests
added a conditional check in CompressedClassSpaceSizeInJmapHeap to skip tests when SA attach is not expected to work
added null check for bgColor before checking its alpha value in GraphicsDevice . java and created a new TranslucentWindow class for testing window
added a condition to check for null user information before displaying an error message to improve user experience by preventing null pointer exceptions when user information is
added custom field behavior and serialization methods for PrecompiledHeaderData to ensure compliance with machine - specific requirements for precompiled headers
[ hotfix ] [ table - common ] fix append mode in kafkatablesinkfactorybase
added a new integration test class ` MultipleOutputsIntegrationTest ` to validate the functionality of named outputs in multiple scenarios to ensure that named outputs can
updated regex pattern and added content replacement logic in FileSettings . java to improve regex accuracy and maintain consistency in content formatting
nifi - 7271 : fix npe in statelessvalidationcontext and statelessflow ( nifi - 7272 )
replaced instances of new Object [ ] with ArrayUtils . EMPTY _ OBJECT _ ARRAY in BinaryCipherExecutorTests . java to improve code readability
added a persistent taskbar mode switch annotation to the TaplTestsQuickstep class to allow the taskbar to be displayed in persistent mode
added new device status entries for leaving dock and energy save mode in DeviceStatus . java to enhance device status management for improved user experience
improve error message when item model be load from blockstate or normal location
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
fix ( gl ) : do n ' t call window . getcurrentsurfacescale ( ) for 2x
refactor RussianLowerCaseFilter class for improved readability to enhance maintainability and clarity of the code
replaced the creation of server and client properties with an empty property map in CsvBulkLoadToolIT . java to simplify configuration handling and improve
replaced ` File . separatorChar ` with ` _ ' ' in the displayName string to ensure consistent file path formatting across different operating systems
add a resettableinputstream to allow wav file to be seek .
added support for repeating first line indentation in ColumnText to enhance code readability by allowing users to choose whether to repeat the first line indentation
cast the Oid object to Object for equality check to ensure type safety and prevent potential ClassCastException during comparison
move initialization of metric , health check and metric tracker factory from pool to pool
replace controlflowanchornode with controlflowanchored in loopex
added a line to set the focus of buttons to false to improve the visual appearance of the buttons by removing focus
added additional type checks for UniqueConstraint , PrimaryKey , and ForeignKey in DatabaseSnapshot . java to ensure proper handling of primary key and foreign key
added a deprecated method ` getAccountLedgersWithParams ` in ` KucoinAccountServiceRaw ` and a corresponding API endpoint in ` AccountAPI
[ ds - 3952 ] add check for dc . title in group rest to avoid nullpointerexception
do n ' t throw an error if there be no word in the hypothesis since we do n ' t have any
added unit test base on user forum issue
updated thread configuration from background to database update in FeedRefreshUpdater . java and added getter and setter methods in ApplicationSettings . java to allow for
updated FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 in RecyclerViewFastScroller . java to increase the fast scrolling threshold
replaced ` MetaUtil . toInternalName ( System . class . getName ( ) ) ` with ` " Ljava / lang / System
hhh - 13644 fix npe in getstoredprocedurequery . getresultstream ( )
added a null check for API properties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing configuration properties
added BinaryFrameGenerator and TextFrameGenerator classes to handle binary and text WebSocket frame data to enhance WebSocket frame generation capabilities for better data handling
danielwagnerhall : wait for element to be fully load before run test .
refactor random geographic coordinates and radius generation logic in RandomGeo3dShapeGenerator . java to improve randomness and accuracy of shape generation
added a keepAlive method with a ClassLoader parameter to the ResourceBundle class to improve resource management by ensuring the ClassLoader is garbage collected before use
changed the return value from false to true in SQLiteDatabase . java to enable a successful operation for database operations
fix bug report for jsr166 lock monitorenter on java 8
added MkdirStep import and commands to multiple classes to set the parent directory for output files to ensure that the output directory is created when necessary
updated alignment checks and error messages in MeshLeveler . java to improve clarity of alignment errors and enhance error reporting
[ drools - 5021 ] avoid kie - pmml parse and compilation when jpmml be not available ( # 364
replace locationMode with thermalStatus in ShadowPowerManager . java to improve clarity by using a more descriptive variable name
added support for macOS temporary directory creation in MountableFile . java to ensure compatibility with different operating systems for temporary directory creation
( chore ) camel - catalog : do not cache memory map on window
added a check to ensure plugis have an organization in the pom . xml file to prevent runtime errors due to missing organization configuration
updated contributor license information in SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to the functionality is no longer needed in the application
updated the argument passed to executeChildProcess to use the system ' s Java class path to ensure the child process executes with the correct Java class
replaced usage of ArrayUtils . EMPTY _ BYTE _ ARRAY with default byte arrays in KM200Device . java to improve memory efficiency by avoid
added a test method to ` AddLicenseHeaderTest ` to verify Javadoc changes to address issue # 3198 and improve code clarity
changed the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the launcher for 3 - phase simulations
added a div ` < div class = ' noPrint ' > ` to the HTML output in ` HtmlThreadInformationsReport . java `
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and added LUCENE _
added macos - specific variables for symbolicator and task handling in BsdDebuggerLocal . java and modified platform detection in PlatformInfo . java
fix memory leak in fmlclienthandler and fmlindexedmessagetobridge
improve error log for connection reset by peer
[ java ] use the default admin buffer if none be specify .
added a break statement in TouchImageView . java to ensure proper flow control in the code execution
chore : bump gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
http : / / issues . apache . org / jira / browse / amq - 3833 - remove unnecessary flushonsslhandshake
added handling for ` java . lang . Object ` and ` java . lang . GenericTypeVariable ` variance checks in ` TypeUtils . java
replaced NonBlockingHashSet with ConcurrentSkipListSet in memtablesPendingFlush to improve performance by avoiding blocking operations
added null check for ` tree . errs ` and updated error handling logic in ` MemberEnter . java ` , and introduced new classes ` Err
replaced ` SWT . NO _ BACKGROUND ` with ` SWT . NONE ` in the ` Browser ` initialization to ensure consistent browser behavior
updated the negative button callback from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to
[ java ] add test case for integerstamp . div ( int , long ) .
refactor image loading to use a readStream method to improve code readability and maintainability by encapsulating image reading logic
added methods to manage variable declarations and undefines in the SwitchCompiler and modified the CaseStmtToken class to enhance variable handling capabilities and improve
added error handling for cipher initialization in RSAClientKeyExchange . java to improve reliability and debugging during handshake failures
added " psapi . lib " to the AdditionalDependencies attribute in WinGammaPlatformVC10 . java to ensure compatibility with the psapi library
updated string formatting in StringUtilsTest to use the system ' s line separator to ensure consistent line endings across different operating systems
added compatibility improvements and updated default encoding settings in TemplateEngineFreemarker . java , and modified malicious JavaScript string in
refactor byte array handling in CRDGeneratorTest to use String . valueOf for clarity to improve readability and maintainability of the code
make field in samplerenderfactory non - static so they can be reuse
added a conditional check for the emailable reporter before adding it to avoid potential NullPointerExceptions when the system property ` ` testngEmailableReporter
added support for quoted quotation marks in CommandLineBuilder to ensure proper handling of special characters in command - line arguments
removed the ` public ` access modifier from multiple interface and class declarations in several Java files to enforce encapsulation by restricting visibility to the interface
added a line to set the number of reduce tasks in FreeGenerator . java to ensure that the job uses the correct number of reduce tasks for
fix : handle default value for object field in generated schema .
updated the FILEVERSION constant from " 505365 " to " 532077 " in SaveService . java to reflect the latest version
updated texture extension checks from " texture _ float " to " OES _ texture _ float " and added GL _ ARB _ texture _
add write ( ) and closefile ( ) method to fileserver to allow for concurrent writing
added a conditional check for outputDirectory and jarStream before setting the output directory to ensure output directory is set only when both conditions are met to improve
replace direct execution of ` getFuture ` with performance measurement using ` PerfStatsCollector ` to improve performance tracking during database operations
replaced ` getCurrentJDKTool ` with ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java ` and
add a new enum resourceerrorhandling to make the code easy to read
added buffer position validation in RAMInputStream and implemented EOFException handling in TestRAMDirectory to ensure buffer position is within valid bounds and improve error handling
updated error handling in DefaultServlet and JspServlet to include additional context for missing resources to improve error reporting for better debugging and user feedback
updated ForkJoinPool and ForkJoinWorkerThread to include an innocuous flag and modified access control context handling to improve thread management and
updated CHECK _ EVERY _ N value and added logging for memory checks to improve memory management and enhance debugging capabilities
hbase - 15956 addendum remove redundant call to hregion . openhregion ( )
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when accessing currentSelectionArea
added a parameterized test for JAAS demo in DemoModulesTests . java to enable testing of Jetty environment configurations for both HTTP and
added a condition to check if spanX and spanY are 1 before creating a folder in CellLayout . java to ensure folder creation only occurs
refactor CacheOffHeap class implementation to improve performance and maintainability of the code
improve error message when try to create a table that depend on another table
added checks for row and column indices before parsing values in TiledLoader . java to avoid potential errors when processing XML gid values
made setWorkingSet method synchronized to ensure thread safety when modifying the working set
added a new file ` Solution . java ` that implements a solution for integer mathematical operations to implement a solution that processes input based
feat ( tracker ) : add an addresschecker to check if an address be bad
fix rendertype = = rendertype . getTranslucentmovingblock ( ) in forgehooksclient
fix ` ` default : ' ' tag in config element cause error
changed the data type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType . java ` and updated related
added null check for recieptents before sending email and changed time conversion from seconds to milliseconds to improve error handling and ensure accurate time representation
refactor single result check into a separate method to improve code readability and maintainability
refactor DockerClientFactory to add a failFast parameter and update logger usage in RemoteDockerImage and ImageFromDockerfile classes to improve client
added a resourcesMode parameter to the AndroidMetadata constructor and updated perfStatsCollector to include it to enhance the metadata handling by incorporating
fix for http : / / issues . apache . org / activemq / browse / amq - 2806 - use calendar instead
replaced ` importProject ` method with ` importProjectCore ` in ` OpenAndroidModule . java ` to utilize the new project core
added error handling for CommandFailedException in LiquibaseCommandLine to improve user feedback during command execution
refactor TreeMap class to improve code readability to enhance maintainability and facilitate future updates
added methods to enable or disable asynchronous stack traces in the Display class to enhance debugging capabilities for exception handling
added a method to set the glow color in BubbleTextView and updated Folder to use this color to enhance visual feedback by allowing custom
set style class for link and description in LinkedFilesEditor to ensure consistent styling for better readability
added a new table " alltypes " and a test method for class name matching in ResultSetMetaDataTest to ensure correct class name matching for boolean
removed unnecessary IOUtils . deleteFilesIgnoringExceptions call in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java to stream
added null check for _ info in HttpConnection . java to avoid potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a provider string to facilitate the initialization of ShadowLocation with a specified provider
added a condition to check if deviceRam is less than 2048 to ensure maxRAM is not set to a minimum of 2048 to prevent
add local map stats when there be no data
added logging capabilities to FileProfileActivator by implementing LogEnabled and enabling logging for file activation checks
pdfbox - 4892 : fix typo in pdfwriter ' s addtobody method
make guildimpl . getroles ( ) return a set instead of an array to avoid concurrentmodificationexception
updated the maximum number of uploads from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to
added tests for the ` delete ` method in ` DashboardUserMapperTest ` to ensure that the ` delete ` method behaves as expected and
rename recipient to primaryparticipant to avoid confusion with recipient
sulong : fix a bug in llvm ' s getauterefhandle ( ) .
added a method to retrieve the buffer size in BufferedIndexOutput to provide external access to the buffer size configuration
added usage help auto - width and description for the ` -- headless ` option in the ` terasology ` command to provide users with
updated action bar title setting logic and added text updates for old and new interactions in DrawerActivity . java to enhance user experience by providing clear
updated CommandLineParserTest . java to improve test coverage to enhance reliability of command line parsing functionality
added interpolators for all apps transition effects in QuickstepAtomicAnimationFactory and updated visibility control in PortraitStatesTouchController to improve animation
updated method to use ` javaNameFromExternal ( externalName ) ` instead of ` toUnderscoreSeparated ( ) ` to improve clarity and
removed native methods for setting and releasing frames in CWrapper . java to streamline the codebase by eliminating unnecessary native methods
added constant value checks in mmm Checker and created a new ValueTest class to ensure that only valid constant values are allowed to prevent errors during
refactor MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen classes to improve code organization and maintainability
removed unnecessary null check for constructors in PojoUtils . java to simplify code by eliminating unnecessary null checks
refactor JiraConfiguration class for improved clarity to enhance maintainability and readability of the code
updated string concatenation from " [ FAILED ] " to " ( COVERAGE ) " in UploadBuild . java to improve clarity of error
updated bounds settings in DeviceProfile . java to include search bar offset to ensure proper layout by accounting for the search bar offset
fix ( pulseaudio ) : disconnect if idletimeout = 0
refactor code to run the UI thread for launching the RecentsActivity to improve UI responsiveness and avoid blocking the main thread
added a method to retrieve the source group and its associated ImmutableList in AppleSource . java to ensure proper handling of optional source groups and improve
increased the timeout duration for the triggerFiredLatch await method from 60 seconds to 30 seconds to allow more time for the trigger to
updated variable names from outputPositionCount to positionCount in FloatSelectiveStreamReader . java to improve clarity and consistency in variable naming
improve abstractnodecostsearch . getcostfromstartsq ( ) to return an optional . empty if the distfromstart square be
added a condition to skip processing for " com . codename1 . ui . Form " and " com . codename1 . ui .
replaced ` UiThreadHelper ` with ` LauncherModel ` for background processing in ` DragView ` and ` FloatingIconView `
added a null check for commitPoint in ReplicationHandler . java to ensure it defaults to the latest commit when none is provided
added unit tests for IMEI and MEID functionality in ShadowTelephonyManager to ensure correct functionality of IMEI and MEID
added debug logging for HTTP requests in SimpleHostRoutingFilter to improve traceability and debugging capabilities for HTTP requests
added ` destory ` methods to ` OfflineResourceDataManager ` , ` IndexSegment ` , and ` BitmapInvertedIndex ` classes to
[ issue # 5342 ] fix normalmessagesendandreceiveit to work with message queue ( # 5343 )
replace Charset with StandardCharsets for UTF - 8 encoding to improve code readability and maintainability by using standard charset constants
hbase - 17403 bulkloadhfiles should not fail if there be multiple file for a region ( chunhui )
added a nullable ` commission ` field to ` DefaultWithdrawFundsParams ` and updated its usage in ` RippleWithdrawF
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and improve readability
consolidated exception handling in LoadSolrBuilder and SolrLocator to improve code readability and maintainability by reducing redundancy
added error handling for abstract overloaded methods in Java2TypeScriptTranslator to ensure proper invocation of abstract overloaded methods and prevent runtime exceptions
added StacklessLogging for file session handling in TestFileSessions . java to improve logging control and ensure proper resource management
added serialization support and changed variable declarations in ` Entities . java ` and ` MutableColumnDataType . java ` to ensure compatibility with serialization and improve
renamed SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added null check for claimRequestString before parsing to prevent potential NullPointerException when claimRequestString is null
updated HiveFilterSetOpTransposeRule to use HiveRelFactories and RelBuilderFactory instead of FilterFactory to improve flexibility and maintainability of
updated ` processTypeHintForNestedDocuments ` method to handle null source cases and added unit tests for null values in ` UpdateMapper ` to
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest . java and added a new method in CoreAdminRequest
fix potential npe in moddirtransformerdiscoverer
fix checkstyle violation in abstractquerydslprocessor
fix a bug in the PEGraphDecoder class to display the call stack .
replaced instances of ` setOf ` with ` copiedSetOf ` in ` RestTemplateBuilder . java ` to enhance clarity and maintain
camel - 17763 : camel - mail should use objecthelper to generate unique id for the mail message .
resolve http : / / issues . apache . org / activemq / browse / amq - 2636 - avoid nullpointerexception
updated return statement to check if the identifier is a property name to ensure that the identifier is correctly identified as a property name
add ` ` wave generator ' ' activity to make it easy to open the chat window .
added logging functionality to KeyedProperties and modified sheet retrieval in SheetOverlaysManager to enhance error handling and provide feedback when a sheet does not
test ( kubernetes - client - api ) : add test for log and exec functionality
added a test method to verify that no index is detected in the MockDirectoryFactory and created a new one in TestReplicationHandler to ensure proper
add miss call to super . dispatchmethodKernelOkra in graalKernelTester . java
updated DefaultDnsClient and DefaultMxRecord classes to use generics and added sorting functionality to improve type safety and ensure records are processed in the
refactor thread creation in XToolkit to use a privileged action for improved readability to enhance code clarity and maintainability by
added validation and selection of " Linux6 " in SelectBox and UITest classes to ensure proper functionality of the dropdown based on user input
replaced IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error handling by printing stack trace instead of throwing an exception
added a parentSplit parameter to the createState method and updated related logic in FlowBuilder and SplitState classes to improve flow management by associating
changed the ` connectionState ` variable to be ` volatile ` and updated its retrieval method to ensure thread - safe access to ` connectionState `
change the default poll trigger to 1 second ( # 8751
refactor memory allocation and encoding methods in MemoryStack and MemoryUtil classes to improve code readability and maintainability by reducing redundancy
added exception handling for IOException and DocletAbortException in HtmlDoclet and AbstractDoclet classes to improve error handling and provide clearer context
fixed false positive with unused modifier in enum
replaced lambda expressions with method references for improved readability to enhance code clarity and reduce verbosity
added ssl = { 0 } to the @ parameterized . parameters in abstracthttpclientservertest
updated exception handling in TransformationHelper . java to provide more informative warning messages to improve error handling clarity and provide more informative log messages
updated userPermissions to activeConnectionPermissions in ActiveConnectionRESTService . java to ensure correct access control for active connections
replaced manual equality check with Apache Commons Lang ' s EqualsBuilder for better readability to improve code maintainability and reduce boilerplate
modified the process method to handle null outputRoot when outputRoot is not provided to improve robustness by preventing potential NullPointerExceptions when outputRoot
pdfbox - 2576 : add an annotationfilter interface to make it easy to filter out non - interactive annotation
refactor StackTraceCleaner class for improved readability to enhance maintainability and facilitate easier debugging
added handling for CSS and JavaScript file extensions in the PluginServlet to improve content type management for CSS and JavaScript files
hhh - 13504 skip test literal in select expression for oracle and sql server
updated the parameter name from ` slot ` to ` slotSize ` and modified the upgrade logic in ` ForkController . java ` to improve cl
added ` getStats ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , ` ContextImpl ` , and ` DocBuilder `
[ scb - 2662 ] [ kie - server ] allow long polling of kieservice to be wait ( # 3
added accessibility support and refactored gesture handling in the launcher to improve user interaction responsiveness and maintainability of the scrolling functionality
replaced the instantiation of ` unlocks ` in ` UI . java ` and added a new button in ` PausedDialog . java `
clear drop event during drag - and - drop events to ensure all drop events are cleared before processing new data
added a default parameter named inputName in StreamResult . java to provide a default value for input name in the application
changed the exception type from MalformedURLException to IOException in the testNormalizeOrder method to improve error handling by using a more specific exception type
updated the output format in TsFileSketchTool and added a line to skip the PlanIndex in LocalTsFileInput to improve clarity of
added functionality to exclude specific headers from the Umbrella header processing to improve header management by excluding specific files from processing
renamed ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java ` to improve
added encode ( ) method to RequestPlugin . java to enable proper handling of special characters in requests
added support for DB2 dialect in the RolapNativeSql and RolapNativeTopCount classes to ensure proper handling of floating - point expressions
hive - 16422 : ldap authentication should throw an exception when password be null or blank ( siddharth seth , review
pdfbox - 4892 : remove unnecessary boxing , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure that complex writers are reset before processing new data
added @ SuppressWarnings ( " serial " ) annotations across multiple Java files to suppress serialization warnings for non - serializable classes
removed the ` public ` modifier from the ` ClassGraphClassLoader ` class and updated the null check for ` classInfo ` to improve encapsulation and
added a check for the name " _ errors " and modified the return statement in ErrorResponseException . java to improve error handling and provide clearer
added a constructor to the EventSourcingRepository class that accepts an AggregateModel and an EventStore to facilitate the initialization of
refactor symbol definition logic for binary nodes in mmm Attr . java to improve code clarity and maintainability
updated text formatting in SearchedPeopleCursorAdapter and QustomDialogBuilder to handle empty search text to improve user experience by providing clearer
enable standby mode by default ( # 1463 )
tmi - tiff : use chunky image for planar configuration instead of extension
close itemlisttag on close ( ) to prevent resource leak
added average util class to make it easy to calculate average value .
added two new classes SigInt and SigIntBarrier for signal handling to provide a mechanism for signaling interruptions during concurrent execution
refactor GEXF ExporterGEXF to utilize HierarchicalGraph and EdgeIterable for improved edge handling to support both hierarchical and
replaced byte buffer with Text for null handling in TCTLSeparatedProtocol . java to improve memory efficiency and error handling during string
[ # 8368 ] rubric question and response : fix index out of bound exception ( # 8369 )
updated the condition in CatalogComparator to use CatalogAndSchema . CatalogAndSchemaCase . ORIGINAL _ CASE instead of DB2Database to
renamed setUp methods to closePreviousWebdriver and added startBrowserMobProxyServer and stopBrowserMobProxyServer methods to improve cl
bugfix : use integer . tostring ( int ) instead of string . tostring ( int ) in criticalerror
removed redundant reset ( ) call from mTextWatcher in InPlaceEditView . java to streamline code by eliminating redundancy
updated the implementation of InternalByteArray and TruffleString classes to improve performance and maintainability of the code
[ hotfix ] [ graph ] update outedgesfunction to use vertex instead of tuple3
refactor and rename Java assertion classes for consistency and clarity to improve maintainability and readability of the codebase
deleted the file ` mmm Class Á . java ` and added a new file ` ppp DiacriticTest . java
[ java ] replace CountDownLatch with CyclicBarrier in ClusterMembershipTest . java to improve test reliability by utilizing a more
added error handling and improved workspace reader retrieval in DefaultMaven . java and modified project collection checks in DefaultGraphBuilder . java to enhance
updated SSL scheme comparison from ` startsWith ( " https " ) ` to ` equals ( " https " ) ` and modified IP port assertions in
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to encapsulate servlet initialization checks to improve code readability
added logging functionality to track server time expiration in BinanceExchange and BinanceBaseService to improve debugging and monitoring of server time changes
added a condition to check if the binding starts with " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.
modified the deregisterAnimated method to check for a valid Form before deregistering it to improve robustness by avoiding potential null pointer exceptions
modified the ` decodeResource ` and ` decodeByteArray ` methods to accept ` BitmapFactory . Options ` instead of creating new instances to improve flex
[ java ] use executor instead of execute for example to reduce execution time .
added click handling and linkification functionality to the tweet holder in TimelineArrayAdapter . java to enhance user interaction by allowing click actions and impro
added " text " to the list of supported data types in PostgresDatabase and modified conditional logic in NumberType and ColumnSnapshotGenerator to support
refactor entryprocessorbouncingnodetest . testentryprocessorbouncingnodestest ( # 3683 )
updated state checks from isHardDeletableState to isRemovableState in AmbariManagementControllerImpl . java and adjusted related error messages
[ mielecloud ] fix npe during bridge reconfiguration ( # 9041 )
nutch - 1343 : add synchronization to crawlserver . updaterobots to ensure thread safety
refactor displayName retrieval in multiple classes to use a local variable to improve code readability and prevent potential null pointer exceptions
added a default shader parameter to the SpriteBatch constructors and updated shader creation logic to allow for better customization of shaders when no
added synchronous commit option to properties in TestUtil . java to ensure synchronous commit functionality is enabled during tests
added type coercion functionality to the SortedSetTypeCoercer class and updated the implementation of the fillSortedSet method to prevent duplicate elements
refactor file removal confirmation logic to use conditional logic based on whether the file is a folder or not to improve clarity and maintainability of
added a check to ensure the character is within a valid range of 256 to prevent potential index out of bounds errors
modified the way fragment storage is registered by using a dynamic port based on the current time to improve flexibility by allowing dynamic port assignment for fragment
removed the expectation for cluster retrieval in HostResourceProviderTest to ensure that the cluster initialization returns an empty map instead of null
[ hotfix ] remove unused logger from yarnentrypointutils . loadconfiguration
make the border size and style in the gui more user - friendly
removed ShadowHtml class and updated HTML assertions in HtmlTest to simplify the codebase and improve test accuracy
added a new class ` StarTreeRecordStoreFactoryBlackHoleImpl ` that implements ` StarTreeRecordStoreFactory ` to implement a
updated logger initialization to use " org . eclipse . jetty . http3 " and " org . eclipse . jetty . qu
changed the access modifier of the addListeners method from private to public in MockSettingsImpl . java to allow external access to the addListeners method
[ hotfix ] [ javadoc ] fix checkstyle violation in statehandlestore
updated imports in HttpAuthMethodPriorityTest , HttpBasicAuthComponentConfiguredTest , and HttpBasicAuthTest to use the correct Constraint class to ensure compatibility
add more information to the error message when student can not edit a team in multiple section
try - with - resources : use try - with - resources to close stream
( chore ) camel - jbang : fix camel - 1145 port not be able to obtain it port
added a new ` libraryTarget ` field and refactored jar parameter retrieval methods to improve code clarity and maintainability by centralizing jar
remove ' # validating - cerficates ' from trust manager message
bug 10629 : do n ' t override getpagesizeval in listcapacity api
added a case for CLOSED in IteratingCallback . java to handle the CLOSED state gracefully
added an ` isAuthorized ` boolean to the ` AccessControlContext ` class and implemented a method to determine if an access control context implies creation of
refactor OSGiDeployer to check if the application is an AbstractOSGiApp before sending a DEPLOYING _ EVENT to
added support for tiff codec in DLNAMediaInfo to ensure proper MIME type is set for tiff files
refactor variable names and initialization for clarity in OptimizedCallTarget . java to improve code readability and maintainability by using more d
added a new file ` CubocDesktop . java ` and modified the ` Map ` and ` ImmediateModeRenderer20 ` classes to
updated file paths in PolicyMonitorTest to use the target directory instead of the test resource directory to ensure tests are executed in the correct directory for
added a call to removeAllFiles ( ) in TrashbinActivity to reset the trashbin list to ensure all relevant files are removed from the
replaced ` org . eclipse . jdi . Bootstrap . allConnectors ( ) ` with ` com . sun . jdi .
sulong : add checkglobalvariablestoragestoragenode for check global variable .
updated the ` createLauncherEvent ` method to include ` Intent ` as a parameter and utilized it to enhance event handling by incorpor
make burningmanpresentationservice respect max burn amount limit
updated imports and modified the snapshot object method in UniqueConstraintSnapshotGeneratorSnowflake . java to improve clarity and functionality for snapshotting unique
refactor item assignment logic in DMLTransformer . java to handle empty insert statements more robustly to improve code clarity and ensure correct selection
updated import statements and changed PGT URL from HTTP to HTTPS in ServiceValidateControllerTests . java to enhance security by using a secure HTTPS URL
modified the ` getDefaultValidFunctionName ` method to include a ` isStatement ` parameter and improved handling of default function names to enhance function name
refactor JarLauncher to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix unchecked warning in java . util . concurrent
fix a classcastexception when send hole punch packet to a call peer that do n ' t have a call peer .
added tests for updating PGobject objects in ResultSetTest . java to ensure correct functionality of date updates in PostgreSQL
updated password reset endpoint to return an UNPROCESSABLE _ ENTITY when the user does not have a UAA origin to ensure proper error handling for
updated the way propertiesElement is retrieved in XMLUtils . java to improve clarity and accuracy in obtaining the document element
refactor caching logic in Cache . java to improve performance and maintainability of the caching mechanism
rename timeInSec and prevTimeInSec to timeMillis and prevTimeMillis in Isochrone and SPTResource classes to improve cl
fix a crash when light relay be in the wrong place . close # 182
added a new class ` Chainer ` and modified ` CollectionSubject ` to use it to enhance the functionality of ` contains ` and ` contains
refactor Model class to improve code structure to enhance maintainability and readability of the code
updated the calculation of recordedTime in Locations . java to ensure accurate addition of 1024 weeks to the recorded time
added a condition to resize the status if the terminal is Windows to ensure proper display of terminal status when running on Windows
updated the code to conditionally set the host version state to INSTALLED based on its state to ensure that the host version state is only set
move jre _ bundle _ deploy . jar to a separate directory to avoid conflict
updated collections from HashSet to LinkedHashSet in multiple Java files to maintain insertion order and improve consistency in artifact handling
remove unnecessary try / catch block , a suggest by valerybokov
reformatted the code for better readability in KnativeEnvironment . java to improve code clarity and maintainability
updated the thread pool name from " commitlog _ archiver " to " CommitLogArchiver " to standardize the naming convention for the
added a ` connect ( ) ` method to ` CloudSolrClient ` and a corresponding test case in ` TestCloudSolrClientConnections ` to
synchronize access to the allbindings collection to prevent concurrent modification exceptions
added methods to clear files and cache in ShadowContext and refactored file handling in RobolectricTestRunner and ShadowContext to improve
added LinkedHashSet and TreeMap to SecureXStream and modified styles handling in XStreamPersisterTest to ensure consistent ordering of styles and improve style management functionality
when build a kiemodule , store the kiemodulemodel in the kiehelper instead of write it to the kie -
modified the way soil - dry logic in BlockEventListener to handle Farmland instances more accurately to improve the robustness of soil dry
added a default method ` getLocalIp ( ) ` that returns ` null ` to provide a default implementation for the ` getLocalIp ( ) `
updated JdbcStepExecutionDao to use serialization for OBJECT _ VAL and added a new test for storing integer execution contexts to improve serialization handling and ensure
updated comments for clarity and corrected grammatical errors in multiple Java files to improve code readability and maintainability
add ` - python - gpu ` and ` - python - gpu ` to the ` preloadresource ` of ` python ` and ` python -
refactor PluginTab to use a dedicated refresh method for displaying download plugins to improve code readability and maintainability by reducing redundancy
changed log level from info to warn for reloading and saving history files to enhance visibility of log messages for better troubleshooting
fix npe in vmwarestorageprocessor when vm be n ' t attach to a vm in the data center
camel - 10568 : camel - sftp should stop sshd in stop ( ) instead of just stop ( )
updated ExperimentalMockitoJUnitRunner . java file to improve test functionality and maintainability
added a method to retrieve the build serial ID and updated summary handling in GpsSettingsActivity , Session , and Utilities classes to improve code cl
rename SwapGBuffers class for consistency to improve code readability and maintainability
added null check for spatial before removing the skeleton control to prevent potential null pointer exceptions when spatial is not initialized
added a test for setting smart replies in ShadowRankingTest . java and replaced ReflectionHelpers with a reflector in ShadowRanking . java to
[ java ] do n ' t call archive . list ( ) when it ' s not necessary .
simplified the retrieval of the carrot2ResourcesDir in CarrotClusteringEngine . java to improve code readability and maintainability
added null check for testRect in WindowsTreeUI and implemented a new class for bug8004298 to address potential null pointer exceptions during
updated ASM _ API _ VERSION from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to reflect the
pdfbox - 4892 : throw a tasteexception instead of return null , a suggest by valerybokov
added client information to SurrogateAuthenticationEventListenerTests to ensure proper client information is utilized during tests
added a isUserView variable and initialized it to false in CardPresenter . java to ensure user view state is correctly initialized before use
refactor ` DiagramRenderer ` and ` GraphvizJavaExecutor ` to use ` GraphvizUtility ` instead of ` DiagramOutputFormat
replaced multiple calls to ` metricService . getOrCreateHistogram ` with a single variable ` constructBatchHistogram ` and ` syncLogTimePerRequest
added a new module - info . java file for the SQLite connector module to define module exports and dependencies for better encapsulation and modularization
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper synchronization during test execution
removed conditional check for " new " web type in permissionsManager initialization to simplify the code by eliminating unnecessary condition checks
modified DateParser and TestDateParser files to enhance date parsing functionality and improve test coverage
added a method to return the depth of the context in SpringLoadedState to provide a specific depth value for better UI rendering
replaced manual array copying with a static constant for minimum size to improve code readability and maintainability
[ hotfix ] [ javadoc ] fix typo in executiongraph
removed swipe layouts and added a method to remove notifications in NotificationActivity and NotificationRenderer to streamline the user interface by eliminating unnecessary swipe
updated exception handling logic in DefaultExceptionConverter and modified test assertions in ExceptionsTest to improve clarity of exception messages and ensure accurate test validations
fix checkstyle issue in inventory / glowcontainer . java ( # 720 )
replaced MethodHandle usage with reflection for setting a field in ProxyMaker . java to improve method accessibility and simplify exception handling
mondrian : fix findbugs warning in mathtest . java
updated the return statement in BaseEmailContentFormatter to remove the join operation for metrics and datasets to simplify string concatenation for better readability
added logic to manage the visibility and display of a simple panel in the LayoutPanel class to enhance the user interface by ensuring the panel is appropriately
added a null check for location in the dead server check to ensure proper handling of cases where location may not be initialized
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a check for missing key parameters in DSAPublicKey and simplified return statement in BasicChecker . java to improve error handling for missing key parameters
refactor ignored media type check in MediaTypeRequestMatcher to use a dedicated method to improve code readability and maintainability
updated logging statements to use task ID instead of task attempt ID to improve clarity and maintainability of the logging output
added properties to the @ SpringBootTest annotation in EventServiceTests . java to allow bean definition overriding for improved configuration flexibility
added null check before closing indexReader to prevent potential NullPointerException when indexReader is not initialized
refactored package declarations and class visibility for BTCMarkets streaming services to simplify access levels and improve code clarity
added a new test method ` issue151 ` to ` FencedCodeBlockParserTest ` to verify that the ` BRs ` and
added a new file CompatibilityTest . java to test internal DTD compatibility with various properties to ensure compliance with XML standards and verify
added two new utility classes , PushUtils and SecurityUtils , for managing push - related functionality to enhance the application ' s utility functions for managing
updated the logic for determining the number of replicas from current and target assignments to a loop to improve flexibility in determining the number of replicas based
bump version to 2.7 . 0 and fix release note
log4j2 - 1349 use platform - specific line separator in test
add readtimeout check in case block be set to false
initialize friction , restitution , density , and isSensor to 0 in FixtureDef . java to ensure default values are set
updated method names and data structures to replace " fetchSaclingFactors " with " fetchScalingFactors " across multiple classes to enhance clarity
added error handling for shell command " am wait - for - broadcast - idle " in LauncherInstrumentation . java to improve robustness by
added unit tests for reading font and link tags in ResourcesTest . java and modified span calculation in ResStringPool . java to ensure correct retrieval
move guistatscomponent . java to src _ base / common / net / minecraft / net / minecraft / src /
added permission request handling for phone calls in the Launcher class to ensure proper user permission management when initiating phone calls
updated return value from 32 to 36 in SimulationPanel . java and modified method signatures in BasicEventSimulationEngine . java to include flightData
[ geot - 6298 ] fix javadocs and remove unused method in geopolygonquery
added a synchronized method ` isDockerAvailable ( ) ` to check if Docker is available to ensure thread safety and provide a way to check if
added a new constant VPX in CodecTypes . java to represent the codec ' s vpx format
added a coordinator address option to the DistBuildFactory and DistBuildRunCommand classes to allow configuration of the remote coordinator thrift server address
added a new method ` match ( String path , String pattern ) ` in ` FsUtils ` and updated timer usage in ` WrapTimer `
added a check to ensure that only valid values are added to labelValues to avoid adding invalid values that could lead to errors
ggb - 1560 fix for ` ` true ' ' and ` ` false ' ' in web
added a test annotation to the TestPerfBenchMarkDriver class to enable performance testing for the performance benchmarks
added a method to set the materialization time in ObjectStore and created a test for it in TestObjectStore to ensure that the materialization
added handling for UnsatisfiedLinkError in VoskSTTService . java to improve error logging and handling for missing native dependencies
remove the one - way option from the gui , since it do n ' t seem to be necessary anymore
modified break weight logic in GlyphView to improve readability and handling of edge cases to enhance clarity of break weight outcomes for better text
refactor checksum reading logic in RCFile . java to use a buffer for improved efficiency to enhance performance by reducing the number of read
added @ AwaitsFix annotation for SOLR - 13028 in AutoAddReplicasPlanActionTest . java to address a known issue
replaced the way steps and processors are stored in a LinkedList for better organization to improve code readability and maintainability by using a more structured
replaced the ` setToSortedDataFlavorArray ` method with a direct call to ` getMimeType ( ) ` in ` DataTransferer .
hbase - 16462 add - infoport to thrift server test ( chaoyu tang )
added a check for end of file in RegExpScanner to ensure the scanner correctly handles end - of - file scenarios
replaced Boolean . getBoolean ( ) with a conditional check for enabledMetrics and enabledTimers using a static set to improve efficiency by avoiding
fix npe when receive message from a chat room that have no nickname .
add ` ` filename ' ' to the error message in case the file be miss or inaccessible
refactor refresh token creation into a separate method ` createRefreshToken ` to improve code readability and reusability
updated error message formatting for path transformation failure in BuckConfig . java to improve clarity and consistency in error reporting
removed unnecessary locking mechanism for JobGraph initialization in YarnFlinkApplicationMasterRunner . java to improve performance by avoiding unnecessary locking during job
added a synchronized method ` nativeGetHardwareBuffer ( ) ` that returns ` null ` in ` ShadowNativeImageReaderSurfaceImage . java
set SSL URI for the BTCChina exchange to ensure secure communication to the BTCChina exchange
pmd : fix pmd - ant to work on window
added two new files , OauthController . java and Oauth2PluginTest . java , to implement OAuth2 - related functionalities in the application
refactor SemgrexPattern class implementation to improve code readability and maintainability
added ` flatMap ` and ` flatCollection ` methods to ` AbstractStreamEx ` and removed them from ` EntryStream ` and ` EntryStream
updated error logging message in RestCodec . java and added logging in ExceptionToProducerResponseConverters . java to improve clarity of error messages and
updated the logic for determining if the class should be loaded in RobolectricClassLoader . java to allow for Android projects with mixed scala
change the condition to check if the sdp is not in the transmittable audio encoding list to ensure that the code correctly handles cases where the sdp
updated CreateTableGenerator to use DatabaseFunction instead of SequenceNextValueFunction and added a new test for CreateTableStatement with various database types to
added new test methods forStation3Gml31 and checkStation3Gml32 in NormalizedMultiValuesTest . java to ensure correct
added a volatile boolean field ` wasInvoked ` and updated the ` testHttpProxy ` method to use ` httpResponseHandler ` and ` httpsResponse
added check for configured processor before expanding regex mapping and modified return statements to use unmodifiable collections to enhance immutability and prevent unintended modifications
updated the method and variable names in CustomSeekProvider to use a constant for seek length and improved array size calculation to enhance code readability
added ` XLCDCommunicator ` and ` XLCDController ` classes , modified ` FirmwareUtils ` and ` Gr
[ drools - 6021 ] [ drools - 6023 ] load xsd from system classloader when load kmodule . xsd
updated retry logic in EventQuery classes to check for non - empty messages and added assertions for retry times to ensure that retry times are greater than
replaced thread state assertions with a constant waiting timeout for test threads to improve code readability and maintainability by avoiding magic numbers
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
reduce EnergyCost constant values from 20000 to 10000 to optimize resource allocation for improved performance
updated method signature and added configuration saving in DownloadPlugins . java to improve error handling and ensure configuration is properly saved during command execution
deleted the ` SpringTransactionHooks . java ` file and replaced ` SpringTransactionHooksTest . java ` with ` AbstractSpringTransactionHooks .
refactor AbstractClassAssert to improve code structure to enhance maintainability and readability of the code
added new files GetUninitializedStringValueTarg . java and TestScaffold . java to implement and test the functionality of the GetUninitialized
added support for provided dependencies in AndroidLibraryDescription and improved query handling in GraphEnhancementQueryEnvironment to enhance dependency management and support additional
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronized keyboard animations when
added a static boolean flag ` sSavedBugreport ` and modified the condition for saving system anomaly messages to ensure that bug reports are only
added support for " cinepack " format in FormatConfiguration and LibMediaInfoParser to enable support for cinepack format in media parsing
added a camera bobbing feature and adjusted the animation offset in the Player class to enhance user experience by allowing customizable bobbing behavior
updated the method used to collect blobs from ` b . data . describe ( ) ` to ` b . digest . toString ( ) ` to
deleted the HSQLDBServerFilesFilter class and updated its usage in TestUtility . java to simplify the code structure and improve readability by
added a condition to check for both restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure both restoreFromSeed and restore
replaced ` APIUtils . getApiDataVideoVersion ( ) ` with ` APIUtils . getApiDataSeriesVersion ( ) ` and added a
added a method to check if a type already exists in the method invocation to optimize method invocation handling by avoiding duplicate type checks
replaced hardcoded array size with a constant NUM _ VALUES in AmbientCubemap . java to improve code readability and maintain
bugfix # 256666 - fallback to default mode when try to profile use a misconfigured
added checks for zero values in multiple classes to return appropriate masked values for zero - valued input to improve handling of zero - valued integers in the
make derbyblockstoretest use temporaryfolder instead of delete temporary file
add itemstack . isitemstackdamageable ( ) and gethassubtypes ( ) method to itemstack .
fix line _ width not be set for i225982 ( mc - 167447 )
simonstewart : fix the firefox driver ' s startup page setting
updated connection handling logic in Http1xClientConnection . java to support both CONNECT and GET methods to ensure proper handling of HTTP / 1.
updated task accept parameter from " compile " to " process - classes " in JoobyMojo . java to accurately reflect the
use closeidleconnections instead of shutdown ( ) to close idle connection
added a condition to check if the aggregate function suffix is not present before creating new metrics to ensure that aggregate functions are only added when they do
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskView to use this parameter to improve fullscreen functionality and maintain consistency
added a new Java class to count integers and print their frequency to provide a solution for counting integers based on user input
[ java ] initialize the socketchannel to null to avoid npe .
updated MutisignOperationerGodicTest . java file to improve test coverage for mutisign functionality
added exception handling for NoSuchElementException in StaxEventItemReader and created a test for restarting at the end of a file to improve robustness
replaced specific TextPaint imports with a wildcard import and modified return logic in ShadowTextView and TestAttributeSet to improve code readability and
updated import statements from ` com . nimbus . jose . shaded . json ` to ` net . minidev . json
updated OS detection to support AIX and added support for " Linux - s390x - 64 " to ensure compatibility with AIX systems
cloudstack - 1563 : fix npe in listpublicipaddresses api
added a method ` invokeWithoutBlockingWithResultSync ` to ` Display ` that calls ` Display . INSTANCE . invokeWithoutBlockingWithResultSync
remove unreliable test that be fail on the ci - server
replace integer multiplication with Math . round for width and height calculations in PortraitPagedViewHandler . java to improve precision and avoid potential
reformatted code in TestClusterDumper . java for consistency to improve readability and maintainability of the code
hbase - 11858 addendum fix the size of the row cache in keyvalue . getrowcache ( )
camel - 14263 : camel - core - allow to add type converter to the context . thanks to benjamin
added support for handling ConditionalTask instances in SparkCrossProductCheck . java to improve task processing capabilities for conditional tasks
added forceReload ( ) call for ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED
added a condition to check if a JSON response is present in the LoginInfoEndpoint and updated tests accordingly to ensure that the passcode prompt is
added a method to convert the object to a string representation of the region state to improve the readability of the object ' s state representation for
added a new ` result ` field and updated related methods in ` HuobiAccountInfo ` and ` HuobiAccountServiceRaw `
added support for " PERIOD " column in MariaDBDatabase and created a corresponding test in AddColumnGeneratorTest to ensure proper functionality and
[ beam - 10650 ] update documentation for portablepipelineoptions . defaultenvironmenttype . defaultenvironmenttype .
added documentation for Launcher shortcuts in VersionChangeLogs . java to clarify the purpose and impact of the dictionary loading mechanism on Android 7
updated the visibility of NUM _ MILLIS _ IN _ DAY constant from private to public to allow access to NUM _ MILLIS _ IN _
removed a console print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] use conductor agent invoker in archive and consensus module .
updated validation logic in ` mmm Attr . java ` and added a new class ` NoWarnOnImplicitParams . java ` to improve type
refactor menu item visibility and enablement methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by consolidating
added BTC _ deposit and BTC _ withdrawal to the list of trans history types in BTCETransHistoryResult .
replaced List with Set for series and exceptions in RetryFilterFunctions . java to ensure uniqueness of series and exceptions
marked the PluginLoader class as deprecated to indicate that it should no longer be used in favor of an alternative implementation
modify condition in LastQueryExecutor to handle end time and version checks correctly to ensure accurate retrieval of last temperature data from time series in various
updated the newline character in the request string in HttpResponse . java to ensure consistent line endings in response handling
set the system property " org . slf4j . simpleLogger . log . org . apache . http . wire " to " ERROR
added a safe area setting to the title bar in Sheet . java to enhance user experience by preventing accidental interaction with the title bar
modified the iteration over TimeSeriesChunkMetaDataList to use an index - based access instead of an index - based access to improve performance by avoiding
added a SQL command for altering a table with a column name to ensure that the ALTER TABLE command can be correctly parsed and deparsed
made the ` copyState ` method public in ` AbstractHikariConfig ` to allow access to the method from outside the class
fixed - redissonexecutorservice . executeasync ( ) method should return a completablefuture instead of a nettyty promise . # 4
add a constant to make it easy to find . part file
[ hotfix ] [ table - common ] fix checkstyle violation in orc module
added null check for valueArg and nameArg in CompareFunctionsProcessor . java to ensure safe assignment of valueArg and nameArg to prevent potential
skip reduce scope check if there be insufficient disk space
removed the ` toString ( IndexReader ir ) ` method from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTerm
added checks for state handler invalidation in AbsSwipeUpHandler and null check in TaskAnimationManager to ensure proper handling of invalid states and prevent
added methods for retrieving and setting lock timestamps in AppPreferences and updated PreferenceManager to use these methods to improve flexibility and maintainability of preference
refactor artist setting logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by centralizing artist retrieval logic
added null check for remoteMessage before accessing its data to avoid potential NullPointerException when remoteMessage is null
nifi - 3890 : fix npe in splittext when there be no header
added support for Windows - specific key store handling in HttpsConnectorFactory to ensure compatibility with Windows - specific key store configurations
increased DEFAULT _ CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to allow more time
added a condition to check if the result code is not FILE _ NOT _ FOUND before proceeding with the else statement to ensure proper handling
added animation functionality to the Slider class to enhance user experience by allowing smooth transitions between visual values and animations
replaced occurrences of ` eol ` with ` lineSeparator ` in ` LineSeparatorProcessorTest . java ` to ensure consistency and accuracy in line separator
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to optimize memory usage for texture packing
added a new test method ` negatedTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest . java ` and modified the `
camel - 14263 fixed the npe issue of hazelcastqueueconsumer . poll ( )
added a new test class ` TextFeedbackTest ` and modified ` TestRunner ` to include it to enhance test coverage for feedback operations in the
replace Math . round with Float . compare in DefaultSolrHighlighter . java to improve precision in score comparison logic
updated DENSITY cases in AddAndScaleMultiImage . java and modified resource saving in ResourceEditorApp . java to use try - with
added a method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and modified ` ArrayCopySnippets ` to
log4j2 - 1349 fix defaultlogpublisher . publishmeter ( ) when the total time be zero
added support for remote SCM management in Configuration and RuntimeEnvironment classes to enhance the system ' s capability to enable or disable remote SCM support
added checks for additional states in MieleApplianceHandler to ensure proper handling of additional states during processing
replace usage of StatsLogCompat with SysUiStatsLog for launcher event logging to improve logging consistency and maintainability across the application
[ hotfix ] fix checkstyle violation in localzookeeper
added unit tests for ProjectGenerationEvent handling in EventSerializationTest . java to ensure correct serialization and deserialization of project generation events
ggb - 1561 select special point in polygon ( add feature flag )
updated JavaCompiler class implementation to enhance compilation efficiency and fix existing
added a check for non - positive remainingTime in IntegrationTestTimeBoundedRequestsWithRegionReplicas to ensure the test execution time does not exceed
updated multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added " -- gc - sections " and " nocopyreloc " flags to the ldflags list in NdkCxxPlatform
updated the SpringCloudCircuitBreakerFilterFactory to expand the fallback URI and improve the URL generation logic to enhance the flexibility and accuracy of the
danielwagnerhall : fix license header in test file
fix a bug where read - only share string table do n ' t work
added a method to retrieve account network by address in HttpMethed . java and a corresponding test in HttpTestAccount001 . java to
added a check for available text width before setting the text layout in SwingUtilities2 . java and improved error handling in Test66351
refactor ` FlatteningIterator ` to initialize ` next ` directly and introduce ` nextBlank ` flag for clarity to improve code read
updated TweetLinkUtils to remove HTML tags from title and body to ensure proper formatting of links by removing HTML tags
doc : generate sample code in the java microgenerator ( # 349 )
add a method to reload and delete a question before each test to improve test coverage for the instructor feedback edit question functionality
updated return values and conditions in HSSFSheet . java and added new assertions in BaseTestSheet . java to improve row validation logic and
added permission checks for launching activities in ` InstallShortcutReceiver ` and modified ` Launcher ` to utilize ` PendingAddItemInfo `
[ java ] do n ' t send session open event if it be already connect to the cluster .
refactor hashCode and equals methods in AbstractParquetMapInspector to use AbstractParquetMapInspector instead of StandardParquetHiveMapInspector
added logic to flush the QUIC session and release the buffer if remotely closed to ensure proper resource management and prevent memory leaks when the
added AutoCloseable interface to SplitReader and removed close ( ) method to improve resource management and ensure proper closure of resources
added a deep copy method to the GsonBuilder class to ensure that modifications to the fields do not affect the original Gson instance
[ gr - 26354 ] fix npe in llvasourcebuilder when cache be not find .
refactor file handling in RestClientRequestImpl to streamline file opening and closing processes to improve code readability and maintainability by reducing
removed unnecessary line breaks in GrblController . java to improve code readability and maintainability
updated ClassLoader handling in MockFactory and added a new SearchingClassLoader class to improve class loading flexibility in mock creation
add testcase for jme3 - refresh flag bug
added support for LEFT _ SEMI _ JOIN type in the condition check to ensure proper handling of both INNER _ JOIN and UNIQUE _ JOIN scenarios
refactor response handling in HttpReceiver and HttpSender to use response status checks to improve code clarity and ensure proper termination of responses based on
rename array _ length _ offset to array _ oop _ desc _ length _ offset .
http : / / issues . apache . org / jira / browse / amq - 4682 - add default policy to broker test
updated multiple Java files related to Kerberos - related classes to improve code consistency and maintainability across the project
added a check to ensure appCtx ' s stop method is only called when the application is running to improve code robustness by preventing unnecessary
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return the result of the font drawing operation
refactor SpringmvcClient to use MetricsPublisher for metrics retrieval instead of JsonUtils to simplify metric retrieval and improve error handling
removed the generic keyword ' 1 ' from the lambda expression in AccountAgeWitnessService . java to simplify the code and improve readability
refactor code formatting and improve readability in StructureHeader . java and StructureReader . java to enhance code clarity and maintainability by standard
added ResourceUrlProviderExposingInterceptor to the CasWebflowContextConfiguration and related tests to enable the integration of ResourceUrlProviderExposingInterceptor
add a dexinliner to dexpler to make the dex inliner work
change enrich rule dto to include property ( # 4893 )
removed the ` NOFOLLOW _ LINKS ` parameter from the ` isDirectory ` method in ` PathResource . java ` to simplify the method signature
[ hotfix ] [ table - common ] remove sqldialect from executioncontext
replaced ` ImmutableSet < String > ` with ` Supplier < ImmutableSet < String > > ` for ` rDotJavaPackages ` across multiple classes
add unit test for astpackagedeclaration . getpackageimage ( )
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor . java to enable dynamic adjustment of minimum cross compaction unseq settings based
[ hotfix ] [ runtime ] move activeresourcemanager into active package
rename the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify the
updated URI creation logic in ZipResource and added unit tests for parsing feature files with spaces to improve URI parsing reliability and ensure correct handling of
reformatted code for consistency and readability in ExpandableUploadListAdapter . java to improve code clarity and maintainability
updated RobolectricTestRunner to handle parent classes and method configurations more robustly to improve the accuracy of configuration merging across test classes
filter out item and block registry if they do n ' t have them
changed method signatures from abstract to non - abstract in AbstractDataChangedListener and updated websocket connection handling in WebsocketCollector and WebsocketDataChanged
updated JSONPojoConvertor to handle enum types and added color handling in JSONPojoConvertorTest to improve compatibility with enum types and
added a warning message indicating that the ` -- view ` option is deprecated and will be removed in the future to inform users that the option will
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` and updated its handling in ` GWTRequestWrapper
added orientation correction functionality to GyroControl to enhance sensor event handling based on device orientation changes
set biome _ list _ size from biomegenbase to the length of the biomegen array .
replaced ' println ' with ' print ' in multiple functions and made interfaces public to standardize function output handling and improve access
fix npe in filecompilerteconfig due to miss jdtcompiler . getenvironment ( )
added a new interface ` ByteToLongCollector ` in the ` com . speedment . common . function . collector ` package to provide a utility
added a preload parameter to MMapDirectoryFactory to enable or disable preloading of the MMapDirectory to enhance performance by allowing preloading of
added custom metrics for various components in BukkitPlatform to improve monitoring capabilities for various components
refactor QuickConnectREST to improve code structure to enhance maintainability and readability of the code
added aspect ratio and default card image assignment in CardPresenter . java to enhance visual representation of the default card in the application
do n ' t increment the auth method count if it ' s implicit
updated cloning logic for longValues , doubleValues , byteValues , byteStarts , and byteLengths to handle empty arrays gracefully to avoid potential
added tests for System . nanoTime ( ) functionality in TimeChangeTest . java to ensure that the System . nanoTime ( ) method behaves correctly
added trimming of lines in MultiPartFilter and a print statement in MultipartFilterTest to improve line handling and debugging during multipart request processing
fix entitylivingexperiencedropevent not fire when the player drop the expense . close # 3990
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use localized strings instead of hardcoded strings to improve internationalization support for
[ hotfix ] [ table - planner - blink ] remove unsupportedoperatordialsvisitor from sqlplanner
added RdepsFunction functionality and improved state checks in GraphEnhancementQueryEnvironment . java to enhance dependency management and ensure proper handling of
refactor character handling methods in Character . java to improve code readability and maintainability
added logic to scale entire rocket components before setting the selected index to ensure that the selected index is only set for valid rocket components
replaced the usage of ` Arrays . toString ( ) ` with direct comparisons for byte arrays in ` UpdateableResultTest . java ` to
added logic to retrieve and attach time boundary information for hybrid tables in the BaseBrokerRequestHandler to ensure proper handling of time boundary information for hybrid tables
do n ' t add the socket ref to the poller if it ' s already there
updated regex pattern and modified album title handling in EightmusesRipper . java to improve accuracy of album titles and streamline URL
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple files to utilize a
added a condition to check if the profile is a phone device and not in landscape mode to ensure proper layout handling for phone devices in non
updated assertions in PartTreeJpaQueryIntegrationTests to use unwrap ( QueryImpl . class ) instead of getValue ( query , PROPERTY ) to
refactor code to use a dedicated method for reading matching lines to improve code readability and handle privileged exceptions more gracefully
removed dynamic check for the " getResultStream " method in JpaQueryExecution . java to simplify the query execution process by eliminating unnecessary
fix npe in physicsprocess when entity be null
added test for delete entry processor when value attribute be indexed
add a feature to notify jitsi - me ' s join room when a conference room be receive .
updated color assignment logic in Utils . java and modified HTML message in UtilsTest . java to ensure correct color representation and improve text formatting in HTML
fix ( menu ) : disable menu item when text input be empty ( # 5331 )
added RmStep import and modified scratch path path format in Aapt2Link . java to improve path resolution for link tree generation
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest .
g3d - 193 : do n ' t clear selection , but update selection in av
camel - 20297 camel - sjld : improve error message when parse cql expression
added ` isCanceled ( ) ` method implementations across multiple classes to standardize cancellation handling across call implementations
added a default implementation of the ` isAnnotationPresent ` method across multiple classes to provide a default behavior for checking annotation presence across different classes
added a default implementation of the removeAllWidgets method in UILayout . java to indicate that the method is not yet implemented
[ hotfix ] [ yarn ] add testappender to yarn test
modify return statement to use Math . max for output size updates to ensure output size does not exceed updated limits
added logic to determine if using VLC is enabled for high - resolution content when using Fire TV Stick to ensure high - resolution content
[ beam - 8470 ] fix datasetsourcemock to work with mock runner
updated GpsLoggingService to conditionally remove GPS and network listeners based on preference settings to enhance user experience by allowing dynamic listener management based on
modified the ` putString ` method to accept a ` byte [ ] ` instead of a ` boolean [ ] ` for ` fullwidths ` and
added support for handling BaseItemDragListener in FolderIcon to enhance drag functionality for better user experience
added ` createEmptyArtifact ` method to ` RepositoryConnector ` and updated type casting in ` AbstractRepositoryConnector ` and ` FileSystemConnector ` to
removed unnecessary comments in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed the check for a specific year in the video fragment ' s loaded video link to simplify the condition for better readability and maintainability
camel - 17700 : camel - sftp should use compact path to avoid conflict with other filesystems
camel - 16462 : camel - aws2 - weather : fix unit test that fail on slow ci server
updated variable name from ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability and maintainability by
added support for the LARGE _ FERN species in BlockDoublePlant . java and BlockType . java to ensure proper handling of
change the focus behavior of the tree to enable request focus instead of focus to improve user experience by preventing unintended focus
cloudstack - 3549 : throw the original exception instead of swallow the original exception .
updated DB2TestSystem to accept license and modified import statements in DockerDatabaseWrapper and TableIsEmptyGenerator to enhance license acceptance logic and improve
added a method to set the unit group in DoubleModel and updated the selection logic in GeneralOptimizationDialog to allow dynamic updates of the selected
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading functionalities involving Bitcoin and
added sample setting functionality to TestPBRLighting to enable dynamic adjustment of fpp sample count based on user settings
updated test tasklet names from " job . step " to " step " in StepWithSimpleTaskJobParserTests . java to simplify test
changed variable declarations from non - final to final in CentralAuthenticationServiceImplTests . java to ensure immutability of credential and service variables
add parentheses around ggbabs ( ) for good readability
added multiple calls to addServiceOutput ( ) in DDLSemanticAnalyzer . java and modified the addServiceOutput ( ) method to improve
support coercion of bigdecimal to biginteger type ( # 2269 )
added a comment to hide JDT usage by jetty in WebAppContext . java to improve code clarity by explicitly indicating that JDT is
changed return value from super . useAuthCache ( ) and cacheSPNEGO to false in NegotiateAuthentication . java to simplify the
updated namespace assignment to capitalize the first character to ensure consistent capitalization of the first character
( chore ) camel - direct : add miss exception for not available consumer
added a null check for the ZooKeeper object before checking its state to avoid potential NullPointerException when accessing the ZooKeeper object
updated the progress bar step message in Loader . java to improve clarity of the progress bar display during mod initialization
added a new method ` runOnUiHelperThread ` to execute a Runnable on the UI helper thread to streamline the vibration effect handling
added a method to update the last remote stream ID in HTTP2Session to ensure the correct stream ID is used for remote communication
added text antialiasing to the rendering hint in the EditorHeader and EditorToolbar classes to improve text rendering quality for better text presentation
[ java ] : do n ' t use termwindowsize when calculate available window .
refactor : remove static import of enums in ctannotationimpl . java
refactor ExoPlayer class to improve code structure to enhance maintainability and readability of the code
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` using a rectangle to improve performance by
added a new method ` newPrintStream ` to handle custom encoding for output streams to improve flexibility by allowing custom encoding options for output streams
updated vibrate from 1 to 25 in TouchableMovementMethod . java to improve the responsiveness of the touch movement functionality
updated import statements in AppEngineSqlCloudSession . java and added new imports in FlybushDataClearer . java to improve code
reordered constructor parameters in WebSocketClient for consistency to improve code readability and maintainability
simonstewart : fix the i18n test
do n ' t report illegalargumentexception if linkatbuildtime be true
added a call to restore the system state in XmlWorkflowServiceIT . java to ensure proper cleanup and state management during integration tests
added a case - insensitive comparison for features in CoNLLUFeatures . java to ensure consistent ordering of features based on case sensitivity
added a uniquefiles set and refactored parsing logic to handle duplicate source files to improve error handling and provide clearer diagnostics for missing source
simonstewart : add a few more test for the multi select feature .
added validation for keys length in HighestKvno . java to ensure correct number of keys to prevent runtime errors
added a try - catch block around the retrieval of attributes in HDF5BatchReader . java to handle cases where only Huge objects are present
[ beam - 8470 ] fix the return type of expand ( ) in bigqueryio . write ( )
[ zeppelin - 5287 ] add @ apiimplicitparams to allow upload binary content of the template file
added a new file TestMultiANewArray . java for testing multi - dimensional array initialization to facilitate testing of multi - dimensional
bug 10629 : add ` ` secondary . storage . vm ' ' config option to disable secondary storage on management server
refactor synchronization logic in SyncBlockChainMsgHandler to use local variables for headID and unForkId to improve code readability and maintain
set theme in PreviewTabView using preferences to ensure the preview tab displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure resources are properly released to prevent memory leak
added a test for HTTP idle timeout behavior in the ConnectorTimeoutTest class to ensure that the server properly handles idle - timeout scenarios
add a property to the dcoref constant to allow access to these property .
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` in `
removed unnecessary type casting in JpaPagingItemReaderIntegrationTests and updated error message formatting in JobLaunchingGatewayParserTests to improve code
changed log level from warn to debug in DistributedQueue . java to reduce log verbosity for non - critical messages
refactor ColorExtractionService to use a dedicated method for updating hotseat palette and update hotseat palette to improve code readability and
added new transformer methods for ` TableEntryByTypeTransformer ` and ` TableCellByTypeTransformer ` in ` TypeRegistry ` to enable customization of
added an assertion to check if newAvailableShared is less than initShared to ensure that the integrity of shared instances during the initialization process
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed the projectGenerated flag and its associated method from ProjectGenerator and updated its usage in WorkspaceAndProjectGenerator to streamline project generation logic by
updated the condition to check for key existence in the info map before checking if it contains the AUTH _ HEADER header to ensure proper validation of the
added GET and POST routes for contact form handling in the application to enhance functionality for displaying contact information in the application
guacamole - 284 : simpleuser should use objectpermissionset instead of permission .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest version of the IconCache library
[ drools - 720 ] fix checkstyle violation in traitfactory
updated method names and references from " findWhereNameLikeAndActive " to " findWhereNameOrAliasLikeAndActive " across multiple classes
replaced manual closing of perDocConsumers with IOUtils . closeSafely to improve resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener for the overflow button to show the menu to ensure the menu displays correctly when the button is clicked
updated error messages for null and non - null references in Subject and OptionalSubject classes to improve clarity and accuracy of error reporting for null references
ggb - 174 update the line height of the help button in the input tree
move protobufferutilitiestest from network . p2p . network to core . util and move protobufferutilitiestest to core .
fix split pane divider not show correctly ( # 4338 )
add support for crossreference entry in aux file ( e . g . aux file )
fix javadoc for geoserverfeaturesource and geoserverfeaturelocking
renamed ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of the data
change the display of the contact list when there be a change in the meta contact list .
updated import statements for Command class from ` org . apache . sshd . server . Command ` to ` org . apache . sshd .
added a test for cleaning up the audit log table post parameters by position in AuditLogTest . java to ensure that the audit log table is
changed the type of the ` inject ` method in ` ComponentContext ` from ` Class < T > ` to ` Object ` to improve type
added regex patterns for handling comment lines and invalid lines in ACLFileParser . java to improve robustness and accuracy of comment line parsing
updated ` MapRDBFormatMatcher ` and ` MapRDBSubScan ` to include ` DrillTable ` and ` FileSystemPlugin `
added support for ancestor dimension values in StarTreeNodeImpl and updated related methods to improve organization and clarity in handling ancestor dimension values
added user unlock check before dumping plugin manager state in TouchInteractionService and updated closeOpenViews method in Launcher and RecentsAnimation
rename widthStr to positionStr in Photo . java to improve code clarity by using a more descriptive variable name
refactor certificate validation logic in PKIXValidator . java to improve clarity and maintainability of certificate validation logic
[ flink - 26011 ] [ stream ] [ test ] add archunit test for the test code
refactor package names for AlibabaDubboIntegrationBootstrap , ApacheDubboPluginTest , and ApacheDubboIntegration
bug cs - 15789 : do n ' t skip project network if cloudstack do n ' t support it
updated assertions in RuntimeTypeAdapterFactoryFunctionalTest to check if the shape type is square instead of removing it from the JSON object to ensure
add ` ` set setPropertiesocured ( ) ' ' and ` ` storeUndoInfoForProperties ( ) ' ' method to enable / disable
replaced direct property retrieval with a privileged action using AccessController to enhance security by ensuring system property access is performed with appropriate privileges
updated StreamCloseTest to use Awaitility for checking the size of streams to improve test reliability by ensuring the stream is closed after a
removed the ` doAfterFlush ` method from multiple classes and updated the initialization logic in ` TermVectorsConsumer ` to improve performance by avoiding
added deprecation handling in ConfigurationMetadataGenerator and integrated it with nested properties in AbstractJpaProperties to ensure only non - deprecated properties are processed during
refactor capacity and mask initialization in BiInt2ObjectMap and Int2ObjectHashMap classes to improve code clarity and ensure consistent capacity and
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and corrected a variable name in Hive . java to
do n ' t swallow exception in send ( ) and close ( )
added a null check for the context in SchemeAndroidIDE . java to ensure that a new instance of SchemeAndroidIDE is returned when the context
[ gr - 28654 ] make the native - image - generator . sh use the application classloader .
changed the return type of the modifyGrantedAuthorities method from void to List and updated the authority array initialization in SwitchUserProcessingFilter to allow
refactor test classes to separate RawJaxrsIntegrationTest and JaxrsSpringIntegrationTest from JaxrsIntegrationTest to improve organization and
add support for setquerytimeout ( ) for jdbc 4 +
added data providers for general and supplementary character tests in XslSubstringTest . java to improve test coverage for different substring scenarios
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for sequence functionality in MariaDBDatabase and updated conditions in CreateSequenceGenerator to ensure compatibility with MariaDB and improve sequence generation
corrected spacing in error messages in MappedResizeableBuffer , UnsafeBuffer , and CompilerUtil classes to improve code readability and maintain consistency
updated import statements and set server metrics for multiple test classes to ensure compatibility with the latest Pinot library and improve metrics tracking
updated SSLExtension to check for both " jsse . enableMFLNExtension " and " jsse . enableMFLExtension " to
refactor ObjectHashSet to remove generic type parameter and simplify iterator initialization to improve code readability and maintainability
updated character limit calculation from 22 to 23 in Compose . java and TweetFragment . java to ensure accurate character limit for shortened URLs
add cassandradatastore . datadatatatime ( ) property to enable ttl for data point write
updated the ` checkForAndKillXcodeIfRunning ` method to accept a ` enablePrompt ` parameter and modified the Xcode checking logic to
added a method to retrieve the terrain at a specified cell coordinates in the TerrainGrid class to facilitate easier access to ter
added default value handling in pretty . java and created a new class T6665791 . java for testing Java annotation functionality to enhance the
added error handling for missing QuestEncryptionKeys . json in ResourceLoader . java to improve user feedback when the configuration file is missing
added a condition to check if push is not enabled before verifying push support to ensure that push requests are not processed when not supported
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
updated sign method in BlockUtil to use the local witness ' s private key to enhance security by securely signing the block capsule
modified the return logic in FileSystemView . java to handle empty root lists and added security checks in Win32ShellFolder2 . java to improve
updated methods for copying the last row in the table and modified row handling logic in ColumnText . java and PdfPRow . java to improve
added a SparseArray for storing and managing notes in the ListFragment to improve the management of unsaved notes for better user experience
refactor uploadbackupdata to use static map instead of new hashmap
removed null check for data in getTransferData method to simplify code by eliminating unnecessary exception handling
no effective change - remove pstmtdelegate and standardpstmtdelegate
replaced ` Launcher . Padding ` with ` AppWidgetHostView . getDefaultPaddingForWidget ` in ` AppWidgetResizeFrame .
refactor static MethodHandle initialization and add consStringFilter functionality to NashornBeansLinker . java to improve code readability and enable
updated ClassGraph and ScanResult classes for improved functionality to enhance performance and maintainability of the code
replaced ` CountDownLatch ` with ` goAwayLatch ` and updated related assertions in ` IdleTimeoutTest . java ` to improve
replaced ` getMessage ( ) ` method calls with ` hasMessageThat ( ) ` method calls in ` IterableSubjectTest . java ` to
replaced ThreadLocal currentBook with null in multiple files to simplify currentBook management and improve code clarity
added support for checking class type and object type in ContactSecurityVoter to enhance type safety and provide clear error messages for unsupported object types
removed import statements for GachaHandler and Tools in DataLoader . java to streamline dependencies and improve code clarity
added functionality to display the number of rows affected in update logs to enhance user feedback by indicating successful updates with specific row counts
ggb - 1357 fix problem with suggestion positioning
set default foregroundFPS and backgroundFPS to 60 in JglfwApplicationConfiguration . java to ensure default FPS values are set for
added ObjectReleaseTracker and release methods to HdfsTransactionLog and TransactionLog classes to ensure proper tracking and releasing of objects during transaction operations
updated WebSocket frame handling to use a listener instead of a default frame type to improve clarity and maintainability of WebSocket connection management
updated test classes to differentiate between ` TestApplicationEventListener1 ` and ` TestApplicationEventListener2 ` and added new test cases for state machine
refactor list background handling in SettingsActivity to use a dedicated method to improve code readability and maintainability by centralizing background setting logic
replaced Apache Commons StringUtils with OpenHAB StringUtils and added null check for line in RMEThingHandler . java to ensure compatibility with
added a ` accumulate ` method to the ` JavaUserDefinedAggFunctions ` class for accumulating values with specified weights to enhance the functionality of
hbase - 22351 addendum fix checkstyle violation in hbase - replication
replace VALID _ CACHE _ SET with REGEXP _ CACHE and optimize regex pattern compilation to improve performance by reusing RegExp instances instead of compiling
added a reset method to the GameThread class to provide a way to reset the game thread state
added a login method to check if the realm matches the username before proceeding with the authentication process to ensure that only users with the correct realm
refactor parameter handling in SavedRequestAwareWrapper to use an iterator for merging existing and merged parameters to improve efficiency and maintainability of parameter
updated log messages to use the logger ' s class name instead of the hidden singleton to improve clarity and consistency in logging output
replaced ` waitPoint . countDown ( ) ` with ` this . wakeup ( ) ` in ` CommitLog . java ` and
added a check for Android O in the image view condition to ensure compatibility with devices running Android O and improve auto - completion functionality
updated SchemaInfoLevel from minimum to basic in SchemaCrawlerTest . java to ensure compatibility with the latest SchemaInfoLevel requirements
modified XML output stream handling in SaveTask . java to use BufferedOutputStream to improve performance by reducing the number of write operations
refactor byte handling in TestPayloads . java to utilize UTF - 8 encoding for improved efficiency to enhance code readability and maintain
fix mc - 103516 : entity . isplayable ( ) return false for entity that do n ' t have the entity ( #
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter "
[ drools - 5271 ] fix array . hashcode ( ) and array . deephashcode ( ) in protobufinputmarshaller ( #
refactor comparison term handling in NowSearchTerm and SearchTermBuilder to improve code readability and maintainability
pdfbox - 4892 : make class package private , a suggest by valerybokov
updated RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method and headers to enhance flexibility by allowing dynamic HTTP method resolution
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class and updated the instantiation of ` ResponseBuilder ` to improve code
added notification for command start in AsyncBackgroundTaskManagerTest to ensure that the background task starts correctly during tests
refactor ` computePreviewDrawingParams ` method to accept ` mReferenceDrawable ` as a parameter to improve null safety and prevent potential NullPointerExceptions
replaced TokenFilterFactory with CharFilterFactory in LukeRequestHandler . java to streamline token filtering process and improve code clarity
replaced manual null checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot arguments to improve code readability and maintain
added verbosity handling to ExecutionContext methods in JavacStep and ExecutionContext classes to enable more detailed logging based on verbosity settings
added a check to convert the schema to uppercase when the database type is Oracle to ensure consistency in schema handling across different database types
log4j2 - 1349 change asyncloggerallthreadcontextimplementatortest to use logger . getcontext ( false ) .
added a new file TestShrinkToOneRegion . java that calls System . gc ( ) to demonstrate the functionality of shrinking to
replaced string splitting with Splitter for package handling in SandboxTestRunner . java to improve code readability and maintainability by using a
replaced ` utf8ToString ( ) ` with ` context ` in ` AnalyzingInfixSuggester ` and added a new
http : / / issues . apache . org / activemq / browse / amq - 2296 - fix pushsafermessage
remove the ` ` show label stats ' ' command from modelexplorer , and use ` ` jsonresult ' ' in stripprovenance
pdfbox - 4892 : remove unneeded null check , a suggest by valerybokov
changed the declaration of FORMATTER from ' private final static ' to ' private static final ' across multiple test classes to ensure that the FORMATTER
replaced Apache Commons Logging with Java ' s built - in BigDecimal and RoundingMode in UDFRound . java to improve code clarity and
refactor configuration handling in GraalJSScriptEngineFactory to use ConfigParser for injection and use included libraries to improve code readability and reduce
changed class declarations from package - private to public in Test1 and Test2 to allow access to these classes from other packages
updated player event notifications to use " deny . no _ enter " instead of " no _ permission _ event . no _ permission _ event "
fix bug introduce in http : / / code . google . com / p / mybatis / issues / detail ? id = 5
replaced instances of ` LongProducer ` with ` NumericDocValuesField ` in ` BaseNormsFormatTestCase . java ` to ensure
added random test cases for box and circle creation in Box2DCharacterControllerTest . java to enhance test coverage and ensure correct friction
added tests for various memory sizes in TestBadOptionValues . java and updated test cases in TestMemoryOptions . java to ensure correct handling of
removed duplicate error checks for " must be a power of 2 " in ObjectAlignment . java and Options . java to streamline output validation for
added a method to retrieve the target package from the APK file and updated related classes to improve the extraction of the target package from the manifest
refactor DocHelper to improve code structure to enhance maintainability and readability of the code
added a new ArrayList to the acceptableThrowawayItems setting to ensure proper initialization of acceptableThrowawayItems with an empty list
replaced instances of ` mh1 . < boolean > invokeExact ( x ) ` with ` ( ( boolean ) mh1 . invokeExact
removed unnecessary comments and improved code formatting in MessageHandler . java to enhance code readability and maintainability
refactor Inflection class to improve code readability to enhance maintainability and facilitate future development
added methods to retrieve and set the locale in EvaluationContext to enhance locale management capabilities in the application
removed the import of the Plugin class from SummaryPrinter . java to simplify the code by eliminating unnecessary dependencies
added a break statement in DrawerActivity . java to prevent fall - through behavior in a switch - case structure
replaced the import of Criteria . where with Criteria . * and updated the debug log message to use the query object directly to improve code cl
add xwork . loggerfactory system property to allow customization of loggerfactory
add test for p2p disabled peer without effect on input node
updated bean names in ` AvailabilityProbesAutoConfiguration ` and ` AvailabilityProbesAutoConfiguration ` to include the name " livenessStateHealth
fix concurrentmodificationexception in localpstoreprovider # getlocalstore ( )
changed the visibility of the deleteFiles method from public to private to restrict access to the method for better encapsulation
renamed ` Provider ` to ` ServiceProvider ` and updated related method calls to improve clarity and consistency in naming conventions
make javainteropmessageresolution . set ( object , object ) throw runtimeexception instead of runtimeexception
added toolchain creation checks and corresponding methods in AbstractCell and ToolchainProvider to ensure correct behavior when toolchains are present and improve toolchain
only remove the context if it have be add to the engine .
replaced ` - 1 ! = ` with ` contains ` for string checks in ` AbstractCheckDescriptor . java ` to improve readability and
updated method names from ` setLinkerFlags ` to ` setExportedLinkerFlags ` across multiple files to clarify that these flags
updated the method ` onConfigurationChangedInternal ` to ` updateRecentsRotation ` in ` AbsSwipeUpHandler ` and ` Recent
updated listener type checks to use wildcard generics for better type safety to enhance type safety and eliminate unchecked warnings
updated the way the new block hash is retrieved in AbstractBlockChain . java to ensure the correct hash is used for the new block ' s
[ issue # 2663 ] fix isspacefull print file path not exist log when deploy on dledger
refactor initialization of JvmGcMetrics in MicrometerMetricManager to improve readability to enhance code clarity and maintainability by
[ issue # 5390 ] update compactionlog ' s getmessagemillisentiretimemax and getmessagem
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new code
added a method to check for the presence of a system UI object and executed a shell command for keyguard status view to enhance functionality for handling
changed the access modifier of logger and principals and sessionIds from static to instance variables in SessionRegistryImpl . java to ensure immutability of
added checks for empty cookie jar and implemented removeAll method in InMemoryCookieStore and NullUriCookieTest to ensure that removeAll does not return false
feat ( bonsai ) : optimize bonsai state updatestateupdate logic ( # 5349 )
modified the ` getText ` method to accept ` CharSequence ` instead of ` String ` in multiple repository classes to allow for more flexible text input
added a @ NotYetImplemented annotation to AlertsTest . java to mark the test as ignored due to a known issue in Firefox
added a finally block to ensure the connection is returned in a finally block to handle potential IOException during connection handling
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references to improve clarity
added synchronization to the heartbeat executor service in DbTxnManager to ensure thread safety during concurrent access to the heartbeat executor service
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and introduced ` wrapWithTracingAndCancellation `
added a method to update the first line showing state in the TextArea to fix drag - selecting issues out of the TextArea ' s bounds
added configuration paths for temporary and staging directories in TestInformationSchemaWithPrivilege . java to ensure correct directory structure for MapReduce configurations during testing
refactor graphics configuration retrieval logic to improve clarity and efficiency to enhance readability and maintainability of the code
tika - 2278 -- add oom test to tikaresourcetest and move it to tika - core
( chore ) camel - pipeline : move the doprocess method to its own class so it can be reuse
added model file handling and improved tag management in PrintTagList . java to enhance the flexibility of tag processing and provide clearer output
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
log4j2 - 1349 fix test for eof index recovery
[ java ] fix flakiness in startfromtruncatedrecordinglogtest .
updated the calculation of ` arc ` in ` LineBorder . java ` to use ` float ` instead of ` int ` to improve precision in
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to prevent further processing when galleryImages is null or empty
added a new column " DEPLOYMENT _ ID " with a nullable constraint in the CreateDatabaseChangeLogTableGenerator to ensure the deployment ID
pdfbox - 2576 : move usage message from fdf package to interactive form package
removed unnecessary boolean parameters from multiple methods in AlterTableAddConstraint . java to simplify method signatures and improve code readability
added support for provisional engines in QuickfixjComponent and updated related test cases to enhance engine management and ensure consistent behavior across components
added support for enabling or disabling zoom controls in RoboWebSettings to improve user experience by allowing customization of zoom control settings
add corporea and brick block and slab to the world , and fix a couple of typo .
refactor ConnectionFactory to improve code readability to enhance maintainability and facilitate future updates
added ` EnableDisableMenuItems ( ) ` method to manage menu item visibility based on user settings to enhance user experience by providing appropriate menu item
updated the message from ` file _ list _ empty _ headline _ server _ search ` to ` file _ list _ empty _ favorites
no effective change - use @ setting instead of @ serviceregistry . setting
updated JTable configuration settings in MotorMountConfigurationPanel . java and modified constructor in MotorMountTableModel . java to improve
updated the line separator initialization from ` System . lineSeparator ( ) ` to ` System . getProperty ( " line . separator " ) ` to ensure
added getter and setter methods for creator and subject in POIXMLProperties and implemented a test for document properties in TestPOIXMLProperties to
removed redundant call to super . doStop ( ) in HandlerWrapper . java to improve code clarity and maintainability
[ java ] do n ' t try to close a file that do n ' t exist .
refactor ` UnsatisfiedTypeBounds ` to replace ` Marker ` with ` Command ` and introduce a new ` Helper ` class for
added methods to determine if a class is an JMod file and adjust the classpath accordingly to improve the handling of JMod files and ensure correct
replaced ` PostEnterCanonicalizer ` with ` Nullable ` in ` TreeBackedElement ` and ` TreeBackedEnter ` classes to
replaced direct assignment of tokenRequest with PublicTokenRequest in Saml2TokenGranterTest and UserTokenGranterTest to
updated the variable used in the ` Array . get ` method from ` arrayLength ` to ` valueRangeObject ` to ensure the correct object
added sync method calls in ZKAssign and ZooKeeperWatcher classes to enable synchronization of ZooKeeper nodes
added checks for EGL _ NO _ CONTEXT in GlUtil . java to ensure that the current context is valid before proceeding with operations
[ drools - 1391 ] fix ruleflowgroup . deactivate ( ) call when it be not active .
added a return statement in HystrixDashboardConfiguration . java to ensure proper termination of the method execution
removed exception handling for ` PipeNotExistException ` in ` DropPipeProcedure . java ` and added assertion in ` IoTDBPipeIT . java
add cleanup to clientqueuereadisruptiontest to ensure all thread be clean up
refactor : replace signatureprinter with defaultjavaprettyprinter in ctreferenceimpl # tostring ( )
changed the visibility of the validateInstance method from public to protected to restrict access to the method for better encapsulation
updated imports in GeoPointField , GeoPointInBBoxQuery , GeoPointInPolygonQuery , and GeoPointNumericTermsEnum classes to enhance
added a new class ` FakeBuildable ` and updated ` OnDiskBuildInfoTest ` to use it to facilitate testing by
replaced null checks with isEmpty ( ) for itemstack in GuiIngameForge . java and UniversalBucket . java to improve code
updated variable names and methods from " path " to " timeseries " in TSParser . java and SQLParserTest . java to clarify
added a check to return 0 if the v vector is less than an EPSILON value to prevent potential errors in calculations involving negative values
[ pinot - 5391 ] fix the issue of large blob in gcspinotfs ( # 5391 )
removed the call to blockCloseVertxByName in TestHighwayTransport . java to ensure proper resource cleanup during transport closure
# 495 - dbtriggerbasedhistoryddl ddl update ( # 495 )
updated the expected cluster engine test from 2 to 3 to ensure the test verifies the correct functionality of the clustering engine
added JUnit Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored due to its rewriting requirement
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand ` and added a new class ` ParserStateObjectInputStream
updated object quoting strategy handling in ChangeSet and DatabaseChangeLog classes to ensure proper assignment of object quoting strategy based on changeLog configuration
replaced ` MetainfoParser . parse ( zipFile ) ` with ` MetainfoParser . fromXmlStream ( zipFile ) ` to improve XML
deleted the CsrfControllerAdvice . java file to remove unused or redundant code from the project
added a method to quote paths in endorsed arguments and modified endorsed argument formatting to ensure proper handling of path separators in endor
added ObjectAnimator for background transitions in Launcher . java and utilized it in AllAppsBackgroundDrawable . java to enhance animation control and manage
updated the comparison from ` 2 ^ 24 ` to ` 1 ^ 24 ` in ` TypeInferenceUtils . java ` and modified test cases in
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added support for handling Windows path prefixes in WindowsPathParser and PathOps classes to ensure correct path parsing and validation for various path types
replaced ` InetSocketAddress ` instantiation with direct instantiation of ` MulticastSocket ` to simplify socket creation and improve code readability
removed duplicate closing of writer and query1 in TestWildcard . java to streamline resource management and improve code readability
clone the nBits array instead of returning it directly to ensure that the original nBits array is not modified externally
made the ` deriveCollectorName ` method protected in ` ProfilerCollector ` and added custom name assertions in ` TestProfilerCollector ` to allow
datamongo - 2043 - omit type hint when write simple type
added performance measurement for the creation of proxy factories in ProxyMaker . java to improve monitoring and performance analysis of proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated connection exception handling to include the original exception as a cause to improve debugging by providing more context in exception messages
refactor reinflateWidgetsIfNecessary method to utilize Workspace for widget management to improve code organization and maintainability by centralizing widget re
added a new file ` DeleteInsideFileDialogTest . java ` that tests file deletion in a dialog to demonstrate the behavior of
chore ( lwjgl2 ) : fix lwjgl3 / lwjgl2 - lwjgl3 - lwjgl
[ # 7272 ] instructor student list page : add profile picture to html page ( # 7273 )
added support for specifying onlyrun and methods in TestIgnorance . java to enhance flexibility in ignoring tests based on environment variables
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature and improve usability
updated QueryDslJpaRepository to handle null pageable cases to ensure correct retrieval of content when pageable is null
added a method to compute memory size based on a fraction parameter to ensure memory allocation respects specified fraction limits
increase the timeout for the JMSPublisherConsumerTest and update the run method in PublishJMSTest to allow more time
refactor SnowballAnalyzer class to improve code readability to enhance maintainability and facilitate future updates
updated previousIndex handling and modified InternalBatch instantiation in StreamingAggTemplate . java to improve efficiency and clarity in batch processing
throw graalerror instead of assert in bytecodenode .
added a new method ` stream ( TableIdentifier < ENTITY > tableId , computeIntensityDefault ( ) ) ` to the ` StreamSupplierComponent
updated logging messages for file movement failures and improved error handling in MediaMonitor . java to enhance debugging clarity and ensure proper handling of file
replaced ` setAccessable ` method with ` newInstance ` in ` InjectorProxy ` and updated class visibility in ` StandardInjectorProxy ` to
[ hotfix ] [ stream ] remove out . close ( ) from flinkstreamingcreatefunction
added unit tests for parsing and deparsing SQL statements in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest classes to ensure that unsupported
changed return value from null to an empty ImmutableList in AppleTest . java to ensure the method returns an empty list instead of null
updated the message in NamedSetTest . java to include Quality Distribution and Deliberate errors to improve clarity and accuracy of the test
added a condition to check for websocketReconnect in DeconzBridgeHandler . java and refactored connection state management in WebSocketConnection . java
replaced ` setAttribute ` with ` removeAttribute ` for ` ACEGI _ SECURITY _ AUTHENTICATION _ KEY ` and ` ACEGI
hbase - 25831 addendum fix testregionreplicareplicareplicationendpoint # testenabletablewithretries in hbase -
added PMS initialization and configuration settings in FormatRecognitionTest . java to ensure proper initialization and configuration of PMS settings
volume upload : fix state machine transition for ova data disk template
updated imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 and SpringJUnit4ClassRunner to improve
added @ Override annotations to CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method overriding
updated SQL statements and assertions in AppendOnlySchemaIT . java to include a new metricVal1 variable to ensure consistency and correctness in metric
added a check to ensure the document count in deletedDocs matches the segment document count to prevent corruption errors when document counts do not match the
add a way to get the name of the sip logger and log the stack trace .
bugfix : increase financial length for staves w / no starting barline
removed default value for handleFileUploads in VertxPlatformHttpServerConfiguration . java and updated its usage in VertxPlatformHttpEngineTest .
added a new test method to validate the default CSRF protection matcher to ensure compliance with case sensitivity in request methods
refactor field access in HotSpotObjectConstantImpl to use a local variable instead of a static class to improve code readability and reduce
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in the spelling functionality
add watermark to fileio . match ( element , emptymatchtreatment ) so that watermark can be use
hhh - 14663 fix the ctedefinition field in sqmcctestatement . copy ( )
added import statement for ResultSetMetaData in QueryCompilerTest . java to enable handling of ResultSetMetaData in the query compilation process
updated library command to include the root directory in the output string to enhance clarity by specifying the project ' s root directory
updated slider range from 180 degrees to Math . PI in RailButtonConfig . java to improve the visual representation of angles in the user interface
updated drawEncloser coordinate and modified save execution in Saves . java to improve rendering accuracy and enhance error handling during save operations
added support for expression language in KerberosProperties to enhance configuration flexibility for expression language handling
removed null checks before setting the held item mount point scale in ThirdPersonRemoteClientSystem . java to simplify code and improve readability by
updated the ` setupViews ` method to include ` ScrimView ` as a parameter to enhance functionality by allowing customizable scrim view
[ flink - 25801 ] [ state - backends ] enable periodic materialization by default
added getter and setter methods for the ' value ' attribute in ProtocolParameter . java and updated references in List . java and ParamTagHandler .
add a test case to demonstrate that chunking be work with a head url
add bumped : yes option to check router answer
added Content - Type header to SwitchToPostInterceptor and modified SearchRequestUnitTest to remove the Content - Type header to ensure proper handling of
refactor EmbeddedClientConnector class for improved clarity to enhance maintainability and readability of the code
added logging functionality to the PhoenixResultSet class to improve debugging by notifying when fetch size is ignored
added initialization of AndroidNet with null parameters to ensure proper initialization of the network object
fix a syntax error in the LLRealtimeSegmentDataManager class to ensure consistent formatting and improve code readability
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 16462 addendum remove hbase - prefix - tree from tablemapreduceutil
added a conditional check for ` inflationFailed ` in ` DesignerActivity ` and made ` root ` final in ` XMLLayoutInflater
refactor PushbackInputStream class to improve code readability to enhance maintainability and facilitate future updates
lower - phase : do not create a guard if the node be not lowerable
updated the error message format in ErrorMessageAdapter . java to reflect synchronization failure instead of download failure
added support for newline characters in the Makefiles parser and updated related tests to ensure consistent newline handling across different operating systems
replaced ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and added null check for
updated refresh flags in SimpleBatchNode to include RF _ TRANSFORM and setBoundRefresh to ensure proper refresh behavior during batch processing
remove guarded safepoint check , use method . isuninterruptible instead
fix ( lwjgl2 ) : fix lwjgl2 window size issue
replaced translation calculations for centerTaskParallaxToRight and otherAdjacentTaskParallaxToRight with centerTaskParallax
updated the ` LiteralNode ` class to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and modified the ` newInstance ` method to
added functionality to set the total length in CompoundFileWriter and implemented the setLength method in FSDirectory and IndexOutput classes to ensure accurate file length
updated manifest handling in AndroidNdkScriptGenerator and modified GwjglDebugStarter to use Mpg123Test instead of Sprite
camel - 17850 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource
added support for wildcard role in authorization checks in RuleBasedAuthorizationPlugin . java and updated test cases in TestRuleBasedAuthorizationPlugin . java to
updated ZookeeperClientServerRegisterRepository to use GsonUtils for JSON parsing and improved URI registration handling to enhance robustness and clarity in
renamed methods and classes in ReturnsDeepStubs for clarity and consistency to improve code readability and maintainability by using more descriptive
replaced direct usage of ` toByteArray ( ) [ 0 ] ` with ` new Byte ( " 0 " ) [ 0 ] ` when `
fix ` ` parse date ' ' log message in bibentry
updated PBE algorithm handling in PKCS12KeyStore and modified PBE algorithm string in PBETest to ensure compatibility with new encryption standards and
tmi - tiff : do n ' t throw eofexception if the offset be not valid
added validation for job parameters in CommandLineJobRunner to ensure that invalid job parameters provide clearer feedback to the user
updated assertions in SmtpTests and MailTests to use the string " foo " instead of " \ r \ n " to ensure consistency in
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve code readability and clarity
replaced synchronized ` getLastSequenceId ` and ` getNextSequenceId ` methods with an ` AtomicLongFieldUpdater ` for thread - safe increment
added a new file ` Test . java ` with a static method ` sum ( ) ` and a main method ` main ( ) ` to
updated ` @ Config ( minSdk = Q , maxSdk = R ) ` to include ` maxSdk = R ` in ` ShadowW
added a new file ` Solution . java ` that implements a solution for sorting an integer array based on a specified criteria to implement a solution that
patch by jbellis ; review by brandonwilliams for cassandra - 1721
refactor taskbar recreation logic to use boolean variables for clarity to improve readability and maintainability of the code
refactor synchronization logic in SyncFutureCache . java to improve performance and maintainability of the code
updated the default DUBBO protocol version from 2.0 . 1 to 2.0 . 2 and adjusted the minimum version for response ATT
pmd : uselessstringvalueof : fix false positive with literal
added a new test method ` testEllipseNoseconeDrag ` in ` SymmetricComponentCalcTest . java ` to validate the behavior
increase default target max type shard size for hollowproducer
added support for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " in TestBack
refactor CompilationTask to improve code structure to enhance maintainability and readability of the code
updated assertions in TestSemanticAnalysis . java and refactored parameter handling in DDLTask . java to improve clarity in test mode and
added a call to execute a ClearDatabaseChangeLogTableStatement with the specified catalog and schema name to ensure that the database change log table is
updated RestClient and CallPath classes to handle versioning and path parsing to improve versioning functionality and ensure proper URL construction
updated exception message and added closed state checks in PhoenixDriver . java to improve clarity of error messages and ensure proper resource management
add some javadocs and fix typo in the code .
added JUnit ' s ` @ After ` method and modified ` FolderPickerActivityIT ` to extend ` AbstractIT ` and implement a screenshot
[ gr - 36400 ] do not remove deoptimizationgrouping phase if dev mode be enable .
added a check to return a string if the length is less than 2 in StringHelper . java and updated tests for removeLeadingAndEndingQuotes to
refactor JpaQueryCreator to use a local variable for type comparison and improve exception handling to enhance code readability and maintainability while ensuring
add a check to prevent push a branch id if the authentication duration have be too long .
added dispatch ( new P25Message ( mMessage . copy ( ) , duid , aliasList ) ) in P25MessageFram
added null checks for handler before calling checkClosed ( ) in WebSocketImpl . java and implemented a new test for clearing client handlers on the end
( chore ) camel - discovery : use type constant instead of string
updated widget padding retrieval and initialization in AppWidgetResizeFrame and Launcher classes to use internal padding resources to improve compatibility with the internal widget padding
added hideAllApps method to TaskbarUIController and updated closeOverlay method in BaseActivityInterface to enhance user experience by hiding all apps
removed synchronized modifier from launch method and replaced Thread . sleep with launcher . join in CrawlJob . java to improve performance by eliminating
updated the calculation of the Point to use the canvas ' s coordinate instead of the event ' s Y - coordinate to ensure that the Point is
replaced notification notifications with startForeground method and added a condition to stop foreground based on upload count to improve notification handling and ensure foreground status is
implement rfe 1080803 - excessivepubliccount no long report false positive for static final field .
hbase - 26533 testthrifthbaservicehandler should set client retries to 3 ( addendum )
change log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity and improve performance
added error handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve debugging capabilities
added a new class ` BittrexTickersResponse ` and updated ` BittrexMarketDataServiceRaw ` to use it to
fix a classcastexception in entityentry . getenumconstants ( ) .
updated websocket session registration and unregistration to use endpoint instance instead of endpoint class to improve flexibility in session management by allowing different endpoint types
added Unicode characters to the character array in FileUtils . java to improve compatibility with Unicode characters in file operations
added methods to set and get stylesheet in ResourceService , modified stylesheet handling in ResourceHandler , and updated related tests to enhance stylesheet management and ensure
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before further operations
changed method invocation from ObjectParameterStrategy to PointerParameterStrategy to ensure compatibility with pointer - based operations
updated the condition in CreateSequenceGenerator to exclude CockroachDB to ensure compatibility with CockroachDB ' s sequence generation logic
removed an unnecessary check for isEnum in ObjectStreamClass . java to simplify the condition for checking string type
replace UnsatisfiedLinkError with SymbolNotFoundError in Library . java and create a new class for handling symbol - related errors to improve error handling
updated BinaryResponseWriter to conditionally create a SolrDocument based on the presence of pseudo fields to improve handling of document retrieval based on the return
added ping / pong handling and a test for the WebSocket pause functionality to ensure proper handling of ping and pong states in the WebSocket implementation
added an additional character " - " to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to enhance the regex functionality by allowing
add support for rotation of dns server with cache option
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration . java to ensure messaging functionality is only enabled when messaging tracing is available
mondrian : fix sqlquery . quoteIdentifier ( ) to work with db2
updated import statements in multiple Java files to use the correct Sora event and widget classes to ensure compatibility with the latest version of the Sora
added handling for XML close tag in XMLLightweightParser to ensure proper parsing of close tags during XML parsing
set visibility of TouchCharInput to GONE to improve user interface responsiveness
added a null check for the current user before comparing its ID to avoid potential NullPointerException when accessing the current user
added conditional logic to set members based on index in JSObjectLinker . java to ensure proper assignment behavior for JSObject members based on index
refactor DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to initialize suffix as a new instance instead of relying on a
marked SecurityConfig class as deprecated to indicate that the class is outdated and should no longer be used
mark several classes as deprecated to indicate that these methods should no longer be used and may be removed in future versions
deleted the JoglDebugAdaptor . java file and removed its functionality from RocketFigure3d . java to streamline the code
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and ` AWSPropagation ` classes for better string representation to improve debugging and logging
added PendingIntent to FileDownloader and FileUploader classes to enable direct updates to the notification content during file operations
refactor the ` nextOrd ` method to use a separate ` set ( ) ` method for clarity to improve code readability and maintain
refactor DateTimeFormatter class to improve code readability to enhance maintainability and facilitate future feature additions
updated the initialization of DnD drag properties and shell folder manager in WToolkit . java to ensure proper drag - and - drop functionality
added null and empty checks for administrator credentials in KerberosOperationHandler to ensure that only valid credentials can be set , improving error handling
added a constant to limit the width scaling for smaller screens in BaseWidgetSheet to improve layout handling for tablet and two - panel devices
added render start and end methods for rendering in PSurfaceJOGL . java to ensure proper rendering flow for the sketch window
refactor hashing logic in the Hashing class to improve performance and maintainability of the hashing algorithm
modified the ` accept ` method in ` FileSenderFactory ` to use ` FolderName ` and ` fileName ` instead of ` file ` to
updated the addToListIfNeeded method to include a content description parameter for user information to enhance user information display by providing context - specific information
removed null check for newType in JavaType initialization to streamline code by eliminating unnecessary null checks
increased ACTIVITY _ START _ DELAY from 500 to 800 to improve responsiveness during activity start
added a WEBAPP _ HOME constant in SolrJettyTestBase and updated the path assignment in JettyWebappTest to use it to
removed null check for diameter and initialized selectedMotorSet to null to simplify the code and ensure the selection state is reset
added BufferUtil import and cleared the buffer in ByteBufferPool . java to enhance buffer management functionality in the ByteBufferPool class
do n ' t use edgeeventaction when create notification rule via rest api
rename " authorization " to " authentication " in configuration keys to clarify the purpose of the configuration property related to authentication
added deleteExchange ( ) and clusteredChannel . queueDelete ( ) methods in DurableOnTransient . java to ensure proper exchange deletion and
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
refactor connection handling in ServerInfoService to use a listener for error management to improve error handling by providing clearer context on connection failures
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
refactor Quartz2Adapter class to improve code readability to enhance maintainability and facilitate future updates
added a try - catch block to handle IllegalStateException during the lookup execution to improve robustness by preventing application crashes due to illegal state exceptions
update Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest schema requirements for Spring Security
replaced ` Helper ` parameter with ` Args ` in ` newNameResolver ` and introduced synchronization context handling in ` DiscoveryClientNameResolver ` to
added a check for non - empty annotations before converting them to a list in JavacParser . java and introduced a new utility method for
added " com . sun . naming . internal . " to package access checks in CheckPackageAccess . java to ensure proper access control for internal
change default value of strict from false to true in StaxEventItemReader . java to enable strict validation for event processing
updated OfflineSorter to handle exhaustion checks during partition reading and added a new test for over - nexting scenarios to improve error handling and
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
added a check for ` lightState . getXY ( ) ` in ` LightStateConverter ` to determine if the light state is in XY
refactor methods in CellLayout to use targetCell array instead of direct child views to improve code clarity and maintainability by centralizing icon
replaced direct calls to ` activity . showLoadingDialog ( ) ` with a call to ` FileDisplayActivity . showLoadingDialog ( )
added a null check for ` uigestureFile ` before loading logs to avoid potential ` NullPointerException ` when ` uigestureFile ` is
updated test cases in FieldNamingPolicyTest to use Locale . getDefault ( ) for case conversion to ensure consistent behavior across different locales
added a call to setListeners ( getListeners ( ) ) in XmlSuite . java to ensure that the result has the correct listeners associated with
added a new method ` loadWithNewGlobal ` to the ` Global ` class to provide functionality for loading a script with a new global context
added methods to convert JSON string to StarTreeIndexSpec and updated tests accordingly to enhance the functionality of StarTreeIndexSpec for better
added import statement for ObjectPostProcessorConfiguration in HttpSecurity and related classes to enhance security configuration handling in the application
replaced double quotes with single quotes in file path replacements to improve code readability and consistency in string handling
[ drools - 5707 ] fix null pointer exception when fire in expression
added import for FieldCache and invoked commit ( ) and purgeFieldCache ( FieldCache . DEFAULT ) in TestDistributedSearch . java to
add test case for boundary message event on subprocess and inside process multiple instance
added a new method ` resolveStaticCall ` to ` ProgramManager ` and updated related calls in ` PointerAnalysisImpl ` and ` Jimple
http : / / issues . apache . org / jira / browse / amq - 3833 - add a messagegrouphashbucket for
updated slot ID handling in Secmod . java to use constants instead of boolean flags to improve code readability and maintainability by eliminating
added alignment support and modified widget addition method in Layout . java , and modified GdxRenderer . java to return true to enhance flexibility in
[ hotfix ] [ test ] disable unalignedcheckpointitcase for now
added imports for MIDI , Clip , Transmitter , and Sequencer , and modified type validation logic in JDK13Services .
added a condition to check if the keyword is already referenced before adding it to the reference map to ensure that the keyword is only added if it
camel - 16462 : fix the issue that multicast eip do n ' t return the correct number of exchange pair .
improve code clean - up , no functional change
[ statsd ] escape special character in flavor name ( # 644 )
add a udp port to the member interface so it can be use for test .
rename ` ` operator multicast ' ' to ` ` operation multicast ' '
updated the delivery timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test stability by allowing more time for message
added a try - finally block around the node handling in VertxTestBase . java to ensure proper resource cleanup to prevent potential resource leaks
added a synchronized destroy method to the SessionFactoryServiceRegistryImpl class to ensure that cachedEventListenerRegistry is cleared when the destroy method is called
danielwagnerhall : fix test to work with local storage
[ pytorch ] add test for map of tensor ( # 1395 )
added a TaskStackChangeListener to manage task stack visibility in RecentsView . java to ensure the task stack ' s force invisible flag is
add a profile test to verify the checkdatepattern optimization of the checkdatepattern method
camel - 14263 : camel - cxf should set property on endpoint factory bean if not already set
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability
added debug logging and play time calculation in LauncherAnimationRunner . java to improve debugging capabilities and ensure playTime is correctly set based on device
added a conditional check for BailoutOnException in C1XCompilation . java and defined BailoutOnException in C1X
changed signup and passwd initialization from default values " / create _ account " and " / forgot _ password " to null to allow for
[ hotfix ] [ runtime ] rename previousallocationslotselectionstrategy to reserveallocationslotselectionstrategy
camel - 12463 : camel - core - timeconverter should not use simpledateformat for non - lenient locale
geotiff : add gc _ nodata to geotiffreader
simplify error message when there be no source
replaced ` toString ( ) ` method with ` new String ( toByteArray ( ) ) ` in JdbcExecutionContextDao and DefaultExecutionContextSerializer
added a CountDownLatch to manage the state of the client ' s connection state to ensure that the connected event is properly counted before proceeding
updated the ` ArrayTypeHandler ` class to handle null values for ` setNonNullParameter ` , ` getNonNullResult ` , and ` getNullable
replaced the usage of RegexpTunnel with reflection - based access to the prefix property to improve flexibility and maintainability by allowing dynamic retrieval of
updated the application picking method to use Application . class instead of null to ensure proper application context is used for application selection
[ drools - 2203 ] fix npe on mutable global
replaced Preconditions with validation for asset name , URL , and description in AssetIssueActuator . java and added validation methods in TransactionUtil .
fix copy pasting for textfield ( fixes # 3776 )
updated action label and description to use " @ text / offline . config - error - unknown - host " instead of " @ text / offline
replaced individual node settings with individual addAll calls for seed , active , and trust nodes to streamline node configuration by consolidating seed , active
updated assertions in BaseTokenStreamTestCase to include detailed error messages to improve debugging capabilities by providing more context in assertion failures
log4j2 - 1349 fix timebasedtriggeringpolicy to respect the modulus
added methods to ` ShadowAdapterView ` and ` ShadowListView ` for item click handling and text search in ` ShadowListView ` to
pdfbox - 4892 : avoid classcastexception in setitem ( ) , a suggest by valerybokov
added handling for null loopScope and implemented afterMethodScope method in GraphDecoder and PEGraphDecoder to improve robustness by ensuring loopScope is
refactor session handling in HttpSessionDestroyedEvent and add unit tests for security contexts to improve code clarity and ensure correct retrieval of security context attributes
added a test for changing the service name in ZipkinSpanReporterTest to ensure that the service name is correctly set to the manually provided span
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory for better logging to improve visibility into class exclusion issues and
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to clarify the purpose of the class
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds in ClientMultiMapLockTest . java to allow more
added DEFAULT _ CACHE _ CAPACITY and updated method signatures in ConfluentSchemaRegistryDeserializerProvider to include cache capacity to enhance cache management capabilities
updated JCheckBox name from " remind me later " to " checkAtStartup " in UpdateInfoDialog . java to improve localization support for
added method definitions for various strong key , weak values , expiration after access , and weighed functionalities in NodeGenerator . java to enhance
hhh - 13586 - improve performance of cascading action for non - transient entity
added methods to handle prototype property access and set prototype checks in ScriptObject . java to improve object extensibility checks and facilitate
updated the default read mode from " heap " to " mmap " and improved segment loading logging to enhance performance by using mmap instead of heap
added ByteArrayTemplate import and modified return logic in ArrayTemplateBuilder . java to support byte class handling for improved performance
added Hipchat support in SamlServiceProviderProperties and created CasSamlSPHipchatConfiguration for SAML service provider configuration to enable support for
replaced List < URL > with Set < URL > for commandRegistryUrls and updated resource retrieval logic to improve performance and ensure uniqueness of command
updated warning message to include the current context for uncovered HTTP methods to improve logging clarity and provide more context for troubleshoot
camel - 13663 : camel - sftp - allow user to connect to a remote server via ftp
camel - 15681 : fix for http : / / issues . apache . org / activemq / browse / amq - 2
server : fix checkstyle violation in vmwareresource . java
refactor Timers class to improve performance to enhance application efficiency and reduce latency
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to
removed deprecated constants and constructors from UAX29URLEmailTokenizer to streamline code and encourage the use of updated alternatives
removed unnecessary ` Map < Object , Object > ` from ` ScriptObject ` and updated assertions in ` ContextTest ` to improve code clarity
refactor EventBusMetrics class to improve code readability to enhance maintainability and facilitate future feature additions
( chore ) camel - dspace : add a method to i18nutil to retrieve the language of an eperson
remove @ postconstruct from javerstransactionaldecorator so it do n ' t need to call ensureschema
removed null check before adding the type to the _ pgNameToSQLType map to simplify the code by eliminating unnecessary null checks
added multiple server configurations to ScopedHandlerTest . java to ensure proper server setup for multiple handlers
fix calltimeoutexception when call be time out during wait - notify phase .
corrected a check for empty password in RestLoginProcessingFilter . java to ensure proper validation of the username and password in login processing
updated permission check from ` Objects . equals ` to comparing ` permissionNode ` with a wildcard string to ensure correct permission validation for account accounts
rename ` setEncoding ` and ` setCharacterEncoding ` methods to ` setSourceCharset ` and ` setCharacterEncoding ` to improve clarity and
changed the type of postLogin from byte [ ] to String in HostBean and related classes to simplify the handling of post login data and improve
added imports for GenericComponentModifier and FlightConfiguration , and refactored simulation handling in GeneralOptimizationDialog . java to improve code cl
camel - 17000 : camel - jbang - enable context reloading by default . thanks to joao for the patch .
updated console and logger configurations in CommonTestUtils . java to standardize logging configuration across the application to improve consistency and clarity in logging configuration
refactor PrologSizeSanityCheck class implementation to improve code readability and maintainability
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a check for non - closeable before resetting the non - closeable stream in RequestBody . java to ensure that non - closeable
added a check for enabled settings in EmbeddedNeo4jServer and improved debug logging logic in DefaultBeanContext to ensure that embedded settings
updated player movement and health component to use default values from prefab to improve flexibility and maintainability of player movement settings
added a half - length calculation for the total weight in the random method to ensure that the random number generation respects the size of the weights
no effective change - code cleanup , no functional change
added comments to clarify the sorting parameters for the " gcmsort " and " gcmdir " parameters to improve code readability
replace all instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract `
pipe : use a thread - safe lock instead of a thread - safe one ( # 1181 )
added a conditional check for the " robolectric . usePreinstrumentedJars " system property to determine the version of Robole
modified the conditional check from ` isSilent ` to ` isSilent ` in ` ExecDriver . java ` to correct the logic for determining if
added checks to prevent illegal attributes on dynamic fields in IndexSchema . java to improve error handling for unsupported attributes in dynamic fields
removed unnecessary check for randomlyReadRepair in StorageProxy . java to streamline repair logic for improved efficiency
replaced ImmutableSortedSet with Iterables for adding system include roots in PrebuiltCxxLibrary . java to improve code readability and leverage
refactor AdaptableX509CertSelector to initialize startDate and endDate as default values and introduce sensitivity checks to enhance certificate selection logic and
[ log4j2 - 1343 ] nosqlappender should use abstractappender . parseInt ( int , int ) instead of
mark the GuiScreenEvent class as deprecated to indicate that it should no longer be used in the future
removed redundant methods for adding , removing , and adding new categories in CategoryEditSearchRecyclerViewAdapter to streamline code by eliminating unused
no effective change - add support for servercachetype . collection _ id and servercachetype . collection _ id
updated the handling of mass overrides for child components in RocketComponent . java to ensure all child components are updated correctly when overridden properties are set
refactor JavaCompilerService to use ` post ` instead of ` doCompile ` and introduce error handling in ` JavaDiagnosticProvider ` to
refactor task handling in MultiThreadedBuildRuleResolver to use a Supplier for better flexibility to improve code readability and maintainability by
added a mutex to the WanReplicationServiceImpl class and modified the executor initialization logic to ensure thread - safe execution of the StripedExecutor
added null checks for partition and table data in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to improve robustness
refactor lambda expressions to lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to improve code readability and maintain
added a new test class ` FilesTest ` and a static method ` delete ` in ` mmm Files . java ` to verify file deletion
removed exception handling for socket closure in ServerSocketAdaptor and SocketAdaptor to simplify resource cleanup by directly closing sockets without exception handling
updated the class name check in SSLLogger from " java . lang . System " to " Logger . class . getName ( ) " to ensure
replaced the method for adding a working directory from clearing the current working directory list to directly adding the working directory to improve code clarity and
added null check for ` cn ` in ` ItemInfo . java ` and updated insets in ` Workspace . java ` to ensure proper handling of
changed the visibility of the ` GeneratedEntityDecorator ` from public to private to restrict access to the ` GeneratedEntityDecorator ` class for better encaps
removed the Solr update URL from the Java Durl configuration in SimplePostTool . java to simplify the configuration by removing unnecessary URLs
fix for ggb - 220 do n ' t work for min / max command
refactor error handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to ensure proper registration and deregistration of
updated conditional check for ` type ` in ` Linux . java ` to handle both null and presence of ` getOpenWithApplication ( ) ` to
close the web application context after each test to prevent resource leak
added search functionality using query parameters in RemoteBrowseHandler to enhance user experience by allowing dynamic search results based on user input
set the visibility of the neutral button to INVISIBLE in SetupEncryptionDialogFragment to improve user interface by hiding the neutral button when
refactor item count method to use itemdao instead of itemdaoimpl . countitems ( )
updated SQL statement syntax for creating tables and column descriptions to use double quotes to ensure correct syntax for SQL statements and improve readability
added logging and exception handling capabilities to CheckTokenEndpoint . java to improve error management and logging for OAuth2 - related exceptions
updated multiple Java classes for consistency in naming and functionality to improve code clarity and maintainability
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use POST and PUT methods instead of POST for updating identity zones to enhance API
updated tooltip delay from 20 seconds to 10 seconds and added tooltip text for SQL statements to improve user experience by providing clearer tooltips and
added support for run a single test method with JUnit 5 in ActionProviderImpl . java to ensure compatibility with both Surefire and J
changed exception handling from Exception to RuntimeException in WorkerShellStep . java to improve error handling by providing a more specific exception type
[ hotfix ] [ core ] add experimental annotation to flink - core .
refactor StreamCepstrumSource class to improve code readability to enhance maintainability and facilitate future updates
updated index calculation logic in List . java to ensure index does not exceed the bounds of items to prevent index out - of - bounds errors
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure correct type validation for Parenthesis expressions
added confirmation = true and requiredType = RequiredType . NONE to the DebugPaste command to enhance user experience by enabling confirmation and required
refactor management context configuration to use ` orElseThrow ` for endpoint retrieval to improve error handling and provide clearer feedback when endpoints are missing
ggb - 322 fix focus for mathquill ggb in mathquillggb
updated GoBinaryDescription . java to replace Arg class with AbstractGoBinaryDescriptionArg and modified related imports and methods to enhance code clarity and
updated environment variable handling in Jooby . java to retrieve the logback resource if it exists to improve logging functionality by retrieving the application
replaced ` RetryListenerSupport ` with ` RetryListener ` and created a new ` SecondDummyRetryListener ` class to simplify the code structure
fix metric reporting in elasticmeterregistry ( # 498 )
made ` email ` , ` author ` , and ` commits ` final and initialized the ` Contribution ` constructor to ensure immutability
replaced a for loop with a do - while loop in JUnitFormatter . java to improve readability and maintainability of the code
modified the initialization of the elements variable to handle non - LinkedList instances to ensure proper handling of non - LinkedList instances during retrieval
updated exception messages in StaxEventItemReader to include resource URL to improve clarity of error messages for better debugging
simplify testmultirendertarget . simpleupdate so it do n ' t interfere with other render target .
added null check for currentProfile and improved logging when no logout action is executed
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the namespace declaration is correctly
added BigInteger fields for cryptographic operations in KeyStoreManager . java to enable cryptographic operations for improved security
updated method calls from ` getIndexBuffer ( ) ` to ` getIndicesAsList ( ) ` in GImpactCollisionShape and Mesh
act - 1205 : fixed engine version in activiti - 5 deployment
updated property names for resource loader and runtime strict mode in SpecificCompiler . java to improve clarity and consistency in resource loading configuration
do n ' t try to attach the isolate thread if it ' s already attach .
updated GenericUDFMapValues to handle null maps and added unit tests for GenericUDFMapValues to improve robustness and ensure robustness
renamed " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to clarify the purpose of the interceptor
added config for oil well generation rate and spouts in BCEnergyConfig . java and updated OilGenerator . java to utilize
added a check for a file ' . clean - me ' in the ImportContext class and updated directory existence checks in JobQueue to ensure that
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5268
removed unused imports from RegisteredService and CRLDistributionPointRevocationCheckerTests to clean up the code and improve readability
added new constants EXTID _ ZIP64 , EXTID _ NTFS , EXTID _ UNIX , EXTT _ FLAG , and EXTT
refactor ` newFileSystem ` methods to improve file validation and error handling in ` ZipFileSystemProvider ` to enhance robustness by ensuring only valid
replaced ` createHorizontalStrut ` with ` createHorizontalGlue ` for the condition panel to improve layout consistency and readability
refactor connection initialization in FailoverUpdateURIsTest . java to improve code readability and maintainability
added Gson @ SerializedName annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to ensure proper
added deletebook method to databaseadapter , use it to delete book .
refactor multiple Java classes to improve code structure to enhance maintainability and readability of the codebase
fix off - by - one error in ajp processor .
fix shutdown of admin console plugin to properly restart the server .
replaced unregisterHandlers ( ) method with direct assignment of binaryConsumer and textConsumer in WebSocketImplBase . java to improve code clarity and
added configuration properties for device ID transformation method , enable ID tables , and log file in IoTDBDescriptor . java to enhance configuration flexibility for
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 in ExitableDirectoryReaderTest . java and introduced a new DelayingSearch
updated the condition to check if the " http : / / timestamp . comodoca . com / rfc3161 " URL is present
change script . createp2pkhoutputscript ( ) to use scriptbuilder . createp2pkhoutputscript ( )
updated the expression in IndexSchema . java to include " / schema / types / fieldType " alongside " / schema / types / field
added a null check for valueCompleters in Completers . java and created a new test class OptionCompleterTest . java to
fixed checkstyle issue in s3utils
changed data type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to improve performance and reduce memory usage by
fix a bug where zip file be not be upload properly .
updated the alpha value of the reply button in TweetFragment . java to enhance the visibility and aesthetics of the reply button
updated expected string format in AccessLogSupportTest to include timestamps to ensure accurate representation of log timestamps in test cases
fix marycachetest to work on window
pdfbox - 4892 : remove redundant null check , a suggest by valerybokov
added a null check for the marshaller in AbstractSamlObjectBuilder . java and removed unnecessary initialization logic in AbstractSaml10ResponseView . java to
replaced printStackTrace ( ) method calls with LogUtil . warn ( ) for better logging to improve error handling and maintainability by using a standard
added a condition to check if the assets directory exists in dev mode and updated tests accordingly to ensure that the assets controller correctly handles non - existent
[ hotfix ] [ rocksdb ] add rocksdbkeyedstatebackend . writeoptions to rocksdb backend
updated the default format string from " value - tag - index " to " value - index " in CoreLabel . java to standardize the
fix bug : douglas . minprecision be now set to ` ` true ' '
enable secp256k1 and altbn128 by default ( # 186 )
rename duclsSandboxtest to sandboxtest to avoid confusion
camel - 3506 : camel - cxf should use exchange . setexception instead of logger . log .
make forwardpropagatetree public so that it can be use outside the sentimentcostandgradient class
updated SQL query in JDBCExample . java to remove the ' 0 ' parameter to simplify the query syntax for better readability
provide a warning if $ { project . basedir } expression be use during profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future feature additions
added zoom functionality to handle back key in ShareActivity to improve user experience by allowing zoom - in and zoom - out functionality
added a condition to skip fields with deprecated annotations in Json . java to improve handling of deprecated fields during serialization
added functionality to show and hide the send layout based on floating - compose settings to enhance user experience by providing smooth transitions when the send layout is
[ hotfix ] [ yarn ] fix checkstyle violation in util
added Progressable parameter to multiple methods in Utilities and related classes to enable progress tracking during file operations
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
remove the contribution from the panel by contribution and update the panel ordering and colors in the ContributionListPanel to ensure the panel reflects the
renamed HyervisorTemplateAdapter to HypervisorTemplateAdapter and updated related imports to improve clarity and consistency in naming conventions
added a check to set the dPath to the user ' s directory if it is empty to ensure the application uses the user ' s directory
fix defaultaudiosink . getmaxsupportedchannelspassthroughv29 ( ) to respect audio format . sample rate
log4j2 - 1343 add mapfilter . filter ( ) method and remove unused import
renamed VerificationInOrderWithCallsTest . java to improve clarity to enhance code readability and maintainability
updated the axis reference from ` axis . z ` to ` axis . x ` in the ` setFromAxis ` method to ensure the correct axis
corrected a typo in the constant name from " colelction . delim " to " collection . delim " to ensure consistency with the
add unit test for curatorframework . connectionstatelistener ( ) .
[ netbeans - 4687 ] fix issue # 5355
replaced direct calls to SystemProperties with a single variable for one - handed mode support to improve code readability and maintainability by reducing
added onDetachedFromWindow method to clean up running tasks when the view is detached to ensure proper resource management and prevent memory leaks
added a dictionary parameter to the MorfologikAnalyzer and related classes to allow customization of the stemmer based on the dictionary used
replaced the exception handling logic in ResultSetTest . java to improve clarity and correctness of exception reporting
updated initialization message to use an empty string instead of " debug " to improve clarity by using an empty string instead of a hardcoded debug
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` and updated exception handling logic in ` AbstractPhenomenaTest .
refactor tooltip text handling in ComponentTreeRenderer to use a dedicated method to improve code readability and maintainability
increased the timeout duration for the await statement in ZipkinStreamTests from 5 seconds to 10 seconds to allow more time for the server
add deviantart . username and deviantart . password to ripper .
replaced the KNOWN _ SIGNATURES array with a single String constants for Google package keys to improve code readability and maintainability
fix npe in importdirssolveallturtetest
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state transitions
added email description to the templateData in EntityGroupKeyContentFormatter . java and set it in TestEntityGroupKeyEmailContentFormatter . java to
replaced the method ` remove ( sel ) ` with ` data . remove ( sel ) ` in ` UserData . java ` to ensure the
refactor language handling in Locale . java and LocaleTest . java to improve code clarity and ensure correct language code retrieval based on length
refactor ChangeLogParser usage and encapsulate UpdateVisitor creation in a separate method to improve code readability and maintainability by centralizing the
added a condition to return early if the screen is pinning active to optimize performance by avoiding unnecessary processing during screen pinning
added text handling for missing chart data in Chart . java to improve user experience by providing more informative feedback when no data is available
added synchronization to check if the header has already been sent in Http1xServerResponse , Http2ServerResponse , and Http3ServerResponse
refactor chunk handling logic to separate SSL handling into a separate method to improve code readability and maintainability by reducing duplication
added a new header " : scheme " to the HTTP / 2 test cases and updated corresponding test cases to ensure correct handling of HTTP / 2
fixed - localcachedmap . keyset ( ) and localcachedmap . value ( ) method do n ' t return cached value or key
camel - 14263 : camel - jpa - make it easy to configure component and whatnot .
update jumpSpeed assignment from fallSpeed to jumpSpeed in PhysicsCharacter . java to correct the variable reference from " fallSpeed " to
added a condition to check if reparsedFunction is null when no syntax extensions are specified to ensure that the code only executes when reparsed functions
updated variable names and refactored order book handling in BitstampPusherService . java for consistency and clarity to improve code readability
added deprecated methods to retrieve old segment URIs in FileUploadDownloadClient to prepare for future removal of outdated segments
updated the query to use a filter parameter in MongoDbTailTrackingManager to enhance filtering capabilities for the tracking object
( chore ) camel - juel : add assertpredicate ( string expression , boolean flag )
added a range check for alpha in RecentsView . java to ensure alpha values are within valid range to prevent potential rendering issues
updated the string replacement syntax for the " Import - Package " attribute in ManifestReversion . java to ensure proper formatting of the version string for
refactor DataSyncConfiguration to improve code readability to enhance maintainability and facilitate future updates
added import for JavaSnippetRepository and initialized it in JavaLanguageServer . java to facilitate the initialization of the JavaSnippetRepository for
added a loop to iterate through time buckets before updating sums in StarTreeRecordStoreCircularBufferImpl . java to ensure sums are updated correctly
updated URLs in ChromeDriverService and ChromeOptionsFunctionalTest to use the correct Google API endpoint to improve accessibility and usability of the
( chore ) camel - pg : use string . format for prepared statement
replaced the import of ` com . sun . syndication ` with ` com . rometools . rome ` and added a
added handling for " Content - Length " header in TransferCompletionHandler and updated NettyTransferAdapter initialization to ensure accurate tracking of total transfer size
refactor Dialog class to improve code structure to enhance maintainability and readability of the dialog implementation
removed the constructor of EnhancedRuntimeException from its parent class to simplify the class structure and improve maintainability
( chore ) camel - log4j2 - avoid intermittent failure on slow machine
camel - 15836 : camel - spring - boot - starter - allow to configure component and whatnot .
updated method signatures and added exception handling in ByteArray . java to improve error handling and ensure compatibility with JDK 8
added a method to disable the input proxy in RecentsAnimationWrapper . java to ensure proper handling of input events during touch interactions
camel - 6770 : fix restlet domain service test to pass
removed the ` currentIdx ` parameter from the ` resizeAndRehashIfNeeded ` method to simplify method signature by eliminating unnecessary parameters
rename ` com . hazelcast . tests ` module to ` com . hazelcast . test . modulepath ` ( # 13679 )
added an ` getSourceDirs ` method to ` JavaServerConfiguration ` and modified the ` getCompiler ` method in ` JavaLanguageServer ` to
updated the menu item ID from menu _ open _ web to menu _ mute _ hashtags in TweetPager . java to improve
renamed methods and assertions in AncestorDescendantTests and updated logic in HasParentNode and Node classes to improve clarity and correctness of
use math . max to prevent negative y - coordinates in worldeditplayer .
[ iotdb - 4892 ] fix npe when load partial insert data ( # 7893 )
updated closing brace formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ datastream api ] remove mailboxexecutor from abstractstreamoperatorfactory
hbase - 26923 add precheck for settablestateinmeta and fixmeta method ( # 4565 )
updated lambda expression syntax and improved error message formatting in GatewayMetricFilterTests . java to enhance code readability and provide clearer output for
updated BlockJUnit4ClassRunner constructor to use getClass ( ) . getJavaClass ( ) instead of getTestClass ( ) to ensure correct class
[ drools - 1861 ] fix kiewatcher . delete ( ) to use lastdata instead of remoteitems
updated calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to improve layout spacing by accounting for padding
[ hotfix ] [ core ] remove unused dependency from coreoptions
replaced calls to ` doc ( ) ` with ` this . doc ( ) ` in BooleanScorer2 . java to ensure consistency in
added a call to writer . forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the merging process for improved performance
modified the ` Session ` interface to extend ` Closeable ` and changed return type of ` close ( ) ` methods from ` Connection ` to `
refactor GetLocations class to improve code clarity to enhance maintainability and readability of the code
replaced exception stack trace printing with a null check for exceptions in SchemaValidatorTask . java to improve error handling by avoiding stack trace printing
replaced a specific IOException handling with a more general ignore clause to simplify error management by avoiding unnecessary exception throwing
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to ensure compatibility with newer Android features and support libraries
ruby flavor : use stringbuilder instead of string for quantifier
updated logging level from warning to debug in DerbyDatabase and added null checks for username and password in BaseLiquibaseTask to improve
http : / / issues . apache . org / jira / browse / amq - 3833 - remove unused usecaches property
refactor CasGeoLocationConfiguration to use Resource instead of MaxmindProperties for database reading to improve flexibility and simplify database property management
update instructorfeedbackresultspageuitest to use different view name
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter and modified its logic in ` BaseResultIterators
removed the ` public ` access modifier from several methods in ` ApprovalStore ` and ` ApprovalsControllerService ` to enforce encaps
added a boolean flag to track the start status of the download process to ensure the notification is canceled after a delay to improve user experience by prevent
replaced ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and added methods in ` AbstractFloatingView
updated project version from 1.0 . 11 to 1.0 . 13 and adjusted copyright year from 2008 to 2009 in JFree
replaced ` yield ( ) ` method calls with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread
refactor GsonBuilder to improve code readability to enhance maintainability and facilitate future feature additions
avoid nullpointerexception in proverbotanasmethod . setfixedpoints
remove -- java . espressohome option and use graalvm . homefinder instead
doc : fix typo in javadoc ( # 1421 )
make deletesessionaction final and remove unused method
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency and
initialized ` sz ` to 0 and modified result assignment logic in ` SolrIndexSearcher . java ` , and enhanced error logging in ` Test
updated triggerMediaScan method to include the file parameter to enhance media scan functionality by associating the media scan with the file
removed conditional logic for posting test results in TestRunning . java to simplify the test result posting process by always calling postTestResults
added custom G - code settings to the MainWindow to enhance user experience by allowing custom G - code options to be set
camel - 16462 : camel - additionaljaxb should use bufferedwriter instead of write to outputstream
refactor JsonElement class for improved readability to enhance maintainability and facilitate future updates
added import statements for SolrTestCaseJ4 and implemented exception handling in TestBadConfig . java to improve test reliability by ignoring specific exceptions
added a method to remove fragments and the action bar in GpsMainActivity to ensure the action bar is properly hidden when a fragment is removed
fix a bug in tokenizerannotatoritest that cause test to fail
replaced ` Range . create ( 0 , 0.0 , 0.0 ) ` with ` Range . Byte ` and updated related method
updated gcode file and modified output statements in VisualizerCanvas . java and GcodeViewParse . java to improve clarity and functionality of
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwards
swapped the order of method calls in the Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java file to improve read
added a condition to close the exchange client if the query is complete and the output stage is null to ensure proper resource management and prevent potential memory
fix bug in ` ` find broken file link ' ' : file relative to the bibfile be now
added an import statement for SolrClient and a private Map < String , List < SolrClient > > shardToClient to the Chaos
fix npe in configurationactivator when the file do not exist
removed unnecessary whitespace in the add method in NestedRepositoryTreePanel . java to improve code readability and maintain consistency in formatting
changed the constructor visibility of ` ExtensionTypeHeader ` from package - private to public and added a validation check for the extension type to ensure the
pdfbox - 4892 : remove unneeded try / catch block , a suggest by valerybokov
make pushonshutdown default to true by default
refactor ReactiveStateMachineExecutor to include a trigger callback for error handling to improve error handling and provide better context management during event processing
add a test for multiple Python executables on the first path in BuckConfigTest . java to ensure that the executable path is correctly set
added a default button to the root pane in InitialAccountRegistrationFrame to enhance user experience by allowing sign - in functionality
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error logging to include exception details to improve debugging by providing more context in error messages
remove the reflection package since it ' s no longer in the public api
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created unit tests for the ` Oid
removed private Vector2 center declaration from multiple classes to streamline the code by eliminating unnecessary fields
[ hotfix ] [ runtime ] fix checkstyle violation in registerandprocessbundleoperation
refactor SslContextFactory to improve SSL configuration handling to enhance security and performance of SSL connections
[ hotfix ] remove unreliable default _ max _ expectations from configurationproperties
updated the return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more descriptive error code for access
[ 3.0 ] add consumerclassloaderfilter ( # 9560 )
modified the ` shiftRows ` method to include a ` copyRowHeight ` and ` resetOriginalRowHeight ` parameter for better control over row
replaced setRolloverIcon and setRolloverPressedIcon methods with setRolloverPressedIcon and setRolloverPressed to improve clarity
refactor task view handling to use a new method for setting grid translation to improve code clarity and maintainability by consolidating translation logic
add miss since javadoc tag to assertion # assertthat *
added null check for currentDateTimeFunction in multiple database classes to ensure proper function retrieval and avoid potential null pointer exceptions
added a method to convert a string path to an anonymous path in IOUtils and updated Log4jUtils to use this method to improve path handling
updated the ` DigitalWellBeingToast ` and ` TaskView ` classes to include a content description parameter to enhance the toast
updated wait condition in CatalogTracker to use a default value of 50 when timeout is zero to improve responsiveness by preventing premature timeout
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
fix ( item ) : do not convert item to state in genericitem
added import statements and modified properties handling in BidirectionalOneToOneNPlusOneTest . java to enable the integration of ClassImportIntegrator
added functionality to remove extra empty screens and adjusted startSearchPageIndex initialization to ensure proper handling of workspace screens based on their
refactor code to initialize ` baseDerivedRefs ` and ` s ` with appropriate initializations to improve code readability and performance by reducing
updated string formatting in GoogleLineChart and GooglePieChart to use double quotes instead of single quotes to improve consistency and adherence to
refactor batch processing logic in SendingAccountor . java to use ` get ( ) ` and ` addAndGet ( ) ` for better
added a position field and a method to set it in WALPrettyPrinter . java to allow users to seek to a specific position in the file
updated the transport port from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java to ensure that the transceiver
updated SimpleReport to sort log events before generating a report to ensure events are sorted before generating a report for better data organization
add a test to verify that the getCsvLine method returns a CSV line with escaped quotes to ensure correct handling of double quotes in CSV file
try to fix the test failure of the chinese chinese algorithm
do n ' t send iq message to server that do n ' t require it
removed the @ JniImpl annotation from VM . java to clean up unnecessary code and improve readability
updated configuration settings from " http . plugin . check . blocking " and " http . plugin . check . robots " to use constants from the
added a condition to check if the video HDR format is " dolbyvision " and removed debug print statements from MediaInfoParser to
updated test case to use " other _ package2 " instead of " other _ package " to ensure compatibility with the new package structure
add unit test for worldborder resize and resize
hbase - 25832 master can not host user region in replication status ( jimmy , review by xuefu )
ggb - 1566 remove caller from view when login be open
refactor markDataResourceOnline calls to use a helper method for generating instance configurations to improve code readability and maintainability by reducing red
changed the access modifier of the FieldAttributes class from package - private to public to allow access to FieldAttributes from other packages
add unit test to verify error message when project reference be miss
removed redundant null checks for protoGetSwitches and protoHistory in PropertyMap . java to simplify the conditional logic for better readability
refactor ` getControllerId ` methods to accept a ` configId ` parameter and streamline the computation of ` controllerId ` to improve code
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper
removed the condition for generating refresh tokens in the OidcConsentApprovalViewResolver to simplify the conditional logic for better readability and maintainability
removed console output statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced a lambda expression with an enum NoopGetter in BaggagePropagation . java to improve code clarity by utilizing an enum
refactor ConditionalOnEnabledResourceChain class for improved clarity to enhance maintainability and readability of the code
added a condition to check if treeRoot has child nodes in BarrowmanCalculator . java to ensure that the calculation only proceeds when there
pdfbox - 4892 : use unfilteredstream instead of filteredstream for jbig2filter
updated logging messages from " CN1 " to " CN1 " and refactored session state handling in FacebookImpl . java to improve cl
updated return values in ShadowICU . java from " h : mm a " to " skeleton " and modified test cases in ShadowICUT
removed the check for device lock status in TouchInteractionService to simplify the code by eliminating unnecessary device lock checks
cloudstack - 3549 : fix npe when try to set default disk offering for a volume without disk offering
replaced FileChannel with AsynchronousFileChannel and added an position variable to improve performance and control over file writing operations
removed unnecessary formatting in SigInt and SigIntTest classes to improve code readability and maintainability
mow - 169 remove updatebybboxresize ( ) and preparebboxresize ( ) , a suggest by michael
change return value from - 1 to 0 in Asset . java to ensure the method correctly indicates a successful operation
benchmark : use different value loader and mapping function to reduce memory usage
added a refresh listener to the UploadListFragment to notify the adapter when the data is refreshed to ensure the UI reflects the latest data changes
use optional < path > instead of file ( # 4339 )
refactor ParticleEffect to use a single method for accessing emitters to simplify array access and improve code readability
refactor service and engine retrieval logic in Tomcat . java to streamline service and engine management to enhance code readability and maintainability
updated error messages in BuildRuleFactoryParams , Console , and BuildRuleFactoryParamsTest to include a period to improve clarity and consistency in
added a check to return early if the playback state is not playing to optimize performance by avoiding unnecessary processing during playback
replaced the use of ServiceComponentDesiredStateEntityPK with a direct call to findById to simplify the code and improve readability by elimin
refactor ` useModule ` method and add ` InnerClassFieldClash ` class for testing inner class field clashes to improve code cl
added logging and follow - redirect filter options to DockerClientFactory and DockerClientProfile to enable customizable logging and follow - redirect functionality based on
replaced direct call to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure thread
updated NationalizedScalarQueryTest to use SQLServer2008Dialect and removed DB2Dialect imports to ensure compatibility with SQL Server 2008
added a try - finally block around the verification of the zip header in ZipHelper . java to ensure that the input stream is properly closed after
changed the visibility of the storeClassFile method from private to public to allow access to the storeClassFile method from other classes
updated assertions for NO _ MORE _ ORDS in SingletonSortedSetDocValues . java and added a new test class TestSortedSetDoc
updated error messages in CGIHandler to remove unnecessary parameters and added a callback handler in JavaVM to improve clarity of error messages and enhance
added additional newline characters to the condition in LineReaderImpl . java to ensure compatibility with additional line ending formats
replaced List with Set for handling hash codes in multiple classes to improve performance and ensure uniqueness of hash codes
added a check to return early if the mesh has no vertices to optimize rendering by avoiding unnecessary processing when there are no vertices
add more descriptive error message for verification in order
replaced ` FileUtil . createData ` with ` FileUtil . createFolder ` in ` MacroService . java ` to ensure the correct
truffle : remove unused import to fix checkstyle warning
refactor JsonObject class to improve code structure to enhance maintainability and readability of the codebase
updated idle time validation logic in SelectChannelEndPoint . java and modified idle resource handling in HttpConnection . java to ensure proper maximum idle time handling
fix harmlandblock . cansustainplant not check the plant ' s state , not the state itself . close #
added assertions for primary keys in QueryDatabaseMetaDataIT and updated query to include Multi _ TENANT and SALT _ BUCKETS to
updated SimpleDateFormat instantiation to use Locale . US and added a new class B6791927 for cookie parsing to ensure consistent date formatting across different
removed multiple redundant calls to the database closing logic in DbHelper . java to improve code efficiency and readability by eliminating redundancy
increase poll timeout from 2 second to 5 second in batchmessagelistenercontainerintegrationtests
[ gr - 3640 ] add trace to economy allocation stage .
add save _ database and save _ all to source tab
refactor ObjectMapper initialization to use a static block to ensure consistent line endings across different operating systems
[ native ] fix path in nativeenvironmentrepository on window
refactor Application usage in multiple test classes to use a static Application instance to improve resource management and ensure proper cleanup of the Application instance
[ java ] remove redundant validation of record in recovery plan .
( chore ) camel - it : replace usage of groupname with errorgroupname in the test
disable testfuzzoptimizations . testfuzzoptimizations on travis
updated CameraManager to store reverse image preference in a private variable instead of accessing shared preferences directly to improve code clarity and maintainability by elim
refactor string comparisons in multiple Java files for consistency to improve code readability and maintainability
added a new Predicate for excluding IDS and META and refactored methods in TerserUtil to use it to improve code clarity
updated JUnit imports and annotations in AuthenticationSuccessListenerTests . java to use JUnit 5 API to improve test structure and compatibility with modern
refactor settypes to use arraylist instead of new . arraylist ( )
refactor TypeUtil to improve code structure to enhance maintainability and readability of the code
added imports for LocalDateTime and TimeZone , and modified date handling in AbstractAlertNotifyHandler . java to ensure proper timezone handling for alert creation timestamps
added a method to handle AbstractMethodError in MethodHandleResolver . java to improve error handling for method invocation with varargs
camel - 2796 : fix invalid valid ognl expression in simple function . thanks to benjamin graf for
remove redundant check for empty toExplore in AbstractParser . java to improve code efficiency by eliminating unnecessary checks
camel - jclouds : use copy from the inputstream to copy the payload . thanks to franz for the patch .
( chore ) camel - jbang : remove @ ignore from camelconsultest
added a new test class ` CheckACC _ STRICTFlagOnDefaultMethodTest ` and modified the condition in ` Check . java `
[ java ] increase driver timeout for channelvalidationtest to avoid hang .
added a new file ` FileExtensions . java ` with constants for CLANG _ SOURCES and CLANG _ HEADERS to provide a central
replaced ThreadLocalDateFormat with a static final ThreadLocal instance for ISO8601CanonicalDateFormat to improve performance by avoiding unnecessary object creation
removed deprecated options related to FastTLABRefill and SafepointSpinBeforeYield and SafepointSpinBeforeYield
added displayName property to Pac4jBaseClientProperties and updated related classes to support custom display names to enhance client configuration flexibility and improve
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by providing a specific exception for early termination scenarios
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 552 . add
fix npe in forgeeventfactory when parent be null
wallettool : remove keycrypterexception from catch blockstoreexception
added @ Deprecated annotation to SubmitOrderedCompletionService . java to indicate that the class is outdated and should not be used in new code
updated the length calculation in HyphenationTree to ensure the original length is used when creating a new Hyphenation instance
improve stability of iqregisterhandler by wait a little more time
move simpleaccountregistrationactivator to common so that it can be reuse by other plugins .
corrected a typo in the constant string for named parameters in the ParameterBinder class to improve clarity and accuracy of the error message regarding
added a new variable ` providersChanged ` and initialized it to false in ` ConfigurationManager . java ` to ensure that the ` providersChanged `
added a method to escape identifier tokens in the TokenRewriteStream to ensure proper handling of quoted identifiers based on configuration settings
pdfbox - 4892 : add miss ' name ' entry for postscript name , a suggest by ralf hauser
updated type casting and variable declarations in SolrResourceLoader . java to improve type safety and code clarity
modified the condition in the hit detection logic to check for parent actors to ensure that the hit is processed correctly within its parent hierarchy
added null check for appManifest before retrieving targetSdkVersion to avoid potential NullPointerException when accessing targetSdkVersion
refactor ` ConfigurationMetadataGenerator ` and ` CasConfigurationMetadataCatalog ` to use ` MAPPER ` instead of ` DefaultPrettyPrinter ` to
added userName property and its getter / setter methods to multiple classes to allow dynamic configuration of the user ' s name in the driver and semantic analyzer
camel - 15663 : camel - xslt - allow to configure transformer , url , inputstream , and xmlconverter for xslt component
added HadoopShim to ContainerRunnerImpl , TaskRunnerCallable , and TestFirstInFirstOutComparator classes to support Tez ' s Hadoop
removed unnecessary variable assignments in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to streamline code and improve readability
added a null check for the context before logging access in CoyoteAdapter . java to ensure proper logging behavior when context is not available
log4j2 - 1349 fix the timing issue in thorputlogger
8278294 : compiler / config / configfilewarning . java should n ' t warn when vm option ' PredictedLoaded
improve documentation and code clarity in meterstatisticsmodel and defaultlogpublisher
updated logback configuration handling in FrameworkLauncherExtended . java to ensure proper resolution of the logback configuration file
added NotNull annotations to method parameters and updated class names for cookie value management to enhance code robustness by ensuring required parameters are not null
updated shell command escaping from BASH _ ESCAPER to SHELL _ ESCAPER across multiple files to ensure compatibility with Windows
refactor container handling in AbstractWaitStrategyTest and HttpWaitStrategyTest to use try - with - resources to ensure proper resource management and prevent
updated the test class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to reflect the new version of the field info
removed unnecessary whitespace in RelativeDateFormatTests . java to improve code readability and maintainability
added a method to generate a shield address in RpcApiService to facilitate the retrieval and completion of the shield address from
changed return type of readConsoleInput methods from byte [ ] to String in JansiWinSysTerminal and JnaWinSysTerminal classes
updated regex pattern in TestStabilityRule . java and changed sRunFlavor initialization from PLATFORM _ PRESUBMIT to A
added a condition to limit fragments for multi - valued fields in DefaultSolrHighlighter . java and updated the highlighting test in HighlighterTest
updated the tryToLogin method to include username and password parameters to enhance login functionality by allowing credentials to be set
replaced instances of VisionTypeOuterClass with EntityAvatar and EntityMonster in HandlerSceneEntityDrownReq and PacketSceneEntityD
( chore ) camel - jms : fix checkstyle issue
simplified the update method by removing unnecessary wrapping of the collection to improve performance by eliminating unnecessary collection wrapping
added logging for illegal currency exceptions and updated import statements in BTCEAdapters . java to improve error handling and maintain code clarity
refactor subscription handling in DurableConduitBridge . java to improve clarity and efficiency to enhance code readability and maintainability by
pdfbox - 4892 : fix typo , a suggest by valerybokov
( chore ) camel - controller : enable tenant isolation by default in test
simplified the return statement to directly cast the response value to a Map to improve code readability and maintainability by eliminating unnecessary
added a check for non - empty attributes before validating the size of the attrs array to ensure that the condition only executes when there are valid attributes
added optional project properties and refactored related classes to use project - specific configurations to improve flexibility in project configuration management by allowing optional values
updated the description of the experimental option from " Experimenal " to " Experimental " to clarify the purpose of the feature
added tests for handling different types of user details in the GrantedAuthorityEffectiveAclsResolver to ensure proper resolution of ACLs with different user
fix classnotfoundexception in javaparsertypedeclarationadapter . solvemethodintype
added a static variable ` numberOfButtons ` and ` MAX _ BUTTONS _ SUPPORT ` to manage the number of buttons to ensure that the
updated import statement for AssertEquals from jdk . testlibrary to com . oracle . java . testlibrary to ensure compatibility with the updated test
added a new MessagePackFactory class with multiple factory methods for creating unpacker instances to provide flexibility in creating unpacker instances with different input
add is _ desert and is _ cave biome tag ( # 9696 )
rename method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
added a condition to check if the component is not horizontal before setting the layout and updated UIIDs based on element and button UIID to ensure
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( ) ` with ` matcher . matches ( ) ` in
replaced instances of ` touchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput ` and ` Android
[ java ] close the commit position counter if it be close in clusteredserviceagent .
add test and example for record id class ( # 1193 )
improve error handle for malformed url in httpconverterregistrar .
bug 10363 : listvirtualmachines api should return capacity _ type _ storage _ allocated when the host or pool _ id be specify
replaced ` dir . openInput ( ) . close ( IOContext . DEFAULT ) . close ( ) ` with ` dir . fileLength
refactor JavascriptCompiler to use a new method for generating a class and make class final to improve code clarity and enforce immutability of
removed the synchronized keyword from the ` store ` method in ` UISettings ` to ensure thread safety during the serialization process
added a check for native text input support and changed the visibility of the fireDataChanged method from private to public to ensure proper handling of text
spannerio : retry max on emulator reject due to active transaction
pdfbox - 4071 : use diamond operator instead of diamond operator to reduce boilerplate code
updated ObjectInputStream to handle short arrays instead of double arrays to ensure correct cloning behavior for short arrays in serialization
updated nonce claim retrieval from ` getClaim ( " nonce " ) ` to ` getStringClaim ( " nonce " ) ` and modified log messages
added a condition to check if a field is a relationship field in DCInputSet . java to ensure correct handling of relationships in the input set
added server slogan functionality to the capabilities table and updated related classes to improve server slogan management and enhance code clarity
updated the condition for tinting menu items in DrawerActivity . java to ensure correct tinting of menu items based on their state
replaced the failure message in SolrRequestParserTest with a print statement and added an assumption to ensure the test only runs when a network connection
added a check to return early if there are no missing symbols for a specific build ID to improve efficiency by avoiding unnecessary processing when no symbols
add the data 5 - 4 to the result of stringhelpertest . tostring ( )
added a warning log for empty data providers in Parameters . java to indicate that the data provider is not returning an empty array or iterator
( chore ) camel - k8s : use collections . emptyset ( ) instead of collections . empty _ map / collections . empty
do n ' t create selection style if it do n ' t exist
corrected the variable name from ' mass ' to ' restitution ' in setRestitution method to improve clarity and accuracy of
added a new file ` AutoFtpActivity . java ` that implements an FTP activity to implement auto - FTP testing functionality in the application
refactor token type checks in BaseSemanticAnalyzer to use a local variable for better readability to improve code clarity and maintainability by
added methods ` getComponentState ( ) ` and ` setComponentState ( Object state ) ` to various classes , including ` ImageViewer ` ,
added a new class ` RemoteExecutionEnabled ` to handle boolean serialization and deserialization to enable and disable remote execution functionality in the build system
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` and added ` StandardCharsets . UTF _ 8 ` to improve character encoding handling and suppress warnings related to
added a call to assertWorkingScoreFromScratch in AbstractScoreDirector . java to ensure that shadow variables are not stale during processing
updated the semijoin conversion configuration property from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin . conversion
added slf4j logging to various buffer encoder and decoder classes to improve traceability and debugging of buffer type issues
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated related code in ` FileDisplay
added assertions to verify the presence and absence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly
replaced the deprecated method ` constructSchemaBlackList ` with ` testDeleteTimeseries ` and updated the assertion in ` SchemaRegionBasicTest
added null check for sampleMimeType in MediaCodecRenderer . java to ensure proper error handling for invalid input
replaced instances of ` notify ( ) ` with ` notifyAll ( ) ` in QueryExecutorImpl and AbstractJdbc23PoolingDataSource to
updated @ AllArgsConstructor annotation to include onConstructor _ = { @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) } to
added SQLFeatureNotSupportedException for creating an index on a view in MetaDataClient . java to indicate that creating an index on a view is not supported
added a new class ` Website ` for managing ` Name ` , ` URL ` , and ` URI ` to facilitate the
added a setup method to set the default locale for BSFormatterTest to ensure consistent locale settings for tests
improve error message if there be a badly download jar file .
updated assertion in MultiPartParsingTest to use Matchers . equalToIgnoringCase instead of containsString to ensure case - insensitive comparison of expected
added a conditional check for the single parameter in SimpleExprGenerator . java to ensure proper handling of variable expressions in the analysis process
camel - 14263 : camel - vertx should not create a vertx instance if it be already create
updated the ` writeAttributes ` method to include a ` NodeModel ` parameter to ensure that the correct node model is used for attribute writing
corrected logging statements in SynchronizeFolderOperation . java and added null checks for currentFile and currentDir in FileDisplayActivity . java to improve
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated related methods to set it to true when unread entries are
replaced MavenTestingUtils . getTargetDir ( ) with MavenPaths . targetDir ( ) for resource path resolution to improve code clarity and maintain
added validation logic for URI and MetaDataRegisterDTO in RegisterServerConsumerExecutor to ensure only valid data is processed to improve robustness by preventing
updated isPlaying logic in GwtMusic . java to check if the sound is paused to ensure accurate sound state tracking during playback
added a new permission for the ADMIN _ SUDO _ AREA in the MainCommand and Captions classes to enhance security by restricting access
replaced ImmutableMap with HashMap for query options in ServerRequestPlanVisitor . java and updated query options handling in QueryRunnerTest . java to improve
updated file name comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject
updated assertions in ResourcesTest to use variables for emoji and text to improve readability and maintainability of test cases
replaced the method NMTWaitForDataMerge with NMTOverflowHashBucket and added new methods NMTMallocWithPseudoStack
[ flink - 30613 ] [ serializer ] migrate eitherserializer to java eitherserializer
updated AddressResolverOptions to use dynamic resolv options instead of hardcoded values to improve flexibility and maintainability of configuration management
added super . __ associate ( context ) call in RequestRockerTemplate and created a test for it in RequestRockerTemplateTest to ensure
pdfbox - 2576 : avoid npe if the dictionary do n ' t contain a value , a suggest by valerybokov
updated references from " liquibase / parser / core / xml " to " www . liquibase . org / xml /
move commonmimetypetlocatortest to test and move it to the same package .
changed repository version state from INIT to NOT _ REQUIRED in multiple classes to enforce that the repository state is not mandatory for service components
updated the comparison logic in GenerateChangeLogTask . java to include additional schema comparison configurations to enhance the comparison process to accommodate different schema
updated import statement for Test to use TestNG annotations instead of JUnit to ensure compatibility with TestNG testing framework
added a new file ` ProgressiveJPEGTest . java ` to implement a test for progressive JPEG rendering to facilitate the testing
updated the alpha discard threshold setting and modified the way materials are initialized in MaterialLoader . java to improve clarity and maintainability of the material
[ gr - 26354 ] native - image build on window do not support x86 - bit architecture
added a null and empty check for the text before setting the size in the Label class to avoid potential NullPointerExceptions when the text is empty
replaced ` readVarInt ( ) ` with ` readVarInt ( ) % 1 _ 000 _ 000 ` in ` readVarInt
changed PushUtils and ThumbnailsCacheManager classes from non - final to final and added private constructors to prevent instantiation of these classes
replaced the calculation of the length in the RocketPanel class to directly use the current configuration ' s length to simplify the code and improve
removed unnecessary casting of MockDirectoryWrapper to a non - mock directory to simplify code and improve readability
updated the file extension pattern in the load method from " . * CSV " to " ( ? i ) . * CSV " to ensure compatibility
added conditional checks for duration and isInApp ( ) in TaskbarStashController . java to ensure accessibility announcements only occur when the
updated the initialization of ` homeNode ` to use ` RefreshTask . getNodeId ( ) ` instead of ` Args . getInstance ( ) .
add pmd support for target jdk 1.5
replace PowerMockito with Mockito for mocking in QuotaResponseBuilderImplTest to improve test reliability and eliminate dependency on PowerMock
added custom output streams for error and error handling in TestSchemaToolCatalogOps . java to facilitate easier debugging by controlling the
added DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper constructor and cleared data encryption to enhance security by ensuring
added RepositoryMetadata as a parameter to the MongoQueryMethod constructor and related methods to enhance query resolution capabilities by integrating repository metadata
add entityresolver2 wrapper to allow property replacement
updated import statements in MetaDataEndpointImpl . java to remove redundant constants to improve code clarity and maintainability by reducing redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry logic in TxnHandler . java to
updated variable name from ' xl ' to ' xAxis ' in BarChartActivity . java and adjusted line width calculation in YAxisRenderer . java
added methods to check if a character is printable and support Windows characters in FsUtils . java to enhance input validation and support for Windows - specific
rename ` selenide . in ` to ` selenide . using ` for clarity
added support for plugin - specific processing in defaultmaven and defaultprojectbuilder
updated return statements to use ' d ' for division operations in ProxyConnectionManager and ServerTrafficCounter to ensure precision is consistent with Java ' s
( chore ) camel - google - vision : fix the it system test to work on window
updated return values in ModeledConnectionRecord and ActiveConnectionRecord to return null instead of " STUB " and added remote host retrieval in Auth
added admin button attribute to the request if the user be a admin
refactor thread counter usage for long and short compaction in CompactSplit . java to ensure unique thread names for long and short compaction operations
replaced ` getApplication ( ) . getPackageName ( ) ` with ` resources . getResourcePackageName ( ) ` for retrieving the package name to improve resource
refactor player visibility logic in Near . java to use a dedicated method to improve code readability and maintainability by encapsulating player visibility
refactor AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity classes to improve code organization and maintainability
rename MlibOpsTest . java file to improve clarity and consistency in naming conventions
refactor code to use a constant for OperatingSystemImpl in JNIRegistrationManagementExt . java to improve code readability and maintainability
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test for buildable references
removed null checks for key and iv in UploadFileOperation . java to simplify key and iv initialization to streamline code by eliminating unnecessary
added a Stability annotation for the WorkProfileTest class to indicate the test is stability due to specific flavors
added a check to skip processing if bucketing version is not set in TezCompiler . java to ensure that only valid bucketing versions are
replaced setCursorPosition ( x , y ) with input . setCursorPosition ( x , y ) in GwtTestWrapper . java
refactor LockFreeBucket class to extend abstract classes and introduce new layout classes for better performance tracking to enhance code maintainability and facil
patch by jbellis ; review by brandonwilliams for cassandra - 1422
updated max bitrate retrieval to use user preferences in ExternalPlayerActivity and PlaybackController to ensure bitrate settings reflect the user ' s preference
updated ZipkinHttpSpanExtractor to include onlySpanIdIsPresent and spanIdIsPresent checks for better clarity and functionality to enhance the
move getuserpaymentaccounts ( ) to createofferdatamodel to allow subclass override
remove reflection from dartcompletioncontributor # withtypeiconrightaligned ( # 5246 )
added a call to set the project in the LauncherUtils class to ensure the project is properly initialized before use
updated JsBundle and JsBundleBuilder to accept ProjectFilesystem as a parameter to enhance filesystem handling in bundle creation processes
rename various classes related to envelope and databinding to improve clarity and consistency in naming conventions
refactor MetricsDSLContext to improve code readability to enhance maintainability and facilitate future updates
removed the VersionConfig interface and modified the VersionBuckConfig class to use ImmutableSet instead of an immutable map to improve performance by reducing unnecessary
added a try - catch block around the bindShadowClass method to handle potential TypeNotPresentException to improve robustness by preventing application cr
changed the access modifier of the validateTypes method from static to public and updated the exception message from AST to LST to allow external access to
fix : update gapic - generator - java with mock service generation fix ( # 450 )
added SLF4J logging capabilities to SimulationStatus . java to enable better tracking and debugging of simulation status changes
updated the VERSION _ POSITION _ Y and VERSION _ FONT values in Splash . java to increase the version position and font size for better user experience
added a runLater ( ) method to add notifications in UserInterfaceComponentImpl . java to ensure notifications are added on the main thread for thread safety
added a mock mock for the ReturnsElementsOf class to facilitate mocking of return values in tests
corrected the spelling of " non - string " in the error message for partition dropping to ensure clarity and accuracy in error reporting
added a new test method ` testLineFileDocs ` in ` BaseStoredFieldsFormatTestCase ` to validate document indexing behavior to ensure that
added a method ` getVersionCode ( ) ` in ` MainApp ` and updated references in ` FeatureList ` and ` WhatsNewActivity
fix issue with ambiguous method invocation with string body .
replaced calls to ` getContentDispositionFilename ( ) ` with ` getSubmittedFileName ( ) ` in test cases to ensure tests accurately reflect
added buffer ownership checks and modified buffer handling in IndexBufferObject and VertexBufferObject classes to improve memory management and ensure proper disposal of buffers
added a transition for " forgotPassword " in the login form of the PasswordManagementWebflowConfigurer to enhance user experience by allowing password
[ hotfix ] [ doc ] fix typo in jerseyclientconfiguration
int - 1193 : remove the explicit class reference for characterstreamwritingmessagehandler and characterstreamreadingmessagesource
replaced instances of ` s ` with ` o ` in ` InstanceOfPatternMatchTest . java ` and replaced ` singletonList ` with `
added column and row counting logic in StringDict and implemented isEmptyArray method in Table to improve handling of empty string arrays and ensure proper column and
added AutoCloseable interface and a mechanism to create container command hooks in GenericContainer to enhance resource management and allow customization of command creation
updated logging level from info to error in MediaInfo . java and modified exception handling in RendererConfigurationTest . java to improve error handling and ensure
added support for " schemapattern " option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enable configuration of a schemapattern
added null check for tlsSession in ProvSSLSessionImpl . java to ensure that the method returns an empty byte array instead of null when
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve clarity and maintainability of bitmap creation logic
refactor Base64 encoding / decoding logic to improve performance and readability of the code
sulong : fix bug in llvmgetstackfromthreadnode and llvmglobalcontainer
added IPHONE to the ignored test case in JavascriptEnabledDriverTest . java to enable the test for both SELENESE and IP
refactor FlowBuilder and FlowJobBuilderTests to improve code organization and maintainability
replaced ` ResName ` with ` int ` for resource identifiers in ` AttributeResource ` and ` OverlayResourceIndex ` to simplify resource management
refactor ( docker ) : resolve tl file in dockercontextmetfiletest ( # 1193 )
use @ before instead of @ after in simplereactivereactivereactiverepositorytests
modified type variable capture logic in mmm Attr . java and added a new class T6450290 . java with generic type handling to
added support for customizable logging levels in LoggingFlags and LoggingOptions classes to enhance flexibility in configuring log output for better debugging and monitoring
added logging statements to track package removal events in multiple classes to improve traceability and debugging during package management operations
added allFilesOption methods to FileActivity , FileDisplayActivity , and PreviewImageActivity to enhance file option handling across activities
added new methods ` forEachOperation ` and ` hasMatching ` to ` MutationOperationGroup ` that accept ` BiConsumer ` and ` BiFunction
updated the calculation of numPredictiveAppCols to use a conditional value based on whether the device is a phone to improve accuracy in determining the
updated String initialization to use UTF - 8 encoding to ensure proper handling of character encoding in string processing
added a new RequestMatchers class with methods for defining request matching criteria to enhance the flexibility and usability of request matching within the security framework
mow - 169 use input box instead of button for temporary mode
updated calculations for height and width in ProgressBar . java to account for background height adjustments to ensure proper positioning of the knob relative to
[ native ] use resource file for external function definition in presto - native test
changed object variables to final in BruteArgumentMoverHandle . java and updated permuteArgs method to include extra parameters to enhance im
added a condition to check if the state handler is invalidated during gesture state checks to ensure proper handling of gestures when the state handler is
updated layout conditions and adjusted width and height calculations for landscape and portrait layouts to improve layout accuracy and align with layout requirements
added a check for the file type " / robots . txt " in the re directory validation to ensure the correct handling of robots . txt files
[ netbeans - 4481 ] fix warning icon in callhierarchytopcomponent
updated button subscriptions in AdvancedGameSetupScreen . java from " continue " and " close " to " createWorld " and " return " to
added a check for ` b . get ( 0.0 ) ` in UDFOPDivide . java and created a new test
refactor code formatting and add a check for ABANDONED status in FlowJob . java to improve code readability and ensure proper handling
updated the filter configuration to use a constructor argument for " requiresAuthenticationRequestMatcher " instead of " filterProcessesUrl " to enhance flexibility in
added onDestroy ( ) method to unbind the uploadServiceConnection in ShareActivity and ContributionsActivity to ensure proper resource cleanup during activity destr
corrected the variable name from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure consistency
refactor multiple Java classes related to command handling to improve code organization and maintainability
added request timeout configuration to RaftServerConfigKeys to ensure proper timeout settings are applied for RPC requests
replaced error logging with debug logging and added a sealed ts file resource to improve logging clarity and ensure proper resource management during degrade
added setSystemProperties ( System . getProperties ( ) ) to MavenModuleLoader to ensure system properties are correctly configured for module loading
added metrics for readiness checks and refactored the ` getReadinessStatus ` method to use ` ServerMetrics ` to improve monitoring and management
add support for custom itemblock for animatedtorch ( fixes # 198 )
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when writer is null
added a method to retrieve HiveConf from a directory path in UtilsForTest . java to streamline configuration retrieval for Hive configurations
added a link to Google for muting users in FeaturesActivity . java to enhance user engagement by providing direct access to the Muting
added initialization property for ` jdk . reflect . useDirectMethodHandle ` to disable direct method handle support for compatibility with specific JDK versions
hbase - 25801 splitonleadingvarcharcolumnspolicy extend steppingsplitpolicy instead of constantssizeregionsplitpolicy (
[ hotfix ] [ yarn ] add plugin and lib dir to ship file if they do n ' t exist
updated method calls in BuildTranscriptHMM and TrainerDictionary to use getWord ( word ) and getSpelling ( ) to
removed the newline character from the JSON structure in JsonUtilsTest . java to ensure consistent formatting for JSON data
added ` id ` extra handling in ` TimeLineCursorAdapter ` , ` TimelineArrayAdapter ` , and ` Compose ` classes to
added a warning log for handling message listeners in MessageRunner . java to inform users about data loss related to reliable topic
improve error message when no class be find to analyze
replaced import of ` java . security . Key ` with ` java . security . PublicKey ` in ` KeyFetcher . java ` to align
updated the declaration of the isIncompatible variable in DLNAResource . java to correctly reflect the compatible state of the resource
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to improve clarity and specificity
pdfbox - 2852 : avoid arrayindexoutofboundsexception if the range array be empty
resolve http : / / issues . apache . org / activemq / browse / amq - 2276 - fix test failure
updated star tree format settings to enable off - heap format and replaced hardcoded version strings with constants to improve flexibility and maintainability of the
limit the title length of the content to 2048 characters to ensure the title does not exceed the maximum allowed length
initialized ` previewPanel ` in ` JColorChooser ` and refactored related logic in ` BasicColorChooserUI ` to utilize `
changed log level from info to debug for extension checks in DefaultBuildExtensionScanner . java to reduce log verbosity and improve performance during extension checks
added a null check for the reusable bitmap before setting the inMutable bitmap factory options to avoid potential null pointer exceptions during bitmap extraction
added a layoutParams field and its getter method in FakeView . java to provide access to layout parameters for external use
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 263 . add
pdfbox - 2576 , pdfbox - 2576 : do n ' t create a page tree for a page that do n ' t
ignore jmsclienttest until i figure out why it fail on ci
added a private String field ' ts ' with getter and setter methods to encapsulate and manage a timestamp associated with the message
add log for exception while process request ( # 1883 )
changed the visibility of AbstractExecutor from package - private to public to allow access to AbstractExecutor from other packages
[ isochrone ] add test for query with legacy parameter .
removed public access modifier from multiple test classes to enforce encapsulation within the test package
refactor CSRF handling into a separate method in PluginServlet . java to improve code readability and maintainability by reducing duplication
fix shadowclassloaders to work properly with bootstrap class .
[ drools - 1882 ] add numeric disabled flag to decisiontable parser
updated logging level from info to debug in HiveConf . java to improve logging granularity and reduce log verbosity
added null checks for axes and buttons in Lwjgl3Controller and modified controller management in Lwjgl3ControllerManager to improve
updated import statements in WeldFactory and WeldFactoryTest to use the new package structure to ensure compatibility with the latest Cucumber library
refactor port forward saving logic in PortForwardListActivity to use HostDatabase for consistency to improve code readability and maintainability by reducing
added a ` shouldSnapshotData ` property and its getter / setter in ` GlobalConfiguration ` to control whether Liquibase snapshot data is
added logging for event path and modified job scheduling logic in SyncedFolderObserver . java to improve debugging and avoid unnecessary job scheduling when the path
refactor LocationMarshaller to improve code structure to enhance maintainability and readability of the code
removed trackpad motion event checks in StatusBarTouchController . java and updated gesture detection logic in OtherActivityInputConsumer . java to simplify touch
refactor VectorReader from an interface to a class and update its implementation to simplify the code structure and improve maintainability
replace ArgumentMatchers with Matchers in multiple test files to standardize matcher usage across the codebase
replaced ` getRelativePathName ( ) ` and ` getRelativePathSupplier ( ) ` methods with direct calls to ` getRelativePath ( ) ` across multiple classes
updated method signatures in SegmentMapper , CompositeTransformer , and RecordTransformer to use RecordReaderFileConfig instead of RecordReader to improve flexibility in
added a null check for the extractor before instantiation in ` ControllerMethodInvoker . java ` and marked several classes as ` @ WithArgumentExtractor (
cloudstack - 3339 : set max secondary storage for domain instead of account
add a ui screen event for pie ' s shift , to allow modded inventory effect .
updated SizeTieredCompactionStrategyOptions to mark COLD _ READS _ TO _ OMIT _ KEY as deprecated and removed it from unchecked
added a call to stop the leech service in ClientTest . java to ensure proper resource management and prevent potential memory leaks
[ issue # 3560 ] fix bug in popmessagemetricsmanager ( # 3560 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests that are not ready for execution
rename ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and update related references
added UpgradeRequest and UpgradeResponse handling to JettyTrackingSocket and implemented test for upgrade request and response in ClientConnectTest to improve WebSocket connection
added support for a timeout feature in AndroidImplementation to enable customizable connection timeouts for improved performance
refactored user and team access permission retrieval methods in GitblitClient and RepositoriesPanel to streamline permission handling and improve clarity in
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing for quoted cast
added conditional checks for writable and executable status based on the operating system to ensure correct permission checks for writable and executable statuses based on the operating system
added logging for executor groups and threads and refactored executor selection logic in FixedThreadExecutor . java to improve thread management and configuration flexibility
added null check for the field before processing " catalogname " to avoid potential NullPointerExceptions when the field is null
replace ` CasEventListener ` with ` InitializingBean ` in multiple configuration classes to ensure compatibility with Spring ' s bean initialization mechanism
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added an override for the close method in the DeflaterOutputStream to ensure proper resource management by closing the def after use
added a new file ` gsp001 . java ` that includes a native method for retrieving system properties to implement a test for JVMT
fix infinite recursion when use @ declaredbean on @ beandefinition
[ jme3 ] add read / write method to cameranode and lightnode for serialization .
remove some unused method and optimize obtaining of the parent window
replaced instances of NoInstanceException and InvalidInstanceException with a single InferenceException to simplify exception handling by consolidating related exceptions into a
added a method to retrieve the feature value in FeatureField to provide access to the feature value for external use
changed the parameter type of the method ` after ` from ` int ` to ` long ` to ensure compatibility with larger time values in the method
added new fields ` onBuild ` and ` executionDriver ` with corresponding getter and setter methods in ` ContainerConfig ` and ` Info ` classes
added conditional logic to set icon based on RTL support in Toolbar and FlowLayout classes to ensure proper icon display based on the target '
added a new boolean property ` enablePositionIncrements ` and modified the return statement in ` StopFilterFactory ` to allow configuration of position increments
updated EmailsTest and SystemErrorEmailReportTest to use an InternetAddress instance instead of a hardcoded string to improve code maintainability and
added a new variable ` mTryShareAgain ` and initialized it to false in ` FileActivity . java ` to ensure that sharing functionality is
added functionality to determine if the TTY is used based on the version of the Jansi native pom to improve compatibility with different operating systems
replaced variable ` bytes ` with ` bytesSize ` and updated related logic in ` BandwidthProcessor . java ` to improve clarity and
replaced direct assertions with Awaitility ' s await pattern in Issue410Tests . java to improve test reliability by ensuring the span
replaced multiple URL constants with a single API base URL constant in EaseeBindingConstants . java to streamline the API endpoint configuration and
[ beam - 8470 ] [ test ] increase kafka container startup retry from 2 to 3
updated the matchers in SearchResultMatcher . java to use is ( itemName ) instead of anyOf ( ) to improve clarity and functionality of the
updated OkHttp . java to utilize SSL and HostnameVerifier for client and server certificates to enhance security by ensuring that all certificates are validated against
refactor long click handling in NavbarButtonsViewController and TaskbarNavButtonController for improved clarity and functionality to streamline
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` instead of `
added ` Optional < String > absent ( ) ` to ` ShellStep ` and replaced ` workingDirectory . getPath ( ) ` with ` Preconditions
increased the timeout duration from 1000 milliseconds to 2000 milliseconds in AsyncAppenderTest . java to allow more time for asynchronous operations to complete
refactor ` escapeDatabaseObject ` methods to use ` objectName ` instead of ` tableName ` and ` schemaName ` to improve clarity and consistency
added a boolean field ` inputChanged ` to track if the material title changes to ensure the rename dialog only updates when the material title changes
added unit test for state change functionality in ShadowDisplayTest and implemented state change method in ShadowDisplay to ensure state changes correctly apply to other instances
[ geos - 10560 ] add directinvocationservice interface and improve exception handling in dispatcher
added support for the ^ x and ^ ^ y key in GlobalKeyDispatcherW . java to enhance keyboard input functionality for better user interaction
updated SQL query conditions in PgDatabaseMetaData to accommodate server version requirements to ensure compatibility with PostgreSQL versions prior to 9.0
removed the initialization of the ` message ` variable in ` QueueChannel . java ` to allow for nullability of the ` message ` variable
removed IOException declaration and updated URI creation logic in FileUtils . java to improve code clarity and ensure proper URI handling
added support for monitoring Jenkins nodes in the RemoteCollector implementation to enhance monitoring capabilities for Jenkins applications
updated header resolution logic in HeadersBeanDefinitionParser and added tests for security headers in HttpHeadersConfigTests to ensure correct handling of disabled and default headers
[ flink - 26400 ] [ protobuf ] fix wal reader crash when seek at the end of the file
added shutdown logic for the Nacos naming service in the destroy method of the NacosRegistry class to ensure proper resource management and prevent
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAway handling to use a dedicated method for writing status codes to improve code clarity and maintainability by centralizing status code
refactor AuditEvent and AuditEventTests for improved readability to enhance code clarity and maintainability by organizing object creation and JSON
updated the return statement in the Interpolation class to handle floating - point errors and replaced the cbrt method with a zero return to ensure
fix default path in forge world editor ( # 4569 )
refactor code to store the executable path in a variable before adding it to the builder to improve code readability and maintainability
added multiple assertions for PointRangeQuery instances in TestPointQueries . java to ensure consistent equality comparison between PointRangeQuery instances
hbase - 22065 addendum fix testhfilecleaner . testhfilecleaner fail on window
added a condition to check if the file name matches the name before setting the file label in ReceiveFileConversationComponent . java to ensure the correct
do n ' t throw exception in jedisclustercommand # ontrigger
[ hotfix ] [ table - common ] set chainingstrategy to always for rowtimeminibatchassgineroperator
updated the filter invocation definition source editor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationDefinitionMap and added new test cases
hive - 11867 : qmap benchmark : make it consistent with other benchmarks ( jesus camacho rodrig
initialize G _ SCH _ B with a new HashMap instance to ensure proper initialization of the G _ SCH _ B map
added a check for empty fields and refactored the way get methods are processed in GroovyEngine . java to improve code robustness and maintain
make sure the angle do n ' t get drawable when it ' s set to false
added server socket timeout and TCP keep - alive configuration options to HiveConf and HiveServer classes to improve server connection stability by allowing configurable TCP
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` in ` FileRenameAction . java ` to clar
no effective change - remove unused import
replaced anonymous inner classes with lambda expressions in RealtimeSegmentRelocator . java to improve code readability and reduce boilerplate code
createvpccmdbyadmin : remove unnecessary success variable
updated the interpolation calculation in WindowTransformSwipeHandler and modified the condition in FloatingIconView to ensure window alpha is non - negative and
update the schema reference in the fatal warning message from Spring Security 3.2 to Spring Security 4.0 to ensure users update their schema declarations
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
( chore ) camel - disruptor : make field final
added a new test class ` TestConfigureUDF ` and modified ` ExprNodeGenericFuncEvaluator ` to utilize it to improve testing capabilities
updated regex pattern matching in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve flexibility and accuracy of regex patterns
removed the use of ' final ' keyword for logger variable and simplified method calls to improve code readability and reduce redundancy
refactor methods in ShardDao and related classes to delete deleted shards instead of updating them to improve clarity and functionality by using delete operations instead
added support for Java 17 in the JavaLanguageModule and its corresponding test to ensure compatibility with the latest language features and improvements
make fileappenderresilencetest more robust by wait for compression job to finish
do n ' t assert on lastlocationaccess if it ' s null
added a method ` getSteps ( ) ` to return an unmodifiable list of steps and adjusted code formatting for consistency to enhance code readability and
removed redundant ` fromBase58 ` and ` toBase58 ` fields from ` TronJsonRpc ` and ` TronJsonRpcImpl
refactor currency pair creation in BitstampAdapters . java to improve code readability and maintainability
updated measurement to use baseTimeUnit instead of TimeUnit . NANOSECONDS and added assertions for active tasks and duration in MeterRegistryCompatibilityKit to
updated ReduceByKeyTranslator to conditionally partition tuples based on partitioner type to improve performance by avoiding unnecessary partitioning for hash partitioners
refactor HostEditorActivity to use CharSequence for value and update preference handling to improve type safety and simplify color value retrieval logic
refactor ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and update related method and file handling to improve clarity and maintainability
added a constant for the maximum tweet count and updated the condition in the loop to ensure that the number of tweets in the query does not
increased the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow more time for the map
[ hotfix ] [ runtime ] fix tail page not persist for fully acked deleted tail page
fix checkstyle issue in util / glowserver . java ( # 796 )
refactor the grow method in DataIO to use a separate ` grow ` method for better code organization to improve code readability and maintainability
removed import statement for DataOutputStream in GdxSetup . java to streamline code by eliminating unnecessary dependencies
( chore ) camel - attachment - http : add getattachedfilename ( ) method to the attachmenthttpbinding class
added markReadForLoad ( ) method to LauncherFragment . java to enhance functionality to mark items as read when loading
modified the ` main ` method to handle ` ClassNotFoundException ` and updated the ` instrumentJar ` method to handle ` NegativeArraySizeException ` to
added a method ` checkForSpillPossibility ` to check for spill positivity and throw an exception if it is negative to ensure proper
replaced direct calls to ` info . info . getDocStoreSegment ( ) ` with a local variable ` dsName ` for consistency to improve
added a default name ID format constant and a check for empty supported name formats in SamlProfileSamlNameIdBuilder . java to ensure the
added error handling for password change cancellation in ChangePasswordPage . java to improve user experience by providing feedback when password change is aborted
added a semicolon to the end of a block in Deadlock2 . java to ensure proper syntax and prevent compilation errors
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide a way to retrieve the maximum idle
deleted the FontScalingTest . java file to the font scaling test was deemed unnecessary or redundant
added validation for ` filterBeginDate ` and ` filterEndDate ` in ` RRD4jPersistenceService . java ` to ensure valid date
added a check for non - negative numVectors in GenericUDAFComputeStats . java to prevent further processing when numVectors is negative
test : migrate executablereftest to junit 5 ( # 4527 )
added null checks before setting view and glass pane in JLayer . java and created a new test class bug6994419 . java
camel - 16400 : add wiretap support to the dsl . thanks to benjamin graf for the patch .
changed the visibility of the setAction method from public to protected to restrict access to the method for better encapsulation
add option to enable topn in pushlimittostopn
[ java ] remove redundant aerondirectoryname assignment in test .
fixed - rbatch . ping ( ) . trysetasync ( ) method do n ' t return response if queue command be send . #
replaced InputStream with FileOutputStream and refactored the getConfVarInputStream method to utilize a temporary file instead of a byte array to improve efficiency
updated the model creation process to use the criteria device instead of the default device to ensure that the model is loaded on the correct device context for
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to improve menu handling and menu item selection logic
refactor CertificateValidator class for improved validation logic to enhance security and maintainability of the code
fix : hawtio . dirname can be set to ` ` / . hawtio ' ' if hawtio .
added a condition to return a single space if comments are empty and whitespace is empty to improve handling of single - space comments in the code
changed private variables to be volatile in multiple classes to ensure visibility of variable changes across multiple threads
removed printStackTrace ( ) method call from ContextHandler . java to improve error handling by avoiding stack trace printing
move customitemdroptest to integration - regression module
added support for conditional partition handling in DDL tasks and related classes to enhance partition management by allowing conditional checks when partitions are not present
added byte reading logic and improved input handling in NfsSecondaryStorageResource . java to enhance data processing efficiency and prevent potential data loss
[ java ] remove duplicate call to controlrequeststreamid in eip - 1283 service .
added support for spatial operators in the CapabilitiesTransformer and implemented a test for spatial operators in GetCapabilitiesTest to enhance functionality and ensure correctness of
added LuceneTestCase import and annotated BasicDistributedZkTest with AwaitsFix annotation to address issue SOLR - 2161
added a condition to check for preface matching before proceeding with the parsing logic in Http11InputBuffer . java to ensure proper handling of
[ java ] set the inbound _ exclusive flag to false by default .
refactor HBase cache key handling to use an array instead of individual keys to improve flexibility and maintainability of configuration management
added methods to track and update the running record count in JSONRecordReader to improve accuracy of running record tracking during JSON processing
filter out year from merged items in CategorizationFragment to improve data integrity by removing outdated entries
updated drawing color in CacheableTextView , CellLayout , and HolographicOutlineHelper to use the zero mode instead of a hexadecimal
added a check for OpenGL ES 2.0 availability in the render method to ensure compatibility with OpenGL ES 2.0 rendering
ww - 4352 set context to null in backgroundprocess to avoid npe
updated method signatures and logic in BaseSemanticAnalyzer , QBParseInfo , and SemanticAnalyzer to include database name in table names to enhance
added connection timeout configuration and changed the count variable to be static final in StubConnection . java to ensure proper connection management and enforce immutability
added multiple assertions for the ` approx _ percentile ` query in ` TestHiveAggregationQueries . java ` to ensure that the aggregation functions correctly
updated the default idle timeout and write timeout settings in WebSocketChannel and WebSocketConstants to ensure consistent handling of idle and write timeouts across the application
updated the way shared shares are retrieved by using the platform account instead of the user ' s account to ensure compatibility with the platform ' s account
updated Inet6Address . java to use generics for InetAddress and NetworkInterface to improve type safety and code clarity
refactor button enabling / disabling methods and update progress handling in PlaybackControlView . java to improve code readability and maintainability
updated token presence checks to use session ID instead of session object to improve clarity and consistency in session management
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
set useexceptionprobability to false by default
updated the method of setting the new plate color based on whether the icon is themed to improve visual differentiation between themed and non
guac - 978 : guacamole - auth - mysql now require a username / password to be pass to the constructor .
updated the aliases in Middle . java to include " centre " to enhance functionality by allowing both center and centre modes
added dependency injection for DirectUpload in CommonsApplicationComponent and changed the DirectUpload class visibility to public to enhance dependency management and improve accessibility
added space to leftAxis and rightAxis in BarChartActivity and adjusted offset calculations in BarLineChartBase to improve layout consistency and ensure proper
added support for CLASS _ ABI _ FLAVOR and VERIFIED _ SOURCE _ ABI _ FLAVOR in AndroidLibrary
added operation event status type to requestParams and initialized services list in CompositeLogService to improve request handling and ensure services list is ready for use
added debug output for parameter annotations and implemented visibility annotation handling in DexAnnotation . java to improve traceability of parameter annotations and ensure proper annotation
( chore ) camel - jms : replace @ startbundle and @ finishbundle with @ setup and @ teardown .
refactor the process creation to include the classpath in the ProcessBuilder to improve clarity and traceability of the process creation process configuration
updated the resource loading path in PackageResourceLoader to use a dynamic separator based on the package name to improve cross - platform compatibility for resource paths
[ hotfix ] [ dataset ] fix typo in DataSet class
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
updated error message formatting in ` ShouldHaveMessage ` and added a new test method in ` ShouldHaveMessage _ create _ Test ` to improve
fixed - jcache . close ( ) method do n ' t call cachemanager # getcachemanager ( ) . geturi ( ) .
fix log level for activititaskalreadyclaimedexception in commandcontext
added a conditional block to initialize ALPNClientConnectionFactory to ensure proper initialization of the ALPNClientConnectionFactory
use base value instead of value for entity property to avoid overflow
do n ' t play notification sound if thing be not initialize ( # 3560 )
increased the timeout duration for the countDownLatch from 500 milliseconds to 5 seconds in multiple test files to allow more time for the count
changed log level from info to debug in LightThingHandler . java to provide more granular logging for troubleshooting issues
cloudstack - 3506 : make it possible to configure the number of thread pool for the asyncjobmanager
updated exception handling methods to accept an Object parameter and improved message formatting to enhance clarity and consistency in error reporting for better debugging
removed unnecessary casting of DataFrame in the generate method to simplify code and improve readability by directly using the frame object
updated multiple module - info . java files for consistency and clarity to improve code maintainability and readability
add a check for empty column names in OrcPageSourceFactory and implement a test for empty file handling in TestHiveFileFormats to
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine ` class to enable the mixing
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated calculations in FinderPatternFinder and adjusted test cases in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to correct
removed unnecessary checks for presence of leadingIncludePaths in PreprocessorDelegate . java to simplify the validation logic for leadingIncludePaths
fix npe in stringtemplate . ismatrixmultiplication ( ) when the value be null
simonstewart : add search for $ $ and find and $ all to the proxy
fix defaultaudiosink . getmaxsupportedchannelspassthroughv29 ( ) to respect audio format . sample rate
added getformula ( ) and setFormula ( ) methods to XSSFName and modified references in XSSFWorkbook to improve formula handling
increased the value of the target variable from 60000 * scaleFactor to 90000 * scaleFactor to increase the precision of the target
[ geot - 6640 ] fix bug in simpletypegt and add test for patternschema
added a new test class ClassPathXmlJobRegistryContextTests to validate job retrieval from the job registry to ensure that the job names are correctly
changed the data type of mHistoricTimes from float to long in MotionPauseDetector . java to accommodate larger time values for better
camel - 12320 : camel - restlet - fix wrong label for consumer endpoint
( chore ) camel - log : remove unused method in camel - log
refactor ChromeTraceEvent submission into a separate method for better organization to improve code readability and maintainability by separating concerns
added checks for order status before adding to limitOrders to ensure only non - canceled , non - filled , and non - rejected orders are added
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to improve image layout handling and ensure correct pixel offset calculations
refactor timestamp handling to use RubyTimestampExtLibrary for better compatibility to improve code clarity and maintainability by standardizing timestamp management
added a check to return the resource if the path ends with a slash in ContextHandler . java and created a test for real path existence in
updated the function name from TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _ GETTER in Script
refactor variable names and adjust scroll handling in JEditTextArea . java to improve code readability and maintainability by using descriptive variable
added a null check for callerLoopScope before setting the guards stage in GraphDecoder . java to ensure proper handling of graph state when the
test ( sniperprettyprinterjavaxtest ) : migrate sniperprettyprinterjavaxtest to junit 5 (
refactor URLOutputStream initialization to use try - with - resources and update exception message assertions to use equalToCompressingWhiteSpace to ensure proper resource
added Entity annotation to mmm Mail . java and ppp Mail . java files to enable entity - based access control for database interactions
updated default settings for tablespace in Main . java to ensure tablespace is included by default
added getter methods for metadataBuffer and valuesBuffer in CountersReader to improve accessibility of buffer objects for external use
added a check for the presence of a non - empty file in ScanBatch and implemented a test for empty directory in TestJsonReader to ensure
added custom failure message formatting in ` StringSubject ` and updated assertions in ` StringTest ` to improve clarity of failure messages for better debugging
added a regex pattern for matching library names in the LibUtils class to enhance the validation logic to ensure only valid library names are processed
do n ' t catch classnotfoundexception in jrtjavabasepackages and packagehelper
hbase - 20874 masterfilesystem should wait on safemode before write it to disk ( ashutosh chauhan via
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name and message to improve debugging clarity by providing more
refactor : remove unused code in defaultplugincache
do not dispatch jabber contact status change event if the device be n ' t connect
refactor : remove unused requestdetails # withresourcesandparams ( )
added a new integration test class for fetching account information from BTCE exchange to ensure proper functionality and reliability of account information retrieval in the
added mouseWheel method to VDUInput and vt320 classes , and implemented mouseWheel functionality in TerminalView to enhance user interaction by
refactor library path setting in Natives . java to use a variable for clarity to improve code readability and maintainability by reducing
# 706 - remove deprecate columnhstore from ebean - deploy
add player _ skin _ flags ( 10 , humanentity . class ) to the metadata index
updated LoadBalancerWithServiceTests to use SLF4J ' s Logger for logging master URL and modified service creation logic to improve logging clarity
added braces around conditional statements in MapService . java to improve code readability and maintainability
replaced System . getProperty with AccessController for retrieving the operating system version to enhance security by using a privileged action
updated TemplateEngineFreemarker to use a new configuration file suffix constant and removed the setSuffixOfTemplatingEngine method to improve
updated hash calculation logic in SelectMessageQueueByHash . java and added multiple test cases in SelectMessageQueueByHashTest . java to ensure
added animation callback to hide - h - dragging to improve user experience by preventing unintended effects during animations
replaced ` EasyBind . bindConditionally ` with ` EasyBind . when ` in ` StyledTextAreaVisual . java `
updated PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to use CxxBuckConfig for platform
replaced instances of SimpleParameterAccessor with ParameterAccessor across multiple files to standardize parameter handling in the query execution process
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is not set
added support for handling array types in DataUtilities . java and created a test for default values in DataUtilitiesTest . java to ensure correct initialization
updated SSL engine creation logic to handle null addresses more gracefully to ensure correct host name verification based on client authentication status
hbase - 22065 addendum to fix test failure in hbase - 22065
simonstewart : move the deletion of the cooky to the ie driver instead of the ie driver
added a boolean flag ` mHasEndedLauncherTransition ` and modified the gesture state check in ` AbsSwipeUpHandler . java ` to
added < meta charset = " utf - 8 " / > to the HTML head tag in HTMLListWriter . java and HTMLWriter . java
refactor IndexReader class to improve code structure to enhance maintainability and readability of the code
updated the maximum statistics key length from 200 to 150 and modified path handling in various components to improve performance and ensure consistent path formatting across the application
added a new class ` bug6337518 ` and modified ` BasicComboBoxUI ` to add the ` arrowButton ` to the `
updated TestRandomAccessBuffer . java file to improve test coverage to enhance reliability of random access buffer tests
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future updates
added ` HomeContentProvider ` import and updated broadcast calls to use ` notifyChange ( HomeContentProvider . CONTENT _ URI ) ` to ensure
added functionality to manage the stay pressed state in BubbleTextView and updated related logic in Launcher to enhance user experience by allowing better control
added an ` Throwable ` parameter to the ` getFallbackResponse ` method across multiple classes to enhance error handling capabilities in fallback response retrieval
removed the condition checking if ` env . _ compile _ only ` is true in ` DumpBytecode . java ` to simplify the condition for
added null check for tags before accessing their lengths in ChannelUri . java to avoid potential NullPointerException when tags is null
updated JAVA _ REGEX _ SPECIALS string and added new test cases in RegexpUtil and TestSqlPatterns to improve regex pattern matching accuracy and ensure
added a new constant for the action bar title and updated its title handling in FileActivity and FileDisplayActivity to ensure the action bar title is
updated the method to use ` Iterables . getLast ( convertedElements ) ` instead of ` Iterables . getOnlyElement ( convertedElements ) ` to
updated the scheduling annotation in CleaningService . java from an hour of " * " to a specific hour of " 0 " to simplify the
added partition handling and table path validation in TransactionalValidationListener . java to improve validation of table structure for partitioned tables
added a polling feature to the SnapPuller class to enable polling functionality for replication
changed the data type of generatedKey from int to long and updated SQL statement execution to handle generated keys correctly to ensure accurate key generation and improve
refactor reference retrieval logic in SimpleReferenceCache . java to improve readability and maintainability of the code
improve error message for inline inlining failure
( chore ) camel - web - client : increase default keep - alive timeout from 60 to 10 second
deleted the HttpTestAccount001 . java file to the test class is no longer needed for the current testing environment
[ grid ] catch all throwable in dispatcher callback , not just exception
camel - 16462 : camel - cxf - add support for camel - cxf - message data format . thanks to jay
added a case for ' ~ ' in ClientUtils . java to handle a specific client configuration option
camel - 14263 : camel - slack - allow to configure the Slack consumer delay a a java . time . duration
fire block harvesting event when drop block ( # 3566 )
updated the ` FormLayout ` and ` JCheckBox ` initialization in ` TranscodingTab . java ` to improve layout flexibility and correct the
added a new file ` bug8057791 . java ` that implements a custom Nimbus look and feel for a JList
updated flag logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve code clarity and introduce
fix npe when engine api add ethsubscribe available ( # 2590 )
changed the condition from checking if the ' to ' string length is greater than zero to checking if ' to ' is not null to improve null
refactor ParquetFixedWidthDictionaryReaders to conditionally read values based on dictionary usage to improve performance and correctness when reading parquet data
refactor layout calculations for landscape and portrait layouts in PortraitPagedViewHandler . java to improve clarity and accuracy of
added new annotation classes ` Log ` and ` LogInterceptor ` for logging functionality to facilitate method - level logging in the Spring Cloud
updated the trace handling in the QueuedThreadPool class to check for non - empty trace values to ensure that the trace array is displayed when available
updated CacheGenerator and CacheProvider to use ` Implementation ` instead of ` ReferenceType ` to improve cache handling by associating implementations with their respective
added totalFrameSize parameter to createReferenceMap method in FrameMap . java to ensure the reference map is initialized with the correct total frame size
refactor TypesafeConfigurator to improve code structure to enhance maintainability and readability of the code
camel - 16400 : camel - graphql - add karaf test for camel - graphql
added multiple test methods ` bug1 ` , ` bug2 ` , and ` bug3 ` in ` RFE2891944 .
removed URL encoding for entries in HttpClientIntroductionAdvice to simplify code and improve performance by avoiding unnecessary URL encoding
replaced the custom ` unsupportedPlatformTool ` implementation with a new class ` UnsupportedPlatformTool ` to improve code clarity and maintainability by
replaced double loopCount with int loopCount and updated logging format to improve readability and accuracy of recovery delay logging
added ` size ( ) ` method to ` FlightConfiguration ` and ` FlightConfigurationImpl ` classes to provide a way to retrieve the
updated test methods to throw ` IllegalAccessException ` and adjusted index initialization in ` AddressManagerTest ` , ` AbstractAddressManager ` , and ` Abstract
updated layout specifications for components in VLCVideo . java to improve UI layout consistency and readability
rename bisq to bitsquare in order to avoid conflict with bisq
updated the AUTHORITY constant from " com . klinker . android . talon . provider " to " com . klinker
[ mboot ] allow user . m2 / user . xml to be specify by maven - cli . xml
added binding of GL _ ARRAY _ BUFFER to the buffer handle in VertexBufferObjectWithVAO . java to ensure the buffer is properly bound
refactor ServerHttpSecurity class to improve code readability to enhance maintainability and facilitate future development
added JUnit 5 @ Disabled annotation to PostgresStoredProcedureIntegrationTests . java to temporarily disable tests that are not ready for execution
added default headers functionality to HttpClientProperties and CasCoreHttpConfiguration to enable customizable HTTP headers for HTTP requests
improve error handling for password not valid user ( # 2329 )
deleted the NoOpConfigPathGetter . java file to remove unused or redundant functionality from the codebase
replace codec . base16decode with bytes . fromhex in engineauthservice
replaced CascadedStyle with CSSName and added float property handling in FloatUtil . java to improve style management and ensure default values are
jbrules - 2835 : fix checkstyle violation in planning - related module
refactor ` getDefaultHeaders ` method to return a ` MultiMap ` instead of a ` Map < String , String > ` and update its
replaced ` String encoding ` with ` Charset charset ` in ` ProxyServer ` and ` Realm ` classes to enhance flexibility by allowing
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
replaced ` Long . valueOf ( ) ` with ` Long . compare ( ) ` in ` ExpandableUploadListAdapter . java ` and
change error log to debug in defaultjdkhttpclient and jdkblockinghttpclient to reduce verbosity
updated imports in LegacyAuthenticationHandlerAdapter . java to utilize NamedAuthenticationHandler and UsernamePasswordCredentials to improve code clarity and maintainability by
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
add check to prevent filter from be remove from the network when the filter be not our own .
pgp { public | secret } ring : move the wrap ( ) method to the class , so that it can be reuse by other class
replaced BufferedOutputStream with BufferedOutputStream in MinimalLockingWriteAheadLog . java and added a try - finally block to ensure proper resource management and
added a new test method ` testSelectAllFromView ` to ` TestJdbcDriver2 ` and modified column qualifier handling in ` HiveBase
modified FocusTransitionTest . java file to improve focus transition testing functionality
fix import of gwt , not gwtproject . core . client . gwt
added a check for ` sourceTask ` type before accessing ` JobClient ` and ` Counters ` to improve error handling and prevent potential NullPointerException
removed redundant whitespace in HttpInput . java to improve code readability and maintainability
refactor color component color setting to use a separate method for improved code organization to enhance maintainability and readability of color selection logic
updated the constructor of TaskHelper to use hidden instead of non - hidden to improve the functionality of TaskHelper by allowing the hidden parameter to be
resolve http : / / issues . apache . org / activemq / browse / amq - 2889 - wait for the broker
pdfbox - 4892 : close stream to prevent resource leak
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize default parameter handling in SQL execution
lsra spill optimization : do n ' t set spill state if the loop depth do n ' t match the spill definition
[ test ] add micronaut ast builder to facilitate test .
fix ( pgresultset ) : add volatile keyword to resultset # close ( )
set default value of serviceAdvisorType to PYTHON to ensure proper initialization of service advisor type
replaced the static resolver with a thread - local instance for ResolvingDecoder to improve performance by avoiding multiple instances of ResolvingDecoder
replaced Collection with List in Path constructor and updated related methods for better type safety to improve code clarity and ensure compatibility with Java ' s
updated assertions in SendCoinShieldTest to use a random byte array instead of a new byte array to improve test reliability by ensuring consistent
added a method to set personalisation based on date , email , and distinguisher in SkeinParameterSpec . java to enhance functionality for
removed redundant line break in CodeGenerator . java to improve code clarity and maintainability
removed the percent parameter from the scroll method in multiple classes to simplify the scrolling logic by eliminating unnecessary complexity
changed the ` pointer ` variable from private to public and added ` reset ` and ` resetTo ` methods in ` FlatRecordReader ` to
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and specificity regarding the class '
simplified import statements and updated boolean handling logic in CastExpression . java to improve code readability and maintainability by reducing redundancy
replaced the use of ` ArrayList ` with a boolean flag for managing accepted media types to improve code clarity and ensure proper handling of the
added a boolean value of false to TaskView . java to ensure consistent behavior in the TaskView class
added a method to check if the column type is auto - increment and implemented the ` isAutoIncrement ` method in ` LiquibaseDataType
initialize errorText with a default value of " Command failed due to Internal Server Error " to provide a meaningful error message for debugging purposes
updated imports in DeadListenerTest . java and LocalManagementTest . java to use ProcessTools and Utils , and added JVM options to improve performance
replaced calls to ` toSimulate . add ` with ` toSimulate . push ` in ` BasicEventSimulationEngine . java `
added AJP connector setup and binding functionality to GitBlitServer to allow users to configure and bind the AJP connector on a specified port
added type coercion for compound types in TransTypes . java and created a new test class Intersection03 . java to ensure type safety
rename EmbeddingTest class to EmbeddingITest to clarify the purpose of the test class
added a native method to start the toolkit thread only if it is not already initialized to optimize thread management by avoiding unnecessary initialization of the
add option to compress the bundle in parallel to optimize performance
add the ability to hide the surface on window in pgraphics ( fixes # 323 )
updated the temporary directory initialization in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to improve clarity and maintainability
added configuration options for enabling fullNode and solidityNode services to allow conditional service addition based on configuration settings
added service attribute to GoogleCloudFirestoreTicketDocument and implemented countTicketsFor method in GoogleCloudFirestoreTicketRegistry to support service -
refactor Generate . java to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ table - planner - blink ] fix json _ format ( jsonmap ) to return null
updated BadgeRenderer logic to handle the DOTS _ ONLY flag and adjusted related conditions for badge rendering to improve badge rendering logic based on the
changed the access modifier of the getConfiguration method from final to default to allow overriding of the method in subclasses
added a test for invalid excluded package patterns in OgnlUtil to ensure proper exception handling for invalid package names
updated deviceUdid assignment logic to handle mac platforms to ensure consistent handling of device Udid based on platform name
updated ` DefaultHttpClientFilter ` to use ` ProduceProcessorManager ` and modified test cases in ` TestHttpClientFilter ` to enhance error handling and
refactor script binding and execution logic in AllAppsView . java to improve code clarity and ensure proper execution of the script when necessary
added a new boolean flag ` TEXT _ BURN ` and modified the conditional check for line count to enhance text rendering control based on its value
added JUnit teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup of database tables and views after tests
added retrieval of the parser for the specified name in SecurityNamespaceHandler . java to ensure proper retrieval of the parser associated with the specified name
added a new test method for the ` fastpath ` functionality in ` BoundedLocalCacheTest ` to verify the behavior of the ` fastpath `
updated RawConnection and WebSocketAsyncConnection to extend WebSocketConnection and added complete and flush methods to enhance WebSocket handling capabilities and improve connection management
added new test methods for asserting multiple assertions in SoftAssertionsPerfTest . java to enhance performance testing capabilities for soft assertions
added a new constant for TEST _ FAILURES _ EXIT _ CODE and modified the execute method in PythonRunTestsStep to return a successful result
refactor glyph processing logic in GlyphLayout . java to include conditional formatting based on markup enabled to improve readability and maintainability of the code
refactor test cases in TestBooleanRewrites to use streams for comparing document scores to improve readability and maintainability of the code
updated the retrieval of the enclosing class from ` getEnclosingClass ( ) ` to ` getSuperClass ( ) ` to ensure the correct superclass is
remove playersocketconnection . flush ( ) and use player . flush ( ) directly .
added a check to prevent multiple instances of ` removeOnDrawListener ` in ` Launcher ` and ` LauncherAnimUtils ` to ensure
refactor multiple classes related to CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder to improve code organization and maintainability
replaced individual import statements with wildcard imports for MatchStatus and Phase , and added a condition to return NOT _ APPLICABLE to streamline
updated the boolean check from false to true in RendererConfiguration . java to enable media playback by default in the renderer configuration
added method to check if an element is acceptable and visit interceptor types in BeanDefinitionInjectProcessor to enhance annotation handling for method and interceptor types
added assertions and verification for permission checks in FolderPermissionBase . java to ensure proper permissions are enforced for table operations
do n ' t publish status for provider in wrong state
updated the color calculation in PastelColor . java to use a base color value to improve the randomness of the Pastel color
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
updated image handling in HolographicViewHelper to use original and outline bitmaps instead of drawable objects to improve code clarity and ensure
refactor request method handling in CloudClient . java to use HttpMethod . fromString for improved clarity and logging to enhance code readability and
slightly improve the preprocessing of multi - word preprocessing
[ hotfix ] [ test ] remove unused import in iochannelutilstest
added a check for HivePassThroughOutputFormat before loading the class to improve handling of class loading based on storage handler ' s output format
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and readability
updated validation logic in DOMBuilder . java to ensure ' start ' is within the bounds of ' length ' to prevent out - of - bounds
refactor conditional statements and update method calls in clusteringCoefficient and EigenvectorCentrality classes to improve code clarity and ensure
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` TestClass . java ` implementing an interface with static methods and a default method to demonstrate handling of static
camel - 6669 : fix defaultkeyselector to work with property placeholder .
replaced instances of ` Throwable ` with direct ` Throwable ` and simplified exception handling in ` LogResolverBean . java ` to improve code read
refactor multiple security - related classes for improved consistency and clarity to enhance maintainability and readability of the codebase
updated JGit version from " 1.0 . 0 " to " 1.1 . 0 " and modified import statements in multiple files to
updated the client key retrieval logic in HttpClientIntroductionAdvice . java to improve clarity and consistency in handling client paths
added transformer support to the namespace handler , and add a transformercontext to the namespace handler .
updated BACK _ FACTOR to REWIND _ TIME and modified related conditions in ResumeObj . java to improve clarity and functionality of duration
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and modified ` Button ` to conditionally
updated usage string handling in UtilityCommands and modified documentation printing logic in DocumentationPrinter to improve readability and ensure non - empty usage strings are printed
updated request attribute key from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in attribute
removed setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource . java and updated references in RewriteCrossSpaceCompactionSelector
[ hotfix ] remove redundant @ override annotation in observation
refactor project ruleset synchronization logic in ProjectPropertiesModelImpl . java to improve readability and maintainability of the code
now that we have a thread - safe iterator in chain , we can be more aggressive when resolve
add namingconventions for elastic meter ( fix regression )
added methods for handling Gcode command creation and job length estimation in IController and TinyGController , and changed BackendAPI to use I
added a new test method ` hugeHorizontalRule ` in ` PathologicalTest . java ` to verify rendering behavior with horizontal elements
replaced ` System . out ` with ` TTY ` in ` TypeSystemTest . java ` and ` PartialEscapeAnalysisPhase . java
refactor multiple Java classes to improve code structure and readability to enhance maintainability and facilitate future updates
change the condition from checking if frameLength is = = 0 to checking if frameLength is less than or equal to 0 to ensure that frame
updated return statements in IntFloatMap . java and IntIntMap . java to return default values instead of returning zeroValue to ensure consistent behavior
updated image handling in ImageDownloadService to run on the UI thread to ensure UI updates are performed on the UI thread for thread safety
added a null check for the registered variable in HandlerRegistration . java to prevent potential NullPointerException when demand is zero
removed the hasNextSibling ( ) method from AttributeNode and ElementNode , and modified the return logic in IeNavigator to streamline the node
fixed - nullpointerexception in redisdistributedmapcacheclientservice . getall ( ) method cause npe
updated logging statements in MobFileCache . java to provide clearer information about cache configuration settings
refactor ColConvCCMTest class to improve code readability to enhance maintainability and facilitate future development
replaced ` target ` and ` allowCovariantReturns ` with local variables ` target ` and ` allowCovariantReturns ` to improve code
pdfbox - 2576 : add generic to avoid raw type , a suggest by valerybokov
removed Float . toString ( ) from jsonData and added a new X class for JSON representation to simplify data handling and improve readability of JSON data
added a return statement in GenericFileConsumer . java to ensure proper termination of the method execution
added an EventQueue invokeLater call in bug6638195 . java to ensure that the delegate ' s allInvoked ( ) method is
updated the method call from ` getMaxTextMessageSize ( ) ` to ` getMaxBinaryMessageSize ( ) ` in ` CompressExtension . java
replaced ` + = ` with ` - = ` in ` steeringValue ` calculations across multiple test files to correct the logic for
replaced the use of ` Arrays . equals ` with ` MessageDigest . isEqual ` for password comparison to improve security by using a more robust comparison
refactor JdbcSerDe to use LocalDate and LocalDateTime for date and timestamp handling to improve clarity and accuracy of date and time representation in the
updated the VERSION constant from 2 to 3 and modified metadata handling logic in ParseData . java to accommodate different versions for reading and writing
added ` FlywayInitializerJpaDependencyConfiguration ` and ` FlywayAutoConfiguration ` classes to manage JPA dependencies for Fly
added sorted ( ) method to ClassesImpl . java to ensure classes are processed in a consistent order
added a method to retrieve the current stable state in LauncherStateManager and updated references in AbstractLauncherUiTest to improve state management and ensure
refactor SharedInformer class for improved readability to enhance maintainability and facilitate future updates
refactor memory handling in TestCloseScope0 to support different versions of MemoryScope and ResourceScopeImpl to improve compatibility and maintainability across different
increased the timeout value in the test method from 500 to 5000 to allow for longer connection attempts during testing
updated CaptchaChannelProcessorTests to improve test coverage to enhance reliability ofaptcha channel processing functionality
added logic to update the owning collection when a change is applied to the item ' s owner to ensure that the item ' s owner is correctly
added a retry mechanism for saving registry cache files in AbstractRegistry . java to improve reliability by limiting the number of attempts to save the
updated the parameter name from ` mergeDirectory ` to ` directory ` in the ` TrackingDirectoryWrapper ` initialization to improve clarity and consistency
[ java ] fix false positives in unusedimports rule
added validation for insert overwrite functionality on bucketed Iceberg tables to ensure proper handling of insert overwrite operations on bucketed Iceberg tables
updated assertions in BootstrapTests to check for legacy SAML keys to ensure correct configuration validation for SAML settings
updated the method to check for non - static fields in Excluder . java to ensure proper handling of anonymous or non - static fields
refactor the ` getAddressVector ` method to use a local variable ` addressees ` instead of a local variable to improve code readability
removed specific comment states from the CommentsParser class to streamline parsing process by eliminating unnecessary comment states
added IOException handling to the release method in Lock and NativeFSLockFactory classes to improve error handling and resource management during lock release operations
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align the
added a check for unary operators before transforming the right operand in SpelExpressionTransformer . java and modified operator handling in LiteralNode . java to
updated ByteBuddy instantiation to disable TypeValidation to ensure compatibility with the latest ByteBuddy features
replaced ` DeclaredType ` with ` TypeElement ` in the ` JavacRoundEnvironment ` and related classes to simplify type handling and
updated lock handling in LockModePessimisticReadWriteIntegrationTest and changed global innodb _ lock _ wait _ timeout from 100
refactor logging application listener to use system property instead of log file to improve code clarity and maintainability
added a method to check if a HTTP redirect status code is reached and modified the connection handling in the request method to improve HTTP redirect handling and
added SERVICE _ MAPPING , APP _ MAPPING , and APP _ MAPPING constants to ServiceCombConstants and updated MicroserviceFactory to use them to improve
updated method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the correct
updated database path regex and database prefix handling in BaseAndroidTestCase . java and GeocodeHelperTest . java to improve code clarity and
updated return statement to retrieve unread count from HomeDataSource to ensure accurate counting of unread items for the current user
renamed the test method from ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test for the virtual thread pool
added a limit parameter to the getAllOrder method and updated market price key retrieval logic to ensure that the order retrieval does not exceed a defined limit
added null check for the user before retrieving UserSettings to prevent potential null pointer exceptions when accessing user settings
updated LocalFileSystem to use getAbsoluteFile ( ) and added a new test for matching relative wildcard paths in LocalFileSystemTest to ensure correct file path
added width and height limits for the instance ' s bound in ComponentBuilders . java to ensure that the instance does not exceed the defined maximum dimensions
added logging capabilities and a deprecated method for setting connection manager timeout in CommonsHttpSolrServer . java to enhance debugging capabilities and provide clearer
removed duplicate error handling for document creation in PrintController . java to streamline error reporting and improve code clarity
refactor save - analysis filename handling to use lambda expressions to improve code readability and maintainability
added validation for number checks in SpellChecker and created a test for i53643 in SpellCheckerTest to improve spell checking accuracy
updated the MESSAGE constant in HelloWorld . java to ensure consistency in message formatting
added a method to retrieve the OCFileListFragment from the left fragment to streamline file action handling and improve code organization
added error handling to log replication time and configuration files in SnapPuller . java to improve robustness by logging exceptions during replication operations
updated the update method call in StoreCachedTest . java to ensure consistency in parameter order
updated variable name from ' materials ' to ' theMaterials ' and added logic to remove specific MaterialColumnParser instances from the fileColumns list
updated string arrays and added additional constants in DependencyBank . java to improve code readability and provide clearer guidance for developers
added limits for recyclerized views in the AppsContainerRecyclerView to improve performance by optimizing the number of recycled views based
add a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that the build process
fix the examplebaritonecontrol not respect the waypoint ' s location
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating Liquib
added support for handling null values in FilterOperatorUtils and created a corresponding test in NullHandlingEnabledQueriesTest to improve query performance and ensure correct
added validation for bootstrap method ' s argument types and their types in JDynamicInvokeExpr . java to ensure that the bootstrap method ' s signature
( chore ) camel - jms : fix port conflict in camel - jms
removed the call to clear formatters in CucumberInstrumentation . java to streamline configuration by eliminating unnecessary formatter settings
changed the type of the ` contacts ` list from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > `
updated workspace label adjustment logic in DeviceProfile . java to ensure workspace labels are adjusted correctly based on cell padding and icon properties
updated assertions in ReplicationFactorTest to use assertRf method with additional parameters to improve readability and maintainability of test assertions
sulong : only initialize the context if pre - initialization be possible
removed the JUnit @ Ignore annotation from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest
replace RuntimeException with JsonIOException in error handling to provide a more specific exception for JSON - related issues
replaced Integer . valueOf with Integer . parseInt for value parsing to improve performance by avoiding unnecessary boxing and unboxing operations
updated error messages and modified file traversal parameters in the Copy . java file to improve clarity of error reporting and ensure proper file traversal behavior
refactor segment name checks to use a dedicated method for low and high level consumer segment name checks to improve code readability and maintainability by
added startActivity and startForResult methods to ShadowFragment and corresponding test cases in FragmentTest to ensure proper handling of fragment lifecycle events and prevent
updated the return statement in DueDateBusinessCalendar to use clockReader ' s current time instead of a static current time to ensure accurate date
update return statement in TargetCpuType . java to include x86 _ 64 - none - linux - android target to ensure proper CPU configuration for
added a ` deleteAllFiles ` method in ` FileDataStorageManager ` and implemented its functionality in ` ManageAccountsActivity ` to manage file deletion
updated command - line instructions for SchemaCrawler to use " - h " instead of " - ? " to improve user experience by providing a clear
added a new method ` createSuiteDescription ` and modified the ` equals ` and ` hashCode ` methods in ` Description ` to ensure unique identifiers
replaced the decoding method with a direct call to ` decodeBarcode ` to simplify the code and improve performance by eliminating unnecessary Hashtable
removed the sources parameter from the BuckTarget constructor and related classes to simplify the constructor signature and eliminate unnecessary dependencies
[ gwc ] add unit test for range past start / end
added a dependency tracking configuration option to JRubyScriptEngineConfiguration and updated its usage in JRubyScriptEngineFactory to enable or disable dependency tracking
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
patch by jbellis ; review by gdusbabek for cassandra - 1188
refactor WelcomeWindow to use a caching mechanism for image rendering to improve performance by reducing redundant image loading and memory usage
updated tuner configuration handling and error logging in multiple classes to ensure unique identification of tuners and improve error handling during buffer resubmits
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test for sh - binary functionality to enhance testing capabilities and ensure compatibility with
added a conditional statement to set includeString to " db : hsqldb " in TestFilter . java to enable the use of HSQL
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
trufflestacktrace : do n ' t materialize host name if exception have no stack trace .
do n ' t export jvmci to provider in graalservices . load
added test to verify that duplicate command handler resolver be use .
[ flink - 20865 ] [ stream ] enable fine - grained resource management in batch job
fix entityfishhook . getblockstate ( ) not return the correct block state ( # 4892 )
camel - 14284 : camel - ftp and camel - ftp should use source code generate sample code in the java microgenerator
rename method names from ` getCommandRunner ` to ` getStepRunner ` across multiple classes to improve clarity and consistency in naming conventions
rename the variable ` useShortNames ` to ` compressPackageNames ` and update related methods and constructors accordingly to clarify the purpose of
added a check to return early if the items list is empty to avoid unnecessary processing when there are no items to display
added a conditional annotation for the REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure the bean is only
pdfbox - 4892 : add xmllayout property to allow customization of xmllayout property
added a new constant ` OMIT _ HEADER ` in ` CommonParams ` and implemented the ` remove ` method in ` NamedList ` to
replaced ` _ id ` with ` getPropertyNumber ( ) ` in ` EscherProperty ` and added a new test class ` TestEs
updated method call to use Description . getBuildRuleType to ensure consistency in accessing build rule type information
add scene . modifyhierarchy ( ) in sootclass to allow modification of the hierarchy
replaced direct calls to ` size ( ) ` on ` disputesPerTradeId ` and ` disputesPerDelayedPayout
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` and modified the ` retrieveColumns ` method
wallet : set transactionconfidencetype . not _ seed _ in _ chain to not _ seed
refactor HttpClientIntroductionAdvice to handle both Body and Header annotations more efficiently to improve code clarity and ensure proper header
improve craftinghelper . processjson ( ) to handle json condition
hbase - 25815 close ( ) should log a warning if the region be close but the exception be throw
refactor length comparison logic in Credential . java to use min for improved clarity to enhance readability and maintainability of the code
[ java ] do n ' t check if the subscription have image for the same id .
fix flaky testjvmprocess . testdestroyforcibly ( )
added Oracle database support to the conditional check to ensure compatibility with Oracle database connections
camel - 7999 : camel - mail - consumer should not attempt to connect to a store if it be n ' t actually connect to the
added token validation in Parser . java to check if there are more tokens in the query to ensure proper handling of token consumption and prevent parsing errors
camel - 18641 - aws - translate : list all the available language in the enum - start with ` ` g ' ' complete
added a method to retrieve the data file name and modified model initialization logic in Voice . java to improve flexibility in model handling for different audio
added emailDomain functionality to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable support for domain management in LDAP identity providers
added configuration constants for request read and connect timeouts in Configuration . java and updated ViewRegistry . java to use these timeouts from the configuration to improve
do n ' t call processDeferredConcepts ( ) if there be no concept link to save later
added RedisCategory import and JUnit category annotation to RedisServiceRegistryTests to categorize tests related to Redis functionality
refactor test to use parameterized test and improve handling of empty type patterns to enhance test coverage and improve readability of deprecated method matching logic
added a call to ` super . paintComponent ( g ) ` in the ` OverlayPanel ` and ` WaterfallPanel ` classes to
removed unused imports from multiple Java files to improve code clarity and reduce unnecessary dependencies
updated event handling in ContractEventTriggerCapsule and added eventSignatureFull method in LogEventWrapper to improve clarity and functionality of event signature
updated the filter condition in FileTestHelper to check if the session ID ends with an underscore to ensure that file names ending with an underscore are
replaced ` clearRect ` with ` fillRect ` and applied background color to the graphics rendering to enhance the visual appearance by using the
mondrian : do n ' t throw a ruleerror for invokers that do n ' t exist
removed debug print statements from various Java files to clean up the code and improve maintainability
added a check for NaN values before asserting score values in TestFieldCacheSort . java to ensure that assertions only occur when score values are
replaced direct access to entityKeys with Set . copyOf for clarity to improve performance by avoiding unnecessary object creation
added functionality to handle zero time inputs in ColumnSnapshotGenerator and created a test for date default value in MySQLIntegrationTest to ensure proper handling of
replaced ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and ` t
updated type parameters of ` vsContext ` and related methods to use wildcard generics to improve type safety and flexibility in context handling
[ drools - 6261 ] fix concurrent modification of kiesessionmodel in kiecontainers
updated the instantiation of ` msClient ` to use ` this . conf ` instead of ` conf ` to ensure the correct configuration is used for
added a conditional check to return early if the modalness matches the current state to optimize performance by avoiding unnecessary processing when the modalness
added a test for codec capabilities in ShadowMediaCodecListTest . java and implemented native _ getGlobalSettings method in ShadowMediaCodecList . java
add focus to confirm button when enter key use ( # 5460 )
added validation for width and height in SunVolatileImage and improved error handling in X11SurfaceDataProxy and XRSurfaceDataProxy
updated the group character from " . " to " \ u00a0 " in FormatData _ uk . java to ensure proper formatting for
refactor AsyncStressTest and StressTest to use AtomicInteger for thread - safe thread management to improve thread safety and ensure consistent idle time
added beta flavor handling and improved toast messaging in AchievementsFragment and LeaderboardFragment to enhance user experience by informing users when
added access , name , and description fields to SearchMethodVisitor to enhance search functionality by incorporating context information
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java to ensure proper synchronization during test execution
removed redundant line breaks in DLNAResource . java to improve code readability and maintainability
simonstewart : remove the ' required ' attribute from the resequence xml definition .
refactor transaction handling methods in TableReader to use a dedicated acquireTxn ( ) and releaseTxn ( ) methods to improve code clarity and
flume - 1748 : use ssl . keymanager . algorithm or ssl . trustmanager . algorithm to configure keymanager and trustmanager
refactor the method ` getSingleSourceApplicableTest ` to utilize ` Applicability ` instead of ` JavaIsoVisitor ` to improve code
added a exit ( ) method call and a conditional check for tab key state in Blockmania . java to ensure proper termination of the application
replace ` PACKAGE _ PRIVATE ` with ` NONE ` across multiple files to standardize access specifier representation for better clarity and consistency
renamed the method ` unHandled ` to ` unhandled ` and updated related error handling to improve clarity of method naming and enhance error logging
updated stripes and stripeStats assignment logic in OrcInputFormat . java to ensure accurate retrieval of stripes and stripe statistics based on the
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
updated URLs from HTTP to HTTPS for Myhentaicomics to enhance security by using a secure connection
added command - line option ' v ' to display the current jar version to enhance user experience by providing a way to view the current version of
fix ( gui ) : replace split ( ) with splittokens ( )
updated rotation handling in ConsoleActivity and added input method in TerminalView to improve user experience by allowing default rotation based on keyboard configuration
changed the type of ` hq ` from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc > ` to
added null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException during execution
camel - 15936 : camel - jbang - expose the class name of the headersmapfactory so we can know which class to use
updated closing brace formatting in JavaCompiler . java to improve code readability and consistency
int - 1187 jmsoutboundgateway now support ' queue ' and ' connectionfactory ' property
updated the index parameter from ` i + 1 ` to ` i2 ` in the ` expecting ` method call to correct the index used for
nifi - 1188 : fix npe in abstractscriptprocessor when add a script engine to the classpath
added ` org . postgresql . PGStatement ` to the proxy instantiation in ` PooledConnectionImpl . java ` and created a test for
do n ' t refresh size estimate when flush memtables in cassandraio test
changed log level from error to warn for no more memory limit in AtomicRemainder . java to provide a less severe warning level for memory limit
avoid aggressive gc when ttl be aggressive
fixed - rblockingdeque and rblockingdeque use unit . toseconds ( ) instead of unit . toseconds ( ) . #
removed format string from printMap calls in JobInspectCommand . java to simplify output formatting for better readability
refactor Engine class to improve code readability to enhance maintainability and facilitate future feature additions
refactor sorting logic in ChildHolder to use CLASS _ COMPARATOR for better key comparison to improve code clarity and maintainability by using a
[ issue # 5271 ] fix test failure ( # 5272 )
updated condition from ` numIndexDims ` to ` numDataDims ` in ` BKDWriter . java ` to ensure correct handling of
[ hotfix ] fix npe in notebookserver when no interpretergroup be available
updated the parameter from ' funN ' to ' lt ' in the addListElement method to ensure the correct node is added to the list
removed public access modifier from verifyIdsAreStable ( ) and getNodeId ( Node node ) methods to enforce encapsulation within the package
cloudstack - 7373 : improve error message when create snapshot policy fails due to invalid storage pool
removed the ` public ` access modifier from method declarations in ` ItemWriter . java ` to enforce encapsulation within the package
updated the parameter of the ThingImpl constructor from an empty string to a specific test identifier to ensure the ThingImpl can be created with a specific
added ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest `
replace FSDirectory with RAMDirectory for temporary directory management in TestNorms . java to optimize test execution by using in - memory directories instead of
added a check to ensure mLineHeight is only set if it is less than mDrawTextRectBuffer . height ( ) to prevent potential
updated WalletAppKit . java to modify method implementations to improve code clarity and maintainability
[ netbeans - 4062 ] remove nashorn - specific code from oql engine initialization
remove chat transport menu item from the button group if it do n ' t exist
added resolve and replaceTokens methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes to provide functionality for resolving and replacing tokens in
updated the handling of the bsqBlockChainExplorer field in PreferencesPayload . java to improve null safety and avoid potential NullPointerExceptions
added attribute management methods to StandardSession and Session classes to enhance session management capabilities by allowing attribute retrieval and removal
added assertions to verify the name and alongs of the plain bean in the TestDbJson _ List class to ensure the correct retrieval of the
updated the array size from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to improve memory allocation based on initial page count
refactor BatchCommandLineLauncher to improve command line execution logic to enhance performance and maintainability of command line execution
added JDBC data source and transaction manager beans in BatchMetricsApplication . java to enable support for HSQL database connections in the application
fix checkstyle issue in util / glowrootlog / glowrootloghttpservice . java
pdfbox - 2576 , pdfbox - 2576 , pdfbox - 2576 , pdfbox - 2576 , pdfbox - 25
removed synchronization from the close method in DocumentsWriter and added segment refresh logic in DocumentsWriterPerThread to improve performance by reducing unnecessary
added methods to retrieve properties for multiple choice options and validation constraints in UiBinding . java to enhance functionality for managing user input properties in the UI
updated method calls to use ` toString ( ) ` instead of ` name ( ) ` for better readability to improve code clarity and ensure
bugfix : only update the stored copy of the tree for a full save
refactor Affix and Dictionary classes to use Pattern instead of String for condition and condition patterns to improve performance and maintainability by avoiding repeated
replaced explicit generic types with diamond operator for lists in KrakenAdaptersTest . java to improve code readability and maintainability
remove unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unused variable
refactor NBJavacTrees class to improve code organization to enhance maintainability and readability of the code
removed unsupported encoding check for dataEncoding in VectorizedPrimitiveColumnReader . java to streamline error handling for unsupported data encodings
updated logging logic in HttpSolrCall . java to use MarkerFactory for better logging to enhance clarity and maintainability of log output for better
added a call to destroyMetadataServiceProxy in ServiceInstancesChangedListener . java to ensure that the metadata service proxy is properly destroyed when instances are
improve query performance by prevent infinite recursion
updated HubChangeExecListener to provide a more informative error message when the changelog is not registered with Hub to improve user feedback by providing clear
added a ` TRY _ HARDER _ HINT ` Hashtable and modified the comparison logic in ` AbstractBlackBoxTestCase . java `
updated the ` executeCompilation ` method to return a ` ProcessExecutor . Result ` instead of an ` int ` to improve the handling of compilation
removed the ` numEvents ` variable and simplified the iteration logic in ` ObjectStore . java ` to simplify the code and improve readability by
simplified the validation check in ` ValidatedLocalValidatorFactoryBean ` to improve code readability and maintainability
fix a bug in entityawareworldprovider . clear temporaryblockentities ( ) .
removed redundant type check in IntrinsifyArrayCopyPhase . java to streamline the code for better readability and maintainability
remove some unnecessary logging . set level to all .
removed WantedAnywhereAfterFollowingInteraction class and updated error message formatting to improve clarity of error messages for better debugging
added null checks for account and key in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure contract integrity by validating account and key
refactor scriptlauncher to use a sortedmap instead of a comparator
chore : update java and python dependency ( # 99 )
replaced ` addProperty ` with ` setProperty ` for metadata properties in ` BaseSingleTreeBuilder . java ` to improve clarity and consistency in property
updated the instantiation of AsmLoader to use the interface class loader instead of the default class loader to improve flexibility in class loading by allowing
pdfbox - 2576 , pdfbox - 2576 , pdfbox - 2576 , pdfbox - 2576 , pdfbox - 25
updated the export namespace logic to conditionally use " declare " or " namespace " based on the ` isDefinitionScope ` flag to ensure proper
replaced EmptyServerHandler with AbstractHandler to handle HTTP requests to ensure that the request input stream is properly copied to the output stream after handling
simplified the listener registration by removing unnecessary string arrays to improve code readability and maintainability
added a null check for the lhs variable in AbstractSqmPath . java to ensure a fallback to findRoot ( ) when the lhs is
updated package declarations for ReadFolderTest , DeleteFolderTest , RenameFileTest , and TestActivity classes to improve organization and clarity of test
refactor BufferedImage initialization and filter logic in AwtCanvas . java to improve handling of BYTE _ INDEXED and GRAYSCALE _ INVERT
[ gr - 21054 ] make native image location qualifier configurable .
remove dataflowportabilityapiunsupported from usestimersinpardotest
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code ( # 384 )
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
renames occurrence of callstack to callstack so that it would well reflect our new call architecture that also include conferencing and conference
log a warning if the max - size configuration for a map do not allow any data in the cluster
updated references from AST to LST across multiple Java files to ensure consistency in terminology and improve code clarity
fix a bug in the threadedacousticscorer that could result in an arrayindexoutofboundsexception .
replaced throwing an AssertionError with returning null in NetHooks . java to simplify error handling by returning null instead of throwing an exception
updated method calls in ApplicationControllerFluentLeniumTest to use window ( ) instead of getServerAddress ( ) to improve clarity and consistency
added default ` makeString ` method implementations across multiple iterable classes to provide a consistent string creation approach across different iterable implementations
replaced hardcoded order value with a constant DEFAULT _ ORDER in OidcServicesManagerRegisteredServiceLocator to improve code readability and maintainability
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated related logic to enable conditional checks based on weak associations to enhance the analysis
refactor Deflater class to improve compression efficiency to enhance performance and reduce memory usage during compression
added a try - catch block to handle exceptions in Font . java to improve error handling by converting them into IOException
added a null and empty check for content in VersionTypeBinding . java to ensure a default version is returned when content is null or empty
replaced the local variable ` places ` with a direct return statement in ` NearbyListFragment . java ` to improve code readability
updated content type check to be case - insensitive in MailConverters . java to ensure consistent content type matching regardless of input case
add support for openssl 1.1 , 1.0 , 1.0 , 1.1 , 1.0 spec type ( # 4
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding and adjusted folder name suggestion logic to enhance flexibility
replaced specific Hibernate annotations with a wildcard import and updated entity retrieval logic in InheritanceCacheTest . java to improve code clarity and
updated import path for DefaultOAuth2RequestFactory and implemented the getUserApprovalRequest method in TofuUserApprovalHandler to ensure compatibility with the
fix influxdb name convention not apply to tag value ( # 645 )
make sure we do n ' t print stacktraces to stdout
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection to align with the new cookie naming convention
added a static method ` classMetadataUnsupported ( ) ` to both ` Platform ` and ` Subject ` classes to centralize the logic for checking class
added functionality to enable or disable the clear all feature in OverviewActionsView to enhance user experience by allowing users to enable or disable the clear
updated the desiredRepoVersion variable to be final and modified the timeout duration in ClusterStackVersionResourceProvider . java and HostStackVersionResourceProvider
deleted the MemoryLeakTest . java file to the test was deemed unnecessary or redundant
updated the URL construction in ServletTester . java to include the local host and port to improve the clarity of the returned URL for better
added a check for ` USE _ MVDWAPI ` in ` ServerListener ` and defined a new setting in ` Settings ` to enable
fix partition assignment correctness test by assert cluster size eventually
replaced an unsupported operation exception with a singleton instance of FFIProvider to provide a mechanism for instantiating FFIProvider based on JNA
tika - 2598 -- add a test for hierarchical file list in batchprocesstest
added null checks and improved null handling in MongoTemplate . java and corresponding test cases in MongoTemplateTests . java to enhance robustness and
updated position initialization to use NODE _ LIST instead of 0 to ensure correct representation of nodes in the code
added a new field ` accTradeValue ` and its getter method in ` BithumbTicker ` , updated parameters in ` Bithumb
updated logging statements in RealtimeSegmentDataManager . java to use placeholder syntax for segment names to improve logging readability and maintainability by providing
replaced ` maxParallelThreads ` with ` MAX _ PARALL _ TASKS ` in ` OverseerTaskProcessor . java `
replace ArrayList with CopyOnWriteArrayList in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex to improve thread - safety
doc : fix typo find by codespell on fossies . org
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during transition processing
( chore ) camel - aws2 - mqtt : fix test failure on slow ci server
updated conditional check from ` beginCycle = = currentCycle ` to ` beginCycle > currentCycle ` in ` DelegationService . java `
updated ` RandomValueStringGenerator ` to use ` 10 ` instead of ` 6 ` and modified the length assertion in tests to ensure correct length
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching of unique constraints in the database
refactor code to improve handling of language codes and descriptions in MediaDetailFragment . java to improve readability and maintainability of the code by
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 263 . add
[ api ] add reference filter to listimagecmd ( # 1193 )
camel - 16462 : camel - jms should not allow bridgeerrorhandler to be configure on jmsendpoint
added checks for specific line cases in OpExclusionUtils . java and set a default value for allOps in OpExclusionUtils . java
added return statements to DatabaseCommand . java to ensure that the method correctly indicates a failure or invalid state
updated HonestPoliticianExample to insert multiple Politician instances with unique identifiers to improve code readability and maintainability
[ zeppelin - 4641 ] fix npe in beanshellinterpreter # setinitfile ( )
updated the port assignment in RestletComponent to use a dynamic port from the current instance instead of a static port to allow dynamic configuration of the
add support for ` ` wall _ sign ' ' block in schematic format
added a system property setting for query maximum length in QTestUtil . java and updated session state overrides in SessionState . java to improve query
updated access modifiers of userName and securityMgr to private and refactored HttpConfiguration initialization in WebServer . java to improve encapsulation and ensure
[ hotfix ] [ connectors / common ] rename sink name from ` ` write * ' ' to ` ` kafka * ' '
updated HiveConf to conditionally set the result based on the value of " spark . app . name " and modified SparkSparkClientFactory
fix typo in managedclassfactory
simonstewart : add a remote server handler for maximize window
updated methods to use ` getRootPath ( ) ` instead of ` getEmbeddedCellsBuckOutBaseDir ( ) ` and refactored related
added an assertion to check if the error message contains " entity expansions " in TestXMLEntityExpansion . java to ensure that
update table offset and length calculations to mask values with 0x7FFFFFFF to ensure that the values remain within the valid range of the table
added a customization method to DirectMethodHandle to ensure that the form is properly initialized before use
refactor buffer initialization in LineChartRenderer to use a variable for number of floats and improve coordinate checks to enhance code readability and maintainability
refactor flavor handling in AndroidBinaryDescription to use a loop for multiple flavors to improve code readability and maintainability by consolidating flavor
updated buffer index from ` offset ` to ` i ` in ` LwjglGL11 . java ` to improve code clarity and
added new classes ` Property ` , ` PropertySuper ` , and ` TestClassResolutionFail ` to handle ` NoClassDefFoundError `
only remove the shutdown hook if the shutdown hook be enable .
updated FilterChainProxy to use FilterChjainProxy and removed the URL parameter from the VirtualFilterChain constructor to simplify the class and improve
[ hotfix ] fix arrayindexoutofboundsexception in percentileaggregationfunction
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and modified query handling in QueryTypeAnalyser to improve robustness
set baseType to null in DatabaseInfoRetriever and added default field values in MutableColumnDataType to ensure proper initialization and prevent null reference
updated link linking in multiple Java files to use { @ link # { @ link } } syntax to improve link formatting for better readability and
replaced instances of ObjectEqualEvaluator and ObjectNotEqualEvaluator with static constructors to improve performance by reducing unnecessary object creation overhead
updated paths in BuildCommandIntegrationTest and ConfigSettingIntegrationTest to use " / / : osx _ config " instead of " / :
added sound effect handling in AllAppsView . java to improve user interaction by enabling sound feedback on click events
changed the exception type from Exception to IOException in the main method of RemoveFirstPage . java to ensure proper exception handling for input / output operations
added granularity to the left axis in BarChartActivitySinus . java to enable granularity for the left axis display
refactor version comparison logic in GdxSetup . java to use a dedicated method for clarity to improve code readability and maintainability by
updated file path handling in ContextHandlerGetResourceTest to use MavenTestingUtils and added OS - specific assumptions to improve test reliability and
added close ( ) method to connection and client transport classes to ensure proper resource management and prevent potential resource leaks
replaced the ` awaitAppend ` method with a ` MockAppender ` and modified event handling in tests to improve concurrency handling and simplify event management
[ beam - 4142 ] improve error message when resource be not a directory
updated import statements in IsometricStaggeredMapRenderer . java to remove redundant code and improve readability to enhance code clarity and
removed duplicate unbindHandle call in ItemServiceImpl . java to streamline the code by eliminating redundancy
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the codebase
removed redundant check for HIT _ TARGET _ BACK in touch handling logic to simplify touch event logic for better readability and maintainability
updated navigation button tinting logic in NavbarButtonsViewController to utilize the new UI mode configuration to improve user experience by adapt
[ java ] throw instead of crash when language can not be determine
replaced bootstrapMethodIndex and nameAndTypeIndex with refKind and memberIndex for improved clarity to enhance code readability and maintain
added a new parameter ` BlockFormattingContext ` to the ` findBox ` and ` findElementBox ` methods in ` BasicPanel . java
added error handling and improved output retrieval in WorkerProcess and WorkerShellStep classes to enhance the robustness of process execution and provide better error
added null checks and error handling for null operator in CheckedListReplaceAll to ensure robustness by preventing NullPointerExceptions when a null operator is
added a volatile boolean and a FutureCallback for testing write operations in SslConnectionTest . java to improve control over asynchronous write operations during connection handling
added device configuration listener registration and modified default value handling in DeviceFlag and FeatureFlags classes to improve responsiveness to device configuration changes and ensure
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to issue gh - 1114
removed import of MalformedURIException from StandardRequestHandler . java to eliminate unused dependency and streamline code
added javascript execution for focusing on the end date box in InstructorFeedbackEditPage . java to improve user interaction by ensuring the end date
refactor synchronization logic in KrakenStreamingTradeService . java to improve code readability and maintainability
replaced System . err . println with System . out . println for ignoring Class - Path entries to streamline output for better readability and
modified the SparseRowMatrix constructor to accept a boolean for random access to improve flexibility in handling random access scenarios for sparse matrix operations
bug 7045 : if the poolid be null , do not persist the usage event
refactor input stream initialization to dynamically retrieve the plan path based on Hive configuration to improve flexibility in handling different job configurations
[ beam - 1861 ] use vendored guava in udftestprovider
memorycallgraphbuilder : do n ' t register memory cct provider if it ' s not need
fix npe in conferencechatmanager when receive a multi - user chat message .
fix a bug where a file can not be write if it be already write .
added a new ` FolderSyncActivity ` class and integrated it into ` DrawerActivity ` for folder synchronization to enable users to navigate to folder
[ hotfix ] [ test ] fix resource leak in sequentialchannelstatereaderimpltest
spanishtreenormalizer now handle % and % correctly .
replaced the usage of ` getReader ` with ` getPackedValueSlice ` in ` SimpleTextBKDWriter . java ` to improve
added LocaleRandomizer and its corresponding test class to generate random locale values to enhance randomness functionality for Locale objects in the application
tika - 3745 - improve unit test for font type detection
added 9.0 version to the list of supported versions in Installer and AutoUpgrade classes to ensure compatibility with the latest version of the software
removed unnecessary AccessController wrapper in TCPTransport . java to improve code readability and maintainability
added a default read timeout of 0 for the socketWrapper ' s read method in Http2AsyncParser . java to ensure that the read timeout
increased the default WATCHER _ INITIAL _ DELAY from 120 to 600 in TimelineMetricConfiguration . java to allow for longer
updated error message to include the column name in the error message to improve clarity and accuracy of the error message for better debugging
added date formatting functionality to the ThirdEyeJiraClient class to enhance date handling capabilities in the issue builder
refactor priority handling and header generation in HeadersGenerator and PriorityGenerator classes to improve code clarity and maintainability by centralizing priority frame generation
added a constant for maximum scalar replacement code size and updated the condition for scalarReplace to ensure that the scalar replacement code size does not exceed the
added DATE _ TAKEN to projectionTest and adjusted folderSortOrder and fileSortOrder to include DATE _ TAKEN to ensure correct sorting of
updated drawing logic in TexturePacker2 . java to adjust dimensions to ensure correct rendering by removing unnecessary padding
added WebSocketUpgradeFilter functionality to JettyWebSocketServerContainer and removed FilterHolder from JettyWebSocketServletContainerInitializer to streamline WebSocket filter configuration
added shutdown calls for validateSignService and transactionsMsgHandler , and initialized nodePersistTaskTimer in NodePersistService to ensure proper resource management and
added ` RawJsonRequestBodyAnnotationProcessor ` to handle raw JSON request parameters in the Swagger generator to enable proper processing and configuration of raw JSON data
added a new method ` newTarget ` to ` LoggerUtils ` for creating a ` Target ` instance to facilitate the creation of
updated BeanContainer to initialize the list with an ArrayList and added BeanContainerTests for testing functionality to improve functionality and ensure correct operation handling in the
updated assertion to reflect the correct metric name from blockCountHitPercent to blockCacheCountHitPercent to improve clarity and accuracy of metrics tracking
( chore ) camel - cached : cleanup temp cache file on completion
added device ID to position in TeltonikaProtocolDecoder to ensure correct device identification during decoding
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( ) . readFirstLine ( ) ` for
added null check for operator in visitAssignOp method and created a new Test class to ensure operator is initialized before use to prevent null pointer exceptions
added a boolean flag ` enableAccountHandling ` and modified account handling logic in ` BaseActivity ` to conditionally call ` mixinRegistry . on
fix ( isochrone ) : do n ' t throw exception if no maximum polygon be find
added a path parameter to the DrillViewTable constructor and updated related methods to enhance flexibility in view handling by allowing different view paths
updated the constructor of PooledByteBufAllocatorL to include additional allocator parameters to enhance flexibility and configuration options for netty memory allocation
updated ObjectInputStream to handle short arrays instead of double arrays to ensure correct cloning behavior for short arrays in serialization
added a configuration option for low - level IO thread pool size in HiveConf . java and updated executor initialization in LlapIoImpl . java
added conditional logic to rerun ` Debug ` and ` SSLLogger ` classes based on Java version to ensure compatibility with different debug and ssl logging
added a minimum range check for latitude and longitude in LatLonGrid . java and modified test cases in TestLatLonGrid . java to enhance
danielwagnerhall : add expectedconditions . invisibilityofelementwithtext ( ) and expectedconditions . refresh (
added a new boolean parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its access modifier to private to enhance functionality by
added a new interface ` SomeInnerClassReflector ` and its corresponding test in ` ReflectorTest . java ` to facilitate
updated configuration key from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources " to
updated messages in HubChangeExecListener to include author information to improve clarity of communication failure messages for better debugging
added properties field and related getter and setter methods to the Link class and created a test for property resolution in QuickLinksConfigurationModuleTest to enhance
removed @ EqualsAndHashCode annotations from InitialConfig and updated the toString method in YamlConfigFileDTO to enhance object string representation for better clarity in
updated generic type parameters in SimpleForwardingServerCall and SimpleForwardingClientCall from diamond operator to diamond operator to improve type safety
added CallerSensitiveAdapter annotations and modified method signatures in Class . java to improve caller class loader handling to enhance security by ensuring proper class loading is
replaced ` isEmptyOrNullString ` with ` isEmptyString ` and updated authentication token handling in ` RequestItemRepositoryIT . java ` to improve
replaced ` LinkedBlockingQueue ` with ` LinkedBlockingQueueEx ` in ` GroupExecutor . java ` to improve compatibility with extended thread pool
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
refactor time step definitions to use JUnit ' s ` @ Given ` and ` @ Then ` for better date handling to improve compatibility with
fix spark _ isolated , spark _ recessive , spark _ isolated , and spark _ recessive in the banners list . close
updated the ` RestInvocationHandler ` constructor to accept a ` String ` parameter for the ` url ` parameter instead of a ` ExchangeSpecification `
updated output message format in RecordGenerator . java to improve clarity of generated record output
camel - 20297 camel - kafka : remove auto commit from kafka consumer
added outputStatement ( sql ) to LoggingExecutor and set hasDatabaseChangeLogLockTable to true in StandardLockService to ensure proper handling of
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and added deprecation and serial warnings in AuthorizeTagCustomGrantedAuthorityTests . java to improve code
pdfbox - 4892 : remove unnecessary ' this ' keyword from synchronized block
polish springbootautoconfigurationmojo to make it easy to configure component and whatnot .
updated the ticker symbol from baseSymbol to counterSymbol in VirtExMarketDataService to ensure the correct ticker is used for trading
camel - 16400 : fix checkstyle violation in camel - core
replace UUID . randomUUID ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to ensure
[ hotfix ] [ core ] fix concurrency issue in defaultjobparametersconverter
updated package - info . java files in mmm and ppp packages to ensure consistency and clarity in package documentation
updated height map height scale setting from 256 to heightScale to allow dynamic adjustment of the height based on the provided scale value
updated equality check in SecurityConfig and modified assertion in SecurityConfigTests to ensure proper comparison of security attributes
( chore ) camel - stdout : default dump partition id to false
added unit tests for ` findUTXO ` method in ` UTXOSetTest . java ` to ensure proper mocking and verification
[ java ] fix false positive with unused variable name .
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a test for new job parameters overriding previous restart parameters in JsrJobOperatorTests to ensure correct handling of job parameters during job restarts
added a protected boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` in ` Database
removed redundant initialization of the principal variable in JaasAuthenticationHandler . java to streamline code by eliminating redundancy
refactor core closing to use an ExecutorService for better resource management to improve thread safety and responsiveness during core shutdown
added visibility control for actionsView based on fullscreen progress to improve user interface responsiveness based on fullscreen progress
refactor parameter handling in RunIdIncrementer to use a temporary variable to improve code readability and reduce redundancy
refactor BasicEntity and TestUtil classes to improve code readability and maintainability
added assertions to verify the correctness of the getMatchedDevices method in SchemaRegionBasicTest . java to ensure the correctness of device retrieval
fix ( metricseventbus ) : add try - catch for invoke metric event error ( # 10355 )
added a conditional check for ` max ` in ` EigenvectorCentrality . java ` and created a new class ` Eig
updated registry creation and lookup logic to use a dynamic port to improve flexibility and avoid port conflicts during registry lookups
fix a bug in generate geometry for ifc product that do n ' t support color
set the amplifier of the block entity to 0 in the BlockEntityBeacon class to improve the accuracy of the block entity ' s
updated TubeCalc class implementation to improve performance and accuracy of calculations
disable health check by default ( # 4591 )
add some sanity check to the defaultvalidator to ensure that only interface implement the group .
updated the @ key and @ run annotations in bug8057791 . java and added a timeout setting in bug8057791 .
added a daemon thread to the ScheduledExecutorService in StatisticsReporterComponentImpl to allow speedment applications to exit via main method completion fix # 322
simplified version parsing in ItemLexicon . java to improve code readability and maintainability
added a check for reflection access in the JavaAdapterFactory class to enhance security by ensuring type access is properly validated
enable lazy session creation for camel - mina and camel - jms test
updated the initialization of IO context in multiple classes to include a RecordReader parameter to enhance flexibility in handling different record readers during IO operations
deleted ClassLoaderHolder and LoaderManager classes , and modified VerticleManager to directly use the current ClassLoader to streamline the codebase by eliminating
fix jdk . internal . jrtfs . getjrtfilesystem ( ) and scanclasspath . getjrtfilesystem ( ) ( #
added error handling for session callback registration and unregistration in PackageInstallerCompatVL . java to ensure stability by preventing application crashes
removed the " src / test / org / apache / lucene / index / index . cfs " and " index . nocfs "
refactor AkkaRpcServiceUtils to use BiFunction for creating AkkaRpcService to improve flexibility in creating Akka
added a retry configuration for mapreduce ' s max attempts in TestExportSnapshot . java to improve reliability by limiting the number of attempts
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
added a new test class ` SslConnectionTest ` to verify SSL connection behavior to ensure that SSL connections are properly closed before the connection is closed
added validation for IPv4 and IPv6 address types in InetAddress and NetworkInterface classes to ensure that only valid IPv4 and IPv6 addresses are processed
added a test for date serialization in a collection in DefaultTypeAdaptersTest . java to ensure correct JSON representation of date objects in collections
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
nifi - 1561 : fix for npe in putdatabaserecord
corrected the loop condition in TableOutput . java to correctly account for the width difference between runningWidth and maxWidth
pdfbox - 4892 : remove null check , a suggest by valerybokov
formatstringchecker : use high priority for format string that contain { 0 }
[ java ] ignore non - final loop variable in localvariablecouldbefinal
updated PDFExporter to set PDF version and full compression settings , and modified test sample file to use Java . gexf to improve PDF
added unit tests for LdapUserDetailsMapper to validate role attribute mapping to ensure correct handling of role attributes in LDAP user mapping
add ldap read timeout configuration for ldap connection
refactor TestDescription classes to improve code organization to enhance maintainability and readability of the test suite
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and readability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` across multiple classes to improve clarity and consistency in naming conventions
added a condition to check if the state handler is invalidated during gesture state checks to ensure proper handling of gestures when the state handler is
updated the maximum distance calculation for folder creation in Workspace . java to improve the responsiveness of folder creation by adjusting distance and scrolling behavior
updated import statements and refactored property handling in OciConfigConfigSource . java to use ConfigProviderResolver instead of ConfigProvider to improve
refactor Testjsig class to improve code structure to enhance maintainability and readability of the code
refactor mana handling logic to include stack count in mana calculations to ensure mana values are accurately calculated based on the available stack
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
removed the serialVersionUID declaration from P11TlsPrfGenerator . java to suppress warnings related to serialization compatibility
refactor tsFile validation logic to improve clarity and efficiency to enhance code readability and ensure proper handling of file validation failures
added new methods ` switchPatternMatching ` , ` switchNull ` , and ` switchGuardPattern ` in ` Switch21 . java ` to
updated error message from " actual argument " to " test . MyTest . ComparableType " and " test . MyTest . RawComparable
added a new test class ` TestStreamHelper ` and modified ` StreamHelper ` to set XML standalone flag to improve XML handling and ensure standalone
updated capacity check and improved exception handling in Int2ObjectCache . java to ensure proper handling of maximum array size and enhance clarity of
updated security filter chains to order on bean definitions in WebSecurityConfiguration to ensure correct ordering of security filter chains during configuration
removed ` TimeInForce . GTC ` parameter from the ` OrderType ` constructor in ` BinanceTradeService . java ` to simplify
refactored FloatRangeRandomizer to extend AbstractRangeRandomizer and added validation for min and max values to improve code maintainability and ensure
updated KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to improve character
camel - 14263 : camel - jms - allow to configure component and component documentation via spring xml .
added error handling for the ` bound ` retrieval in ` SourceUtils ` and created a new test class ` TestGetBound ` to improve robust
refactor filter builder creation to use a helper method to improve code readability and maintainability by reducing duplication
modified the artifact name handling in BatchPropertyBeanPostProcessor and added setup and teardown methods in JobContextFactoryBeanTests and StepSynchronizationManager to ensure
http : / / issues . apache . org / jira / browse / amq - 3833 - use a loop to read all the
refactor boolean value retrieval from ` getDefaultBooleanValue ` to ` getDefault ` and add a new class ` DnsFallback ` for testing DNS fallback
ww - 4447 add more information to the error message when tag write fails
changed the ` success ` field from a boolean to a ` url ` field in ` DepositAddress ` class to accurately represent the
refactor the implementation of the Privilege interface to use a lambda expression to simplify the code and enhance readability while ensuring resource
removed " address " from the scope list in the OAuth2 provider to simplify the scope configuration by focusing only on the email address
refactor the submit mechanism in ManagedSelector to use a Start class instead of a lambda to improve readability and maintainability of the code
added BigDecimal constants for hue and saturation in WLedHandler and updated color calculations in WLedBinding to improve color representation accuracy and ensure accurate hue
followup on # 12410 : fix caller class check to use string literal to allow private / pkg - private
added a method ` caseJSRInst ` to the ` InstSwitch ` class to facilitate the handling of JSR instances in
added transaction management to the subscription activating subscriber to ensure that subscription operations are executed within a transaction context
refactor database update and insert logic to use StringBuilder for query construction to improve code readability and ensure proper handling of SQL execution errors
updated elevation handling in ContactItemInflater for improved visual appearance on devices running Lollipop or higher
renamed ` typeInformation ` to ` identifier ` for clarity and consistency to improve code readability and maintainability by using a more d
replace direct file operations with privileged actions in SandboxFileManager to enhance security by ensuring privileged actions are executed with appropriate privileges
refactor GroovyParserVisitor and GroovyPrinter to use a new syntax for handling array expressions to improve clarity and correctness in parsing and printing
updated warning message to include class name instead of exception message to improve clarity of error logging for better debugging
updated character reading and writing logic in RecordInputStream and UnicodeString classes , and added a test for UMLatReadWrite functionality in TestUnicode
added a test for downloading files with non - ASCII characters in the name to ensure that the download functionality correctly identifies and retrieves files containing non -
replaced RuntimeException with CancellationException and added cancellation methods to AsyncResource and FingerprintScannerSample classes to improve error handling and provide clearer feedback
fixed npe in timedmemberstatefactory when statistics be null
reformatted the @ Autowired annotations and added a new test method for removing an object from a explicit collection to improve code readability and
updated copyright year in several Java files to 2022 to reflect the current ownership of the file
[ beam - 8470 ] do n ' t use \ n for coder . tostring ( )
added functionality to manage and restore scroll behavior for the Clear All button in RecentsView and PagedView to improve user experience by ensuring
refactor parameter handling in HiveIcebergMetaHook to use a centralized COMMON _ HMS _ PROPERTIES map to improve code read
refactor error handling to use a dedicated method for checking if a throwable is an address already in use to improve code readability and maintainability
added a command - line argument to the argument list in TestNestmateAttr . java to specify the class path for testing to ensure
updated the verbosity level from verbose to verbose _ schema in Grep . java to improve clarity by using a more descriptive variable name
remove unused import and add @ override annotation
# 1749 - support nested nested transaction ( # 1748 )
change fetchSize from a fixed integer to a ThreadLocal < Integer > in QueryProcessExecutor . java to improve thread safety and reduce contention
removed backoff and shared idle strategies from EmbeddedPingPong . java to simplify idle strategy configuration for improved performance
refactor ` HttpClientIntroductionAdvice ` to use a new ` handleBlockingCall ` method for handling blocking calls to improve code
added logic to set and log the HDP version in SliderAppsViewControllerImpl . java to ensure the application uses the correct HDP
added private fields for loader and jusl , and modified close methods in JavacProcessingEnvironment . java to improve resource management by ensuring
added deep cloning functionality to ` ParameterizedRobolectricTestRunner ` and created ` DeepCloner ` class to facilitate
added a bind for the JETTY _ SHOW _ STACKTRACE property in ResourceBase . java to control stack trace visibility for debugging purposes
added type check for OBJECT in NativeObject . java to ensure proper handling of OBJECT types before proceeding
replaced multiple instances of ` sun . jvm . hotspot . types . OopField ` with a single ` OopField ` import
updated JwkKeyListView and JsonWebKeyEndpoint to use PublicKey instead of RSAPublicKey and added Base64 encoding for public keys to
do n ' t create progbits section when useonlywritablebootimageheap be enable
updated MBeanServerMXBeanUnsupportedTest . java to improve test coverage to enhance reliability of MBeanServerMXBean functionality
removed the import of OrderClassLoaders from MavenPluginCollector . java to streamline dependencies and improve code clarity
replaced the ` Validator ( ) ` method with ` validator ( ) ` and added ` getOwnerAddress ( ) ` method in multiple actuator
http : / / issues . apache . org / activemq / browse / amq - 2298 - add main ( ) method
updated the handling of min and max values in BinaryClient and ZRANGEBYSCORE commands to return " - inf " or " - inf "
add empty index to the dependency graph when serialize a protobuf annotation
[ java ] do n ' t remove the async command id when it ' s no longer necessary .
added methods to save and manage conflicts in FileDataStorageManager , FileDownloader , and FileUploader to ensure proper handling of file conflicts during
updated generic type parameters in multiple classes to improve type safety and code clarity
replaced instances of ` StrUtils . splitFileNames ` with ` splitFileNames ` in multiple filter factory classes to streamline file handling
added Oracle and MySQL driver properties for remarks reporting and use information schema to enhance database configuration flexibility for different database types
added a ` handler ` parameter to the ` MockMethodInterceptor ` initialization and updated the ` @ Ignore ` annotation in ` PartialMockingWith
replaced the use of ` new Date ( ) . getTime ( ) ` with ` System . currentTimeMillis ( ) ` for time tracking to improve
[ hotfix ] [ table - api - java ] wrap classloader for executioncontext
added a Runnable to run on the UI thread in TerminalView and modified buffer handling in TerminalTextViewOverlay to improve UI responsiveness and
modified the formatting and structure of the processConfigFile method in ConfigDispatcher . java to enhance code readability and maintainability
refactor freeze handling logic in OperationActions . java and remove disableFreezeOperation method from OperationRegistry . java to improve code clarity and
added support for secure SSL configuration in TlsConfig and TlsUtils to enable flexible trust manager creation based on configuration settings
refactor code to use a conditional expression for source path in JavadocTool . java and add a new class T7091528 . java
updated ` ExporterGDF ` to use ` edgeColumns ` instead of ` nodeColumns ` and modified ` defaultEdgeColumnsGDFs
added cascade = CascadeType . ALL to the @ OneToOne annotation in DefaultUserInfo . java to ensure that related entities are automatically removed when
updated the equals and hashCode methods in Message . java to use Arrays . compareTo instead of getMessageId ( ) to simplify equality checks and improve performance
updated the response body for the " X - ISO " header in AsyncProvidersBasicTest . java to include Unicode characters to ensure correct response formatting
[ hotfix ] [ rocksdb ] remove unused method in rocksdbserializablecompositekeybuilder
added a method to check static permissions in ProtectionDomain and updated SubjectDomainCombiner to use this method to enhance security checks by verifying
fix potential npe in recipe handler
refactor parsing logic in Parser . java to improve readability and maintainability to enhance code clarity and ensure proper handling of parsing indices
added a method to show a connection error dialog in UploadMediaDetailFragment and modified error handling in UploadMediaPresenter to improve user experience by providing
added a new file ` Issue596 . java ` and a test method ` shouldGet404onUnhandledRequests ` in ` Issue596
change bitwise operation from ` 1 < < < bitIndex > ` to ` 1L < < bitIndex > ` in NodeBitMap .
refactor import layout style handling in ImportLayoutStyle . java to improve code readability and maintainability
updated ConsoleUIService to handle input from stdin instead of Git Bash configuration to improve flexibility in console input handling based on environment settings
replace mocked AccountManagerCallback with TestAccountManagerCallback and updated assertions in ShadowAccountManagerTest . java to improve test clarity and ensure
do n ' t cache the enclosing type in analysistype . getenclosingtype ( ) , since it ' s only use once
rename method names from ` getProperties ` and ` getEntries ` to ` property0 ` , ` entries ` , ` concatSeparator ` , and
hbase - 25819 addendum remove timeout from putallcallable . set ( keyvalue , value )
[ rocketmq - 4695 ] fix npe when consumer be empty or not ( # 4695 )
[ java ] generate source identity when wait for a channel to be receive .
added a new file ` TopTabAction . java ` that implements the ` Presenter . Toolbar ` interface to provide a toolbar for displaying
camel - 14263 : fixed dynamic router eip to work in all _ match mode .
updated imports and class annotations in AggregateItemReaderTests . java to improve test structure and clarity to enhance readability and maintainability of test
added generic type parameter to the Procedure constructor in AbstractObjectValueTypeMap . java to improve type safety by specifying the generic type parameter explicitly
added functionality to retrieve and display the count of wikidata edits in AchievementsActivity and updated URLs in NetworkingModule and
added a check to ensure ` len ` is within ` Short . MAX _ VALUE ` to prevent potential ` IllegalArgumentException ` when ` len ` exceeds
do n ' t report uncovered value for long . min _ value in dumbmethods . java
refactor multiple dataset classes for improved organization to enhance maintainability and readability of the codebase
updated the exception message in ` ProvisionClusterRequest ` to include acceptable values for credential . type to improve clarity of error messages for better debugging
updated random number generation for vector elements in TestVectorUtil . java to ensure consistent randomness in vector initialization
change return type of compareBy method from int to long and simplify date comparison logic to improve performance and readability of date comparison logic
added SSL property handling in TestUtil and modified test assertions in PGPropertyTest to ensure SSL property is correctly set and validated in tests
danielwagnerhall : enable safebrowsing for exe and dmg file
added null check before cloning oldConfig in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding based on configuration settings
updated ` DataTable ` , ` TableDiffer ` , ` TableDifferTest ` , and ` TableDifferTest ` to handle empty
added a new constant ` CustomIgnoreTag ` and modified the iteration logic in ` RobustJavaMethodParser . java ` to conditionally remove
camel - 16400 : added optimisticlockingaggregationrepository . optimisticlockingerrorhandler support for jdbc aggregation
fix : allow @ configurationproperties ( ` ` parent ' ' ) for @ configproperties ( ` ` name ' ' )
refactor PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and update insets handling to improve compatibility with LimitlessIDEActivity and
deleted the ClusterNodeInfo . java file to the class is no longer needed for the project ' s functionality
removed unnecessary whitespace in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output for standard and legacy ciphersuites in ServerHandshaker . java to enhance debugging capabilities during the handshake process
updated template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle single and multiple templates appropriately to improve user experience by
added a HashMap to track nodeDraftImpl instances and modified the logging behavior to handle duplicate node labels to improve error handling and provide clearer logging
added a new file R2303044ListSelection . java that implements a list selection test to demonstrate the functionality of list
[ java ] use hasclienttimeout instead of checkkeepalivetimeout .
added a null check for mWorkspace in Launcher . java to avoid potential NullPointerExceptions when accessing mWorkspace
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to ensure the compound property is correctly registered
updated the row count calculation in StatsRulesProcFactory . java to ensure the correct number of rows is computed based on parent statistics
added logic to handle paths and query parameters in SpringBootDocBuildTemplate . java to improve API documentation clarity and ensure correct parameter values are
updated logger initialization in GuiActivator , NotificationManager , NotificationServiceImpl , and SystrayActivator classes to use the class directly
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and modified the ` createBuildEngineDelegate ` method to
improve error message when json parse fails
added a conditional check for DEBUG mode before logging the message in WidgetsModel . java to improve logging performance by avoiding unnecessary string formatting when
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the code
updated the calculation of numTerms in SimilarityBase . java and added a test for discount overlaps in TestSimilarityBase . java to
added checks for the " send " method in ` SimpleMailMessage ` , ` MimeMessage ` , and ` SimpleMailMessage ` classes to
added ` exit ` and ` quit ` properties to the ` Global ` class and removed the ` QUIT ` method from ` ScriptingFunctions
[ miss javadoc ] fix typo in loanbrokersharkdetectordemo
rename methods and variables from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method naming
server : fix npe in vmware web service when no cookie be find
swapped the order of authority assertions in the ResinAcegiAuthenticatorTests . java file to ensure correct verification of role assignments in the
updated ByteUtil method calls to specify a fixed byte length for BigInteger conversion to ensure consistent byte representation for cryptographic
use ` ` fml . modstates ' ' instead of ` ` fml . disabledmods ' '
refactor account selection logic in ReceiveExternalFilesActivity to use a dedicated method for displaying the account chooser dialog to improve code readability and
[ hotfix ] [ connectors / bamboo ] improve exception message when connect to the client
added error handling for unexpected empty simulation results in ValidatorContractController to improve robustness by throwing an exception for unexpected results
refactor JSON reading logic in TexturePackerFileProcessor to handle empty files gracefully to improve robustness by avoiding null pointer exceptions when reading
removed null check for datasource and jNDI in PooledConnection . java to simplify the code by eliminating unnecessary checks
increased TARGET _ MB and WINDOW from 10 , 000 , 000 to 1 , 000 , 000 , and introduced a sink object to
fix npe in editorconsole when no console be open
added a credential refresh delay of 100ms in KinesisConfigUtil to improve connection stability during Kinesis operations
refactor dialog creation into a separate method ` showInfoAlert ` to improve code readability and maintainability by reducing duplication
added a new parameter ` pack ` to the ` test ` method and modified its implementation to include a ` pack ` parameter to enhance functionality by
updated Jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and modified dependency
updated import statements in PluginBundleManager . java and added a method to check if a dependency is provided before adding it to the dependenciesToResolve
added a HashSet to manage ZipFileInputStream streams in the ZipFile class to ensure proper resource management and prevent memory leaks
rename the DATAMATRIX format to DATA _ MATRIX across multiple files to improve clarity and consistency in naming conventions
added conditional logic to run active or idle based on key ranges in SequenceGeneratorSource . java to improve handling of active and idle states in the
corrected a typo in the method name from ` getCurrentyActiveConnections ` to ` getCurrentActiveConnections ` to ensure consistency and accuracy in
replaced ` findAny ( ) ` method with ` findFirst ( ) ` in ` AnnotatedDelegate . java ` and ` SyntheticAnnotated .
added support for " ppc64 " and " ppc64le " architectures in Bits . java and ByteArrayAccess . java to
improve error message when activity resolution fails ( # 4736 )
replaced COMMIT _ TIMEOUT _ MINUTES with Long . MAX _ VALUE and ROLLBACK _ TIMEOUT _ MINUTES in waitWithDeadline
replaced instances of ` new Date ( ) ` and ` OffsetDateTime . now ( ) ` with ` Instant . ofInstant ( ) `
refactor BytesRef class for improved clarity to enhance maintainability and readability of the code
added a Toast message to indicate that YouTube Player does not work on Lollipop yet and waiting on an update from Google to
added parsing checks for unterminated SQL strings in Parser . java and corresponding test cases in StatementTest . java to ensure proper handling of various SQL
do n ' t trigger a vibration when there be no vibration available
updated table border and column colors in DotRenderer . java for improved visual representation to enhance visual clarity and consistency in the rendering process
added a method to check if a query string is encoded in HiveConf and updated SetProcessor to use this method to enhance configuration handling for encoded
pdfbox - 4892 : catch all possible indexoutofboundsexception in pdfparser
refactor X509Certificate class for improved readability to enhance maintainability and facilitate future updates
fix wavefrontconfig defaulturi implementation to work with proxy uri ( # 3903 )
replaced BitmapLruCache with NetworkedCacheableImageView and added image loading functionality to improve image loading efficiency and performance by utilizing
removed unnecessary parameters from LauncherAnimUtils . ofFloat method calls to simplify method signatures for better readability and maintainability
added a new ` gdxControllersVersion ` constant and updated related controller references in ` DependencyBank . java ` and ` BuildScriptHelper .
refactor LaunchedURLClassLoader to improve code readability to enhance maintainability and facilitate future updates
updated the query method in DataSourceHealthIndicator to use DataAccessUtils for handling result set columns to improve data access validation and ensure correct column count
add a no - cache header to the layout tag
updated the ` warnMsg ` format to include ` Locale . ENGLISH ` to ensure consistent message formatting for better readability across different locales
modified the constructor of SolrQueryParser to include an Analyzer parameter to improve flexibility in query parsing by allowing different analyzer implementations
updated copyright year in settings and PendantAction classes and added licensing information in PendantToolbar . java to reflect the
removed an extraneous semicolon in MainTest . java to clean up the code and improve readability
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to provide a default size for VoidColumnVector instances
[ iotdb - 6782 ] fix statementgenerator to use request . getname ( ) instead of template name
removed unnecessary type matching logic in AbstractConfig . java to streamline configuration handling by eliminating unnecessary method
[ java ] add sessiondecorator . offer ( ) method that accept correlationid and timestamp .
rename method ` trustAllXForwardedRemoteAddressResolver ` to ` trustAll ` and ` maxTrustedIndex ` in ` XForwardedRemoteAddress
only create bootstrap inserter if there be no bootstrap annotation
hbase - 25832 tabledescriptorchecker . getmaxfilesize ( ) and getmemstoreflushsize ( ) do n ' t return
replaced the variable ` maxCommits ` with ` requestedCommits ` in ` BranchGraphServlet . java ` to ensure the correct number of commits
added InvocationTargetException to the main method and modified the run method to use invokeAndWait instead of invokeLater to improve method responsiveness and ensure
added a new constant ` BUILD _ ID ` and refactored the ` fillInOriginFromCache ` method to use it to improve metadata handling
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to clean up the code and improve readability
updated the method call from ` markAsDone ( future , channel ) ` to ` markAsDone ( future , channel ) ` to ensure
added import for TezConfiguration and implemented copyInto method in TezConfigurationFactory to enhance configuration handling by integrating default settings
updated null check for keyPurposes in TimestampedSigner . java to ensure robustness by avoiding potential NullPointerExceptions
simplified the conditional check for visibility in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a forget method to the OpenALSound class and updated the stop method to check for null before stopping the most recent sound to avoid potential
report discontinuity only once in simplebaseplayer . invalidatestate ( )
added decimal formatting options for number axis units in NumberAxis . java to improve readability and usability of decimal places in the display
refactor TargetGraphAndBuildTargets usage to use factory methods instead of builder methods to improve code readability and reduce boilerplate code
removed the IndexFileNameFilter class and simplified the file acceptance logic in IndexFileDeleter . java to simplify the code by eliminating unnecessary
add fullboundingboxladders flag to allow ladder to be check against the entity ' s collision bounding box . close #
added a default compression level parameter to various methods in ApkBuilder , ApkBuilder , and SignedJarBuilder classes to allow customization of
added a test method to include static fields in the MirrorTest class to ensure that static fields are correctly included in the generated JAR file
added support for BYTES data type in multiple classes and replaced UNDEFINED _ FIELD _ SIZE with UNDEFINED _ METRIC _ SIZE across multiple files to enhance
updated message formatting in multiple error tests to include newline characters to improve readability of error messages for better debugging
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed unnecessary
added caching functionality and updated test cases in SpringDataJPAJoinFetchPaginationTest , SpringDataJPAJoinFetchPaginationConfiguration , and For
fix for ticket : 308 -- use locale prefix instead of hardcoded string
updated FormBody handling in SimpleHttp . java and added a test for nullPost with mock server and null post body in TestHttpPlugin .
added dispatcher configuration and shutdown logic for the OkHttpClient in ClientSideSlb and its test to ensure proper shutdown of the executor service and test
modified texture positioning logic in TextureRegion . java to differentiate between flipped and non - flipped textures to ensure correct rendering of textures
improve error message for unknown property in discovery service
changed contextPath from final to non - final and added a null check for contextPath to ensure contextPath defaults to " NA " when it is null
[ drools - 5270 ] remove resource from kie - container when re - initing .
added a B _ TREE _ MAP _ ROOT _ HEADER constant and validation in BTreeMap . java and SerializationHeader . java to ensure
added support for ` precompiledHeader ` in ` AbstractCxxSourceRuleFactory ` and updated related logic to ensure correct handling of precompiled
added a new ` AccWeakReference ` class and modified ` ImageWatched ` to utilize it for privileged actions to enhance security
made findNextIndex method private and modified the removal logic in OrderedSet to enhance encapsulation and improve code clarity
changed the assignment of isDirect from true to false in VertexBufferObject . java to correct the logic for determining direct state
fixed possible npe in audioeffecthelptextmap . get ( )
modified the return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from void to Vector2 to enable
pdfbox - 5764 : use buffer . limit ( ) instead of buffer . capacity ( ) in randomaccessreadbuffer
added a null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is not initialized
updated border spacing logic for folder and folder layouts in CellLayout and DeviceProfile classes to ensure consistent border spacing across different container types for folder and
refactor numeric value parsing to use a custom ValueNumeric class to improve code readability and maintainability by encapsulating numeric parsing logic
added a check to return _ deferred if the authentication is not deferred in FormAuthenticator . java to improve handling of deferred authentication scenarios
updated argument checks in StartArgs . java to use " -- add - to - start " instead of " -- module - start - ini "
added a default partition value to dynamic partition values in DynamicPartitionFileRecordWriterContainer . java to ensure proper handling of null values when appending dynamic
[ hotfix ] [ stream ] add null check in streamnode and streamgraph
updated return statements in DefaultArtifact . java to include classifier conditionally to improve clarity of conflict ID and artifact identification output
[ camel - 14263 ] add kafka consumer rebalance test with offset state repository
improve error message when annotation substitution can not be load
updated the GMAIL _ NOTIFICATIONS _ ENABLED constant to ENABLE _ GMAIL _ NOTIFICATIONS in JabberAccountRegistrationWizard
doc : generate sample code in the java microgenerator ( # 1392 )
updated LumberjackMultiThreadTest to use a dynamic concurrency level instead of a fixed value to improve test flexibility based on available processors
fix npe in glowplayer . getplayerdisplayname ( ) when player be in dead state
refactor Exchange class to improve code structure to enhance maintainability and readability of the code
api : add secretkey and apikey parameter to updateuser api doc
refactor code to use ` if ( type = MfaProviderType . GOOGLE _ AUTHENTICATOR ) ` instead of switch -
rename AbstractMetaDataExportMojo class for consistency to improve clarity and maintainability of the codebase
added error handling for SQLIntegrityConstraintViolationException when attempting to drop a table due to materialized views to ensure that users are aware of materialized
updated property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency with the naming convention
added a new class ` RoboExecutorService ` that extends ` org . robolectric . android . util . concurrent . RoboExecutorService
updated conditional check and added menu items for root groups in GroupTreeView . java to enhance group management functionality in the user interface
updated method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified condition check for path to improve cl
updated dynamic GC thread handling in TestDynamicNumberOfGCThreads . java to improve clarity and functionality to enhance test reliability by ensuring
replaced ` ImmutableFlavor ` with ` ImmutableSet < Flavor > ` in the ` getHostFlavorMap ` method and related calls to
updated SQL statement construction in CreateTable . java and CreateTableDeParser . java to use PlainSelect for parameter handling to improve SQL generation flex
refactor background setting in ChatViewerFragment to use a variable for clarity to improve readability and maintainability of the code
test : migrate ctiteratortest to junit 5 ( # 4527 )
added token clearing functionality in CharTokenizer , KeywordTokenizer , TokenStream , and StandardTokenizer classes to ensure proper token handling and prevent unintended
add a test case to demonstrate a bug in astinitializer .
updated StateMachineConfiguration and StateMachineFactoryConfiguration to use a more generic type and added configuration validation to ensure that the state machine is configured correctly
danielwagnerhall : do n ' t rely on locator that start with ` ` link = ' '
updated format settings for BigDecimal and Float types in StringConverter . java and adjusted corresponding tests in StringConverterTest . java to ensure correct formatting of
remove the check for managed aggregate in aggregatelifecyclelistener . getcurrentscope ( )
updated touchable insets handling in TaskbarDragLayerController to use REGION instead of CONTENT to improve user interaction by providing a more appropriate touch
added a condition to check for a specific ' ~ ' character in the FencedCodeBlockParser . java file to ensure proper handling of
added support for a configurable socket timeout in the connection factory to improve flexibility in handling socket read operations
added a sleep mechanism using Throwables in ElementAttributeTest . java to ensure proper handling of interrupted exceptions during execution
updated BufferedReader initialization to use UTF - 8 encoding to ensure proper handling of character encoding in the input stream
refactor List . java to improve code structure to enhance maintainability and readability of the code
added constructors to ` AsyncFileImpl ` that accept ` URI ` and ` Path ` as parameters to enhance flexibility in creating ` AsyncFile
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the classes are stable and can be accessed
fix npe in listtemplates command when no physical network be configure on the physical network
updated method names and logic to retry failed uploads instead of uploads to improve clarity and accuracy in handling upload retries
updated Java version constants and related methods in ConstantPoolTagTests . java to ensure compatibility with the latest Java version
improve error message for compiler . compile ( )
added a method to clear the client header map when it ' s no longer needed
replaced Vector with ArrayList for better performance and readability to improve performance and maintainability by using modern data structures
updated the DEFAULT _ GRID _ COLUMN value from 4.0 f to 3f to adjust the default grid layout for improved user experience
updated condition in CalcitePlanner to include a check for view creation to ensure proper handling of view creation when the query is not present
updated date pattern in TestHS2HttpServer . java and refactored assertion in TestHS2HttpServer . java to improve clarity
added a try - catch block around the method call to handle potential exceptions when retrieving the object to improve robustness by preventing application crashes
danielwagnerhall : use firefox instead of ie in the single test suite
replaced ` byteOffset + = = BYTE _ BLOCK _ SIZE ` with ` Math . addExact ` in ` ByteBlockPool . java
refactor InteractionValueEncoder to instance variables and modify string formatting to use Locale . ENGLISH to improve flexibility and ensure consistent formatting across different
[ java ] do n ' t swallow unexpected error in thread . stop ( )
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress serialization warnings for the class
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify code by removing unnecessary dependency on SourcePath
add ` ` save change ' ' and ` ` return to jabref ' ' prompt to save change
added authorization checks for response types and client ID in OAuth20DeviceCodeResponseTypeRequestValidator to enhance security by restricting access based on registered
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure proper buffer state before proceeding
updated table mapper job initialization to use Class < ? extends InputFormat > instead of TableInputFormat to enable flexibility in specifying input format for
removed redundant line of code in AbstractJRubyMojo . java to streamline code by eliminating unnecessary duplication
sulong : throw an exception if the evaluation have no language .
added deprecation warning for RESERVE and updated commit duration handling in ReplicationHandler . java to ensure compatibility with Solr 7.1 and enforce mut
hhh - 16663 - fix wrong cache name in sql entity processor ( # 2594 )
changed the return type of the generateECKeyPair method from long [ ] to Object [ ] and updated related method calls to improve type safety and
[ hotfix ] [ restarting ] add suspend ( throwable , statusoverride ) to restarting
changed the instantiation of ` mRotationTouchHelper ` from static to instance creation to improve flexibility by allowing multiple instances of ` RotationTouch
refactor filtering logic in UniFiControllerCache to use stream for port table and overrides to improve code readability and maintainability by
updated method signatures and variable names from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity
remove old offer from the offerbook list if the offer be already in the list
use constant . ssl _ protocol _ tlsv1 _ 3 instead of hardcoded string
updated MockitoMethodInvocationControl to handle Class instances and refactored SystemClassUserTest and SystemClassUserCases to use wildcard imports to
replaced instances of ` NotLoadedException ( DatabaseObject ) ` with ` PartialDatabaseObject ` in multiple files to improve exception handling by associ
removed import of DisplayUtils and set extra _ FILE to null in FileDisplayActivity to simplify code by eliminating unnecessary dependencies
added error handling and initialization logic for file renaming and compaction in StoreDirect and StoreWAL classes to improve robustness by ensuring resources are properly
added a runnable execution for screenshoting tasks in AbsSwipeUpHandler . java to improve UI responsiveness during task transitions
added functionality to hide command arguments in LiquibaseCommandLine and CommandArgumentDefinition classes to enhance user control over command argument visibility during execution
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test connects to the correct
use geoserverextensions . bean ( ) instead of geoserverdatadirectory . parsedsld ( ) to obtain the geos
added permission checks for launching activities in ` InstallShortcutReceiver . java ` and modified shortcut creation logic in ` Launcher . java ` to
added methods to manage tile IDs in TideMapLoader , TmxMapLoader , AnimatedTiledMapTile , and StaticTiled
refactor Manager class to improve code readability to enhance maintainability and facilitate future feature additions
updated JDBC connection to use version = V _ 0 _ 13 in JDBCExample . java and refactored Session . Builder in SessionExample .
added properties for schemas and includeSchema in LiquibaseGenerateChangeLogMojo . java and updated diff output control logic to improve schema
replaced ` putIfAbsent ` with ` put ` for registry caching in ` JmxRegistry . java ` to improve cache management efficiency by using a
log singlebenchmarkerrunnerexception instead of just error
removed the final modifier from the doPutRecord method in AbstractCacheRecordStore . java to allow method overriding in subclasses
fix ( tool ) : fix file path for folder with space
added tests for handling large response content with different delays in FastCGIProxyServletTest to improve test coverage for different client scenarios and ensure
added a call to start the ReadInteractionsService in MarkReadService . java to enable the service to read interactions directly from the application
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are logged only when the
added configuration to set the SMTP port to default to 25 if the server port is not explicitly set to improve flexibility in configuring the SMTP
added retry mechanism for SSL factory reloading and reloading in TlsUtils . java to improve reliability of SSL factory reloading and enhance
updated DateFormat to include seconds in the string format to allow for additional time representation in date formatting
updated the assertion message in SpyingOnRealObjectsTest to clarify that the test is due to Mockito ' s private class visibility
added functionality to handle line endings on a new line in InlineBoxing . java and LineBox . java to ensure proper line endings
updated the construction of filePathString to handle potential null values to improve robustness by avoiding potential NullPointerExceptions
removed unused import of DocCollection in TopicStream . java to clean up the code and improve readability
refactor NinjaServletContextTest to use createHttpServletRequestInputStream for input stream creation and add a new test for handling Windows 1250 multipart
updated properties in AbstractCasEndpointTests to include a specific property to enhance configuration flexibility for web endpoints
added a check to ensure the current graph is a dynamic graph to prevent illegal argument exceptions during execution
add default value to @ scope ( ` ` method ' ' ) . fix # 868 ( # 869 )
added support for suppressing exceptions in JSON path expressions to enhance flexibility in handling exceptions during JSON path operations
removed redundant call to ` ControllerLeaderLocator . create ( _ helixManager ) ` in ` HelixServerStarter . java ` to
updated command - line instructions for CLHSDB and HSDB from " [ ] " to " - help " to clarify the
refactor FaultTolerantStepFactoryBean and SimpleStepFactoryBean to improve fault tolerance configuration to enhance clarity and maintainability of the
[ beam - 8470 ] remove deprecate write class and fix import
refactor ShadowAccessibilityManagerTest to use a single AccessibilityManager instance instead of multiple calls to getAccessibilityManager ( ) to improve code
add a group display id to analytics ( # 5370 )
removed ` SourcePathResolver ` from ` JavaSourceJar ` and updated class inheritance from ` AbstractBuildRuleWithResolver ` to ` AbstractBuild
refactored enum data type handling in PostgreSQLDatabaseConnector and created a new helper class for enumerated column values to improve code clarity and
updated log path in LogFileTests to use File . separatorChar to ensure compatibility across different operating systems
replaced instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to align with the new
added support for dropping index tables in HiveMetaStoreClient to ensure proper error handling when attempting to drop non - existent index tables
added a condition to update disabled flags based on visibility in RecentsView to ensure scrolling is disabled when the view is not visible
added a specific highlighter for syntax highlighting in non - Windows environments to ensure compatibility with specific syntax highlighting across different operating systems
use hrs _ request _ parameter _ to _ cooky instead of xss _ request _ parameter _ to _ cooky for cross -
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
removed redundant line of code in SelectBox . java to improve code readability and maintainability
changed the value of ` _ metaDataComplete ` from ` true ` to ` false ` in ` MetaData . java ` to ensure that the metadata
refactor ` removeTaskTarget ` method to use ` THREAD _ POOL _ EXECUTOR ` in ` RecentsAnimationController
added environment variable handling for release flavor in JsBundleGenrule to enhance environment variable management for better build configuration
updated type casting logic in ` Lower . java ` and added a new class ` T6500701 . java ` to improve type handling
added tests to ensure new line characters are correctly added in comments and Javadoc to improve code readability by ensuring consistent line endings
added hubMode property to AbstractLiquibaseChangeLogMojo and defined it in AbstractLiquibaseMojo to enable dynamic
removed redundant assignment of skipPolicy in JsrFaultTolerantStepBuilder . java and simplified null check in JsrChunkProcessor . java
added a check for the existence of the linkDb before adding it to the input path in IndexerMapReduce . java to ensure that the
replaced reflection for setting the indexer thread pool with direct reflection to access the method to simplify the code and improve readability
removed the port number from the address string in GameCanvasImplementation . java to simplify the code and improve readability
refactor MapJobExecutionDao to use serialization for JobExecution objects to ensure consistent serialization behavior for job executions
added a new file ` DownloadTest . java ` to implement a download functionality for textures to facilitate the verification of texture uploads
updated language normalization in multiple classes to ensure consistent language handling across the application
hive - 14799 : add support for ROUND function in genericudf ( krisztian kasa , review by
add null check for selectedVersion in ManageDependencies . java to avoid potential NullPointerException when selectedVersion is null
added multiple request matchers for various security endpoints in SecurityConfig . java to enhance security by allowing more flexible request handling
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
fix ( core ) : do n ' t create a new instance of java . lang . object in the same package a java . lang .
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to known issues
changed ` SUPPORTED _ THING _ TYPES ` and ` SUPPORTED _ THING _ TYPES ` from ` final static ` to ` static
http : / / issues . apache . org / activemq / browse / amq - 2806 - remove unnecessary check for socket
deleted the SunToolkitSubclass . java file to the class was deemed unnecessary for the current codebase
updated translation handling in DefaultRenderableSorter and added a method to check for rotation or scaling in Matrix4 to improve rendering accuracy by correctly applying
added a test for registering wrapper handlers in TypeHandlerRegistryTest to address issue # 165 and ensure correct type handler registration to address issue #
added a method to convert alternate color space to RGB images in PDSeparation . java to improve image processing for alternate color space representation
updated URLs in CommonsApplication to use BuildConfig instead of hardcoded values to improve maintainability and flexibility of the codebase by centralizing
camel - 17000 : camel - main - http - health - add health test base on user forum issue
fix an npe in the thorn chakram when it ' s unloaded
added a test for altering tables with indexes extend primary keys in the AlterTableWithViewsIT class to ensure correct handling of primary key
updated offset initialization in FileFloatSource . java and added conditional assertions in TestFunctionQuery . java to improve code clarity and ensure correct document
remove DrillMongoConstants . ID from the fields collection in MongoRecordReader to ensure that the ID field is no longer included in the data
added disconnection methods to YeelightHandlerBase and DeviceBase , and enhanced connection handling in WifiConnection to improve resource management and
added support for " AUTO _ INCREMENT " in the parser and created a table with primary key constraints to ensure proper handling of auto - increment
fix sharedinformerfactory to keep track of exist sharedindexinformer ( # 4569 )
server : fix npe in listtemplates api when listtemplates api return incorrect result
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage instead of Point imageSizeFromStream to improve code clarity
removed deprecated constants related to shortcut , uri , and display mode in LauncherProvider . java and removed unused constants from LauncherSettings . java
resolve split - packages : move everything from drools - examples into drools - examples
added legendTop and legendBottom variables and updated offset calculations in PieChart . java to improve legend positioning and ensure proper height calculations
added a check to return early if worldTransform ' s det is zero to improve performance by avoiding unnecessary processing when the world transformation is not
added a new file ` MaryScriptCreator . java ` to generate script files from input and output to facilitate the creation of
nifi - 2591 : add remote host attribute to listenhttprequest .
added a close method to the CompactionLogger and deleted the log file if it exists to ensure proper resource management and prevent potential memory leaks
updated URL attribute from " xlink : href " to " href " in ComponentDescription . java to ensure compatibility with standard URL formatting
camel - 15836 - camel - aws2 - s3 : use a configurable executor for the timeout checker
hbase - 25815 log regionserver state when cluster be shut down
added null check for span before logging in Slf4jSpanLogger and updated warning messages in DefaultTracer to enhance code robustness by prevent
trim whitespace from the active option added to the configuration to ensure clean input before adding new options
added preference handling for wallpaper depth effect in DepthController to allow dynamic adjustment of wallpaper depth based on user preferences
updated the assertion in OverseerTest to check the success count of the overseer to ensure accurate verification of the success count in the
replaced the method ` getKernelVersion ( ) ` with a direct return value of ` true ` in ` LinuxFileStore . java `
refactor ExecConstants to improve code readability to enhance maintainability and facilitate future development
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for the test case
added a method to set the scan attribute for paging in ScanUtil and updated TableSnapshotResultIterator to use this method to enable paging functionality for
added a range check for lowRange in Request . java and RequestV2 . java to ensure lowRange is only set to a valid range
changed access modifiers of keySizeEstimator and valueSizeEstimator to protected and updated cache size calculation in AsyncWriteCache to allow subclasses to access these
cloudstack - 3396 : fix zoneid in listhosts api response ( # 2296 )
[ zeppelin - 1341 ] use utf - 8 encode for livy interpreter
updated the remove method to include zfs as a parameter to simplify the removal process by directly using the zfs reference
changed the type of the ` obj ` variable from ` Object ` to ` String ` and updated related methods in ` HttpRequestBuilder ` to improve
increased the timeout duration for the monitor ' s hard . poll method from 2 milliseconds to 5 milliseconds to allow more time for the monitor
fix ( logger ) : do not swallow runtimeexceptions when call listener . beforeevent and listener . afterevent
refactor multiple dial - related classes to improve code organization to enhance maintainability and readability of the dial - related components
updated logging statements in SyncQueue . java for consistency and clarity to improve code readability and maintainability
updated the version of the RyukContainer class from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest
updated boot class loader hook methods and added a new TestHook class for testing to enhance bootstrap path functionality and improve testing coverage for boot class loader
do n ' t try to find the patchy jar if it do n ' t exist
[ hotfix ] [ yarn ] remove yarnclient from yarnitcase
update localmapstatsprovider to include map with no data
deleted the AllTests . java file to the test suite is no longer needed for the current testing framework
added support for non - breaking hyphens and zero - width space character in AbstractWordConverter to enhance text formatting for non - breaking characters
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory behavior on large stack invocations to ensure
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( nestedResultMap ) ` in ` NestedResultSetHandler
added an eventHandled flag to UIText . java to indicate when the UIText event is handled
deleted the ` Controller . java ` file and renamed the ` Weldby ` class to ` WeldModule . java ` to remove unused
ruby flavor : do not capture group in empty check
added a protected variable ` liquibaseProLicenseKey ` and modified its initialization in ` AbstractLiquibaseMojo . java
mondrian : rename setmemberreader ( ) to setMeasureshierarchymemberreader ( )
add - g option to generate debug info
mondrian : fix typo in mondrianproperties javadoc .
added support for absolute friend paths in Kotlin compiler and library configurations to enhance the build process by allowing users to specify their own friend paths
added aliases for scripts and aliases in Character . java and modified the main method in CheckScript . java to enhance functionality to support additional scripts and
updated equality check in ExecutionCommand and added a stringToExecutionCommand method in StageUtils to improve object comparison and facilitate JSON parsing for
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to SystemScope class to provide a readable string representation of the object for easier debugging
added validation for CSS percentage and number types in CSSParser . java to ensure that the cmyk ( ) function is within valid range and
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` and updated assertions in ` LocalIndexIT . java ` to
replaced ` InstrumentationRegistry ` with ` ApplicationProvider ` and updated test methods to use ` assertEquals ` instead of ` assertTrue `
updated toast messages in ItemListActivity , LiveTvGuideActivity , MediaManager , and LiveTvGuideActivity to use localized string resources
simplified conditionals in RendererUtilities and updated test cases for better readability to improve code clarity and correctness in item filtering logic
replaced iterators for ask and bid with array nodes in KrakenStreamingAdapters . java to improve clarity and functionality to handle array nodes
added a try - catch block around the database column addition in FileContentProvider . java to handle potential SQLite exceptions during the migration process
removed system . err . println statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added hash table load factor and refactored data size calculations in ConvertJoinMapJoin . java to improve performance by calculating online data size based
updated ` buildView ` method to accept ` Context ` as a parameter and set background resources for ` defaultView ` , ` defaultView `
added a ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to
vpc : set vpcid to null for gatewaynet when it be remove from network
[ flink - 10955 ] [ test ] disable flink savepoint test on jdk 1.11
changed access modifiers of multiple fields from private to public to improve encapsulation and adherence to Java ' s annotation conventions
removed the variable ` n ` from the loop and added a condition to check if ` i ` is within the bounds of ` actions . size
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to improve compatibility with the Bitmex framework
[ ds - 3952 ] add test for virtual relationship metadata
add null check for spatial before processing to prevent potential NullPointerExceptions when spatial is null
updated conditional token filtering logic and added new filter classes to enhance token filtering capabilities and improve test coverage
add stateafter to unsafestorenode and storefieldnode to ensure that the node have the correct state after the node .
replace ` super . putAddress ( base + offset , value ) ` with ` io . putAddress ( base , value ) ` in `
added an assertion to verify that the casEventRepository ' s load method does not return an empty list to ensure that the event repository correctly handles
removed unused ` attributeTemplateName ` , ` attributeLine ` , and ` attributeCol ` from ` AuthenticationAttrProcessor . java ` to streamline
added null key validation in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that a specified key cannot be null to
added a method to set the typeface in CodenameOneTextPaint to enforce runtime constraints to prevent runtime exceptions when typeface is not
added open method implementations for Azure , LocalPinotFS , and HadoopPinotFS classes to provide a standardized way to open input streams
danielwagnerhall : remove deprecate method from seleniumrunner
simplified the conditional check for item size in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to simplify object creation and manage constructor mappings more efficiently to improve code readability and maintainability by eliminating
updated SQL generation test to include quotes around the column name in the generated SQL string to ensure compatibility with SQL standards and improve readability
added a filter mode check and modified return logic in VectorizationContext . java to improve handling of filter expressions based on the result type
fix type inference error in exhaustivesearchphaseconfig
replace ` ReorganizeTableStatement ` with ` modifyDataTypeStatement ` in ` ModifyDataTypeChange . java ` to streamline the code by
updated cluster name handling to use a constant from the Apache IoTDB configuration to improve code readability and maintainability by centralizing configuration management
added logging for connection failures and improved exception handling in PeerGroup and ClientConnectionManager to enhance debugging capabilities and provide clearer insights into
added conditional style processing for various styles in Nano . java to ensure correct styling based on user - defined styles
use adventure nbt converter in datafixer . fixup ( )
updated the return message in NoToStringOnStringType . java from " Use ` String ` " to " No # toString ( ) on String
updated the memory allocation from " - Xmx64m " to " - Xmx32m " in TestThreadFailure . java to optimize
improve retryanalyzer for dataprovider . getverdic ( ) . retry ( ) .
updated token retrieval to use bandwidth instead of the first token to improve accuracy of token retrieval based on bandwidth
danielwagnerhall : implement selectpopup ( ) , deselectpopup ( ) , and capturenetworktraffic (
refactor doPrintEntry method to remove the boolean parameter and simplify its implementation to enhance code readability and maintainability by reducing complexity
removed unnecessary whitespace in TaskAsyncCallTest . java to improve code readability and maintain consistency
added checks for dialog opacity , shape , and background color in both Dialog and Frame classes to ensure proper state management and prevent illegal component state exceptions
changed the ` state ` field from non - final to final in ` DefaultProjectFilesystem ` to ensure immutability of the ` state `
refactor Redis connection configuration to use Redis standalone and password if available to improve clarity and functionality of Redis connection management
improve handling of delayed message in jabber chat room .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ` method calls to simplify
replaced CreateShareOperation and GetShareOperation with OperationsService for sharing operations to improve code organization and facilitate sharing operations within the
removed the unnecessary check for isInjected in BeanDefinitionInjectProcessor . java and added dependency injection in FieldPropertyInject . java to simplify the logic
updated loop conditions to use a variable ` yStart ` instead of calling ` getMinBuildHeight ( ) ` directly to improve code readability and
make smackintegrationtestframework more resilient to nullpointerexception
tmi - tiff : add support for interop subdir to read exif with interop subdir
added support for the ENABLED _ LS mode in VersionTargetGraphMode and modified DefaultDepsAwareExecutor assignment in VersionedTargetGraphCache to improve dependency
added a check for video format in DLNAResource . java to ensure only valid media formats are processed
chore : integrate new gapic - generator - java and rules _ gapic ( # 135 )
added a load method to LwjglNativesLoader and modified load logic in LwjglApplet and LwjglN
updated CSVRequestHandler to support an escape parameter and modified encapsulator handling to enhance CSV processing flexibility and improve error handling for invalid encapsulator inputs
updated error handling for unsupported authorization grant types in ClientRegistrations to ensure only AuthorizationCode grant types are accepted to provide clearer feedback for users
improve error message when try to overwrite a self - suppression cause
added SQL query and assertions in DerivedTableIT . java and modified OrderedResultIterator initialization in ClientAggregatePlan . java to improve test coverage
added a mapping for the RSquare value in RegressionEvaluator and tested its value in StreamExpressionTest to ensure the RSquare value is
added handling for request header names in ThreadContextMDCServletFilter to ensure all relevant request headers are included in the context
refactor SparkPlanGenerator to use a local variable for MapWork instead of casting it to a specific class to improve code readability and reduce
refactor image retrieval logic in PdfJndiReport and PdfSessionInformationsReport classes to improve performance by caching images for each country to improve
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer resolution in JwtIssuerAuthenticationManagerResolverTests to
updated the condition from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for database
sulong : do n ' t cache interop function if the function be not implement by the compiler .
removed a redundant sleep statement in AbstractBasicMockingIntegrationTest . java to improve test stability by eliminating unnecessary delays
added a new file KernCrash . java that implements a custom font rendering with Kerning functionality to demonstrate and d
added a call to fail ( ) in LinkedHashTreeMapTest . java to ensure that the test fails gracefully during execution
added a new method ` getInterfaceAddresses ` in ` NetUtil ` to retrieve interface IP addresses based on the ` addPrefix ` parameter to
properly clean up the housekeeper task after shutdown to prevent resource leak
updated the method call from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java ` to
refactor assertions in the Assert . java file to improve code readability and maintainability
added a new test class ` Issue247Test ` for testing the ` TreeMap ` functionality to ensure correctness of the ` TreeMap
changed the type of the results set from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doIn
added logic to check if the user ' s date is in the " today " and " birth " year before validating field age to ensure that
added error handling for alarm and error responses in GrblController to improve user feedback by displaying relevant error messages
updated the return statement in Workspace . java to include a label for home button when no screens are available to improve user interface by providing
removed the count parameter from the getTrades method in BittrexTrades and BittrexMarketDataServiceRaw to simplify the
replaced the ` stripAnsi ` method with ` stripAnsi ` in ` ConsoleReader . java ` and modified the loop conditions in
updated the file path construction for jdkPath in JavaBuild . java to simplify the path for better readability and maintainability
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` input . getType ( ) ` across multiple files to simplify
added a logger parameter to the JFCModel constructor and updated related methods to log warnings to enhance logging capabilities for better error tracking and debugging
added a validation check for tolerance in MaximumInscribedCircle . java to ensure that tolerance is positive to prevent runtime errors
added methods for creating and dropping views in TestUtil and created a test for view privileges in DatabaseMetaDataTest to improve database interaction and ensure
updated NaNTest . java to conditionally expect stable floating - point and double tests based on platform - dependent settings to improve test reliability
added a new class DesktopTaskbarUIController to manage hotseat icon alpha settings for the taskbar to enhance user experience by providing
add task count listener to mod item adapter and fix npe
refactor methods in mmm and ppp files to improve code readability and maintainability
refactor interceptor handling in AnnotationGrpcServiceDiscoverer and update GrpcServerAutoConfiguration to use a collection instead of a set to improve
updated the ` DomainAwareServicesManager ` and ` ChainingServicesManager ` classes to extend ` ServicesManager ` instead of ` ServicesManager `
add log to resourcepackloader to debug mod file generation
chore : update gapic - generator - java version to 2.1 . 0 ( # 602 )
added methods to set expandX , expandY , and fillY in the Cell class to enhance the flexibility and usability of the Cell
replaced StringTokenizer with a generic Map < KeyStroke , ActionListener > in DefaultInputHandler . java to simplify key binding management and improve code read
resolve http : / / issues . apache . org / activemq / browse / amq - 2276 - do n ' t
replaced long [ ] [ ] arrays with byte [ ] arrays and added memory failure count check in MetricsMemoryTester . java to improve
deleted the JobParametersPrototype . java file as it was no longer needed for the project ' s functionality
added a securityEnabled flag to the MappingsTable class and updated related methods to enable conditional processing based on security settings to enhance security configuration flex
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable dumping to the
do n ' t use eos propagation workaround for alfts on amazon
[ java ] do n ' t update publisher limit if there be no spy position .
added a condition to check for output options when dbInfo is null to ensure proper handling of output options when no info is provided
disable ssl by default for http and https
added DOMOutputOptions to the buildDOMSubtree method to enable XHTML error handling for XHTML output
refactor assertions in the Assert . java file to improve code readability and maintainability
added retained option to the event and session classes to allow for better management of message retention in the application
added " testCaseName " field to event serialization in TestResultSummary . java and EventSerializationTest . java to improve test clarity by
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] fix table - planner - blink to
updated import statement for Parsed in LatexToUnicodeAdapter . java to ensure compatibility with the latest FastParse library version
use read - write lock in abstractsessioncontext . setssionidcontext ( )
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` for better readability to improve code clarity and maintainability
[ hotfix ] [ table - planner - blink ] rename calcitesqldialect to ansisqldialect
changed log level from debug to trace in FirmwareUpdateService . java to reduce log verbosity for non - critical messages
added unit tests for handling NULL date and timestamp in DateTest . java to ensure correct functionality of date and timestamp retrieval methods
refactor string concatenation logic in ` StringSubject ` and ` Subject ` classes to improve readability and maintainability of the code
added a test for repository permissions in UserModelTest . java to ensure correct handling of repository permissions across multiple teams
added a new file Test7088020 . java implementing MethodHandle tests for method type mismatches to ensure proper exception handling for method type
replaced the method ` matchAudienceRestriction ` with a ` Set < String > ` for audience URI matching to improve clarity and efficiency in
refactor cache refresh methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener for improved readability and maintainability to streamline
modified the behavior of the ` _ stderr ` variable and its usage in ` StdErrLog . java ` to handle null values more gracefully to
added a new warning constant ` SEPARATION _ ORDER ` in ` Warning . java ` and updated ` BasicEventSimulationEngine . java `
updated the query optimization parameter from offlineTableConfig to realtimeTableConfig to ensure the query optimizer uses the correct realtime table configuration
updated the SQL statement in PhoenixHBaseAccessor . java to include split points and added conditional logging in UpgradeCatalog240 . java
rename SavepointV2 and FileStateHandle classes to improve clarity and consistency in naming conventions
added Bluetooth functionality to ShadowBluetoothDevice and corresponding tests in ShadowBluetoothDeviceTest to enable testing of BluetoothClass functionality in the
fix checkstyle issue in entity / objects / glowplayer / uuidlistfile . java ( # 778 )
( chore ) camel - feel : fix null and empty check in sum function
removed graph model reference from readUnlockAll method call to simplify code for improved readability
updated coreNodeName construction in ZkStateReader . java to use getCoreName ( ) instead of getNodeName ( ) and coreName to ensure the
add updatebackpressure support to chatactivity
updated test cases in TaggerParserPosTagCompatibilityITest . java to enhance compatibility testing for tag parsing functionality
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
modified the condition in ` mmm Types . java ` and added a new class ` ppp T7005671 . java ` with multiple
updated superTriangle calculations in DelaunayTriangulator and changed the test class name from EarClippingTriangulatorTest to
added @ Override annotation to multiple Java classes to ensure proper method overriding and enhance code clarity
refactor JWTClaimsSet initialization to use a builder pattern to improve code readability and maintainability
refactor state management in StackOverflowCheckImpl to use variables for state values to improve code readability and maintainability by reducing repetitive
added shadow methods for SQLiteDatabase , ContentValues , and ShadowSQLiteDatabase while removing deprecated methods from ShadowContentValues and ShadowSQLiteDatabase
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced ` bytesPerDim ` with ` ArrayUtil . ByteArrayComparator ` and updated comparison logic to use ` ArrayUtil . getUnsignedComparator ` to improve
updated locale handling to include script and locale category properties to enhance locale management by allowing dynamic retrieval of user scripts and locales
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct alpha value is returned for the last set
corrected the spelling of " Confimap " to " ConfigMap " in the warning log message to improve clarity and accuracy of warning messages
replaced specific test class imports with a call to ` UaaJunitSuiteRunner . allSuiteClasses ( ) ` in ` DefaultConfiguration
added trimming of whitespace before adding mimeTypes , excluded agents , and excluded paths in GzipFilter . java and updated initialization parameters in GzipFilterDefault
updated the assignment of _ outputType in Response . java to ensure consistency in code formatting
updated the regex implementation property from JDK to JONI to ensure compatibility with the latest regex implementation requirements
replaced LooperExecutor with Executor and updated asynchronous task handling in ViewCapture . java to improve task execution efficiency and maintainability of the code
fix for ticket : 284 : allow voice style to be query
added a check to ensure the parent folder exists before creating it in GitBlit . java to prevent runtime errors when attempting to create a folder
updated the fallback IP address from " 0.0 . 0.0 " to " 127.0 . 0.1 " to provide a
camel - 16400 : fix typo in workitem handler name
pdfbox - 4892 : make class final and remove unused import
replaced ` WorkModeToggleContainer ` with ` WorkFooterContainer ` across multiple files to improve clarity and consistency in naming conventions
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
refactor : fix a bug in defaultjavaprettyprinter
[ hotfix ] [ runtime ] fix memory leak in operatorcontext
updated error message formatting in QueryByExamplePredicateBuilder . java and modified replacement logic in StringQuery . java to improve clarity of error messages
updated evictionCounter handling and modified statistics management in ConcurrentLRUCache and FastLRUCache classes to improve thread safety and maintainability of cache
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` in ` DefaultTaskExecutor . java ` to
updated the condition to check if the intended destination is an Inet4Address instead of using the local host to improve clarity and accuracy of the
set the database and source root in the runtime environment for the main frame
added methods to ` MarkedClientEnabled ` and ` MarkedServerEnabled ` to log the enabled mode of Solon Admin client and
[ hotfix ] [ table - common ] fix checkstyle violation in tableenvironment
replaced the setStatementTimeout method with a direct timeout setting in MapperBuilderAssistant . java and adjusted fetchSize in ExecutorTestHelper .
[ jsweet 2 catch - up http : / / bugs . eclipse . org / bugs / show _ bug . cgi ? id
added serialization classes for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization support for GeoLocationRequest and Geo
replaced instances of ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` and updated related assertions in ` ArtifactFilesystem ` and ` ArtifactFilesystem
tika - 2631 -- improve error handling for non - HPSF document in SummaryExtractor . java and add a unit test for
make sure script do not trigger concurrent modification when set show = false
fix ( nio ) : wait for data to be available before close the connection .
added failure messages in ` GuavaOptionalSubject ` for equality checks of ` actual ` and ` expected ` to improve clarity and debugging when
updated visibility checks in BackgroundAppState and modified mid progress and alpha calculations in ShelfScrimView to improve UI responsiveness and
added a null check for the navigation variable in MatDefEditorlElement . java to prevent potential NullPointerExceptions during execution
ggb - 1882 fix problem with midpoint on mac
refactor ErrorOccuredInOnExceptionRoute class for improved error handling to enhance clarity and maintainability of exception management logic
( chore ) astro - discovery : use fixed delay instead of fixed interval
simplify the increment logic in SinglePassAndImageBasedLightingLogic . java by removing unnecessary conditional check to improve code clarity and
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang due to
updated import statements in GuiceFactoryTest . java to use specific classes instead of a wildcard import to improve code clarity and maintainability by
added system feature management methods to RobolectricPackageManager to enhance functionality for checking and setting system features
added a POSTFIX constant and refactored property handling in RCAFrameworkLoader . java , and created a corresponding test class RCAFramework
removed logging of the cancellation watch message to clean up the log output for better readability
added a check to reset enumerationValues if it is null or empty to prevent potential null pointer exceptions when enumerationValues is empty
fix a bug in the inlining code that could cause a nullpointerexception when a layer have a pending element .
added a new method ` collectAndSendTelemetryDataAsynch ` and modified ` collectAndSendTelemetryData ` to include a remote
removed conditional alteration of the UPGRADE _ ITEM _ TEXT column type in UpgradeCatalog260 . java to simplify the column type change
updated error messages for creating index and temp resources directories to provide clearer guidance to check available space and write - permissions for the directory to
refactor DatasetUtilities to improve code readability to enhance maintainability and facilitate future feature additions
added a line to append the selection ID to the key in the Matcher class to improve the readability of the key representation for better debugging
updated debug log statement formatting and corrected syntax in GouraudShadingContext . java to improve code readability and maintain consistent formatting
updated alpha channel constants and added taskbar visibility management to enhance user experience by managing taskbar visibility during dreaming and waking states
removed unnecessary whitespace in KeyExchange . java to improve code readability and maintain consistency
modified CockroachDatabase to check if the connection is an instance of JdbcConnection before executing the query to ensure proper handling of JdbcConnection
updated the logic for identifying log files in ServerMainTest . java to handle cases where the log file does not contain a specific character to ensure
added methods to retrieve the media recordering MIME type in CodenameOneImplementation , MediaManager , Display , and ImageIO classes to improve
make useshaders ( ) public and remove reference to confighandler . useshaders ( )
added a logical OR clause to the BindableFilter condition and updated the return value in DruidAdapterIT . java to ensure that the filter
updated ZkStateReader initialization in CloudSolrServer . java to ensure correct timeout handling for Zookeeper connections
updated XML parsing logic in XMPMetaParser . java to improve code readability and enhance security features for XML processing
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client ` package to provide
replaced a conditional check with a while loop for checking the presence of " < script > " in the result to improve code readability and
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated its logic for varargs access checks to
replaced calls to ` getTemplateProperty ` with ` borderIsNotSetOrBlank ` for border properties to improve code readability and maintainability by
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance during debugging
updated ` InternalDropAllCommandStep ` and ` HubUpdater ` to utilize ` HubRegisterResponse ` for project registration to enhance functionality by
replace byte bitwise operation with Byte . toUnsignedInt in multiple Java files to ensure correct unsigned byte conversion and improve code clarity
( chore ) camel - rocketmq : fix checkstyle violation in opentracingtransactionproducer
updated default dependency from DepFiles . ENABLED to DepFiles . CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure proper caching behavior
changed the rangePannable setting from true to false in CategoryPlot . java to disable the range pannable functionality
updated the main active state logic for the work mode switch in AllAppsContainerView . java to ensure proper view management based on the current active
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` from ` private ` to ` private ` and initialized
added handling for CancellationException in FunctionTest . java to improve error handling for cancellation scenarios
changed constructors in JarFileResource and JarResource to be protected to restrict access to these constructors for better encapsulation
fix javadoc for defaulttrackselector
fix compaction resource not delete bug ( # 1980
updated the fee currency assertion from Currency . AUD to Currency . BTC in BTCMarketsAdaptersTest . java to ensure the test
updated SQL queries to use the correct table name and improved assertions for ID and title in JPAD to projection tests to enhance clarity and
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
updated ` installAutoInstance ` method to include ` Service ` as a parameter and added functionality to update Hive LLAP settings if required to enhance
updated the onComplete ( ) method call in SendHeadersFirstPublisher . java to ensure proper completion handling of the delegate
fix serialization of ssecustomerkey in aws sdk 1.2 . 0
added support for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to improve error handling for unsupported value types in the dictionary
updated method references from ` inner ` to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper . java ` to improve clarity
removed annotation printing from ParameterInfo . java to clean up the code and reduce unnecessary console output
added support for AC3 streaming in the PlaybackController and updated playback state handling in VideoManager to enhance audio playback capabilities and improve user experience
updated the return statement to include a non - null value in the HttpResponse to ensure that the response has a valid JSON representation
added @ SuppressWarnings ( " deprecation " ) annotation in DelegatingStatement . java and DiskFileItem . java to address deprecation warnings related to Common
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to validate SQL query execution and ensure correct
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
added test case for issue # 358
updated thread and scheduler initialization in ClientConnector to use unique names to improve clarity and traceability of thread pool and scheduler instances
modified visibility and initialization of JScrollPane and JSplitPane in ViewResultsFullVisualizer . java to enhance encapsulation and improve code readability
added descriptions for ` phoneNumbers ` and ` 555555 ` fields in ` ScimUserEndpointDocs . java ` to provide clarity
made ` DeleteFiles ` , ` IndexFiles ` , ` IndexHTML ` , and ` SearchFiles ` classes public and added private constructors
added null checks and error logging for null properties in JsonHttpPropertyRequest and HTTP status codes in URLStreamProvider to improve error handling and provide
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
added a check for DEFAULT _ PARALLEL in the parallel condition to ensure that parallel processing only occurs when DEFAULT _ PARALL is
testvmwareutil . java : fix checkstyle issue in util / vmware / testvmwareutil . java and testvmware
added handling for SCARD _ E _ NO _ SMARTCARD in addition to SCARD _ W _ REMOVED _ CARD to ensure
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary console output during tests
added a new ` lists ` parameter to several methods in ` BindyKeyValuePairFactory ` and ` BindyKeyValuePairDataFormat ` to
disable owner and timestamp preference by default
updated method signatures in Utils . java to use ThrowingRunnable instead of Runnable to improve exception handling by providing a more specific exception type
added null checks for ` via ` , ` viaContext ` , and ` pathFromSeed ` in ` CrawlURI . java ` to
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb component
updated version from " 4.1 . 1 " to " 4.2 " and refactored object retrieval methods in Liquibase
change default value of proxy . cert . validity from 7 to 90
updated ThreadHandler to introduce smoothDelta and lastDeltaUpdate for better time tracking to improve responsiveness and accuracy of time calculations during thread
added a null check for the paginator in HttpBatchReader and modified HttpUrl initialization in HttpScanBatchCreator to ensure proper handling of pagination when
added null check for the CompactionInfo client in Worker . java and created a test for handling exceptions in FindNextCompactAndExecute . java
added onSaveInstanceState method to ShadowFragmentActivity and corresponding tests in FragmentActivityTest to ensure fragment lifecycle is properly managed during instance state changes
reformatted code for better readability in BatchResourceFactoryBean . java to improve code clarity and maintainability
added a test for parsing a simple Android color reference in ColorResourceLoaderTest . java to ensure that the color resource parsing functionality works as expected
added error handling for NoResultException in AbstractJPAQuery . java and created a test for uniqueResult in AbstractStandardTest . java to
modified the way communities are retrieved and added parent relationships to improve the organization of communities based on their parent relationships
updated the way wallpaper depth effect is retrieved in DepthController . java to ensure compatibility with LawnchairApp ' s configuration
removed redundant import of ProcessTools in LocalManagementTest . java to clean up the code and improve readability
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method in ` EnergyProcessor ` and ` Ener
updated ExtensionStack to handle null extensions more gracefully to improve robustness and prevent potential NullPointerExceptions during string building
fix ( flatmap ) : dispose inner subscriber when delay error occur ( # 6609 )
added connection timeout settings and improved connection management in MultiGetRequest , ControllerStarter , and ServerTableSizeReader to enhance server request st
updated the initialization of AndroidPlatformTarget to ensure consistent formatting to improve code readability and maintainability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to update the test
updated fetchers in EdgeSyncCursor . java and modified inlineImage method in BaseImageService . java to include a new parameter to enhance event
added a new test in CachingBuildEngineTest to verify output hash calculation when cache is not writable to ensure that output hash is not calculated
camel - 14263 : camel - netty should use bytebuf if available . thanks to franz for the patch .
updated the method call to use the table ' s qualified name instead of the old name to ensure the correct table name is used for partition alter
improve error message when vertx instance be create with prefernativetransport option set to true to create domain sockets
test : move colortypehandlertest to coretypes and add test for colortypehandler .
refactor StreamEx class to improve code readability to enhance maintainability and facilitate future development
removed hint settings for JavaEE query and lock timeouts in SessionImpl . java to streamline timeout management for improved performance
add a new class ` StaticLoggerBinder ` that implements ` LoggerFactoryBinder ` to provide a singleton instance of ` LoggerFactoryBinder ` for
replaced duplicate calls to ` this . familyMap . put ( family , list ) ` with a single call to ` familyMap . put
added orientation comparison logic in TaskbarManager to ensure proper handling of window orientation changes
fix an issue with the jabber chat room ' s nickname not be properly escape .
updated the ` longStackPut ` method signature in ` StoreDirect . java ` and added a new test class ` Issue265Test . java
added @ SuppressWarnings ( " mutable " ) and @ SuppressWarnings ( " SelfAssignment " , " ImmutableEnumChecker " , " ArrayToString " ,
[ drools - 720 ] make brokenflowcontroltest work with old jdks
corrected spacing and improved array copying in DLNAMediaInfo and FFMpegVideo classes to enhance code readability and maintain
fix for http : / / issues . apache . org / activemq / browse / amq - 2268 - testnonblocking
update totaldifficulty in blockchainimpl and add test for invalid block
simplified the logic for determining playback actions based on the player ' s current window seekability to improve code readability and maintainability by
replaced synchronized list with CopyOnWriteArrayList for known libraries in NativeLibrarySupport . java and modified security class retrieval in SecurityServicesFeature .
added null check for mUniformAlloc and adjusted bendAngle and bendDistance calculations to ensure proper rendering and positioning of the bend
added a check for the presence of a colon in the key to ensure proper validation of the key format before processing
added PrincipalResolver dependency to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enhance dependency injection for principal resolution in the authentication process
replaced ObjectMapper with Noggit ' s ObjectBuilder for JSON processing in DelegationTokenResponse . java to improve compatibility with Noggit '
added a method to remove trailing slashes from a StringBuilder to improve string handling by eliminating unnecessary leading slashes
added methods to match patterns in the PatternsMatcher class and corresponding tests in PatternsMatcherTest to enhance functionality and ensure correct behavior when matching
refactor error message formatting in LoadIncrementalHFiles . java to improve readability to enhance clarity of error messages for better debugging
added handling for water potion events in BlockFire . java to ensure proper block fading for water potions in the fire block
updated method call formatting in CellLayout . java to improve code readability and maintain consistency
updated calculations for decreasePercent in ContractStateCapsule . java and corrected formatting in ReceiptCapsule . java and ResourceProcessor . java to improve
refactor AsyncContentProducer and BlockingContentProducer to improve readiness checks and logging to enhance code clarity and facilitate easier debugging
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that the weightField parameter is always provided to prevent runtime
added plist variable substitution functionality in AppleBundle . java and created a test for it in AppleTestIntegrationTest . java to enhance the
add laser turret shooting to turret
changed return type of adaptOrder method from OrderCreateApiRequestBuilder to Object to ensure proper type casting and avoid potential ClassCastExceptions during order adapt
added a new file ` PreParseGrammarTest . java ` that implements XML grammar preparsing to facilitate testing of XML schema parsing
added the ` @ SuppressWarnings ( " doclint : missing " ) ` annotation to multiple Java files to address missing ` doclint : missing `
added FontManager import and overriddenFont method calls in ExtendedEditText . java to enhance font customization capabilities within the application
added null check for currentUser in AuthorizeTag and implemented a test for unauthorized access to ensure proper handling of unauthorized access when no user is
camel - 3560 : fixed the issue of encoded uri contain unsafe character
mondrian : fix intermittent test failure on travis
removed the import of DumpHandler in MultipartFilterTest . java to streamline the code by eliminating unnecessary dependencies
[ hotfix ] throw exception for already cancel task in backendrestorerprocedure
add server . rmi . create property to control rmiregistry creation .
replaced String . join with StringUtils . join for improved readability to enhance code clarity and maintainability by using a more concise
added methods to set display metrics in multiple classes and updated test cases for qualifiers to ensure accurate display metrics and improve test coverage for different SDK versions
[ java ] add the cluster member id to the service heartbeat counter .
updated numAttributes assignment based on VersionCheck major version to ensure compatibility with Java 21 and above
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 563 : fix
resolve http : / / issues . apache . org / activemq / browse / amq - 2376 - avoid logging unnecessary message
added authentication and authorization routes in the Routes . java file and implemented corresponding methods in AuthenticityController . java to enhance authentication flow and improve
added assertion to check if the next node is alive in LoweringPhase . java to ensure that the next node is valid before proceeding to
updated logger initialization to reference HttpClientRequestImpl instead of ConnectionManager to ensure correct logging context for the HttpClientRequestImpl class
fix track selection order in defaulttrackselector .
[ hotfix ] [ runtime ] fix checkstyle violation in runtimeserialization
ggb - 2266 crop image on the screen , when the image be crop .
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` and updated related calculations in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and
add content - type - name to the submd if it ' s not null
updated the URI construction in ThumbnailsCacheManager . java to use file ID instead of remote path to improve clarity and accuracy of the URL
added methods to mark and reset the input stream in the Source class to ensure proper handling of input states and prevent memory leaks
added @ Deprecated annotation to multiple classes to indicate that these classes should no longer be used and may be removed in future versions
added a configuration property to show or hide error stacks in the server to enable users to customize error handling behavior in the application
bug 10629 : delete account / domain should n ' t fail to cleanup the account
[ sparc ] remove unnecessary check for null in sparcarithmeticlirgenerator
resolved - issue batch - 1338 : decisiontableconfigurationadapter should throw unsupportedoperationexception for jdk 5 api
added a new boolean variable ` waitingForResult ` and modified the ` onRequestPurchaseResponse ` method to use ` Display . getInstance ( )
increased the default timeout duration from 100ms to 1000ms in UnboundedSourceSystemTest . java to allow more time for unbounded
reordered import statements and modified the logic for extracting resource names in ShadowAssetManager . java to improve code readability and ensure correct handling of
deleted the files MrefStat . java and MrefStat1 . java along with their implementations to remove unused classes and improve code clarity
added a check for blank scope in DependencyInsight . java to ensure that the scope is set to " compile " when it is blank to
added constants for error messages related to trades and bad status in BTCETradeServiceRaw . java to improve code readability and maintain
use hamcrest assertion instead of junit in camel - core - build
bitcoinuri : : getpaymentrequesturls ( ) to support multiple payment protocol request
planner - 383 : improve error message for non - collection type in abstractfrompropertyvaluerangedescriptor
removed redundant call to setFolderInfo in FolderPagedView . java to streamline the code by eliminating redundancy
fix thread safety issue in jfrchunkwriter . write ( ) .
refactor null value handling in BasicAbstractTuple to use requireNonNull for better clarity to improve code readability and maintainability by using a more
refactor lint configuration loading to use InputResource utility and improve error handling to enhance flexibility and maintainability of the linter configuration loading process
replace direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a Runnable to ensure backgrounds and paddings are
fix inventory . oninventoryTick ( ) call twice ( # 8452 )
added a case for OCELOT _ BABY in PlayerEvents . java to handle specific gameplay events related to the OCE
[ hotfix ] [ state ] add @ publicevolving annotation to statettlconfig
added null handling for prepared statements in PreparedStatement and Array classes to ensure proper handling of null values when setting parameters
[ java ] provide clearer information about recordings that be invalidated during archive .
replaced double quotes with single quotes in append0 method to improve code readability and consistency
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest . java ` to verify JSON serialization functionality to ensure proper handling
added cache invalidation for transaction and block in BroadTest . java to ensure proper cache management during tests
added capabilities to manage camera state based on LensMask settings in AmcrestHandler and DahuaHandler to enhance camera configuration management for
removed the ` throws NoSuchBuildTargetException ` declaration from ` getBuildTargetForFullyQualifiedTarget ` and ` resolveBuildTarget ` methods to simplify method
updated constructors in ChangeLogIterator to accept both DatabaseChangeLog and ChangeSetFilters as parameters to improve flexibility in creating ChangeLogIterator instances
make sure guest exception do n ' t get swallow .
use ` utils . getenvorsystemproperty ` instead of ` Utils . getenv ` in ec2utils
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility for these classes
refactor space handling in SpacesVisitor to use dropParentUntil for better clarity to improve code readability and maintainability by reducing
# 1749 - enh : add ` ` nearcache ' ' option to servercacheoptions ( # 1748 )
added a new test method ` testHiddenBorder ` in ` VisualRegressionTest . java ` to verify the visibility of the hidden border to
replace ActionGraph with TargetGraph in WorkspaceAndProjectGenerator and ProjectCommand to standardize the use of TargetGraph for improved consistency and
updated KucoinExchange URI from LIVE _ URI to PROD _ URI and improved error logging for sandbox and host exceptions to enhance
updated string concatenation syntax and improved search path handling in SpringResourceAccessor . java to enhance code readability and ensure correct resource loading behavior
updated unit strings from " μ " to " µ " in SmartHomeUnitsTest . java and SmartHomeUnits . java
updated vertexMask retrieval to use getMaskWithSizePacked ( ) instead of getMask ( ) to improve performance by reducing memory overhead
deleted the Tls12SocketFactory . java file to the functionality is no longer needed in the project
refactor tex entry resolver to use a separate method to improve code readability and maintainability
added a method to check if Robolectric is using legacy resources in ResourcesTest . java to ensure compatibility with Robolectric '
added a condition to return " DOUBLE PRECISION " for FirebirdDatabase to ensure correct data type handling for Firebird databases
added null checks for ` dataSource ` and ` transactionManager ` before initializing them to ensure proper initialization of ` DataSource ` and ` TransactionManager `
add @ api to package - info . java for unittest stubs
updated command from " ping - c 5 www . google . com " to " ping - c 5 127.0 . 0.1 "
no effective change - try - with - resources to try - with - resources
updated TermScorer to use PostingsEnum . NONE when scoreMode needs scores to optimize scoring behavior based on score requirements
[ beam - 8470 ] fix npe in dataflowmetrics ( # 9691 )
server : fix search for uservm by ip address and accountid when deploy vm .
refactor DynamicPartitionPruner to use a new method for finding the target object inspector to improve code clarity and reduce redundancy in object
added a method to remove build artifacts from the filesystem to ensure that existing build artifacts are removed before the action execution step is executed
added selection logic for selected row in ThrustCurveMotorSelectionPanel . java to ensure the correct row is selected in the table
rename assertthrows to assertthrowsarraystoreexception to be consistent with j2cl ' s interface .
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added environmentName parameter and user agent handling in HttpClientBuilder and HttpClientConfiguration to enable dynamic user agent assignment based on the environment
refactor session creation and restoration logic in MemorySessionStore . java to use a dedicated method for creating and restoring sessions to improve code
updated assertions in IssueTest and modified results type in Reporter from Set < String > to Set < Object > to improve clarity of test results
modified ByteArrayDataSource initialization to use a default content type if none is provided to improve robustness by avoiding null pointer exceptions when content type is
add event for when an activation request be reject . also add a ` ` activationrequestdenied ' ' event .
updated mathematical operations and added @ Override annotation in GraphApplet . java to improve code clarity and ensure proper method overriding
added a method to update task views snapshot radius in RecentsView and modified visibility of the updateSnapshotRadius method in TaskView to ensure
added logging functionality to generate Swagger content for 3rd party services to improve traceability of generated Swaggers for 3rd party services
changed the return type of the put method from void to int in ArrayMap . java to allow retrieval of the index from the put operation
added a startup timeout configuration and simplified the startup process in KafkaContainerCluster to improve container startup reliability and simplify the code
( chore ) camel - http : / / issues . apache . org / activemq / browse / amq - 2296
updated header checking logic in StaticServerHttpHeadersWriter to check for duplicate headers to ensure that headers are not added with different casing to maintain
added package access check before loading listeners in EventListenerList . java to ensure proper access control for event listeners during reflection operations
added a CustomAdapter class and modified the onCreateView method in ApplicationsFragment . java to utilize a custom adapter for displaying application lists
modified the ` applyIcon ` method to accept both ` ImageView ` and ` Task ` as nullable to enhance null safety by ensuring both icons
refactor ` DownloadStateCursor ` and ` DownloadTracker ` to use try - with - resources for better resource management to ensure proper closure of
fix ( sqm ) : fix illegalstateexception in base sqm to sql ast conversion
added JUnit @ Test annotation to HibernateCursorItemReaderIntegrationTests and modified onSetUp method in HibernateCursorProjectionItemReaderIntegration
added asynchronous handling and logging in DataInputStreamWithTimeout . java to improve responsiveness and debugging capabilities during input stream operations
added support for ENABLED _ TS in VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enhance dependency
updated UpgradeCatalog150 . java file to improve code organization and maintainability
renamed ` testNet3 ` to ` oldTestNet ` and updated method names to ` testNet ` and ` testNet3 `
no need to update object panel when only one geos be select
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code clarity
replaced Apache Commons IOUtils with BufferedIndexOutput and added resource handling to HdfsIndexOutput to improve performance and resource management by utilizing
pdfbox - 4892 : do n ' t set clipping rectangle if the path have n ' t be complete
simplified the local address assignment logic in SocketChannelImpl . java to improve code readability and maintainability by removing unnecessary synchronization
refactor TemplateTransformer to encapsulate row addition logic into a separate method to improve code readability and maintainability by reducing duplication
added a method to check if the operating system is Windows and refactored file renaming logic to use this method to improve code readability and
replaced ALPHABET _ STRING with CHECK _ DIGIT _ STRING and updated related references in Code39Reader and Code39Writer to improve cl
refactor execution type handling in NodeGenFactory . java to improve clarity and correctness in type casting and execution flow
removed unnecessary check for fieldType . stored ( ) in IndexingChain . java to streamline the code for better readability and maintainability
fix ( sql ) : fix timestamp in where clause with nanosecond
removed unnecessary conditional check for ` postedRunnableStacktraces ` before adding to ` runnables ` to simplify code logic and improve readability
camel - 14850 - camel - google - cloud component - google - storage - http : / / issues . apache . org / activ
replaced ` assertInitialized ` with ` waitUntilInitialized ` and modified synchronization in ` ConnectionPoolTest . java ` to improve synchronization to ensure
updated directory retrieval methods to use " single " parameter instead of null in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistent directory
refactor FaultTolerantChunkProcessor to replace size and filter count calculations with a single filter count incrementing to improve code clarity and
updated the ` tabbedMethod ` method to escape tabs and modified the ` main ` method in ` T4994049 ` to improve
replaced multiple conditional returns with a single assumeTrue method for WindowsTerminal checks to simplify code and improve readability by reducing redundancy
remove unnecessary check for admin role in getfeedbacksessionsaction
adjusted the calculation for newSelection and adjusted the conditional checks for velocity and position accuracy to improve the responsiveness of the selection logic and
bugfix # 257270 , do n ' t notify client on result availability
added functionality to load model list and modified connection list handling in DbConnectionDialog and ExportPanel to enhance security and streamline database connection management
replaced ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` and updated constructor calls to use ` String . valueOf ( s ) `
replaced segment size calculation with SegmentInfo in DocumentsWriter . java and added a test for no documents index in TestIndexWriter . java
fix a bug in armaturemodifier where the dvert field be not be initialize properly .
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
added a custom UnsupportedOperationException that does not fill in the stack trace to improve error handling by avoiding unnecessary stack trace filling
replaced calculation of label height with a stream - based average calculation for lines to improve accuracy of line height representation
updated the constructor of ` RotationTouchHelper ` to accept a ` DisplayHolder ` parameter instead of using a static instance to improve flexibility
refactor the handling of quoted strings in the AVA class to improve clarity and efficiency in processing string strings
replaced ` Long . valueOf ( s , 16 ) ` with ` IdConversion . convertToLong ( s ) ` and updated ` setStateCurrent
add test for http datagramconnector ( http : / / issues . apache . org / bugzilla / show _ bug . cgi ?
updated the assertion in TestSqlEntityProcessorDelta . java to correct the syntax of the substring method to ensure accurate retrieval of the latest country code
refactor caching logic in Cache . java to improve performance and maintainability of the caching mechanism
updated variable names and set scopes from ' e ' to ' ev ' in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in
updated the doBefore method to remove unnecessary imports and changed BitSet initialization to final to simplify code and improve readability by eliminating unnecessary checks
added a main method to create a JFrame and a JScrollPane in GcodeTable . java to facilitate user interaction with a
updated the WEBAPP _ CONNECT _ TIMEOUT constant to use the configuration ' s connect timeout instead of a hardcoded value to improve flexibility and
updated various Java files to improve code consistency and clarity to enhance readability and maintainability of the codebase
refactor TestMediaService to improve code structure to enhance maintainability and readability of the code
removed the public static String HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK from the Messages class to streamline the
add main ( ) method to print currency in desktop mode
fix ( sdk - http ) : invalid hostname in accountid
added registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance security key registration functionality for HTTP requests
refactor ServerSpanThreadBinder class for improved readability to enhance maintainability and facilitate future updates
updated user object reference and adjusted block bounds adjustments in BulletPhysics and BlockItemSystem to improve code clarity and ensure proper
added new fields " the _ geom " and " number " to the builder in Csv2Shape . java to improve clarity and usability
replaced ` callGasWord . longValueSafe ( ) ` with ` gasCost ` in VM . java and removed unused imports in Program .
refactor parameters handling in the Parameters class to improve code readability and maintainability
added ` piePlot . setIgnoreNullValues ( true ) ` to ` MultiplePiePlot . java ` to allow null values to
refactor loading logic in ResourceBundle to streamline cache management to improve efficiency and readability of the code
pdfbox - 4892 : use hyphens instead of underscores to avoid problem with ` ` _ ' '
bug fix : allow script action to be disable by default
added a userModified flag in LoginSamlAuthenticationProvider . java to track whether the user has been modified
added a new file ` TestSealedObjectNull . java ` to test the behavior of ` SealedObject ` with null cipher to ensure
replaced ` onOpen ` method with ` setResponse ` and ` succeeded ` methods in ` ConnectPromise ` and ` WebSocketClientConnection ` to
added a static final Set < Material > SNOW and replaced Tag . SNOW . isTagged with SNOW . contains in BlockEventListener .
added an ' id ' field to CryptsyPublicTrade and updated related methods in CryptsyAdapters and CryptsyPublicTrade classes
added error handling to ensure HMS connection is properly closed to improve stability by logging warnings when closing the connection
use random long instead of system . currenttimemillis ( ) in glowserver . setseed ( )
updated icon sizes and added device profiles for Nexus 5 to enhance the visual representation of the device in the user interface
do n ' t reset ref count if it ' s already disconnect before connect ( # 6609 )
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to
# 4635 add space _ apostrophe _ textual _ op ( # 4635 )
added checks to ensure ` file ` exists and does not equal ` file ` in the ` SaveTask ` class to prevent file overwrites and ensure
added synchronized keyword to multiple methods in MLogWriter . java to ensure thread safety during concurrent access
added handling for MutableLogEvent in the add method of SmtpManager to enable serialization and deserialization of Log4jLogEvent objects
updated PADDING property builder from LengthLike to NonNegativeLengthLike to ensure proper handling of negative padding values
replaced calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` across multiple resource classes to simplify context
fix handling of jimple catch in methodirbuilder
updated import statements and improved error message formatting in JUnitRunner and AndroidPlatformTarget to enhance code readability and provide clearer guidance
updated cacheSize calculation from maxMemory / 16 to maxMemory / 8 to optimize memory usage for improved performance
added a check for ` start ` in ` InvocationStageTrace . java ` and modified the JSON structure in ` TestInvocationPublishModelFactory .
added error handling for null keystore input in ProvKeyManagerFactorySpi . java to ensure robustness by fallback to BCFKS when the
replaced a fixed port with a dynamic port assignment in the UpstreamCheckUtilsTest class to improve flexibility and avoid port conflicts during tests
ggb - 1357 fix wrong position of split pane in web
allow gl _ arm _ compute _ shader , gl _ geometry _ shader , gl _ tessellation _ shader , and gl _ t
refactor PopulatorContext to improve code structure to enhance maintainability and readability of the code
do n ' t fire save all notification for non - project project ( # 4340 )
added encoding handling and improved file writing in ZQLJobManager . java to ensure consistent character encoding across different operating systems
added a check for the length of the arguments before checking if it is a Table instance to ensure that the last argument is valid before proceeding
replaced hardcoded header strings with a centralized PREFIX constant in FakeOSSOHeaderDecoder to improve maintainability and reduce redundancy in
( chore ) camel - test - infra - java : mark - suffix - strategy option a deprecated
removed debug log statements in DerbyDatabase . java to streamline error logging for better clarity
( chore ) camel - cep : fix flaky test by wait for object to be fire
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by redu
updated the ` ROLLBACK ` operation type comparison and added a check for the ` liquibase . hub . mode ` configuration to
added constants for successful and failed command versions for IBM and Eclipse OpenJ9 VM in Constants . java and implemented a test for version
modified logging message formatting in FontFamily . java and added a new DebugFonts . java file to improve clarity of font addition messages for
added HTTP version checks in NegotiatingServerConnectionFactory to ensure compatibility with HTTP / 1.1 negotiation
added RateControl import and set No _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to ensure proper handling of HTTP / 2
added a new file Test6741426 . java that implements a Runnable for JComboBox with a Nimbus look and feel to
updated error message in assertion to include the exception message to improve clarity of error reporting for better debugging
added null checks for dbMgdPath and dbExtPath in conditional statements to ensure that only valid paths are processed to avoid potential errors
added package declaration for S3CopyObjectRequest . java to organize code under the appropriate package for better clarity
removed accentColor parameter from setupCategory methods and replaced them with a direct call to viewThemeUtils to simplify method signatures and improve code readability
updated the error message in TemporaryFolderUsageTest to use ' fileAtRoot ' instead of ' / temp1 ' to provide clearer context
replaced static TypeInformation references with direct class references for map and collection types to improve code readability and maintainability by eliminating unnecessary type
add check for empty or null member address in client config
added a new certificate entry for " keynectisrootca [ jdk ] " to the VerifyCACerts class to enhance security by
[ java ] return the number of result from the pipeline . compute ( ) method .
added a condition to check if the popup is clicked before setting the mode in the ModeToggleMenu to ensure the menu only displays when not already
pdfbox - 2576 : fix arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added a new file ` FinalizerInfoTest . java ` to test the finalization of objects using ` MyObject ` to ensure that the
replaced ` . map ` with ` . doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator `
refactor burning man address retrieval logic to use Optional for clarity to improve readability and maintainability of the code
refactor StringSubject class to improve readability to enhance maintainability and facilitate future development
increased the size of the longData array from 1 million to 1000 million in BatchValidateSignContractTest . java
updated method name from ` setMaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` in ` GrpcServerProperties . java ` to
replace " @ " with " @ " in query saving logic to ensure consistent handling of " from : " in search suggestions
removed a conditional check for ` forRebalance ` in ` SimulatorDiscoverer . java ` to streamline the code by eliminating
added a POST endpoint to import YubiKey accounts in the YubiKeyAccountRegistryEndpoint to enable users to import accounts from the Yubi
added shader constants and updated texture parameter handling in multiple shader - related classes to improve shader flexibility and consistency across the application
added null check for cnt in paintOnTopLoop and implemented safe area settings in SideMenuBar and Toolbar to ensure proper handling of null
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future updates
added a null check for subName before setting the caption in HierarchyBase . java to ensure a valid caption is set when subName is
updated data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to enhance game
added a null check for sim and modified conditional checks in CustomExpression . java to enhance robustness by preventing potential NullPointerExceptions during execution
do n ' t request blind votes from network if they do n ' t have them
added a new test method ` testCase4 ` to the ` PostgresTest ` class to verify the functionality of a database query with multiple
replaced double quotes with single quotes in substring methods across multiple files to improve code readability and maintain consistency with Java conventions
updated line separator handling in DefaultJavaPrettyPrinter and added StringTokenizer in CommentTest to improve code readability and maintainability by centralizing line separator
replace atomicreference with atomicreferencefieldupdater in singleimplementor .
added null checks before adding queries in SimpleFacets . java and modified test cases in SimpleFacetsTest . java to enhance robustness by
add bridge to the list of child in the bridge ( # 4695 )
replace printHelp ( ) calls with error messages in Ktab . java to improve user feedback by providing clearer error messages
do n ' t create a file if it do n ' t exist
camel - 14284 : added support for parse date string with + and - 23 : 00 : 00
added a query to find a post by its slug using a query in PostRepository to ensure that the repository correctly retrieves a post based on its
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and updated related logic in ` Oracle
added SimpleClientHttpRequestFactory with connection and read timeouts to ClientRegistrations to improve HTTP request handling by specifying connection and read timeouts
added assertions to verify file existence and name in SourceTest . java to ensure correct handling of file paths and their properties in the Source class
remove dependency to graalvm . version in favor of graalvm . version system property .
set access token and refresh token validity to null in ClientAdminBootstrap to ensure proper handling of token validity settings for improved security
updated the Android API version check to use Options . v ( ) . android _ api _ version ( ) instead of defaultSdkVersion to ensure
refactor references from ` this ` to direct class references in ` PropertyPlaceholderHelper . java ` to improve code readability and maintainability by
updated string formatting in Resources . java to remove unnecessary number formatting to simplify the output for better readability
refactor ZkSolrClientTest to improve collection management and synchronization to enhance the reliability of collection processing in the test environment
added BigInteger type support to MongoMappingContext to enable support for BigInteger data type in MongoDB operations
added a condition to check if the button text matches the displayed toast message to ensure that the toast message is displayed correctly when the button text is
added a conditional check for MEncoder sync settings in MEncoderVideo . java to ensure proper handling of MEncoder behavior based on configuration settings
reduce default netty event loop thread count to 10
changed access modifiers of several fields and methods in CountMin4 , IncrementalResetCountMin4 , and PeriodicResetCountMin4 to
added sorting functionality to ExternalFileField and created corresponding unit tests to enhance sorting capabilities and ensure proper functionality through unit testing
updated the exception message from " Invalid URL " to " Connection error " in DoiFetcher . java to improve clarity of error reporting for
updated OpenRocketSaver to include source ID in event string and enhanced FlightDataBranchHandler to include source ID to enhance event handling
changed the access modifier of the check method from private to protected to allow subclasses to access and override the check method
added handling for file synchronization operations in FileActivity . java to improve error handling and user feedback during file synchronization operations
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for URL encoding to ensure proper URL formatting and enhance security by prevent
added initialization check for the client property " cn1 $ infinite " in InfiniteContainer . java to ensure proper handling of client properties before proceed
updated the initialization of the ` total ` variable and modified the increment logic in ` IntHashSet . java ` to ensure the ` total ` variable
added a lock timeout check before updating a feed entry in FeedRefreshUpdater . java to ensure that updates are only processed when the feed is locked
refactor conditional logic for handling ACE flags in SolarisAclFileAttributeView . java to improve clarity and maintainability of
refactor the creation of Edge objects to use an array instead of a list to improve performance and simplify the code by eliminating unnecessary list
added IOUtils import and resource management in ZkCLI . java to ensure proper resource cleanup and improve code readability
fix a bug in the bibtex parser that cause an exception if the bib file contain a blank line .
added strict parameter handling in Main . java and corresponding tests in MainTest . java to ensure that command line arguments are ignored when strict mode is
fix : allow custom constraint to be validate by @ validatedby ( ` ` alwaysinvalidconstraint ' ' )
camel - 14263 : camel - http4 should use http4 a the name of the component and not http
added a wait time of 30 seconds in TestCloudPivotFacet . java to ensure that the process does not hang indefinitely
removed redundant checks for byte length in UBJsonWriter . java to simplify code logic for better readability and maintainability
updated ApplicationTest . java with new test cases to improve test coverage and ensure functionality is validated
replaced String with StringBuffer for string concatenation in ConnectionFactoryImpl . java to improve performance and efficiency of string concatenation
replace Type with RoboType in MethodGenerator and related classes to improve clarity and consistency in type management
[ java ] do n ' t call archive dispatch if it ' s complete .
added cache key and lookup key handling in EntityProcessorBase . java and updated related logic in TestCachedSqlEntityProcessor . java to improve entity
added a new file PutfieldError . java that demonstrates handling IncompatibleClassChangeError to demonstrate the behavior of
fix the issue that aws can not connect to any public ip in a cluster . ( # 4365 )
patch by jbellis ; review by brandonwilliams for cassandra - 1541
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple files
removed an unused method ` encodedLength ( ) ` from the Flyweight class to clean up the code and eliminate redundancy
refactor TestMethodResultMapBuilder for improved clarity to enhance maintainability and readability of the code
do n ' t throw illegalargumentexception when try to find null deref
[ hotfix ] remove unused constructor parameter in tasklocalstatestoreimpl
updated return statements in Utils . java to simplify time representation to improve readability and consistency of time display in the application
updated logic to handle DeepShortcutView instances in Utilities and FloatingIconView to ensure proper drawable retrieval for both ImageView and DeepShortcutView
changed the type of the ` validator ` field from ` String ` to ` Object ` in ` JwtIssuerValidator ` and updated its logic to
renamed methods for buy quick rate and sell quick rate to improve clarity and consistency in naming conventions
added a new CoverageConfig class and updated CoverageController to use it to conditionally load the COBERTURA project data class to enhance
added a check to ensure the event bus is only registered if it is not already registered to prevent unnecessary registration of the current thumbnail view
added asciiOnly check for string length in NormalizerBase . java to ensure normalization only occurs for ASCII characters to improve performance by avoiding unnecessary
[ hotfix ] [ runtime ] change ismigrationallowed to aremigrationtasksallowed
added error handling for SQL update failures in SpillableGroupByIT . java and NoOpStatsCollectorIT . java to ensure that the update
( chore ) camel - cometd : migrate to junit4
updated HTML tag attributes from ` attrs ( AttrKind . USE _ CSS , START , WIDTH ) ` to ` attrs ( AttrKind . OK
added a line to display a new line in HtmlCoreReport . java to improve readability of the report output
updated ramBytesUsed calculation to handle null scores to improve robustness by avoiding potential null pointer exceptions
added custom serialization and deserialization for StringHolder in CustomTypeAdaptersTest . java to enhance JSON handling capabilities for collection elements during serialization and deserialization
fix : use extradata from miningparameters .
added a static final map for argument configuration in DependencyParser to enable dynamic handling of parsing and output file options
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the codebase
updated variable name from ` configedThreshold ` to ` configuredThreshold ` for clarity to improve code readability and maintainability by using a
doc : fix checkstyle violation in rest - client
[ hotfix ] [ table - planner ] move twitterbootstrap . css to twitterbootstrap / css
remove spanishtreebanklanguagepack . basiccategory ( ) since it be no longer use
hhh - 14926 - deprecate abstractentityloader . loadbyuniquekey and abstractentityloader . loadbyuniquekey ( )
hbase - 25829 remove task from taskpool in regionserverflushtableproceduremanager and regionserversnapshotmanager ( chunh
do initial setsize ( ) call , fixes # 395 ( regression from # 186
fix checkstyle issue in util / hikaripool / hikaripool . java ( # 226 )
replaced the ` assureMatchVersion ( ) ` method with a default value of ` Version . LATEST ` in multiple filter factory
fix proxy generation for interface with default method ( # 6373 )
added a condition to check if the input is a COMMA before matching with COMMA to ensure proper handling of COMMA input during parsing
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5638 : throw a
move PublishSubscribeChannel and related classes from ' channel ' to ' dispatcher ' to improve organization and clarity of the codebase
updated executionId handling to use Long instead of String in multiple classes to ensure consistent data type and avoid potential issues with negative execution IDs
added digest updates for width and height in ImageProcessor . java to ensure accurate representation of dimensions in the image processing process
added logging for overlay version in SolrConfig and imported necessary classes in SolrConfigHandler to enhance debugging capabilities and improve code clarity
updated the delay calculation in FileSyncAdapter to use the current time instead of a fixed value to ensure that automatic synchronizations do not exceed the
fix checkstyle issue in segmentv1v2tov3formatconvertertest
refactor addPathToMTree method to use a Path object instead of a String for device and measurement IDs to improve code clarity and maintain
camel - 1974 : fix package scan with temp folder use character which would have be url decode . thanks to fabio marinelli for provide detail and fix
[ hotfix ] [ table - common ] [ table - planner - blink ] [ table - planner - blink ] introduce timestamp
added a new file ` SpringSecurityAuthenticationSource . java ` that implements ` AuthenticationSource ` for authentication handling to provide functionality for retrieving principal and
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
update minSdk annotation from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest Android version
replaced autoSuggestDialog with SimpleFormDialog for displaying custom filename to improve user experience by using cached file suggestions instead of dialogs
added a new test method ` testNewput ` in ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure
updated the method signature of ` stream ` in ` MongoTemplate . java ` to use ` collectionName ` instead of ` collection . getName ( )
updated zoom calculation and zoom setting logic in MapOverviewImageMouseHandler . java to improve zoom responsiveness and maintain consistent zoom behavior
updated KNearestNeighborClassifier to accept a Similarity parameter and modified related methods to return a ClassificationResult instead of void to improve similarity handling
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query handling and improve performance
updated method call from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity and
updated package - info . java files in mmm and ppp packages to ensure consistency and clarity in package documentation
added tests for Bluetooth Gatt mtu request handling in ShadowBluetoothGattTest and ShadowBluetoothGatt to ensure correct mt
refactor the creation of the ServletOutputStream to use a separate method to improve code readability and maintainability
added handling for UnsatisfiedLinkError in VoskSTTService to set the logging level to WARNING to improve error handling and provide
replaced HashMap with ConcurrentHashMap for mProcessingChains in ChannelProcessingManager to ensure thread - safe access to the processing chains map
updated the string in Resources _ ja . java to include " all " and " grouped " in the summary to improve clarity and accuracy of
updated JDBCTypeMapping to handle size greater than 1 and corrected assertions in JDBCTypeMappingTest to improve type handling and ensure correctness in type
added synchronized keyword to addPlayer and removePlayer methods and replaced direct entity addition and removal calls with stream - based operations to ensure thread safety and
replaced ` isScreenReaderActive ( ) ` method with ` controlCodes ` and ` codeMatcher ` in ` TerminalView . java `
added support for SIDE _ NAVIGATION in menu behavior checks and improved icon handling in SideMenuBar to enhance functionality and ensure
removed unnecessary assignment of Disposable in PoloniexManualExample . java and added debug logging in WampStreamingService . java to improve
updated energy limit validation logic and error messages in UpdateSettingForEnergyLimitContractActuator . java and corresponding test in UpdateSettingForEn
updated variable names and added protocol handling in PostmanJsonBuilder . java and added protocol property in UrlBean . java to improve code clarity
camel - 7035 add getter / setter for namespaceprefixref in SoapJaxbDataFormat . java
added a new constant for ONE _ MINUTE _ MILLIS and refactored date comparisons in TestRange . java to improve code readability and
added server restart logic in BasicAuthIntegrationTest and enhanced security property retrieval in ZkStateReader to ensure proper handling of server restarts and
add pricefeed to tradechartviewmodel to allow customization of currency code
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to set replication settings to -
updated variable names and logic for determining the end index in NativeString . java to improve code clarity and ensure correct handling of negative and negative
added file download functionality to FileDataStorageManager to enable downloading of files during the download process
replaced the direct creation of a RandomAccessFile with a separate variable and set the length of the file channel to improve code readability and ensure
added methods to check if a registry is running and a file deletion with retry functionality to improve reliability and error handling during file operations
removed unused imports and invoked componentPresetDao . startLoading ( ) in EditTest , Quick3dMain , and TextureTest classes to stream
added ` @ SuppressWarnings ( " unchecked " ) ` and ` @ SuppressWarnings ( " javadoc " ) ` annotations across multiple classes to suppress unchecked warnings
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions during execution
added TRANSACTION _ MUST _ BE _ ENABLED _ TO _ SET _ ISOLATION _ LEVEL to SQLExceptionCode and modified isolation level handling in Ph
resolved - issue batch - 554 : * stepfactorybeans should have a list of exception that do and do n ' t cause rollback
replaced CasClient with DirectCasClient and refactored security interceptor in CasManagementWebAppConfiguration . java to enhance client functionality and
added a menu item to the list in ListFragment and modified the list in NavigationDrawerFragment to enhance user experience by allowing category editing in the
renamed method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation ` and updated method names in ` FileDisplayActivity `
pdfbox - 2576 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and TerminalBridge classes to improve text size accuracy to ensure consistent text rendering across different screen densities
added a check for fact validity before processing a constant frame in ConstantAnalysis . java to ensure that only valid factories are processed to avoid potential errors
refactor multiple classes related to DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser to improve code organization and maintain
replace return statement to create a new ArrayList instance from the existing spans array to ensure that the returned spans list is immutable and avoids unintended
removed locking mechanism from the Liquibase class to simplify the code and improve performance by avoiding unnecessary locking
added a method to set a revision in MicroserviceVersions and updated InstanceCacheChecker to set it to null to allow dynamic management of the micro
replaced the constant ` UNKNOWN ` with a formatted string for ` foreignKeyName ` and ` indexName ` in ` TableRetriever . java ` to
camel - 15836 - camel - aws2 - s3 : add uri - endpoint - override option to all the component - aws2
removed currency pair parameter from getBitstampUserTransactions method in BitstampAccountService . java and added error handling in BitstampAccountServiceRaw .
added error handling for NoSuchComponentException in BlueprintContainerRegistry to improve robustness by preventing application crashes due to missing components
modify push ( ) method to return the result of push ( ) instead of void .
replaced hardcoded legacy address strings with dynamic data loading from a file to improve flexibility and maintainability of the test code
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor Snackbar handling in NotificationsActivity and DrawerActivity for better organization to improve code readability and maintainability by centralizing
do n ' t swallow if the channel be close , close it gracefully
replace null checks with StringUtils . isEmpty ( ) for better readability to enhance code clarity and reduce potential null pointer exceptions
refactor DefaultAnnotationEngine and Stubber files to improve code readability and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to issue PHOENIX - 2840
nifi - 1341 : add timezone support for nifi instance in web ui
updated assertions and logic in Splitter . java and modified splitOwnedRanges method in StorageService . java to improve code clarity and ensure
no effective change - code cleanup - no need to catch exception
added synchronization around adding a circuit to active circles to ensure thread safety during concurrent access to the active circles collection
replace GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling for fetch uniform failures
refactor sink and source runner to use sink and source directly to improve code organization and reduce redundancy
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve clarity of error messages for user authentication failures
refactor ContainerOrderFocusTraversalPolicy class for improved focus traversal logic to enhance performance and maintainability of focus traversal logic
make sure point length be int rather than double for freehand function
reformatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent for consistency to improve code readability and maintainability
refactor database connection handling and logging in SchemaCrawlerMain . java and Executable . java to improve resource management and error handling during executable execution
add fallback for default tl version ( jdk 17 + )
updated exception messages in CountersManager to specify that the counter cannot be allocated due to buffer sizes to improve clarity and accuracy of error reporting
updated audio stopping logic and adjusted ndx calculation in MediaManager . java to ensure correct audio position handling when the current audio queue is empty
updated debug logging statements in HttpConnection . java to include additional context to improve logging clarity for connection upgrade events
added a method to check if the entity is a transient field in JpaPersistentPropertyImpl and created a corresponding test in JpaPersistentProperty
updated stack ID assertions and assertions in UpgradeResourceProviderTest . java to reflect the correct version of HDP - 2.2 . 0 to
trufflevm : change eval to return the result of eval ( uri , string ) .
do n ' t try to guess the encoding of a url if the content type be not binary
updated the configuration property name from " hive . tez . dynamic . parition . pruning . max . data . size " to "
remove parsing error priority , since we do n ' t use it anymore
removed the DEFAULT _ OFFHEAP constant and updated the read method in DictionaryIndexType , BloomFilterHandler , and DictionaryIndexConfig to
replaced hardcoded newline character with a system - dependent line separator in TableWriterTest . java to improve compatibility across different operating systems
refactor DebugHelper class to improve readability to enhance maintainability and facilitate easier debugging
added a boolean flag ` ownsTexture ` to ` ParticleEffect ` and its associated logic in ` ParticleEffect . java ` to ensure
added LDAP - related configurations to HiveConf . java to enhance authentication options for LDAP functionality
chore ( regen ) : fix checkstyle violation in datacatalog module
updated InputMethodManager usage in DetailActivity . java to include SHOW _ FORCED option to enhance user experience by allowing soft input visibility during note
added unit tests for converting primitive data types to objects in DataTableTypeRegistryTableConverterTest to ensure proper functionality and correctness of data conversion logic
updated the size parameters in TestFileSystem from 100 , 500 , and 50 to 10 , 50 to optimize memory usage and improve performance during testing
updated error messages in ContentTypeManager . java to provide clearer guidance on closing resources before filing a bug report to improve user understanding
made the ` dropSequences ` method abstract and implemented it in multiple database - related classes to provide a consistent implementation of the ` dropSequences
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
added variable ' f ' to the createField method call in DocumentBuilder . java to store the result of binaryField . createField to improve
hierarchies should not be set for logicalstylemodel , but only for mapstyle . map _ style
added a test method to verify the behavior of upserting and retrieving an object from a non - existing object in MongoTemplate to ensure that the
hbase - 27273 fix wrong calculation of ` ` mid ' ' to ` ` mid ' '
added functionality to record and broadcast app launches in the Launcher and Stats classes to enhance tracking of app launches and improve intent handling for
replaced direct data setting with graphics creation and disposal in JavaSEPort . java to improve graphics handling efficiency and resource management
[ # 7340 ] instructorfeedbackresultspage : clear team member email when there be no response
added a check to return a valid inventory ID when the player ' s inventory ID is zero to ensure that a valid inventory ID is always returned
added a conditional check for ` found ` before breaking the loop in ` ConfigDescriptionRegistry . java ` to improve code readability and prevent unnecessary
added a condition to check ` returnTypeAnnotations ` when it is null in ` ReloadableJava11ParserVisitor ` , ` ReloadableJava17
refactor TileMapRenderer to handle blended tiles array initialization to improve flexibility in handling null values for blended tiles
updated class annotations in Probe . java for various collections and SunJCE classes to streamline code and improve readability by eliminating red
simonstewart : fix a bug in the area area calculation .
modified the initialization of ` lockOnSync ` and ` throttleRate ` in ` Throttler . java ` to ensure that ` lockOnSync
pipe : make pipeeventitem . modifyspeed non - static and pipeeventitem . modifyspeed non - static
updated the timeout duration in ZkController initialization from 1000 to TIMEOUT to allow more time for zk controller operations to complete successfully
added a test method to verify the passcode functionality in the TokenMvcMockTests class to ensure proper handling of client parameters in OAuth2 authentication
added support for LengthFilter and CharArraySet in brokenOffsetsConstructors to ensure proper handling of different input types in tests
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to enable the test to run and ensure
updated LLVMMemory methods to use ` putI64 ` instead of ` putI1 ` , ` putI8 ` , and `
replace direct creation of ` btCollisionObject ` with ` getInstance ` in ` btCollisionObjectArray ` and remove native method from `
added copyright year retrieval and updated OPENROCKET _ URL format in BuildProperties . java and AboutDialog . java to ensure accurate copyright information
add getdistributedobjects ( ) method to jetclientinstanceimpl ( # 25389 )
added debug print statements in FinSet . java and updated MassCalculatorTest . java to reflect changes in fin calculations and inertia values to
replace TOTAL _ MEMORY with MAX _ MEMORY in SmartDexingStep . java to ensure maximum memory is utilized instead of
[ iotdb - 4340 ] fix exception handle in standaloneschemafetcher ( # 6340 )
remove check for number of delayedpayouttx output , use bisq ' s burningmanservice
updated JSON string formatting and added exception handling for big integer types in JsonLoaderTest . java to improve code clarity and ensure proper handling of
updated the validation condition for table size in ObjectSet . java to ensure that the required capacity is not too large to accommodate larger table
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure data scale is only set if it
removed @ AddToRuleKey annotations from private final fields in AppleTest . java to simplify the code by eliminating unnecessary dependency on
added exception handling for security exceptions in FileHelper . java and modified content handling in TextHelper . java to improve robustness of file querying and
added a new constant ` StyleWithMultipleAttributes ` and implemented tests for attribute resolution in ` ShadowThemeTest ` to enhance functionality to support multiple
updated the sheet name check in HSSFWorkbook . java and modified test cases in TestHSSFWorkbook . java to ensure correct sheet
updated the tint color from primaryColor to elementColor in ManageAccountsActivity . java to improve the visual distinction between elements in the
updated the initialization of the wrapped Handler to check for null replyHandler and simplified path resolution in DefaultPlatformManager to improve code robustness and simplify
added binaryCollationName configuration to MariaDbDbmsType and MySqlDbmsType classes to support collation functionality for binary data in the
added a method ` whenType ` to the ` Tree ` class that returns an ` Optional < T > ` to enhance type safety by ensuring
refactor user view navigation logic in ItemLauncher . java to streamline navigation to improve code readability and maintainability by reducing redundancy
replaced Response . OK with Response . temporaryRedirect in FeedREST . java to redirect to the public URL instead of returning a successful response to
[ flink - 26012 ] [ kinesis ] provide clearer error message for non - serializable kinesisdeserializer
( chore ) camel - johnzon : fix javadoc warning in camel - core
replaced Thread . sleep with a try - finally block in LeaderElectionTest . java to ensure zkClient is properly closed in a finally block
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify
replaced direct calls to ` _ endPoint . fill ( _ buffer ) ` with a new ` read ( ) ` method in ` ProxyHandler
replaced ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java ` to simplify memory allocation
modified the ` prepareStreamsToUpload ` method to return a boolean and updated its logic to return a boolean indicating success or failure to improve the
updated comparison logic in AbstractConfigLoader and modified test cases in TestMicroserviceConfigLoader to ensure correct order comparisons and improve test coverage
added a new file ` PicOfDayAppWidget . java ` to implement a widget for pic - of - day images to enhance the application
cloudstack - 3091 : expect uuid instead of actual db id , when read internallbvm . service . offering global
updated import statements and method calls in HiveParserCalcitePlanner . java to use HiveRelOptUtil and improved join condition handling to
[ hotfix ] [ runtime ] mark some class with @ deprecate
added username and password options for JMX connection in NodeToolCmd . java to enable secure authentication for remote JMX connections
removed duplicate instantiation of BytesRef in Stemmer . java to improve code clarity and reduce redundancy
updated widget and resolve info parameters in AppsCustomizePagedView . java to ensure proper handling of widget properties based on the number of
ggbapplet . getviewforthumbnail ( ) now return the 3d view if available
updated rotation calculations to ensure rotation values are non - negative to prevent rendering issues with negative coordinates
added a new option for setting the workspace directory in the OptionEnum and updated TerminalClient to utilize it to enhance functionality by allowing users to
updated the test file path from " target / test - classes / options . apt " to " target / test - classes / options .
updated ScimUtilsTest to use JUnit 5 extension and replaced expected exceptions with assertThrows for improved test clarity to enhance test structure
updated the ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` ModelAndView ` to
refactor session retrieval and cache hit count assertions in HibernateIT . java to use assertTrueEventually to improve test reliability and ensure
refactor EventBusHook class for improved clarity to enhance maintainability and readability of the code
updated MultiPaintEventTest . java to improve test coverage to enhance reliability of rendering events in the application
modified the assignment of mNewScale in WorkspaceStateTransitionAnimation . java to improve code clarity by removing unnecessary final modifier
updated synchronization logic in SyncFactory . java to improve performance and reliability of data synchronization
added functionality to handle unique key fields in LukeRequestHandler to improve data management by associating unique keys with fields
added a round border color feature to the Border class and updated its usage in the EditableResources class to allow customization of the rounded border
add miss @ truffleboundary to assert . neverpartofcompilation .
[ hotfix ] [ runtime ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulingschedulingtest
added logging for pending requests in GatewayRSocket and modified ping pong return values in PingPongApp to enhance debugging capabilities and improve request handling
updated RecentChatFragment to implement Toolbar . OnMenuItemClickListener and added menu item click handling to enhance user experience by providing quick access to
updated ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget
updated method names from ` add ` to ` push ` and ` removeTail ` to ` pop ` and ` pop ` in multiple classes to
updated API and EVENTLOG _ WIKI references from " testwiki " to " commonswiki " in CommonsApplication . java
refactor index management into separate methods for clarity to improve code readability and maintainability by reducing duplication
replace usage of Collections . sort with direct method calls for sorting to improve code readability and reduce boilerplate
added various date and time patterns to the FormatData _ hr _ HR . java file to enhance date formatting capabilities for improved readability
added a call to clear the focus of the clickedView in DetailFragment . java to ensure the clickedView is reset before further operations
replaced ` languagesAdapter . notifyDataSetChanged ( ) ` with ` spinnerDescriptionLanguages . setSelection ( position , true ) ` and updated
updated time zone identifiers from " West Samoa Summer Time " to " West Samoa Daylight Time . " to
added native methods for registerGlobal and registerWeak , and refactored accessFields methods in FastGetField . java to improve performance and
added default value handling for union and null types in ReflectData . java and updated test assertions in TestReflect . java to ensure correct default value
increase timeout for seda block when full test
added a null check before remapping the R class in ResourceMerger to avoid potential NullPointerExceptions during resource remapping
add default constructor to dialect that accept the databaseversion
camel - 3506 : camel - http should use http / 1.1 . x connection close header if the endpoint be close .
increased the socket timeout from 60 seconds to 120000 seconds to allow more time for distributed operations to complete successfully
added an assertion to verify the query results for the FREE status and final _ price _ cts in BaseReservationFlowTest to ensure that
refactor Parser class to improve code readability to enhance maintainability and facilitate future feature additions
refactor CasProcessingFilter to improve code readability to enhance maintainability and facilitate future feature additions
fix thymeleaf / thymeleaf - templates to use getfirstelementchild instead of getfirstnode
planner - 233 : fix remove of enum in look - up strategy
[ java ] wait for cluster node to shut down .
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 663 : log
added a default content type of " application / octet - stream " in WebdavEntry . java to ensure proper handling of binary data transfers
added a method to retrieve the queue size in LazyTraceThreadPoolTaskExecutor and created unit tests for it to enhance functionality and ensure correct behavior of
fix distanceop to avoid infinite loop ( # 658 )
rename ` required ` to ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity and consistency in variable naming
added updateProgress ( ) method to PurgingPartitionIterator and removed the next ( ) method from the next ( ) method to ensure progress updates
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated references in ` VectorUtil ` to use this method
added abstract methods for height and width in BaseMonochromeBitmapSource to provide access to bitmap dimensions for better bitmap management
added validation to ensure the polygon contains at least 3 points and modified localVertices assignment logic to ensure that polygons have at least 3 points to avoid
replaced instances of ` ObjectMapper ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to standardize object handling and
fixed potential npe in implicit curve
modified the handling of Unicode name reading in ExternalNameRecord to accommodate both compressed and non - compressed Unicode characters to ensure correct processing of
updated the description of the JMS Destination type from ' TOPIC ' to ' QUEUE ' to provide a clearer indication of the default value
added conditional logic to exclude specific authentication prompts based on the return value of ` LoginInfoEndpoint ` to enhance the flexibility of the login
replaced ` remove ` method with ` removeIf ` for listener removal to improve listener removal logic to ensure only the specified listener is removed if
added a spin action to the PieChartActivity to allow users to toggle the spin state of the chart
if copy _ vhd _ to _ secondarystorage fail , return the vhd uuid instead of null
hbase - 16462 avoid normalizing a table that have quota
removed unused imports and added a resize method for float arrays in AndroidInput . java to streamline code and improve readability by eliminating
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and made the ` @ VisibleForTesting ` annotation consistent with the
ignore clientmapnearcachetest until it ' s fix
fix a bug in the hopperhock ' s getentitiesWithinAABB that cause the hopperhock to crash .
added authentication dialog functionality to SsoWebViewClient to enhance user experience by providing clear authentication requirements
refactor TestStressIndexing2 to improve document deletion and query handling to enhance code clarity and functionality for better document management
[ hotfix ] ignore upsertkafkatabletest in flink - 22559
replaced ` get ` with ` computeIfAbsent ` for initializing ` typeList ` to improve performance by avoiding unnecessary object creation
added a configuration to allow deserialization of single values as an array in DefaultEntityMapper to enable flexibility in handling multiple values as an array
updated localization messages to include " BE , UK , and SL . " to improve clarity and accuracy of localization options
updated SHORTCUT _ CATEGORIES initialization to use resource utility instead of hardcoded string to improve flexibility and maintainability by allowing dynamic
changed the method name from ` visitExpressionInstanceOf ` to ` visitRelExpressionInstanceOf ` and updated its implementation in ` ASTBuilderVisitor
nifi - 3451 add mime . type attribute to gethttp to report the content type of the flowfile
fix a bug in the resource history table when delete a resource
replaced the exit button with a done button in HelpActivity . java and added a search book content check in SearchBookContentsActivity . java
fix typo in javadoc of natsconfiguration
refactor ` invalidateStalePartition ` method to accept a list of ` HivePartitionNameWithVersion ` and ` MetastoreContext ` to
use circular buffer instead of unbounded buffer for view result tree
replaced ` ic _ group ` with ` ic _ chat _ bubble ` in multiple classes to provide a clearer distinction between the
[ java ] use volatile access to the cursor in broadcast receiver .
updated test method names and imports in MocksCreationTest . java for clarity and consistency to improve readability and maintainability of the test
added a constant for the data source name in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to
increased timeout duration from 10 seconds to 30 seconds in awaiter calls to allow more time for phaser operations to complete successfully
removed the BuildSlaveFinishedStatusEvent class and simplified the publishBuildSlaveFinishedEvent method to simplify the event publishing process by eliminating unnecessary
bug cs - 16321 : fix string encode issue in vmwarestoragemanagerimpl
added unit test for depositing a workspace item without a workflow and modified collection builder to include a submitter group to ensure that the workflow
added distinct ( ) method to classpath processing in ClassLoaderSupportImpl . java to ensure unique classpath files are processed
removed the method ` isBoxedPrimitive ` from the ` Unbox ` class to simplify the code by eliminating an unused method
refactor argument handling in SpecificCompilerTool and add tests for ordering of flags in TestSpecificCompilerTool to improve code readability and ensure correct
added a check to ensure the partition deletion only occurs for non - external tables to avoid unnecessary directory deletion when the table is not external
hive - 25819 : make async executor thread pool configurable ( brock review by szehon )
added a try - catch block around dismissing the dialog to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to use a constant for the task role and modify the RequestResourceFilter initialization to improve code readability and maintainability
fix a potential npe in operationsettelephonyconferencingsipimpl
add a method to clear log entry in the flutter log tree ( # 2590 )
updated return conditions in ChannelEndPoint to include checks for channel and socket states to ensure proper handling of input and output shutdown scenarios
refactor SetNullableGenerator class to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - example - reportincident : make it easy to configure the cxf endpoint
simplified import statements and refactored form handling in NettyRoutingFilter and FormIntegrationTests to enhance code readability and maintainability
added ` @ ApiOperation ` annotations to methods in ` AbstractBaseService ` , ` IBaseService ` , and ` MyEndpointWithInterface
refactor lifecycle listener management in Lwjgl3Application and Lwjgl3Window classes to ensure proper disposal of listeners to
updated FG _ FK color from 90 to 200 in UIUtil . java to improve the visual appearance of the FK color in the
gwt : disable mp3 audio format for now
make secondaryindexmanagertest . assertnotmarkedasbuilt ( ) use systemkeyspace . getbuiltindexes ( )
pmd : add ` ` bundle - version ' ' and ` ` about ' ' group to preference page
[ hotfix ] [ test ] use findthrowable instead of throwable in customserializationitcase
refactor MediaFormatUtil to improve code structure to enhance maintainability and readability of the code
added a method ` isCellEditable ` to ` GeneralTab ` that always returns false to indicate that the cell is not editable
added a method to check if unused dependencies should only print commands based on configuration to enhance flexibility in displaying unused dependencies based on configuration
added a temporary count in VocalTractModifier and modified the VocalTractScalingProcessor to use a different scaling factor to improve performance
updated import statements in BaseScalarUdfTest and TestGenericUDFConcat files to ensure consistent usage of BaseScalarUdfTest across multiple
added ` hashCode ( ) ` and ` equals ( ) ` methods to ` UaaAuthenticationDetails ` class to ensure proper object comparison and hashing
testskeletoncontrolrefresh : use the new skinningcontrol class instead of the old one to simplify the test
renamed NodeFilter to NodeCountFilter and updated related method signatures to improve clarity and consistency in the codebase
updated the condition to check if the size of sync blocks is less than or equal to SYNC _ FETCH _ BATCH _ NUM to ensure
updated state value from 365 to 366 and adjusted type assignment in DebugExpressionParser . java to ensure correct type representation for debugging expressions
updated dependency exclusion logic to check if a dependency is in classpath of the specified scope to improve dependency management by ensuring only relevant dependencies are processed
replaced the ` tmp ( ) ` method with ` dst2 ( v ) ` and modified the ` lerp ` method signature to
set default value of ` args ` to an empty array in ` GridHubConfiguration . java ` to ensure that the ` args ` array is
updated linker argument handling in RustBinaryDescription and RustLinkerIntegrationTest to use ImmutableList instead of List to improve flexibility in linker
[ # 8368 ] adminemailpageuitest : update test to use travis and appveyor
added Hive query name handling and improved logging in GenericUDTFGetSplits to enhance query identification and provide clearer context for generated appID
removed unused import of java . io . File in TileAtlas . java to clean up the code and improve readability
[ netbeans - 4487 ] gradle daemon should show an error message if the build can not be complete .
modified the ` validateQuery ` method to accept a variable number of arguments for improved error handling to enhance flexibility in query validation by allowing
updated INDEX _ VERSION from 1 to 2 and removed an unused field in LuceneExecutor . java to improve code clarity and maintainability by
[ flink - 11323 ] [ runtime ] add kryoserializerregistrationstest to verify default kryo registration
added null check before removing a property in the configuration to avoid potential NullPointerExceptions during property removal
refactor boolean handling in MetaStoreDirectSql . java to use Apache Commons BooleanUtils for better readability to improve code maintainability and
added a call to hide the customization drawer in the Launcher class to improve user experience by hiding the customization drawer when needed
replaced warning handling logic in TermVectorComponent to utilize a static final string for warning keys to improve code clarity and maintainability by
added conditional logging for optimistic types and modified log message formatting to improve clarity of log output and enhance readability of log output
refactor Expect . java to improve code structure to enhance maintainability and readability of the code
added UnixSocketConfigurationStrategy to DockerClientFactory and created a new UnixSocketConfigurationStrategy class to enable Unix socket Docker access for improved testing
added JUnit Tag annotation to testEvenLowRateIP method in CloseableDoSFilterTest . java to categorize tests as flaky for
( chore ) camel - reactive - streams : throw a specific exception when there be no active subscription
refactor vectorization methods to use ` convertMapWork ` instead of ` validateMRTask ` and ` validateMRTask ` to improve code
added a boolean parameter to the superclass constructors in StringAppender and LogDivertAppender to enable additional functionality in the appender classes
do n ' t call guicackage . getinstance ( ) when it ' s null
[ gr - 18654 ] add linkage . isweak to llvm parser for weak function .
refactor XShareAuto , LoadClassNegative , XCheckJSig , and ReadFromNoaccessArea classes to improve code organization and maintainability
# 169 - add test for defaulttransactionthreadlocal ( # 169 )
added a check for invalid operation handles in the TCloseOperationResp response to improve error handling and logging for invalid operations
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - 17644 - camel - aws - secret - manager - create component - aws secret manager - add test
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed error message from the email response in UserREST . java to simplify the error message for better readability
added a ` subTree ` parameter to the ` fromContent ` methods and updated the logic for determining the parent hierarchy to enhance functionality by allowing
adjusted the calculation of default column width in the Sheet class and added unit tests for column width functionality to ensure correct calculation of column widths for
added a new parameter ` configPath ` to the ` Commands . less ` method to provide configuration file support for the less command
replaced ` Set ` with ` Collection ` for ` tables ` and ` weakAssociations ` in ` DotWriter . java ` and ` Graph
( chore ) camel - testcontainers : use 1.0 . 0 for sshd . container . image
remove the assertion that be n ' t need since hostid be always non - null .
refactor rawKey assignment in DefaultGroupKeyGenerator to use BlockSingleValIterator for multi - valued columns to simplify key generation logic and improve
updated tests in TestMultiMMap to handle seeking exceptions more accurately to improve robustness of seek operations and provide clearer error messages
replaced ` IngredientStack . of ( ) ` with ` IngredientNBTBC ( ) ` in ` B
rename put ( ) to putobject ( ) for clarity
simplified visibility logic in CellLayout and refactored drag exit handling in Workspace to improve code readability and maintainability by reducing
updated ModifyRequestBodyGatewayFilterFactory to use originalBody for the rewrite function and added a test for empty request bodies to improve code clarity and
added a check for package accessibility in ConstructorFinder , FieldFinder , and MethodFinder classes to enhance security by ensuring types are both public and
replaced logger . warn calls with logger . trace calls in LoggingHandler . java to reduce log verbosity and provide more granular logging information
fix issue # 348 : whiteblacklist do n ' t handle wildcard correctly
added imports for AppTourHelper and StorageManager , and modified options menu handling in GalleryActivity . java to enhance user experience by allowing users
refactor MongoDBServiceFactory to initialize the instance of MongoDBService only once to improve efficiency by avoiding multiple instances of the service
added tests for boolean replacements in InlineConstantMutatorTest to ensure correct handling of boolean values in code formatting
added Blackhole functionality to the decode method in RecordTest . java to enable the use of the Blackhole during decoding operations
chore ( ruby ) : update gapic - generator - java with mock service generation fix ( # 450 )
updated ` getAllUnitStrings ` to return a ` Map . Entry < String , String > ` instead of a ` String ` to improve type
removed the clear method call from dbManager to ensure the witnesses are reset before running tests
do n ' t throw prestoexception in jdbcpagesink . abort
replaced stack setting method with getter and setter methods for the " stack " property in NativeError . java to improve clarity and functionality of
removed a condition that checks if the path name does not start with a dot to simplify the path filtering logic by eliminating unnecessary checks
renamed ` onboard ` to ` autoLoad ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAn
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is reset before running tests
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 in HSSFFont . java to accommodate a new
changed fThreadGroup to be volatile and modified fLookForStuckThread to be final in Timeout class to ensure thread - safe access to
updated the formatting of the ` getValue ` and ` setValue ` methods in ` ValueResultData ` to improve code readability and maintain consistency
replaced a null check with a superclass implementation in FuzzyQuery to ensure proper equality checks and avoid potential NullPointerExceptions
removed unnecessary debug print statements for the target variable in PushedResourcesTest . java to clean up the code and reduce unnecessary console output
changed return type of ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` to ` void ` and removed unnecessary return
updated the product version in JdbcDriverInfoRetrieverTest from " 2.5 . 1 " to " 2.6 . 0 " to ensure
updated the ` retrievePersonAttributes ` method to use an empty ` HashMap ` and modified the principal creation process to enhance flexibility in principal resolution
changed log level from info to warn for missing serial port and host / IP in OpenWebNetBridgeHandler to provide a less severe indication
updated method names from intHash and longHash to hash across multiple classes to improve clarity and consistency in naming conventions
added a constructor to ThumbnailGenerationTask that accepts a FileDataStorageManager and a valid account to ensure that the storageManager is not null
updated the loop condition in GroupSelectionQuery . java to check the number of attempts before stopping the query to ensure that the query does not hang
added a new class Bug1933922 that manages a thread - safe program compilation map to facilitate thread - safe program
removed unnecessary parentheses in comparison methods across multiple classes to improve code readability and maintainability
updated the validation condition for control characters in FileResolver . java to ensure that only valid control characters are accepted
added a call to requestFocus ( ) in the Display class to ensure the component receives focus when needed
update instructor home page ui test to use final test data
rename JsonParserAsync to JsonStreamParser across multiple files to improve clarity and specificity of the parser ' s purpose
updated Crouton cancellation logic in DetailFragment and refactored the onPause method in MainActivity to improve user experience by ensuring notifications are
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT ` to validate schema queries
refactor Dialog class to improve code structure to enhance maintainability and readability of the dialog implementation
replaced ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder . start ( ) ` for process execution to improve
updated the method to use ` InetAddress . getByName ( " 127.0 . 0.1 " ) ` instead of ` getLocalHost ( )
refactor subsystem initialization to use a loop for processing controllers to improve code readability and maintainability by consolidating controller - related logic into a
added assumptions to check if the Apple platform is available in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests only run when
move jvmciversioncheck . validateproperties into jvmciversioncheck . getrequiredproperty
updated Mockito library version in the project to ensure compatibility with the latest features and bug fixes
updated TestLargePageUseForAuxMemory . java file to improve memory allocation handling for large page scenarios
updated BinaryParser , PlainTextParser , and ParsingExecutionContextView to include charset handling to enhance parsing capabilities by allowing customizable character sets
added MultiPartFormDataCompliance enum and methods for compliance management in HttpConfiguration to establish a mechanism for handling multipart form data compliance
added support for JDK - 17 in GradleDistributionManager to support new features available in JDK 17
refactor type management in DatabaseSnapshot and SnapshotControl to use a new method for adding types to improve code readability and maintainability by encaps
refactor Term class to improve code structure to enhance maintainability and readability of the code
added null and empty checks for runWith in ChangeSet . java to ensure proper handling of null or empty runWith values
resolve http : / / issues . apache . org / activemq / browse / amq - 2296 - add test case for
updated AudioDeviceInfoBuilder , MediaCodecInfoBuilder , NativeInput , ShadowActivityManager , ShadowBiometricManager , ShadowLegacyMessage ,
pdf417BlackBox1testcase : make all positive blackbox tester less fragile
replace direct assignment of tintAmount with a new variable mTintAmount in TaskView . java to improve code readability and maintainability by
added a new file ` SumZeroFunctions . java ` for summing zero values in the Drill aggregation function to implement a new aggregation function
[ hotfix ] [ table - planner - blink ] remove not null constraint from schema
hbase - 26958 add more information to bucketallocatorexception when fail allocation
added a null check for propName before putting it into the properties map to avoid potential NullPointerExceptions when propName is null
added @ VisibleForTesting annotation to mTouchSlop , mCanIntercept , and mDownEvents in StatusBarTouchController . java , and
add logcontainerstream ( ) method to allow log container to be open indefinitely
add performance test for mvstore cache
updated LONG constant from " L " to " J " in PrimitiveType . java to reflect the correct representation of the long value
changed the access modifier of the delegatingApplicationListener method from instance to static to allow the method to be called without creating an instance of the
set the message body to null in RestBindingAdvice . java to ensure that the message body is not set after exchange processing
added new classes FileDeletingTasklet and TaskletJobFunctionalTests for file deletion and job functionalities to facilitate the management
mow - 169 update size and scale for plane in updatesizekaredrawables ( )
refactor bitwise operations in BitUtil , Int2IntCounterMap , Int2IntHashMap , and Int2IntCounterMap to improve code
updated ` sendEventToTest ` and ` goToOverviewUnchecked ` methods to use ` stateOrdinal ` instead of ` eventTag `
added user agent checks for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video thumbnail requests based on the renderer '
fix scrolltoerrorline ( ) to handle the case where there be no start / stop line
added conditional logic to adjust the layout of the title area based on the parent ' s theme constants to ensure proper alignment of buttons based on the
updated Skia . java to include " libskia " and modified value and link settings to ensure compatibility with the " libskia "
add support for unittestnet in networkparameters
added error handling for format arguments in QueryCommand to ensure users receive clear feedback when format arguments are missing
replaced ` capacity ` with ` length ` and updated related calculations in ` IntIterator . java ` to improve code clarity and maintainability
updated the ` walkRuleAndAdd ` method to include a ` srcRule ` parameter and modified its logic to conditionally visit dependencies based on
update patchmodulefilemanager to support source - level override module
[ java ] remove protocol version check for election that do n ' t have a major version .
added conditional logic to set the default policy based on authentication type to ensure that the OwnCloudClientManagerFactory uses the preferred policy based on SAML
added null checks for ` mappedTableResource ( table ) ` in ` ReadBatch ` and ` WriteBatch ` classes to ensure that ` mapped
refactored close logic to use a utility method to improve code readability and reduce duplication
refactor AnonymousAuthenticationFilter to use a Supplier for deferred context management to improve flexibility in handling anonymous authentication scenarios
updated the removeActor method to include an unfocus parameter and modified its logic in Group . java to enhance actor removal handling by allowing unfocus
refactor configuration prompt handling in SolrCLI . java to use a validConfigs variable to improve clarity and maintainability of configuration validation logic
added log level handling and improved channel writing logic in NettyHttpServer and RoutingInBoundHandler to enhance server logging capabilities and ensure proper
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
replaced ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` to improve UI responsiveness by
camel - 17181 : camel - groovy - optimize groovy script loading to reduce memory usage .
do n ' t include plugin artifact in the plugin manager ' s versionless artifact list , just return an empty map instead
[ hotfix ] [ cli ] make clifrontendparser . args option public
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
added logic to retrieve and display the storage key alias and certificate chain from the storage key to enhance security by allowing retrieval of the certificate chain from
danielwagnerhall : throw a webdriverexception if the response body be not a string
change access modifier of updateImage ( ) method from private to protected in ImageButton and ImageTextButton classes to allow subclasses to override the update
make block . dropresources ( blockstate , itemstack , boolean ) more consistent with block . dropresources ( blockstate , itemstack )
added spatial location calculator native methods to DataOutputQueue and depthai classes to enable spatial location calculator functionality in the application
refactor multiple Java classes related to community detection , GSA components , page rank , and source shortcuts to improve code organization and maintainability
replaced the method ` keySet ( ) . isEmpty ( ) ` with ` isEmpty ( _ root ) ` in ` TreeTrie . java `
updated color calculations in AttributedStringBuilder to use r , g , and b parameters instead of a fixed column to improve accuracy of color representation in
modified the ` doFingerprint ` assignment logic in ` PeerSync ` and ` PeerSyncTest ` to conditionally disable fingerprint synchronization based on system
changed the access modifier of the moveFunds method from private to public to allow external access to the method for better functionality
added event emission for PersonWithIdPropertyOfTypeUUID in MongoTemplate and modified test cases accordingly to enhance event handling and ensure compatibility with UUID
fix settransactiontest , use quicktest instead of problematictest
make sure to close the inputstream when we ' re done reading it
updated the exception handling from ApiBag . ExceptionWithErrObject to ApiException in TestCollectionAPIs . java to improve clarity and specificity
removed an unnecessary line of code in OptionsParser . java to improve code readability and maintainability
update instructorfeedbackaddactiontest and instructorfeedbackcopyactiontest to use correct variable name
[ hotfix ] fix checkstyle violation in pipeline / runner / externalworkerservice . java
removed the ` step ` field and its associated getter and setter methods from ` HmDatapoint ` and ` HomematicTypeGenerator
updated logging messages for shared and exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve clarity and functionality of lock ac
added scheduleJobs ( ) method to BaseSchedulerServiceImpl . java to ensure jobs are scheduled correctly during the scheduling process
simonstewart : fix the lameness of the istextpresent test
refactor Logger to use ThreadLocal for thread - local logger management to improve thread safety and reduce memory usage during logger initialization
added the @ VisibleForTesting annotation to the convertToCompilationUnit method and replaced JMockit with MockitoJUnitRunner in FunctionInitializerTest to
implemented boxed type handling in type checking and introduced a new class with utility methods for obtaining generic values to enhance type safety by ensuring primitive types are managed correctly and provide utility for handling various generic
update task orientation handling in RecentsView and remove redundant initialization in TaskView to improve code clarity and ensure proper state management for task
hbase - 25839 testflushfromclient . testflushfromclient fail on slow ci server
added logic to clone the original repository and delete the new contract if it exists in the cache to ensure that the contract details are correctly stored and
updated balance calculations to use dynamic properties instead of a fixed TOKEN _ ISSUE _ FEE constant to ensure consistency in asset issue fees
refactor texture caching and cache management in RealisticRenderStrategy . java to improve cache management and resource cleanup to enhance performance and maintainability by
refactor raster creation and compositing in Blit . java and add a new class Bug7049339 . java for testing
added unselected style handling and updated string width calculations in multiple classes to improve text display consistency and ensure proper width calculations when unselected styles are
updated ArrayList initializations to specify initial capacity and modified action list initialization in multiple classes to optimize memory allocation and improve performance by pre - allocating
removed unnecessary ` flags ` parameter from method signatures in ` queryImplicitIntentServices ` , ` queryImplicitIntentActivities ` , and ` queryImplicit
refactor PingRequestHandler to improve code readability to enhance maintainability and reduce complexity
skip transform test on api < 25
refactor old firmware check logic in TradfriGatewayHandler . java to improve clarity and maintainability of the code
refactor AjaxElementLocator to improve code readability to enhance maintainability and facilitate future updates
updated the condition in BoxLayout and DefaultLayout to include " table - cell " as a valid display to ensure proper handling of table - cell
refactor JsonDecoder to improve token handling and add unit tests for field reordering to enhance functionality and ensure correctness of field ordering in JSON
updated the listener to include a removal cause parameter in BlockCache . java to improve clarity and maintainability of the listener implementation
[ hotfix ] [ test ] disable savepointtestbase test
added @ Test annotations to DroolsMvelParserTest . java to enable unit testing for the DroolsMvelParser functionality
changed instance variables to final in ContextRegisterListener . java to enforce immutability for better thread safety and maintainability
refactor ObjectHashSet to initialize the iterator in the constructor instead of creating a new one each time to improve flexibility in iterator initialization and ensure
added batchBytes handling in SparkReduceRecordHandler and ReduceRecordSource to ensure batch size does not exceed defined limits to prevent out - of -
updated context constants from MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE in AppSettings and Update
updated logging messages and added handling for " abort ( ) " in JdbcProxyGenerator . java to improve clarity of logging and ensure proper resource
updated the animation state retrieval and added accessibility import logic in Workspace . java to improve accessibility support for different states during animations
change log level from warn to debug in ProtobufLogReader . java to reduce log verbosity for malformed edits
updated scope assignment in UaaTokenServices . java and added unit tests in UaaTokenServicesTests . java to ensure scope does not exceed
updated import statements in ` SchemaRetrievalOptionsBuilderTest . java ` and modified logger initialization in ` AvailableJDBCDrivers . java ` , while updating
jbpm - 4640 introduce executablecommand interface to allow execution of executable command
( chore ) camel - jms : remove unused jdbctableservice
added padding retrieval methods in CellLayout and modified bitmap creation in Launcher to improve layout handling and optimize bitmap scaling based on orientation
added a conditional check to initialize cands based on the presence of a StringBuilder before processing to optimize performance by avoiding unnecessary stream operations when the
replaced instances of ` SamlMetadataUIParserAction ` with ` Action ` and added null check for ` flow ` in multiple files to
added a method to check and print LDAP ports in LdapMockMvcTests . java to ensure that all available LDAP ports are available for testing
log4j2 - 1349 : fix checkstyle issue in log4j - core
updated URL handling logic in Fetcher . java and HTMLMetaProcessor . java to improve redirect logic and ensure proper handling of protocol redirects
updated SolrQuery to use " name : samsang " instead of " * : * " and modified the assertion in TestSpellCheck
refactor Console initialization in TerminalServlet to use the old Karaf Console API or a new one to enhance compatibility with different terminal implementations and
bugfix : fixed arrayindexoutofboundsexception in meshhelper . getverticescolors ( )
added file filtering capabilities to exclude timed reports directories during the copy process to improve data integrity by preventing stale reports from being generated
[ hotfix ] [ test ] use parameterizedtest instead of junit in datavalidatortest
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added null check for bindStatus in FieldUtils . java to throw TemplateProcessingException when an expression is not executed inside the adequate context
removed debug print statement from JoglInput . java to clean up the code and reduce unnecessary console output
added a new boolean flag ` allowExtractingPrivateFields ` and modified the ` readField ` method to accept it to control extraction of private
replace " { name } " with device . getName ( ) in WebDataHandler . java to ensure the device name is properly formatted for better
updated lookup constructor handling in Platform . java to use MethodHandles . lookup ( ) when Java 8 types are present to improve compatibility with Java 8
replaced the deprecated method ` weights ` with ` weightsByDouble ` in ` ZParams ` and introduced a new method ` weightsByDouble
added a Database parameter to the writeCustomHTML method across multiple writer classes to enable the use of a specific database during HTML writing operations
updated BTreeMap . java to remove unnecessary type casting and added assertions for key deserialization to improve code clarity and prevent potential null pointer exceptions
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to throw specific BalancesInsufficientException and InvalidProtocol
bugfix # 207270 , do n ' t write zero file to heap
refactor error handling in ChangeSet and Main classes to use UI messaging instead of standard output to improve user experience by providing clearer and more
updated buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and removed generic record insertion in Hortonworks
added import statements for ChunkListener and ItemProcessListener in multiple Java files to enhance event handling capabilities within batch processing
refactor code for improved readability and consistency in AbstractProviderModule . java to enhance maintainability and clarity of the code
updated print statements to use consistent variable names and simplified method calls to improve code readability and maintainability
updated Test7005594 . java file to improve test coverage and fix existing issues
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class implementation to improve code organization and maintainability
server : fix npe when try to map vm to a non - existent ip address .
update gamepad modifier detection to support analog input instead of digital input
refactor ` iteratesOverSequence ` and ` iteratesOverAsList ` methods to accept ` Iterable < T > ` instead of ` Object `
camel - 9487 fixed the issue of camel - http header filter not work when use jetty 9 .
added assertions to verify the correct number of results from various database queries in ActivityHistorySQLServerStoredProcedureTest to ensure that the database queries return
added a new ` LargeValueFormatter ` to handle large chart values and updated label generation logic to improve chart readability and ensure consistent label
replaced hardcoded character ' z ' with a constant INNOCUOS _ CHAR in CommentsParser . java to improve code readability and
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to eliminate unnecessary warnings related to incompatible argument types
removed unnecessary whitespace in TraceLinearScanLifetimeAnalysisPhase . java to improve code readability and maintain consistency in formatting
added a TODO comment in NullAssertionValidator . java to implement auto - generated method stub functionality
added import for RuleKeyAppendable and modified buildRule logic to append " . buck " to rule keys to enhance rule key management for
added directory creation for system profile directory and refactored test setup and teardown methods in DLNAMediaInfoTest and SearchRequestHandlerTest
refactored the creation of the ` NioEventLoopGroup ` instance to use a new method ` createThreadFactory ( ) ` to
refactor message retrieval in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code readability and maintainability by
added " accept " attribute to the ImageFileInputDialog to specify the file type accepted by the user
replaced TransportClient and TransportClient with PreBuiltTransportClient and updated client initialization in ElasticIndexWriter . java and TestElasticIndexWriter .
added detailed logging of witnesses and their class names in ForkController . java to improve debugging and traceability of witness - related objects
added a new test class ` NullPointerAndEmptyArrayTest ` to validate behavior of ` CustomURLClassLoader ` when handling null and empty arrays
refactor methods in BaseIjModuleRule and IjProjectBuckConfig for better handling of generated source paths to improve code clarity
added support for escaping wildcard patterns with any character delimiters in UaaStringUtils to enhance flexibility in matching patterns by allowing wildcard patterns with any
added checks for invalid aliases in the map work to ensure that only one TableScanOperator can work with the map work to avoid unnecessary failures
updated MockitoJUnitRunner import and modified exception handling in WeatherQueryTest . java to ensure compatibility with the latest Mockito library and
added error handling for firmware setting updates in TinyGFirmwareSettings . java to improve robustness by logging warnings when setting values cannot be
replaced specific imports with a wildcard import and modified the ` getLangs ` method to return a ` Set < String > ` instead of an
removed redundant assertions in LazyTraceScheduledThreadPoolExecutorTests . java to improve code readability and maintainability
hbase - 25816 snapshotmanager . takesnapshot ( ) should not try to load tableinfo when snapshot creation fails
[ wasm ] add support for j2cl ' s ` ` isnull ' ' method .
added a test for modifying the HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the explorer updates the HTTP RPC endpoint correctly
added a volatile boolean ` isSuspended ` and modified thread state checks in ` Thread . java ` to ensure proper handling of thread suspension
updated JavadocVisitor to use hidden and see methods instead of Author and Since methods to improve Javadoc representation for better clarity and functionality
camel - 16400 : fix camel - spring - dsl to work with multiple camel context .
removed redundant @ Override annotations from multiple security - related classes to improve code clarity and maintainability
added module import support in Java2TypeScriptAdapter and updated test assertions in EnumTests to ensure correct module usage and improve test reliability
use http : / / www . w3 . org / 2001 / XMLSchema instead of xmlconstants . w3c _ xml _
added content description handling for badged apps in BubbleTextView to improve user feedback by displaying relevant badge information
added mouse wheel support in TestMouseWheelScroll . java to enable scrolling functionality based on mouse wheel events
added resource closing for PDF documents in VisualTester and implemented a new test for positioning absolute in VisualRegressionTest to ensure proper resource
updated currency pairs from " BTC " to " XRB _ BTC " in KucoinAdapters and KucoinIntegrationTests to
replaced instances of ` VacuumEnvironment . Location . A ` with ` VacuumEnvironment . LOCATION _ A ` and
simplified the currency return statement by eliminating redundant currency checks to improve code readability and maintainability
replaced Set with ImmutableSet and updated default field handling in JsonFormat . java to improve performance and clarity when outputing default fields
removed unnecessary handling for array and enum types in JacksonXmlFormatMapper to simplify the code for better readability and maintainability
updated thread state constants and refactored thread references in VirtualThread . java to improve clarity and functionality of thread management in the code
updated DirectoryTaxonomyWriter to include catTerm as a parameter and modified related code for better clarity to enhance code readability and maintainability by
refactor VetoableChangeSupport class for improved clarity to enhance maintainability and readability of the code
adjusted the calculation for the Y - coordinate in the BrowserContentPane class to correctly account for the height difference between the owner and its height
pdfbox - 2576 : remove throw invalidpasswordexception from method signature , a suggest by valerybokov
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
[ web ] make inputbar help and close button accessible in web
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code readability and maintainability
replaced Thread . sleep with ThreadHelper . waitUntil for better responsiveness to improve code readability and maintainability by utilizing a
replaced version comparison logic with release status check in SwingStartup . java to ensure proper handling of release status and avoid unnecessary preferences updates
added support for include generated file comment in migration XML output to enhance clarity and control over migration behavior
updated command usage strings to allow wildcard matching for player names to enhance flexibility in command usage for improved user experience
deleted BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove obsolete filters related to HDFS and Zookeeper
updated method calls from ` nameVariableName ` to ` optionName ` in ` OptionProcessor . java ` to ensure consistency in naming conventions for option
fix flaky testngcontenthandler . testngcontent ( ) with parallel = true
refactor enableActingMaster logic and replace null check with StringUtils . isEmpty to improve code readability and ensure proper handling of empty string checks
refactor : remove static import of enums in ctmethodimpl . java ( # 2699 )
added serialVersionUID fields to multiple Java classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code readability and maintainability
updated ShibbolethCompatiblePersistentIdGenerator to use CONST _ SEPARATOR for SHA - 1 hashing and added a test for its functionality to ensure
added null check for SYSTEM _ ACTIONS _ ENABLED in Parameters . java and modified the condition for systemActionsEnabled in TestAction . java to
added a new class ` Person ` with a private field ` name ` in the ` Person ` class to facilitate the representation of
patch by jbellis ; review by stu hood for cassandra - 1491
updated the case - insensitive check for ` timeStr ` in ` AbstractClient . java ` to ensure case - insensitive comparison for ` timeStr
added assertions for time column , timeUnit , and totalDocs in SegmentMetadataImplTest . java and updated segmentMetadata in SegmentMetadataImpl . java
replaced ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` and updated the foreground color
added a call to disconnectEmitters . onNext ( new Object ( ) ) in NettyStreamingService . java to enable the disconnection of
change defaultbeancontext to use getannotationtypesbystereotype ( ) instead of getannotationnamesbystereotype ( )
simonstewart : add a test that verify that click on an element hidden by double overflow do n ' t work
added a try - catch block around dismissing the dialog to handle potential exceptions during dialog dismissal
added support for a custom JTA TransactionSynchronizationRegistry location in JtaTransactionManager to enhance flexibility by allowing the JTA TransactionSynchronizationRegistry
changed the visibility of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to simplify the code by eliminating unnecessary functionality
rename variable ` enabledCiphers ` to ` result ` and update related logic in ` JSSESocketFactory . java ` to improve code cl
[ beam - 10660 ] fix timestamp type in bigquery storage api ( # 12938 )
replaced repeated null checks with requireNonNull for buffer and user credentials to improve code readability and maintainability by reducing redundancy
fix : use inputmap . getordefault ( ) instead of input . get ( ) in valuesresolver
added boundary checks for row and column indices in FlightConfigurablePanel to ensure that the index does not exceed the table ' s dimensions
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user experience by ensuring the selection
fix unnecessarylocalbeforereturn fp with method
replaced the initialization of ` scriptEngineManager ` with a direct assignment of ` scriptEngine ` to streamline the code by eliminating
pdfbox - 4071 : simplify distance similarity calculation , a suggest by valerybokov
replace incrementallybackup ( ) with maybeincrementallybackup ( )
updated the ` relativize ` method to accept two ` Path ` parameters and added a new test for handling dot - dot paths to improve
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator and modified value construction in DataType to ensure proper handling of null values and improve
updated file deletion logic in DeadLetterQueueWriterTest . java to exclude the current writer head file to ensure that the test does not include unnecessary
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpc
renamed ` ErrorHandlerController ` to ` Error403Controller ` and created new classes ` Error404Controller ` and ` Error404Controller `
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal and Windows
refactor Tiny . java to use ExpressionTree and NewArrayTree instead of MethodInvocationTree and update variable triggers to improve compatibility with Java
refactor connection acquisition logic in ConnectionPool . java to improve readability and maintainability of the code
updated method names from ` getDateConverter ` to ` getLdapDateConverter ` in ` LPPEAuthenticationHandler ` and ` PasswordPolicyConfiguration
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to improve clarity of error messages for better debugging
added exception handling for reader and writer threads in LargeStreamletTest . java to improve error handling by allowing more time for threads to complete
updated the logic for setting the current item in HomeFragment to dynamically increment extra pages based on user preferences to improve user experience by dynamically adjusting
added error handling for Bitmap creation and bitmap allocation in AndroidImplementation . java to improve robustness by preventing crashes due to image loading issues
added SuppressSubnodes annotation and simplified return statements in BaseParser . java to improve code readability and maintainability by eliminating unnecessary sup
pdfbox - 4892 : use try - with - resources to prevent resource leak
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the current implementation
added a shell command to execute a specific input event in AbstractLauncherUiTest . java and modified the assertion in LauncherInstrumentation . java
added JSON serialization for output file paths in FileDumper . java to enable proper handling of output file paths for improved file management
bugfix # 216271 , do not synchronize on ` ` resultsnotifiedlock ' '
make texturehelper . loadimage ( ) override loadimage ( ) so it can be override by subclass .
update context ID assertions from " application : " to " application " in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrap
updated test cases for the IsbnRandomizer to use a different seed and locale to ensure tests validate the correct randomization functionality
updated notification sound setting to use a ringtone URI instead of a default URI to improve user experience by allowing customizable ringtone settings
added a method to report loop count in RootNode . java to ensure that loop count is properly reported when a call target is a LoopCount
added a condition to finalize the cluster version based on repository type and updated the cluster entity merging to ensure proper version management during upgrade processes
portableip : fix search by regionid to use regionid instead of rangeid
removed redundant call to streamManager . open in ItemOrientedStep . java to improve code clarity and maintainability
added a new file CountedLoopProblem . java that generates a counted loop problem with a random value to verify the correctness of the generated
[ jvmci ] remove unused argument from executecompiledmethod and executecompiledmethodvarargs
make pendingfailedspeculationoffset default to jlong if jlong be not available .
replaced TransformerSupplier with ValueTransformerWithKeySupplier in KafkaStreamsTracing . java to enhance tracing capabilities by utilizing a more suitable transformer type
[ # 7344 ] feedbacksumquestiondetails : show response point in ui ( # 7346 )
removed DynamicColors . applyToActivitiesIfAvailable ( this ) method from BaseApplication . java to streamline color application process by eliminating unnecessary
added thread management and stack dump functionality in CloseRace . java to improve error handling and debugging during thread termination
updated return statement to use ` intValue ( ) ` instead of ` val ` and added multiple assertions in ` TestPointFields . java ` to
updated the arc size variable from an integer to a double and adjusted its value based on the width to improve the accuracy of the arc size based
increased the width of veryHighWidth and veryHighWidth values from 720 to 640 in AddAndScaleMultiImage . java
renamed ` isMinifySqlEnabled ` to ` isShrinkWhitespacesInSql ` and updated related methods accordingly to clarify the
refactor ` waitForStateTransitionToEnd ` methods in ` AbstractLauncherUiTest ` and ` WorkProfileTest ` to improve state transition handling
added configuration classes for authentication and logout functionalities in multiple test classes to ensure proper integration and functionality of the CAS framework
replaced direct byte reading from ` raf . readLong ( ) ` with ` DataIO . getLong ( ) ` for reading long values to improve
camel - 3560 : camel - http should not use fluent template if debug level be enabled
refactor ClassPath creation in DeclarativeHintsParser to use a builder for bootCP and systemCP to improve clarity and maintainability
chore ( script ) : add support for audio and voice scope ( # 4893 )
added methods to retrieve and set the layer manager in AnimComposer and modified AnimEvent to utilize them to enhance layer management capabilities and
added a check to return early if there ' s no queue in DeferredHandler . java and removed the showDefaultScreen method from Workspace . java
added null checks for mapOp and mapWork in MapRecordProcessor . java and modified exception handling in TezProcessor . java to improve robust
removed the ` center2D ` variable and refactored the ` setCenter ` method in ` CylinderRegion . java ` to
replaced usage exception assertions with JUnit ' s ExpectedException rule to improve test clarity and maintainability by utilizing JUnit ' s
added null check for subparams before sending a query in QueryExecutorImpl . java and implemented a test for multi - execution in StatementTest .
do n ' t log ` ` custom security environment ' ' if it ' s not set
added " rctag = android% 20app% 20edit " to the GET GET request in ReviewInterface . java to enable support for
refactor Test . java to improve code structure to enhance maintainability and readability of the test cases
replaced ` blkSize * 8 ` with ` keyLength ` in the PBEKeySpec constructor to ensure the correct key length is used for
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a call to writeSectionDefinition ( ) in RtfDocumentHeader . java to enable the writing of section definitions in the document header
added a check for large jump detection in GpsLoggingService . java and updated the accuracy check in Maths . java to handle cases where
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve performance by elimin
doc : generate sample code in the java microgenerator ( # 324 )
replace boolean flags with WeakReference for rootNameFn and sourceFilterFn in InsightFilter to improve memory management and prevent memory leaks
simplified the addition of items to the data and added list in AllAppsList . java to improve code efficiency and readability by elim
replaced ThemedPreferenceActivity with PreferenceActivity in SettingsActivity and removed ThemedPreferenceActivity to simplify theme management and streamline activity
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to accurately reflect the purpose of
removed unnecessary whitespace in assert statement in FST . java to improve code readability and maintainability
added an assertion to check if the security policy exists and is a file to ensure that the security policy is valid before proceeding with tests
camel - 15850 : camel - olingo2 - add miss getconfiguration ( ) method to olingo2component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for thread execution before proceeding
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify the logging output for better readability
add an option to publish an image by http using smackx
camel - 7999 : fixed the npe issue of nettyproducer . getchannel ( )
[ clickhouse ] fix spliturl ( ) to handle valid host name
remove the system property ` org . apache . jasper . compiler . disablejsr199 ` in ` FragmentActivator . java `
added support for null string values in CSVRecordReader and CSVRecordReaderConfig to enable flexible handling of null values in CSV output
added LiquibaseService import and annotation to multiple connection classes to skip database operations during Liquibase integration
updated cursor type from ` J . CompilationUnit ` to ` JavaSourceFile ` in ` VariableNameUtils . java ` to ensure accurate cursor handling
change event topic name to ` ` / command ' ' instead of ` ` / item ' ' ( # 4335 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to align with
replaced deprecated case " zkCredientialsProvider " with " zkCredentialsProvider " and removed redundant variable declarations in TestSolrXml .
improve the mana tablet ' s damage calculation and make it a little more permissive .
added a method to set the identifier collection in mCurrentCallEvent to ensure the identifier collection is properly initialized before use
removed unused imports of HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter to clean up the code and improve maintainability
updated thread pool name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " in ScryptUtil .
refactor GeneratedCode class to improve code readability to enhance maintainability and facilitate future development
updated assertion message in TypeDefinitionRegistry to include the definition parameter to improve clarity of error reporting for better debugging
added visibility setting for the share - with - me icon in the LocalFileListAdapter to hide the share - with - me icon to improve user
updated link links from HTTP to HTTPS in DefaultLogoutPageGeneratingFilter and LogoutPageGeneratingWebFilter to enhance security by using a secure connection
updated RouterFilter to enforce non - null headers and changed method calls from ` null ` to ` Collections . emptyMap ( ) ` to improve robust
enhanced assertion in TestIndexWriterMergePolicy to include detailed context to improve debugging information for assertion failures
added @ Deprecated annotation to multiple classes to indicate that these classes are outdated and should not be used in new development
added null check for context in CrawlerSessionManagerValve and modified test cases for context awareness to enhance robustness of context handling and ensure
added security check to the getJspApplicationContext method in JspFactoryImpl to ensure proper retrieval of JspApplicationContext when security is enabled
updated length calculation logic in RocketComponentConfig . java to use minimum and maximum values based on axial methods to improve accuracy in determining the
removed the Singleton annotation from NonceService and updated the binding method in OpenIDAuthenticationProviderModule to improve dependency management by ensuring the NonceService is only
fix update of child link in filewrapper
refactor doExecute method for improved readability and consistency to enhance maintainability and clarity of the code
increased the delay in the publishWithDelay method from 100ms to 500ms to allow for more time for the publish operation to complete
add a ` ` always ' ' attribute to control if shift code be always override .
[ hotfix ] [ runtime ] fix the logic for determine if a node be currently the leader for a specific role
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition in AbstractKerberosDescriptorContainer to use isReference ( ) instead of getName ( ) to improve clarity and accuracy of
updated method signatures in ArtifactCacheFactory and related classes to use a noop parameter instead of AbstractCommandOptions to improve clarity and flexibility in
added a delay of 3000 milliseconds in the exception handling to allow for a longer wait time before proceeding with operations
fix bug where method call . getarguments ( ) do n ' t restore original argument .
replaced ` Map ` with ` Set ` for managing ` RawNativeLibraryImpl ` instances to improve performance and simplify library retrieval logic
int - 1187 - add support for ' apply - sequence ' and ' ignore - send - failures ' attribute to the router element
added support for publishing a X.509 certificate in the ClientKeyPublisher and JwkViewResolver classes to enable the publishing of X.509
updated the handling of the readers array in QueryComponent . java to ensure that the correct subReader is assigned when there is only one reader to
replaced the custom MaxFloatFunction with a custom Double2Parser for max and min calculations to enhance functionality by allowing mathematical operations
simplified return statement in Container . java by removing focusable and pointer events check to streamline code logic for better readability and maintain
removed IOException declaration from the next ( ) method in TokenSources . java to simplify error handling by eliminating unnecessary exceptions
cloudstack - 3446 : fix user creation by add uuid to the user table
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use @ Qualifier and ObjectProvider for flowBuilderServices to
updated database connection settings and refactored connection handling in WriteJdbcPTest . java to enhance database connection management and improve code readability
removed conditional check for the editor . laf preference before setting the UI look and feel to simplify the initialization process and ensure the Laf
refactor code to replace calls to getStateEntity ( ) with direct access to stateEntity and desiredStateEntity to improve code readability and maintain
simplified the calculation of ` dX ` and ` lp . leftMargin ` in ` FloatingTaskView . java ` to improve
added a conditional check for the running state in RootFolder . java and updated the status line in NavigationShareTab . java to ensure proper handling
do n ' t increment thread id to avoid deadlock
mob - 1293 : do n ' t call getalltools ( ) when not need
added NetworkAddressChangeListener interface to HomekitImpl and updated logging messages in HomeKitImpl to enhance network address handling and improve log clarity for
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of leaseManager to
replaced ` Optional . < SourcePath > absent ( ) ` with ` Optional . absent ( ) ` for prefixHeader and linkStyle to
added a null check for the exception message in ExceptionHandlerRegistryFactory . java and created a corresponding test in ExceptionHandlerRegistryTest . java to
changed the ` nextID ` variable to be volatile and modified the ` getSize ` method to ensure thread - safe access to ` nextID `
resolve intermittent ci failure
added a new interface ` HasSourcePath ` and modified existing classes to implement it to enhance functionality by providing source path management capabilities
replaced StringBuffer instantiation with direct string concatenation in IllegalArgumentException message to simplify exception handling by eliminating unnecessary string concatenation
added custom index field name for " $ tags " and modified facet handling in ` OrdinalMappingAtomicReader ` and ` TestOrdinalMapping
updated the ` toEpochMilli ` method to handle negative seconds and negative nanos correctly to ensure accurate calculation of epoch milliseconds when both values are positive
use getbuffertype ( ) . name ( ) instead of getbuffertype ( ) in lwjglrenderer and oglesshaderrenderer
added conditional logic to block update scripts based on application state to enhance user experience by preventing unintended scripts from being blocked
added a new file ` TestCMoveLimitType . java ` that implements a test for ` CharBuffer ` operations to facilitate
refactor audio packet handling and metadata management across multiple classes to improve efficiency and maintainability of audio packet processing
( chore ) camel - sql - parser : fix potential arrayindexoutofboundsexception
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor code to encapsulate version printing logic into a separate method and improve code readability to enhance maintainability and facilitate easier
refactored token validation logic in InputStreamBinder and NextcloudRequest classes to improve security and maintainability by centralizing token validation logic
improve error handling by throw eofexception instead of return false
improve test coverage for deletemember method in defaultgroupprovider
( chore ) camel - core : remove unnecessary object [ ] object [ ] constructor call
deleted the V2ReplicationProtocol . java file to the class is no longer needed for the current protocol version
replaced ` ImmutableSortedSet < BuildRule > ` with ` ImmutableSortedSet < SourcePath > ` across multiple files to standardize the
added new classes ` ConstructorArgsDemo ` , ` FinalDemo ` , and ` StrictDemo ` while renaming ` StupidFinal ` to
make directtemplatefeaturecollectionfactory thread - safe and add close ( ) method .
updated assertion condition in WriteResponseHandler to include a new replication factor to ensure that responseCount does not exceed 2 * DatabaseDescriptor . getReplication
added a null check for the index number in ItemRowAdapter . java to prevent potential NullPointerException when accessing item properties
corrected the spelling of " areAnchestors " to " areAncestors " across multiple files to improve code readability and maintain
bugfix : if the app ' s width be less than 12 , do n ' t try to display it
updated equality check from ` = = ` to ` . equals ( ) ` in ` ChangeLogParameters ` and added a new test for value
changed the ` loggers ` variable from static to instance variable in ` LogFactory ` to ensure that the ` loggers ` map cannot be reassigned
update return statement to use getBasePlot ( false ) instead of p to ensure the method returns the correct base plot instance
[ hotfix ] [ rest ] log warn when upload directory do not exist
added a boolean parameter ` sendStatus200 ` to multiple classes to control HTTP response status to ensure proper handling of HTTP requests based on the status
added a condition to check if the comment length is greater than zero before processing multi - line comments to ensure that multi - line comments are only
added functionality to manage file type associations in BuckModule to ensure proper file type associations are removed when a specific file type is accepted
replaced multiple specific function imports with wildcard imports and changed the return type of multiplication methods from ToLong to ToInt to simplify import statements and
added RTM OS error message and improved error handling for unsupported CPU options in TestUseRTMLockingOptionOnUnsupportedCPU . java
reformatted code for consistency in ` AccountsActivityTest . java ` to improve code readability and maintainability
refactor Player class to improve code structure to enhance maintainability and readability of the code
added a mockito package import for ChannelTypeUID in AbstractModbusOSGiTest . java to enable mocking of ChannelTypeUID
fix a findbugs warning in polyglotexceptionimpl . java .
set ` systemContext ` to null in ` AndroidTestEnvironment ` and implement context resetting in ` ShadowFontsContract ` to ensure proper context
added methods to calculate milliseconds and time zones in TimeGranularity and PinotDataSourceMaxTime classes to improve time handling logic and ensure consistent time
added null check for the ` getFinally ( ) ` method and improved control flow handling in ` ControlFlow . java ` to enhance
added error handling for arrays with different sizes in Assert . java and updated test cases in ArrayEqualityAssertTest . java to improve robustness of
added default cases for default cases in WindowClickLogic . java to improve code readability and prevent potential null pointer exceptions
corrected the bitwise operation in MeshBuilder . java to ensure proper handling of index values by correcting the bitwise operation
nifi - 1341 : remove unused variable in standardprocessscheduler
added support for processing KAPT3 plugins in KotlincToJarStepFactory and created a test for KotlinLibraryIntegration
updated RESCROLL _ DELAY constant and simplified page navigation logic in DragController , PagedView , and Workspace classes to improve code read
added shortcut permission checks and refresh functionality in LauncherModel and DeepShortcutManager to ensure shortcuts are refreshed only when the app has the necessary permissions
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to support backwards navigation in the history search functionality
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure proper handling of null core names
added marker selection functionality to the NearbyMapFragment to improve user experience by hiding the bottom sheet when the marker is selected
added exception handling to print stack traces in FileSyncAdapter . java to improve error visibility for debugging purposes
replaced direct memory check assertions with output analyzer in TestMemoryAwareness . java to improve clarity and error handling during memory checks
modified feed processing logic in FeedQueues . java to filter out heavy load feeds based on application settings to enhance performance by preventing heavy
log if defaultdrmsessionmanager be use on wrong thread
replaced ` toUpperCase ( ) ` with ` toUpperCase ( Locale . US ) ` for package type and resource compression mode to ensure consistent behavior across
change text / xml to application / xml in test
updated file initialization and configuration retrieval in Args . java to ensure consistent usage of INSTANCE . confFile and configuration
updated the sleep duration in the waitUntilReadyAndTimeout method from " sleep 5 " to " exit 1 " to simplify the test by removing
replace IntMath with LongMath and modify getGroupingIdValue method to use long instead of int to accommodate larger numeric values and improve
added multiple checks for headless environments in Toolkit . java to ensure appropriate handling of graphical operations in headless environments
updated the condition in ExoflameFurnaceHandler to check if the current recipe matches the furnace ' s world before sm
add move thread count to the solversolver log message .
add test to ensure that search with include _ PATIENT do n ' t select resource with same spname
added a new test class ` Issue582Test ` for testing the ` Pump ` class functionality to ensure correct sorting and sorting behavior of
[ native ] add test for decimal overflow in native
refactor LoadingCache class for improved cache management to enhance performance and maintainability of caching functionality
added a rule for avoiding non - constructor methods with class name in NamingRulesTest . java to improve the accuracy of naming rules in the
danielwagnerhall : add expectedconditions . elementtoselected ( ) and expectconditions . elementtoselected (
added a ` hasView ` method to ` DatabaseSnapshotGenerator ` and ` JdbcDatabaseSnapshotGenerator ` , and modified the ` ViewExistsPre
refactor DOMUtil methods for improved readability to enhance maintainability and facilitate future updates
added translation calculations for task view and logging matrix values in TaskViewUtils and Utilities to improve animation responsiveness and facilitate debugging
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a static method ` walk ` in ` TempFSTTermsReader ` and modified ` TempTermOutputs ` to use this new method to
added SolrQueryRequest parameter to create methods across multiple classes to enhance functionality by allowing the creation of transformer with the specified SolrQueryRequest
updated trigger names and added null checks for content and validUntil in SingleTableMySQLTriggerTest . java to improve clarity and correctness of
refactor FieldValueHitQueue and TopFieldCollector to use a dedicated setComparator method to improve code clarity and maintainability by centralizing
updated expected query strings in PhoenixQueryBuilderTest to include quotes around strings to ensure consistency in SQL query formatting and improve readability of
added Spark import and invoked awaitInitialization method in RequesterTest . java to ensure proper initialization before running tests
added methods to retrieve and save the total storage pool in DynamicPropertiesStore to improve error handling and ensure default values are set when retrieval fails
added support for determining the source directory for file streaming in development mode to improve resource loading flexibility in development environments
do n ' t update map mark if they do n ' t exist
updated method signatures in BaseSemanticAnalyzer and DDLSemanticAnalyzer to include TokenRewriteStream for improved token handling to enhance semantic analysis
removed IOException from method signatures in JavaCompiler and JavacProcessingEnvironment to simplify method signatures and improve error handling
do n ' t crash if jxbrowser can not be load
updated method calls to use ` equals ( ) ` for comparison of ` FORMAT _ JPEG ` and ` FORMAT _ PNG ` to improve code read
updated the method call from ` getBridgeUID ( ) . getId ( ) ` to ` getUID ( ) ` in ` Somf
( chore ) camel - alberto : disable flaky test on github
refactor SSL configuration in OpenWireConnectionTimeoutTest . java to use system properties for keystore management to improve code readability and maintainability by
updated warning logger names and added handling for NaN values in the DynatraceExporterV2 class to improve clarity and robustness of
added removal of sessionId from sessionIdToSessionInfo to ensure proper cleanup of session - related data
added null check for alert host name in HeartBeatHandler . java and corrected formatting in AlertReceivedListener . java to ensure alert hostname
simplified the buffer flushing logic in ChannelEndPoint . java to improve code readability and performance by eliminating unnecessary state management
resolve split - packages : move kmodule . xsd to org / kie / api / kmodule . xsd
added tests for media player seek functionality and modified seek behavior to handle integer conversion to ensure accurate media position seeking and improve stability in handling different seek
rename method ` createTask ` to ` createThrowingTask ` across multiple classes to improve clarity by indicating that the task is being thrown
added conditional border settings for tabCloseButton based on the AQUA _ LAF environment to enhance the visual appearance of the close button
added connection and read timeout settings to TSPTimeStampService and modified test assertions in TestSignatureInfo to improve connection handling and enhance test reliability
( chore ) camel - jbpm - maven - plugin : fix xstream security issue
added error handling for diamond type validation in ` mmm Attr . java ` and created a new ` ppp Neg12 .
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in reloptutil
updated the requirement checks for ID and value in Http2Settings . java to ensure that values are both unsigned 16 - bit and 32 - bit
deleted the MapInterfaceTest . java file to remove obsolete test files to clean up the codebase
added a try - catch block to handle IllegalStateException when inserting a session to prevent operations on a disposed session even when created from a pool
added start and end methods for the root object in GeoJsonWMSBuilder to ensure proper serialization and deserialization of the FeatureCollection object
simplified the method for setting the selected index in the PopupMenuButton to improve code readability and maintainability by eliminating
added a check for manual unstashing in TaskbarStashController . java to ensure that unstashing only occurs when the app can
camel - 16400 : camel - route - coverage should not use custom id for route that have no custom id .
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for checking expected events to enhance flexibility in handling event mismatches based on
added a new file ` HeaderFixer . java ` that implements header processing for Licence files to provide a mechanism for generating and writing
added functionality to send the first load broadcast in the Launcher class to ensure that the app is fully loaded before proceeding with further actions
deleted the ` SuperJumperAndroid . java ` file to the functionality is no longer needed in the project
updated the return statement in SystemTableScan . java to check if the table is distributed and modified test cases in TestStarQueries . java to
added interfaces for handling key values and observation conventions in the Observation class to enable better integration of key values and observation conventions in the
fix the processidrematches method to properly remove the remap block .
updated return statements to explicitly cast ` i ` to ` long ` in ` AtomicIntegerArray ` , ` AtomicLongArray ` , and ` Atomic
added caching to optimize data format retrieval in HSSFCellStyle to improve performance by reducing repeated calls to getDataFormatString ( )
updated the query in RemoteAuthenticationEndpointTests to filter users based on a specific username to ensure that only users with the specified username are retrieved from
updated condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure proper
updated logging to include container and workspace information to improve logging clarity for launcher exit events
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to remove unused or redundant test code that is no longer needed
do n ' t try to add a marker that do n ' t exist , if the marker do n ' t exist anymore
added a new menu item " Reopen in Browser " and implemented a method to handle server opening in the browser to enhance user experience by allowing
added a new error message for multi - output scenarios in ErrorMsg . java and improved conditional checks in SemanticAnalyzer . java to enhance error
added a runnable to add an entry listener with an equality predicate to ensure that the addEntryListener method handles null inputs correctly
fix coordinatearrays . reverse ( ) to handle edge case
removed unnecessary whitespace in setOpen method call to improve code readability and maintain consistency
added a boolean variable ` first ` with a value of ` false ` in ` TestPayloads . java ` to enable the initialization of the
replaced the method ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` to simplify the overview mode display logic
set the destination of the message dispatch in the test case to ensure the test correctly reflects the destination of the message
messagehandlerinterceptordefinition : return integer . max _ value instead of integer . min _ value
fix warning in amd64floatconvertnode and remove unused variable declaration .
simplified the addition of pending chunks and buffers in HttpClientRequestImpl . java and modified buffer writing logic in HttpTest . java to improve
updated artifact replacement logic in GetMavenDependenciesTask . java to ensure correct formatting of the artifact name to enhance clarity and correctness in
pdfbox - 4892 : remove unneeded typecasts , a suggest by valerybokov
removed unnecessary print statements in ReferenceUtil . java to streamline code for improved readability and performance
fix ( field visibility ) : add query type name to visibility predicate ( # 2329 )
added configuration options for solidity JSON RPC port and enable or disable it to allow dynamic configuration of the Solidity JSON RPC port based on
added a check to ensure the folder is an instance of DropTarget before removing it to prevent potential ClassCastException during drag - and - drop operations
refactor StubJarTest to streamline the creation of stub jars based on testing mode to improve code readability and maintainability by consolidating
updated feature descriptions for Setup wizard , Probe Module , and Workflow helper in StartPageTopComponent . java to improve clarity and usability of
patch by jbellis ; review by brandonwilliams for cassandra - 1422
removed unnecessary boolean check for available in OnlineTestCase . java to simplify code logic for better readability and maintainability
changed ReturnAttributes from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all users are returned instead of just
refactor onIdleTimeout handling in HttpChannelState . java and update failure listener in HttpChannelTest . java to improve clarity and functionality
updated CreateEndPoint class to extend Invocable . NonBlocking to improve thread safety and ensure proper resource management
updated TABLE _ HEADER _ SEPARATOR regex and added a new constant COL in TableBlockParser . java , and modified the matching logic in TableBlock
updated the return value of the method from 32.0 f to 31.5 f to adjust the camera ' s scaling factor for improved
added startOnBootSetup preference to GpsSettingsActivity and modified URL return values in Utilities and GeneralLocationListener to improve user experience by dis
updated the client secret length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to improve security by using a stronger
updated error message assertions in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include a boolean parameter to enhance clarity of error messages regarding null
added JUnit Ignore annotation to ScheduledMethodMetricsTest to temporarily disable tests due to race conditions
updated PinotFS handling in SegmentGenerationAndPushTaskExecutor to utilize PluginManager for file system registration to ensure compatibility with different file system
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is consistently used for non - English
added a MetalLookAndFeel to the UIManager to enhance the visual styling of the application
added synchronization and refactored ping task handling in Bot . java to improve thread safety and ensure proper shutdown of tasks when an exception occurs
updated error message handling in GlobalErrorHandler to include throwable as a parameter to improve error reporting by providing more relevant context for the error
improve code readability by remove unnecessary variable
added handling for CmdLineException in the PinotAdministrator class to improve error logging for better debugging
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and marked ` hashCode ( ) ` as deprecated to
removed unnecessary comments and simplified boolean variables in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and maintainability
change the minimum zoom level for the map in BasicMapViewer from 10 to 24 to adjust the zoom range for better user experience
refactor user management to use ImpersonationUtil for user and group retrieval to improve code clarity and maintainability by centralizing user and
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in UnixFileSystemProvider and WindowsFileSystemProvider to
added support for ArgumentExtractor in DelegatedClientAuthenticationAction to enhance service resolution capabilities
changed defaultGroup from non - final to final in NacosServerRegisterRepository . java to ensure immutability of the defaultGroup variable
fix tile cache not be clear on shutdown
removed redundant calls to removeAllViews ( ) in CustomPlaybackOverlayFragment and updated InfoLayoutHelper to streamline view removal process to improve code cl
refactor the cleanEntriesForFeedsWithoutSubscriptions method to use a dedicated cleanEntriesForFeedsWithoutSubscriptions method to improve code clarity
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to improve
nifi - 1187 : fix filebasedclusternodefirewalltest to work on window
fix for conic solve point : use e1 / e2 instead of l / m
refactor conditional statements in RandomAccessReader . java for improved readability to enhance code clarity and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod .
refactor image handling methods in CImage . java for better organization and clarity to improve code readability and maintainability by separating image
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to simplify the code
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in ` ClassParser . java ` and ` JavaClass
replaced manual null checks with ` Objects . equals ` for better readability and consistency to improve code clarity and reduce potential null pointer exceptions
[ j2kt ] rename resolveclassfromcanonicalname ( ) to resolveclassfrombinaryname ( )
added assertions to verify default view properties in NinjaDefaultTest . java to ensure correct handling of various error and 404 responses in the application
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile . java
adjusted the padding of timestamps view in DetailFragment and adjusted the list view position offset in ListFragment to improve layout consistency and accommodate
modified exception handling to use Thread . currentThread ( ) . interrupt ( ) instead of Exception in ZkStateReader . java to improve thread int
added null checks for field values in HttpFields . java and implemented unit tests for empty headers in RequestTest . java to ensure robust handling of
server : do n ' t allow static nat when it ' s not support in the network
added calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure the header
added functionality to remove extra empty screen in the workspace to improve user experience by reducing screen clutter
added support for fixed width rendering in BitmapFont to improve text rendering by accounting for glyph width adjustments
removed the ` showTitle ` parameter from the ` createFragment ` method and refactored related functionality to simplify the fragment creation process and improve
added preEvent , postTransition , and postTransition methods to AbstractStateMachineFactory to enhance state machine functionality by integrating interceptor methods
refactor ConfigDescriptionProvider to improve code readability to enhance maintainability and facilitate future updates
updated role creation in TestAuthorizationApiAuthorizer and added Windows - specific configurations in StorageBasedMetastoreTestBase and TestStorageBasedMetast
solr - 1348 : facet . sort = index do n ' t stop loop early if facet . sort be set to true
refactor properties handling in CheckstyleReport . java to use a variable for overriding properties to improve code readability and maintainability by reducing
added functionality to stop Jetty instances in the DeleteInactiveReplicaTest to improve resource management and error handling during test execution
added a filename parameter to the FileActionsDialogFragment constructor and updated its logic to display the title based on its value to enhance user experience by
replaced negative direction values with a constant INVALID _ DIRECTION in CellLayout . java to improve code readability and maintainability by using a
updated API endpoint names and modified parameters in InnerTransferRequest . java and AccountAPI . java to ensure compatibility with the latest API changes and improve
add getexecutionidforjobid ( ) method to jobexecutionservice ( # 19489 )
added a new annotation interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package
replaced specific imports with a wildcard import and added multiple visitIdentifier methods in FindTypes . java to improve code readability and maintainability by
added action text color to AuthenticatorActivity to improve the visual appearance of the action in dark mode
added support for ComparableField in Manager , StreamSupplierComponent , MockManager , AbstractManager , and MockManager classes to enhance flexibility in finding
renamed methods and variables from ` addTestStepsFor ` and ` addTestStepsForBeforeHooks ` to ` createTestStepsForPick
updated test method names from " noArgMethodIsNotValid " to " validNoArgMethod " and " invalidMethodWithNoArgs " to
added a ` cancelClient ` method to ` RpcServer ` and modified ` startDriver ` in ` SparkClientImpl ` to handle child process
added ` getImplicitPreCoercionValue ` method to ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller ` ,
initialize lastDisplayedUser to Optional . empty ( ) to ensure lastDisplayedUser has a default value to avoid null reference issues
added ` findAll ` method to ` QueryDslMongoRepository ` and a test for ordered results in ` AbstractPersonRepositoryIntegrationTests ` to
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions during execution
benchmark : exit the warm - up loop in case of a failure .
pipeline : add xread ( ) , xreadgroup ( ) , xread ( ) , and xreadgroup ( ) method ( #
removed FIXME # MN comments in LinkedBufferInput and StreamInput classes to streamline code for better readability and maintainability
added WebSecurity customization functionality to CasWebAppSecurityConfiguration and modified HttpSecurity configuration in CasWebSecurityConfigurerAdapter to enhance security configuration
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` to ` TestJdbcWithDBTokenStoreNoDoAs `
added a method to register a content provider in ShadowContentResolver and modified ContentProviderController to utilize it to enhance functionality for managing content providers
updated the type of ` version ` in ` AttributeReader ` from ` Version ` to ` ClassFile . Version ` to ensure compatibility with the new
added a line to set the keep - alive configuration in SingleConnectionManager to ensure that the connection manager correctly handles keep - alive settings
[ java ] rename ` conductor . unicastsenderflowcontrol ( ) ` to ` conductor . unicastsenderflowcontrol
ggb - 1882 fix for point with no point in 2d , no point in 3d locus
added concurrent map imports and improved error handling in several classes to enhance thread safety and error reporting during WebSocket operations
danielwagnerhall : add selenium . take . screenshot option to take screenshot
replaced JUnit ' s assertEquals with AssertJ ' s assertThat in multiple test files to improve readability and consistency of assertion methods
truffle : remove deprecate trufflelanguage . getcontextreference ( ) .
initialize the ` e ` variable to null and update exception handling logic in ` StubberImpl . java ` , and add tests for handling `
updated error handling in Actor and Group classes to use " Actor " instead of " Child " to improve clarity and correctness of error messages
added location permission dialog functionality to upload location in LocationPickerActivity to enhance user experience by allowing location access through location permissions
http : / / issues . apache . org / activemq / browse / amq - 2296 - add example for http :
added import for CookieSpecs and set it to STANDARD in the request configuration to ensure compliance with standard HTTP cookie specifications
replaced a conditional check with a call to ` r1 . overlaps ( r2 ) ` to simplify the code and improve readability by
replaced DeemphasisFilter with NonClippingGain in P25AudioModule to improve audio processing efficiency and performance
added a ` monitoringUrl ` parameter to the ` ScrollingPanel ` and ` SystemInformationsButtonsPanel ` constructors and methods to allow dynamic
[ k8s ] remove kubernetes . service . create - timeout from config
updated icon assignment logic in NearbyListFragment to handle different place descriptions to improve user experience by providing appropriate icons based on the selected place
added a null check for the package in DefaultPackageScanClassResolver to avoid potential NullPointerExceptions during package scanning
added a new file PrintInlining . java that contains a main method that prints a " Passed " message to facilitate
fix ( javadoc ) : fix parsing of nested brace in javadoc tag ( # 4892 )
[ java ] remove unused field in archivetest . java
replaced ` getEdges ( ) ` with ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java ` to ensure the
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
fix a potential crash in videomanager with invalid
send room remove event when cluster start
updated the configuration from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to align the test configuration with the intended functionality of the
added key settings for flipping and generating mips in TextureHelper to enhance texture functionality for better visual representation
refactor PythonDslProjectBuildFileParser to utilize EventReportingProjectBuildFileParser and implement CloseRecordingProjectBuildFileParserDecorator to
[ wasm ] add support for librarynormalizationpass .
replaced the method ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` Retrofit ` and ` Java8OptionalConverterFactory `
[ hotfix ] [ runtime ] fix checkstyle violation in memorymanager
[ hotfix ] [ sql - client ] fix timestamp serialization for console session
added two new files , Hbs . java and HbsTest . java , implementing a template engine for Handlebars in Jooby
added null and empty checks for HintMessage and IncomingMessage in ChatMessageAdapter . java to ensure proper visibility handling for incoming messages and improve
fix ( core ) : use value instead of key in importcsv
add a test to confirm that the alert dialog waits until the user input
added a check for distinct column indices in ReduceSinkDeDuplication . java to handle cases where there are too many distinct column indices to
refactor MiscUtils . java to improve file path handling and error logging to enhance code clarity and ensure proper processing of jar files
regenerate client with updated copyright year ( # 4382 )
updated imports for " jetty - websocket - server " and " jetty - websocket - client " from " websocket - server " to "
updated SAMLAuthenticatedUser to return an unmodifiable map of identity attributes to enhance data integrity by preventing modification of the returned map
fix ( editor ) : repaint header after save a program
replaced instances of ` new Double ( bytes ) ` , ` new Float ( bytes ) ` , and ` new Float ( bytes ) `
replaced getDate with getTimestamp in JdbcDataSource to ensure accurate timestamp retrieval from the result set
updated conditional check to include " javax . naming . Context " in HtmlJndiTreeReport . java to ensure compatibility with javax . naming .
added buffer size configuration for different database types in StorageUtils . java and improved logging message in Manager . java to enhance performance and clarity
changed the condition from " double " to " mutual " in the ImporterGEXF class to correctly handle the " mutual "
replaced a static final integer FLAG _ SLIPPERY with an import statement in StatusBarTouchController . java to improve code read
truffle : fix getstabledim ( ) and getarraydim ( ) for array type .
added methods to retrieve and set the Google Drive folder path in PreferenceHelper to allow dynamic configuration of the Google Drive folder location
ticket # 4810 : shuffling suggestion on the tree item should allow suggestion to be shuffling
added @ Nullable annotation to method parameters in Truth . java to indicate that certain parameters may be null to enhance code clarity and prevent null
updated bitwise operations for handling new values in ArrayUtil to improve clarity and correctness of the return value logic
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check for constructor instrumentation to ensure that ` ApiException ` is
added waitingForAnticompaction management in StreamIn and StreamInManager classes to track and manage ongoing anti - proceeds during anti -
added isKeyguardSecure property and its getter / setter methods in ShadowKeyguardManager . java , and updated test cases in ShadowKeyguard
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization processes
updated string processing and added a conditional check for the number of override parts in GrblUtils . java to ensure correct parsing of coordinates with
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables `
updated ` checkDrained ( ) ` logic in ` AsyncFileImpl . java ` and added a new test in ` FileSystemTest .
updated light constants and shader configurations in HybridLightTest . java to improve lighting quality and performance in the rendering process
replaced instances of ` TestProjectFilesystems . createProjectFilesystem ( ) ` with ` workspace . getProjectFileSystem ( ) ` in various integration
updated method signatures and data types in RuntimeOptions and CucumberFeature to use PathWithLines instead of String to improve type safety and consistency
refactor Gson , JsonArray , and JsonObject classes to improve code organization to enhance maintainability and readability of the codebase
removed @ NotNull annotation from TEST _ DIRS in PubRoot . java to address issue # 2022.1
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) ` in ` Shadow
added a method to reset the prefix index in the Stylesheet class and modified BasisLibrary to use a thread - local prefix index to improve
added LogLevel import and annotation to TestDistributedStatsComponentCardinality . java to configure logging level for debugging purposes
added ` throwIfImmutable ( ) ` method calls to ` IntList . java ` to ensure immutability of the ` IntList `
added @ NotNull annotation to onApplicationEvent method and improved URI creation logic in GrpcClientBuilder to enhance null safety and ensure proper URI
refactor graal demo to use supplier for work directory
fix race condition when invoke insight . getfunctionsarray ( ) .
added platform - specific handling for file writing in GenerateManifestStep . java to ensure correct line endings are written on Windows to improve compatibility and
fix for rfe - 3531161 : findnull deref should always invoke code
added @ nullable annotation to getConfigDescription method and improved null checks in ThingResource to enhance code clarity and prevent potential null pointer exceptions
change masterjobcontext . getcancellationexception ( ) to return a runtimeexception instead of throwable .
pdfbox - 4892 : do n ' t call initstream if no cropbox be set
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the code
add a new feature flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to control taskbar access to provide a debug option for enabling all apps access from the system
replaced the initialization of FragmentActivity with using Robolectric ' s activity controller to improve test reliability by utilizing Robolect
renamed ` getFileCoordinates ` method to ` processFileCoordinates ` and added a method to retrieve decimal coordinates to improve method clarity and enhance
rename classes from ABCase to TestABCase across multiple files to improve clarity and specificity of test class naming
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for the blackhole
refactor the handler setup in OpenRocketViewer . java to use a separate variable for simulation changes to improve code readability and maintainability
added a new file ` ChangeDependencyGroupIdAndArtifactId . java ` that implements a recipe to change Maven dependency group and artifact IDs to enhance
modified the handling of file system and path variables in IndexingJob . java and added a validation check in SegmentChecker . java to ensure only
updated comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
added memoization for replacementPaths and pathToSourcePathMap in PreprocessorDelegate . java to improve performance by reducing redundant computations
rename JsonExamples class to Examples to standardize naming conventions for clarity
added detailed debug logging statements in ViewExtractor . java to enhance visibility into the extraction process for better troubleshooting and debugging
refactor FindsByLinkText class to improve code readability to enhance maintainability and facilitate future updates
added a new Main class with a main method that prints a message to indicate when the Java oop entry point is hit
introduce synchronization in operationsetbasicinstantmessagingsipimpl to ensure thread safety when access shared resource
removed duplicate continue statements in NativeScanner . java to improve code clarity and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` to align the
replaced ImmutableSet building with Supplier for queriedDeps and exportedDeps in AndroidLibraryDescription . java to optimize dependency resolution and improve performance by caching results
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added charset handling for content type in ExtractingDocumentLoader to ensure proper metadata is added based on the content type
cloudstack - 3340 : fix sql injection for databaseconfig ( # 3341 )
fix an npe in the player inventory when the slot be - 1
add -- ignore - transitive - repositories option to allow maven to ignore remote repository
removed duplicate annotation for BackgroundJobManager in ContactsPreferenceActivity . java to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to ensure compatibility with modern Android features and support libraries
added a null check before closing the selection object to prevent potential NullPointerException when selection is not initialized
added a condition to break the loop if the index is equal to the length of the string and the matcher starts and ends to ensure proper handling
updated IntegrationTest annotation to include server port configuration to ensure proper integration testing with the specified server port
added a new user - defined function " reverse " to the FunctionRegistry and implemented its functionality in the new UDF class to enable users to reverse
updated context path retrieval methods to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to improve clarity and consistency in
refactor Tracer class to improve code organization to enhance maintainability and readability of the code
[ hotfix ] [ test ] disable rocksdbstatebackendreaderkeyedstateitcase due to unstable test
simplified import statements in XMLChangeLogParserTest . java to improve code readability and maintainability by reducing verbosity
added synchronization to the buffer clearing mechanism in StarTreeRecordStoreCircularBufferImpl . java and implemented a test for clearing the buffer to ensure
updated forecast values from 0 to 60 , hours , and 8 in OpenWeatherMapOneCallHandler . java to reflect new forecast parameters and
fix intermittent failure in abstractpageoperationtemplatetest due to fetch time issue
added animation and button functionality to the FloatingHeaderView and RemoteTargetGluer classes to enhance user experience by providing smoother transitions and
refactor ` parseRerunFile ` method to return a ` Stream < Collection < FeatureWithLines > > ` instead of a ` Collection
fix the botania creative tab not show the correct item in the creative tab . close # 1478
updated assertion statements in TestRadioButtons . java to use consistent order to improve readability and maintainability of the test code
added functionality to display uncompressed and compressed column sizes in RCFileCat . java and implemented a method to retrieve the number of rows in RCFile
refactor multiple Java classes related to Triadic and HITS to improve code organization and maintainability
added checks for MXNet NDArray instances in JnaUtils . java to ensure robust error handling for closed MXNet NDArrays
[ hotfix ] [ blob ] fix checkstyle violation in blobserver
fixed bug 1374533 - unusedprivatemethod no long report false positive for static method .
refactor lexicalScope initialization and assertions in Global . java to improve code readability and maintainability
added a test for SFTP auto - startup functionality in InboundChannelAdapterParserTests to ensure the adapter behaves as expected during auto -
added getlevel ( ) , getroot ( ) , and getchildboundables ( ) method to node and quadtree .
updated version parsing logic to handle minor version number correctly to ensure correct parsing of version string without additional characters
added a check for non - empty tags before adding them to the active item in ItemRegistryImpl . java to ensure that tags are only added
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and ` fromDateTime ` in ` DateTimeFunctions ` to
updated the disassemble method to use a dedicated method for cache value conversion to improve code clarity and maintainability by centralizing value handling logic
refactor Log4j2ConfiguratorServlet to improve logging functionality to enhance performance and maintainability of the logging system
removed unnecessary variable assignments and simplified exception handling in StorageBasedAuthorizationProvider . java to improve code clarity and reduce redundancy in exception creation
updated the ` CC ` key in ` CGoCompileStep . java ` and added a new test in ` CgoBinaryIntegrationTest .
fix : add buildable annotation to customresource
added @ Override annotation to the Only class to ensure proper method overriding and improve code clarity
added a timeout constant for HTTP connections in HttpClientFactory . java to improve connection stability by allowing configurable socket timeouts
added new pipeline names to the PerBuildStateFactoryWithConfigurableAttributes and RawTargetNodeToTargetNodeParsePipeline classes to improve clarity and
simonstewart : add the ability to enable all test but trace
removed the @ Singleton annotation from ApplicationController . java to ensure that only one instance of ApplicationController is created in the application
updated username retrieval logic to use OwnCloudAccount and handle potential exceptions to improve user experience by prioritizing the original account ' s display name
added BatchStatus import and a test for resuming a paused instance in SimpleJobLauncherTests to ensure proper job execution handling for paused instances in
added null check for cacheConfig before constructing value in HttpSyncDataService . java and refactored boolean handling in DataRefreshFactory . java
simonstewart : make dockersession public in order to be able to use it in other module .
change the default package name to ` ` java . lang ' ' instead of ` ` java . lang ' '
pdfbox - 2576 : do n ' t try to parse nonsequential pdfs by default , a propose by martin
no effective change - code cleanup , no functional change
refactor HttpServerTestBase class to improve test structure to enhance maintainability and readability of the test code
updated test methods in PortletApplicationMapTest to use keySet instead of entry sets and added assertions for key containment and retrieval to improve clarity
added support for handling ` NestedBeanIgnoreNulls ` in ` BeanTableSchema ` to ` NestedBeanIgnoreNulls ` to ensure that null values
add support for custom redissonautoconfigurationcustomizer in spring starter
fix indexoutofboundsexception in indicator . todouble ( )
added new methods ` execInContainerWithUser ` and ` execInContainerWithUser ` in ` ContainerState ` and ` ExecInContainer
refactor conditional checks for ` interestedInByteMessages ` and ` interestedInTextMessages ` to streamline listener assignment logic to improve code read
added tests for semantic pattern matching in SemgrexTest . java to ensure correct handling of conjunction and negated attributes in the semantic graph
added a broadcast intent to clear the pull unread status in HomeFragment to enhance user experience by allowing direct access to pull - in functionality
simplified the initialization of the Scroller in TouchImageView by removing conditional checks for pre - Gingerbread and overScroller
add @ bean ( destroymethod = ' ' flush ' ' ) for defaultprofilevalidationsupport to fix test failure
( chore ) camel - core : replace atomicboolean with vetocontextstartexception
added FloatingActionButton functionality to ShareActivity to enhance user interaction by allowing access to additional features when a floating action button is clicked
added inline parsing support and improved empty list initialization in ToDateTokenizer to enhance parsing functionality for inline date formats and ensure proper handling of empty
updated TestAnonymousClassUnloading . java file to improve test coverage for class unloading scenarios
updated error messages from " tecken " to " toppniv " and " tecken " to " token " in multiple resource
added server check before binding the OperationsService to ensure the service is only bound if the server has been checked
update Position class to use lines instead of columns to ensure correct positioning for nodes with line breaks
added waitFor ( ) method and exception handling in CxxPreprocessAndCompileStep . java and invoked it in ManagedThread . java to ensure
added a new boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented ` PrincipalAttributeRepositoryFetcher ` in ` Core
remove checkifloaded ( ) from mapcontainer . getmaxsizepernode ( )
added support for enabling SSL protocols in the NettyWebServer and ServerBasicConfig classes to enable flexible SSL protocol configuration for improved
replaced ` AtomicBoolean ` with ` AtomicReference ` and refactored the ` trySet ` method to use ` AtomicReference ` to
updated the key retrieval logic in QueryDslMongoRepository and added a test for empty string in SpringDataMongodbSerializerUnitTests to ensure
updated assertions in RoundRectBorderTest to check for specific edge cases to ensure correct behavior of RoundRectBorder when different styles are applied
added checks for empty genesis configuration before creating a new one in Cluster . java and updated parameter names in BftAcceptanceTestBase . java
remove paralleltest , no longer need
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a length check for ' sign ' to ensure
modified the condition to check for non - windows in ProcessInformationsPanel . java to ensure proper handling of non - Windows environments
replaced maxN and minN methods with greatest , greatest , and least methods in MoreCollectors . java to improve clarity
updated BitmexStreamingExchange and BitmexStreamingMarketDataService to initialize services and handle null orderbook to improve stability and
added validation for latitude and longitude in GeoPointField to ensure that invalid lat and lon values throw appropriate exceptions to improve error handling for invalid ge
updated methods in ` OozieProxyImpersonator ` and ` WorkflowFilesService ` to use ` createFile ` instead of ` createWorkflow
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
modified the ` getTableDocument ` method to include a ` withDependents ` parameter to control whether to include dependent tables when retrieving the table document
added logic to manage the number of consecutive uploads without coordinates in UploadActivity and UploadPresenter to improve user experience by alerting users when uploads exceed
added caching functionality for profile data in ProfileResources . java to improve performance by reducing redundant serialization of profile data
updated property value handling in JpaMetamodelEntityInformation to support nested ID classes and improved property value extraction to enhance support for nested ID
added tests for bootstrapping last DDL timestamps for tables and views in UpgradeIT . java and updated method names in UpgradeUtil . java to ensure
add option to register default exception mapper for jersey
added a boolean parameter ` false ` to the ` storeFieldAction ` method in ` EntryEditor . java ` to control the behavior of the
added an ` ownerPtr ` parameter to the ` nativeCreateNSWindow ` method and modified its usage in the ` nativeCreateNSWindow `
updated SQL command in FileContentProvider to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to improve clarity and consistency in
added a new " Stock " tile type to the Tile class and modified the event handling logic to support it to enhance the game '
fixed - rasyncservice . readasync ( ) and writeasync ( ) method do n ' t work with non - string codec . #
fix ( findunrelatedtypesingenericcontainer ) : add detector under test
refactor LauncherBackAnimationController to utilize BackProgressAnimator for animation handling to improve back animation responsiveness and state management during transitions
modified the ` _ initialPageNo ` variable to be non - final and adjusted its value based on its value to allow dynamic updates to `
optimize crc16 calculation ( with optimization of slot decision
added comment handling in FormattedSqlChangeLogParser to support comments in change sets to enhance the parsing functionality for formatted SQL change sets with comments
refactored JarArchiver initialization in MavenArchiver and AbstractJarMojo classes to allow external access to the JarArchiver instance
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling for class usage file loading
removed redundant checks for aggregation in TSServiceImpl . java and added a multi - aggregation test in DaemonTest . java to improve code clarity
added validation for WebGL rendering context and implemented pixel reading functionality in GwtGL20 . java to ensure that only valid RGBA types are processed
updated test method names to follow Java naming conventions and added a new test for debug information to improve code readability and ensure correct method invocation
replace ` UnmodifiableClassException ` with ` IllegalStateException ` in ` InlineBytecodeGenerator . java ` to improve error handling to provide clearer
add class initialization trace ( s ) of class ( es )
[ hotfix ] [ table - broker ] fix wrong parameter name in basebrokerequesthandler # setquerytimeout
replace Google Cache with Caffeine caching in TopicRouteService . java to improve cache management and enhance error handling for invalid topic routes
mbtilesdatastorefactory : set sqliteconfig . pragma to ` ` off ' ' for read only mode
updated the regex pattern for invalid source and target release in FindBuildToolFailures . java and added a fatal error in FailureLogAnalyzerTest .
updated the construction of the URI string and added a check for location availability in DetailFragment . java to ensure that the location intent is valid and
added a null check for ` getInheritedParameterContexts ( ) ` before processing to avoid potential NullPointerException when accessing ` referencedIds `
refactor ClassLoader class to improve code readability to enhance maintainability and facilitate future feature additions
added a method to set and retrieve the origin response headers in ProxyRequestHelper to enhance the request handling by ensuring the correct header is set for
added a new instance of ProfileSettingDrawerItem to GpsMainActivity to enhance the functionality of the profile setting drawer
add a configuration parameter to allow to turn off xml validation by default .
simonstewart : allow the firefox driver to work as expect in the ie driver
updated fetch size handling in IoTDBStatement to allow dynamic adjustment of maximum rows based on fetch size
refactor ` isCountOptimizable ` method to ` allActionsAreOptimizableFilters ` and update its logic to improve clarity and functionality
added functionality to handle node and mouse click events in the StandardVizEventManager to enhance user interaction by enabling dynamic node and mouse interactions
replaced direct memory setting with a zero buffer method in ManyToOneRingBuffer . java to improve code readability and maintainability by encapsulating
[ gelly ] make xorgroup accessible from terminalnodememory .
removed unnecessary height and width retrieval methods from LCDUIImageMonochromeBitmapSource to streamline code by eliminating unused functionality
refactor path resolution logic into a private method ` getPathPrivateImpl ` to improve code readability and maintainability by encapsulating path resolution logic
fix ( dstu2 ) : fix xmlparser dstu2 parse issue
updated ` changeSchemeIfIsWebSocketUpgrade ` method to be static and added encoded URL handling in tests to improve method accessibility and ensure proper
sulong : rename test - suite configuration to execution - suite .
refactor CxxPlatform retrieval logic in HaskellBinaryDescription . java to improve clarity and maintainability by centralizing platform retrieval logic
added imports for IndexReader , IndexReader , and Similarity in multiple Java files to facilitate the use of Apache Lucene '
modified the ` peek ` and ` iterator ` methods in ` ConcurrentLinkedStack ` and added new test cases in ` ConcurrentLinkedStackTest `
added ` isMatched ( ) ` and ` setMatched ( boolean matched ) ` methods to ` BinaryHeapQueueTest ` and ` BaseQueue
added a null check for mDirectories before accessing its elements to avoid potential NullPointerException when mDirectories is not initialized
updated condition in RecentsView . java to check if overview state is disabled and first layout is not present to ensure correct handling of gesture
added multiple package - info . java files for various Apache Lucene packages to provide package - level documentation and improve documentation clarity
added localization support for the visibleAutoLeveler panel in AutoLevelerTopComponent to improve user experience by allowing dynamic adjustment of the visible state
added postOptimize callback functionality to DirectUpdateHandler and DirectUpdateHandler2 classes to enable event listener optimization during updates
updated CompressMode to use padded length for decompression and decompression to ensure proper handling of compressed data by explicitly setting the dummy byte to zero
removed redundant check for user _ data in Shaderc . java to streamline the code by eliminating unnecessary checks
added a check for local meta store in retry logic to ensure retries are only attempted when the local store is available
added checks for ` ConnectionClosedException ` and ` TimeoutException ` in ` HeliosSoloLogService . java ` to improve error handling
refactor Subject class to improve code structure to enhance maintainability and readability of the code
use weak and strong reference type in serialization service ( # 11927 )
fix findsimilarcolor for hssfpalette and add unit test
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added new test methods for finding elements by numeric ID and multiple IDs in ` ElementFindingTest . java ` to improve test coverage and ensure functionality
added a ` flags ` parameter to the ` registerReceiver ` method across multiple classes to allow the specification of the flags when registering a receiver
replaced the mocking implementation for the ` ffmpeg - version ` method in ` FFmpegTest . java ` to improve test reliability
added handling for the previous input stream and modified the loop method in Ogg and OpenALMusic classes to ensure proper resource management and avoid
replaced hardcoded failure message with a constant RESPONSE _ WAS _ NULL in AssertionResult . java to improve code readability and maintainability
[ te ] fix anomaly migration migration ( # 3353 )
replaced direct calls to Toast . makeText ( ) with a new method showToast ( ) in BaseActivity and DetailActivity to
updated the method to use ` delegate . httpMethod ( ) ` and ` delegate . requestTemplate ( ) ` instead of ` delegate . method (
added name validation and referral handling in LDAPCertStore . java to ensure valid names and improve error handling for LDAP operations
refactor retain logic into a separate method for better readability to improve code maintainability and reduce duplication
rename ` AdapterViewTest ` to ` ListViewTest ` and add a new test method ` performItemClick ` to improve clarity of
[ hotfix ] [ test ] move checkpointfailuremanageritcase to classrule
remove itemuiprovider ( no longer use )
added functionality to set and get the selected object in the SIPCommSelectorBox class to enhance the selection process by allowing the selection of an
added an import and annotation for the FileSystemPool in MetaInfConfigurationTest . java to enable the access to the FileSystemPool for concurrent execution
added serverConnector . setHost ( HTTP _ INFO . bindAddress ) to set the server connector ' s host to HTTP _ INFO . bind
updated access token and refresh token configurations based on heartbeat mode and grant types in DynamicClientRegistrationEndpoint to improve token management based on the client '
added a new class ` CloverInstrumentationFilter ` and modified the ` Not ` condition in ` SplitLogCounters ` to include it to
added support for the Smartmi Evaporative Humidifier in MiIoDevices . java and modified the comment in Readme
fix loophole with fall block above
changed the visibility of the setScrollRangeDelta method from package - private to public to allow external access to the method for better usability
ambari - 20586 . add log message for empty repository list . ambari may not be manage the repository
simplified the return condition in the IntHashSet class to improve readability and maintainability of the code
added Serializable interface to RuleAdministrator to enable serialization of RuleAdministrator objects
replace lists of allowedOrigins and allowedTimingOrigins with sets of patterns to enhance filtering capabilities by allowing wildcard origin patterns
updated G3D test files to include " knight . g3db " and " g3d / test . g3dj "
added error handling for updateLatestSolidifiedBlock in Manager . java and updated WitnessService . java to improve robustness by logging errors and
hbase - 25829 fix npe in execresult . getrow ( ) when return null
added a method to check access permissions and improved error handling for unauthorized users to enhance security by ensuring only authorized users can access the page
replaced ` writeTo ` method with ` getStubClassBytes ` in ` ClassMirror ` and introduced a new ` StubJar ` class to
added a TextView to display the internal link text based on whether the file is a folder or a file to improve user experience by providing clearer
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting across different locales
fix test failure in modelzootest
added a method to hide the keyboard in AllAppsContainerView based on device search features to improve user experience by ensuring the keyboard is hidden when
[ test ] use inmemoryeventstorageengine in eventhandlingconfigurationtest and sagaconfigurationtest
refactor path retrieval logic in BsdFileStore and add native method getmntonname in BsdNativeDispatcher to improve path handling and
add test case for issue # 1599
added support for optional x , y , and z parameters in the SpawnCommand class to enhance command functionality by allowing optional coordinates for spawning
added MIN _ CONTENT _ DIMEN constant and refactored height and width calculations to use a new method for better maintainability to ensure
move graalcompilertest . addmethod ( ) into graalcompilertest .
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added plugin check class names to failed checks in UpgradeCheckRegistry . java and modified the addColumnsToUpgradeTable method in UpgradeCatalog280
refactor Environment class to improve code readability to enhance maintainability and facilitate future development
added a BadApple annotation to the RecoveryAfterSoftCommitTest class to track and document a known bug related to SOLR - 7421
fixed app home to prevent a case of double separator character
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
replaced specific resource accessors with a composite resource accessor in LiquibaseEntityResolver . java and updated XMLChangeLogSAXParser .
added security property to disable TLS algorithms in ComHostnameVerifier and JavaxHostnameVerifier to enhance security by preventing the use of TLS algorithms
updated CxxDeps to use immutable collections and removed the EMPTY constant to streamline dependency management and improve code clarity
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` , respectively to improve cl
removed unnecessary annotations in Int2ObjectHashMap . java to improve code clarity and maintainability
updated folder name hint logic to check if the title is empty before setting it to improve user experience by providing a clearer hint when the title
updated loadClientByClientId method calls to include " uaa " as a parameter to ensure compatibility with different client types during testing
changed access modifier of methods ` isEmptyOrWhitespace ` and ` isSpecialCaseOrUnknown ` from public to private to restrict access to these methods for
updated string formatting in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to include ` - 1 ` for closed states to ensure accurate representation
refactor MimetypeIconUtil to improve code readability to enhance maintainability and facilitate future updates
rename method ` supportsviewfor ` to ` supportsviewsfor ` across multiple provider classes to improve clarity and consistency in naming conventions
added a new test method ` negatedInstanceOf ` to ` UnnecessaryParenthesesTest ` and updated the ` UnwrapParentheses `
added a built flag to manage the state of the object and implemented a teleportation method to enhance location handling by allowing television teleportation
replaced direct Base64 encoding with URL - safe encoding methods in TokenKeyEndpoint and its tests to enhance security by ensuring the modulus and exponent
updated TranslatorManagerHelper to incorporate ProjectComponent and modified statistics reporting method to enhance project - specific statistics reporting functionality
rename ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the annotation
added a null check for the result in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value to
refactor setupRevampedTweet and muffledTweet methods to include visibility checks for retweeter and muffled users
added conditional logic to display the verified text based on the addon theme setting to enhance user experience by allowing customization of the verified text based on
made the ` timeDiffFromServer ` field final and removed the static instance variable in the ` AbucoinsDigest ` class to improve
camel - 14263 : camel - mongodb - enable autowired to make it easy to configure component and whatnot
added sourceIndex parameter to AttributeMapping and updated related methods to support dynamic retrieval of the source index to enhance flexibility in attribute mapping management by
log hive _ corrupted _ column _ statistics when alter partition
added a call to isSecurityEnabled ( ) in AuthParams . java to enable security checks when authentication is required
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
[ geos - 6881 ] fix email escape in geoserver home page
fix ( modulemanagerimpl ) : enrich engine ' s reflections with subsystems
fix for mahout - 1090 , the number of feature in the mean array should match the number of feature .
pdfbox - 4892 : avoid stringindexoutofboundsexception if input string be empty
[ hotfix ] [ kafka ] avoid unnecessary logging in single node kafka resume strategy
replaced constants for ACTION _ SET _ PLAYBACK _ SPEED with PlaybackStateCompat references in MediaSessionConnector . java to
removed deprecated ' automatic ' separation and updated motor instance properties across multiple classes to ensure compatibility with the new ' launch ' setting and improve the
tika - 3745 -- add mime type for nls and ascii name
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to compatibility issues with
refactor lock file creation into a separate method ` createLockFile ( ) ` in ` MavenDependencyResolver ` to improve code readability and
updated sync interval settings from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and modified sync interval settings to
added a check to return null if the username equals the FEDERATION _ USER string to ensure that the authentication process does not attempt to
[ gr - 21633 ] do n ' t convert truffleobject to non - truffleobject in execute method .
removed JUnit @ Disabled annotation and simplified filtering logic in JakartaClientShutdownWithServerWebAppTest and JakartaClient
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 563 : do
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to utilize the latest Lucene version
added logic to handle missing primary keys in OracleDatabase and AbstractDb2Database to ensure correct schema and catalog information are used during index comparisons
added ` MetastoreException ` to the ` execute ` method and modified exception handling in ` MsckOperation ` to improve error handling and
[ hotfix ] retry commit transaction in kafkaclientcommitter
[ issue # 3949 ] fix the issue of remove receipthandle from message receipt handle ( # 3949 )
added a ` services ` list to ` DockerComposeContainer ` and modified the ` runWithCompose ` method to handle multiple services to improve flex
fix ( core ) : use collectionutil . copyset to avoid concurrentmodificationexception
removed unnecessary HTML cleaning operations and simplified the return value in FeedParser . java to simplify the code and improve readability by directly returning the XML
removed the condition for checking ` mAppsCustomizeContent ` in ` Launcher . java ` and updated the child index in ` Workspace .
reduce int to double in meterrealtimebodydat dto ( # 1359 )
added a new file ` bug4150029 . java ` implementing a file chooser with a temporary directory to address bug 41500
added a boolean flag ` isSparkConfigUpdated ` and its getter and setter methods in ` HiveConf ` , modified ` SparkClient ` ,
added ` getLongPressIndicator ` methods to ` AppIcon ` , ` AppIconMenuItem ` , and ` Launchable ` classes to provide a
added handling for empty polygon in WKBWriter and updated test cases in WKBWriterTest to improve robustness by ensuring proper handling of empty
refactor UnflavoredBuildTarget construction to use a builder pattern and improve interning mechanism to enhance code readability and maintainability by
added a new file ` MultiplyByMaxInt . java ` that tests multiplication by the maximum integer in a loop to implement a test for
added drawer indicator functionality for the current file in OCFileListFragment to enhance user experience by enabling the drawer indicator when the file is collapsed
changed the package of TestRAMDirectory from ` org . apache . lucene . index . store ` to ` org . apache . l
replaced instances of ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to
refactor error message handling in DMNEvaluatorCompiler and add a new message constant in Msg to improve code readability and maintainability by
replaced instances of ` @ ContainedBy ` with ` @ Repeatable ` in multiple test files to align with the new annotation structure for
updated the file sending message to include the duration of the file being sent to improve clarity of the output by displaying the duration of the file
updated class name retrieval and package access check in OpenMBeanAttributeInfoSupport . java to ensure proper package access validation during class loading
patch by jbellis ; review by stu hood for cassandra - 1491
added calculation of freeSize in StoreDirect . java to correctly calculate the free size based on the given string value
refactor touch event handling in AnyKeyboardView and AnyKeyboardViewBase classes to accept MotionEvent as a parameter to improve touch event detection logic
replaced instances of ` SslContextFactory ( ) ` with ` SslContextFactory . Server ( ) ` in multiple files to improve clarity and consistency
removed the Privilegedptions for creating a Socket in PG _ Stream . java to simplify socket creation by eliminating unnecessary privileged actions
refactor InputTest class to improve test coverage to enhance reliability of input validation logic
added a method to pause blurs on Windows in the AbsSwipeUpHandler and modified animation behavior in TaskViewUtils to improve user experience
removed the current location marker and added a null check before removing it in NearbyMapFragment . java to ensure that the current location marker
updated the ` removeSecret ` method to use ` clientDetailsService . retrieve ( clientId ) ` instead of ` client ` to ensure the correct
replaced ` @ BeforeAll ` with ` @ BeforeEach ` and modified the SQL query format in ` SqlSourceBuilderTest . java `
camel - 20297 camel - aws2 - activemq : wait a little long for consumer thread to terminate .
added unit tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys in task series data
updated filterConditions initialization to use Optional for better null safety to improve code robustness by avoiding potential NullPointerExceptions
lightcontrol : replace spatial . getworldtranslation ( ) with spatialtolight ( )
updated the logic for hiding stack traces and improved code clarity in StdErrLog . java to enhance code readability and maintainability
updated HttpSessionEventPublisher to use the correct context method and added debug logging to ensure that the context is not null to improve code reliability and
added a check to throw a SemanticException for the CREATE CQ syntax in ASTVisitor . java to ensure that the syntax of CREATE CQ
[ hotfix ] [ doc ] fix typo in flinkiotdbsink
added counter for custom simplification considerations and modified node status checks to improve traceability of simplification processes and enhance debugging capabilities
updated the method call to use a context parameter in ActivityListAdapter . java to ensure the correct context is used for icon loading
updated ` readIdentifierWithSchema ( ) ` to use ` schema . getName ( ) ` instead of ` readIdentifierWithSchema ( ) `
[ bigquery ] support timestamp field for bigqueryio . read ( # 24489 )
added ` findViewWithTag ` method to ` ShadowView ` and ` ShadowViewGroup ` classes to retrieve views with tags to enable retrieval of
updated for - each loops to use generics for type safety to improve code clarity and reduce unchecked cast warnings
removed unused import of PColumnFamily and updated imports in IndexTool and MetaDataClient to improve code clarity and reduce dependencies
added JSON _ VALUE and JSON _ CREATOR constants and updated enum value retrieval logic in SpringBootDocBuildTemplate and SpringBootDocBuildTemplate
[ gr - 26354 ] add classpathutils . isjar to check if the file be a jar .
updated CUDA _ R _ 16F , CUDA _ C _ 16F , and CUDA _ R _ 32I constants in c
updated ResourceLoader class to use FileFilter for listing layout directories to enhance flexibility in resource loading based on file presence
add check for simpleattachablematerialdata before call getattachedface ( ) in redstonetorch .
added support for VARBINARY case in RelToStageConverter to enhance functionality for processing VARBINARY data
added import statement for DateHelper in NoteAdapter . java to utilize date formatting functionality for better date handling
updated backup message handling and validation logic in Backup . java and Captions . java to improve clarity of error messages and ensure proper backup rest
mow - 169 fix the position of the euclidiansimplepanel w .
removed the creation of a temporary pipe file in ShadowParcelFileDescriptor . java to simplify the file creation process by avoiding unnecessary file deletion
replaced ` poll ( ) ` with ` removeFirst ( ) ` and ` offer ( ) ` with ` addFirst ( ) ` in
updated rule name from " optimizations " to " controversial " in BooleanInversionTest . java to reflect the correct rule being
fix integerequalscanonicalizer to correctly handle ordinals of ordinals with ordinodes .
added a static final Type STRING _ ARRAY to TypeFactory to facilitate handling of String array types in the TypeFactory
refactor keyboard hiding logic to use a dedicated method for logging user events to improve code readability and maintainability by centralizing keyboard event
add blockstatecontainer . setbits ( int , boolean ) to force bit density to fix network issues
updated assertions in TimelineMetricCacheSizingTest and TimelineMetricCacheTest to improve clarity of error messages to enhance code readability
add a gl _ max _ texture _ size optimization to get max texture size .
[ java ] do n ' t try to stop log recording if it can not be start .
added a condition to reset startPosn based on whether the transformation is in a transform to ensure startPosn is set correctly during the transformation process
replaced the method ` isStarTreeDisabled ( ) ` with ` isSkipStarTree ( ) ` across multiple classes to streamline the
added a boolean flag to control the visibility of the progress bar in NearbyActivity to improve user experience by preventing multiple refreshes of
add maptransformer to make it easy to create a map from a map
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added support for loading launcher widget span information in the LauncherPreviewRenderer and PreviewSurfaceRenderer classes to enhance functionality by allowing access to launcher widget
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector ` and ` StageAction ` classes to align with updated event handling
added methods to retrieve and reset calling UID and pid in ShadowBinder and implemented corresponding tests in ShadowBinderTest to enable testing of calling UID and
replaced ` AutoValue ` with ` Objects ` and modified the ` ExpectationFailure ` class to include ` message ` and ` cause `
added a warning log statement in BitcoinSerializer . java to indicate that no support for deserializing messages with the specified name is available
pdfbox - 4892 : fix npe in imagereplacedelement when target be - 1
added support for HTML escape sequences in CoreMarkdownNodeRenderer and modified MarkdownWriter to handle new escape scenarios to enhance HTML rendering capabilities and ensure proper
added a warning dialog and refactored password handling logic in SharePasswordDialogFragment . java to improve user experience by providing a clearer action
refactor method retrieval for MAP _ ADDRESS and UNMAP _ BUFFER to use a new MappingMethods class to improve flexibility and maintainability
changed method visibility from public to package - private for several methods in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java
added support for Slider AM keytab directory in LlapOptionsProcessor . java to enable users to set default settings for the Slider AM
added a JFrame parameter to the tearOutGraphViewContainer method and registered a window for animation control in the ExtractionModelEditor to
added a loader completion mechanism and refactored related methods in LauncherModel . java to improve shortcut management and ensure workspace is loaded before executing
replaced boolean flags with direct calls to ` child . isFinished ( ) ` and introduced ` nodePaths ` set in multiple operator classes to
updated ` add ` method signatures and introduced ` setCheckValid ` method in ` IssueInterface ` , modified ` ValidationReport ` class to include
added a method to safely retrieve the cipher provider name and modified exception handling in RSAClientKeyExchange . java to improve error handling and provide clear
rename ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple files to ensure consistency with the new configuration naming conventions
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity for non - critical issues
remove unnecessary indentation in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public to allow external access to bitmap properties
added an @ Ignore annotation to the CovariantOverrideTest . java file to indicate that the test does not yet know how to implement covariant
refactor curly method to use Qtype directly instead of creating a new node to improve code readability and maintainability by reducing redundancy
camel - 1868 : camel - core - reloadstrategy should use the type converter to load the resource as xml to avoid reflection .
added space minimum and maximum values for the X - axis in ScatterChart to improve visual spacing in the chart
removed unnecessary whitespace in the string builder append statements to improve code readability and maintain consistency in formatting
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` State
added a check to ensure the UTF8 key is present in the properties file to prevent runtime errors due to missing UTF8 key
updated LuceneTestCase to use @ SeedDecorators and added System . out . println in TestReproduceMessage . java to improve
added a long - press event logging for the AllApps item in the StatsLogManager and ItemLongClickListener classes to track user interactions with the
added null check for the log variable in StoreWAL . java and created a new test class Issue112Test . java for double - commit
added a condition to check for ` showSectorLandInfo ` in the ` Control ` class and introduced a new ` SectorPreset `
updated generic type usage in CompositeType methods to use wildcard generics to improve type safety and eliminate unchecked cast warnings
refactor Enum class to improve code readability to enhance maintainability and facilitate future feature additions
improve error message for nearbyselectorconfig and nearentitynearbyvalueselector
remove temporarycache . removetimemanager and use cache builder instead
updated visibility settings for SQL view and WMS layer import containers in NewLayerPage . java to improve UI responsiveness by disabling unnecessary
initialize ` Availability _ availability ` to ` Availability . UNAVAILABLE ` in ` ContextHandler . java ` to ensure that ` Availability _ availability `
updated ` processPBFTCommitMessage ` method to accept ` BlockCapsule ` instead of ` long ` to improve clarity and functionality of
chore : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1 (
changed the default value of ` _ freeSpaceReclaimDisabled ` to ` _ freeSpaceReclaimQ ` and updated related methods to allow
changed access modifiers of KDC options constants from public to private static in KDCOptions . java and added a new class KdcDefaultOptions
updated writer initialization and assignment logic in Json . java to improve code clarity and ensure proper assignment of the writer variable
formatted code for consistency and readability in ProfilePager . java to improve code maintainability and adhere to coding standards
rename ` paintBackground ` method to ` paintComponentBackground ` in ` Slider . java ` to clarify the purpose of the method
added a method to retrieve values from a class constant in Configuration . java to enhance configuration flexibility by allowing dynamic value retrieval from class constants
added error handling for service initialization in KafkaService . java to improve debugging and traceability of service initialization failures
added " usr / share / zoneinfo / tzdata " to the resources _ TO _ ALWAYS _ ACQUIRE set in InstrumentationConfiguration
add support for ' auto - create - channels ' for the ' default - output ' channel .
added support for index keywords in HTMLDocument and implemented a corresponding test case in TestDemo to enhance the indexing process by allowing keywords to be indexed
updated SDK version check from S to R in FileUploader . java to ensure compatibility with Android R instead of S
added a conditional statement to initialize ` _ addresses ` in ` MemcachedSessionDataMapFactory . java ` to ensure proper initialization of ` _ addresses `
change the instantiation of CorrespondenceSubclassToFactoryCall from a new instance to a class reference to ensure the test correctly references the class
refactor Builder class to improve code readability to enhance maintainability and facilitate future development
improve handling of isbn to bibtex fetcher
[ polyglot ] make keep - alive - time configurable for polyglot implementation .
added a null check for the text variable before firing data change events to avoid potential NullPointerException when the text is not initialized
make the sentiment model more robust by avoid null pointer exception
trim whitespace from the line input in SuffixURLFilter . java to ensure consistent URL processing by removing leading and trailing whitespace
added a check to return early if the player is in Godmode to improve performance by avoiding unnecessary processing when in Godmode
ggb - 1357 do not register and unregister popup in checkbox creation dialog .
removed the ` maximumSize ` parameter from the ` LinkedHashMapCache ` constructor and updated its usage in ` TCache ` to simplify constructor parameters and
replaced ` _ channel . close ( ) ` with ` close ( ) ` in ` ChannelEndPoint . java ` to improve code clarity
added null check for keyIndex and refactored KeyIndexBuilder initialization in multiple classes to improve robustness and clarity in handling missing key
updated exception handling in DirectUpdateHandler2 . java to include Locale in error message formatting to improve error handling clarity and ensure consistent locale formatting
add an optional guardingnode storecheckguard to writenode
do n ' t try to follow a node out of the boundary in the exception dispatch block .
add getclassificationdisagreement ( ) method to dbcloud and abstractcloud . getclassificationdisagreement ( )
replaced ` BuildTarget . copyOf ( unstrippedTarget ) ` with ` BuildTarget = unstrippedTarget ` in multiple files to
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver . java ` and
renamed ` knownApis ` to ` knownSdks ` and updated related methods for clarity to improve code readability and maintainability
replace progressindicator with confidenceprogressindicator in createofferview
updated user agent header check from " Cling / " to " UMS / " across multiple files to ensure compatibility with the new UMS
allow iteratebpt to be call without iteratebpt ( ) if it ' s set to true
added support for custom message views in CrowdfundingChatAdapter and updated the onCreateViewHolder method to handle different view types to improve
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
use -- instead of -- -- to avoid conflict with regular expression
removed the unused ` canvas ` parameter from the ` insert ` method and added padding logic for images to simplify the method signature and improve image handling
replaced the ` getVisitors ( ) ` method with a ` apply ( Refactor < S , T > ) ` method in ` Re
added methods to retrieve child elements by name and recursive to enhance functionality for managing child elements in XML processing
set the Content - Charset header to " UTF - 8 " in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling of UTF
updated SystemUiController to use a new annotation and removed static import for UI _ STATE _ ALLAPPS to streamline UI state management and
removed the private ClientConfigurationService clientService field from IntrospectingTokenService . java to simplify the class by eliminating unnecessary dependencies
enhanced the RuntimeException message in HiveRecordSet . java to provide more context about the error encountered during the Hive split initialization process
removed the ownerId field from NodeEntry . java to simplify the code by eliminating unnecessary fields
fix typo : backup . rightafter - > backup . after - takessnapshot
added score calculation in the merge method of TextFragment to ensure the score does not exceed the existing score when merging text fragments
removed the private Digester variable from Md4PasswordEncoder . java to simplify the class and improve maintainability
added validation to ensure maximumUnimprovedStepCount is greater than 0 to prevent illegal argument exceptions
added a check to return early if there are no opened editors to improve efficiency by avoiding unnecessary processing when no editors are open
replaced calls to ` verify ( mock ) ` with ` Mockito . verify ( mock ) ` in ` BDDMockito . java
updated ClassLoader initialization to use PathScanner . class . getClassLoader ( ) instead of Thread . currentThread ( ) . getContextClassLoader ( ) to ensure correct class
[ scb - 1342 ] add async method for sayhb2 ( # 1342 )
add log initialization in abstractsplitbraintest ( # 11956 )
added null checks before setting the logout filter in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure proper handling of logout configurations to avoid potential
[ giac ] do n ' t use degree ( ) when there be no degree ( )
refactor DockerComposeContainer to use a concurrent map for logging consumers and add a withLogConsumer method to improve logging management and facilit
updated the generic type of the testMapping method parameter from Class < ? > to Class < ? > in StandardJavaTypeMappingTest . java to
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a convenient way to create a ` ThrowingSupplier
replaced ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to ensure the method returns a boolean value
( chore ) camel - platform - http : fix camel - platform - http : / / github . com / apache / camel - platform
added platform - aware path handling methods in MorePaths and updated references in CopyStep and AarWithLibsIntegrationTest to ensure compatibility with different operating systems when working with file
added a null check for authorizationContext before processing parameters to avoid potential NullPointerException when processing parameters
added a new method ` throwExceptionIfFail ( ) ` to handle library loading failures to improve error handling by ensuring that file existence checks are performed
updated SDK version from " 4611349 " to " 4514284 " and added unit tests for text - to - speech functionality to
fix queuetransactionlog . getitemid ( ) and getitemname ( ) return wrong value
added support for ` ` enable sql without profile ' ' to the jdbc environment
added a try - finally block around the data writing process in ConnectHandler . java to ensure _ data is properly set to null in case of
fix compile error in eclipse with eclipse 3.8 . 0
updated the date parameter from ' date ' to ' calendar ' in DateUtils . java and removed an assertion in FontParsersTest . java to
updated the ` loadValue ` and ` getThreadInfo ` methods in ` CachedThreadStatesGaugeSet ` and ` ThreadStatesGaugeSet ` to
added a protected TransactionLog variable and conditional postCommit call in UpdateLog . java , and modified sleep duration in LeaderTragicEventTest
updated the FastAsyncWorldEdit job version from P2 - V6 to 1.17 to ensure compatibility with the latest features and improv
added a check for the existence of output directories and modified file creation logic to ensure the output directory is created if it does not already exist to
added a new method ` calculateNormalVector ` to ` ObjUtils ` and modified the way normal vectors are calculated in ` TriangulationHelper
updated JdbcAuditService to use IdentityZoneHolder for identity zone ID retrieval to ensure correct identification of audit events based on the current identity zone
refactor SpanCollector class to improve code organization to enhance maintainability and readability of the code
added a null check for the current session before retrieving it from the SESSION _ MANAGER to prevent potential NullPointerExceptions when accessing session information
refactor TransactionIsolationLevel class for improved transaction management to enhance performance and maintainability of transaction handling
corrected the spelling of " printLogicalVolumegroups " to " printLogicalVolumegroups " in Osh
added thread name setting for the current thread in TestSession . java to improve debugging by providing more context on the thread being forwarded
refactor CookieManager to improve cookie management functionality to enhance performance and maintainability of cookie handling
replaced the creation of an ArrayList with an empty return statement in LauncherExtension . java to simplify the code by returning an empty list instead
added OverviewToAllAppsTouchController to the list in RecentsUiFactory . java to enhance user interaction with the app ' s
replaced the method ` scaleHotseatWithWorkspace ` with ` getHotseatScaleAndTranslation ` in ` LauncherState `
updated the stack trace filtering logic in DefaultStackTraceCleaner and added a new test in StackTraceFilterTest to ensure that JUnitRule elements are
replaced direct buffer handling with direct buffer operations in MappedResizeableBuffer . java to improve memory copying efficiency and clarity when dealing with direct
added a private BalanceListener variable and modified its usage to ensure proper management of the BalanceListener instance
added a conditional check for edge mode before converting paint color in RealisticRenderer to ensure correct color assignment when the edge mode is not sticky
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and updated log initialization method to use LogFactory . getLog ( ) to improve
fix gl200 decoder ( fix # 432 )
refactor playback timing logic in FullDetailsActivity to use a local variable for last playback time to improve code readability and maintainability by redu
spanish xml tree reader : improve elliptic detection
added a check to clear the language context if the value is an empty string in InstallItem . java to ensure proper handling of empty language values
updated the method of overriding the scheme in ` ReactiveLoadBalancerClientFilter ` to use ` isSecure ( ) ` to ensure correct scheme is overridden
log4j2 - 1343 fix concurrency issue in defaultmessagestore
removed the ' final ' modifier from the ' fullFilePathFromClassName ' method in NativeImageDebugInfoProvider . java to allow method overriding in
refactor the Correspondence implementation to use a lambda expression instead of an anonymous class to improve code readability and reduce boilerplate code
replace occurrences of USLocale with ENLocale in multiple Java files to standardize language support terminology across the application
removed redundant null check for redeemData in LocalTransactionSigner . java to simplify the condition for better readability and maintainability
add minecraftforgeclient . java for tessellator usage .
added a return statement in TxCacheDB . java to ensure proper termination of the method execution
updated import statements from ` com . sun . xml . internal . ws . org . objectweb . asm ` to ` jdk . internal
refactor FastDictionary class to improve performance to enhance efficiency of dictionary operations
fix for http : / / issues . apache . org / jira / browse / http : / / code . google . com / p
updated the parameters of the FlightEvent instances in the FlightEventsTest class to reflect new values and adjust epsilon calculations for improved accuracy
chore ( bazel ) : upgrade gapic - generator - java to 2.16 . 0 and update gax - java to 2.
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the namespace declaration is correctly
update profile picture link to include displayable session name and course id
added shortRules list and modified defaultRules initialization in DefaultPasswordValidator to enhance password validation flexibility by allowing both alphabetic and numeric sequences
danielwagnerhall : increase default response size for remotecontrol to 20
removed the JUnit @ Test annotation from ProxyClassSerializationTest . java to simplify the test class by eliminating unnecessary dependencies
updated the argument string format in DLNAMediaInfo . java from " scale " to " format = bgr24 " to ensure
remove speculative guard movement phase from truffle test .
added checks for multiple authentication managers and disabled bean definition overriding in AuthenticationManagerBeanDefinitionParser to ensure that authentication managers do not override the bean definition
added checks for ` _ server ` and ` _ host ` in ` ForwardedRequestCustomizer ` to ensure proper handling of forwarded server fields
set the length of the StringBuilder to zero in ConsoleReader . java to ensure the StringBuilder is reset before further operations
change access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these fields for better extensibility
update OpenIDE - Module - Specification - Version from 1.54 . 0 to 1.55 . 0 and update project properties and properties to
hbase - 25801 make netty tl wrap size configurable ( # 2539 )
refactor multiple classes related to CookieStore , Inet4Address , Inet6Address , and SocketOption to improve code organization and maintainability
updated FixedLengthTokenizerTests to use JUnit 4 assertions instead of TestCase and added tests for incorrect line length exceptions to improve test coverage and
updated the protocol binding configuration in OpenSamlAuthenticationRequestFactory and added unit tests for validation to ensure the protocol binding is valid and validate its usage
updated SurfaceControl transaction handling in DepthController . java to utilize AttachedSurfaceControl for transaction application to improve rendering performance and ensure transactions are
update version number to 2.5 . x in AsciidoctorConventions . java to ensure compatibility with the latest version of the
changed the action of the " prePrepareBulkLoad " and " preCleanupBulkLoad " methods from WRITE to CREATE in AccessController . java to
updated the ` subList ` method to start from ` 0 ` instead of ` size ( ) ` for ` unSeqMergeList ` to ensure
camel - 14284 : file : / / convert from inputstream to inputstream so we can use it in the converter . thanks
added a login method to the ShardManager class and modified the DefaultShardManagerBuilder to conditionally call it to ensure that the login method only
removed unnecessary line breaks in the DeleteGlobalRef method call to improve code readability and maintainability
changed the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to improve clarity and consistency in
refactor response handling in HttpSender to check if the completion is marked before terminating the response to improve error handling by ensuring the response is only
added a check for ` isUserStudent ` before comparing ` giver ` in ` FeedbackResponseCommentsLogic . java ` to ensure that
added security checks for linked color space and linked profile handling in BMPImageReader . java to ensure proper handling of linked color profiles
updated location and plot block calculations in MainUtil . setSimpleCuboid calls to correct the coordinate calculation logic for improved accuracy
add a wait message when pmd check the file in the package
refactor grid size initialization to use a dedicated method for setting grid sizes to improve code readability and maintainability by reducing redundancy
changed return values from false to true in ContributionsListFragment . java to ensure the method accurately reflects its intended functionality
added a test skip range for distinct queries in DistinctPrefixFilterIT . java and improved limit handling in BaseResultIterators . java
add a new test method for verifying checkbox group properties in PDButtonTest . java to ensure correct functionality of checkbox properties in the acro
added a method to retrieve the last modified time of a file in BlackBerryImplementation . java to enable retrieval of the last modified timestamp of
added a condition to check for the " metaTable " property in HiveIcebergStorageHandler . java to ensure that metadata tables are valid
use a combo box instead of a text field for currency selection .
changed catch block from IOException to Throwable in WriteFlusher . java to handle a broader range of exceptions and improve error handling
added a new boolean variable ` mStartedEnterAnimation ` and modified the animation logic in ` IconRecentsView . java ` to improve the
added a new private String field ` activeKeyId ` to the ` UaaConfiguration ` class to facilitate the management of an active
updated action labels and descriptions in SendMailActions . java for clarity and consistency to improve code readability and maintainability by using descriptive
changed the visibility of the isActive variable from private to volatile to ensure visibility of the isActive variable across multiple threads
updated the ` isDesc ( ) ` method from ` isDesc ( ) ` to ` isAsc ( ) ` in ` OrderByExpressionContext
fix compile error due to cast to charsequence
added a check for the " ownCloud " app name in the date validation logic to ensure that the application ' s name matches the application '
hbase - 26905 : add permission to hbase . rootdir . perms when kerberos be enable ( addendum )
change return value from httpServletRequest . getLocale ( ) to httpServletResponse . getLocale ( ) in JakartaServletWebExchange and Jav
refactor Instant class to improve readability to enhance maintainability and ease of understanding for future developers
updated state format handling in CollectionsHandler and related test classes to use String instead of int to ensure consistent state format handling and improve clarity in
updated logging statements in CentralAuthenticationServiceImpl . java and modified ticket type check in AbstractTicket . java to improve clarity and correctness
pdfbox - 4892 : ignore illegalargumentexception in pdfbox - 4893
removed unnecessary whitespace in conditional statement in AbstractFileResourceSet . java to improve code readability and maintain consistency
added PathTranslator to PluginParameterExpressionEvaluator and modified related logic in DefaultPluginManager and tests to enhance file directory alignment functionality by utilizing the
[ beam - 8470 ] move protobuf coders from proto to extensions . protobuf
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer and added a test for signed numeric literals in HqlQuery
updated LaunchLug and RailGuideHandler to accept parent length and set instance count and separation to improve clarity and functionality of launch
removed the ` getNonceFactory ` method that returns ` null ` in the ` BitmexStreamingExchange ` class to simplify the code by
( chore ) camel - mail : use parameterized logging in camel - core
[ java ] update driverconductortest to use default timeouts and mtu
changed the initialization flag from true to false in ScanSpec . java to disable loading classes by default
added a call to grab the focus of the search field in FullTextSearchPanel to improve user experience by ensuring the search field is ready for
refactor NioParams initialization in TlsConnectionLogging . java to improve code readability and maintainability
replaced an assertion with a comment in StatementTest . java to simplify the test case by removing unnecessary assertion
updated assertion message formatting in TestSolrConfigHandler . java to improve clarity of failure messages for better debugging
replaced ` HttpMethod ` with ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilterTests . java ` to
updated the filtering logic in FilterResourcesStep . java to use a variable for the density to improve readability and maintainability of the code
added a method to retrieve the UIID based on the component type and refactored UI update logic to improve clarity and maintainability of
removed the check for display metrics in RecentsAnimationDeviceState . java to simplify the condition for better readability and maintainability
added new files TestCopyArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java for testing array cloning
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix annotation to address
fixed - rexecutorservice . schedule ( ) method throw npe if nextstartdate be null
simplified the condition for determining whether to update credentials in FileDownloader and FileUploader to improve code readability and maintainability
added a null check for the scanner before closing the scanners list to avoid potential NullPointerExceptions when the scanner is null
[ java ] add default value of 0 for network metric ( # 12427 )
added a parameter to the getClaimsForToken method for the " id _ token " claim to ensure that the " nonce " claim is correctly
refactor multiple chart editor classes for consistency and clarity to improve maintainability and readability of the codebase
added width and height adjustments for the form layered pane in the Form class to ensure the form layered pane displays correctly based on the
added a maxY method to the BrowserContentPane class to calculate the maximum height based on the owner ' s owner ' s height to ensure proper
modified the ` openDatabase ( ) ` and ` openSharedDatabase ( ) ` methods to return a boolean indicating whether the database is connected to
replaced direct references to ` DOCKER _ COMMAND ` with ` Platform . DOCKER _ COMMAND ` in ` DockerTestUtils .
testisartorvalidationfromclasspath do n ' t fail if there be no input file
updated the drawLeaveBehind method to accept a customizable folder leave behind color to enhance the visual appearance by allowing dynamic color customization
show an error dialog on android studio canary version mismatch
api : check for null table name in identityproxy table before retrieve uuid
added modulePersistEnable and modulePersistDisable lists to the StartArgs class to allow users to enable or disable modules based on their command - line
updated the argument length check in GeminiMarketDataService . java from a specific index to a greater than or equal to 1 to
replaced HashSet with LinkedHashSet for storing questions in the request context to maintain the insertion order of the questions collection
add a test case to demonstrate a problem with the unit test .
updated exclude statements in AuthCheckFilter . java to exclude specific setup jsp files to enhance security by excluding specific setup resources
refactor postDelayed method to use a separate queueRunnableAndSort implementation to improve code readability and maintainability by encapsulating runnable execution logic
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use String . . . args instead of String [ ] to
added error handling for reading characters from an input stream in XMLParser . java to improve robustness by handling potential end - of - stream exceptions
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest ` to mark the test as ignored due
update arrow pivot coordinates in DeepShortcutsContainer . java to ensure proper alignment of the arrow based on its icon positioning
do n ' t print stacktraces when interrupt file update monitor
modified the updateThumbnail method to include a refreshView parameter and updated related logic to enhance functionality by allowing thumbnail updates based on the refresh state
pdfbox - 2576 : improve help message for extractttftonts
updated InternetAddress constructor to include a boolean parameter and improved hostname validation check in HostnameFormatSpecifier to enhance address handling and provide clearer error
removed unnecessary references to ` AuthenticatorActivity . this ` and ` OperationsService . this ` in multiple activities to simplify code and improve readability by
updated the handling of document IDs in SizeBasedDocIdIterator and related classes to improve clarity and correctness in document ID management
updated promptToOpenFile methods in FileDialoger to accept an existing file name parameter to enhance file chooser functionality by allowing users to
updated widget and app span settings in AppsCustomizePagedView . java and refactored page counting logic in AppsCustomize
refactor coordinate retrieval and transformation logic in FlightConfiguration . java and FlightConfigurationTest . java to improve code clarity and maintainability
camel - 13663 : camel - spring - micrometer - make it easy to configure component and whatnot .
updated DateTimeFormatter to use Locale . ROOT for default date format to ensure consistent date formatting across different locales
[ ds - 3952 ] filter out hidden metadata when convert to dspace
added a test for missing required dimension and metric names in the StarTreeConfig builder to ensure that the builder correctly handles missing dimension and metric
camel - 16462 : camel - spring - xml - dsl - add support for dynamic and static recipient list
refactor InlineLayoutBox and HoverListener classes to improve layout handling and repaint logic to enhance code readability and maintainability while ensuring proper
refactor authentication operation handling to use OperationsService instead of DetectAuthenticationMethodOperation to improve reliability and maintainability of the authentication process
