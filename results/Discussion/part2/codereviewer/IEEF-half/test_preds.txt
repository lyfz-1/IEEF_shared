refactor SocketAppender initialization to set remote host and port directly to improve flexibility by allowing remote host and port configuration
refactor header handling in BasicAuthPlugin to use forEach method to improve code readability and maintainability
replaced ` RecordDescriptor . msgLengthOffset ( recordIndex ) ` with ` msgLengthOffset ( recordIndex ) ` in ` ManyToOne
cloudstack - 5391 : fix npe in capacitymanagerimpl . getovercommitratio ( ) when vmdetails be null .
added a constructor and a getter method for anti - aliasing flags in ShadowPaint to enable testing of anti - alias functionality in the Paint class
updated the title of the MassSetFieldsDialog to use localization to improve localization support for field names and content management
updated bug reporting logic in DetectorsTest . java to handle cases where Eclipse was not used to compile the project to improve clarity of
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 562 : do n '
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` constructor and methods to handle socket connection and disconnection to improve
refactor conditional statements in OrcEncodedDataReader . java for clarity to improve code readability and maintainability
updated the filter condition in HomeConnectBridgeHandler to include only enabled things to ensure that only active handlers are processed for better performance
added null checks before modifying policies in AuthorizeAdminServlet to avoid potential NullPointerExceptions when bs is null
refactor assertions in ` DefaultTypeAdaptersTest ` and ` ObjectTest ` to use ` assertThat ( json ) . matches ( ) `
added JSON serialization and retrieval of DAG information in TezTask . java to enhance debugging capabilities by providing detailed DAG information during execution
updated time calculations in ComputedSummary . java and added getHeapTime method in HprofHeap . java to improve accuracy of heap time retrieval
replaced RxJava2Tasks . getUploadCount with CommonsApplication . getMWApi and removed RxJava2Tasks class to streamline upload count retrieval
removed unnecessary conditional checks in MVTable . java to simplify code logic for better readability and maintainability
[ issue # 5892 ] fix commitlog offset overflow ( # 5893 )
added a check to determine if a folder is open before marking it as open to ensure that the folder information is marked as open when the associated
added a test method to verify sorting of PGProperty names in ascending order to ensure that PGProperty names are correctly processed in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to Common . java to provide a
updated method parameters from Object to ItemInfo in UninstallDropTarget . java to enhance type safety and improve code clarity
updated assertions in RequestBuilderTest to use ` isIn ` instead of ` hasMessage ` to improve clarity of error messages for better readability
replaced ` NearbyMapFragment ` with ` NearbyListFragment ` and updated related fragment handling in ` NearbyActivity
renamed the parameter from ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor to improve clarity and consistency
added a new property ` send _ zero _ anomaly _ email ` to the ` EmailConfiguration ` class and its getter / setter methods to
[ hotfix ] [ kafka ] fix flinkkafkaproducerbase # open with restore state
removed unused methods for retrieving user and geofence from the DataManager class to streamline code by eliminating unused functionality
added a constructor to ` BlockingResponseListener ` that accepts a maximum length of 2 MB to improve flexibility in handling larger request sizes
refactor memberBroadcastsReceived method to accept a byte array instead of a single channel data array to improve code clarity and maintainability by
replaced System . out . println with logger . info for snapshot paths and added a try - finally block for resource management to improve logging cl
updated test assertions to remove leading slash from URLs in LoginSAMLAuthenticationFailureHandlerTest . java to ensure consistency in URL formatting across tests
[ hotfix ] fix checkstyle violation in configmetadataservicetest
updated import statements in ListFragment . java and renamed the parameter in updateNoteReminder method in SnoozeActivity . java to improve
added a private static class AcceptAllFilter to streamline directory stream filtering to improve code readability and maintainability by reducing redundancy
refactor JdbcTestDataSet class for improved readability to enhance maintainability and facilitate future development
do n ' t crash with noclassdeffounderror if a type can not be find
refactor Docker image name validation to use a new utility class to improve code readability and maintainability by centralizing validation logic
updated dialog messages in LoginActivity to provide clearer context for login failures to improve user experience by providing clearer feedback on authentication failures
bug fix : setautofocus ( ` ` autofocus ' ' ) do n ' t work
added tests for ` IdentityZoneConfiguration ` and ` SamlConfig ` in ` SamlIDPRefreshMockMvcTests ` to ensure correct
added a check to ensure the list is not empty before adding it to the stack in ComparableVersion . java and created a new test for M
replaced bottomLeftMode and topLeftMode with bottomRightMode and adjusted return statements in Sheet . java , and added padding and margin properties
moved ParallelUniverse class from the org . robolectric . android package to the org . robolectric . android .
refactor method handle assignment in LocalCacheFactory and simplify return type handling in NodeFactory to improve code readability and maintainability by reducing
changed the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in the FrillsAndFills . java file to
added functionality to display self - loops for graph edges and self loops in the ProcessingPreview class to enhance visual representation of graph edges and self loops
updated configuration and method names from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLID
rename method ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to improve clarity and consistency in method naming
set the translation of the drag handle indicator to zero in AllAppsTransitionController to ensure the drag handle indicator is fully visible during all apps transitions
removed unnecessary logging statements in CollectionViewer , CommunityViewer , and ItemViewer to clean up the code and improve performance by eliminating unnecessary
updated the description of filter pushdown configuration in HiveConf . java to clarify that filters may be pushed down in the operator tree to
added an assumption to skip tests on OSX in ScanningAppProviderRuntimeUpdatesTest . java to address build server issues caused by finding itself
added Maven bundles for " jetty - alpn - java - client " and " jetty - alpn - client " to support the
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 565 : update
refactor Transaction class to improve code readability to enhance maintainability and facilitate future development
replaced ` @ AddToRuleKey ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to exclude
danielwagnerhall : make firefox _ no _ remote work on window by default
replaced ` putIfAbsent ` with ` containsKey ` for adding elements to the ` colFamToDynamicColumnsMapping ` map to prevent duplicate entries
[ hotfix ] [ runtime ] remove unnecessary ` @ suppresswarnings ( ` ` rawtypes ' ' )
added logic to handle views with derived columns and indexes based on client version and view type to ensure proper handling of views with non - mapped views
fix issue where instructor ca n ' t be delete when delete the instructor
replaced the import of TestCellReference from org . apache . poi . xssf . util to org . apache . poi . ss
fix the mana piston not be able to spawn when there ' s a hardness . close # 374
added a new file LongPointerPressTest3049 . java to implement a UI component with a network error handling mechanism to demonstr
truffle : remove dependency on trufflefunctioninlining in partialevaluator .
refactor conditional statements in BaseBuilder and XMLConfigBuilder to use ternary operator to improve code readability and maintainability
removed unnecessary check for ListBlockParser in ListBlockParser . java and added a new test for deeply indentedList in SpecialInputTest .
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use its methods for checking presence , empty ,
ignore webflux test until http : / / github . com / spring - cloud / spring - cloud - gateway / issues / 1070 be
make testcaselogger . savemessage ( ) a no - op
removed unnecessary whitespace in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the video format is video before processing web subtitles to ensure web subtitles are only displayed for video formats
added security property " jdk . tls . disabledAlgorithms " to ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS algorithms for
server : do n ' t try to start vm from local storage when local storage be use .
updated logging statements in Driver . java and QueryResultsCache . java for improved clarity and consistency to enhance readability and maintainability of
add option to skip model update after manage dependency
added a test for the last intent sender request in ` ShadowActivityTest ` and implemented a send method in ` ShadowPendingIntent ` to ensure
updated logging messages and refactored rendering hints handling in RocketFigure3d . java to improve clarity and maintainability of the
added synchronized access to the controllerListeners list in HydrawiseAccountHandler and implemented dispose method in HydrawiseControllerHandler to ensure thread safety
added a static ` beforeClass ` method to ` TestCoreAdminApis ` to skip tests that do not work with Java 9 to ensure
updated year retrieval logic to use ` getLocalDate ( ChronoField . YEAR _ OF _ ERA ) ` instead of ` Math . abs (
fix a potential npe if the jabber connection be already disconnect .
updated the string format in TxnHandler . java to include ' cur _ ws _ commit _ id ' to improve clarity of the commit ID
replaced ` ByteChunk ` with ` ByteBuffer ` in ` BufferedInputFilter ` to improve memory handling and handle ` BufferOverflowException `
added a new method ` toSync ` to ` AsyncUtils ` for converting a ` CompletableFuture < T > ` to a ` CompletableFuture < T
added ActionGraphBuilder to multiple compiler factory classes and updated method signatures accordingly to enhance the build process by integrating ActionGraphBuilder functionality
danielwagnerhall : fix issue with hidden file upload
removed duplicate code for creating tables in SQLManager . java to streamline the code for better readability and maintainability
added a check for the existence of a file before returning the local Maven directory to ensure that the method returns the correct local Maven directory if the
ggb - 1341 hide algebra label if it start with ` ` hidden ' '
fix npe in ctelementimpl . getmetadata ( ) when metadata be null
replaced ` setFlags ( C . BUFFER _ FLAG _ DECODE _ ONLY ) ` with ` addFlag ( C . BUFFER _ FLAG
added a condition to check if the cached entity is not sorted by ID before proceeding with reordering to ensure that reordering only occurs when
updated error message from " Method call not specified for verify ( mock ) " to " Missing method call for verify ( mock ) here " to
added null check for backupFolder before logging expiration date in ContactsBackupJob . java to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for creating an instance of ` void ` to demonstr
added @ AddToRuleKey annotation to the toolType field in ClangCompiler and GccCompiler classes to ensure that the toolType field
replaced hardcoded timestamp and lastStart values with a constant PINCODE _ TIMEOUT to improve code readability and maintainability by using a
added isampled ( ) method to prometheusmeterregistrytest and prometheusexemplarssample that return true
removed @ Ignore ( " requires mongodb server " ) annotations from multiple test classes to enable the tests to run on the required MongoDB server
fix checkstyle issue in util / jms / ConsumeUncompressedCompressedMessageTest . java
updated condition in MetaDataSource to check if the table is not artificial instead of checking if the name starts with a space to ensure that
updated file type checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
added null and empty checks for session attributes and improved variable naming in MongoSessionManager . java to enhance code robustness and prevent potential NullPointerException
replaced setFixedSize with setSizeFromLayout in CameraSurfaceView . java to improve layout handling for surfaceHolder
replaced direct usage of ` _ stopping ` with a local variable ` stopping ` in ` AbstractConnector . java ` to improve code readability
removed unnecessary whitespace from method parameters in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 11350 : optimize - stopwatch should be tiny to have less memory footprint
[ hotfix ] [ test ] fix flaky test in delayedmonopublishertest
updated WebSocketHandshakeException assertion to use fail instead of assertTrue to improve error handling by explicitly indicating the expected type of the error
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener instead of an anonymous inner class to improve code readability and maintainability by
refactor variable name from ' theHandler ' to ' handler ' for consistency to improve code readability and maintainability
added support for the ' default - output - channel ' attribute on the < xpath - router / > element to allow customization of the output
changed the data type of ` cacheSeconds ` from ` int ` to ` String ` and updated its usage in ` CasCoreWebConfiguration `
update openapi version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in ParameterDeSerializationTest
removed a call to append ( buffer , true ) in ByteBufferPool . java to streamline buffer handling and improve performance
added a check for the presence of " alt - rt . jar " in the boot class path and printed a warning if it is detected to
updated usernames and email handling in JdbcScimUserProvisioningTests . java to ensure correct usernames are used and improve test accuracy
replaced ` Arrays . asList ` with ` List ` for options in ` FlightRecorderProfiler . java ` to improve code readability and
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check
added a condition to check if the content view has content before processing the buffer in HttpParser . java and implemented a test for chunked PUT requests
camel - 14284 : fix typo in atmosendpoint javadoc
added support for " printf " and " print " methods in Java2TypeScriptAdapter to enhance functionality to support additional print functions in the Java
added a new test class ` TestCapacityUntilGCWrapAround ` and native methods for managing metaspace capacity in ` WhiteBox ` to ensure
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a condition to adjust the endTime based on whether the resource is stamped at the start to ensure that the endTime accurately reflects the
added unit test base on user forum issue
tmi - jpeg : do n ' t throw iioexception on bad icc profile chunk
fix the rod of the terra pick and terra rod not cause reequip animation
removed configuration and environment bindings from JoobyModule and SpringModule , and added a method to ignore entries in SpringModule to streamline
refactor to use container . getparentclassloader ( ) instead of thread . currentThread ( ) . getContextClassLoader ( )
add additional nameupdater . properties file to allow add additional namemap entry
added initialization of started variable in EllipsoidRegionSelector . java to ensure proper tracking of the state of the ellipsoid region selector
updated the Codenameone protocol from HTTP to HTTPS in multiple JavaSEPort . java files to ensure the Codenameone protocol is
[ geos - 5398 ] wfs getfeature should validate the sortby attribute of the request
updated null check for grantor assignment in AbstractJdbc2DatabaseMetaData . java to ensure correct handling of null values in grantor assignment
added graphics configuration and updated image handling in DiagramGenerationTest . java to ensure compatibility with specified image dimensions and improve image comparison accuracy
add a check for null sideddelegate in fmlcommonhandler . getminecraftlogger to avoid npe
refactor DataUtilities and ReTypeFeatureReader classes to improve code readability and maintainability
make locktest more stable by use asserttrueeventually
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for improved tokenization functionality to enhance code readability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5652 -
refactor command handling in SystemHighlighter to use ParsedLine for improved readability to enhance code clarity and maintainability by reducing
update version to " 1.0 . 1 - SNAPSHOT " and version date from " 2012 - 07 - 14 " to " PENDING "
update buffer position to use dimensionSize instead of idx to ensure correct dimension size is set for circular buffer handling
added functionality to check if a shell drag state is ready to handle drag operations to enhance user experience by ensuring proper state management during drag operations
( chore ) camel - tcp : fix test that fail only on java 7
added support for PSK - AES256 - GCM - SHA384 + TLSv1.2 in TestCipher . java to enhance security
updated the method to retrieve the long description instead of the description to improve clarity and accuracy of the description displayed to the user
added JsonProperty annotation to ScimGroupMember . java to enable JSON serialization for the " value " field
refactor HqlQueryRenderer to handle reserved words more efficiently and improve query formatting to enhance query performance and maintain consistency in handling reserved words
corrected a typo in the parameter name from " d " to " s " in ObjectHelper . requireNonNull to improve code readability and
refactor Parser class to improve code readability to enhance maintainability and facilitate future development
added a new parameter ` indexStartsAtOne ` to the ` offsetStreamIndex ` method and modified its logic to adjust the stream index based
tika - 697 - add mime type for cpio and archive file
[ hotfix ] [ table - planner - blink ] remove getmonotonicity method from sqloperatortable
added Inheritance annotations and implemented equals ( ) , hashCode ( ) , and toString ( ) methods in OneTimeTokenAccount and OneTimeToken
added a condition to check if the assistant is not launched before firing fling logic to ensure that fling behavior only occurs when the assistant is
added a new file SolarisShortDSA . java that implements key pair generation and verification using DSA to address the Solar
added toggleSearchLabel ( false ) to ListFragment . java to improve user experience by disabling search functionality
cloudstack - 4891 : create volume from snapshot - lock the volume before try to create a snapshot .
refactor ServiceConnection to DetailsServiceConnection and update its initialization to improve code clarity and ensure proper resource management during service unbinding
refactor exception handling in HttpClientTLSTest to use AtomicReference for better thread safety to improve test reliability by ensuring the correct exception is
removed the equals method from ConjunctionScorer class to simplify the comparison logic by eliminating unnecessary method
added a null check for the variable ' v ' in the bindItems method to handle potential null pointer exceptions during item binding
fix cpmemberaddremoveretest and metadataraftgroupmanager . testgetgroupids ( ) ( # 11943 )
refactor cache size calculation and add logging for shrinking to improve cache management accuracy and provide clearer logging when cache size exceeds 90%
updated API endpoint from v2 to v3 and modified method parameters in CryptoFacilities classes to align with the latest API changes and enhance functionality
added an ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check if the object ' s
added Optional handling in AsyncPageReader and updated test annotations in TestEmptyParquet and TestDrillParquetReader to ensure proper page data
updated argument handling and added validation for market data type in SerumStreamingService . java to ensure correct argument types and improve error handling for invalid
add a config option to disable the charge animation when an item be charging on top of a mana pool .
[ java ] make cluster node restart test more robust .
updated exception handling from ' ignore ' to ' ex ' in WaitForHelper . java to improve error logging by logging the exception message for better debugging
updated DefaultServletTest to use assumeTrue for directory creation and assertion to improve test reliability by ensuring filesystems support question directories
swapped the injection of dialog and screen styles in ResourcesInjectorFull . java to ensure consistent styling across the application
refactor ` BaseLiquibaseTask ` and ` DBDocTask ` to use ` FileResource ` instead of ` String ` for
fix checkstyle issue in blockworldvector
removed comments from return statements in LongConcurrentLRUMap . java and made fields final in CacheEntry . java to improve code clarity and enforce
updated regex handling in ReflectionProcessor to quote strings before adding them to resourceConfiguration to ensure proper handling of special characters in regex patterns
modified FileCredentialsCache to handle KRB5CCNAME environment variable and adjusted EmptyCC to accept command - line arguments for the credentials cache to
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the
disable fast sync if there be no peer available
simonstewart : fix checkstyle issue in net / selenium / webdriver / webdriverservlet . java
added a check to avoid expanding " AreEqual [ Segment [ X , Y ] , Segment [ Z , W ] ] " format expressions
added a condition to clear pending rendering operations in the AndroidAsyncView class to ensure that pending rendering operations are cleared only when the implementation is minim
make hazelcasttestsupport more resilient against deadlock
fix continuously update delayed entry in write - behind queue
added a line to set the icon of a JLabel to null in GroupTreeCellRenderer to save some space to improve UI consistency by avoiding
updated test methods in TestBlacklistAwareRedirectResolver to differentiate between default and nonstrict redirects to improve test clarity and ensure correct behavior of
added IO . close ( serverSocket ) in ShutdownMonitor and refactored test methods in ShutdownMonitorTest to improve resource management and enhance test
reduced the calculation of ' moveSize ' and ' chunksFillRate ' in RandomAccessStore . java to improve memory management accuracy and ensure
refactor field retrieval and serialization methods in Json . java to improve code readability and maintainability by using a consistent variable name
[ hotfix ] [ runtime ] move componentclosingutils to operatorcoordination
server : destroy volume when vm be in error state
bug cs - 15836 : set ipv6 range from ipv6 address only if it ' s set
corrected the spelling of " userDetails " to " beanNames " in multiple configuration files to improve code readability and maintain consistency in
increased the timeout for getting the leader retry from 15 seconds to 30 seconds in CollectionsAPIDistributedZkTest . java to
refactor ` errorMessage ` method to accept ` Exception ` instead of ` String ` for better error handling to simplify error message formatting and improve cl
updated rectangle drawing positions in URLImage . java to correct the positioning of the image to ensure correct rendering of the image in the UI
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
refactor item dimension check into a separate method for clarity to improve code readability and maintainability by reducing duplication
[ hotfix ] [ stream ] add cause to streamtaskexception in streamconfig
refactor ` expandedTag ` to use ` StringBuilder ` for better performance and clarity to improve code readability and maintainability by reducing
reformatted the method signature of the read method in MessagePack . java to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a standardized way
do n ' t encode empty extension list in jsonparser when there be no comment
updated string splitting to use backslashes and improved type safety in Artifact and LibraryManager classes to ensure correct handling of external meta with no internal
added an alias for the " node _ popup _ scripting " menu entry in ScriptingMenuEntryVisitor to improve clarity and organization of
updated HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants and added default actions view alpha anim
camel - 14284 : camel - jms should use getout ( jmsmessage . class ) instead of cast to jmsmessage
removed unnecessary ` throws IOException ` declarations from several Java files to clean up the code and improve readability
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java to remove unused code to clean up the codebase
updated ` __ content ` and ` __ contentETag ` variables to be ` final ` and added a new ` MicroServlet ` for gzipping
fix onsubscriberedo to use backpressureutils . getandaddrequest instead of consumercapacity . getandadd
added logging functionality and improved formatting in SpeedmentImpl . java to enhance readability and maintainability of the code
add a new servlet class to load dspace - config from the web . xml
updated StoreScanner and TestWideScanner to improve null handling and row assignment logic to enhance robustness and maintainability of the code
camel - 18443 : camel - test - infra - jmx : disable jmx by default in camel - test
replaced hardcoded ' / ' with a constant CANONICAL _ PACKAGE _ SEPARATOR in SourceLineAnnotation . java to improve code maintainability
added methods to retrieve the YARN binary path and application information in HiveConf and RemoteSparkJobMonitor classes to enhance configuration management and provide
added support for " maria " database in DbConnectionManager to ensure compatibility with both MySQL and Maria databases
[ hotfix ] [ runtime ] fix log message in splitlogmanager
added a new file ExecuteAndReturnStringTest . java to implement a test for handling network errors in the application
added a new file InvokespecialInterface . java implementing an interface and a class implementing it to demonstrate the use ofpecial
[ hotfix ] fix checkstyle violation in evictingboundedlist
do n ' t use turn cost if turn cost be not support .
added validation for backgroundDisabled and selection in SelectBox . java to ensure selection is non - negative and prevent illegal argument exceptions
added a null check for the method name in RpcServer . java to ensure proper error handling for unsupported methods
updated hotseat cell size calculation to include border spacing to improve visual alignment of hotseat icons based on device profile
refactor the string construction logic in ExpressionTree . java to use values . get for partitionColumnIndex to simplify the code and improve readability by
fix serialization of namedtaskdecorator and taskdefinition for version 4.1
updated the index directory reference from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to
changed the default value of the equal variable from false to true to enable the equality check for display modes
updated UnicodeToLatexFormatter to conditionally append characters based on the current character type and added a new test for high codepoint formatting to ensure
update oaidccrosswalk . java and item . java to trim whitespace and add a check for non - null value before processing to
danielwagnerhall : allow selenium backselenium to select the last frame
added a border to StringSearchPanel and modified the return condition in BookmarksPanel , and implemented a clear button in DataBrowser to enhance UI
refactor the handling of the base URL in OAuth2AuthorizationRequestRedirectFilter to utilize UrlUtils for improved URL construction to enhance code
updated assertions in SoftAssertionsTest to use parseDatetime for date comparisons to improve readability and maintainability of test assertions
modified adaptOrders method to include a reverse parameter and adjusted limitOrders array handling to enhance order order adaptation behavior based on the reverse flag
fix delombok to print ` ` var ' ' instead of ` ` var ' '
simonstewart : fix checkstyle issue in netbeans - tests
updated Configuration initialization to use a boolean parameter and removed conditional logging for overriding Hadoop conf property to improve configuration flexibility and reduce unnecessary logging
changed the call from ` drawChildren ` to ` draw ` in the ` WidgetGroup ` class to simplify the method call and improve clarity
added unit test base on user forum issue
replaced the use of ` System . getProperty ( Globals . CATALINA _ BASE _ PROP ) ` with ` engine . getC
added tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified the ` getjmmPattern ` method in
update plotSquared to use the new information style and add new color entries to the map to improve visual clarity and organization of color data
added ZuulProperties parameter to the TraceRestClientRibbonCommandFactory and its associated beans to enable configuration of Zuul - related
tika - 1348 -- add unit test to verify that timezone be set correctly
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to use ` getBuildTime ( ) `
updated the calculation of xDist to use the absolute value of mScroller . getFinalX ( ) and mScroller . getCurr
remove unneeded guiwtester . java , it ' s no longer use
removed nullable annotations from constructor parameters in LazyMessage and countPlaceholders method to simplify method signature and improve code clarity
updated string formatting in TestStream . java for better readability to enhance clarity of error messages for better debugging
refactoring thymeleaf - markup into thymeleaf - template - parser ( thymeleaf - markup , thym
added a new test method ` testXPathString ` in ` XPathTest . java ` and updated XPath evaluation in ` XPathBuilder . java `
added nullable annotation to FutureUtils . java to improve code clarity and prevent potential null pointer exceptions
add warn when invokedynamic be not resolve during call - graph construction .
updated email addresses from gmail . com to example . com in ContextTest . java to ensure the test uses the correct domain for users
updated HTTP response code from 400 to 200 in HttpConnectionTest . java and modified URIUtil . equals method in URIUtil . java to improve
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a way
change the default implementation of the ` serviceClientConfiguration ` method to throw an ` UnsupportedOperationException ` instead of an ` ABSTRACT ` to provide a
refactor HSSFPictureData class to improve code readability to enhance maintainability and facilitate future updates
replaced ` long ` with ` Instant ` for ` startTime ` and updated logging to use ` Duration . between ( ) ` to improve time
added version handling for MediaInfoLib options in LibMediaInfoParser . java to ensure compatibility with newer MediaInfoLib versions
added reflection - based proxy creation for IdeaDependency in ProjectReader . java to enhance dependency management for IdeaDependency instances
added a new class ` SerialHeap ` and updated ` Universe ` to use it to introduce a new class ` SerialHeap ` to
added multiple @ SuppressWarnings ( " serial " ) annotations to the Gson $ Types class to suppress warnings related to serialization issues
update mousewheelevent to use mouse . getposition ( ) instead of mouse . getposition ( ) .
datamongo - 1608 - fix nullpointerexception in findbyfirstnameignorecase ( )
[ hotfix ] [ type ] introduce multisettypeinfo for map type info
added a method to retrieve an active identity provider by its issuer in XOAuthProviderConfigurator to ensure proper error handling for duplicate identity providers based on
pdfbox - 4892 : avoid infinite loop when parse cmap with poor whitespace
refactor ContactsBackupJob to use a ServiceConnection for managing the OperationsService to improve service management and resource management during backup operations
added a new class ` T6938454a ` and modified ` Infer . java ` and ` ForAll . java ` to enhance
add accountid . isconfighidden ( ) to accountlist to check if the account be hidden .
added a check to log an error if the number of displays differs from the number of supported bounds to ensure that the display state does not affect
updated schema removal logic in PMetaDataImpl to use getSchemaKey ( ) instead of getSchemaName ( ) to improve clarity and consistency in schema
do n ' t fire passive login event if the action be ` ` loginpassive ' '
added a new Box2DTest class and updated GDXTester to reference it to enable testing of Box2D functionality in the application
add some debug log to help diagnose failure
[ hotfix ] [ network ] change default buffer request timeout to 5 minute
chore ( deps ) : update dependency com . google . cloud : google - cloud - speech to v0.0 . 5 ( #
add a help button to the openoffice panel to help the user
[ java ] add ` . childoption ( ) ` to ` nettyacceptor ` and ` tcp _ nodelay ` ( #
updated method signatures in BinanceAuthenticated and BinanceAccountServiceRaw to use wildcard generics and removed unused imports to improve code clarity and eliminate
refactor class name retrieval logic in ScanResultObject . java to improve clarity and efficiency to enhance code readability and maintainability by redu
pdfbox - 4892 : remove duplicate code , a suggest by valerybokov
[ spring - data - jpa - repository ] fix querydsl nullhandling for native order
added a null check for the actor in the ParallelAction and SequenceAction classes to ensure that actions are only processed when the actor is not null
fix ( test ) : fix checkstyle violation in cttypetest . java
added synchronization to the closing of BucketWriters in HDFSEventSink . java to ensure thread safety during concurrent access to sfWriters
added new files ` Issue888 _ JavaI . java ` , ` JJ ` , ` JK ` , and ` KK
added functionality to revoke an existing agent certificate and updated related tests to enhance certificate revocation handling and ensure proper error handling during certificate revocation
added a check to prevent writing a body after no body responses in AbstractHttpTest and implemented a corresponding test in HttpServerTestBase to ensure that
added error handling and improved error messaging in ScriptTransformer . java to ensure compatibility with Java 6 and enhance error reporting for script execution failures
updated METASTORE _ CONNECTION _ POOLING _ TYPE to include DBCP and added support for Hikari connection pooling to enhance
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added file locking and unlock functionality in FileMenuFilter and updated OCFileListFragment to utilize this functionality to enhance file management capabilities and improve
updated version handling logic in mmm Version . java and ppp Version . java to improve version management and maintainability of the code
clear the endpoint cache when a new keyspace be add to the table
refactor thread state handling in Locks . java and ThreadExecutionSynchronizer . java to use a new waitForState method to improve code read
refactor methods in SkylarkDescription , SkylarkDescriptionArg , SkylarkRuleContext , and Skyl
simonstewart : move the storage interface into the html5 module
fix ` ` create or replace view v a select * from map ( * ) ' ' for ` ` create or replace view v '
changed the exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error handling by catching
updated SpellCheckComponent to retrieve the query string if it is null to ensure proper handling of query parameters in SpellCheckComponent
added validation to check for illegal characters in headers to ensure that headers contain valid CRLF and LF characters to prevent runtime errors
[ gr - 33939 ] fix array offset in hybrid layout for host class .
apex : remove setcontainscomment ( ) from astcommentcontainer , make it experimental
hhh - 14850 - add log for lazy association with ` @ fetch ( fetchmode . lazy ) ` and ` @ fetch (
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter to extend AbstractSpecFilter instead of implementing SwaggerSpecFilter
added database and tablename retrieval assertions in TestCompactionTxnHandler . java to ensure correct retrieval of database and table names from the result set
camel - 13651 : timer consumer should be suspendable so that it can be shut down in a graceful shutdown
added a check to ensure traces are only added when not processed to improve trace management by preventing unnecessary additions to the worklist
updated the null element check in ProviderManager to use CollectionUtils for improved readability to enhance code clarity and ensure proper handling of null elements
simplified the condition for database type check in InsertOrUpdateGeneratorPostgres . java to improve code readability and maintainability by elimin
added tests for local index limits in LocalIndexIT . java and modified scan handling in BaseScannerRegionObserver . java and ExplainTable .
added a check to prevent adding collections with the same name and incompatible types in AlterTableStatement . java to ensure that collections with the same
updated cursor positioning logic in VDUBuffer and vt320 classes to ensure correct cursor positioning based on screen boundaries
added a static final String called USE _ RETRIES with a value of " useRetries " in HttpShardHandlerFactory . java to enable
updated the regex pattern for VERSION _ NUMBER in JavaVersion . java and added a test for parsing version 11.0 . 7.0.
added a check to return early if no input gates are available to optimize performance by avoiding unnecessary processing when no input gates are available
[ hotfix ] [ test ] remove unused test from testreceivingmessageresourceparser
added null check for properties in RemoteCluster . java to prevent potential NullPointerException when properties are null
updated IOException handling to initialize the cause of the IOException to ensure proper initialization of the IOException during file operations
corrected a typo in the message from " rolling upgrade " to " stack upgrade " in multiple Java files to improve clarity and accuracy
added a TxConfidenceListener to manage transaction confirmation updates to improve efficiency by reusing the existing listener instead of adding a new one
bugfix # 2271 , add support for g1 perm gen ( # 2274 )
removed unused imports and simplified return statements in NearbyController . java to improve code readability and maintainability
pdfbox - 4892 : make utility method public , a suggest by valerybokov
updated condition to check for non - home activity type in BaseSwipeUpHandlerV2 . java to ensure proper handling of home activities in
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to improve clarity and consistency
updated method names and logic in ShadowTelephonyManagerTest and ShadowTelephonyManager for consistency and clarity to improve readability and
removed the setUnfreezeAmount method call from UnfreezeBalanceV2Actuator to simplify the code by eliminating unnecessary method calls
updated the description of PUBLISHED _ TIMESLOT _ DESCRIPTION and PUBLISHED _ ROOM _ DESCRIPTION from " per minute "
danielwagnerhall : use commons - io instead of com . google . common : commons - io for file copy
refactor assertion classes for consistency and clarity to improve maintainability and readability of the codebase
refactor the Observable class to improve code readability to enhance maintainability and reduce complexity
replaced ` modifierOps . put ( " $ pushAll " , keyValue ) ` with ` addMultiFieldOperation ( " $ pushAll
added a null check for randomUUID before setting the hubChangeLog ID to avoid potential null pointer exceptions when setting the UUID
added hover event handling in InputConsumer and OverviewInputConsumer classes to enhance user interaction with quickstep live tile
added a delay in the initialization of the ` boostrapConf ` variable and added a check for ` confDir ` to ensure that the
camel - 14284 : camel - netty - http should use label = consumer instead of label = default
increased the number of client retries from 5 to 35 in HBaseTestingClusterAutoStarter . java to improve test reliability by allowing
replaced ` toPath ( ) . toPath ( ) . toFile ( ) ` with ` new File ( baseDirectory . getAbsolutePath ( ) ) `
make encodedgraphcachetest more resilient to failure
updated query command from " customer _ count " to " all _ tables " and added a new test for querying over output to improve clarity
added currency adaptation for all Kraken assets in KrakenAdapters . java to ensure proper currency metadata is applied for each asset
added a custom ` toString ( ) ` method to the ` AnyOf ` class and created a corresponding test class to improve the string representation of
updated email handling in AlertTaskRunnerV2 to use dimensions for group email recipients and email subject name to improve clarity and consistency in email
[ influxdb ] publish influxdb data point only if measurement be not blank
rename method ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in naming conventions
updated address filtering logic in NetUtils . java to include unique local addresses to enhance security by ensuring only unique local addresses are processed
added a method to convert column names to quoted column names in DataTextFormatter . java to improve the handling of quoted column names for better data
added methods for setting and retrieving system properties and lines in WrapSystem , StrUtils , and CompileMethodEntity to enhance system management capabilities and improve
added a constructor to the UpdateRequest class that accepts a URL to ensure proper initialization of the UpdateRequest with a valid URL
updated enum declaration from static to instance for EnumSerialization in ProtoTypeAdapter . java to improve encapsulation and maintainability of the enum
added a method to handle experimental response formats in DataImportHandler and ReplicationHandler to provide informative warnings for experimental response formats
updated debug logging to include a customizable format of module names to improve clarity of debug output by providing a formatted list of module names
add a method to get the default label font and adjust row height accordingly
[ issue # 5507 ] fix the bug that notifybrokerinactive ( ) and notifybrokerinactive ( ) do n ' t
added initialization for meanPartitionSize , partitionCount , and splitCount in CqlInputFormat . java to ensure correct calculation of splitCount based
removed unnecessary condition in JUnitTestsShouldIncludeAssertRule . java to simplify the condition for better readability and maintainability
[ hotfix ] [ table - planner - bpmn ] add equal ( ) and hashcode ( ) to ruleterminalnodelefttuples
added import and logic for StageIDsRearranger in TezCompiler . java to enable dynamic resolution of stage IDs based on configuration
fix mbean name for messagingservice
updated memory consumption logic in LotsOfOutput . java to use a local variable for total memory to improve readability and maintainability of memory
added imports for ` org . apache . lucene . document . Document ` and ` org . apache . lucene . search . NumericRange
updated LDAP configuration to support anonymous and anonymous read - only properties to enhance flexibility in LDAP context management by allowing configuration of anonymous and anonymous read
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future development
[ beam - 10670 ] make example echo pipeline test run with junit4
added a ` finishMocking ` method to ` MockitoSession ` and modified ` DefaultMockitoSession ` to handle ` Throwable ` to
refactor parameter handling in GoTestDescription . java and add new test cases in GoTestIntegrationTest . java to improve code clarity and
replaced ` buffer ` and ` flushing ` with ` readBuffer ` and ` writeHandler ` and ` writePending ` in ` SPDY
replaced the static block reference with a slowing block reference in the BlockLiquidWrapper class to ensure the correct block is used for
updated intent extra handling in AndroidLocationPlayServiceManager and adjusted location listener instantiation in BackgroundLocationHandler to improve compatibility with external URLs and enhance location
[ java ] fix typo in aprendpoint javadoc .
[ hotfix ] [ cli ] fix json dump for streamingplan
fix craftingmanager . getshaperecipes ( ) to use computeifabsent ( )
[ hotfix ] [ test ] fix test flakiness in testfilechannelrestart
removed unnecessary condition checking for newline and carriage return in whitespace checks to simplify code logic for better readability and maintainability
added a pattern to match lines containing " pg _ temp _ " in NeuteredLinesFilter . java to improve filtering of lines containing "
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added conditional logic to handle " INTERVAL " data type in DataTypeFactory and modified data type checks in UnknownType to improve data type handling and
[ wavefront ] only publish histogram if timer be publish
updated the handling of the ` DivideUpstream ` in ` ShenyuClientRegisterSpringCloudServiceImpl ` and modified the
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable the registration of a sensor event listener with specified parameters
added warning logs for full methods , full URI , and header methods in SelectChannelServerSslTest to improve error handling and logging for socket issues
camel - 14284 : camel - ignite - add karaf support for camel ignite 1.5 . 0 . final
added handling for empty set line numbers in AbstractClient . java to improve clarity of output when there is no line to display
pdfbox - 4892 : catch exception instead of ioexception , a suggest by valerybokov
added unit tests for setting display header capabilities in ShadowDisplayTest . java to ensure correct functionality and error handling for unsupported HDR capabilities
added a finally block to reset the classLoader to null to ensure proper resource management and prevent potential memory leaks
enhanced error messages in SemanticAnalyzer to include source and target names to improve debugging by providing clearer context for bloom filter entries and their
added a default constructor to the Message class to ensure proper instantiation of the Message class
updated priority handling for GUI classes in SerializableIdiom . java to improve clarity and accuracy of bug reporting based on the object type
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and improved null handling to enhance precision scaling and prevent potential NullPointerExceptions
replaced ` GZIPOutputStream ` with ` OutputStream ` and added a check for committed responses in ` CompressionResponseStream ` to ensure proper handling of
renamed the parameter ` WWWAuthenticate ` to ` authenticateHeader ` in the ` getAuthorization ` and ` parseWWWAuthenticateHeader ` methods
removed specific path checks for EJS and underscores in DCD . java to streamline the code for better readability and maintainability
added a method to retrieve the thread group name in ThreadLeakTest . java to improve code readability and provide a clearer way to
added logging functionality and modified the ` afterPropertiesSet ` method in ` MethodInvocationPrivilegeEvaluator . java ` to improve debugging capabilities and ensure proper
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nut
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
kvm : fix npe when try to migrate vm from kvm to kvm
removed signal handler handling logic and updated test method names for clarity to improve error management and ensure proper verification of signal handlers during testing
replaced static import of ` isEmpty ` with ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code readability and reduce
updated the auto - configuration annotations in AxonAutoConfigurationWithSpringCloudTest . java to use Spring Boot ' s @ EnableAutoConfiguration
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and ensure proper method overriding
planning : remove deprecate resetinitializedplanningentities from planningentityselector
added buildTimeMs parameter to various methods in TwoLevelArtifactCacheDecorator , ManifestRuleKeyManager , and CachingBuildRuleBuilder classes to
replaced ` getFields ( ) ` with ` getDeclaredFields ( ) ` and updated the logic for calculating fixedRowSize in ` GroupByOperator .
added null checks before adding block appearance to prevent potential NullPointerExceptions when adding block appearance
added support for the CNC currency pair in the BTC currency pair management to enable trading functionality for the Chinacoin currency
updated the skewAllowance value from 5 to 15 and modified related logic in multiple classes to allow dynamic adjustment of the skew allowance based on
added sorting functionality for songs in SongListActivity and updated query setSortBy in Utils to enhance user experience by providing a clearer
added a method to read request body to a byte array if it is null or a typed byte array is provided to improve request handling by ensuring
refactored mobspawnerblock and signblock to extend legacybaseblockwrapper instead of baseblock
replaced the use of ` Optional ` with a direct retrieval of ` SnapshotRef ` for tag existence in ` IcebergBranchExec `
replaced ` newArrayList ` with ` singletonList ` for external groups whitelist in ` AbstractLdapMockMvcTest . java ` to improve code readability
updated ` PhotonMappingDemo ` and ` HybridDemoSsboInstancing ` to use ` glGetProgramResourceIndex
updated password change validation logic in IdentityProviderEndpoints . java and added logging for unsupported operations to enhance error handling and provide clearer debugging information when
added ` notInitializedInConstructors . removeAll ( assumeReflective ) ` to ` UnreadFields . java ` to ensure that constructors are not
updated the SQL execution error message to include the connection URL if it is closed to improve clarity of error reporting for closed connections
added tests for user data retrieval and user name in SpringmvcClient to ensure correct handling of service names and improve test coverage
updated regex patterns in CredentialInjector to use ' . user ' and ' . password ' suffixes instead of ' . user ' and ' . password
added a new menu item " Item4 " and a key binding for the Enter key in ActionListenerCalledTwiceTest . java to enhance the
updated print statements and assertion logic in TestCoreParser . java to improve clarity of output and enhance readability of test output
simplified equality check in SimpleNode . java by removing unnecessary whitespace to improve code readability and maintainability
changed the visibility modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class for better encapsulation
updated MoreLikeThis to use getDocCount instead of numDocs and added a test for small sample data from corpus to improve accuracy in document
reformatted code for better readability in QuestManager . java to improve code clarity and maintainability
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
updated query construction in MongoSessionDataStore . java to use append method to improve query performance by eliminating unnecessary object creation
[ gr - 23234 ] add miss macro substitution for unsafe _ getlong
updated time zone identifier for Asia / Amman from ARAST to EET across multiple language files to ensure accurate representation of the As
updated the id from 90000010 to 90000011 in DeprecationLogger . java to reflect the correct logging identifier
hhh - 14850 - handle jdbcexception in session . getlock ( ) when rollbackonly be true
fix a bug in downloadexternalfile . download ( ) where the suffix be always an empty string .
enable screen menu bar on macosx by default
add integration test for piecewise ( x ^ ( 2 ) , f ( x ) , h ( x ) , h3 ( x
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods in ` BaseSw
added a test for modifying the Hive metastore uris and modified the modWhiteListPattern in HiveConf . java to ensure that modifying the
add entry name to invalidClasses map in EntryLoader . java to ensure proper handling of invalid class entries
updated the parameter in the findClosest method from Team . sharded to player . team to ensure the correct team is used for determining the
updated cookie domain to use domainHelper ' s getHostName ( ) method instead of a hardcoded value to ensure the test uses the correct domain
added nullable validation logic in MissingColumnChangeGenerator and MissingTableChangeGenerator , and modified column validation logic in ColumnSnapshotGenerator to ensure proper handling
refactor multiple security token - related classes for improved organization to enhance maintainability and readability of the codebase
added test cases for deletion and adding documents in CustomCollectionTest . java and made constants in CompositeIdRouter . java to improve test coverage and
added snapshot handling for binary data in ExecutablePreparedStatementBase and updated tests in PostgreSQLIntegrationTest to improve compatibility with PostgreSQL ' s binary data handling and
updated conditional checks for cached files and cache size in DefaultServlet . java to ensure proper handling of cache configurations and improve code readability
improve drag - and - drop functionality ( # 3390 )
updated description creation method and updated test assertions in ExecutionUnitRunner , CucumberTest , and ExecutionUnitRunnerTest to improve clarity and
updated the condition to check if ` myVersion ` and ` buildTimeString ` are not empty before proceeding to improve code readability and
changed access modifier of several methods in TimeUtils from public to package - private to restrict access to these methods for better encapsulation
removed direct method handle initialization and refactored class name checks in RefectionMHTests to improve compatibility with different Java versions for security frame
updated file extension checks from lowercase to uppercase in PreviewImageFragment . java to ensure compatibility with file extensions and improve readability
fix native - image debug info for non - hosted method
added getIcon ( ) method to Data class and updated ClassDisplayed from NONE to NODE in DataTableTopComponent to enable node display by default in
modified substring logic in CounterRequestAggregation to handle cases where the last character is not found to improve robustness by avoiding potential null pointer exceptions
updated the replacement logic in FindAndReplace . java to handle dollar signs correctly to ensure proper replacement of dollar signs when the regex is
initialize remote port and local address to zero if there be no socket available .
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a method ` copyDir ` to copy files from a directory to a specified directory to facilitate copying files into a specified directory
added error handling for unknown datum types in JacksonUtils to improve robustness by throwing an exception for unknown datum types
refactor ABI handling in DefaultJavaLibraryBuilder to use libraryTarget for class and source ABI to improve clarity and maintainability by
simplified the calculation of the item height by removing unnecessary padding and adjusting the height accordingly
added normalization of database and table names in ObjectStore . java to ensure consistency in database and table names
added checks for database type and schema in DbSqlSession . java to ensure proper handling of Oracle databases and provide a default schema
removed the Logout call for the API client in HomeFragment . java to simplify the code by directly finishing the activity without logging out
[ hotfix ] [ test ] fix runtimecontext initialization order ( # 1337 )
added a null check for the ' candidates ' list in FastImportAction . java to ensure that a default toolkit is used when no valid
updated logic in ContainerLifeCycle to use a boolean variable for managed state to improve readability and maintainability of the code
rename iexecutionattributedialect to iexecutionattributedialect to avoid ambiguity
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure that the metadata is cleared before
fix nullpointerexception in gettime ( date ) command . thanks to benjamin for patch .
added null check for measurement in TabletInsertionDataContainer and refactored DisruptorQueue to use a new exception handler to improve robustness
deleted the Session2Token . java file to the class is no longer needed in the project
delete volume from db if fail to create volume from source
added a new Install system shortcut and its click listener in SystemShortcut . java to enable installation functionality based on web UI support and instant app support
added a null authority population mechanism to the LdapAuthenticationProvider class to ensure that a default role is returned when no authority is provided
fix codenameone - core and java - runtime so that they use java 1.5 source and target .
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the method call for better
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` MutableBits ` to improve clarity and efficiency in handling live
added handling for null results in JMESPathExtractor to improve robustness by preventing null pointer exceptions
updated import statements in AuthorizeTag . java to include specific utility classes and added a null check for currentUser authorities to improve code clarity and
updated assertions in tests to remove unnecessary parameters to improve code readability and maintainability
server : fix typo in error message for vgpu enable vms
updated configuration handling in RobolectricTestRunner and changed ArrayList to HashSet in Config . java to improve clarity and functionality of configuration merging
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to align with the latest Jetty standards and improve performance
added a method to compare partial partition keys in HiveAlterHandler . java and updated test cases in TestHiveMetaStore . java to enhance
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to enable the icon display in the
removed unnecessary whitespace in SimulationStatus . java to improve code readability and maintain consistency
replace SharedBlockingCallback with Callback . Completable in StandardDeployer and StandardUndeployer classes to simplify callback management and improve code readability
added WorkspaceListener to PreviewControllerImpl to manage workspace updates to enable dynamic graph building based on workspace state
added checks for anonymous classes in ReflectionFactory and modified class name checks in ReflectUtil to enhance functionality to prevent inflation of anonymous classes and improve
refactor TransportHelper to improve code readability to enhance maintainability and facilitate future development
removed the leading slash from the file path in CatalinaAcegiUserRealm . java to streamline the path for better readability
updated logging messages for server and action manager initialization in AmbariServer . java to improve clarity of server and action manager initialization logs
added null checks for ` init ` , ` modify ` , and ` getter ` in ` JSONWriter . java ` to enhance robustness by
modified the ` run ` method in ` SliderAppsViewControllerImpl ` to accept a ` FileSystem ` parameter and updated user proxy logic to
added a check to ensure the background manager is not attached before attaching the window to prevent potential NullPointerExceptions when the background manager is not attached
added methods to set the current tab and adjusted child center calculations in PagedView and Workspace to improve user experience by ensuring proper tab navigation and
added null check for the URL in BaseDataSource and implemented a test for invalid URL in SimpleDataSourceTest to ensure proper error handling for invalid URLs
added JUnit annotations and reformatted PebbleTemplateEngine initialization in PebbleModuleTest . java to improve code readability and maintain
added EditNameDialog to handle directory creation dismissal in FileDisplayActivity to improve user experience by providing a clearer dialog message when the directory
added functionality to toggle the bar border width in multiple activities to improve user experience by allowing dynamic adjustment of the bar border width in the chart
updated SSL URI from " www . okcoin . com " to " www . okex . com " in OkCoinExchange . java to
jbrules - 1348 : fix test failure in acceptedforagertest
replaced FileChannel with SeekableByteChannel for reading files to improve performance by using a seekable byte channel instead of a FileChannel
refactor the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter to improve code readability and maintainability by
rename ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
do n ' t register custom serialization type if they do n ' t exist
added a watch heap limit for debug devices in QuickstepProcessInitializer . java to improve memory management for debugging purposes
refactor the sumWithCompensation logic to store the result in a variable before incrementing it to improve code readability and maintainability by
log4j2 - 1347 - fix broken test in abstractloadbundletest
added a condition to check if the top level deletion is not live before serializing the data output buffer to ensure that serialization only occurs when the
modified return statements in ICC _ Profile . java and ColorConvertOp . java and added a new InvalidRenderIntentTest . java file to
autoconfiguration should close meterregistry on shutdown
change log level from warn to info when config center be not specify
added test cases for generating a certificate with an empty byte array in CertificateFactoryTest . java to ensure that the generateCertificate method handles invalid input
camel - 1748 : simple predicate parser should handle ambiguous binary operator . thanks to daniel for the patch .
simplified the ` onTabUnselected ` method in ` EditorActivity ` and added focus handling in ` IDEEditor ` to improve
add user . name to accesslogvalve . openfail log message
updated file name and scaling factors in SkeletonModelGpuSkinningTest . java and modified OgreXmlLoader . java to enhance scaling
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method signature to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotations to UpgradeResponse . java to indicate that the class is outdated and should no longer be used
added support for specifying the output directory for d . ts files in the JSweet transpilation process to ensure that d . ts files are
[ hotfix ] [ kafka ] make fetchtimeout configurable for kinesis consumer
added " . html " to the timestamp in StreamingDataflowWorker . java to ensure the correct file format is used for dataflow processing
increased the maximum number of threads for the metastore server from 100 , 000 to 1000 , 000 to improve performance by reducing
changed the return type of the onTaskSnapshotChanged method from void to boolean to indicate success or failure to indicate that the task snapshot has been
update shadow radius setting from mMaxShadowRadius to shadowRadius in SwipeUpAnimationLogic . java to ensure correct shadow radius is used for
added a test for aggregating messages with a aggregator in the ChainParserTests class to ensure that the aggregator functionality behaves as expected with a
updated loop condition in MarketSellAssetActuatorTest . java to check against end instead of limit and added a failure message to ensure
fix isinternal ( ) to isinteractive ( ) in polyglotcontextimpl .
updated conditional logic in CreateKeytabFilesServerAction . java to use logical OR instead of logical AND to improve readability and maintainability of
added DisplayController import and modified WindowManagerProxy initialization to enhance functionality by integrating DisplayController functionality
updated toolTipText assignment logic for root directories in MetalFileChooserUI and SynthFileChooserUI to ensure consistent display of file names
replaced ` getToolkit ( ) . getScreenSize ( ) ` with ` Toolkit . getDefaultToolkit ( ) . getScreenSize (
changed the return type of the ` recognise ` method from ` List < ? extends RecognisedObject > ` to ` List < Caption
added new test methods for entity insertion and removal in JPASQLBase . java to enhance test coverage for entity fetching with factory expressions and
updated drag index logic in FreeformFinSetConfig . java to ensure proper drag behavior based on body front and point positioning
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " in DependencyBank . java to reflect the
[ hotfix ] [ runtime ] spend all gas when set constant call value .
replace % n with % n in error output to improve readability of error output
added a @ Deprecated annotation to the Weights class to indicate that the Weights class is outdated and should no longer be used
use platform - specific unsafe plugins in amd64 and standardgraphbuilders
added @ Hint annotation to AndroidAppModularityDescription and AndroidGraphEnhancerArgs , and created a new test for blacklisted modules in
changed the initialization of mCenterPagesVertically from true to false to ensure that mCenterPagesVertically is not set to false for better
[ hotfix ] [ runtime ] call migrationinfo . doneprocessing ( ) before doprocessing ( ) in migrationrequestoperation
renamed constants and methods related to IP address and callback URI to improve clarity and consistency to enhance code readability and maintainability by using
updated the ` attributeValue ` type from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy . java `
updated table creation and query processing in TestJdbcWithMiniLlap and LlapBaseInputFormat classes to ensure compatibility with different database configurations
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate SQL parsing and deparsing involving
added support for starting copy mode in ConsoleActivity based on Android SDK version and input device source to enhance user experience by enabling copy mode for
replaced direct writing of XML output with a try - with - resources statement for better resource management to improve code readability and maintainability by
added unit test base on user forum issue
log4j2 - 1342 - add the cause of the exception to the log message
move classic - related class from logback - core to logback - core
added a condition to check if targetVN has a PHI _ NODE flag before evaluating its equality to ensure that targetVN does not
remove unused import of sharedstringsource from test
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with additional parameters for improved
refactor multiple dataset classes for consistency and clarity to improve code maintainability and readability across the project
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit5
replaced ` = = ` with ` . equals ( ) ` for string comparison to improve performance and readability by using ` . equals (
changed the visibility of the singleton instance and the constructor from public to private to restrict access to the singleton instance for better encapsulation
refactor IfStatementTest to use a single instance of PluginDefinition and simplify edge checks to improve code readability and maintainability by reducing
replace ` getPutOnlyTableHeaderRow ` with ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java ` to ensure correct
refactored the ` nullSafe ` method in ` TypeAdapter ` and updated its usage in ` StreamingTypeAdaptersTest ` to streamline
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct expected value for the distribution
added a new file ` EXIFReader . java ` that reads and processes ExIF metadata from a file to facilitate the extraction
return standardunit . none instead of unknown _ to _ sdk _ version when unit be unknown
[ drools - 5390 ] fix pmml4datafactory . newinstance ( ) in applypmmlmodelcommand ( #
updated the info message format in FluentProtocol . java to improve readability to enhance clarity of error messages for better debugging
added a check to ensure the bubble bar is visible before proceeding to avoid unnecessary operations when the bubble bar is not visible
[ gr - 23233 ] fix aarch64 label offset issue when emit a branchtargetoffsetexception .
log4j2 - 1349 concurrent init log can cause npe
added a new method ` find ( Class < Ticket > ticketClass ) ` to ` TicketCatalog ` and ` DefaultTicketCatalog ` , and
refactor SSL configuration in TestSSL . java for improved readability to enhance maintainability and clarity of the code
[ hotfix ] fix memory leak in sortmergesultpartition
[ hotfix ] [ jmsio ] remove unused private constructor in jmsio
added type and sort parameters to the query methods in PluginHandleController and PluginHandleDTO to enhance functionality by allowing dynamic filtering of plugin handles based
replaced the ` start ( ) ` method call in ` DefaultSpanCreator ` and ` SleuthAdvisorConfig ` to ensure the span
added drawable format configurations to IOSApplicationConfiguration and updated IOSGraphics constructor to use these configurations to enhance flexibility by allowing customizable drawable
refactor login logic to use a new method ` attemptLogin ` and add a new test for user locking out after failed attempts to improve code
[ pytorch ] throw unsupportedoperationexception if complex ( ) be use .
removed thread interruption check and refactored lock name retrieval logic in SynchronizationStatistics . java to improve performance by avoiding unnecessary thread
updated Implements and ShadowPicker classes to improve code clarity and maintainability
refactor HttpClientOptions creation into a separate method and add new configuration properties for HTTP2 connection settings to improve code readability and maintainability by
added support for DynamicArray in DynamicStruct and improved error handling in SolidityFunctionWrapper to enhance type safety and provide clearer error
updated ` getStringProperty ` calls to include a default value of ` true ` in ` InlineLayout . java ` and ` FontUtil . java
added constructors to ` CopyStep ` and a corresponding test in ` CopyStepTest ` to enhance functionality to support recursive copying of paths
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) method of rsemaphore
camel - 13660 : fix test failure in camel - dsl - java - dsl
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` and ` FlavorParserTest ` to utilize
changed the type of ` al ` and related methods from ` String ` to ` ByteString ` in ` WitnessScheduleStore . java ` to
added a check for non - empty results before printing to avoid printing empty results in TestElementsAnnotatedWith . java
refactor ConcurrentLinkedQueue to improve item removal logic and add a new class RemoveLeak to enhance code clarity and facilitate
added a boolean parameter ` addSpecialTokens ` to multiple ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer `
[ hotfix ] [ runtime ] use collections . nCopies instead of manual arraylist creation
update chunk data handling in LoadSingleTsFileNode . java to use AlignedChunkData for improved data management to ensure correct data size
added session storage context handling and updated state management in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to enhance session
add a test case to make sure schema validation work
added a default constructor to TypeAdapter and modified the @ Ignore annotation in Java17RecordTest to disable the TypeAdapter until record support is added
do n ' t throw killexception on suspendedevent . kill ( )
refactor AntPathRequestMatcher class to improve code readability to enhance maintainability and facilitate future development
add an overloaded method to create a resource policy for a collection to allow customization of the resource type
added null check before releasing _ deflaterEntry in GzipHttpOutputInterceptor and enhanced BlockingTest with assertions to improve code robustness and ensure
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure proper cleanup after each test execution
normalize utf8 and strip unknown char for good cross - os checksum comparison
updated command handling logic and variable naming in Example . java to improve clarity and maintainability of command execution logic
made the ` keyListener ` variable final in ` BasicProfilerState . java ` and added multiple ` @ Override ` annotations in ` Base
changed the type of ` objectToSave ` from ` T ` to ` DBObject ` and added a new test for saving JSON strings to
added a check for multiple remote addresses in RequestUtils and implemented a corresponding test in RequestUtilsTest to ensure proper handling of multiple remote addresses and
changed jobArgs type from String to ObjectBuilder and updated related method calls to enhance type safety and improve code clarity
updated ` CookieManagerTest ` and ` UnmodifiableMaps ` classes to utilize ` NO _ PROXY ` for local host address retrieval to improve
refactored glyph handling logic in GlyphLayout . java and added a test case in BitmapFontTest . java to improve code clarity and
added pauseOrResumeSplits method to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase classes to allow pause or
added HIVESCRIPTIDENVVAR configuration and retrieval for operator ID in HiveConf and ScriptOperator to enable dynamic configuration of the script operator ID
refactor getListedTermCounts method to use a stream for term counting instead of a for loop to improve code readability and maintainability by
added a new action class ` UseSeparateStepSizeAction ` to manage the use of separate step size in the Jog plugin to enhance
refactor FileMenuFilter to use final fields and introduce userId handling for file locking to enhance code clarity and ensure user - specific functionality
[ hotfix ] [ table - common ] fix checkstyle violation in roundrobintableinputformat
change header values from " false " and " true " to " 0 " and " 1 " in HttpClientRequestAdapter and its test to ensure
pdfbox - 4892 : use ioutils instead of manual null check , a suggest by valerybokov
added native methods for fullscreen mode handling in GwtGraphics and updated viewport settings in GwtApplication to improve fullscreen functionality and ensure proper
changed the type of ` issuers ` and ` parameterName ` from ` String ` to ` URI ` in ` WebfingerIssuerService `
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate the configuration of the ` DubboConfig
replaced usage of Gdx . files . internal ( ) with resolve ( ) in SkinLoader . java to improve code readability and
added trace logging for attributes in ChainingAttributeReleasePolicy and changed log level from warn to info in OidcDefaultJsonWebKeystoreCache
replaced ` PMS . REALTIME _ LOCK . lock ( ) ` with ` PMS . REALTIME _ LOCK . lock
reformatted the package declaration for consistency to improve code readability and maintainability
fix false positive in nullderefandredundantcomparisionfinder
refactor manifestfetcher to use defaulthttpdatasource instead of contentid
added a new configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION ` to control the maximum
updated method return type from WritableConfig to Configuration in multiple configuration classes to improve type safety and clarity in configuration management
removed the checkErr method from the AutoScalingHandler class to streamline error handling for command operations
refactor CombinedDataset class to improve data handling to enhance performance and maintainability of the dataset operations
replaced the variable name ` buf ` with ` b ` in the InflateIn _ DeflateOut class to improve code read
added methods to remove cryptography restrictions from security classes to enhance security by preventing cryptographic restrictions from being applied
added a check to ensure the entity ' s teleport event is not cancelled before proceeding with chunk generation to improve responsiveness by preventing
added a new test method ` testPageMarginsLongTextTransform ` in ` TextVisualRegressionTest . java ` to ensure that page margins
added a null check for vContext before initializing it to avoid potential NullPointerExceptions when vContext is not initialized
fix speed value for wialon ( fix # 269 )
hbase - 25827 make default _ metrics _ user _ enabled _ conf false by default
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to ensure that the ` isEmpty (
replaced instance variables ` mUserPresent ` , ` mVisible ` , and ` mAttached ` with a conditional check before unregistering the
refactor multiple HTTP - related classes to improve code organization to enhance maintainability and readability of the codebase
added params to the zadd method call in PipelineBase . java to enhance the functionality of the zadd method by including additional parameters
( chore ) camel - aws2 - ds : fix checkstyle violation
[ hotfix ] [ test ] rename testasyncmessages to testasyncmessagesperformance
refactor ` VersionedTargetGraphBuilder ` to use ` Optional < TargetNode < ? , ? > > ` for better readability to improve
updated time constants in TimeZoneProvider to use specific values instead of hardcoded values to improve readability and maintainability of the code
updated the return value in EscherBlipRecord . java and added a new test class TestOLE2Embeding . java to ensure
removed the initialization of row and column variables in JSONParser . java to streamline the code by eliminating redundancy
replaced ` JavaType . FullyQualified ` with ` Pattern ` in ` FindTypes ` and introduced a new method ` isAssignableFrom ` in
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added handling for local trailers in BaseItemDetailsFragment to enhance
added a method to remove glyph information from the cache in CStrike . java and invoked it in CStrikeDisposer . java to
fix # 791 : process instance not end after end terminate event with terminateall ( cfr . http : / / activiti . atlassian . net / browse / act - 4137 )
camel - 13663 : camel - xml - dsl - avoid use the root namespace of the type name when generate the qualified name
updated the valid endpoint in SimpleHttpClientTests from " http : / / www . apereo . org / scottb . html "
add ` ` prdef ' ' option to reset all preference to default value
hbase - 25827 move thriftmetrics and thriftserver from private to protect to allow subclass to access them
removed deprecated channel ` CHANNEL _ MANUAL _ FAN _ SPEED ` and related methods from ` DanfossAirUnitHandler
use hamcrest assertion instead of junit in examples / microprofile / jetty - test - endpoint
removed redundant stop calls for expansionHelper in TweetActivity . java to streamline code by eliminating redundancy
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to ensure proper handling of null values and improve object comparison
server : set root disk size in vm detail if not already set
added preference handling for showing suggested apps in the drawer in PredictionRowView to improve user experience by allowing dynamic visibility based on user preferences
do n ' t allow bbox to be null or empty in geoserver - api
added validation methods to validate parameters in ` LibrustzcashParam ` to ensure that values and positions are non - negative , and
moved ithrowableentity to fml . mods . fml . common . registry . ithrowableentity to mark it a de
added random positioning for the x and y variables in NodeDataImpl . java to ensure random positioning for improved visual representation
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for handling missing scopes to improve
refactor code to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the latest release version
added a condition to check for the item type DEEP _ SHORTCUT in LoaderCursor . java to ensure proper handling of deep shortcuts in
added hashCode ( ) method to TimeGranularitySpec class to ensure consistent hash code generation for instances of TimeGranularitySpec
changed access modifiers of BooleanWeight and DisjunctionMaxWeight classes from private to protected to allow subclasses to access these classes and improve encapsulation
added a boolean flag ` useProxyResponseCode ` to control proxy behavior based on ` tryTransparentNTLMProxy ` to ensure proper handling
fix aarch64 macro assembler to use the correct scratch register
server : fix the bug in calculate the reserve and used ram size of the vm
added a null check for ` docs . getMaxScore ( ) ` in ` JSONResponseWriter . java ` and modified a query in ` Test
updated the audio recoder from 22050 to 44100 in AudioRecorderTest . java to ensure the correct audio recoder is used
updated calculation of newOriginX to include subjectBounds _ m ' s minimum X to ensure correct positioning of the rocket figure based on
updated DruidQueryBasedInputFormat to check for empty data source and set a default interval to improve error handling for empty data sources and ensure
added a new field ` ORIGINAL _ TYPE ` and updated regex patterns in ` CustomProperty . java ` , along with tests in `
added a static method ` create ` to create an instance of ` IndexImpl ` using a ` Table ` and a ` Map ` to fac
simplified return statement by removing unnecessary variable to improve code readability and maintainability
updated compatibility checks in SchemaCompatibility . java and added new test cases in TestSchemaCompatibility . java to ensure correct handling of reader and writer types
added handling for entity paths and association types in QueryUtils . java to improve query processing and ensure correct association type handling
added synchronized blocks and modified span handling in TestSpanHandler . java to ensure thread safety and avoid Iterator pitfalls in collections . synchronized
updated method signatures from List < Object > to List < ? > in multiple classes to enhance type safety and improve code clarity
updated exception handling in ViewContextImpl to use InvocationTargetException and improved logging for default realm and authentication to enhance error handling and provide more informative
refactor OAuth2AccessTokenEntity class to improve code readability to enhance maintainability and facilitate future development
updated error messages related to request rejection in SCBEngine and related tests to clarify that requests are rejected as the service cannot process
added new project files for iOS data and moe resources in GdxSetup . java to enhance project configuration for iOS and moe resources
added ConcurrentMergeScheduler to TestSearcherManager to improve performance by allowing concurrent merging during test execution
added a condition to check if the session state is zero in QTestUtil . java and modified the list handling in GenericUDTFInline
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
prevent npe when click on a spreadsheet in the web . http : / / github . com / codenameone / codenameone /
added service registration for persistenceProviderService and sessionFactoryService in HibernateBundleActivator . java and updated OsgiTestCase . java to
fix incorrect timeout calculation in hikaripool . close ( )
added functionality to create a non - packaged resources directory and copy the component . xml file directly to a non - packaged resource directory to
updated file handling logic in Compat . java and FileOpener . java to improve consistency and correctness in file path processing
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to allow the method to
improve error message when use duplicate port
added null mask functionality to WebSocketClient and updated WebSocketConnectionD12 to use it to enhance flexibility in mask generation for WebSocket connections
refactor ` genUDTFPlan ` to return a ` Pair < RelNode , RowResolver > ` instead of a ` RelNode
added bucketedPreferredNodeSelectedCount and bucketedNonPreferredNodeSelectedCount counters to NodeSelectionStats and updated related methods across multiple classes to
add a simple test case to demonstrate how to use it0001
added a boolean flag ` hasOwnerPtr ` to track the existence of the owner pointer in ` CPlatformWindow . java ` to improve the
added a clock functionality to the PlaybackOverlayFragment to enhance user experience by providing a fade - in and fade - out animation
fix ( core ) : remove unnecessary call to markdirty ( )
modified the IMPL class declaration and improved exception handling in SegmentReader . java to ensure proper class loading and provide clearer error messages for
refactor cell update event firing to run on a separate SwingUtilities . invokeLater call to ensure UI updates are executed on the Event Dispatch Thread
remove defaultinetaddressadapter , use typeadapters . inetaddress _ factory instead
added null value checks and accessors to the Series class and corresponding unit tests to ensure proper handling of null values and validate functionality through unit tests
updated the option for audio time stretch from " -- no - audio - time - stretch " to " -- audio - time - stretch " to
updated calculations in GeoRelationUtils and GeoUtils to use Math . min and Math . max for latitude and longitude to improve accuracy of coordinate calculations
cloudstack - 5892 : fix the bug in listvirtualmachines - when the service offering be not in the list , the
added cleanup method to HazelcastTest to ensure proper resource management during tests
added tests for AES / NoPadding and NoSuchProviderException in BlockCipherTest . java to ensure proper exception handling for various cipher modes in the
added filters to QFileClient to display operation logs to improve logging visibility for better debugging
fix issue with type argument in @ introduction annotation . fix issue with @ abstractbeandefinition .
set currentconnectionaddress to proxyaddress if it ' s not already set
replaced the use of Math . addExact with MathUtils . cappedAdd for demand calculation to simplify the code and improve readability by
refactor image output stream handling to use try - with - resources for better resource management to improve resource management and ensure proper cleanup of temporary files
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct calls to ` SearchActivity ` in multiple
updated initialization of ` schemaCrawlerOptions ` in ` SchemaCrawlerCommandLine ` and refactored ` toString ` method in ` GrepOptions `
http : / / code . google . com / p / mybatis / issues / detail ? id = 558 : add support for
added an @ Autowired field for PersonRepository in RepositoryIndexCreationIntegrationTests . java to facilitate dependency injection for the Person
changed the return type of the stop method from Exception to InterruptedException in UIServer . java and corrected the log message in TestVertxUIM
fixed switch / cases indentation see blockcactus . java
refactor mouse handling logic in ThemeSelector . java to use MouseMotionAdapter for better encapsulation to improve code readability and maintainability by
[ java ] make abstractminmulticastflowcontrolrhspadding a subclass of abstractminmulticastflowcontrolfields
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative classes to enhance text editing functionality by allowing
change exception to illegalargumentexception for stattsexentannotator constructor ( # 1305 )
added a condition to check if the query is a distinct query in ClusterIntegrationTestUtils . java and modified aggregation logic in QueryGenerator . java
[ gr - 33939 ] jninativesimilarity should not throw an error if a linkage can not be find
fix checkstyle issue in generator / java / awt / textfield / jsyntaxtextarea . java
added a null check for children before iterating over it to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition fields to MessagePackParser and updated JSON parsing logic to enhance token handling and improve JSON parsing accuracy
added locale handling in AbstractSolrMorphlineTestBase after class execution to ensure consistent locale settings after tests run
simplified size calculation in LauncherFragment . java for SDK version 19 to improve code readability and maintainability
added unit tests for the MetricsReporter class to ensure proper registration and registration of metrics in the MetricsReporter
camel - 14284 : camel - jbang - fix camel - osgi type cache issue
added ` equals ` and ` hashCode ` methods to the ` Rectangle ` class to ensure proper comparison and hashing functionality for instances of ` Rectangle `
[ hotfix ] [ test ] use random name for sink in streamkafkapatest
refactor DSAParameterGenerator to handle different prime sizes and improve readability to enhance clarity and maintainability of the code
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and utility method to retrieve the AM host name from an address
fix clientoutofmemoryhandlertest failure on slow machine
replaced calls to ` setObjectId ` with a new method ` getCmoObjectId ` in multiple shape classes to ensure the correct object ID is
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of a distinct query
refactor Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes to improve code organization and maintainability
fix ( kubernetes - client ) : remove bindextensionadapter and unbindextensionadapter method from managedkubernetesclient
updated subtitle display logic in DetailsDescriptionPresenter to use a new utility method to improve code readability and maintainability by centralizing information retrieval logic
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot . java and TestRSAProviderTokenManager .
do n ' t throw exception if generate summary fails
removed unnecessary parameters from reset calls for intPool and bytePool to simplify the reset method calls and improve code readability
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
updated ShadowWindowManagerGlobal to handle TIRAMISU API level and introduced WindowSessionDelegateU class to improve compatibility with TIRAM
refactor URL handling logic to conditionally append the request ' s scheme to the link based on the requested scheme to improve clarity and correct
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with MSSQLDatabase for foreign key constraints
hbase - 13660 addendum fix checkstyle violation in hbase - server
fix a bug in emzuli pipe , and add a filter event handler for the pipe .
simonstewart : make the ` ` shouldbeinjected ' ' log message configurable
replaced ` getProducedTableSchema ( ) . getFieldDataTypes ( ) ` with ` getTableSchema ( ) . getFieldDataTypes (
clarify that player . setlistener ( ) should throw when use wrong thread
updated schema name retrieval in SequenceSnapshotGenerator to use CatalogAndSchema to ensure correct schema name is used for database compatibility
updated color scaling in SpriteBatch and SpriteCache classes and replaced ProgressiveJPEGTest with AlphaTest in LwjglDebugSt
fixed - spring data redissonconnection . sendasync ( ) method throw classcastexception in spring data redis module
added logic to check if the base core is not already in the statisticYearCores list to avoid duplicate core entries for better performance
refactor ` launchTask ` method to ` launchTaskFromView ` and introduce new ` launchTask ` method in ` TaskActionController
updated import statements and modified MorfologikFilter to utilize DictionaryHolder for better dictionary handling to improve code clarity and maintainability
updated sorting option labels for CommunityRating and CriticRating in GridFragment . java to improve clarity and consistency in naming conventions
added imports for ViewKt and ListRow , and modified visibility logic for ListRow items in CustomListRowPresenter to enhance the user interface
refactor the switch statement to a try - finally block for better resource management to ensure proper resource management and prevent potential memory leaks
refactor HttpClient class to improve code readability to enhance maintainability and reduce complexity
replaced instances of ` accordingTo . isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to improve type safety
[ thymeleaf ] add support for jsr310 serialization of java time data type
replace apache log4j MDC import with slf4j MDC in LogUtils . java to ensure compatibility with slf4j
replaced instances of TypeBearer with Type in PhiTypeResolver . java to improve type safety and clarity in type handling
removed unnecessary whitespace in CoinbaseTransaction . java to improve code readability and maintain consistency
added a method to retrieve build targets in ` BuckConfig ` and modified ` ProjectCommand ` to include a check for forced building to enhance
added a call to System . gc ( ) and removed the declaration of idleStrategy in Ping . java to ensure proper resource management and avoid potential
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` and related classes to align with the new package structure and
removed unnecessary conditional checks for selection state changes in ReportPanel . java to streamline the code for better readability and maintainability
[ hotfix ] [ runtime ] check null for slotowner in testinglogicalslot
add a new recipe class to remove calls to ` System . gc ( ) ` and ` Runtime . gc ( ) ` from the JVM to
removed redundant super ( ) calls from multiple exception classes to streamline code and improve readability
added an override for the setUIID method in ScaleImageLabel to ensure that the icon is set correctly when the UIID is set
replaced ` foundEntry ` with ` update ` for clarity to improve code readability and maintainability by using a more descriptive variable
added support for both " - cp " and " - classpath " command - line arguments in the Main . java file to enhance flexibility in
updated the compiler attribute from ' options ' to ' compiler ' in the avutil . java file to ensure compatibility with the latest compiler features
initialized variable in StorageService . java is set to true to ensure proper initialization of the service
rename Test7196045 . java files to improve clarity and maintain consistency in naming conventions
updated the density and decay values in ShaderParametersLightShaft . java from 1.5 f to 1.0 f and 0.
added new properties ` withState ` and ` stateData ` to ` OidcConfiguration ` and modified ` OidcRedirectActionBuilder ` to
hhh - 14850 - alter table add unique constraint support when column be not null
added federated sharing checks in UsersAndGroupsSearchProvider and modified folder check in EditShareFragment to ensure users are only allowed to federated
added a method ` needsDocValues ( ) ` that always returns true in ` TestBBoxStrategy . java ` to ensure that document values are
updated buffer alignment handling and improved exception messages for clarity to enhance readability and maintainability of error messages for better debugging
added a new method ` intForEach ` to ` Int2ObjectHashMap ` and modified the ` IntObjConsumer ` interface to enhance functionality
fix scoreboards not be associate with the worldscoreboards early .
changed return type of count methods from Long to long in multiple repository classes to accommodate larger count values for improved performance
updated snapshot creation logic in MManager . java to ensure MTree snapshots are only created if the time difference is less than the threshold time to
refactor dot product calculation in VectorUtil and update test assertions in TestVectorUtil to improve accuracy of dot product score calculation to enhance accuracy of
added IRREVERSIBLE _ THRESHOLD handling in DynamicPropertiesStore and Manager classes to manage the latest confirmed block number based on a configurable threshold
replaced setLocale ( ) with Systems . setLocale ( user specified locale ) in GpsMainActivity . java and MainPreferenceActivity . java to
added a condition to check if the new database was created in LauncherClings . java and implemented methods in LauncherProvider . java to
refactor collection iterator handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java to improve code readability and maintainability
added a null check for datamodel before setting is64Bit to ensure is64Bit is set only when datamodel is not null
added a check to ensure the current thread is not the same as the current thread in TestIndexWriterDelete . java to avoid potential race conditions
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access the closeDatabase method
updated imports and method calls in FullDetailsActivity and BaseRowItem to use ModelCompat instead of apiclient to ensure compatibility with the latest
added attribute handling for SVG elements in BatikSVGDrawer to ensure that imported attributes are properly set in the document element
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to improve error logging for user configuration parsing errors
added handling for the " WaitForResult " extra in AndroidImplementation . java and CodenameOneActivity . java to manage the waiting behavior based
refactor ` HitQueue ` , ` SpanPositionQueue ` , and ` PriorityQueue ` to use a ` Supplier < T > `
added a new ` mWidgetDescription ` field and updated related logic in ` WidgetCell . java ` to include widget description functionality to enhance widget
added validation to limit the number of registered attributes to prevent runtime errors due to exceeding the maximum attribute count
move predicatestest to impl / predicates package ( # 11943 )
camel - 16407 : camel - default - header - filterstrategy now allow header name to be case sensitive .
updated alignment logic and variable names in InlineLayout and Breaker classes to improve code clarity and correctness to enhance code readability and maintain
added nullability annotations and improved view inflation logic in ShareUserListAdapter . java to enhance code safety and prevent potential NullPointerExceptions
refactor : remove android . support . v4 and com . actionbarsherlock from setup . shouldinstrument ( ctclass )
added a condition to check if the association is an insert destination before the source before returning the last column to ensure that the last column is only
fix fail test due to memory limit change
replaced ` CxxDeps . of ( ) ` with an ` EMPTY _ INSTANCE ` constant in ` AbstractCxxDeps ` and updated
added error handling for null rule in JavaTestRule . java to provide clearer feedback when source under test is not among its dependencies
remove hard - coded minecraft 1.9 . 4 and 1.10 . 2 in vazkii . botania .
added a check to set ` atIndex ` to 0 if it is less than or equal to zero to ensure that ` atIndex ` is
increased timeout duration from 100ms to 500ms in BuckBlockJUnit4ClassRunner and adjusted sleep duration from 1000ms to
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to improve flexibility in managing assist content requests
updated the way the witness address is generated by using StringUtil . encode58Check instead of StringUtil . createReadableString to ensure the witness address is
refactor DefaultMethodRegressionTests for improved readability to enhance maintainability and clarity of test cases
refactor WorkloadManagerMxBean class to improve code organization to enhance maintainability and readability of the code
updated KafkaProducerException to KafkaException in KafkaOutboundAdapterParserTests to ensure compatibility with the latest Kafka framework
added a call to closeLoader ( ) on the container to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and corresponding tests in FaultTolerantExceptionClassesTests to improve exception handling and ensure
improve error message when a non - existent runner be specify in the config
updated the ` applyTunerConfigs ` method to include an additional ` extraProperties ` parameter across multiple tuner classes to enhance the tuner
added functionality to track in - progress instances of segments in PinotRealtimeSegmentsManager to ensure that segments are only added to the list if
added a condition to return null if the touchable is disabled to ensure proper handling of disabled touch events
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure
throw a retryable exception if cache config for cache name have not be create yet
refactor module installation logic in JSweetTranspiler and add a new method in ProcessUtil for checking node package installation to improve clarity
added ` @ ManagedObject ` and ` @ ManagedOperation ` annotations to ` MBeanContainer ` and ` Destroyable ` classes to enable management of M
modified the conditional check from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in LongClickableSpan .
refactor equality checks for remoteGroupID and bulbLevel to use ` " 0 " . equals ( ) ` instead of ` equals ( )
updated type comparison logic in ` mmm Types . java ` and added new classes ` T6558559a ` and ` T
updated player print statements to use " player . getposition ( ) " instead of " first edit position set . " to improve clarity of
camel - 14284 : camel - kafka should shut down kafka consumer in case of termination .
added a default method ` examples ( ) ` to the ` Schema ` class to provide a placeholder implementation for examples in the schema
refactor thread handling logic in AgentRunner . java to improve clarity and control flow to enhance code readability and ensure proper termination of thread
removed the time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to streamline data handling by eliminating unnecessary
simplified the condition for checking shards length in FacetComponent . java to improve code readability and maintainability
replaced LinkerProvider usage with CxxPlatforms . getParseTimeDeps in RustBinaryDescription . java and RustLibraryDescription
added a ` name ` property with getter and setter methods in multiple classes to provide a unique name for authentication properties
updated CFGPrinterObserver and IdealGraphPrinterDumpHandler to improve error handling and logging to enhance debugging capabilities and provide clearer error messages during
refactor scan range retrieval in BaseQueryPlan and add a small scan threshold constant in QueryServices to improve code readability and maintainability by
added ` routeId ` to the return statement in ` RetryGatewayFilterFactory . java ` to improve clarity by including the route ID in
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
updated onOverviewShown method to use DiscoveryBounce ' s showForOverviewIfNeeded instead of ActivityControlHelper ' s onOverviewShown to improve
refactor null and size checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex . java and add a test for
updated the ` publish ` method call to use ` updateLastState ` instead of ` true ` to ensure the last state is updated correctly during
updated string concatenation syntax for SKEWED _ STRING _ LIST _ VALUES and STRING _ LIST _ ID in MetastoreDirectSqlUtils
added a null element to the exp list in SpliteratorCollisions . java to ensure proper handling of null values during aggregation
simonstewart : add textcaseinsensitivity to condition . text ( ) method
replaced the ' do ' loop with a ' while ' loop in ManyToManyConcurrentArrayQueue . java to improve code readability and maintain
# 113 - enh : add queryengine . forwardonlyfetchsize ( ) ( # 113 )
added a check for ClosedChannelException in HttpServerMultiplexChannelHandler to avoid logging a 404 when attempting to close a channel that is already closed
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated the calculation of window radius in QuickstepAppTransitionManagerImpl . java to support rounded corners on windows to ensure correct window radius is used
refactor DesktopTaskView to use a View instead of ShapeDrawable for background and icon views to improve code clarity and maintainability by
refactor UpstreamCheckService initialization in UpstreamCheckServiceTest . java to ensure proper initialization of the upstreamCheckService instance
updated logging level from warn to debug in AbstractSession . java and AbstractSessionManager . java to improve logging granularity for session management messages
replace error logging and exception handling in ZooKeeperHiveLockManager to return locks instead of throwing an exception to simplify error handling and improve clarity
updated multiple Java files related to execution configuration and serialization to improve code consistency and maintainability across the execution framework
added a boolean flag ` containsCustomData ` to conditionally generate mipmaps based on the presence of custom data to ensure mipmaps
updated string literals in assertions to use single quotes instead of double quotes to ensure consistency in string formatting across tests
added a selectable flag and methods to manage selection state in the List class to improve user interaction by preventing touch events when not selectable
added a check to return false if the value count of the first field is zero in LlapArrowBatchRecordReader . java to ensure that
added file separator expansion functionality and improved logging in PolicyContext to enhance file path handling and enhance debugging capabilities
replaced Set with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance by using a more efficient list implementation
refactor TLSRestrictions class for improved clarity to enhance maintainability and readability of the code
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5652 :
updated assertNodeStateProvider to accept an additional parameter for ignorable node values to enhance flexibility in node state assertions by allowing specific criteria for
added functionality to delete the " LOCK " file if it exists in RocksdbMavenPomCache . java to ensure the lock is
updated NIOServerCnxn . Factory to use InetSocketAddress for client port initialization to ensure proper port handling for the standalone server
added a new method ` getResponse ` to handle HTTP connection in the ` RestClient ` class to improve response handling by logging the connection to the
updated the method to convert ` segmentTarURIs ` to a string array using ` segmentTarURIStrs ` instead of ` segmentTarUR
updated the password used in the loginStudent method from TEST _ STUDENT2 _ ACCOUNT to TEST _ STUDENT1 _ PASSWORD
added a null check for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions when accessing mCurrentItem
reduced the number of strings from 500 to 100 in TestSpecialOperations . java to optimize memory usage and improve performance
replaced the custom ByteArrayInStream implementation with a default byte array initialization and removed the hexToBytes method to simplify the code and improve performance by
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a check for direct substates in AbstractStateMachine to ensure proper handling of substates during transitions
added checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding test cases in MultimapTest . java to ensure correct equality
added JoinOperation interface to the PostJoinOperation class to enhance functionality by allowing join operations
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to verify PostgreSQL functionality to ensure proper
http : / / issues . apache . org / activemq / browse / amq - 5035 - fix intermittent test
refactor AvaticaDatabaseMetaData class for improved clarity to enhance maintainability and readability of the code
updated MongoDbConnectionPoolProperties to use DurationCapable annotations for lifeTime , idleTime , and maxWaitTime to improve configuration flexibility and
fix a nullpointerexception in siputils . createaudiomediapathformat ( ) .
refactor handleFilters and handleBlockJoin methods to return a boolean indicating whether filters were applied to improve clarity and functionality of filter handling logic
[ hotfix ] [ runtime ] make timeout handler configurable
replaced hardcoded value of ` mQuickStepStartingRotation ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED
camel - 14284 : camel - saxon should use camel - saxon instead of camel - saxon for log message
update javadocs to reflect the use of dataresource
pmd : fix for # 1751 escape backslashes in go tokenizer
added a check for the existence of the ' atlas ' property in AtlasTmxMapLoader to prevent runtime exceptions when the map is missing the
remove propertyplaceholderhelper since it ' s no longer use
added a call to closeDB ( ) in BlockchainTest . java and removed unused ReceiveSource in KafkaTest . java to streamline database
refactor CoreMarkdownNodeRenderer to use a List for processing lines instead of an array to improve code readability and maintainability by reducing
removed unused import of MessagingGatewaySupport in WebServiceInboundGatewayParserTests . java to clean up the code and improve readability
replaced ImmutableList . Builder with List for argument handling in ProjectableSQLQuery , SQLBindings , AbstractSQLClause , and SQLBindings classes to
added a check for the " OpenJDK " VM name in addition to the existing vendor checks to ensure compatibility with different Java environments
added a keepAlive ( true ) method call to the baseUrl setting in ReactorClient . java to ensure that the base URL is properly set and
updated VertexAttribute usage to use ShaderProgram . POSITION _ ATTRIBUTE and ShaderProgram . NORMAL _ ATTRIBUTE instead of hardcoded string values to
camel - 16405 : camel - core - optimize to not lookup the property from the registry
updated the condition to check for null before accessing the account store to improve code readability and prevent potential null pointer exceptions
update version number to 3.8 . 1 , use alpha instead of release
replace direct calls to ` t ` with ` t . unannotatedType ( ) ` in multiple locations to improve code clarity and maintain
updated assertions and initialization for TsFileProcessor and FlushManager in StorageGroupProcessorTest . java to ensure correct processing of sequence TsFile processors and
updated dependencies and class names from " org . eclipse . jetty . jetty " to " org . eclipse . jetty .
added a parameter ` waitbeforestart ` of 2500 in ` FFMpegVideo . java ` to allow for a delay before starting the
removed the ` skipCorrupt ` boolean parameter from the constructor of ` OrcEncodedDataConsumer ` to simplify the code by eliminating unnecessary
updated imports and refactored test methods in AccessorsTest . java for improved clarity and functionality to enhance test coverage and ensure correct
add a method to get the framemap in the lirgenerator to allow access to the framemap
updated test classes to use ` @ ConditionalIgnore ` instead of ` @ Ignore ` and added ` @ RunningContinuousIntegrationCondition ` to improve test
fix boat not render on water
updated the ` toString ( ) ` method in ` Directory . java ` and added ` getLockID ( ) ` method in ` RAMDirectory .
simplified the conditional check for experimental options by removing unnecessary method to improve code readability and maintainability
added two overloaded ` then ` methods for ` Path ` and ` AssertProvider ` in ` BDDAssertions . java ` to enhance
rename HostPort variable to hostField for consistency and clarity to improve code readability and maintainability by using a consistent variable name
updated logging level from debug to warn for multiple Kubernetes configuration files and improved debug message formatting to provide clearer guidance on changing the Kubernetes
added upload status handling and intent management in UploadListActivity . java to enhance file upload functionality and improve user experience during file uploads
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to use it for provider installation handling to improve code organization and
replaced instances of ` Span ` with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and ` StreamEnvironmentPostProcessorTests `
updated the SelectFromDatabaseChangeLogStatement to use a computed column configuration instead of hardcoded values to improve flexibility and maintainability of the
hhh - 14850 - fix postgresql 1.2 compatibility with postgresql 1.3
fix partition count calculation when data member size be zero .
added checks for scheduler state before starting the scheduler in ExecutionScheduleManager and ExecutionSchedulerImpl to ensure proper handling of scheduler startup and prevent redundant start
removed unnecessary string conversion in InlineBox instantiation and improved conditional check for blockParent to enhance code readability and maintainability
refactor string concatenation in checkArgument calls for better readability to improve code clarity and maintainability
updated the return value of getStagedRectSlideEnd ( ) from 383 to 500 to improve the responsiveness of the tablet split to
replaced hardcoded string " Random " with localized string " waves . random " in WaveInfoDialog . java and PlacementFragment . java
updated conditional logic to include ownership plot area check in BukkitMain . java to enhance functionality to allow KILL _ ROAD _ I
added tests for ` setTouchExplorationEnabled ` in ` ShadowAccessibilityManagerTest ` and modified listener handling in ` ShadowAccessibility
pdfbox - 5328 : avoid arrayindexoutofboundsexception and add test
do n ' t use testelement . getpropertyasstring ( ) , use getname ( ) instead
refactored the instantiation of NPOIFSFileSystem to use POIFSFileSystem . create ( big ) to improve code readability and
added imports for PlotArea and PlotArea , and modified return logic in Move . java to enhance plot area retrieval functionality and improve error handling
updated regex pattern for version matching in TestWebHCatE2e . java to ensure compatibility with the latest version format
updated the condition to check for ` count < 1 ` instead of ` count < 0 ` in ` Filters . java ` to ensure that `
fix ( kafka ) : add clientid to kafka consumer config
updated the import statement for IsolatedClassLoader and added error handling in JavacCompiler . java to improve error handling and provide clearer feedback
do n ' t repaint the option view if it be the same a the select item
camel - 14284 : fix checkstyle violation in camel - spring - batch
added a method ` isAnimationFinished ` to check if the animation has finished based on the state time to provide a way to determine if the
updated import statements in LoginMockMvcTests . java and added a test for custom fav icon with line breaks to improve code readability and ensure
added null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified ` transformer . setRefreshingText ` in
simonstewart : do n ' t allow space in the value of ` ` / ' ' and ` ` / ' '
refactor ObjectHashSet to improve code readability to enhance maintainability and reduce complexity
refactor null checks in DataUtilities . java for consistency and clarity to improve code readability and maintainability by simplifying null checks
fix creative not be able to delete enchanted book ( mc - 12770 )
[ microprofile ] add test case for asyncresource
rename targetFlatHeaderMap to targetUserHeaderMap and update related references to improve clarity and consistency in header map naming conventions
added error handling and improved logging for message sending failures in MailService . java to enhance debugging capabilities and provide clearer error messages during email
replaced ` resetTaskItemView ( ) ` method with ` resetToEmptyUi ( ) ` in ` TaskHolder . java ` and
added multiple test cases for partition retrieval by names in TestHiveMetaStoreClientApiArgumentsChecker . java to ensure correct behavior of partition retrieval
added a closing brace to the FileListListAdapter . java file to improve code readability and maintainability
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile . java ` and ` OC
updated the index used in the removeViewInLayout method from ` getChildAt ( getChildCount ( 1 ) ) ` to ` getChildAt ( getChildCount
removed unnecessary package imports from hide method calls in JavaxWebSocketConfiguration and JettyWebSocketConfiguration to streamline code by eliminating unnecessary
updated S3Request constructor to set ' expiresSeconds ' to false instead of true to disable expiration for improved security
fix jfxradiobutton crash when use jfxRadiobutton with no timeline
modified the condition for parsing dewey numbers and added an exception for zero splits to improve error handling and provide clearer feedback when parsing fails
updated the handling of categorySet by creating a new string and modifying its format to improve the readability and usability of the category string output
corrected the spelling of " Invalid close control status code 1111 " to " Invalid close code 1111 " in WebSocketClientTest .
added a null check for the classLoader in WebappLoader . java and updated the expected repository length assertion in TestVirtualWebappLoader . java
removed redundant check for mapped superclass class before adding persistent fields to streamline code for better readability and maintainability
pdfbox - 4892 : ignore non - number page label , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` to validate the ` PorterStemFilter ` functionality to ensure that the ` P
modify postBatchMutate method to postBatchMutateIndispensably and modify its implementation to include a success parameter to improve handling of
rename package from ` org . springframework . batch . exlore . support ` to ` org . springframework . batch . explore
fix a concurrentmodificationexception in chatwindowmanager . leavechatroom ( )
removed redundant calls to Sys . touch ( ) across multiple Java files to streamline code and improve performance by eliminating unnecessary calls
updated command handling in HgCmdLineInterface to include " - mardu " instead of " -- unknown " and modified changedFiles method
camel - 14284 : camel - netty should use timer from component instead of create new timer each time
made ` direction ` , ` color ` , and ` range ` final in ` DirectionalLight ` , ` PointLight ` , and
added width and height calculations using Math . max for target dimensions in X11GraphicsConfig and WGLGraphicsConfig to ensure minimum dimensions are used
added ` toString ( ) ` methods for ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` , and corresponding tests to provide a
added a new AnnoFilterTreeSet class and methods to handle inner class annotations in the ClassFinder class to improve filtering of annotated classes based
modified the handling of ` newLength ` in ` BytesColumnVector . java ` to ensure a maximum size of ` newLength ` is set
replace assertEquals with assertTrueEventually in WriteBehindMapStoreWithEvictionsTest . java to improve test reliability by ensuring
changed method parameter type from JScrollPane to JComponent in uninstallListeners method for both MotifScrollPaneUI and XTextAreaPeer classes to improve method compatibility with a broader range of component types
implement equal ( ) for polyfunction , use it in geofunction . expandtopolyfunction
added null check for the table before accessing its column class to avoid potential NullPointerException when table is null
added a try - catch block around Class . forName ( ) . newInstance ( ) in CustomChangeWrapper . java to handle potential ClassCastException when loading
added new methods to DistBuildConfig and updated references to use BuckConfig instead of ConfigPathGetter to streamline configuration management and improve code
hide export warning dialog when double entry be enable
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to a broke test
changed return type of doJoin methods from void to boolean in JoinTemplate , JoinWorker , and MergeJoinBatch classes to indicate success or failure
added a new method ` getAutodesps ( ) ` to the ` JavaLibraryDescription ` class to provide functionality for retrieving library configurations
added FLAG _ ACTIVITY _ NEW _ TASK to intent flags in LauncherTimelineCursorAdapter . java to ensure the activity launches in
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to provide functionality for checking paging order by
updated assertions in ` RepositoryConventionPluginTests ` to check the correct index of repository instances to ensure the correctness of the repository ' s URL
add a cluster affiliate task so that it can be run in a background thread .
improve error message if uri start with ` ` . / ' '
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array handling in CacheKey and improved readability in CacheKeyTest to enhance performance and maintainability of cache key comparisons
updated file type detection in DefaultFileTypeDetector and added getmntent method in SolarisFileSystem and SolarisFileSystemProvider to
added a call to close the WebSocket session to ensure proper resource management and prevent memory leaks
replaced ` ShadowVirtualDeviceParams ` with direct reference to ` VirtualSensorCallback ` in ` ShadowVirtualDeviceManager ` to simplify callback retrieval
added a condition to check if the ` contextBeforeExecution ` is not equal to the ` httpSession ` in ` HttpSessionSecurityContextRepository ` to
replaced the variable ` lch ` with ` loopback ` and modified the address retrieval logic in ` NetUtil . java ` to improve cl
renamed BUF _ SIZE to DEFAULT _ BUF _ SIZE and updated related buffer initialization and error handling to improve code clarity and ensure
updated KeyInfoReferenceResolver to include secure validation and modified exception messages in several classes to enhance security and improve error handling for XML processing
added a check for the icon change listener installation before adding and removing it to ensure that the icon change listener is only added when it is not
added Russian language support to the Language . java file to enhance language support for Russian in the application
hhh - 14827 - fix decimal precision in basesquaredtosqlastconverter
disable frame state verification in substratetransfergraphkit to improve performance by avoiding unnecessary state verification
added cleanup methods in RobolectricTestRunnerTest and a method to reset system properties in TestUtil to ensure proper resource management after tests
added support for loading " org . slf4j . LoggerFactory " in ViewClassLoader and its test to ensure proper loading of LoggerFactory
added a check for " jar " packaging in ChangePackaging . java and created a new test case in ChangePackagingTest . java
fix flaky test : filedownloadviahttpgettest and filedownloadviaproxytest fail on window
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to clear the command buffer
replaced default units with preferred units in the JogService and related services to improve clarity and consistency in unit management
updated the expected date format in DatePatternConverterTest to use UTC timezone to ensure consistent date formatting across different locales
reformatted return statements in Terminator . java to improve code readability and maintainability
updated error messages and improved URI validation in FileSystem and DistributedFileSystem classes to enhance clarity of error messages and ensure correct file paths are used
change timer task to use jabrefexecutorservice in jabrefframe # showtrackingnotification
updated reconnect attempts and replaced sleep durations with awaitility in FtpReconnectAttemptServerStoppedIT . java and added countConnections method in Ftp
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties . java ` to improve concurrency handling and ensure the
added ` ignore ( Throwable ignored ) ` method to multiple log - related classes to enhance logging functionality by allowing ignored exceptions to be logged
added a null check for runningTaskView before proceeding to prevent potential NullPointerExceptions during execution
removed unnecessary type casting for item damage in BukkitWorld . java to simplify code and improve readability by eliminating unnecessary
removed the cleanImage method call from PanelManager . java to streamline image processing by eliminating unnecessary code
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing map and file system directories to enhance functionality for managing map and file system directories
added null check for ` ic ` before creating ` cleanUpColor ` to avoid potential ` NullPointerException ` when ` ic ` is null
updated the query assertion in QueryEqualityTest to use " field1 _ s " instead of " field1 " to ensure accurate comparison of document
updated the implementation of ExtendedOperatingSystemMXBeanImpl to improve performance and maintainability of the code
added a method to install left commands and updated the title bar status accordingly to enhance the functionality of the SideMenuBar by allowing dynamic updates of
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity ` to
added SybaseDatabase support to the condition check in DropPrimaryKeyGenerator to enhance compatibility with Sybase - specific database scenarios
refactor Client class to improve code readability to enhance maintainability and ease of understanding
[ java ] notify the leader of be ready at the end of become a follower rather than wait to duty cycle so that a suspended cluster can function .
replaced ` invalidate ( ) ` with ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
fix miss return in case of cleaningnearcacheinvalidation receive at nearcachedclientmapproxy for legacy client
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added error handling for server shutdown in ListenHTTP . java to ensure graceful shutdown of the HTTP server and handle potential exceptions gracefully
camel - 14284 - camel - aws2 - s3 - stream upload : add support for stream upload on s3
[ hotfix ] [ runtime ] remove unused parameter in taskmanagermetricshandler
bug 10332 : fix 228 to 229 upgrade from 2.2 . 7 to 2.2 . 7 fails
added a new test class ` TestThriftCLIServiceSecurity ` and modified ` TOpenSessionReq ` to handle password validation to ensure that password
replaced the usage of ` CommonParameter . getInstance ( ) . maxEnergyLimitForConstant ` with a new variable ` maxEnergy
added maxInMemorySize property and its getter / setter in HttpClientProperties to allow configuration of the maximum in - memory size for the HttpClient
refactor caching logic in Cache . java to improve performance and maintainability of cache operations
added two new test classes , RunCucumberTest . java and StepDefinitions . java , to facilitate testing of Cuc
fix array [ sqrt ( - 1 ) ] and array [ pow ( - infinity ( ) , 1 ) ] do n ' t throw json
removed duplicate byte array entries for " 656469746564 " and " 8080656469746564 " from Utf
added checks for parameter sets before appending them in the Params class and introduced a new method to check for non - null values to improve parameter handling
camel - 16465 : circuit breaker should not allow to configure number of output on load balancer .
updated the document frequency assertion in TestIndexWriterExceptions . java to use the maximum buffered documents configuration to ensure the test accurately verifies the expected
replaced ` String ` with ` Sha1HashCode ` for hash calculations across multiple classes to improve hash handling efficiency and reduce memory usage
removed unused enumValue , intValue , and longValue methods from AsmRuntime . java to clean up unused code and improve maintainability
add miss biomes tag to biometagsprovider ( # 3740 )
papplet . requestimage ( ) now use a thread pool instead of a separate asyncimageloader
changed access modifiers of several fields in BaseTableUpsertMetadataManager from private to protected and updated the preloadSegments method to enhance encapsulation and improve
replaced occurrences of " \ u0646 \ u0641 " with " \ u0623 \ u064a "
updated method calls from ` getImage ( ) . equals ( ) ` to ` hasImageEqualTo ( ) ` in ` AbstractSunSecureRule
add -- repos to the jbang run command so it can be run with the maven plugin
added handling for NaN scores in CrawlDbReader to improve robustness by avoiding potential null pointer exceptions during score collection
added cleanup method and timestamp setting in OnStartupTriggeringPolicyTest . java to ensure temporary files are cleaned up after tests run
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and modified focus
[ hotfix ] [ checkpointscleaner ] make checkpointscleaner thread - safe
added a new file XPathWhiteSpaceTest . java to demonstrate XML schema validation to ensure proper handling of whitespace in XML sources
[ bonsai ] do n ' t override trie log layer in worldstate if it ' s already set
pdfbox - 4071 : fix typo in fillednewarrayinstruction javadoc
[ hotfix ] [ test ] add timeout to simplenetworktest
updated parent path handling in OCFile . java to use endsWith instead of substring to improve clarity and correctness in path construction
added a print statement to indicate the failure of loading the skin file to improve debugging by providing context on the skin file loading failure
added ` markDirty ( ) ` and ` isValid ( ) ` methods to ` LgoGroupedLevel2Update ` and ` LgoLevel
added a new constant UNDEFINED in Result . java and updated TestStep . java to use it to improve code clarity and maintainability by using
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper exception handling for registered callbacks in the database
change uploadjobmultipartoperation not to use forkjoinpool [ hz - 2037 ] ( # 23600 )
[ hotfix ] [ runtime ] do n ' t corrupt recovery location if ignoremissingjournalfiles be set
bug fix : ignore child node in summarylevels when create view
removed the volatile modifier from the ` pos ` variable and added a ` sizeMask ` variable and modified the ` ensureAvail ` method to
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to
replace the variable ` targets ` with ` endpoints ` and modify the message array initialization to ensure ` messages ` is initialized with the correct number of
removed unnecessary whitespace in FileManager . java to improve code readability and maintain consistency
added new transform function types and updated type mappings in TransformFunctionType . java and TransformFunctionFactory . java to enhance functionality to support additional transform
added getSimpleName ( ) and getEnclosingElement ( ) methods to VariableElement and implemented getSimpleName ( ) and getEnclosingElement ( ) methods to enhance
updated RFC version from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compliance with the latest RFC standards
updated version number from 2.17 . 3 to 2.17 . 4 and changed type casting from int to Character in SearchAnnotationVisitor to
replaced the use of HashMap with SparseBooleanArray for selected items in ListActivity and NoteAdapter to improve performance and reduce memory usage during item
simplified conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated ConfigFileApplicationListener to use ResourceUtils for path handling and added a test for absolute resource defaults to ensure correct path formatting and improve test coverage
updated PreviewPositionHelper initialization to accept a Context parameter and modified insets handling based on multi - window mode to improve flexibility in preview positioning
[ java ] only publish new leadershipterm if they have the same id .
pdfbox - 4892 : improve test coverage , a suggest by valerybokov
refactor ByteArrayInputStream logic and introduce a new Skip class for skipping bytes to improve code clarity and ensure accurate skipping of bytes in input streams
reordered conditional statements in UpdaterTask . java for clarity to improve readability and maintainability of the code
changed the access modifier of MAX _ HEADERS from final static to public static in HeadersMessage . java and added a conditional check before calling block
add ` ` rt . jar ' ' to standard library list in modclassloader
do n ' t try to send a framed hello message if the local node be not ready
updated method signatures and replaced string literals with constants from Utils to improve code readability and maintainability by using consistent naming conventions
added a check for response commitment before sending an error response in HttpChannel . java to ensure that errors are only sent when the response is not
modified conditional checks in HttpSession . java for hold and connectionQueue size to ensure proper handling of non - positive hold values and simplify polling logic
updated fadeOutFakeTaskView to false and added visibility adjustments for hotseat icon in SwipeUpGestureTutorialController to
add a name to the prefab if it do n ' t already exist
updated external group settings in LdapMockMvcTests . java to include specific superuser names to enhance security by restricting access to specific superuser
added a validation check for a non - existent account transfer in TransferActuator . java to ensure that the amount is at least 1 TRX
updated the method to use ` File . separator ` instead of a hardcoded ' / ' in ` FileResolverTestBase . java ` to
ggb - 1341 fix focus problem in geotree
updated GpsMainActivity to retrieve session description instead of an empty string and modified AnnotationViewFragment to use EventBus for command events to improve
updated assertions in JsoupNonVisualRegressionTest to handle cases where the number of pages does not match the expected number of pages to
deprecate androidbufferallocator in favor of androidnativebufferallocator
added checks for flags starting with " ! " in Main . java and PrimaryItem . java to handle flags that start with " ! " to
added a NOPMD comment to the ResultSet assignment in JDBCHistoryCache . java to indicate that the code should not be used in
changed string comparison from ` equals ` to ` = ` for item use operations in ` BattlePassManager . java ` to improve code
refactor QueuePriorityTest to use a fixed item count and improve test assertions to enhance readability and maintainability of the test code
refactor affinity api unit test to use @ inject instead of init
added a null check for the main command and updated the argument check to include the HELP option to ensure proper handling of command - line arguments
updated the initial capacity of LightOutputStream in multiple classes to optimize output size for better performance
changed the access modifier of the Scanned class from static to public to allow access to the Scanned class from other packages
modified the behavior of the ` showBlank ` variable in ` ClassWriter . java ` and added a new class ` T8032819 .
removed the assertion for the length of ' p . sn ' in Person . java to streamline code by eliminating unnecessary checks
added null check for file extension in the return statement to ensure robustness by preventing potential NullPointerExceptions during file extension validation
replaced ` return ` with ` continue ` in ` ContactRightButtonMenu . java ` to improve control flow by allowing further iteration instead of
[ hotfix ] [ runtime ] remove redundant check for iscanceled ( ) in simpleslot
simplified the screen iteration logic in InstallShortcutReceiver . java to improve readability and maintainability of the code
refactor the binding and closing logic of PlainSocketImpl to use a delegate instance for better clarity to improve code readability and ensure proper
added functionality to clear removed items from the media details in the BookmarkListRootFragment and MediaDetailPagerFragment to ensure proper management of removed
updated log message from " offsets are from the center of element " to " offsets are from the element ' s in - view center point "
added a new file ` bug4865918 . java ` implementing a GUI test for ` JScrollBar ` to verify the behavior of
replaced the usage of VelocityEngine with a direct reference to Velocity in ADKerberosOperationHandler to simplify the code and improve clarity by
replaced specific imports with a wildcard import and added a case for sending group triggers to streamline import statements and enhance command handling for group triggers
added file selection functionality to the AccountsActivity and updated related classes to enhance user experience by allowing selection of GnuCash account files
added @ ToString ( callSuper = true ) annotation to PartitionChangeEvent and tbApplicationEvent classes to ensure proper string representation for better debugging and logging
updated the configuration URI in the CloudService class to use a constant instead of a hardcoded value to improve maintainability and reduce hard - coded
removed setViewportComponent and setJScrollPane methods from BrowserPanel to streamline the code by eliminating unnecessary component settings
added KEYCODE _ FORWARD _ DEL and updated related cases in LwjglInput , ParticleEditor , Layout , and TW
added conditional logic to retrieve content type parts based on configuration to improve flexibility in handling MIME type parts based on user - defined settings
added a pattern to match the author name in the constructor and modified the condition for adding it to the comment lines to enhance the constructor ' s
updated metric constants from DELTA _ TOTAL _ DATABASES and DELTA _ TOTAL _ TABLES to CREATE _ TOTAL
updated HiveDatabaseSchema and HiveSchemaFactory to use DrillHiveMetaStoreClient and SchemaConfig instead of List < String > tables to
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` as a parameter and added error handling to
updated the calendar name from " Hijrah - umalqura " to " Islamic Umm al - Qura
added a check for Firefox browser in the supported condition to ensure compatibility with both IE and Firefox environments
added a method to append ServerInterceptor in GrpcServerBuilder to enable customizable server interceptor handling
added a default charset parameter to the CREATE TABLE statements in TestCompatibility . java to ensure compatibility with the latest database schema changes
removed unnecessary calls to ` allocateOutgoing ( ) ` and adjusted the return logic in ` StreamingAggTemplate . java ` to improve code clarity
[ hotfix ] [ runtime ] fix typo in executiongraph # getallocationtimeout
added a boolean flag ` hasFrom ` to the ` Delete ` class and modified ` DeleteDeParser ` to conditionally append " FROM "
refactor SynchronizeFolderOperation to separate success and multi status checks into a new method to improve code readability and maintainability by encapsulating
refactor code to encapsulate applicable test matching logic into a new utility method to improve code readability and maintainability by reducing duplication
updated regex pattern in LogAnalyser . java to include a space in the log line to ensure correct formatting of log lines based on the
( chore ) camel - test - infra - google - cloud : enable integration test for google cloud
fixed - rsearch . search ( ) method do n ' t respect max exclusive parameter
refactor CCLicenseStep to improve type safety and clarify license selection options to enhance code readability and maintainability by using explicit
do n ' t try to add a value to the guid index if it ' s null
updated equality check in OptionalAssert to use comparison strategy to improve accuracy of comparison logic
updated memory management logic in NoNewLineParagraphCssApplier and ParagraphCssApplier to conditionally set the last margin height based on its presence
added a new file TestArrayCopyToFromObject . java that tests ArrayStoreException when copying from an array to an object to ensure that ArrayStoreException
update Python path handling in BuckPythonProgram . java to use Escaper . escapeAsPythonString instead of escapeAsBashString
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5652 -
deprecate findfiles ( modcontainer , path , boolean ) and replace it with findfiles ( modcontainer , path , boolean , boolean )
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to temporarily disable the test due to unstable test case
added a null check for the exception before asserting the response 400 in TestInternalInputBuffer . java to improve robustness by avoiding null
move spliclassloader lock management to spliclassloader . getclassloader ( )
added server version comparison logic in CustomPlaybackOverlayFragment and modified HLS support check in PlaybackController to ensure compatibility with newer server versions and
replaced instances of ` new OneKDC ( etype ) . writeJAASConf ( ) ` with ` new OneKDC (
updated Jsr250Voter to return ACCESS _ DENIED or ACCESS _ ABSTAIN based on jsr250AttributeFound to ensure
updated import statements in MP4Parser . java to include specific classes for better clarity and functionality to enhance code readability and maintainability by
added a new constant HS2 _ PROXY _ USER and modified session parameter handling in ConnectionFactory . java to improve session parameter management and ensure
camel - 14284 : camel - hdfs - add compressioncodec for snappy and bzip2 compression
added a delay of 1000 milliseconds in HttpClientTest . java to ensure that the test does not hang under high load conditions
fix xssfcell . setcelltype ( cell . cell _ type _ blank ) and xssfsheet . removecell ( )
updated glyph positioning logic in GlyphLayout . java and modified text in BitmapFontTest . java to improve text rendering accuracy and clarify
refactor ` Fabric8IstioIT . java ` to use ` Commons . ISTIO _ VERSION ` directly to improve code
replaced calls to ` apiClient . ReportPlaybackStartAsync ` and ` apiClient . ReportPlaybackProgressAsync ` with ` TvApp . getApplication
use bufferedinputstream to avoid hit the disk on every invocation
do n ' t put from load all backup if record store do n ' t exist in memory
change return value from bitwise AND to bitwise OR for LENGTH _ BIT and ERROR _ BIT to improve clarity and correctness of the code
make fixdefaultpolicies use dspaceobject instead of collection for read policy
added a ConcurrentHashMap to manage CompositeFont instances using a SoftReference to improve performance by reducing object creation overhead
initialize prefHeight to 0 and adjust its calculation to ensure prefHeight is consistent with node height calculations
dmn feel : improve error message for unknown variable error ( # 1341 )
updated import statements across multiple Java files for consistency and clarity to improve code readability and maintainability
changed access modifier of ` finishRunningRecentsAnimation ` method from private to public and modified ` longPressRunnable . run ( ) ` to
added null checks for node ID and edge type in ElementFactoryImpl and ImportContainerImpl , and improved edge type handling in ImportContainerImpl
[ beam - 13434 ] fix npe in fnapiclusterclient . getstate ( ) and beamfnstategrpcclient
nifi - 1343 : fix bug in binfiles . createbin ( ) that create 2 bin when the size of the content be
added logic to find the closest core in the enemy ' s cores and updated the way the closest core is retrieved to improve the accuracy
added content length handling in RestTemplateCopyHeaderFilter and a corresponding test in TestRestTemplateCopyHeaderFilter to skip copying of content - length
updated Java2TypeScriptTranslator to handle class and character cases and modified the eval method in SyntaxTests to improve code clarity and ensure correct
updated filter calculation and fixed channel sizes in multiple classes to improve the responsiveness and performance of channel processing
hbase - 25836 allow - allregions option to Tries all region on a regionserver ( chunhui )
removed NodeModule import and modified ImmutableMap initialization in TestCassandraConnector to streamline code by eliminating unnecessary dependencies
added a call to reset the cursor position in the KahaDBStore class to ensure the cursor position is reset before processing new data
added minimum size constraints in CallDialog and adjusted frame dimensions in OneToOneCallPanel to ensure the dialog does not exceed the minimum size of the
fixed blockfalling not be able to place block in the wrong place in the world .
updated TestHTTPSamplersAgainstHttpMirrorServer to use static fields and improved setup methods to enhance performance and maintainability of the test
refactor KerberosPrincipalDAO to use injection for KerberosPrincipalHostDAO and update entity removal logic to improve code clarity and ensure proper
removed the ' true ' parameter from the getTableSnapshot method call to simplify the method call and improve readability
improve error handling in apr to avoid infinite loop .
updated exception message in AndroidGradleBuilder to clarify the requirement for the " Monetization " section and paste the Base64 -
updated the display name from ` child . getName ( ) ` to ` child . getDisplayName ( ) ` in ` FileTranscodeVirtualFolder `
[ drools - 2852 ] support relative package name for boot - inf . classes . ( # 2852 )
[ hotfix ] [ test ] disable checkindextest on jdk 19
removed the context parameter from the assignTargetsForSplitScreen method and updated related logic to streamline target assignment logic and improve code clarity
refactor LeaderLatch class to improve code readability to enhance maintainability and facilitate future development
added methods to initialize zk - SNARK parameters in SolidityNodeHttpApiService to enable dynamic configuration of zk - SNARK parameters for
updated transactionConfidence to set depth in blocks and modified depth handling in TransactionConfidence to improve transaction management and ensure accurate depth tracking
added a new method ` createMediaRecorder ` in ` CodenameOneImplementation ` and renamed ` longtitude ` to ` longitude `
set default value of platformName to " ios " to ensure default platform name is used for better compatibility
refactor PageEditClient to improve code readability to enhance maintainability and facilitate future development
reformatted conditional statements in Graphics2D . java for better readability to improve code clarity and maintainability
rename CreateVisibleSignature . java to improve clarity to enhance code readability and maintainability
added error handling around the ` outgoingFrame ` method in ` AbstractExtension . java ` to ensure that callbacks are properly invoked when exceptions occur
replaced direct call to ` new Caller ( ) ` with ` AccessController . doPrivileged ( ) ` in ` ContextHandler . java ` to improve
added logic to set parent of child categories to null in CategoryREST . java to ensure all child categories are removed from their parent context
updated ContributionManagerDialog to use dynamic title based on contribution type to improve user experience by providing different language options for contributors
added a new ` vwap ` field to the ` Ticker ` class and updated the ` Ticker ` constructor to include it to
added functionality to display a no widgets view in the SearchAndRecommendationsScrollController and WidgetsFullSheet classes to improve user experience by
add rendergraphapi to allow to add a tintnode to the render graph .
set the color of the NCFirebaseMessagingService to the primary color to ensure the service uses the correct color theme for better visual consistency
updated ShadowUsbManagerTest . java file to improve test coverage and maintainability
updated the calculation of FastByIDMap and added logging statements in multiple evaluator classes to improve accuracy of preference calculations and enhance debugging capabilities
added a call to update the selected configuration in the Rocket class to ensure the selected configuration reflects the latest configuration changes
updated width and height calculations in AndroidGraphics . java to ensure they are at least 1 pixel to avoid potential issues with invalid bitmap dimensions
replaced instances of HashMap with LinkedHashMap in multiple classes to maintain the insertion order of elements in the options map
replaced ` nativeClosureManager ` with ` closurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a
( chore ) camel - core : migrate to junit 5 for camel - core
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , to implement websocket ingestion integration tests
no effective change - remove unused test
refactor authentication comparison logic to use a new method ` areAuthenticationsEssentiallyEqual ` to improve readability and maintainability of the
added a conditional check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to
refactor code to use a local variable ` callNodeType ` instead of repeatedly calling ` callNode . getType ( ) ` to improve code read
added a new ` Insecure ` annotation and modified the ` MessageBuffer ` constructor to use this annotation to enhance security by restricting the use of
added multiple configuration variable names to HiveConf . java to enhance configuration management and improve code readability
initialize scopes and policies as a new HashSet in ResourceSet . java and add a null check in DefaultResourceSetService . java to ensure that
changed ` decrefOnClose ` to be final and updated ` MultiReader ` constructor to accept ` readerFinishedListeners ` to enhance immut
refactor SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , and Test3 classes to improve code organization
simonstewart : re - enable test that pass in 2.49 . http : / / bit . ly / 1JKT
removed the ` getFirstTypeArgument ` method and made ` EntrySet ` , ` KeySet ` , and ` GsonTypes ` classes final to
changed return types of keySet ( ) and values ( ) methods from Set < Integer > and Collection < Integer > to KeySet and Values to
added a duration parameter and updated background color handling in the FlipTransition class to allow dynamic adjustment of the transition duration based on user - defined
removed trace logging for setting subsAreValidForStreaming in DLNAResource . java to streamline the code by eliminating unnecessary logging
bump version to 9.10 . 0 - rc1 ( # 2590 )
replaced System . err . println with LowLevelLogUtil for warning messages and added conditional logging based on Java version to improve logging clarity
[ javaparser ] add java 16 to the list of supported language level .
updated padding logic for the status view based on the number of replies to improve UI responsiveness by adjusting padding based on the number of
partitionbackupreplicabletask : do n ' t invoke partitionbackupreplicabletask on empty versionmap
added metadata handling functionality in SeedUrl , SeedResource , and SeedUrl classes to enable better management of seed metadata in the application
added a null check for the declaration before creating a cloned pattern to avoid potential NullPointerExceptions when the declaration is null
[ hotfix ] [ test ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
improve annotation action validator to include package name
updated assertions in IterableTest to correctly handle null values as an Object array to ensure correct handling of null values in assertions
added stream ( ) and parallelStream ( ) methods to MapIterable and PrimitiveObjectMap classes to enhance performance and performance of map operations
clone notifInfo before returning it to prevent unintended modifications to notifInfo
do n ' t search for command key in the set if they do n ' t exist
refactor AEADBlockCipher class to improve code readability to enhance maintainability and reduce complexity
added ` isVariableLocal ` methods to ` ILocalVariableAwareVariablesMap ` , ` VariablesMap ` , and ` WebVariablesMap `
added a null check for ` id ` in ` PackageResourceTable ` and changed the default resource mode in ` RobolectricTestRunner
added a conditional check for ` ulSize ` and ` ulPos ` before retrieving table data in ` TrueTypeFont . java ` to ensure
refactor SignPlugin to accept a list of HttpMessageReader instances instead of a static list to improve flexibility in handling multiple message readers during
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added validation for MavenDeployer instance in StandardMavenAuthenticationProvider to ensure that only valid MavenDeployer instances are processed
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future development
added SSL support and improved error logging in LinkyHandlerFactory . java and EnedisHttpApi . java to enhance security and provide clear
updated HiveFunctionRegistry to use Java Streams for string manipulation and added a mapping for translating SQL functions to improve code readability and maintainability
http : / / issues . apache . org / jira / browse / amq - 4237 - fix mbean name in discoverynetwork
updated the method signature of ` getBuildTargetForAlias ` to include ` possiblyFlavoredAlias ` and adjusted the return statement accordingly to improve
[ olingo2 ] fix olingo2 consumer return 0 for empty feed
added support for version 0.13 . 1 and 0.13 . 0 in MetaStoreSchemaInfo to ensure compatibility with different Hive versions
server : fix the issue that expunge method in uservmmanagerimpl do n ' t call advanceexpunge .
added @ Deprecated annotations to AbstractDateAssert . java to indicate that these methods are outdated and should not be used in future development
updated ONDashClockExtension and AlarmReceiver to use a new method for retrieving note titles to improve code clarity and maintainability by
updated GoogleAuthUserConfigTable to use " nvarchar / int4 / int " and modified test assertions to use " nvarchar / int
replaced ` commit ( ) ` method calls with ` apply ( ) ` method calls across multiple classes to improve code readability and maintain consistency
added TestIdleListener to the session initialization in AsyncTimeoutTest . java to ensure proper handling of idle state during test execution
add testid to bigqueryioit . testbigquerytable so it be unique
set the background resource for the predicted icon in HotseatPredictionController and reset the icon in BubbleTextView to improve visual consistency
mondrian : fix typo in property name ( getflushafterquery )
[ native ] add unit test for native query runner
refactor feature retrieval logic in LIMEExplanation . java and add null checks in LIMEColumnarTest . java to improve code cl
added a new parameter ` args ` to the ` AppleSimulatorController ` and ` InstallCommand ` classes for command - line arguments to
fix npe in lineselection . getabsoluteposition ( ) on non - styled line
added a check for the lifecycle state availability in ContainerBase and StandardContext classes to ensure that only Lifecycle instances are processed if the state is available
added a line to outline the background view in QsbWidgetHostView to improve visibility of the background for better user experience
added flag processing and logging in SQLManager and updated block type list flag parsing in BlockTypeListFlag and BlockTypeListFlag to improve flag
updated FloatingTextRenderer to conditionally enable or disable depth based on whether the floating text is occluded to improve rendering control based on
rename target _ com _ oracle _ truffle _ nfi _ backend _ libffi _ libfificontainerlinux to target
added getter and setter for propagationBehavior in JdbcAggregationRepository to allow customization of the propagation behavior for transaction templates
added support for L1Regularization and L2Regularization in the configureBaseLayer method to enhance layer validation logic to support additional regularization
added error handling for read and write operations in AbstractChecker . java to improve robustness by logging exceptions during read operations
changed the visibility of the colorStack variable from static to instance variable and updated its assignment to enhance encapsulation and improve code readability
updated method calls from ` getMappedStatement ` and ` hasStatement ` to include a new parameter ` true ` to ensure that mapped statements are
convert tradableIdentifier and currency to lowercase in BTCEPollingMarketDataService to ensure consistency in currency handling across the service
updated channel state assertions in ChannelStateTests . java to reflect new expected values to ensure accurate validation of channel state values in tests
remove ` versionedhashes ` field from enginepayloadparameter ( # 11943 )
reset the ` ` trigger price ' ' field when the ` ` price ' ' field be change
modify studentfeedbacksubmissioneditsaveaction to redirect to student home page if there be an error
removed debug print statements from I18NPageController . java to clean up the code and improve readability
added a condition to check if the result is true before logging debug information to ensure that debug logging only occurs when the result is true
fix for beanstate . setmanyproperty ( ) for new and dirty bean
added a boolean property ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` to control whether to always
added methods to set layer type and paint in ShadowRenderNode to enable customizable layer settings for rendering nodes
replaced specific AWT and Accessibility imports with wildcard imports and added a method to hide the popup menu in LWChoicePeer to improve
updated the initialization of the ` insert ` variable in ` StressProfile . java ` to ensure consistent handling of null values to improve code cl
replaced ` scala . collection . JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable ` in multiple
add more logging for httpforwardobjectcallbackactionhandler and mockserverserverhandler
[ hotfix ] [ runtime ] log warn if property file can not be load
refactor code to use try - with - resources for SessionDataSet to ensure proper resource management and avoid potential memory leaks
added a condition to check if the network supports multicast and the network is up before proceeding to ensure that multicast operations are only performed when the
updated the constructor of sqlCommand to include a length parameter to ensure the command string is initialized with the correct length before use it
updated methods in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to set latestConsumeTime and setLatestConsumeTime
added a method to set the InvalidSessionStrategy in SessionManagementConfigurer to improve flexibility by allowing customization of the invalid session strategy
improve error message when a token can not be find for a given index
add a new test class ` MapAssert _ containsKeys _ Test ` for verifying keys in map assertions to ensure that the ` containsKeys
updated JdbcProxyGenerator to use DelegatorGenerator and added JDBC4TemporaryPreparedStatementMethods interface to enhance proxy generation capabilities for JDBC4 prepared statements
added a method to ensure a WebSocket container is created if it does not already exist to improve resource management and ensure proper handling of WebSocket connections
changed the return type of ` toLanguageFlags ` and ` getLanguageFlags ` from ` ImmutableMultimap ` to ` ImmutableListMultimap ` to enhance the
pdfbox - 4892 : avoid npe , a suggest by valerybokov
replaced the use of an empty array with a static final EMPTY constant in MethodHook . java to improve code readability and maintainability by
added a boolean parameter ` grantAccess ` to the ` MockAuthenticationManager ` class and modified the authentication return logic to allow users to deny access
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to enhance the functionality of the ` afterJob ` method
added a condition to check if the file can execute before writing to ensure that the file is only writable when the file can be executed
chore ( bazel ) : update protoc to v3.15 . 3 ( # 119 )
add javadoc to saveservice and fix a typo
added constants for battery , annotation , time , distance , starttimestamp , and profilename in BundleConstants . java and updated CustomUrlManager
make searchexpression # applyrule use map instead of hashtable
ggb - 1348 move object to absolutescreenlocateable , not geowidget
updated JoglGraphics and ProjectiveTextureTest to improve texture handling and filter settings to enhance compatibility with different texture formats and ensure correct rendering
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void to allow the method to return a reference to the
camel - 13663 : fix property component to work with property placeholder . thanks to daniel for the patch .
updated the condition from ` > ` to ` > = ` in ` ActionScheduler . java ` and modified the expected attempt count in ` Test
updated dbg _ zip assignment to use a temporary directory if debug _ log is not null to ensure correct file path is used for debugging purposes
added hud _ hidden event to the renderingdebugconfig ( fixes # 269 )
pipe : add resetgate ( ) method to allow pipe to reset gate
added locale handling to TestSupplementary . java to ensure consistent locale management during test execution
updated the randomness of the team color from 0.8 f to 0.4 f in the Team constructor to enhance the team ' s
replaced Set with ArrayList for activeMatchedStates and updated logging statements for consistency to improve performance and reduce memory usage during state removal
updated the condition to check for null or empty annotations in SoftAsserts . java to improve clarity and correctness of annotation validation logic
updated error handling in StorageResources . java and added logging for exceptions in StoragePluginRegistryImpl . java to improve clarity of error messages and
use tocsvfile ( ) instead of reportutils . report ( ) for call tree output
added null checks and improved note handling in DetailFragment . java to enhance code robustness and prevent potential NullPointerExceptions
updated task tracking logic in AssetManager to correctly track and return the number of loaded tasks to improve accuracy in loading calculations based on the number of
simonstewart : enable native event by default on window
added metadata handling for Nutch score and fetch interval in Injector . java to improve flexibility in configuring score and fetch interval in the
updated import statements to use org . apache . commons . collections4 instead of org . apache . commons . collections to ensure compatibility with the latest
added a method to check if zkController is null and implemented a null check for shareSchema in CoreContainer . java , along with a test
updated sizeInBytes method calls to include ' true ' parameter across multiple classes to ensure accurate size calculations and improve logging clarity
replace assertions for version1 _ 2 with a null assertion to ensure that the version1 _ 2 object is not null to improve clarity and
updated SQL query in Field . java and AbstractJdbc2DatabaseMetaData . java to include type not null checks to ensure correct handling of non -
[ java ] : return value of appendnewleadershiptermevent ( ) should be true when appendnewleadershipterm
removed the method ` buildMediaType ` from ` WebClientPlugin . java ` to simplify the code by eliminating unused imports
replaced instances of ` fillUsingLengthPrefix ` and ` fillUsingLengthPrefix2 ` with ` fill ` and ` fillAndGetIndex `
added a new boolean variable ` isCompactedBase ` and updated conditional checks in ` AcidUtils . java ` to improve readability and
updated storage and qualifier encoding scheme handling in PTableImpl . java to ensure default values are set for immutableStorageScheme and qualifierEncodingScheme to
added new files PojoProducersCustomized . java and RestProducersCutomized . java while modifying existing classes PojoProducers
replaced hardcoded string " cache " with a constant CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to improve maintainability
removed duplicate registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to improve code clarity
fix oredictionary not replace wooden slab with slabwood
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of session management functionality
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
prepare next release 3.2 : release 3.2 - snapshot
hhh - 14825 fix test failure on postgresql
corrected the calculation for the sprite batch drawing position in HelloWorld . java to ensure correct rendering of the texture in the sprite batch
updated permission check logic in PlayerFunctions . java and improved string representation in PlotId . java and WorldGuardListener . java to enhance permission
added a deprecated static final Version constant for Lucene 8.5 . 0 to indicate that the version is outdated and should not be used in
updated print statement formatting for clarity in SSLSocketImpl . java to improve readability and maintainability of the code
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL parsing and deparsing functions correctly
refactor dependenciesType from String to SemanticGraphCoreAnnotations . DependenciesType to improve code readability and maintainability by using an enum for
refactor ` NoSuchBuildTargetException ` and ` ParseContext ` methods to use ` parseContext . makeTargetDescription ( ) ` directly to improve
updated the test method from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to simplify
updated the array size of ` configBlocks ` from ` blocksList . length ` to ` 256 ` and modified loop iteration from ` blocksList
disable title for spigot and craftbukkit if git - spigot be not support
updated SQL escaping logic for Postgres questionmark operators in AbstractSQLChange to ensure proper handling of PostgreSQL questionmark operators in SQL statements
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl ` to
added checks for file names ending in ' . adoc ' and corrected shortname and permalink in BuildNavAndPDFBody . java to ensure proper
updated mqtt broker connection to use a non - blocking mode ( false by default ) .
refactor ChangeSet retrieval logic to use the root change log if available to improve robustness by ensuring changeLog is not null before accessing its
( chore ) camel - http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id =
added database drop functionality in TestHiveMetaStorePartitionSpecs and improved logging in TestObjectStore to enhance database management and enhance debugging capabilities
added a new parameter " order _ currency " to the BithumbAuthenticated constructor and updated its usage in BithumbAccountServiceRaw to
[ thymeleaf ] remove ssefluxwebconfig since it ' s no longer use
updated method checks to use ` getReturns ( ) . isVoid ( ) ` instead of ` getReturnType ( ) . getFullyQualifiedName ( )
replaced ` YAML _ READER ` with ` YAML ` and added a ` listYamls ` endpoint to retrieve YAML configurations to improve
removed public access modifier from equals and hashCode methods in Marker class to enforce encapsulation and improve method accessibility
refactor thread factory to use lambda expression and add awaittermination method for asynchronous channel group termination to improve code readability and maintainability by
added unit tests for adding a list to MongoTemplate and created a new PersonWithAList class to enhance test coverage and ensure correct functionality of
ggb - 1343 sync applet panel size with diff width and height , not just width
replaced direct toolbar visibility setting with a delayed execution using a Handler to ensure toolbar is visible after a delay to improve responsiveness and prevent
[ iotdb - 4892 ] fix overlapped page not work ( # 4893 )
server : do n ' t update vm password when we fail to save the password .
initialize usingOutputStream , usingWriter , and isCharacterEncodingSet to false in Response . java to ensure proper resource management and prevent potential memory leak
added a warning check for assignment side effects in GroupDialog to improve user experience by preventing unintended side effects during group assignment
refactor JSON handling in JSONConvertor . java to improve code readability and maintainability
updated icon size condition in FileUploadApiController . java to use maxWidthWithMargin instead of maxHeightWithMargin to ensure proper alignment of icons based
refactor public key fetching to use JcaPEMWriter and update related tests to improve serialization of public keys and ensure functionality without service argument
added functionality to check and print content types based on the operating system to ensure correct mime type handling across different operating systems
enable jzlib compression in the nettyconnection .
added a method ` doesClassLoaderDescendFrom ` to ` Util ` and removed its implementation from ` MethodHandles ` to streamline class loader traversal
removed the ` doConnect ` method from ` ChannelProvider ` and updated its implementation in ` ProxyChannelProvider ` to streamline connection handling by
added a new method to start a field in TextReader and created a test for handling empty final columns in TestCsvHeader to improve CSV processing
added compass gravity and margins to NearbyMapFragment to enhance the visual appearance of the map fragment
added a test method ` testInterpolation ` to the ` GeoPathTest ` class to ensure the interpolation functionality works correctly for various point types in
updated methods in LeafFilterFactory and ParquetFilterPredicateConverter to throw HiveException instead of returning null to improve error handling and provide clearer
added support for setting language for video streams in LibMediaInfoParser to ensure correct language is applied for video streams when no language is specified
added a warning log for compatibility issues when schemas in new version are less than the old version to inform users about compatibility issues during microservice version
replaced manual array copying with a utility method ` addAll ` in multiple array - related classes to improve code readability and maintainability by redu
reformatted try - catch blocks in DataSourceProxy . java for consistency to improve code readability and maintainability
added null and validation checks for client registrations in InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to ensure that registrations are not
added a method ` resetUIState ( ) ` to the ` SchemaUpgradeHelper ` class to reset the current status of the cluster to ensure
added handling for pending exceptions in JUnitReporter and created tests for strict and non - strict behavior to improve error reporting accuracy and ensure correct behavior
add support for ` ` . ' ' in player selector ( # 8238 )
added Closeable interface to the Selector class to ensure proper resource management and prevent potential memory leaks
updated MaxConcurrentStreamsTest to use MultiplexConnectionPool for connection management to improve performance and resource management by utilizing a more efficient connection pool
added multiple calls to stringType ( ) in CoreOptions . java to improve code readability and maintainability
resolve handling of escape clause with like query on eclipselink .
updated status checks and method names in HttpGenerator , HttpChannel , HttpChannelState , and Response classes to use HttpStatus constants instead of hardcoded
pdfbox - 4892 : simplify code , a suggest by valerybokov
fix unit test which fail on slow machine
updated ` ParquetFormatPlugin ` and ` ParquetGroupScan ` classes to improve file selection handling and metadata file existence checks to enhance performance
updated the success flag in Jsr199Javac to use BuckJavacTaskProxy and improved error handling during compilation to
added a TableModelListener to the DefaultSortedTableModel to handle table changes to improve event handling for table changes in the model
updated the range check from 49152 to 65535 in ServerConfig . java to ensure that the number is within the range of [ 0 , 65535
added document provider authority handling in AuthenticatorActivity and AccountRemovalJob for KitKat devices to ensure compatibility with KitKat devices and
removed the call to Log _ OC . startLogging ( getAppContext ( ) ) in MainApp . java to streamline logging process by
updated exception handling in FilterChainProxy to use ThrowableAnalyzer for better clarity to improve error reporting and ensure proper handling of wrapped request rejection
updated the calculation of ` newSize ` and ` arraycopy ` in ` StringBuilder . java ` to use ` this . length ` instead of ` length
fix filter . decode ( ) to throw illegalargumentexception for empty filterlist
add a new file tbstopwatch . java that demonstrates how to start and stop a stopwatch
set the initialized flag of the PListStore class to true to ensure proper initialization of the PListStore instance
added @ Deprecated annotation to multiple continuation - related classes to signal that the use of Servlet 3.0 AsyncContext is outdated and should not be
[ zeppelin - 4892 ] set the context classloader of the current thread in the interpreter server .
fix a bug where commandsourcestack . getentity ( ) return null for player .
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility
corrected the parameter name from ` indexInTickArray ` to ` tickArrayIndex ` in the ` timerIdForSlot ` method to
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 549 : add
updated JavaScript and CSS header URLs from " wro / all . js " and " wro / all . css " to " static /
added a new test method ` showLatestTimeseriesTest ` to ` IoTDBMetadataFetchIT . java ` to verify the functionality of showing
updated references from " appContextLocation " to " contextConfigLocation " in multiple files to ensure consistency and clarity regarding the purpose of the
modified exception handling in OCSPChecker to use instanceof for CertPathValidatorException to improve type safety and clarity of exception management
benchmarker : add option to turn off write output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 4562 )
added a new test class ` Issue _ 815 ` to validate the functionality of ` SortedTableMap ` to ensure that the ` sliceSize `
added shapereless recipe for pipe waterproof and slime ball to the craft .
fix bug in sequentialaccess sparse vector and add unit test
added metadata handling for Shulker entities in BukkitMain and integrated it in EntitySpawnListener to enable shulker spawn functionality
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
updated import statements and added methods to handle maximum directory and file names in IOHelper . java and MultiKahaDBPersistenceAdapter . java
replaced the direct instantiation of UpToTagChangeSetFilter with a new instance and added a check for tag matching to improve code readability and
[ beam - 10660 ] fix some code smell in pcollection and dofn
refactor BrokerRoutingManager to improve code readability to enhance maintainability and facilitate future development
change volume and up paint colors from gray to GRAY and GREEN in CandlestickRenderer . java to improve visual clarity
refactor layout parameter handling in InsettableFrameLayout . java to improve clarity and maintainability of layout parameters to enhance code readability
added a duration field to the BuildTargetDurationListener and updated related test cases to include it to enhance the build target duration functionality and ensure accurate
replaced the @ Profile annotation with an assumeTrue check in multiple database migration test classes to ensure tests only run if the database profile is enabled
added a null check for the user object before processing claims in OAuthConfirmationController . java to avoid potential NullPointerException when user is null
add advicewith to replace route from endpoint . thanks to benjamin for the patch .
use nonblockingset instead of concurrenthashset to improve performance
api : list public ip by source network id , fix listusagerecordrecord api
added support for ignoring battery optimizations in ShadowPowerManager and corresponding test case in ShadowPowerManagerTest to enhance functionality for managing battery
updated the Jetty version retrieval to use the build properties property instead of a hardcoded value to allow dynamic configuration of the Jetty version based
added tests for verifying invocations in order in ` NumberOfInvocationsInOrderVerifierTest ` to ensure correct behavior when verifying invocations with
updated the logic for handling no - match instances in TRegexExecNode . java to improve accuracy in determining equality of regex results
added a " - foreground " parameter to the startProfile method in NewProfileExtensionConnection . java to ensure the profile starts with a foreground color
replaced ` executor ` with ` executorLauncher ` and ` executorCloser ` and updated shutdown methods to use ` IOUtils . closeQuietly ` to improve
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and updated related code
updated file logging to use the file name instead of the file object to improve clarity of log output and ensure proper cleanup of the actions list
updated skippedEntries to include exception messages in ClassFileReader and modified warning message in JdepsTask to improve debugging by providing more context about skipped entries
added LinkStorage to the Fetcher and FetcherMain classes and updated the FetcherTask to utilize it for storing links to improve indexing
added an ` existingBubble ` parameter to the ` populateBubble ` method and updated its usage in the ` BubbleBarController `
[ hotfix ] [ runtime ] throw illegalargumentexception instead of illegalargumentexception when schedule route policy have no start / stop / suspend /
refactor ` buildRpcExt ` and ` buildRpcExtJson ` methods to accept a single ` Method ` parameter instead of an array to
[ java ] add nak delay generator for multicast and unicast conductor .
replaced GsonBuilder with Gson and added additional properties to ClientInformationResponseView to enhance JSON serialization and improve client information handling
added a check to ensure ` openOrder ` is non - negative before setting the average price to avoid potential errors when ` openOrder ` is
removed the rawExecutionReports method from the BinanceStreamingMarketDataService class to simplify the code by directly subscribing to the execution report
added a fail method to handle exceptions and modified the timeout check logic to improve error handling and provide clearer output during test failures
improve error message if user dictionary file do n ' t exist
updated password handling logic in AmbariServerConfigurationHandler . java and adjusted test expectations in RootServiceComponentConfigurationResourceProviderTest . java to
added a check to skip parsing of a segment if it already exists in ParseSegment . java to optimize performance by avoiding unnecessary parsing of segments
[ hotfix ] [ yarn ] make application _ attempt _ failures _ validity _ interval configurable
do n ' t unload the h2 driver if it ' s not include
hbase - 25836 update scan . readtype for snapshot - based inputformat if default readtype be provide
added fixedHeight and fixedWidth properties with their respective getters and setters in LoginInstanceRequest . java to enable dynamic configuration of instance login dimensions
added a cornerRadius parameter to the update method across multiple classes to allow dynamic adjustment of corner radius during animations
updated COMMANDS _ TO _ REMOVE array and modified filter settings in QFile . java to enhance functionality and improve filtering capabilities for cross -
added a retry mechanism for connection pool retries in TxnHandler . java to work around BONECP bug to improve stability and reliability of
renamed ` txnEnsureReserve ` to ` txnCheckReserve ` and introduced a new method ` txnEnsureBackupReserve ` to
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to store strings for better data management
updated SQL statements in CostBasedDecisionIT and DeleteCompiler to use " DELETE CLIENT SELECT " instead of " DELETE ROWS " and added a
added handling for SocketException in BaseServiceException to determine if the exception is retryable to improve robustness by distinguishing between SocketTimeoutException and
added support for multiple rapid install types in AdbHelper , AndroidDevicesHelperFactory , and RealAndroidDevice classes to enhance flexibility in
updated the SeedPattern regex to allow negative values to enhance flexibility in seed matching
refactor ` MultimapSubject ` to use a factory for creating ` IterableValuesForKey ` and ` IterableEntries ` to improve code clarity
simplified the return statement by removing conditional check for device orientation to simplify code logic for better readability and maintainability
added support for the transmux feature in the Transformer and TransformerInternal classes to enhance audio transcoding behavior based on media item size
added localization functionality for string arrays and values in Picker . java to ensure consistent localization of strings for better user experience
camel - 14284 : camel - cxfrs should not fail if the exception be null .
hhh - 14850 - fix postgresql dialect to throw lockacquisitionexception and pessimisticlockexception
added null check for queryId and updated import statements in TestJdbcDriver2 . java , and modified visibility annotations in HiveStatement . java to
[ beam - 1569 ] add usesunboundedpcollections category to pardotest . testvalidatesrunner ( )
removed the " < em > " tag from the formatted filename text in GpsSimpleViewFragment . java to simplify the formatting of the filename
[ java ] remove leadershiptermid from joinlogasfollower method .
replaced direct access to ` getHttpExchange ( ) ` with a local variable ` exchange ` in ` HttpSender . java ` to improve code
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and its tests
added null check for ` tree ` before filtering and hashing markers in ` Recipe ` , ` Markers ` , and ` SearchResult ` classes
pdfbox - 4892 : change return type of getfontsizeasfloat ( ) and getfontsizeasdouble ( ) to double
do n ' t wrap email in array in addressbookdocoMoresultparser . parseemail ( )
refactor exclusions handling in RawMavenResolver to use a set instead of a stream to improve code readability and maintainability by reducing
added null checks and updated currency pair handling in DSXAdapters , DSXPairInfo , and DSXBaseService to improve robustness and
refactor test classes for improved readability to enhance maintainability and facilitate future development
[ drools - 90 ] fix incremental compilation when the pom be invalid
updated the initialization of ` copy ` to use ` finale - k ` and added a check for ` sobj . has ( k )
rename JacksonDataFormat and JacksonXMLDataFormat classes to improve clarity and consistency in naming conventions
use unreflectgetter and unreflectsetter instead of findstaticgetter and findsetter in hostfielddesc .
added a method parameter annotation for the CompletionStage in DefaultNullnessAnnotations to enable proper handling of completion stages in the database
updated the calculation of ` mFreezeCheckPoint ` in ` PlaybackController . java ` to decrement the duration from 9000 to 10000
replaced the implementation of ` run ` method in ` PowerMockRunner ` with a call to ` setInternalState ` using ` Whitebox
replace ` typeCode ` with ` realType ( ) ` in ` unmarshalIn ` method call to ensure correct type handling during unmarshalling
refactor indentation logic for method invocation elements in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
replaced LuceneTestCase with JUnit TestCase in TestSingleTokenTokenFilter to ensure compatibility with JUnit ' s testing framework
replaced ` write ( newColumn ) ` with ` write ( " < td > < td class = ' wrappedText ' > " )
refactor ` JdbcStepExecutionDao ` , ` MapStepExecutionDao ` , and ` SimpleJobRepository ` to improve execution context handling and
added a conditional check for hiding the new media folder before adding it to the root folder to ensure that the folder is only added when the
replace UnsupportedOperationException with IllegalArgumentException for actor handling in SplitPane . java to improve error handling and ensure proper actor removal
added handling for JavaType . Parameterized and its type parameters in RemoveUnusedImports . java to improve type management for parameterized types in the code
updated debug logging to use ` this . getVersion ( modInfoList . get ( 0 ) ) ` instead of ` modInfoList . get ( 0
changed the logger variable from private final to private static final in TicketGrantingTicketImpl . java to ensure the logger is accessible from the class
updated SQL string in PhysicalPlanTest . java to include a specific timestamp to ensure accurate timeseries creation for testing purposes
added a method ` isValue ( String value ) ` to ` AttrData ` and updated ` Converter ` to check for the presence of a value
added support for US International PC locale and character modifier keys in CPlatformResponder . java and implemented utility methods in LWCToolkit
[ java ] set aeron _ publication _ connection _ timeout for c medium driver test .
added a check to return false for specific request URIs in GTVGFilter . java to prevent processing requests that start with specific URIs
added an assertion to verify the installation failure of the APK in TestUtil . java to ensure that the device is rooted correctly when the
# 1188 - oracle : disable testqueryforpagedone ( ) and testqueryforupdate ( ) for oracle
added MultiMap mock and updated expected length of secure transport protocols in TestSimpleBodyHandler and TestVertxTLSBuilder to enhance test coverage and ensure
updated JavaLib1 . java path from e3506ff7c11f638458d08120d54f186
added a flag to manage the dismiss haptic running state in TaskViewTouchController to improve user experience by preventing unnecessary dismissal during
fix explosioneventworldexplosion not report the source of the explosion
added ` setHasStableIds ( true ) ` and modified ` getItemId ` method in ` SymbolInputAdapter ` to ensure stable IDs are
updated the Bitfinex API path to use QueryParam instead of PathParam for limit _ bids and limit _ asks to improve query parameter flexibility and
added a check to replace single quotes with double quotes in the result string to ensure proper handling of special characters in input strings
[ hotfix ] [ runtime ] add tostring ( ) method to kubernetesleaderelectiondriver and test
refactor SqlSessionFactoryBean for improved clarity to enhance maintainability and readability of the code
[ hotfix ] fix nullpointerexception in tripleinvoker
replaced ` Gdx . app . error ` with ` GdxRuntimeException ` for error handling in ` PolygonRegionLoader . java ` to
added a method to check if the current deadline is in the Deadline class and implemented timer registration logic in RawStoreProxy to improve error handling
improve error message for closedchannelexception in nettyrequestexecutor
added null check for genres before setting text in ItemListActivity to avoid potential NullPointerException when genres is null
[ hotfix ] [ checkpoint ] do not reset master hook in region recovery
added test and fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 5
[ hotfix ] fix npe in walnode # costofactivememtables
added a new test for retrying the same host on callback failures in HttpTest . java to ensure proper handling of callback failures in the HTTP client
improve package - info . java documentation for background package .
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server to ensure correct escaping of question characters in SQL queries
added nullability annotations to constructor parameters in CamelModule to improve code safety and prevent potential NullPointerExceptions
refactor synchronization logic in JavaFXSEPort . java to use Util . wait for thread safety to improve code readability and maintainability by
moved ParameterFlags class from com . kenai . jaffl to com . kenai . jaffl . provider
refactor cropBehaviour creation and handling in CropperUtils . java to improve type safety and clarity to enhance code maintainability and
removed the ` appName ` parameter from multiple method signatures in ` InputRC ` and ` LineReader ` to simplify the code by eliminating
[ gr - 19363 ] add test for ignore deps in install and uninstall
replaced options . setHeadless ( true ) with options . addArguments ( " -- headless = chrome " ) in multiple test files
updated value assignment to use intern ( ) method to improve memory efficiency by reducing unnecessary object allocation
added " MOVE " status to the receive status check in the connection processing logic to support the " MOVE " status in addition to existing
updated date format constants in FixedDateFormat . java for consistency to improve code readability and maintainability
updated import statements to replace org . apache . curator . shaded . com . google . common . collect . Lists with com . google
[ hotfix ] [ runtime ] fix race condition in hsbuffercontext # startspilling
updated permission checks in Visit . java to include untrusted visit flag to enhance user experience by allowing untrusted visit actions based on plot flags
do n ' t try to register a jabber protocol if it be already register .
updated character validation logic in BasicURLNormalizer and added a new test for curly braces in TestBasicURLNormalizer to improve robustness of URL normalization
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added a check to compare the clock rate in the EncodingConfiguration class to ensure proper handling of clock rate comparisons
added a method ` getProjectPath ( ) ` to ` ProjectGenerator ` and modified ` generateProjects ( ) ` to return an ` ImmutableSet <
refactor calendar ID retrieval logic in HostLocaleProviderAdapterImpl . java to improve code clarity and ensure valid calendar ID is used
added a new file ` MSwingUtilities . java ` with utility methods for handling image scaling and exception handling to facilitate easier
camel - 15836 : camel - mail - enable async processing by default . thanks to andreas for the patch .
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration to ensure consistent refresh behavior across configurations
added unit test base on exception handle
added Main and ScriptRenderer classes for scripting functionality to facilitate the rendering of JavaScript scripts in the application
added a condition to check if the input state is not __ NONE in the content type check and implemented a new test for query handling after reading
added checks for glyph width and height before calculating descent in BitmapFont and introduced isDescendant method in Group class to improve touch focus handling and
replaced ` reportFailure ` with ` runCloseHooks ` for handling close hooks in ` DeploymentManager . java ` and added a new test
fix the lexicon recipe mapping not display the wild value in the name .
updated sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve test stability after intervention
updated import statements in LoincHandler . java to use wildcard imports and modified conditional check for non - blank short names to improve code read
use getresource ( ) instead of url for jolly day holiday . xml
added a new file ` FieldUtils . java ` with utility methods for accessing and setting fields in a class to facilitate easier access
removed unnecessary speculative type assertion in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to simplify
updated the layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added default padding for widgets to improve layout
added a method to update account settings with error handling to ensure that invalid token errors occur during account loading from the network
added a new method ` setvar ` to the ` Commands ` class for setting variable values to provide functionality for setting variables with command - line
fire animaltameevent for the catentity , not just the player ' s tame .
fix ( core ) : fix nullpointerexception in windowframe
pdfbox - 4892 : check font name , a suggest by valerybokov
added a call to set the application ' s mode using the current application ' s mode to ensure the application reflects the current application ' s
added support for specifying Docker file path and build arguments in ImageFromDockerfile . java and created corresponding tests in DockerfileBuildTest . java
added a null check before creating and setting thread information in ThreadInfos . java to avoid unnecessary object creation and improve performance by avoiding unnecessary object
updated the angle comparison in PieChartRenderer from a fixed value to a constant value to improve code readability and maintainability by using a
[ hotfix ] [ runtime ] add more log for singleinputgate and singlecheckpointbarrierhandler
added new table constants to the Schema class to support additional table types in the application
added a minimumSimilarity parameter to FuzzyQuery and FuzzyTermEnum constructors to allow dynamic adjustment of similarity based on a specified minimum similarity
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
improve logging of outputstreamappender . setparent ( outputstreamappender < ? > parent ) in layoutwrappingencoder .
added RabbitAutoConfiguration and KafkaAutoConfiguration to the AutoConfigureAfter annotation to ensure proper configuration setup for Rabbit and Kafka functionalities
added null check for component before removing it in JLayer . java and created a new test class bug6875716 . java to ensure
updated import statements to use ` com . google . common . base ` instead of ` avro . shaded . com ` in multiple Java files
add return and unwind block to the blockmap , instead of process them all at once .
added getter and setter methods for legacy renderer in Label . java to enhance flexibility in rendering options
replaced the ` intToFourBytes ` method with ` Ints . toByteArray ` for counter and counter in the ` AbstractJwe
added a null check for mObserver in the NavigationModeFeatureFlag class to prevent potential NullPointerException when mObserver is null
modified the return type of the ` thenComparing ` method in ` Comparator . java ` and added a new ` Department ` class with
refactor DocIdSet class to improve code readability to enhance maintainability and facilitate future development
updated the end time parameter in UserRuleAnomalyFunction from null to currentKey bucketMillis to ensure the end time is correctly set based on the
added a try - catch block to handle NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is not thrown when parsing values
added a classloader to the MockFactory enhancer configuration in MockFactory . java to ensure proper class loading for mocking functionality
added originalformat to allow converterwithenumformat to parse enum value
replaced hardcoded string " yyyy / MM / " with a constant PATTERN _ YYYY _ MM in FileStorageUtils . java to improve maintain
refactor JAWTRenderer class to improve code readability to enhance maintainability and reduce complexity
camel - 14284 - camel - aws2 - lambda : enable autowire on the client , fixed test
validate or replace mac address in configurevalidateorreplacemacaddress ( ) method of uservmmanagerimpl to ensure that only valid mac address be
removed authorization header check from ProxyServlet . java to simplify the code by eliminating unnecessary checks
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService ` to ensure proper execution context handling during context creation
added a ` getDetails ( ) ` method to multiple authentication classes and initialized the ` details ` variable in the ` getDetails ( ) `
updated the random boolean value assignment from ` nextBoolean ( ) ` to ` nextInt ( 5 ) ` for ` randUsePoints ` to improve
simplify the method name ` appenddot ( ) ` to ` endSentence ( ) ` to improve code readability
updated TimeFormat . formatForConsole to include Locale parameter across multiple files to ensure consistent output formatting across different locales
refactor ` GroovyParserVisitor ` and ` GroovyPrinter ` to use wildcard imports and modify ` unparsedArgs ` handling to improve code readability
added boundary checks for border inset dimensions in the Border class to ensure proper rendering of borders by adjusting their dimensions based on their dimensions
replaced direct instantiation of ` GestureState ` with a new method ` createGestureState ( ) ` to improve code readability and
replaced Joda - Time ' s DateTime with Java ' s Instant and DateTimeFormatter for date formatting to improve code readability and maintainability by
updated openblas and openblas _ nolapack Java files to improve code organization and maintainability
replace ioutils . closeQuietly with java . io . io . io . close in torrentsstorage . java
added synchronized keyword to initTxnMgr method in SessionState . java to ensure thread safety during transaction management
increased timeout duration from 120 seconds to 480 seconds in ` AbstractDistribZkTestBase ` and ` AbstractFullDistrib
added a new class ` SearchResults ` to manage search results to enhance the search functionality by providing a structured way to store and retrieve search results
do n ' t create threadcpusrefresher if there be no threadcpus
initialize the primitive array if it ' s null to avoid potential null pointer exceptions when accessing the primitive slot
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwards
updated the feature flag for two - line all apps from DISABLED to TEAMFOOD and modified the method to check for text containment
added a method to retrieve tenant pools for the current instance in InstanceResource . java to provide access to tenant pools for the current instance
updated the ` canEarlyTerminateOnDocId ` and ` canEarlyTerminateOnPrefix ` methods in ` TopFieldCollector ` to
added a check for ` isToString ( ) ` in ` InlineBytecodeGenerator . java ` and updated imports in ` InlineByteBuddy
added logging statements for compiling and preprocessing in CxxCompileStep and CxxPreprocessStep classes to improve error handling and debugging capabilities
add stringutil . removecharacter ( string , char ) method to remove character from a string
[ 3.0 ] fix metadata service protocol not support ( # 3560 )
( chore ) camel - kie - api : add datatransformator interface
changed the type of ` values ` from ` Collection < ? > ` to ` Collection < Number [ ] [ ] > ` and corrected the
removed unnecessary conditional check for ` interesting ` in ` FormatStringChecker . java ` to simplify the conditional logic for better readability and maintainability
set core to null in ElectionContext . java to ensure proper initialization of SolrCore
refactor ITestDbTxnManager for improved clarity to enhance maintainability and readability of the code
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added a new method ` remoteCodeFirstPojo _ testMapModel ` to ` CodeFirstPojoClient ` and overridden it in `
pdfbox - 4892 : optimize code , a suggest by valerybokov
refactor item listener logic in ScaleDialog . java for improved clarity and functionality to enhance code readability and maintainability by reducing
do n ' t update step status if it ' s null on forge
pdfbox - 4892 : do n ' t throw an exception if there be no appearance stream
replaced SortedSet with LinkedHashSet for storing keys to maintain insertion order
updated TIME _ BETWEEN _ TOUCH _ AND _ DRAG value from 1500 to 1000 in CancelEventTimer . java and added overridden
updated preload version from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java to
added conditional check for agentSupport before setting all constructors to public in MainMockTransformer . java and created new test classes for mocking static methods
pdfbox - 4892 : optimize code , a suggest by valerybokov
added support for xtoolkit to set the default window title
updated depth calculation based on pixel size in XRSurfaceData . java to ensure correct transparency handling based on pixel size
added error response body handling in OkHttpDataSource to improve error reporting for unsuccessful responses
added a static method ` exit ` in ` TopLogging ` and modified ` TopThreadGroup ` to use this method to improve error handling by
modified the logic for determining the start index in the NativeRegExp class to ensure proper handling of non - global regex patterns
planner - 468 ignore test when upgrade to optaplanner 6.3 . 1 +
corrected the variable name from lowIndex to highIndex in DefaultAllocator . java to ensure correct allocation retrieval from the correct index
added a method to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to facilitate the deletion of entries without feeds
changed the return type of the appendToLabel method from void to AtomicCounter to allow the method to return the current instance for method chaining
[ java ] make lowlatencymediadriver a no - op idle strategy .
added handling for ` HttpStatus . NOT _ MODIFIED ` in ` CacheControlHeadersWriter ` and ` CacheControlServerHttpHeadersWriter ` to
replace SpliceInstrumentListener with ToolEvalNodeFactory and update related method names to improve clarity and consistency in the InstrumentationPartialEvaluationTest
updated the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to correctly calculate the dimensions of the tab area based on
refactor Kraken market data retrieval methods to accept variable arguments instead of specific types to enhance flexibility and improve error handling for input validation
camel - 14284 : camel - file - endpoint should use java . io . file instead of java . io . file .
added JSON identity annotation to JavaProvenance and refactored the build method in MavenProjectParser to enhance JSON serialization capabilities and improve code cl
added trace logging for registered Hive UDFs and non - deterministic UDFs in HiveFunctionRegistry . java and updated the condition in TestInbuilt
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage for cloud state updates
skip hint for deleted columnfamilies when deserializing row mutation
added a check for writable output files and improved error handling in NativeErrors . java to ensure tests are skipped when the output file is still
added package info retrieval and logging in LauncherModel . java to ensure proper handling of package availability and improve error logging
cloudstack - 410 to 420 : database upgrade check should catch cloudruntimeexception , not just cloudruntimeexception
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet to improve skip policy validation to ensure non - skippable exceptions
replaced ` startsWith ( completed ) ` with ` regionMatches ( ) ` in ` LineReaderImpl . java ` to improve readability and
added imports for SourcesFileErrors , SourcesFileResults , and GlobalDataTables , and modified data table handling in Recipe . java to enhance
added import for Overview and implemented task dismissal logic in TaplTestsTaskbar to ensure that all tasks are dismissed when
add dbupgradesystemvmtemplate interface for update system vm template
refactor connection handling in LdapClient to remove redundant null checks to simplify code and improve readability by eliminating unnecessary null checks
refactor index handling in SequenceAction . java to use a temporary variable to improve code readability and maintainability
add support for set _ keyspace ( keyspace ) in cassandraserver
added a check to skip synthetic fields in ReflectUtils . java to avoid processing synthetic fields that are not synthetic
added a LoggerProvider class and integrated it into ApplicationController and Configuration to facilitate logging functionality within the application
updated the type of the ImmutableMap builder and related values from String to Object in ServerStatusCommand . java to improve type safety and clarity in
added a deprecation warning message for deprecated glue classes in SpringFactory to inform users that multiple glue classes are configured with the same configuration
added a method ` deepStart ` to ` Startables ` for streaming startables to enhance functionality for handling nested startables
removed the deprecated method ` reservePrimitiveExtensionArray ( ) ` from ` Shape ` and its implementation in ` ShapeImpl ` to indicate that the
laser table now implement ilasertargetblock instead of just ilasertarget
simplified the condition for object name validation in AbstractJdbcDatabase . java to improve code readability and maintainability by reducing complexity
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
set the expiration messages period of policyEntry to zero in MemoryLimitTest . java to ensure that the test accurately reflects the intended behavior
removed null checks for ' p ' and ' handlerName ' in RequestHandlers . java to simplify code and improve readability by eliminating
replace ' - ' with ' . ' in the servlet name return value to ensure proper logging format for servlet names
updated the handling of Python environment variables in ProjectBuildFileParser to exclude the PYTHONPATH environment variable to ensure that only relevant environment variables are
refactor audio frame size calculations and error handling in DirectAudioDevice and Toolkit classes to improve code clarity and ensure proper handling of audio
added null check for enums before returning an Optional to prevent potential NullPointerException when enums are null
updated the error message format in CommitLogReader to include the segment number to improve clarity of error reporting for better debugging
added a assignment to the policy in the WebSocketSession class to ensure the session uses the correct policy from the container scope
simplified the condition for initializing static fields in the Java to TypeScript translation to improve code readability and maintainability by eliminating
updated the webroot variable from UI _ DIR to webroot in UserService . java to allow dynamic configuration of the web root for the server
updated JUnit imports and annotations from ` org . junit ` to ` org . junit . jupiter . api ` across multiple
use monitoredvmutil . isattachable ( vm ) instead of reflection to determine if the vm be attachable
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter classes to improve clarity and consistency in header creation logic
replaced individual imports for trade DTOs with a wildcard import and added a method for placing stop orders to streamline import statements and
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure the buffer is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when setting foreground and background
updated the condition in FloatingDecimal . java from ` < = - 3 | | decExp > = 8 ` to ` < - 3
updated the condition in ` PropertyDescriptor . java ` and added a new test class ` Test7189112 . java ` to ensure correct property
removed the maxVersion parameter from the getVersions method in RealTimeGetComponent . java to simplify the version retrieval process by eliminating unnecessary
added a check to set the origin header if it does not already exist to ensure that the origin header is only set when not already present
updated task overlay visibility and animation logic in RecentsView and TaskView classes to improve user experience by providing smoother transitions based on
updated error messages and method signatures in ORCRecordReader . java to include the field context to improve clarity and context of field validation errors
added new HLS sample files for Tears of Steel and Bipbop 4x3 in DemoUtil . java to
removed HIBERNATE52 _ ENTITY _ MANAGER _ INTERFACE and HIBERNATE43 _ ENTITY _ MANAGER _
updated logging references in ExecRPCInvoker and WritableRpcEngine to use the correct package for logging to ensure compatibility with the latest logging framework and improve
added diagnostic logging and a listener for handling warnings in TestSpecificCompiler . java to improve error reporting and reporting of compiler warnings during code compilation
modified the session handling logic in WebSocketEndpoint and added a new test for session closure in WebSocketIT to ensure proper session management and validate session closure
replaced the ` onDaoStateBlockChainChanged ` method with ` onChangeAfterBatchProcessing ` and updated delays in multiple service classes to
replace OpenSymphony mappings with Apache Struts mappings in XmlConfigurationProvider . java to ensure compatibility with the latest version of the Apache Struts
added conditional logic to stop video tracks based on the stream ' s stop state to ensure that video tracks are only stopped when the stream is stopped
changed the data type of chartData from List to ArrayList in BittrexChartDataResponse and introduced a new BittrexChartDataPeriod
[ geot - 6668 ] fix gml example to use simplefeaturebuilder instead of simplefeaturebuilder
replaced substream method with skip method in TargetType58 . java to improve code readability and maintainability
added a method to retrieve the IdentifierGenerator in SimpleValue and updated constructor parameters in AbstractEntityTuplizer to enhance identifier handling and improve
rename ` ` look up ' ' full text to ` ` download ' '
refactor URI registration logic to include host and port information to improve clarity and functionality of the registration process
refactor WebSocket mapping and upgrade filter classes to improve code organization and maintainability
added a check for non - blank OSDB hash and changed ArrayList declarations to ArrayList < String > to improve robustness by avoiding potential NullPointerException
added token transfer functionality in RuntimeImpl and implemented validation in MUtil to enhance contract processing and ensure proper token validation
camel - 14284 : camel - ftp should use stepwise mode when delete file
updated search bind password from searchBindDN to searchBindPassword in JacksonLDAPConfiguration . java to ensure the correct password is used for LDAP
updated join logic in MapJoinOperator and added BloomFilter functionality in HybridHashTableContainer to ensure proper handling of join results and improve
updated HTTPSPDYAsyncConnectionFactory to accept an AsyncEndPoint parameter and added getter methods for local , remote , local host , port , and
added intent extra " id " in multiple Java classes to pass tweet identifiers to enable consistent handling of tweet data across different components
added proxy authorization handling and refactored disconnect methods in HttpURLConnection to improve security and clarity in disconnecting web connections
replaced ` int _ numChildren ` with ` AtomicInteger _ numChildren ` and updated its usage in ` TraceContext ` and ` TraceContext
removed redundant JWT definitions from multiple Java files to streamline code for better readability and maintainability
added an enabled attribute to the test annotation in ValueTypeTests . java to disable the test until it is implemented
( chore ) camel - kie - api : migrate resourcefactoryserviceimpl to kieresources
replace ` IN ` with ` NOT _ IN ` in multiple predicate classes to ensure proper filtering behavior for non - null values
updated exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to use a more general Exception instead of specific exceptions to improve error handling
added null check for witnessService before calling validateWitnessPermission to prevent potential NullPointerException when witnessService is not initialized
updated the way the tagged column string is constructed by using getExprString ( ) instead of directly accessing the column object to improve clarity and
added a check to ensure the JDoc is only set if it is not present before setting it to ensure that the JavaDoc is only set
rename ` holderMethod ` to ` holderMetadata ` and update related methods in ` CompiledICHolder . java ` to improve clarity and
replaced multiple instances of ` revalidate ( ) ` with ` revalidateWithAnimationSafety ( ) ` in ` Tabs . java
[ hotfix ] [ schema ] remove unsupportedoperationexception in bulkformat
updated the calculation of the y - coordinate in the Polygon class to use a new variable oldX to improve code readability and maintainability by
updated cache creation to cast null to Configuration < Object , Object > to ensure type safety during cache creation
fix for bug 2974855 : string . getstring ( ) can return null or empty string
refactor ShadowCookieManager to improve code readability to enhance maintainability and facilitate future development
added a configuration option to check storage - based authorization before dropping external tables to ensure proper permissions are enforced before dropping external tables
added a closing brace to the conditional statement in Stage . java and adjusted the position calculation in ProgressBar . java to improve code readability and ensure
cache byte array support in llvmlanguage . getbytearraysupport ( ) to improve performance .
updated the property name from " testcontainers . namedpipesocketprovider . timeout " to " testcontainers . windowsprovider . timeout " to
updated initWebViewLogin method to accept a baseURL parameter and adjusted web view login URL handling to enhance flexibility in web view login by allowing
corrected a typo in the error message from " Paramter " to " Parameter " in CallableStatementHandler . java to ensure clarity
camel - 14284 : camel - auditevents should not require a date after a date parameter .
rename ` ExponentialTimer ` to ` PreciseThroughputTimer ` and update related references to improve clarity and consistency in naming conventions
remove the soft body from the physics world when the test be fail
changed interface declarations from package - private to public in SinkFunctionProvider , SourceFunctionProvider , OutputFormatProvider , and InputFormatProvider to allow
[ hotfix ] [ zeppelin - 4071 ] fix error message in zeppelinhub
add unit test to verify that jingle do n ' t contain redundant namespace
add a null check for redplasma and make stat crafting work .
[ netty ] add x - http2 header to request header in bare response .
refactor conditional checks for member removal in the plot to improve readability and maintainability of the removal logic
updated delimiter string and adjusted formatting in SimpleReport . java to improve readability and correctness of output formatting
removed the option ` - XDignore . symbol . file ` from ` JavapTask ` and added a new class ` T68
rename ` TickerDemo ` class to ` StreamingTickerDemo ` and update its references to improve clarity and consistency in naming conventions
refactor contract validation logic to include null checks for CreateSmartContract and TriggerContract to improve error handling and provide clearer feedback on contract creation
do n ' t use input3dfactory . createinput3d ( ) in applet mode
added an @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
do n ' t throw parseexception in scripttagpayloadreader . parsepayload ( )
added @ Override annotation to getRepositoryFactoryClassName method to ensure proper method overriding and improve code clarity
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple binary rule classes to
replaced instances of ' this ' with ' IOSGLES20 . x , y , width , height ' in IOSGLES20 .
removed the UploadPathActivity class and updated related imports and imports to streamline the codebase by eliminating unused components
modify return statements in SimpleTextFieldsReader to conditionally return totalTermFreq and sumTotalTermFreq based on indexOptions to ensure correct frequency
fix ( jdttreebuilder ) : add test for implicit constructor
added a Database parameter to multiple methods in ColumnSnapshotGenerator to ensure compatibility with OracleDatabase when populating validation logic
refactor Database class to improve code readability to enhance maintainability and facilitate future development
refactor SpringApplicationBuilder to improve code structure to enhance maintainability and readability of the code
removed indexOptions from DefaultIndexingChain and updated iterator assignment in PointInSetQuery to ensure proper reference to sortedPackedPoints in the iterator
remove unnecessary substring operation in SchematicHandler . java to simplify code and improve readability
added a switch statement in AbstractCollectionAssert to handle specific collection types and updated CollectionAssert _ isUnmodifiable _ Test to include additional test cases to
changed the access modifier of the Option enum from static to instance to allow the Option enum to be modified without needing an instance variable
added a confirmation dialog for characters exceeding the specified character limit in Compose . java and ComposeActivity . java to enhance user experience by
replaced the ` toggleKeepInSync ( ) ` method with direct calls to ` getFileOperationsHelper ( ) ` to streamline file synchronization
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) . decode ` in ` ImageUtil
added two new files , ControllerCounter . java and DBCallback . java , for MongoDB - related functionalities to provide a structured way to handle
added ' final ' keyword to the ticketId parameter in the deleteTicket method to enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to implement flyway migration functionality in the application
replaced ` isEmpty ( ) ` checks with ` size = = 0 ` in ` HashMap ` and added a new class ` NotEmptyHashMap
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest release
updated the ` modify ` method to accept nullable ` EnumSet < Modifier > ` and added a warning log for missing orc compression modifiers to enhance
added error handling for missing main manifest attributes in LauncherHelper and created a new test method for handling missing main manifest attributes to improve robustness
updated class names from " Test " to " Test " for consistency to improve clarity and maintain consistency in naming conventions
[ gr - 33939 ] hotspotprofilinginfo . supportedcompiletype should be a field of hotspotmethoddata .
pdfbox - 4892 : remove cloneable from cellcopypolicy , a suggest by valerybokov
added a static method ` resetIconLoadResult ( ) ` in ` FloatingIconView ` and modified its usage in ` Launcher `
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated ` IconRecentsView . java ` to utilize ` Resources ` for retrieving resource dimensions and added orientation check for landscape to improve
deleted the AddAdapter . java file to the functionality is no longer needed in the project
[ java ] avoid indexoutofboundsexception in nonstaticlifter .
added a boolean parameter ` processSortCols ` and modified the logic for processing column names in the ` OpTraitsRulesProcFactory ` class to
log4j2 - 1348 - testlogwatcher . testlooper should check that there be no entry registered for the watcher
added a print statement to the Java2TypeScriptTranslator class to enhance output formatting for better readability
updated SDK version code from " 4799589 " to " 4913185 " to ensure compatibility with the latest features and improvements
set the SPRING _ AOP _ PROXY _ TARGET _ CLASS property to " true " in the TraceEnvironmentPostProcessor to ensure that
removed the singletonLock variable and related logic from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary checks
add example for use callbackclass and callbackclass with string
fix suitehtmlreporter to append to output directory if it do not already exist
updated the condition in ` MavenExecutionContextView ` and refactored ` MavenRepositoryMirror ` to return ` getMirrors ( ) ` instead
added a ` name ` parameter to constructors and methods in ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePath
updated the redirect URI comparison logic in OAuth20CallbackAuthorizeEndpointController and added a new test case in OAuth20CallbackAuthorizeEndpointControllerTests to
replaced direct calls to ` annotations . values ( ) . toArray ( ) ` with a new method ` AnnotationParser . toArray ( ) `
updated method calls from ` getBadgedDrawableForUser ` and ` getBadgedLabelForUser ` to ` getBadgedIconForUser ` and
updated the default line separator description in GlobalConfiguration . java to provide clarity on the default line separator for output
fix a bug where bestpathaudietracker and doubledata be not inherit from bestpathaudietracker .
[ thymeleaf ] sanitize input before save them to the model .
chore : update java and python dependency ( # 6 )
updated the ` buildFileNamesCanBeDifferentCrossCell ` method to include IOException handling and added assertions for file contents to improve error handling and
refactor CountersReader class to improve code readability to enhance maintainability and facilitate future development
updated container type handling in AllAppsRecyclerView and modified logDeepShortcutsOpen method to accept a View icon instead of a container type to
hbase - 25836 add deprecation warn for config key hbase . ipc . server . reservoir . initial . max and
fix native window and native join test ( # 3390 )
added a method ` getAllGenericParameterTypes ( ) ` to the ` Executable ` class to retrieve all generic parameter types to improve clarity and
refactor TestFSTs class for improved readability to enhance maintainability and facilitate future development
lucene - 4892 : fix input box height calculation for latex string
hbase - 26969 increase the initial size of increasingtopoupperboundregionsplitpolicy to 2gb
removed model . resetLoadedState ( ) and model . startLoader ( ) calls in LauncherClings . java to streamline model loading
removed redundant initialization of keys and updates in ManagedSelector . java to streamline the code by eliminating unnecessary null assignments
added a set of excluded datasources in SpringDataSourceBeanPostProcessor to allow filtering of beans based on specific criteria
added a call to storeUndoInfo ( ) in TableValuesView . java and simplified the delete event execution in TableValuesPanel . java to
camel - 14284 : camel - aws2 - kinesis should use clientconfigurationfactory when create kinesis client .
refactor channel triggering logic to use a loop for multiple channels to improve readability and maintainability of the code
added comments to disable tests due to unfavorable benchmarks and simplified delayability logic in BoundedLocalCache to improve test clarity and
added a test for illegal database names in IoTDBSessionSimpleIT . java and improved error handling in PartialPath . java to ensure proper
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly managed during garbage collection
renamed ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceHorizontalMarginPx ` to ` horizontalWorkspaceHorizontalMarginPx ` and updated
reformatted code for consistency and readability in CharTokenizer . java to improve maintainability and readability of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
fix a typo in the constant name for xenserver _ network _ label
updated libGDX and libGDX nightly versions from 1.5 . 5 to 1.5 . 6 and 1.5
removed the private Set < String > metricNames and its getter method from SolrCore . java to streamline the code by eliminating unused
replaced ` URI ` with ` Path ` for working directory and absolute path in ` MavenManifestFactory . java ` to improve type safety and
replaced direct OS name check with a constant IS _ MAC to improve code readability and maintainability
refactor JdbcAggregationRepository to improve code readability to enhance maintainability and facilitate future development
added a clear and addAll method to the slotList in the Frame class to ensure the slotList is consistent with the other object ' s slots
initialize m _ predCount to - 1 in PredicatedNodeTest . java to initialize m _ predCount to a default value of - 1
added configuration merging functionality to the ConfigurationSpringInitializer class to ensure all keys in the configuration are correctly retrieved from the configuration
updated the method signature of ` setupLogging ` to use ` org . slf4j . Logger ` instead of a switch statement to improve
replaced instances of HashMap with LinkedHashMap in multiple files to maintain the insertion order of elements
added a check to determine the jdbcHandlerMap based on the superclass of the type to ensure proper initialization of the jdbcHandlerMap based on the
added debug logging statements to HibernateItemWriter , JpaItemWriter , FlatFileItemWriter , and JmsItemWriter to improve traceability
modified the way language range is parsed by trimming trailing semicolons from the input string to ensure correct parsing of language ranges by removing unnecessary
replaced direct call to ` closeHandler . handle ( null ) ` with ` handlerContext . executeFromIO ( ) ` in ` Ver
pdfbox - 4892 : improve performance of xssfevaluationworkbook . gettable ( string name )
updated the condition to check for BASIC schema detail type and simplified the primary key and unique index symbol assignment to enhance clarity and maintainability
updated MongoNamespaceReplicaSetTests to use MongoClientFactoryBean and replaced MongoFactoryBean with MongoClientFactoryBean to ensure compatibility with the new
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order while maintaining insertion order
added a debug log message when the operator tree is not properly cloned to improve debugging by providing feedback when the operator tree is not properly cloned
added a null check for the client ID in the DynamicRegistrationClientConfigurationService to prevent potential null pointer exceptions when retrieving registered clients
bugfix : clear achievementlist . field _ 187981 _ e when clear ( ) be call .
initialize userName , productName , driverClassName , and driverVersion to an empty string in MutableDatabaseInfo . java and MutableJdbcDriverInfo .
updated the permission from link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog and Sh
added support for reading long values from byte buffers in ByteBuffersDataInput to improve performance and efficiency of data reading
refactor UnixFileAttributes to use separate timestamps for clarity and consistency to improve code readability and maintainability by using more descriptive variable
added a new file TestNoEagerReclaimOfHumongousRegions . java to demonstrate the behavior of garbage collection
added search bar visibility management and conditional updates in AllAppsContainerView to enhance user experience by controlling the visibility of the search bar based on
fix ( envrouterrunner ) : use env . routes ( ) instead of env . router ( )
added null checks for cur and next in LineChartRenderer to prevent potential NullPointerExceptions during rendering
added a new action for reloading the page in the menu to enhance user experience by allowing users to reload the page dynamically
changed logging level from info to warn for specific log entries in ` plot _ * ` files to improve logging granularity for better troubleshoot
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a valid configuration type is provided before proceeding with
use serviceloader instead of factoryregistry to load spi extension
added a call to closeTable ( ) in the finalize method of HiveHBaseTableInputFormat to ensure proper resource management and prevent potential memory
added stopStatementExecutor ( ) method to JdbcConnector and HiveViewImpl classes and improved logging in HiveViewImpl to ensure proper resource management
updated feature settings and generic type in DocumentFactory and related handlers to improve code clarity and maintainability by using diamond operator
replaced ` jdbCommand . cont ( ) . waitForPrompt ( ) ` with ` jdb . contToExit ( 1 ) `
added a method ` getType ( Uri uri ) ` to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enable type
updated the removal logic for futures and timestamps in ExpressionThreadPoolManager to improve code clarity and maintainability by using a more descriptive variable name
updated the property key from " port " to " vertx . httpPort " in HttpTestBase . java to ensure the correct HTTP port
replaced ` addCaptureListener ` with ` addListener ` for buttonTable to improve clarity and consistency in listener usage
increased the default batch size from 10 to the number of available processors in NewSessionQueueOptions to optimize resource usage for better performance
[ hotfix ] [ runtime ] log error when establishing resource manager connection in task executor
updated LambdaRewriter to handle null ClassFile and improved exception handling to enhance robustness by providing a fallback expression when the class file is not
updated the error message in IllegalArgumentException to include min and max values to improve clarity of error messages for better debugging
updated onMessage method signatures to include owner parameter across multiple classes to enhance message handling capabilities and improve logging clarity
added new files for database functionality , including Cursor , Database , and Row interfaces to provide a structured way to interact with database operations and data retrieval
refactor assertion classes for improved clarity to enhance maintainability and readability of the codebase
add setbeanid ( ) method to ebeanserver and add test
updated the XSLT transformation method in RuleSetToDocs . java to use the correct method for retrieving the add - menu - to - site descriptor
added a private List < RequestMatcher > matchers to manage request matchers to improve flexibility in request matching by allowing multiple matchers
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper comparison and hashing of ContactResource objects
move request and response from abstractprocessor to abstractajpprocessor and abstracthttp11processor
updated logging statements in FileManager . java for clarity and consistency to improve readability and maintainability of the code
added a tearDown method to TestIndexSearcher and reset mock control in TestJdbcDataSource to ensure proper cleanup of resources after tests are
reformatted method calls in SyntaxTests . java for consistency and clarity to improve code readability and maintainability
refactor ConnectionModel and ModeledConnection classes for improved organization to enhance code maintainability and readability
tika - 1347 - switch parserdecorator to use tika . parser . multiple instead of tika . parser . emptyparser
update fmlsecuritymanager . getcallingclass and fmlsecuritymanager . getcallingparent to be more flexible .
removed redundant declarations of variables in AccountUtils , IndexedForest , and CustomPopup classes to improve code readability and maintainability
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method in CoreApi
added a test for handling JSX comments and improved parsing logic in the parser to enhance test coverage and ensure correct parsing of comments in the
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for debugging purposes
added tests for handling missing Buck configuration and improved error handling in BuildEndToEndTest and CxxEndToEndTest to ensure
added physical memory checks using OperatingSystemMXBean in TestStringBufferAndBuilderGrowth . java to ensure tests do not exceed available memory limits
deprecated the ConversionService class and replaced direct calls to conversion methods to improve code clarity and maintainability by using a dedicated converter instance
added a success flag set to true in HiveMetaStoreClient . java to indicate successful execution of the HiveMetaStoreClient
updated string comparison from ` = = ` to ` . equals ( ` ` * ' ' ) ` in ` ResourceReferenceInfo . java `
added support for both " vine / twimg . com / v / " and " vine / twimg . com / v /
added a @ Deprecated annotation to AreaReference . java to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
updated assertions and reference kind handling in MemberName . java to improve code clarity and ensure correct reference kind behavior
changed the default value of ` __ submitKeyUpdates ` from false to true and added synchronization around ` runChange ` to ensure thread safety during
fix npe in editnodetextfield when first event be n ' t a mouseevent
camel - 1560 : fixed bean static method not resolve the bean name correctly .
refactor multiple classes related to benchmarking and publishing to improve code organization and maintainability
refactor exception handling in AgentRunnerTest to use ` LangUtil . rethrowUnchecked ` for improved clarity to enhance code readability
added ` getDescription ( ) ` methods to multiple classes for improved clarity and consistency to enhance code readability and maintainability by standardizing
refactor code to store faces in a separate ArrayList before adding them to the activeGroup to improve code readability and maintainability by reducing
refactor ProcessEngine class to improve code readability to enhance maintainability and facilitate future development
corrected a typo in the variable name from " reentrantLock " to " lock " across multiple files to improve code readability
updated the ` getBomReference ` method to include ` mavenPackaging ` as a parameter in ` PrintMavenAsCycloneDxB
updated back ( ) method to use evt . getComponent ( ) instead of a direct call to back ( ) to ensure the back method uses the
simplified the certificate verification logic in SASLAuthentication . java to improve readability and maintainability of the code
updated the generic type parameter in ObjectArraySubject and related methods from T @ Nullable [ ] to T @ Nullable Object to improve type safety and
replaced NutchConf . get ( ) with getConf ( ) in Fetcher , Generator , and Injector classes to ensure consistency in accessing
replace removeBoardsPane ( ) with tab . deselected ( ) in SheetAssembly . java and modify assembly selection logic in Stubs
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the ` sessionId ` variable for better
added null checks before setting time intervals for nodes and edges in ImportContainerImpl . java to avoid potential NullPointerExceptions when setting time intervals
updated the command from " - logLevel INFO - serverPort " to " - serverPort " in MockServerContainer . java to simplify the command
updated error logging to include the exception message instead of the exception object to improve error reporting by providing more context about the resource loading issue
refactor RobotsHonoringPolicy handling to use CrawlMetadata instead of RobotsHonoringPolicy to improve flexibility in managing
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
camel - 16462 : camel - defaultpackagescanresourceresolver should use platform - independent file separator
added a method ` alternativePath ` to the ` ExpectNewDemo ` class to provide an alternative input stream for handling potential runtime exceptions
logentryparsertester : call input . getfirstfilter ( ) . init ( ) instead of input . init ( ) to ensure that
added protectionDomain parameter to the BufferAlignmentAgent constructor to enhance security capabilities by allowing access to the protection domain
added dispose ( ) method to the WaterRipples class to ensure proper resource management and prevent memory leaks
added a configuration option to disable unsafe external table optimizations and operations on external tables to improve performance by preventing unnecessary optimizations on external tables
updated the description of the " Authorization " header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public
removed the FLAG _ SHOW _ WALLPAPER flag from the launcher and adjusted wallpaper offset in the workspace to simplify the wallpaper
updated return value in SybaseASADatabase and modified sequence retrieval logic in SequenceSnapshotGenerator and CreateSequenceGenerator to ensure proper handling of Sy
putsql : fix commit / rollback behavior when autocommit be set to false . patch by jbellis ; review by jbellis for
added directory creation checks and assertions in SnapPuller . java and TestReplicationHandler . java to ensure proper handling of parent directories and validate
updated AppTargetId from " id : launcher " to " launcher : launcher " in AppEventProducer . java to improve clarity and consistency
[ java ] add an output parameter to the framer . frame ( ) method .
removed unnecessary parameters from several constructors in the OAuth2 - related classes to simplify method signatures and improve code readability
added an extended description to the ` GenericUDFStringToMap ` class to clarify the default delimiter settings for key - value pairs
removed the ` formatInstance ` method and updated the ` append ` method to use ` truncatedTo ( ChronoUnit . MILLIS ) . toString
updated the timeout constant from TIMEOUT _ MS to RETRY _ CLOSE _ TIMEOUT _ MS and modified the close method to retry close operations to improve
hhh - 14850 - use methodhandles . privatelookupin ( ) instead of reflect . lookup .
updated Mockito library version in the project to ensure compatibility with the latest features and improvements
updated log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the logging message
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored due to insufficient sample results
simplified the error message for IllegalArgumentException in GridLayout . java to improve code readability and maintainability
[ wagon ] fix exception in wagoncatart . getfeaturevalueasstring ( )
added sorting and ordering functionality for BoundSheetRecords in Excel2CSVmra and BoundSheetRecord classes to improve the handling of BoundSheetRecords
refactor calculations for average impact pulse in ThrustCurveMotor . java to improve clarity and accuracy of thrust calculations
updated the initialization of InputSystemJme to use the inputManager parameter to ensure proper input manager configuration for the system
refactor conditional checks for ` useExplicitIdentityHashCodeField ( ) ` and ` getInstanceIdentityHashCodeOffset ( ) ` in ` UniverseBuilder
remove deprecate block . getmesh ( ) , use block . getmesh ( ) instead
[ hotfix ] [ yarn ] rename keytabpath to localkeytabpath in yarnapplicationmanagerrunner
added EMPTY _ WORD _ OPTIONS option to control empty word matching behavior to enhance flexibility in matching words based on user - defined options
[ hotfix ] [ table - runtime ] fix push view replica update for write commit log
added support for auto - opening the web button in the CaptureActivity and related classes to enhance user experience by allowing automatic button presses based on
added a new test method ` testBatching ` to ` JoinedTableTest ` and implemented ` additionalProperties ` method to enable batch processing
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate timestamp issues
removed the deprecated ` format ( ) ` method from ` CucumberOptions ` and updated the ` @ CucumberOptions ` annotation to
removed the save ( ) method from PMS . java to simplify code by eliminating unnecessary save ( ) calls
simplified the back key event handling in ExtendedEditText . java to improve code readability and maintainability by reducing unnecessary checks
updated the capacity calculation in AbstractStringBuilder and added a new Capacity class with tests to ensure correct behavior of StringBuffer and StringBuilder with specified sizes
replace ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to improve user experience
added support for handling endnotes in XWPFDocument and updated related methods in XWPFParagraph to improve handling of endnotes in document
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent to enhance event context for better context management
added a test method for GDAL version retrieval in BridjOGRDataStoreTest . java to verify the correctness of GDAL version
added a new file ` Lifecycle . java ` to handle network errors in the application to facilitate the management and management of network errors
added a timeout mechanism for downloading URLs in DeviantartRipper . java to improve reliability by handling 404 responses gracefully
removed unused imports from BodyTubeShapes . java and RocketFigure . java to streamline code and improve readability by eliminating
added support for retina and retina surface scaling in PJOGL . java to improve rendering performance by allowing more flexible scaling based on
show pub . dartlang . org when create project offline
refactor DiskDocValuesConsumer to use BlockPackedWriter for improved performance and clarity to enhance performance and maintainability by reducing
optimize defaultroutebuilder to reduce object allocation
removed unnecessary data list and stream data handling in GoAwayTest . java to simplify the code and improve readability by eliminating unnecessary
added handling for ` java . util . Map ` and ` FluentPropertyBeanIntrospector ` in ` ReflectionUtils ` and created ` FluentSetter
updated the ` post ` method in ` BlockingHttpEndpoint ` to return a ` HttpResponse ` instead of a ` ListenableFuture < ? >
updated fileUrl to use " a / ? " instead of " ? noop = true " and added prepareFolder method to prepare the folder for
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity and consistency in
pdfbox - 4892 : add option to disable image scaling information , a suggest by valerybokov
added logic to conditionally include aggregate functions based on the SQL parameter to enhance flexibility in handling aggregate functions based on user - defined parameters
updated test classes to extend from WithNestedTests . AbstractNestedTest instead of LuceneTestCase to improve test structure and ensure compatibility with nested
added functionality to select and display XCap server URI in the PresencePanel to enhance user experience by allowing dynamic configuration of XCap enable status
add a flag to turn off exception handle by default
added stopEditing methods in CodenameOneImplementation , Display , TextArea , and AndroidImplementation classes to manage editing state to improve user experience
nifi - 1746 : controlrate . setgroupname ( ) do n ' t throw npe if no group attribute be set
updated the ` showDialog ` method to change the parameter name from ` includeUndoModify ` to ` isNewComponent ` and added a checkbox to
added error handling and synchronization for sending messages in ChatAnnotation . java to improve error tracking and ensure thread safety when sending messages to the client
added a check for Windows OS in HTMLDataFlavorTest . java to ensure tests are only executed on non - MS Windows environments
added SQL _ SERVER _ SNAPSHOT constant to TransactionIsolationLevel . java to enable support for SQL server snapshotting functionality
replaced a direct addition of newRecid with a blocking offer operation using a timeout to improve resource management and prevent potential deadlocks
use java . util . zip instead of org . apache . tomcat . util . compat . jrecompat
added a null check for the command class before setting it in the RegisteredServiceSimpleFormController to ensure that the command class is always set before
change default disk _ failure _ policy from best _ effort to ignore
removed public access modifier from method declarations in RipperInterface . java and RipStatusHandler . java to enforce encapsulation by restricting
filter out 127.0 . 0.1 from 127.0 . 0.0 and 127.0 . 0.1 in peerdiscovery
removed the method ` setJobIdentifierFactory ` from ` SimpleCommandLineJobRunner ` to simplify the codebase by eliminating unused functionality
updated the import statements in PinotSegmentRebalancer . java and modified the computePartitionAssignment method to include a new ClusterDataCache instance to
danielwagnerhall : remove unused deletecontainer api
simplified the parsing of command string in the DefaultSeleneseCommand class and added unit tests for it to improve code readability and
attempt to fix flakiness in createglossarytests
updated references from ` $ ref ` to ` Components . COMPONENTS _ SCHEMAS _ REF ` in ` ModelResolver . java `
replaced the ` deleted ` field with a direct reference to ` source ` in the ` EntityDeletedEvent ` class and updated the audit record
added support for GOP support in FormatConfiguration . java and updated related media handling in DLNAMediaInfo . java and LibMedia
added a new file TestProfileReturnTypePrinting . java with methods for testing return type printing to facilitate testing of return type printing
refactor ParseConfigUtils to use ReentrantLock for thread - safety to ensure thread safety during configuration refresh operations
updated MinMaxValueBasedSelectionOrderByCombineOperator to use AcquireReleaseColumnsSegmentOperator for managing results block to ensure proper resource management and prevent potential
simonstewart : make the firefox profile test work again
updated method signatures and return types in HasAndroidDeviceDetails . java to improve clarity and functionality of the method to enhance code readability and
remove duplicate addbug ( bug ) call from projectstats
[ netbeans - 4892 ] use disabled shadow instead of disabled label for GTK
removed multiple redundant @ Override annotations in CacheControlImpl . java to improve code readability and maintainability
added a check to return a date in the future if no weekly actions are specified to ensure that the scheduled action returns a valid date in
refactor upload button handling to use actionMenu for improved clarity to enhance code readability and maintainability by using a more descriptive
[ hotfix ] [ security ] fix javadoc warning in javax . security . message
added loadMetaData method to MeXBTExchange and RippleExchange classes to enable loading of exchange metadata from an InputStream
added a custom serializer for Hadoop Writable types in CrawlDbReader to enhance JSON serialization capabilities for Hadoop Writable types
no effective change - code cleanup - remove unused test class
added service and configurationPid attributes to the MDNSDiscoveryService class to enable configuration of the MDNS service for better integration
added null check for messageItem before scrolling to prevent potential NullPointerException when messageItem is null
updated ForkJoinPool initialization in TestBPIndexReorderer . java to utilize a custom ForkJoinWorkerThread to improve thread management and
added assertions to verify that dependencies contain the appropriate blocker roles to ensure that the dependencies contain the appropriate blocker roles for DATANODE and
added restoreLocalInfoFromTableInfo and dedupWithTableInfo methods in PartInfo . java to ensure proper handling of table information during serialization
standardized spacing in conditional statements across multiple Java files to improve code readability and maintain consistency
added transformations for sprite rendering in BitmapFontTest . java to ensure proper rendering of the logo sprite during rendering
added a check for built - in aggregate calls in StreamPhysicalPythonGroupWindowAggregateRule . java to ensure that only non - built - in
do n ' t send status change to the server if it have already be up / down
added a method ` getUnreachableTokenOwners ( ) ` to ` Gossiper ` and updated method names in ` StorageProxy `
[ geosymbolic ] do n ' t change to multiplication when the left node be not a variable
updated content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to ensure proper content type is set when the saved request
changed access modifiers of several variables and added null checks for the local graphics environment and display in XToolkit . java to improve encapsulation and
refactor RecommenderJob and AbstractJob classes to improve code organization and readability
replaced ` Object metaLock ` with ` ReentrantReadWriteLock ` and ` ReentrantReadWriteLock ` for thread -
added a test for reading an identity provider in a specified identity zone using a Zones Token to ensure correct behavior of the identity provider functionality in
replaced job with an ExpireJob in ObjectTypeNode . java and added null check in PointInTimeTrigger . java to improve job scheduling
removed unused import of org . jasig . cas . authentication . principal . Service in SendTicketGrantingTicketActionTests . java to
send heartbeat to all broker when rebalance change
set cairo . detached . mkdir . mode to 509 by default
[ java ] send a message to a slow follower when there be a low follower .
change author3 label pattern to auth label pattern to be consistent with other language .
updated dependencies in DBinaryDescription and DLibraryDescription to utilize CxxPlatforms for parsing time dependencies to enhance dependency resolution for Cxx
refactor GoogleCloudAPI and GoogleTTSService to improve resource management and disposal logic to enhance code clarity and ensure proper resource cleanup
camel - 13836 : fixed file on completion when use dynamic done file name
added a new configuration option ` reopenReaders ` in ` SolrConfig ` and modified the conditional check in ` SolrCore ` to enable reopening
[ freeplane ] add dialect attribute to mapwriter
add ` currentDate ` and ` currentTimestamp ` methods to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor ` WidgetSearchCondition ` and ` RequestPinItemTest ` to implement the ` Condition ` interface instead of an abstract class to simplify
replaced TermQuery with ConstantScoreQuery and adjusted score calculation in TestFacetsCollector . java to improve search performance by using a more efficient
removed unused imports from ConcurrentClassLoadingTest . java to streamline the code and improve maintainability
added a method to provide a direct nearby upload preferences in the CommonsApplicationModule to enhance the upload controller functionality by allowing direct nearby
added support for " SYSIBM " and " SYSDUMMY1 " modes in the parser and mode classes to enhance compatibility checks for
refactor logging statements in TraceGatewayEnvironmentPostProcessor and add conditional bean creation in SamplerAutoConfiguration to improve code readability and maintainability
added lastPid tracking and retrieval logic in POIXMLProperties . java , and updated test cases in TestHPSFPropertiesExtractor . java to
[ geotiff ] do n ' t use nan for negative infinity in nodata
refactored the executeDriver method to improve error handling and return the result of processLine and processFile to enhance code clarity and maintain
replaced ` httpExecutor ` with ` httpScheduler ` and updated the implementation to use ` Schedulers . from ( ) ` to improve
added a default implementation for the ` selectByRuleIdSet ` method with a partitioned list of ` ruleIdSet ` to enhance flexibility
added a new method ` addExitDescription ` to ` ExitStatus ` and simplified stack trace handling in ` AbstractJob ` and ` AbstractStep
fix npe in multiblockrenderhandler . rightclickblock ( ) when the player be not the player .
rename ` columnFamily ` to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to improve clarity and consistency in variable naming
updated import statements in PlotConfiguration . java for consistency to improve code clarity and maintainability
refactor DefaultIOSInput to utilize UIAlertController instead of UIAlertViewDelegate for better interaction with UI alerts to enhance user experience by
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` to ensure the correct
rename parameter from ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more descriptive
added assertion to check for null message in AdvServiceTest to ensure proper handling of null messages in the service
replaced ` potentiallyConvertMapKey ` with ` potentiallyEscapeMapKey ` and modified key handling logic in ` MappingMongoConverter . java `
updated Timber logging format in NearbyMapFragment . java to improve readability of log messages for better debugging
camel - 13663 : camel - jbang - make it possible to use camelcontext . deprecate instead of camelcontext . get
refactor FuzzyLikeThisQuery to use Terms directly instead of using the field name directly to improve code clarity and prevent potential NullPointerExceptions
refactor ` writeApplicationsLinks ` method to accept a boolean parameter for displaying application links to enhance flexibility in displaying applications in a tabular format
createmissingidentifiers : use identifierservicefactory instead of dspace to get the identifier service
replaced ` byte . length ` with ` bw . getLength ( ) ` in ` VectorColumnAssignFactory . java ` to ensure accurate length
change the return type of the getDisplayScript method from abstract to non - abstract to allow the method to be overridden by subclasses
replaced keyToPress and keyToRelease with a sequence variable in RemoteWebDriver . java to ensure the correct sequence is used for key
pdfbox - 4892 : allocate arraylist with correct size , a suggest by valerybokov
added synchronization for empty active interfaces in NetworkConfigurationWatcher . java and null check for dbusConn in NetworkManagerListenerImpl . java to ensure thread
fix bug # 45538 - getallembeddedobjects ( ) now correctly handle nested object and multiple object
added import statement for jogamp . common . os . elf . Shdr in ShaderNodeLoaderDelegate . java to utilize
updated variable names from hostParams to roleParams for clarity to improve code readability and maintain consistency in variable naming
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of specific font
replaced glStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
updated ` LiveTvGuideActivity ` to use ` mCurrentGuideStart ` instead of a static ` Calendar ` instance and modified date handling logic
replaced ` getDeclaredMethod ` with ` Whitebox . getMethod ` in ` MockGateway . java ` and added new test classes in ` Common
added calls to dlopen for " libfreetype . so " and " libfontmanager . so " in JREUtils . java
refactor variable and method names in FunctionParser to improve clarity and maintainability to enhance code readability and ensure proper handling of multi -
loop safepoint elimination : fix nullpointerexception in loopbegin
fix a bug in typeframemodelingvisitor . isinstance ( ) that cause dataflow analysis to fail
added a new ` LocalizedString ` class and refactored method arguments handling in ` Attr . java ` and ` Resolve . java `
added a new configuration property ` disableClasspathSearch ` and its getter / setter in ` ServerConfig ` , and modified ` DefaultContainer ` to
changed ` formats ` and ` minBufferSize ` and ` maxBufferSize ` from ` private ` to ` private final ` and replaced ` System .
changed the default number of retries from 0 to 2 in Reference . java and updated the corresponding test in AnnotationPropertyValuesAdapterTest . java to
added functionality to load and process settings from a file in TexturePacker . java to enhance flexibility in configuring texture packing options
added text views for uploaded images and images used by wiki in AchievementsFragment to improve user experience by providing clearer feedback on image
added unit tests for annotation processing and logging in TranslatingJavacPhaseTracerTest . java to enhance test coverage and ensure proper logging behavior
added a new ` CategoryInfo ` class and updated the URL in ` CategoryInterface . java ` and ` MwQueryPage . java `
removed redundant " password " from assertion messages in AuthzAuthenticationRequest . java to streamline code by eliminating redundancy
added accessibility support to the TaskbarStashController by utilizing the recommended timeout for toggling visibility to improve user experience by allowing
added a check for the ' ^ ' character in the signature parsing logic to ensure that NoSuchElementException is thrown when encountering ^ characters in the signature
updated access flags handling in ClassVisitorDriverFromElement . java and added multiple test cases in StubJarTest . java to ensure correct behavior of
added null checks for variable ' in ' in IntervalFilter and LowpassIntervalsSource classes to ensure ' in ' is not null to prevent potential
added tests for entry set iterator functionality in MapInterfaceTest . java to ensure proper iterator behavior when iterating over entries in a map
added a serialVersionUID to the TreeMap class to ensure proper serialization compatibility for the TreeMap class
change image creation timestamp from milliseconds to seconds to ensure accurate representation of image creation time
use grobcovf2m instead of grobcovc1 and grobcovc1 for grobcov
added encryption utilities to delete private and public keys for accounts in AccountRemovalJob . java to ensure proper account encryption during account removal
fix keep - alive header in netty asynchttpprovider and jdk asynchttpprovider
do n ' t run postjoinmapoperation if there be no interceptor
do n ' t use inlining for text / javascript / cs in the standard dialect
[ hotfix ] [ table - common ] remove unused spillenabled parameter from hybridhashtable
refactor EnvironmentVariableHelper to use Optional for obtaining modifiable environment variables to improve code readability and maintainability by reducing unnecessary reflection
updated import statements and modified method parameters in DefaultActionMapper . java to improve code clarity and maintainability by using specific imports
added import for SerializableMode in Mockito . java and adjusted formatting in PluginSwitch . java to enhance serialization support and improve code readability
fix issue with annotation metadata be set to null when field injection point be declare nullable .
added isolation level handling in SQL statements and updated related tests to enhance compatibility with isolation levels in select statements
replaced the use of ` HiveConf . ConfVars . HIVE _ SERVER2 _ TRANSPORT _ MODE ` and ` HiveConf .
added an ` isCacheable ` method to ` GlobalOrdinalsWithScoreQuery ` that returns false to indicate that the query is not
added a new file ` TestStrangeControl . java ` that contains a thread executing ` StrangeControl . test ( 42 ) ` to
updated file types in JsFile . java and JsLibrary . java from " . json " to " . jsfile " and " . j
added selection management methods to ShadowEditText to enhance functionality for setting and getting selection positions
refactor GRPC server initialization to use ` Closeable ` and improve resource management to ensure proper resource management and prevent potential memory leaks
added a method ` use ( String path , Class < ? > routeClass ) ` to the ` Jooby ` class and updated
added a null check for fst in FreeTextSuggester . java to prevent IllegalStateException when fst is null
updated output formatting in T4975569 . java and improved verification in T6729471 . java to ensure consistent newline handling and
added ABI writer class loading functionality and logging in JavacInMemoryStep . java to enhance ABI processing capabilities and improve debugging capabilities
added @ SuppressWarnings ( " BooleanMethodIsAlwaysInverted " ) annotation to suppress warnings related to Boolean method inversion
added a check for thread shutdown before scheduling tasks in PullMessageService to ensure that scheduled tasks are only executed when the service is not stopped
refactor EnergyEndpointer class to improve code readability to enhance maintainability and facilitate future development
refactored the handling of displayed columns in ComponentPresetChooserDialog to improve clarity and functionality to enhance code readability and maintainability by
fix checkstyle issue in opengrok / opengrok - repository
camel - 14284 : fix switch / cases indentation see camel - 14284
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadata
deleted the files Constants . java and DistanceUtils . java to remove unused code to streamline the project
replaced the use of ` Pattern . compile ( DELIMITER ) ` with ` substring ( int , int ) ` for parsing the key to
fail build - time initialization for fallback linkers
added a new test method ` testCreateInline ` and refactored the ` handleCreate ` method in ` RoleBindingOperationsImpl ` to
added debug logging for session cookie configuration in UaaSessionCookieConfig . java to facilitate easier troubleshooting by providing
updated the calculation of filename from LOG _ DAYS to the current year in HotseatFileLog . java to ensure the file name is
[ hotfix ] [ network ] fix typo in observableblockingsubscribe
added error handling for invalid options in JavapTask and created a new test class T8033711 to ensure proper error reporting for
replaced instances of ` collect ( toList ( ) ) ` with ` toList ( ) ` in multiple Java files to improve code readability and
updated logging level from error to warn and modified task retrieval logic to conditionally return null based on the shutdown flag to improve error handling and ensure
[ hotfix ] [ network ] [ network ] enable tiered storage for hybrid result partition
replaced the constant ` SUCCESS _ CODE ` with a static method ` isNotSuccessStatus ` in multiple service classes to improve code readability and
added GL20 configuration to Cuboc and modified LwjglApplication instantiation to enable OpenGL support in the application
simplified the return type check in JimpleBody . java to improve code readability and maintainability
refactor OutputMacroExpander to replace DefaultSourcePathResolver with SourcePathResolver and enhance command line argument handling to improve code clarity and
fix test in simpletestinclustersupport . assertnojobslefteventually ( ) to check for light job
added a condition to check for the presence of the " \ build \ " prefix in the file path in MergeWordsListTask . java to
instructorfeedbackresponsecomment : fix npe in instructorfeedbackresponsecommentsloadpagedata and instructorfeedbacksessionresultsbundle
removed unnecessary whitespace in the return statement in Container . java to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java containing a class with methods to test escaping of objects to ensure proper handling of object equality in
replaced direct stream operations with IOUtils for improved readability to enhance code clarity and maintainability by using a consistent utility method
added interceptor handling in ConnectionPool and improved error logging in DataSourceProxy to enhance connection management and provide clearer diagnostics when connection pool starts
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching all throwable types
added eviction and overhead methods to LruBlockCache and corresponding test cases in TestLruBlockCache to ensure proper handling of cache size calculations
removed unnecessary import and early return condition when task count is zero in RecentsView . java to clean up code and improve readability by eliminating redundant checks
added instance config change listener to HelixBrokerStarter and increased sleep duration from 1000ms to 5000ms in HelixServerStarter to
added a new interface ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` and modified ` CoinmateExchange ` to
improve error message for invalid systempath
pdfbox - 4892 : do n ' t overwrite object key if they do n ' t match
add setdisplaydata ( list < itemspec < ? > > ) method to ptransform to allow user to set displaydata .
replaced ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat ( (
disable weak cryptographic algorithms in JSSE configuration to improve security by preventing sensitive keys from being used
added checks for subcommand group and option type in OptionData . java to improve clarity of error messages for option validation
updated module - info . java files for mmm and ppp modules to improve module documentation clarity and maintainability
added error handling to the ensureConnection method in IOSImplementation . java to improve error management and provide clearer feedback on server errors
set sCheckingEvents to true in LauncherInstrumentation . java and reset mFinished in LogEventChecker . java to ensure proper cleanup of
refactor exception handling and writer closure in FileSinkOperator . java to improve error management and ensure proper resource cleanup
added diagnostic output to SchemaGenerator . java to improve debugging by providing detailed diagnostic information
replaced SemanticException with OptiqSemanticException in error handling to improve clarity and specificity of semantic exceptions related to column references
refactor DataSourceMonitorTests to improve test structure to enhance maintainability and readability of the test code
added a ` loadedResourcePaths ` set to track loaded resource paths in ` ClasspathMethodScanner . java ` to improve performance by avoiding
updated error logging to use ` orElse ( null ) ` for ` testInstance ` to improve null safety and clarity in error reporting
added a null check for the input parameter in the RoutingInBoundHandler to handle cases where the input parameter is null and ensure proper response handling
[ ekey ] add ` ` natip ' ' field to ekey configuration
updated imports and refactored buffer allocation logic in various classes to utilize the new ArrowByteBufAllocator for improved memory management
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation for HTTPParser headers and bodies in HttpConnection . java and created a new test for unexpecting with body in RFC2616
refactor MultiTimeout to use AtomicReference for the upstream subscription and improve request handling to enhance thread safety and clarity in subscription management
add a compaction counter to track the number of sstables that can be compact for a level
added a test annotation to the TestOrcTimezone1 class to enable unit testing of OrcTimezone functionality
refactor conditional logic to use a new method for finding enabled metrics and timers based on substrings to improve code readability and maintainability by
replaced ` JsonUtils . objectToJsonNode ( ) ` with ` JsonUtils . objectToString ( ) ` and added exception handling for
modified JTable rendering logic to handle null superclass cases and added a new test class for JTable functionality to improve robustness and ensure proper rendering
added a check for the existence of the environment shell before adding it to the arguments to ensure that the application uses the correct shell if available ,
updated the number of deleted subscriptions from 10 to 1 in DatabaseCleaningService . java to improve the deletion process by allowing more than one subscription
replaced List with LinkedHashSet for test instances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future development
added transactionDisable ( ) method and modified fileMmapEnableIfSupported ( ) method calls in BTreeMapTest . java to improve transaction
refactor iterator initialization in SortedIntList and add a new constructor in SortedIntListTest to improve code clarity and ensure proper initialization of
added JMX unregistering functionality in DefaultRemoteProxy and modified exception handling in JMXHelper to improve resource management and enhance error handling clarity
[ hotfix ] [ rocksdb ] increase rocksdb default writebuffer size to 64mb
removed an unused parameter from the constructor call in the Style class to simplify the constructor parameters and improve code readability
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper argument handling without encoding
removed JSON graph logging for portable pipelines in SamzaRunner . java to streamline the pipeline configuration by eliminating unnecessary logging
add ocean - waves . ogg to the list of audio to be able to play sound .
updated LoopRotateBadNodeBudget . java file to improve performance and maintainability of the code
added a new parameter ` TypeInformation < ? > ` to the ` convertToMongoType ` method across multiple classes to enhance type conversion functionality by allowing
ggb - 2321 inputbox : do n ' t show imaginary unit as i for complex input
simonstewart : fix sendkeys to be able to send empty key to active element
added a method to getScaledInstance for creating a scaled BufferedImage with specified dimensions to enhance image scaling flexibility by allowing non - negative target sizes
removed unused methods ` extendArgumentCheck ( ) ` and ` extendWrapStore ( engine ) ` from ` DBMaker ` to streamline code
add miss call to updateshiftstatenow ( ) in anysoftkeyboard
removed the DETECTED _ ACTIVITY constant and related methods from BundleConstants and related classes to streamline the code by eliminating obsolete
updated package imports from ` extensions ` to ` protocol ` across multiple Java files to align with the new package structure and improve organization
add checkstlye rule for unused import and an autofix
added comments for unused start _ pc , end _ pc , handler _ pc , and catch _ type in multiple Java files to clarify
updated the exception message in WebSocketUpgradeHandler to include the response status to improve clarity of the error message for better debugging
reformatted the assignment of blockMode in P11Cipher . java to improve code readability and maintainability
updated Mockito library version in the project to ensure compatibility with the latest features and improvements
removed redundant check for plot ownership in Merge . java to streamline code for better readability and maintainability
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline code by eliminating
use de . dfki . lt . mary . unitselection . featureprocessors . phoneset instead of com . sun . speech .
refactor ` stripQuotes ` method in ` BaseSemanticAnalyzer ` and ` PartitionSpec ` to use ` PlanUtils . stripQuotes `
refactor rendering handling in DLNAResource . java to simplify the updateRendering method to improve code readability and maintainability by reducing
added a new list of repository entries in DefaultPluginManager to streamline the retrieval of resolution and remote artifact repositories
close the spring application context in cxfrsproducerclientfactorycachetest
refactor PhysicsClient to improve code readability to enhance maintainability and facilitate future development
added JUnit @ Ignore annotation to SessionTest . java to address frequent failures to address frequent failures in the test suite
added a new File instance with the specified name in ZipFile . java to ensure the correct file name is used for processing
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in
add default constructor to channel to ensure that channel uid be initialize by default .
added logging functionality to ` GenericDAOImpl ` and created ` StackTraceUtils ` for stack trace filtering to improve debugging capabilities by providing detailed stack trace
added a test annotation to FormLoginIntegrationTests . java to enable integration tests for form login functionality
added conditional checks for argument length before calling unparseList in FunDefBase and ParenthesesFunDef to ensure correct handling of arguments
updated GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY and changed configsSelectedMoreThanOnce to use
updated variable name from ' supressWarnings ' to ' suppressWarnings ' and added a condition for handling InnocuousThread in Java version
added validation for reading a JsonElement in JsonTreeReader . java and a corresponding test in JsonElementReaderTest . java to ensure proper handling of unexpected
added a " -- " option to TestCommand and implemented a test for extra arguments in ExternalTestRunnerIntegrationTest to ensure proper handling of command
added dedup and indexSolr methods to SolrDeleteDuplicates and SolrIndexer classes to enhance functionality for managing Solr operations
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is reset before running tests
updated progress handling in Progress and RSSReader classes to allow customizable display of progress to improve user experience by allowing customizable display options
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
add utility method to ioutils for write and close a document
updated print statements to include newline characters for runOptions , sketch , and exportClassPath to ensure consistent output formatting across different operating systems
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for ` getRootBox ` and `
updated the ` apply ` method in ` CustomQueryFilterFactory ` to accept a user parameter and added authentication logic for generic user search to enhance
added default port support to netty http server
updated SnmpTargetHandler to check if the handler is initialized before updating the status to ensure that status updates are only performed when the handler is
added permission check to instructorfeedbackeditpageaction to only include instructors with submit privilege in the list
added @ Incubating and @ Deprecated annotations to AvailableSettings . java to indicate that the class is outdated and should no longer be used
updated path handling logic in FileResolverImpl . java and added a new WarFileResolverTest . java file to improve robustness and ensure
updated the string representation of newFlushedSize in DocumentsWriterPerThread . java to clarify that newFlushedSize includes doc
fix ` dirt . dirt . func _ 149739 _ a ( ) ` to ` dirt . getunlocalizedname
corrected spacing from ` stripWhitespaceX ` to ` stripWhitespaceY ` in ` ImageProcessor . java ` to ensure proper formatting of whitespace
increased the lock size from a fixed value to a dynamic value multiplied by 1000 in FeedRefreshUpdater . java to improve thread management by
updated the parameter in the deserializeFrom method call from false to exactSearch and added a test for the iterator in MeasurementChunkMetadataListMapIterator
removed the unused ` dateFormat ` parameter from the ` makeResultFromDelimitedString ` method in ` CSVSaveService . java ` to simplify
added preferred size adjustment for the pane in NavigationShareTab . java to improve UI responsiveness by adjusting the pane ' s preferred size
replaced OffsetAttribute with State in BeiderMorseFilter and added a test for custom KeywordAttribute in TestBeiderMorseFilter to
refactor multiple Upnp - related classes for improved clarity to enhance maintainability and readability of the codebase
fix warp burst not collide at the correct block .
added a new test method ` toJson ` to ` JsonTest ` and modified import statements in ` JsonTest . java ` to improve test coverage
refactor MutableContextDataSupplier for improved clarity to enhance maintainability and readability of the code
changed the catch block from Exception to Throwable in CoreContainer . java to improve error handling by logging a warning instead of throwing a SolrException
added a new parameter ` https ` to the ` KubernetesMockServer ` constructor to enable HTTPS support for the Kubernetes mock server
make defaultjavalocalizationprovider use stamp for foreign call .
updated response headers and methods in DefaultServlet and DefaultServletTest to support both GET and HEAD POST requests to enhance security by restricting requests to
tika - 2852 : use locale . us for long decimal format in tiffextractor
updated ` ShowFileRequestHandler ` to set response exceptions instead of throwing ` BAD _ REQUEST ` and added a new test for 404 errors to improve
added exception handling functionality to ` ReflectorClassWriter ` and created a new ` TryCatch ` class for handling exceptions to improve error handling and
added a ` clamp ` method to the ` Vector ` and ` Vector2 ` classes to implement clamping functionality for vector operations
updated OAuth2 authentication handling in ChainedTokenGranter . java to ensure requested scopes are reset when the client matches the requested scopes
updated BC _ instanceof . java files to improve type checking functionality
replaced ` setSaveFlags ( SAVE _ ALL ) ` with ` Logger . instance ( " EditorBottomSheetBehavior " ) ` to
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to enhance test structure and prevent pollution
hhh - 14850 - fix nativequery return type to use basicdomaintype
added caching mechanism for font AAT status in SunLayoutEngine . java to improve performance by avoiding repeated lookups of font AAT status
use intarraylist instead of intbigarray for blockpositionbyhash
simonstewart : use sessionid instead of session : sessioid for test
refactor BrokerRequestUtils for improved readability to enhance maintainability and clarity of the code
refactor InjectorBuilderImpl to use a map for storing instances in reverse order to improve clarity and maintainability of the code by using a
replaced calls to ` getAbsolutePathToBuildFile ( ) ` with ` getBasePath ( ) ` in ` BuildTargetToRawTargetNodeTransformer
added a null check for the input value before parsing the integer to avoid potential NullPointerException when the input is null
add keepalivemanager to keepalivemanager for jabber connection .
updated the DEFAULT _ LOAD _ FACTOR from 0.67F to 0.67 in IntHashSet . java to ensure consistent initialization of the
added a method to retrieve all data type variations in VectorizationContext and updated related classes to utilize this method to improve handling of data type
move htmlassettranslator and stringsresourcetranslator from com . google . zxing to com . google . zxing . client . j
modified the conditional logic for handling vertical bar layout in OverviewState . java to ensure the shelf is removed when the overview actions are enabled
added import statement for javax . persistence . Entity and annotated the BaseActivityEventEntity class with @ Entity to enhance entity management capabilities in the application
added tracing for various touch interactions in NavBarSwipeInteractionHandler and TouchInteractionService to improve traceability and debugging capabilities
added a new file ` InvalidOptions . java ` to demonstrate the handling of invalid javap options to ensure proper error handling and
added a check to log an error if the number of displays differs from the number of supported bounds to ensure that the display state does not affect
refactor ` getClientIdAndClientSecret ` method into ` OAuth20Utils ` for better organization to enhance code readability and maintainability by central
updated ` _ unwrapServletException ` from false to true in ` ErrorPageErrorHandler ` and set it to true in ` AsyncContextTest `
added logic to set the status of ShortcutInfo to DEFAULT when no status is specified to ensure proper handling of shortcut status when no status is
camel - 15836 : fixed the issue of set a default size of 1000 for the seda component
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to App . java and called them in Kernel . java to enable batch processing
added HttpClient configuration and validation methods to ThirdEyeApplication . java to enhance HTTP client management and improve error handling
3840 add sort parameter to fetch job ( # 3861 )
updated CryptoFacilitiesTradeService to return null instead of throwing an exception for canceling orders to improve error handling by providing a clearer response
ggb - 1351 fix keyboard hide on touch down
use nfi ' s ` ` memcpy ' ' function for llvmmemmove .
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve readability and maintainability of the code
implement block tooltips = false by default .
updated DefaultDateTypeAdapter to use getDateTimeInstance ( ) and added timeStyle parameter to DefaultTypeAdapters and GsonBuilder classes to enhance date formatting
updated playerSet formatting from " < UID : " to " ( " to improve clarity of player identification in the command output
added a check for an empty list in the List class to avoid unnecessary method calls when the list is empty
added error handling for InvocationTargetException in ParametricCallable . java to ensure proper wrapped command exceptions are thrown
updated the ` getLikeExpression ` method to accept a boolean parameter for handling regex patterns to enhance flexibility in expression filtering based on user -
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide functionality for starting and
updated locale handling in runChild method to ensure consistent locale settings across different locales
refactor multiple PostgreSQL - related Java classes to improve code organization and maintainability to enhance maintainability and readability of the codebase
refactor context handler initialization into a separate method to improve code readability and maintainability by reducing duplication
added unit test base on user forum issue
nifi - 2696 : fix flaky test : testexecutestreamcommand . testexecutestreamcommand fail on window
refactor the ` returnTypeSubstitutable ` method to remove the ` erasure ` parameter and simplify its logic to improve code clarity and
added a throttle type enum and modified processing logic in TestExecutor . java to support different processing formats based on throttling type
removed unnecessary pixel variable assignment in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to streamline color
refactor annotations in mmm and ppp classes to improve code readability and maintainability
added a new interface ` Model ` in the ` org . apache . poi . hssf . model ` package and modified ` Sheet `
camel - 14284 : camel - cxf : use camel _ filter _ pattern instead of hardcoding it in the filter strategy
added a clearEntityManager option to JpaItemWriter and JpaItemWriterBuilder to control the clearing of the entity manager during writing operations
added null checks for shortcut and intent in multiple classes to improve robustness by preventing potential NullPointerExceptions
coremapnodepatterntrigger : do n ' t create twodimensionalcollectionvaluedmap if the map do n ' t have one
updated exchange host and exchange name from " BTC - e " to " Wex " in WexExchange . java to reflect the correct
added null checks for columnReaders and child in OrcEncodedDataConsumer and EncodedTreeReaderFactory to improve robustness by preventing potential NullPointerException
added null check for files in SegmentInfos . java and a test for CorruptIndexException in TestIndexReader . java to ensure robust error
updated date parameter type and refactored test methods in HSearchSortHelperImpl and FhirResourceDaoR4SearchWithElasticSearch
updated the calculation of the percentage value in DeviceHandler . java to handle negative and maximum values correctly to ensure that percentage values do not exceed the
updated limit check from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java `
camel - 13663 : camel - routescollector should not log load time .
[ java ] correct the calculation of playlist start time in the hl chunk source .
updated test class names and imports from ` com . apache . lucene . xmlparser . builders ` to ` TestNumericRangeFilterBuilder `
[ hotfix ] [ test ] fix bug in statefultransformertest
removed null check for fill and stroke in Area . java and added setBitmapShaderShift method in Line . java to simplify bitmap shader shift setting
removed dbExists method and related logic from Blockchain and BlockchainTest classes to streamline database existence checks and improve code clarity
trim whitespace from the matched value in SQLPlusSupport . java to ensure consistent data formatting by removing leading and trailing spaces
set the socket async to false in Http11AprProtocol . java to ensure that asynchronous operations are properly managed
updated the divider location calculation in DockSplitPaneW . java to improve layout positioning for better user experience
added metrics for controller health checks and updated method names in PinotControllerHealthCheck to enhance monitoring capabilities for controller health checks
added visibility control for shared avatars in LocalFileListAdapter to improve user experience by hiding shared avatars when not needed
simonstewart : remove unneeded @ clientbundle annotation
updated argument length checks from ' > = ' to ' < = ' in multiple classes to ensure proper validation of argument lengths
added a check for logging level before executing commands in LogInterceptor . java to ensure commands are executed only when the logging level is fine
replace CountDownLatch with assertWaitUntil in EventBusTracingTestBase . java to improve test reliability by ensuring spans are finished before assert
refactor QueryParser to use Locale . getDefault ( ) and add getter methods for Locale to improve code clarity and encapsulation by allowing locale
use linkedhashset instead of hashset in entrycustomizationdialog
jbrules - 1358 : fix manners . rulebase . set ( ruleset ) for beta node
added a new class ` OcspUnauthorized ` and modified the ` UNAUTHORIZED ` case in ` OCSPResponse . java ` to improve handling
replaced a fixed sleep duration with a loop that retries until the server state is set to 2 to improve responsiveness by preventing server
added methods to manage and retrieve open connection counts in SourceCounter and SourceCounterMBean to improve connection management and facilitate tracking of active
add builder . fields ( list < fielddefinition > ) method to executionstrategy and executorservicetype
refactor the ` createDefaultJavaPackageFinder ` method to return a ` Set < String > ` instead of an ` ImmutableSet < String > `
replaced OutputWriter with PrintWriter in ScriptExecutable . java to improve output handling by utilizing a custom PrintWriter
replaced the file creation logic to use a random UUID for the staging file name to ensure that the test uses a unique temporary file name for
added support for handling DataTable in JRubyStepDefinition to enable proper conversion of DataTable objects to Ruby
updated visibility and parameters for author and image retrieval in SearchImagesRenderer and ApacheHttpClientMediaWikiApi to improve code clarity and maintainability by
fix typo in javadoc of readsentimentdataset
improve error message for formulaparser . parseerror ( ) to be more descriptive .
added getter and setter methods for the bind address in WebSocketClient . java and modified the visibility of the exception variable in WebSocketFuture . java to
[ java ] delete archive and aeron directory before close cluster module .
refactor width and height handling in WidgetGroup to use a unified setSize method to improve code readability and maintainability by reducing duplication
change sessionFixationAttribute comparison to use Boolean . valueOf for clarity to ensure proper handling of boolean values in the code
fix lalogic line fragment to use edge option
simonstewart : introduce chromedriver . incrementbackoffs ( ) and chromedriver . resetbackoffs ( ) to
added HttpMethod and HTTPRoute parameters to ClientResponseWrapper and updated method and route handling in TraceExchangeFilterFunction to enhance flexibility in handling HTTP requests
updated the logic for retrieving the compacted ColumnFamily to use Integer . MIN _ VALUE instead of a conditional expression to improve code readability and
modified return statements in ICC _ Profile . java and ColorConvertOp . java and added a new InvalidRenderIntentTest . java file to
[ # 7370 ] feedback contribution question : do not allow contribution question to be edit ( # 7371 )
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
kafkasink : remove serializable from kafkarecord , suppress build warning
added PGConnection as a proxy instance in PooledConnectionImpl and implemented a test for PGConnection in BaseDataSourceTest to enhance connection handling and
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info for token encryption configuration and changed log level from warn to trace in TokenAuthenticationHandler . java to improve logging
removed the @ Deprecated annotation from Hazelcast . java to indicate that the class should no longer be used in favor of a new implementation
added methods to create completed command reports and send topology update events in the server action classes to enhance the handling of topology updates and improve error logging
added support for reading and writing iterators in NamedListCodec to enhance functionality for reading and writing iterables in the NamedListCodec
fix npe in migrationmanager . assigncompletelylostpartitions ( ) when state be null .
added schema inclusion rule to ApiExample . java to ensure public schema is included in generated data
updated the expected value of the mean and var from 3.0 to 7.0 in StreamExpressionTest . java to reflect the correct expected
refactor ring creation to ensure valid coordinates before creating a linear ring to improve robustness by ensuring valid coordinates before creating a linear ring
added methods to retrieve base name and dimension count from ConstantPool to enhance functionality by providing access to base name and dimension count
added setdebugevaluationoutputfornexteval ( ) method to formulaevaluator , sheetutil , and xssf formulaevaluator to
test : migrate refactoring test to junit 5 ( # 1305 )
removed the second parameter from the ExoPlayerProfile constructor in LegacyMediaManager . java and modified the condition in PlaybackController . java to
added a return statement to the DynamicStyleBar class to ensure that the method returns without executing further logic
added logging statements to track the state of REPL dump in the Utils class to improve visibility into the state of the REPL dump for better
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and facilitate future development
updated the condition to promote both object and boolean types in MethodEmitter . java to ensure compatibility with both object and boolean types
add address nuller to llvmfunctionstartnode and make stackframenuller public
refactor multiple Java classes for improved consistency and clarity to enhance maintainability and readability of the codebase
add unit test to verify transaction - aware cache configuration
added a method ` calculateBoundingBox ( ) ` to calculate the bounding box of a mesh based on its attributes to enhance the mesh ' s bounding
added a target hash function option to the TargetsCommand class to allow customization of hash computation based on the specified hash function
refactor DefaultConfigurationProperties for improved clarity to enhance code maintainability and readability
added high light color and alpha settings for multi - chart components in ListViewMultiChartActivity and modified highlight alpha in BarChart to improve visual
updated the mapping of ` tmpPg ` to ` sgPathPlanMap ` in ` ClusterPlanRouter . java ` to ensure proper handling of
[ hotfix ] [ test ] fix checkstyle violation in infinispanremoteproducerit
added checks for local repository directory existence and refactored artifact fetching logic to use a lock mechanism to improve robustness by ensuring the artifact is
updated the fragment shader to include a conditional compilation for GL _ ES to ensure compatibility with OpenGL ES rendering
hbase - 25836 fix concurrentmodificationexception in rsgroupinfo
added a try - catch block to load the JspPage class and changed the log level from warn to debug for TldProcessor configuration to improve
updated version handling in CustomAnalyzer and added a test for version aware filtering in TestCustomAnalyzer to ensure accurate version analysis and improve test coverage for
added a test method to verify package archive information retrieval in ShadowPackageManagerTest to ensure correct retrieval of package archive information from the package manager
replaced direct calls to ` Method . invoke ` with ` MethodUtil . invoke ` and added package access checks to enhance security by ensuring proper
added imports for ProjectConfigurationStartEvent and TaskStartEvent , and modified the progress listener to include task and project configuration operations to enhance progress tracking
removed synchronization block from AndroidWebDriver . java to improve performance by reducing unnecessary synchronization
do n ' t throw ` ` poolinitializationexception ' ' if ` ` initializationfailtimeout ' ' be set to 0
removed the timeout parameter from the getResult method and added an error method in the Net class to simplify the method signature and provide an error handling mechanism
changed the ` isNative ` field to be transient and updated the ` addEntry ` method to use a default value of ` false ` to
updated error message formatting in CEntryPointCallStubMethod . java to improve clarity of error messages for better debugging
[ core ] rename ruleenablehandler to ruleenablementactionhandler ( # 4569 )
refactor code to improve readability and maintainability to enhance code clarity and maintainability
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of authentication requests and enhance debugging information
updated method names from ` getBasicSourceOptions ( ) ` and ` getFullSinkOptions ( ) ` to ` getBasicSinkOptions ( ) ` and
added error handling for repository retrieval in UsersPanel . java to improve robustness by providing a clear error message when the repository is not found
added support for font file extensions " . otf " and " . OTF " in font manager to enhance compatibility with additional font file formats
refactor annotation matching logic to improve clarity and correctness to enhance code readability and maintainability by using more descriptive variable names
updated log level from " OFF " to " SEVERE " in Grep . java to improve error reporting for better debugging
do n ' t log message in faulttolerantchunkprocessor when debug be not enable
simonstewart : use a single list instead of separate list for include and exclude .
added a check for the ` shouldMoveToDefaultScreenOnHomeIntent ` method and modified the ` openFolder ` condition to include it to
updated maximum bitrate from " 110 " to " 30 " in the configuration to improve performance by reducing the maximum bitrate
removed duplicate option retrieval logic in CommandLineParser . java to simplify the code and improve readability by eliminating redundancy
trim whitespace from the description return value in MutableDatabaseProperty . java to ensure consistent description formatting and avoid potential errors
updated the output filename format in XOMParserTest . java to improve clarity and consistency in file naming
removed pid from error log message in ProcessBesuNodeRunner . java to simplify log output for better readability
added ` getLoadedMusic ( ) ` and ` getLoadedSound ( ) ` methods to ` MusicLoader ` and ` Sound
removed unnecessary imports and simplified type assignment in OnBeanCondition . java to improve code readability and maintainability
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording functionality for testing purposes
[ java ] : do n ' t select the cpu pause button if it ' s already active .
refactor preference handling in Preferences . java to use a dedicated method for adding accounts to improve code readability and maintainability by reducing red
added comment to clarify the purpose of the sendpacket method .
modified StringBuilder initialization in ObjectInputStream to conditionally allocate based on utf length to optimize memory allocation when utf length is greater than Integer . MAX _ VALUE
set spring . metrics . export . statsd . enabled to false in WebEndpointsAutoConfigurationIntegrationTests . java to disable statsd export functionality
refactor InterruptedException handling in the code to improve readability and maintainability
refactor ServiceTicket class to improve code readability to enhance maintainability and facilitate future development
updated the SSL connection handling logic in ConnectionCheckOperation . java to improve clarity and correctness of the connection check logic
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 565 : add
[ ds - 3892 ] fix itemowningcollectionupdaterestcontrollerit to return ok status
replaced the use of ` sExemptOfPasscodeActivites . add ( AuthenticatorActivity . class ) ` with ` i . set
refactor ( template ) : remove deprecate code in patternparameterconfigurator
changed the return type of beginDraggingWidget from void to boolean and added null check for drawable before executing its logic to ensure proper handling of
added JUnit Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root and collected components in DynamicStyle . java to avoid potential NullPointerExceptions during processing
add the ability to save / load the confusion matrix a a part of the test
fix a bug report by danielwagnerhall on fossies . org
added unit tests for Bluetooth state management in ShadowBluetoothHeadsetTest . java to ensure correct behavior of Bluetooth headset state management
corrected the spelling of " # autowire " to " # autowired " in PropertyBindingSupportTest and PropertyBindingSupport
added " clone " method to objectMethods set and introduced a new constant FINALIZE _ METHOD to enhance object method handling and improve code cl
added null checks for counters object in IntegrationTestBigLinkedList . java to ensure proper verification behavior when counters object is null
implement can _ get _ instance _ info in jdwp for objectreference . referencingobjects . id
updated the ` setRegisteredServiceFilter ` method to use ` serviceId ` instead of ` service ` to ensure that the service matches the specified service
added a null check for the activity before invoking runOnUiThread in PhotoFragment . java to avoid potential NullPointerException when getActivity ( ) is null
[ java ] fix sonar warning : use logger instead of logger
added stringType property and its getter / setter methods in DatabaseAdaptor and modified table creation in JDBCSessionDataStore to allow for customizable string types
updated UIMAUpdateRequestProcessorTest to check for " suggested _ category " instead of " language : english " and modified the test to
refactor thread name management by introducing ` updateThreadName ( ) ` and ` resetThreadName ( ) ` methods in ` SessionState
refactor TaskletAdapter to improve code readability to enhance maintainability and facilitate future development
[ drools - 2200 ] fix npe in evaluation of dmn model with negative value
enable texture map creation on macos by default
added a tooltip text to the showCGCP checkbox in RocketPanel . java to improve user interface clarity by providing a more descriptive
replaced ` owner . getTypes ( ) . add ( e ) ` and ` owner . getTypes ( ) . add ( i ) ` with
add support for mnemonic text in hot reload action ( # 4560 )
use stringtemplate . defaulttemplate instead of use isspreadsheetlabel ( )
change BRIGHTNESS _ FACTOR calculation from intValue ( ) to doubleValue ( ) to ensure correct conversion of BRIGHTNESS _ FACT
add context and date to history entry , remove unnecessary branch
added a isAdmin parameter to the createUser method and implemented user list and admin check in HomekitAuthInfoImpl to enhance user management by allowing admins to
added null checks and equality checks for ` indexedWriteMethod ` and ` writeMethod ` in ` IndexedPropertyDescriptor ` and ` PropertyDescriptor ` ,
updated logging statements to use placeholder syntax instead of string concatenation to improve performance and readability of log messages
updated method parameter names in Context . java and Response . java for consistency to improve code readability and maintainability
add setcapabilitiesfrompongebuilder ( ) method to mixinitemstack so that it can be override by subclass .
[ hotfix ] [ test ] fix the unit test error of camel - jbang
added validation for both CreateSmartContract and TriggerSmartContract types in Wallet . java and modified GetContractServlet . java to enhance contract creation logic
added package - info . java files for several packages in the com . ibm . dtfj package to provide package - level documentation for better
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a loop for handling node additions to improve thread safety and
added a check to ignore duplicate JavaFileObject instances before adding them to trees to prevent duplicates and improve code clarity
updated the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to disable IPv6
added support for multiple parameter names in the LoginServerTokenEndpointFilter constructor to enhance flexibility in handling OAuth2 token password granting
add ` ` c ' ' a a valid language key for cpp
replaced the direct instantiation of ` ThreadPoolExecutor ` with a new method ` MoreExecutors . newSingleThreadExecutor ( ) ` in `
added HTTP headers for cache control and expiration in FormAuthenticator . java and updated response assertions in ConstraintTest . java to ensure proper caching behavior and
added exception message to log error message to improve debugging by providing more context about the error
updated HSSFTests to include new test classes for area , cell , range address , and sheet references to enhance test coverage and improve cl
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase files to improve code organization and maintainability
refactor output handling in TestCommand . java to check for null before retrieving the class directory to improve robustness by avoiding potential NullPointerExceptions
added access control priorities for resource URIs in Java2DRenderer to enhance access control control for better resource management
added a try - catch block to handle ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure the build does not fail if the JDK fails at
modified the ` HotspotThreadMBean ` and ` main ` methods to include a ` throws Exception ` clause and refactored CPU time
added a check for comments in TabsAndIndentsVisitor . java to ensure that comments are not empty before proceeding with whitespace checks
updated assertions and logging in SimDistribStateManager and TestTriggerIntegration to use a threshold of 100 instead of a hardcoded value to improve
updated equality checks to be case - insensitive in DatabaseChangeLog , RanChangeSet , AlreadyRanChangeSetFilter , and NotRanChangeSet
updated the ` getString ` method to return a default string value if the key does not exist in the map to ensure that a default string is
updated date and time formatting logic in TweetActivity to support military time and en _ us locale to improve user experience by providing
added a check for empty connections in StandardProcessSession to return an empty list when no connections are available
refactor focus request logic in DetailFragment to improve code readability and maintainability by encapsulating focus request logic
update extra class path handling in mmm App . java and ppp App . java to ensure proper formatting of file paths by removing leading slashes
make sure solve ( ) be synchronize to avoid memory leak
int - 1193 add some javadoc and an import to the genericmessage class
updated SQL queries in PostgresConnector and MapReduceJobHistoryUpdater for improved clarity to enhance readability and maintainability of the code
updated AquaFileChooserUI to conditionally set the selected file filter based on the presence of a file filter to improve user experience by
fix a potential deadlock in p2p transport manager
updated the method to return " TRUE " or " FALSE " for Boolean values in ArrayPtg . java and added a test case in Test
updated import statements in PGtokenizerTest . java to use specific assertions to improve test clarity and maintainability by using specific assertion methods
updated final variable handling in Java2TypeScriptTranslator and introduced new test cases in StaticsTests to improve clarity and correctness of final
added support for auto - increment columns in PostgreSQL by creating a sequence and altering a column to ensure that PostgreSQL does not support auto - increment
change how bytes are read and processed in DataInput . java to ensure correct handling of byte values and improve UTF - 8 reading logic
added assertions to verify vertical and horizontal physical pixel spacing in ImageParserTest to ensure that the metadata contains expected values for vertical and horizontal pixel spacing
updated the method call from ` getParent ( ) ` to ` getParent ( ) . getParent ( ) ` in ` Component . java ` to ensure
refactor import statements and formatting in various Java files to improve code readability and maintainability
replaced ENGINE _ finish ( ) with ENGINE _ free ( ) and added ENGINE _ init ( engine ) in NativeCryptoTest . java to
added iteration method to multiple controller classes and updated event firing logic to improve iteration handling and ensure consistent event firing across controllers
fixed memory leak in formdatahttpcontentprocessor and nettystreamingfileupload
added a call to deleteLogs ( ) in TestRecovery . java to ensure logs are properly cleaned up after tests
modified the URL handling in BrowserActivity to launch a new activity if the URL contains " twitter : / / " to improve user experience by allowing
added a method to await the host status of a specific host in DeploymentGroupTest to improve test reliability by ensuring the host status is properly
changed logResult parameter from false to true in VisibilityController . java to enable logging of list labels action for better visibility tracking
updated the maximum number of retries in RestTemplateRetryTests from 0 to 25 to improve test reliability by allowing more aggressive retries
added @ Override annotations in StandardTypeMapperComponent . java to ensure proper method overriding and improve code clarity
added support for a new resource type " fraction " and integrated it into the ResourceLoader and Converter classes to enable handling of fraction resources in the
removed confirmation check for file writing in BasicFrame . java to streamline the code by eliminating unnecessary checks
added checks for tagGroupId and tagArtifactId before retrieving the newer dependency version to ensure that both groupId and artifactId are not null to avoid potential
hbase - 25827 namespacestatemanager should throw quotaexceededexception if the number of table in the namespace exceed the
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
8274889 : [ testbug ] testfuzzpreloop . java fail with ` ` unmappable character ' '
added a check to ensure f0 is non - negative to prevent potential negative values in HTSVocoder
removed connectionCatalog initialization and updated logging statements in SchemaRetriever . java , and added null checks in TableRetriever . java to improve error handling and
add a getcharset ( ) method to b2cconverter and use it in inputbuffer .
added SharedPreferences support for allowing empty pages in the workspace to improve flexibility in handling empty screens based on user preferences
added a warning log message indicating that cucumber - needle has been deprecated to inform users to use cucumber - needle2 or c
replaced ` TestActivityWithAnotherTheme ` with ` Resources . newTheme ( ) ` for theme management to simplify theme handling and improve
updated error message formatting in VerifyFast . java for better readability to enhance clarity of failure messages for better debugging
no effective change - remove pre - alter migration for mariadb
added checks for IdentNode in CodeGenerator and introduced prototype getter and setter functions in ScriptObject to ensure proper handling of IdentNode properties and enhance
modified the shuffle method to use a random seed for readers to ensure consistent randomness in the readers collection
updated display name assignment logic in UsersAndGroupsSearchProvider . java to differentiate between known and remote users to improve clarity and accuracy of
updated path handling in CookieRetrievingCookieGenerator to ensure a default value is used when the path is blank to improve robustness by preventing
updated closing braces in multiple Java files to improve code readability and maintain consistency
updated variable declaration from ' cacheName ' to ' final ' and added a check for total backup count in AbstractCacheService . java to ensure correct
updated the comparison logic in ValidationResult . java to check if pageNumber is non - zero instead of being equal to ensure that pageNumber is not equal to
added a null and equality check for the focused widget in the highlighted condition to ensure that the focused widget is not null before proceeding with highlighted
fix checkstyle issue in util / soundutil . java
refactor ` ApplePackageDescription ` to use ` getAppleCxxPlatformFlavorDomain ( ) ` for retrieving platform flavors
add a test case for clickhousestatementimpl . clickhousifysql ( ) to verify that format tab - separated with name and type
renamed ` onConnect ` to ` onAccept ` in ` ServerSessionListener . java ` and ` AbstractHTTP2ServerConnectionFactory . java
fix a typo in the javadoc of treebankcorrector
added a new file ` TestGetLoggerNPE . java ` to test the behavior of ` getLogger ` and ` getLogManager ` to ensure
replaced ` Map < Object , Object > sharedMap ` with ` ConcurrentHashMap < Object , Object > data ` in multiple classes to improve
do n ' t swallow exception in getobjectvolatile and getobjectfieldindex
added support for the NEXT VALUE FOR feature in NextValExpression and related classes to enhance flexibility in specifying the next value for expressions
improve error message when resource bundle be not pre - cached
updated write buffer management in BoundedLocalCache and added a test for pending writes to improve cache management and ensure that pending writes are cleared correctly
added a new parameter " Leverage _ Level " and an order direction property in the QuoineNewMarginOrderRequest class to enhance the
added a new method ` boundInitialization ` in ` PropertyDescriptor ` and created a test class ` Test7192955 ` for property descriptor validation
replaced ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface in ` Lwjgl
added a check to reset ` buttonsAwatingRelease ` if it is not null to ensure proper cleanup of the parent form ' s buttonsAw
fix linecell height calculation in setwrapwidth ( )
fix typo : argomento del parser non deve essere nullo
replaced HashMap with LinkedHashMap for paramValues in CustomChangeWrapper and CustomPreconditionWrapper to maintain insertion order
simplified string concatenation in multiple Java files by replacing string concatenation with String . format for better readability and performance
replaced the method to retrieve the namespace URI with a direct method call to simplify the code and improve readability by eliminating unnecessary context
added support for nested joins in multiple test classes to enable support for nested joins in the testing framework
server : allow admin only for non - root admin user ( # 4569 )
added support for caching JavacFileManager in SourceFileManager . java and updated CompletionTaskProcesor constructor to include cursor parameter to
added configuration for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure proper
replaced JUnit ' s assertThat with Hamcrest ' s assertThat in KuduIOIT and XmlIOTest
use util . createhandler ( ) instead of new handler ( ) for text and metadata renderer
fix ( ilp ) : fix symbol map offset calculation ( # 2370 )
removed debug print statements from TermFilterTest . java to clean up the code and improve readability
removed the ` Reflection ` class and its associated methods from ` jooby . internal ` to streamline the code by eliminating
refactor ThreadlessExecutor to use getter and setter methods for ` finished ` and ` waiting ` to improve code readability and maintainability by
refactor error handling in DateTimeFormatter and add a new test for handling null arguments to improve error handling and ensure proper handling of DateTime exceptions
renamed ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and introduced a new method ` chunkLengthInKB ( ) `
added a case for WILDCARD in Types . java and created a new class T7034495 with interfaces to prevent crash during type resolution
replaced the ` do ` loop with a ` while ` loop for handling ` key ` in ` LotsOfEvents . java ` to
updated conditional checks for character matching in TransclusionDecideRule . java to improve clarity and correctness of character processing logic
do not print micronaut version if it ' s not available
added tests for the Area3DPtg formula handling in TestBugs . java to ensure correct functionality and correctness of name records in the
updated MindIcon creation to include a description when the name starts with a slash to ensure proper description formatting for MindIcon instances
modified the onHomeIntent method to accept a boolean parameter for internal state handling to enhance flexibility in handling home intent events
refactor preferDependencyTree handling in CxxBuckConfig . java to improve code readability and maintainability
added an ` showDetails ` method to ` FileDisplayActivity ` , ` FolderPickerActivity ` , and ` FileFragment ` classes to allow
updated function name from " $ apply " to " apply " across multiple files to standardize function naming conventions and improve code readability
add randomization to minimalencoder so that the codeword do n ' t exceed the minimum symbol size
added header ' s require and since properties to the SourceBuilder class to enhance the clarity and usability of the source builder ' s output
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure the adapter updates the adapter after data changes
removed the method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to simplify the interface by eliminating unnecessary methods
updated type checks in ` RemoveJavaDependenciesAdapter . java ` and added assertions in ` Collections . java ` to improve type handling and ensure correct
chore ( crt ) : remove unused getter from defaults3crtasyncclient
updated error messages in doDudPasswordTest for corrupted stream out of bounds length checks to clarify the expected error conditions related to stream
improve test failure message when the collection be not find
fix bug in graphbuilderphase when bailout or graalinternalexception be throw .
mow - 1351 make sure we do n ' t crash if an image do n ' t exist
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future development
added a limit parameter to the getOrderBook method and updated its implementation in YoBitMarketDataService and YoBitMarketData
rename gotwrongoomeexception to heapOOMEexception to make it more clear
set maxstringlength ( int ) for dataflow to max int . max _ value
modified the way engines are retrieved and locked in PmsConfiguration . java to ensure default values are used when no engines are specified
renamed ` FullIterator ` to ` WheelIterator ` and updated method implementations in ` TimerWheel . java ` and ` TimerW
make sure we do n ' t get any exception when process old xml file
replaced hardcoded timeout value with a constant for waiting chunk readiness to improve code readability and maintainability by using a named constant
changed the visibility of the " uncomplete check list " menu item from true to false to ensure the " uncomplete check list " menu is
refactor DefaultResultSetHandler to use resolveDiscriminatedResultMap and introduce a new Contract class for handling discriminator results to improve code cl
added null check for defaultHome and improved unregisterReceiver logic to enhance robustness by preventing potential null pointer exceptions
removed the import and annotation for VertxGen in PumpImpl . java to streamline code by eliminating unnecessary dependencies
removed unnecessary casting of ` FileDisplayActivity ` to ` FileOperationsHelper ` in ` FileDetailFragment . java ` and ` OCFileList
trim whitespace from tokens in ConfigAttributeEditor and add a test for attribute values to ensure that whitespace is preserved in configuration attributes
rename ClassUsingAnotherAuxiliary and SelfClassWithAuxiliary files to improve clarity and consistency in naming conventions
svm : add a substitute for getunnamedmodule ( ) for jdk 9 +
added a check for " pg _ " prefix in the case of ' r ' to set relKind to " SYSTEM TABLE " based on the
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated the RQST field size from - 1 to 1 in ThriftHiveMetastore . java and modified exception handling in HiveMeta
added a new module - info . java file for the com . speedment . runtime . core module to define module - level exports and
added checks for flushing state and fill state in SslConnection . java to ensure proper handling of flushing and interference with encrypted output
updated Log4j2LogDelegateFactory and LoggerFactory to improve logger initialization logic and added a new NoExceptionInInitializerErrorTest class to
updated execution environment checks and added server VM checks in multiple test files to ensure compatibility with Solaris and improve test reliability
refactor ExecutableFindOperation , MongoOperations , and ReactiveMongoOperations classes to improve code organization and maintainability
replaced null with " org . postgresql . ssl . LibPQFactory " in PGProperty . java to ensure compatibility with the latest PostgreSQL
disable interprocessemaphore test that currently fail
added sorting functionality for theme keys in EditableResources . java to ensure consistent ordering of resource names by case sensitivity
added a new class ` OSvTerminal ` and modified ` TerminalFactory ` to support OSV terminology to enhance terminal functionality and support for
added additional file types " . gr " and " . grs " to the condition in ClassType . java to ensure compatibility with additional file
replaced HashMap with TreeMap for combinedVectors in DrillTestWrapper . java to ensure consistent ordering of elements in test results
added a condition to check if values size is less than names size in XPathEntityProcessor . java to ensure that only valid names and values are
refactor WebSocketPolicy class for improved readability to enhance maintainability and facilitate future updates
changed static boolean flags and methods in ShadowTelephonyManager and ShadowWifiManager to instance variables and methods to enhance immutability and
added parameter to the resolvemessage method to allow customization of resolution behavior
updated class instantiation and constructor handling to use wildcard generics for MethodVisitor , ClassVisitor , and CheckClassAdapter to improve type safety and clarity
added a new ` LoggingAuditService ` class for logging user authentication success and failure to facilitate auditing of user authentication processes
added nullability annotations to temperature parameters and updated temperature handling logic in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to improve
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5652 -
camel - 15836 : camel - http should use proxy host and proxy port to configure the http endpoint
updated the maximum encoding version from " 1.1 " to " 1.2 " in TemplateDTO . java to ensure compatibility with the latest
added a serial filter call to jdk . internal . util . StaticProperty . jdkSerialFilter ( ) in System . java to enhance
log the pool size when pool be enable
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple animation classes to simplify the scroller finish
updated the method signature of ` ensureRealtimeClusterIsSetUp ` to include ` ConfigUtils . applyConfigWithEnvVariables ` to enhance configuration
added methods ` isError ( ) ` and ` error ( String message ) ` to ` ValidationReport ` and updated validation status handling in ` Dis
replaced direct assignment of ` inlineQsb ` with ` closestProfile . inlineQsb ` and introduced new constants for QSB values to
added URL decoding functionality to the createClassPath method in SortedArrayStringMapTest . java to ensure proper handling of special characters in file paths
updated the regex pattern in the @ Given annotation from ' 10 ' to ' ( . * ) ' in TransformSteps . java to improve regex
fix npe in p2d with null image
replaced hardcoded timeout values with a configurable timeout variable in ` FaultToleranceTest . java ` to improve flexibility and maintainability by allowing
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to enable dynamic configuration of the Docker image for the environment
[ test ] do n ' t run system . gc ( ) in the test suite .
rename AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve clarity and consistency in naming conventions
replaced ` createHardLink ( ) ` with ` copyFile ( ) ` in ` SnapshotTaker . java ` and added error handling for
rename method ` appendToDescription ` to ` getDescription ` and update related logic in ` AsyncOperationDocProvider ` , ` OperationDocProvider ` ,
[ pytorch ] make sure all the NDArrays in the same device be move to the desired device
added a conditional check for ` Xml . Document ` before processing XML in ` Autodetect . java ` to ensure XML processing only occurs
updated test classes to use ` @ RunWith ( AndroidJUnit4 . class ) ` instead of ` InstrumentationTestCase ` to ensure
added GasLimitRule and ParentGasLimitRule to the list of rules in CommonConfig . java to ensure proper handling of gas limits based on
changed the visibility of the setupData method from public to private and added a static block to improve encapsulation and ensure the setupData method is
renamed the variable ` autocommit ` to ` runInTransaction ` in the ChangeSet class to clarify the purpose of the variable
fix ( stream ) : do n ' t close the deframer if the stream be already close
[ hotfix ] [ runtime ] add site . basurl to configuration doc
added a new test method ` testIssue154 ` to validate SQL parsing and deparsing of discount data to ensure correct parsing and deparsing of
refactor Common class to improve code readability to enhance maintainability and facilitate future development
updated logging and event logging for app launching in Launchable . java to improve clarity of logging and ensure proper resource management during app launch
refactor StreamExecDeduplicate class to improve code readability to enhance maintainability and reduce complexity
added warning log for exception when send kafka message to topic
dataes - 1343 - add setpersistentpropertyaccessorfactory ( ) and implement isimmutable ( ) method in simpleelasticsearch
fix setcoord ( x , y ) to return true if point be infinite
added swipe gesture handling and logging for scroll events in AskGestureEventsListener . java to improve user interaction responsiveness and debugging capabilities
updated the comparison logic in NGramEstimator to handle key comparisons more efficiently to improve the accuracy of the comparison logic for the NG
updated import statements from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` and ` ScenarioScoped
updated method calls in StatsLogCompatManager to retrieve folder icon properties to improve clarity and functionality by directly accessing folder icon properties
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new file TestSkeletonPredicates . java to implement test cases for skeleton predicates using loop predicates to ensure proper functionality and stress testing of
modified the ` SelectionHighlighter ` class to implement a ` TransferHandler ` and improved the ` equals ` and ` hashCode ` methods to
added a new ` StringResultConverter ` class and refactored ` stringValue ` methods in ` AsmRuntime ` and ` AsmUtil
camel - 19751 : disable test until camel - 19751 be fix
updated condition in JansiWinSysTerminal . java from checking for a non - zero object to checking for a zero object to ensure that
added null checks for buffer before setting it in setInBuffer method to prevent potential NullPointerExceptions when setting the buffer ' s capacity
updated the assertion in TestSolrDiscoveryProperties to use File . separator instead of a hardcoded value to ensure consistent file path handling across different operating
updated OS detection logic to support Windows and macOS pre - Catalina to ensure compatibility with different operating systems and improve compatibility with pre -
replaced ` File lockFile ` with ` String lockName ` in the ` Lock ` class and updated related methods to improve clarity and
replaced the appIcon variable with allApps for better clarity to improve code readability and maintainability by using a more descriptive variable
updated references from ` Invocable . InvocationType ` to ` ClientDatagramEndPoint . this ` in ` ClientDatagramEndPoint . java
corrected a typo in the SQL query string from " oreder " to " order by " in JdbcStepExecutionDao . java
modified button handling in LwjglInput . java to ignore unknown buttons to improve input processing by ignoring unknown buttons
update taskrestrepositoriesit to check for reject and approve
replaced instances of ` logger ` with a standardized ` LOGGER ` across multiple service response builders to improve code readability and maintainability by
updated expiration time handling in SsoAccessTokenProvider and modified test method visibility in SsoAccessTokenProviderTest to improve accuracy of token expiration time resolution
[ geos - 5398 ] fix test failure on window ( # 5398 )
added mock methods for alarm suppression management in GreetResourceMockedTest . java and updated imports in OciMetricsCdiExtensionTest
reordered conditional checks in JFrame . java for defaultCloseOperation to improve code readability and maintainability
added a null check for the MediaDatabase connection before executing the " ANALYZE SAMPLE _ SIZE 0 " statement to prevent potential NullPointerException when accessing
replaced the usage of ` metricsContext ` with ` solrMetricsContext ` in the ` SuggestComponent ` class to ensure consistency with the
refactor file and folder footer generation logic in OCFileListFragment . java to improve clarity and correctness of file list footer generation
set hash known hosts to " no " in ScpServerTestSupport and modify loadKeys method to return an Iterable < KeyPair > instead of
refactor SourceVersion class to improve code readability to enhance maintainability and ease of understanding
added a new test class ` ThreadFactoryTest ` for verifying thread factory behavior to ensure that ` MyThreadFactory ` and ` MyThread
refactor lockPeriod calculation to use a dedicated method for dynamic properties to improve code readability and maintainability by reducing duplication
added a new TicketModel instance in EditTicketPage . java to facilitate the creation and management of tickets
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow dimiss apps from predicted list
updated constructors in multiple assertion classes to accept a selfType parameter to improve type safety and clarity in constructor usage
added a new menu item for quote functionality and updated related constants in TweetActivity . java to enhance user experience by allowing quote functionality in the
fix a potential deadlock in jmeterthread . start ( )
renamed ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and updated related methods for clarity to improve code readability
added a conditional check for the result before offering failure and closing the consumer to ensure failure handling only occurs when the result is true
updated the option label from " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java and
[ hotfix ] annotate checkpointscleaner with @ threadsafe
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapterTest ` , and ` MockRestAdapterTest
do n ' t try to create the components . yml file if it do n ' t exist
added HIVE _ RESULTSET _ USE _ UNIQUE _ COLUMN _ NAMES configuration and updated column qualifier handling in TestJdbcDriver and TestJdbc
[ mary ] fix voice input text update in case of language change .
added session validity check and exception throwing in Session . java to ensure that an IllegalStateException is thrown when an invalid session is encountered
no effective change - remove unused class
updated the key pair size from 256 to 255 in JceX25519Domain . java to optimize key generation for improved security
added a codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with the latest postings
[ hotfix ] [ runtime ] add debug log for empty header list
added support for RSA / ECB / OAEPPadding algorithm in the OperatorHelper class to enhance security by enabling OAEP encryption
replace instances of DARWIN _ AARCH64 with MACOS _ AARCH64 across multiple files to ensure compatibility with the latest macOS
do n ' t swallow securityexceptions , log a warning instead
simplified the conditional check for UNIX OS in AbstractTest . java to improve code readability and maintainability
updated error handling and logging in FileUploadUtils and ControllerConf , and modified file handling in UploadRefreshDeleteIntegrationTest to improve error reporting and
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added ` BufferUtils . freeMemory ( bytebuffer ) ` to
updated the USE _ PIPELINE _ DOWNLOADER constant from false to true to enable the pipeline download functionality
modified the ` Calendar ` initialization in ` SimpleDateFormat . java ` and added a new test class ` Bug7130335 . java ` to
refactor variables in AllAppsView to use local variables instead of accessing mRollo . mState directly to improve code readability and maintain
server : do n ' t set default hypervisor if there be no default hypervisor
refactor StringBuffer methods for improved performance to enhance efficiency in string manipulation operations
added a uid property to the rule object in RuleResource . java to associate the rule with the specified UID
added null check for listener before unsubscribing to avoid potential NullPointerException when listener is null
added a property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class to enable pretty printing to the output of the
make access _ table public so that it can be use by other class .
update error messages in ` DataSourceInitializer ` and ` DataSourceInitializerInvokerTests ` to specify that no resources are found at specified location to improve cl
refactored xmpptransport . run ( ) into dorun ( ) so it can be override by subclass .
refactor multiple classes related to control and response handling to improve code organization and maintainability
added parameters for ` isUpgradeSuspended ` and ` effectiveClusterVersion ` to various methods in ` AmbariManagementControllerImpl . java
updated copyright year in FindsByCssSelector . java to reflect the current year to improve code clarity and maintainability
removed the declaration of wfields in Resolver . java to streamline the code by eliminating unnecessary variable declaration
updated OAuthProperties to set default encryption and signing key sizes to ensure proper initialization of encryption and signing properties
hbase - 15836 remove unnecessary call to getcolumnfamilies ( ) from htabledescriptor
updated the alias check implementation in SampleWebJspApplicationTests to use a lambda expression to improve readability and maintainability of the code
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , Serializable , and package - info files to improve code organization and maintainability
[ java ] add cluster . reset ( ) to reset the idle strategy .
updated the incrementation of currentChunkID in ChunkedWriter . java to ensure the correct chunk ID is used during the writer instantiation
added a new abstract class AbstractJobExecutor that implements JobExecutor to provide a base class for job execution handling
replaced the return statement with a replayFuture assignment in RecoveryStrategy . java to improve clarity and maintainability of the recovery process
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
do n ' t return empty list if discovery be disabled in abstractconsulclient
replaced ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` SecureRandom ( ) . nextInt (
improve error message when runtime compilation fail
removed redundant calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler to streamline time comparison logic by eliminating unnecessary calculations
added support for abstract method calls in ` CallsRealMethods ` and created tests for abstract methods in ` CreatingMocksWithConstructorTest ` to
refactor checkPackageAccess method to accept Class objects instead of String names to improve type safety and clarity in package access checks
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration assertions to improve test coverage and ensure proper plugin
replaced the ` dtm ` variable with ` model ` for better clarity and consistency to improve code readability and maintainability by using a
added handling for the REQUEST _ HAS _ TIS request in QuickstepTestInformationHandler and TestInformationHandler , and updated LauncherInstrumentation
removed unnecessary try - catch block in ConnectAction . java to streamline code and improve readability by eliminating unnecessary try - catch blocks
change the type of ` showRulesResult ` from ` Map < String , ShowOptions > ` to ` Map < BuildTarget , ShowOptions
added new files for ArrayHelper , Asserts , Comparables , NativeRegExp , and Objects , in the javaemul . internal package to
added support for HOME and END operations in the Less . java file to enhance functionality for handling home and end operations
refactor plot handling to directly iterate over connected plots to simplify code and improve readability by eliminating unnecessary synchronization
replaced the implementation of starting a folder sharing intent with a chooser intent to improve user experience by allowing users to view files directly from the
changed the access modifier of the constructor from public to package - private to allow external access to the constructor for better encapsulation
added basic constraints to the certificate generation to ensure compliance with security standards
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address failures due to incorrect transform
simplified the assignment of ' ps ' by directly assigning ' precisionStep ' in TrieDateField . java and TrieField . java to
removed the TaskbarStateHandler class and its associated functionality from BaseQuickstepLauncher . java to streamline the codebase by eliminating unnecessary
added a new file ` ArrayLength . java ` to test reflection ' s ` getFields ( ) ` and ` getDeclaredFields ( ) ` methods to
add timeout to hzstartit . tear down ( ) to ensure hazelcast process be clean up
replaced the Singleton annotation with a PostConstruct annotation and added an initialization method in ApplicationSettingsService to improve encapsulation and ensure application settings are
updated assertions and adjusted newValue assignment logic in Safepoint . java to improve clarity and correctness of value validation
updated thread name field type from String to Ljava / lang / String in OopUtilities . java to ensure compatibility with Java ' s String
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder . java and
set stroke and font on pgraphicsjava2d to avoid call strokeimpl ( )
[ hotfix ] [ table - planner - blink ] fix expression expansion for dynamic star column
added a new method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to retrieve nested records related to the ` Comment
added import statement for Messages and set a status warning icon in HTTPServer . java to enhance user experience by providing a clearer status warning for
use nativeevent . getmodifiersex ( ) instead of nativeevent . getmodifiers ( ) , a suggest by valerybokov
amd64countleadingZerosnode and amd64counttrailZerosnode : increase node cycle to 3 instead of 6
fix npe in as2 client when disposition notification be not set
refactor Locale class to improve code readability to enhance maintainability and facilitate future development
added a button to clear logs in the ErrorConsoleController and implemented clearLog methods in the ErrorConsoleViewModel to enhance user experience by allowing
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the animation controller
updated the handling of captions and messages to use LocaleHolder instead of ConsolePlayer to improve localization support and enhance code clarity
added connection pooling methods to ConcurrentBatchIdentifierTest and SequenceOptimizerIdentifierTest , modified execution count in AbstractTest , and improved resource management
[ java ] add operablink to the list of supported opera driver .
change catch block to catch all exception , and show an error dialog if download fails .
added multiple new product entries for LIFX features in the LifxProduct . java file to enhance functionality and improve user experience by providing additional
added asynchronous request setup in OverseerCollectionProcessor and modified CollectionsHandler to use it to enable asynchronous processing for replica creation in the Collections API
removed unnecessary private static final modifiers from PostgresDatabase . java and PostgresDatabaseTest . java to improve code readability and maintainability by
updated LogPanel and SummaryPage to use objectId instead of null to ensure correct reference ID is used when creating LogPanel instances
updated the bone ' s parent tail vector unit from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to correct
added a browserDestroy method and modified the destroy method in AndroidImplementation . java to improve resource management by stopping the browser component after destruction
added a waitForActiveCollection call to the AutoScalingHandlerTest to ensure that the test waits for active collections before proceeding with tests
refactor the loop to use an index - based approach for processing array elements to improve readability and maintainability of the code by using a
updated the SoftResetAction to check for controller states instead of isIdle and isPaused to improve accuracy in determining the state of the backend
disable on - disc stream cache to speed up texture pack reloading
added conditional logic to retrieve the parent folder from the media renderer in Request and RequestV2 classes to ensure proper handling of media resources based on
fix typo in networkofferingvo : ispersistent - > persistent
updated FileOutputStream initialization to include a close method that deletes the temporary file to ensure proper resource management and prevent potential memory leaks
added error handling for 403 responses in StandardGitHubRepository . java to improve robustness by logging specific headers when posting issues fails
log4j2 - 1348 fix messagefactory2adapter . getoriginal ( ) to return the wrapped instance
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress serialization warnings
updated regex pattern from " ( 1 - 9 ] { 1 , 2 } ) " to " ( 1 - 9 ] { 1 , 3
set initial and dismiss delays for ToolTipManager in ExtractionModelFrame . java to improve user experience by providing smoother feedback during
refactor ProjectCommand to use a passedInTargetsSet for target graph creation to improve code clarity and maintainability by reducing redundancy
added timezone setting and formatted 2445 time in TimeTest . java to ensure consistent time formatting across different environments
refactor MediaSessionConnector class to improve code readability to enhance maintainability and facilitate future development
use the handler ' s sslimpl instead of the jssefactory to get the ssl support
updated accuracy display in GpsLoggingService to use the current location ' s accuracy instead of the altitude to improve accuracy accuracy display accuracy for better
added a method to check if futures are enabled and updated related service calls accordingly to ensure that future transactions are only processed when futures are enabled ,
refactor admin account management to use instructor course table and instructor account table
added a method to set the accept queue size in ThriftHttpCLIService to optimize thread management for improved performance
replaced direct calls to getClass ( ) . getName ( ) with a constant PROPERTY _ DISABLE _ WATCHER in PathWatcherService .
camel - 14284 : camel - jms - allow to configure jms transport to use ssl
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated test methods in ` TestWindow
updated the calculation of duration in GCInspector . java to handle cases where the duration may be zero for a really fast collection
fix nodewithjavadoc to return empty optional for method with line comment
replaced the ` reserveMemory ` method with ` readReservedMemory ` and modified its implementation for macOS to streamline memory management and enhance
added calls to checkForRegionClosingOrSplitting ( ) in IndexRebuildRegionScanner . java to ensure proper handling of region closing events
hbase - 25827 hbaseadmin # waitforoperation should include procid in exception message ( jesus camacho ro
camel - 14284 : camel - cxf should be able to configure the serviceclass of the wsdlservicefactorybean
refactor YamlChangeLogSerializer to use a list for storing database change logs to improve clarity and maintainability of the serialization process
replaced ` println ( ) ` with ` print ( ' \ n ' ) ` for output formatting in ` SchemaPrinter . java ` to
replaced message sending logic for regenerating roads in DebugRoadRegen . java and modified schematic handling in Schematic
updated references from ` getContext ( ) ` to ` getActivity ( ) ` for ` nowPlaying ` and ` footer ` in ` HomeFragment
updated Hibernate annotations to use " native " strategy and added " native " generator to multiple classes to enhance compatibility with Hibernate ' s native
removed the country parameter from the getSystemTimeZoneID method and its usage to simplify the method signature by eliminating unnecessary parameters
updated the write method to include position and remaining parameters in BZip2Codec . java and modified ByteBuffer initialization in TestBZip2Codec .
ggb - 1341 move log initialization into startlogger ( )
added a constant ` VALUE _ TYPE _ EMPTY ` in ` Type . java ` and updated ` Value . java ` to use it to improve
updated equality checks for group comparisons from ` = = ` to ` . equals ( ) ` to improve code readability and maintainability by using
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
updated SimplexNoise . java file to improve code readability and maintainability
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` and updated tests accordingly to enhance the functionality of ` TargetGraphFactory `
fix typo in cfstore . getminrowcompactedsize ( ) and cfstore . getmaxrowcompactedsize ( )
make ` ` mod ' ' and ` ` modcontainer ' ' transient in modmetadata
modify the handling of the previous element in NativeArray to ensure proper removal of elements based on the presence of previous elements
updated file handling logic in FileUploader . java to correctly set the parent ID of the uploaded file to ensure the correct parent file is set for
added a new file UTF8ReaderBug . java to test parsing of supplementary UTF - 8 characters to ensure proper handling of supplementary characters
added unit test base on user forum issue
[ binance ] add depth / ethbtc / depth20ms to binance integration test
added a ` resetAllocation ` method to the ` Wrapper ` class and invoked it in ` SimpleParallelizer ` to reset the initial and maximum
removed unused import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
added synchronization around accessing system properties in mmm Agent . java and ppp Agent . java , and created a new AgentCMETest .
refactor ModelUtils class to improve code readability to enhance maintainability and reduce complexity
refactor AbstractDoubleArrayAssert for improved clarity to enhance maintainability and readability of the code
updated width and height calculations in Legend . java to account for index bounds to ensure correct calculation of width and height based on the length of
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` , `
updated the method to retrieve multiple values from a dictionary and modified the term frequency addition logic to handle multiple values instead of just the first one
replaced CxxLink rule resolution with BuildTargetSourcePath in Omnibus . java to improve code clarity and maintainability by
add a disabled option to the commanddownloadlatest command to inform the user that versioning be disabled
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added a ` numberOfFiles ` field in ` MediaFolder
removed the " - b " argument from AidlStep and GenAidlTest classes to simplify command - line arguments for better read
do n ' t delete obligation on edge equality check
added a TODO comment to test the functionality of the FakeHttpLayer class
[ hotfix ] [ runtime ] remove error handler from embeddedleaderservice
compositediscoveryclient : use flatmap instead of stream to improve performance
replaced instances of ` applySystemConfiguration ` with ` applyQualifiers ` in multiple Java files to standardize method naming and improve clarity
[ hotfix ] [ runtime ] add description for jobmanager . jobcomputer . recovers - from - task - failures option
replaced ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` and updated related visibility logic to improve clarity and maintainability of
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 562 : add
refactor ` AuditAliasCommandIntegrationTest ` to use ` @ Before ` annotation and encapsulate workspace initialization in a ` setUp ` method to
removed debug log statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up the code and improve performance
( chore ) camel - cxf : disable test that be not applicable in this scenario
added a try - catch block around the update ( ) method call to handle potential exceptions during periodic refresh
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to use @ RequiredArgsConstructor and addProviders method to improve code clarity
added background fill checks and updated color handling in HSSFCellStyle , HSSFFont , and HSSFPalette classes to ensure
refactor ZonedDateTimeFormatterBenchmark for improved clarity to enhance maintainability and readability of the code
refactor DistributedUpdateProcessor to use a new method for buffering updates and add unit tests for its functionality to improve code readability and ensure
added a null check for stageNr in the simulation list handler to ensure proper handling of null stages in the simulation list
allow / editreplace and / editscript to be replace with / editreplace / / editscript and / editreplace / / editscript (
refactor ExtendedMasterSecretExtension class to improve code readability to enhance maintainability and facilitate future development
changed variable declaration from non - final to final in AndroidInput . java to ensure immutability of the processor variable
added a call to ` onWriteFailed ` in ` WritableKeyProcessor . java ` to indicate when the stream reached the end of the stream
added a new constant " CUBE " to the MySQLDatabase class to support CUBE - specific functionality in the database setup
added a try - catch block around the rm method call in TestReplicationHandler . java to handle potential IOException during the removal process
rename ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and update related method names to
replaced reflection - based field access with direct method calls in DefaultOkHttpClientFactoryTest to simplify code and improve readability
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code readability and maintainability
added a null check for the variable ' os ' in RawMessageContentRedirectInterceptor . java to avoid potential NullPointerException when ' os ' is null
mow - 1351 make sure we do n ' t draw too much text on the left side .
added a boolean parameter ` fromCli ` to the ` jailerMain ` method and modified the exception handling logic in ` UIUtil .
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future development
added a preference for pulling unread notifications in TalonPullNotificationService to enhance user experience by allowing dynamic updates of unread notifications
added a check for the parent ' s object kind in IsNullNode . java to ensure that the parent object is an object before proceeding with
updated Box2DTest , Pong , and OrthographicCamera classes to improve memory management and simplify camera initialization to enhance code clarity
added null checks for mRecyclerView and LinearLayoutManager in ViewPostDetailFragment . java to improve code robustness and prevent potential NullPointerExceptions
changed log level from trace to warn for background operation aborting to improve logging granularity for better debugging
added logging of method instance name and flags in JimpleBodyBuilder . java to improve visibility of method instances for better debugging
make sure pointerup callback work on ie10 +
updated the ` getNotificationUsers ` method to include ` deviceId ` parameter and modified user retrieval logic to include the device ID to enhance notification user
fix for srtm _ data _ getiff from droppr . org to srtm . csiar . org
removed unnecessary property change listeners in MotifFileChooserUI and added a new test class bug6520101 to improve code clarity and
simplify hollowhistoryui , hollowdiffuiserouter , hollowexplorerui , and hollowhistoryuiserouter
refactor methods in BuildRuleResolver to improve exception handling and type safety to enhance code clarity and maintainability by providing clearer exception messages
added visibility control for transport spinner in HostListActivity to improve user experience by hiding the spinner when making a shortcut
added null check for attributes _ field and introduced new classes with annotations in T7043371 . java and T7073477 .
refactor backPressed ( ) method to return a boolean indicating success or failure to improve the handling of back press events across multiple fragments to improve
added LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB and DEFAULT _ LONG _ VIEW _ INDEX _ ENABLED to QueryServices and updated MetaDataClient
updated string append format from " V " to " v " in SDRTrunk . java to improve clarity of output formatting
updated private key path handling in PrivateKeyParserTests to ensure consistent path formatting to improve code readability and prevent potential issues with invalid file paths
removed the ` columnPosition ` parameter from the ` diffDropColumn ` method to simplify the method signature by eliminating unnecessary parameters
replaced ` Version . LUCENE _ 40 ` with ` TEST _ VERSION _ CURRENT ` in ` TestAddIndexes . java `
hbase - 15827 add option to importtsv to disable column family check
[ java ] : rename logrecordingchannel to logsubscriptionid for clarity .
replaced ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " ) ` and added visibility
added a condition to return early if the JSON node is of type " i " to optimize performance by avoiding unnecessary processing for single - element
refactor Procedure class to improve code readability to enhance maintainability and facilitate future development
updated resource bundle retrieval to include default locale and system class loader to ensure consistent resource loading across different environments
[ j2kt ] add normalizationpass for kotlin array creation .
modified the logic for incrementing position and counting terms in PerSegmentSingleValuedFaceting . java to ensure proper handling of missing counts during term
fix modmetadata . getauthorlist ( ) return null if there be no author .
added a new file ` OSGiTest . java ` with tests for the ` com . google . gson ` package to ensure compatibility with
refactor service enabling logic into a separate method for clarity to improve readability and maintainability of the code
hbase - 25827 htable # clearbufferonfail should not clear the buffer if it fail .
fix ( prettyprinter ) : add compliance level to annotation test ( # 1188 )
added hasuserdata ( ) method to simplefeatureimpl and property to provide a way to check if the feature have user data
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` to simplify method signatures by elimin
refactor RelyingPartyRegistration class to improve code structure to enhance maintainability and readability of the code
added a method to enable logging in the JavaCompiler class to enable all handlers for improved logging control
added a new file ` InJavaSourceSet . java ` and modified ` UsesJavaVersion . java ` to utilize it to implement a
updated the resource loading logic in TestGDALParser . java to use a dynamic filename and command to improve flexibility and maintainability of the
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of getter objects with specified attributes
removed the use of an external storage preference in the SDK version check to simplify the condition for SDK version compatibility
added a new constant ` INDEXER _ NO _ COMMIT ` to control commit behavior in the IndexerMapReduce and IndexerOutputFormat
createvolume api : do n ' t allow diskofferingid and snapshotid to be pass in
added null check for result . text in ToHtml . java and updated assertion in BaseTestCellComment . java to ensure that content is always
added null checks for amountToAdd and amountToSubtract in LocalDate , LocalDateTime , and ZonedDateTime classes to ensure proper handling of Period types in calculations
added a new file ` Issue382 . java ` with multiple error handling endpoints to enable testing of specific error types in the Joob
replaced the private static method ` signum ` with a direct import of ` Integer . signum ` and simplified the return statement to improve code read
added visibility control for the text holder in AttachmentAdapter to improve user experience by hiding the text when a condition is not met
fix ( import ) : fix check for reference in astparentconsistencychecker
simplified the retrieval of the profile from FirefoxOptions to improve code readability and maintainability
make liquidblock extend bucketpickup ( # 54691 )
fix intermittent test failure on slow ci server
updated time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure consistent time
[ java ] do n ' t create duplicate distinct observation in distincterrorlog .
updated boolean properties to include annotations for Nightly , Monster , AwaitsFix , and BadApple in LuceneTestCase
refactor sqlexecutionloggerimpl . createlogger ( ) to create an instance of sqlexecutionloggerimpl instead of create a new one
deny access to class , method , and proxy in graalcontext .
implement image . getpixels ( ) and image . setrgb ( ) in pgraphics2 .
updated HiveUtilities . verifyAndAddTransactionalProperties to include partition information in the transaction properties verification to ensure accurate verification of transactional properties for the
refactor scroll overlay logic and introduce last overlay sroll tracking in Workspace . java to improve clarity and functionality of overlay scrolling behavior
hhh - 14850 - introduce unmodifiablebatchbuilderimpl and unmodifiablebatchbuilderinitiator to allow for customization of batch size
improve error message when an unexpected input be encounter during an analysis
added a new class MockWithStaticStateDemo and a test method for spying on a class retains state to facilitate testing
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to validate SQL parsing and deparsing for
refactor security handling by introducing a null check for ugi before executing the action to improve robustness by preventing null pointer exceptions during
updated error handling in OpenALMusic . java to include the error code in the exception message to improve debugging by providing more context on the
camel - 16462 : camel - quartz should use resolveparameter instead of reslovestringparameter .
[ calcite - 4892 ] fix decimal precision and scale in rexnodeconverter
replaced direct calls to ` orElseGet ( ) ` with ` Optional ` for obtaining vendor and device properties to improve code readability and
updated the assertion in the updateAccount method to use a timestamp instead of a hardcoded test name to ensure the test accurately reflects the
replaced ` AxialStage ` with ` RocketComponent ` and updated selection logic in ` BasicFrame ` and ` DesignPanel ` to
added a longRunningTime parameter with getter and setter methods in Args . java to allow dynamic configuration of the VM ' s long running time based
updated the priority adjustment from AT _ MOST _ MEDIUM to AT _ MOST _ LOW in FindRefComparison . java and added a
updated import statements and method signatures in HttpServerProvider . java , ScriptEngineManager . java , and FtpClientProvider . java to improve code
mondrian : fix a bug in xssdecimalbinding where decimal . tostring ( ) return a string , not a bigdecimal
removed unnecessary Expectations import and simplified assertion statements in TestRestClientRequestImpl . java to improve code readability and maintainability
added a condition to check if the reference database equals the comparison database before proceeding with the unique constraint change check to ensure that unique constraints are
removed the ` addAndroidConstants ` method and adjusted the asset path handling logic in ` IjProjectTemplateDataPreparer . java ` to
replaced ` assertEquals ( 0 , s1122 . getRequests ( ) ) ` with ` await ( ) . atMost ( )
added user _ args and is _ daemon and timestamp to the ImmutableMap in ChromeTraceBuildListener . java and ChromeTraceBuildListenerTest . java
svm : fix resource bundle retrieval to use module - specific method
[ hotfix ] fix typo in hepplanner log message
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval and printing of exchange metadata to facilitate
replaced ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes with ` strictfp ` and added a strictness test in `
removed unparseIdentifier from columnNamesBuilder in ColumnStatsSemanticAnalyzer . java to simplify column name handling by directly appending the column name
added a test method ` replaceField ` to ` JavaTemplateContextFreeTest ` and modified ` contextFreeTemplate ` in ` BlockStatementTemplate
added a condition to check if the class is not synthetic in InstantiateStaticClass . java and created a new test for instantiating a static class
removed the call to ` projectFilesystem . getPathForRelativePath ( basePath ) ` in ` WorkspaceAndProjectGenerator . java ` to simplify the code
added functionality to handle pending rescues in IkStepDefinition . java to enhance control flow handling by managing rescues and conditions
changed equals ( ) and hashCode ( ) methods to non - final in AbstractType and added equal ( ) and hashCode ( ) methods to enhance
added a method to retrieve the default SyncLevel value and modified SyncLevel enum initialization to improve error handling and provide a clearer default synchronization level
[ hotfix ] [ test ] make test more resilient to time issue
added a condition to check if the slice state is not CONSTRUCTION or RECOVERY in RecoveryStrategy . java to ensure proper handling of
swapped the order of parameters in the create method call to ensure the correct image dimensions are used for rendering
added ` sdkPath ` to ` AppleBundle ` and ` SwiftStdlibStep ` classes and modified ` makeProcessExecutorParams ` to
refactor TransientBlobCleanupTask to use BiConsumer for cleanup callbacks instead of File objects to improve code readability and maintainability by using a
server : fix warning message in case of fail to create static nat rule
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct row type
refactor BetterBlockPos class for improved clarity to enhance maintainability and readability of the code
updated the proxy retrieval in EmbeddedVelocityToolboxView to use the class loader to ensure proper class loading for the servlet context
updated version handling in MainWindow , ConnectionSettingsPanel , and startup to use dedicated methods for nightly builds to improve code maintainability and
added support for OracleDatabase by removing trailing lines from statements in LoggingExecutor and JdbcExecutor to ensure proper handling of line breaks in Oracle SQL statements
make findbugs . nullderef . assumensp configurable
fix flaky test due to port conflict
updated BLOB _ SIZE , PLAY _ MARGIN , SLIDER _ MARGIN , and changed SLIDER _ M
added a multifactor authentication provider bypass configuration to DuoSecurityMultifactorProviderBypassConfiguration . java to enhance security by allowing
reformatted method signatures in MaxRectsPacker . java for improved readability to enhance maintainability and clarity of the code
( chore ) camel - jbang : fix checkstyle violation
added methods to set and get a help page in PMS . java and updated help page handling in HelpTab . java to improve user interface
added GeocodeProviderFactory and Constants interfaces to the project to provide functionality for geocoding and managing Omni Notes Beta
updated import statements from ` org . apache . lucene . analysis . util . CharArraySet ` to ` org . apache . lucene
[ hotfix ] [ test ] remove expectedexception from unit test
[ py4j ] do n ' t try to delete object that do n ' t exist in the protocol .
updated conditions in SegmentsInfoRequestHandler . java and modified test cases in CollectionsAPISolrJTest . java to improve code clarity and ensure
updated the calculation of ` numPredictiveAppCols ` to account for phone devices to ensure ` numPredictiveAppCols ` is set to
added a method ` hasScalarSubqueryInput ` to ` JoinUtils ` and updated its usage in ` DrillJoinRelBase ` to
added a new abstract class ` BlockBuildCraft ` and a ` onBlockRemoval ` method in ` BlockBuildCraft . java `
updated layout parameters for the search bar in DeviceProfile . java to ensure proper positioning of the search bar and improve layout responsiveness
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5652 -
initialized ` ms ` to null in ` HiveMetaStore . java ` and modified client shutdown logic in ` HiveMetaStoreClient . java `
updated the getDisplayScript method to accept a display category parameter and added a test for bug 7079486 to ensure the correct display script is
replaced static imports of ZkStateReader with direct access to ZkStateReader constants to streamline code by eliminating unnecessary static
replaced ThreadLocalRandom with a custom Random instance in StoreDirectTest . java to improve performance and reduce dependency on ThreadLocalRandom
added a condition to check if the launcher is ready before performing backup operations to ensure that backup operations are only executed when the launcher is ready to
updated error messages in Cell . java for clarity and consistency to improve readability and maintainability of error messages
added unit test base on user forum issue
rename variables and methods related to body space from " BodySpace " to " BarSpace " across multiple classes to improve clarity and consistency in
refactor ShadowProcess class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] [ test ] use temporaryfolder in filemessagetransitiontest
added debug logging statements to various Logger instances in Grasscutter . java to facilitate troubleshooting by providing
changed ` highlightCnstScrRngQuery ` and ` setHighlightCnstScrRngQuery ` methods to static in `
updated state check logic in Launcher . java and added getState method in Workspace . java to ensure proper handling of workspace states and improve state management
updated assertion classes for various array types to improve consistency and maintainability across the codebase
added a conditional check for ` args . cacheable ` before notifying a new template in ` SnippetTemplate . java ` to ensure that templates
added a new scope constant ` SCOPE _ SOLR _ CORE ` and modified related code to utilize it to improve scope management for Solr
updated the table creation statement to include a primary key column and added assertions for primary key retrieval in DatabaseMetaDataTest to ensure that the measurement table
rename ` ` -- permissions - config - path ' ' to ` ` -- permissions - config - file ' ' in pantheoncommand .
simplified session creation logic in HttpSessionContextIntegrationFilter to improve code readability and maintainability by reducing redundancy
added a new file TestIfWithDeadRegion . java that implements a test for string manipulation with a dead region to demonstrate the
corrected the spelling of " English UD " to " English USD " in the DependencyParser classes to ensure consistency and accuracy in
added HighResolutionTimer to manage concurrent access tests in SnowflakeIdGeneratorTest to ensure thread safety during concurrent access testing
added a static UI feature to AppSettings and modified MainFragment to conditionally hide the toast bar based on shared preferences to enhance user experience by
updated the return statement in WindowsSecurity . java to use a lambda expression instead of an anonymous class to improve code readability and ensure proper resource
replaced ` setParameter ` with ` setParameterIfAbsent ` in ` SamlRedirectLogoutHandler ` and added a check for non - empty client IDs
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to use localized strings instead of hardcoded strings to improve user experience
tika - 1346 - add mime type detection for ooxml and openxmlformats - officedocument . spreadsheetml file
added logging statements for glue loading and feature loading in multiple classes to improve traceability and debugging capabilities during the application
[ camel - 14850 ] fix xml output in camel - eip - documentation - enricher and camel - maven - plugin
add - dcassandra . skip _ schema _ check = true to skip schema check during migration
added debug logging for stored audio notify and playback devices in DeviceConfiguration . java to improve traceability of audio device configurations for debugging purposes
added WebsocketConfig class and updated ReactorNettyWebSocketClient constructor to accept ShenyuConfig to enable dynamic configuration of WebSocket frame
fix : cachevalidationlistener do n ' t work correctly with junit 5 .
modified content length handling in MoreIndexingFilter to check for non - empty values before adding to the document to ensure that content length is only added
do n ' t synchronize on the solving thread in defaultsolversolverjob
refactor createTimeseries method to internalCreateTimeseries and handle PathAlreadyExistException to improve code readability and handle potential PathAlreadyExist
added a check method to the Authz class to provide a way to check the authentication status of a boolean result
changed access modifiers of several methods from public to protected in multiple classes to enhance encapsulation and restrict access to these methods
server : fix the bug in check if a ip be in reserve state , in case the ip be in allocated state .
removed conditional check for RFC2616 compliance in HttpParser and updated test method names in HttpParserTest to simplify code and improve clarity by
refactor thread completion logic into a static method ` threadCompleteInitialization ` to improve code readability and maintainability by encapsulating initialization logic
added methods to create and retrieve the external storage directory in ShadowEnvironment and created unit tests in EnvironmentTest to enhance functionality and ensure proper functionality of
[ drools - 3892 ] fix type coercion for mvel 2.1 . 0 . drools9
refactor code for improved readability by using diamond operator to enhance code clarity and maintainability
added exception message to log message in ActionNode . java to improve debugging by providing more context about the error during the construct process
remove the tel : prefix from the number if it ' s already in the format
refactor visibility logic for shared file icon in FileListListAdapter to improve code readability and maintainability
deprecated the HIVEOPTSORTDYNAMICPARTITION configuration in HiveConf . java and updated its usage in TestTxnCommands3 . java to
updated constructor and variable names in ExecuteStatementOperation and Operation classes to improve clarity and consistency to enhance code readability and maintainability by using
replaced usage of Google Guava ' s Lists and Sets with Java ' s Arrays and HashSet in BTCMarketsStreamingAdapters and B
fix ogrdatastoretest to use gettype ( ) instead of getname ( )
removed the onErrorInStep method from StepListenerSupport . java to simplify error handling by eliminating unnecessary method
refactor Wallet class to improve code readability to enhance maintainability and facilitate future development
camel - 14284 : camel - netty - http should use the provided charset , not the default charset .
replaced ` System . out . println ` statements with logging statements in ` TestNonBlockingAPI . java ` to improve logging consistency and reduce
added a boundary check for the row index in DbConnectionDialog . java to prevent index out of bounds errors during database connection handling
[ net . sourceforge . pmd . rules ] add methodwithsamenameasenclosingclass rule
added ExtendedPlatformComponent to manage platform MBeans and created a new ExtendedPlatformComponent class to enhance platform management functionality by integrating ExtendedPlatformComponent
replace double quotes with single quotes in SQL queries to ensure consistency in SQL formatting
updated file paths for Bleutrade DTO tests to include " org / knowm / xchange / bleutrade / dto /
refactor TextEscapeUtils to improve code readability to enhance maintainability and facilitate future development
added a filter parameter to the FilteredQuery construction in AbstractSpatialFieldType . java and updated related tests in TestSolr4Spatial . java to
removed progress display and visibility checks for main form visibility in GpsLoggingService and updated auto - email functionality in AutoEmailHelper to improve user
replace ArrayList with HashSet and implement an iterator for inlinks collection to improve performance and reduce memory usage when iterating through inlinks
added a synchronized stopScan method to the TradfriDiscoveryService class to ensure thread safety when stopping the service
updated HiveMetaStoreClient to disable client filtering by default and modified testFilterForPartition method to accept a boolean parameter to enhance flexibility in
added ` Abandoned ` status to the ` requestWorkflow ` , ` bugWorkflow ` , and ` milestoneWorkflow ` statuses in ` TicketModel
change default value of columnAliasPrefix from " c " to null across multiple platform classes to ensure consistent behavior across different platform implementations
updated ` LlapRowRecordReader ` and ` LlapRowInputFormat ` to use ` BytesWritable ` instead of ` Text ` to
log a warning if run on a 32 - bit jvm on a 64 - bit system .
refactor conditional checks for ` PdfName . PARENT ` and ` PdfName . B ` in ` PdfCopy . java ` to improve code readability
added a new option DAEMON to the TerminalClient to enable daemon mode to provide a web pendant UI for better user experience
added a new file ` FlushIndexTask . java ` that extends ` PerfTask ` to implement index flushing functionality to facilitate
fix ( memtable ) : optimize memtable flush size calculation
added support for SEASONS output in MediaLibraryFolder . java to enhance sorting functionality to include SEASONS output
added a new file LocalSocketAddress . java to test IPv6 availability in a DatagramSocket to ensure that the socket connects to the IPv6
updated grid size points in GridSizeMigrationTask . java to ensure correct positioning of grid size steps
replaced calls to ` getName ( ) ` and ` getFields ( ) ` with direct access to ` ci . name ` and ` classInfo .
added read - only support and improved transaction handling in the Context class to ensure proper transaction management and prevent illegal state exceptions during read - only
updated LookAndFeelCommand . java to improve code clarity to enhance maintainability and readability of the code
updated the calculation of lastRunEnd and modified the conditional check in BlockBoxing . java to correct the logic for determining the end of the
updated the assertion in GracefulStopTest to check for both ClosedChannelException and EofException to ensure that the handler ' s thrown
replaced multiple lock - based operations with a single get method for managing HTTP response listeners to simplify code and improve readability by eliminating
refactor NetworkParameters class for improved readability to enhance maintainability and ease of understanding
removed conditional logic for setting account asset optimization in DynamicPropertiesStore to streamline asset optimization logic by eliminating unnecessary checks
added a new constant ` J9 _ GC _ POLICY _ NOGC ` with a value of 0 to manage garbage collection policies effectively
added error handling for invalid contract proto validation in TransactionCapsule . java to ensure proper processing of transactions and prevent runtime exceptions
remove strictexception and exceptiontypechecking a it ' s no longer use .
updated resource retrieval to use " en / " instead of " helpPre " and improved error logging message to enhance localization support and provide clear
added a new file ` ProcessorInfo . java ` to provide utility methods for determining available processors to facilitate the retrieval and management of
add - html option to printbugreporter ( default stylesheet be default . xsl )
allow logback . xml . location to be configure via system property ( # 3390 )
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to utilize a single method for updating cluster data to improve code readability and maintain
added conditional on the " spring . sleuth . propagation . tag . whitelisted - keys " property in SleuthTagPropagationAutoConfiguration
refactor the logic for setting ` rustDepType ` to use a switch statement for better readability to improve code clarity and maintain
updated the ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` as a parameter and added error handling to
hbase - 25827 halfstorefilereader . getfirstkey ( ) should seek to the first kv in the file ( # 2
hhh - 14850 - add @ generationtiming to allow customization of generationtiming
[ te ] add test case for layer norm ( nan )
refactor ` showShareFile ` method to use ` getFileOperationsHelper ( ) ` instead of direct calls to ` ShareActivity ` to improve
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of ` LiquibaseUpdate `
convert the proxy type from lowercase to uppercase in the Proxy . java file to ensure consistent handling of case sensitivity in proxy type configuration
add mod _ minecraftforge to make it easy to run the dungeon loot .
refactor JdbcDatabaseSnapshot to use separate keys for retrieving table columns and filter based on case sensitivity to improve code readability and maintainability
added a new Container with a CSS border with a label in CSSBorderTest . java to enhance the visual appearance of a label in the
make retryloadbalancerinterceptor conditional on status code
change layout parameter from FILL _ PARENT to MATCH _ PARENT in CellLayout to ensure consistent layout behavior across different components
updated the calculation of ` parentTaskName ` to use ` currentTimeMillis ( ) ` instead of ` nanoTime ( ) ` to improve accuracy of task
added error handling for invalid Add Service request in ServiceResourceProvider . java to improve robustness by providing a clearer error message when the input
simplified the return value of the hasHistory method in IndexDatabase . java to improve readability and maintainability of the code
[ giac ] fix round ( - x [ 0 ] , - x [ 1 ] ) in ca
refactor AnonCipherWithWantClientAuth class to improve code readability and maintainability
added @ Deprecated annotations to ProducerTemplate . java to indicate that these methods are outdated and should not be used in future development
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
use asserttrueallthetime ( ) in evictiontest to avoid flakiness
replaced ` encodeInternal ` method with ` encodePassword ` and updated variable names for clarity to improve code readability and maintainability by
replaced local reference to ViewTreeObserver with direct calls to mTaskRecyclerView ' s getViewTreeObserver ( ) to improve code readability
refactor Response class to improve code readability to enhance maintainability and facilitate future development
change sstableremetadata . maxtimestamp from long . min _ value to long . max _ value
set the callparticipantpanel ' s preferred size to match the callparticipantpanel ' s size .
added null and empty checks for replies in multiple adapter classes to ensure replies are not empty before proceeding to avoid potential NullPointerExceptions
added ` toString ( ) ` and ` equals ( ) ` and ` hashCode ( ) ` methods to ` HitbtcBalance ` class
fix ( sql ) : fix order by clause with in ( ) clause
replace return statement with addrs . toString ( ) in RetriesExhaustedWithDetailsException . java to improve clarity of the return value
replaced context - aware action handling with OpenCookie opening method in EditGcodeFile . java to improve code clarity and streamline cookie
updated HTTP client imports from ` org . apache . http . impl . client ` to ` org . apache . hc . client5 . http
updated energy adjustment logic in PipePowerWood . java to use the minimum and maximum energy instead of the minimum to improve accuracy of energy management
added a check to delete the temporary output file if it exists to ensure that temporary output files are properly cleaned up before use
changed the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a new test for retrieving trades
added time limit checks in ReplayProcessor and ReplaySubject classes and corresponding tests in ReplayProcessorTest and ReplaySubjectTest to ensure
updated the expected Citation string in CitationStyleGeneratorTest . java to ensure consistency in citation formatting
added constants and SQL statements for inserting and retrieving video HDR format in MediaTableFiles . java to improve code readability and maintainability by
show definition for equation - in - exam only for equation - in - exam style
fix npe in sipcommtextfieldui when there be no component
added caching configuration for meta scan when startrow is null and scanRoot is not null to improve performance by reducing unnecessary scans when scanRoot
updated the initialization script for the minimr command to ensure the correct SQL file is used for testing purposes
refactor Math and StrictMath classes for improved readability to enhance maintainability and facilitate future development
added a new BooleanFlag ENABLE _ TRANSIENT _ TASKBAR in FeatureFlags . java to enable transient taskbar functionality in the application
[ hotfix ] [ runtime ] fix typo in execution interface
added a condition to set density to 3f if scale is 3 to ensure correct density is applied when scaling is 3
renamed the ` optional ` field and related methods from ` optional ` to ` vararg ` in the Parameter class to clarify the
hbase - 25836 regionstatestore log should include exception in log message
refactor assertTrueEventually to use lambda expressions instead of anonymous classes to improve readability and maintainability of the code
updated log messages and refactored test class names for consistency and clarity to improve readability and maintainability of the code
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to enable the display of an arrow in the search UI
updated lock mode handling in Database . java and removed the testSetMode ( ) method from TestRowLocks . java to ensure proper lock mode
skip bigintegertest for linux / amd64 only
added type checks for Integer , StringValue , and IntValue in Scalars . java to improve handling of integer and string input types
updated primary key validation logic in CreateTableStatement . java to ensure proper error handling for empty or multiple primary keys
added conditional logic to set drawable resources based on LMP status in CellLayout , Hotseat , and Launcher classes to improve UI
fix an npe in vmservicemanager . getflutterviews ( ) when the isolate be n ' t set
added new headers configuration methods for content type options , XSS Protection , cache control , HTTP strict transport security , and frame options to enhance
refactor ObjectEnumerableAssert to improve code readability to enhance maintainability and facilitate future development
[ grid ] move devtoolsprovider from smoketest to distributedcdptest
added type attribute to @ AggregateRoot annotation in EventSourcingRepositoryTest . java to specify the type of the @ AggregateRoot annotation for
added support for handling prebuilt Python rules and libraries in the Python in - place binary to enable users to specify their own directories for prebuilt
added client authentication handling in NetServerOptionsConverter and updated related methods in HttpServerOptions to improve client authentication configuration and enhance code clarity
updated REPLDIR and REPL _ FUNCTIONS _ ROOT _ DIR paths to use the user ' s name instead of " / user /
update task view retrieval logic to handle primary and secondary task views to improve accuracy in determining task views based on their IDs
add timeout to amqptransformertest to avoid flakiness
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary calls
rename templateflowcontroller variable to flowcontroller to avoid ambiguity
updated the assignment of ` finalExchangeNum ` in ` OperatorTreeGenerator . java ` and added a new test in ` PipelineBuilderTest .
added usage declaration for ClassLoaderHandler in mmm module - info . java and ppp module - info . java to enable the use of ClassLoader
fix race condition in solverandpersistenceframe when set the working solution .
added JsonIgnore annotation to ApplicationSettings . java to ignore certain fields during JSON serialization
changed the condition from checking if throwable is null to checking if throwable is not null to ensure proper handling of null throwable cases
refactor queryInfo retrieval to use a local variable for clarity to improve code readability and maintainability
fix auto workbench crash when there be no craft
fix gl200 hdop decoder ( fix # 410301 )
updated variable names from ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
pdfbox - 4892 : add initializable interface to allow injection
add longtasktimer . sample to timerobservinghandler ( fixes # 269 )
changed ` SYNC _ DELTA _ RATE ` from ` float ` to ` double ` and updated calculations for fetch time to improve
add warn log for deprecated fragment expression in thymeleaf
change the type of _ attributes from HashMap to ConcurrentHashMap to ensure thread - safe access to the attributes map
http : / / issues . apache . org / jira / browse / amq - 4892 - fix for amq - 4
added new color constants and updated the extractInto method to handle fallback color extraction to improve color extraction accuracy and support for dark text hints
added accessibility check for the data folder in SketchBuilder . java to ensure that only accessible data folders are included in the srcFolderPathList
updated ` OmniNotes ` to return false for debug build type and modified ` NotesHelper ` to include a title parameter to enhance functionality
removed instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl to simplify the sessionRegistry initialization process
added logging for reconnection completion and failure in NettyStreamingService . java to improve debugging and monitoring of connection reconnection failures
replaced instances of ` Factory ` with ` Proxy ` in multiple files to standardize proxy implementation across the codebase
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management efficiency by using a
replaced StringBuilder construction with String . join for address formatting in SocketExceptions . java and updated exception message validation in ExceptionText . java to improve
added a check to ensure the view directory is under the repository to prevent errors when the view directory is not within the specified repository directory
remove unused tab header area in jabrefframe ( # 3390 )
added " - XX : + UseCompressedClassPointers " to multiple test cases in TestDumpAndLoadClass and TestDumpAndLoadClass
added error logging for update log states in PeerSync . java to improve error handling for non - active and non - replaying states
deleted the ConnectionHook . java file to the functionality is no longer needed in the project
solr - 12313 : remove testinjection . waitforreplicasinsync and replace with testinjection . waitforreplicasinsync
camel - 14284 : fix parameterassert . isofarrayenumspecifieswith ( string ) to equalto ( type ) .
fix apex module to work with new jorje version
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread pool management to improve thread management and resource management by utilizing a singleton instance
updated WebSocketAsyncConnection to use ByteBufferPool instead of StandardByteBufferPool to improve memory management for WebSocket connections
added scroll positioning logic to the thumbnail layout in UploadActivity to improve user experience by ensuring the thumbnail is scrollable at the appropriate position
fix ( sql ) : fix on timestamp override by other column alias
added an overridden method to ` LauncherAnimUtils ` and refactored animation handling in ` LauncherStateTransitionAnimation ` to improve code
added a check to disable the default user agent in the HttpClient configuration to enhance security by preventing unauthorized user agent usage
added a check for ` pubsubhubbub ` in ` FeedRefreshUpdater ` and modified ` ApplicationSettings ` to incorporate it
changed the access modifier of the finalize method from public to protected to allow subclasses to override the finalize method
updated the method to check for synthetic classes in StubJarClassEntry . java and modified the expected hash value in CalculateAbiFromClassesStep
move dspacewebapp to utils so it can be reuse
added null check for leftTableAlias in CalcitePlanner and implemented a method to retrieve table aliases containing a column to improve error handling for missing
updated the triggerKey method to include a prefix " Trigger " to improve clarity and consistency in key naming conventions
updated log level from info to warn for broadcast transactions and improved error handling to enhance error visibility and clarity in transaction broadcasting logs
make basicmaptest . put ( string key , object value ) more robust .
removed unnecessary whitespace in HiveClientConfig . java and TestHiveClientConfig . java to improve code readability and maintain consistency
added a new enum ` TlsClientCertPolicy ` and updated ` GitBlitServer ` to utilize it for client certificate validation to
added a debug log statement to indicate the success of subscribing to the authenticated feed to improve debugging by indicating the success of the subscription process
added support for WebSocket subprotocols and enhanced header handling in the WebSocket routing mechanism to improve protocol compliance and enable smoother communication between WebSocket clients and servers
added a debug log statement for the fetch request in HiveQueryResultSet . java to facilitate debugging by providing visibility into the fetch request
removed the dimension name from the HolidayEventFormatter to simplify the display of dimensions for better readability
refactor inner class handling and update related test methods in FinalizePrivateFieldsTest . java and FinalizePrivateFields . java to improve clarity and
refactor UnexpectedJobExecutionException to improve error handling to enhance clarity and maintainability of the job execution process
deleted the file ` module - info . java . extra ` and simplified the assignment of ` buttonShouldBeOpaque ` in ` Aqu
updated the handling of docsEnum and maxFreq in DrillSidewaysQuery . java and DrillSidewaysScorer . java to ensure
added a new entry for GeoDegeneratePath in classRegsitry to enable the use of a specific geospatial degenerate
removed the ` preFill ` parameter from constructors across multiple pool classes to simplify constructor usage and improve code clarity
added a condition to check if the taskbar is not in the launcher and modified flags in TaskbarStashController to ensure proper state management
added null check for default style before comparing with style in CascadeDeleteVisitor . java to avoid potential NullPointerException during style removal
refactor GuiUtil to use setSize and setMaxWidth methods for setting maximum size and preferred size , and update MarqueeLabel
refactor icon retrieval logic in FileTreeViewHolder to use TreeFileExtension for better file type handling to improve code readability and maintainability
replaced ` isEqualTo ` method with ` contains ` for string checks in ` ParallelUniverseTest . java ` to improve readability and
fix a concurrentmodificationexception in xmlreporter
[ native ] add test for native probability function
added ShutdownThread . deregister ( this ) method call in ClientContainer . java to ensure proper resource cleanup and prevent memory leaks
hhh - 14827 - sybasease15dialect should n ' t drop temporary table after use
simonstewart : do n ' t convert color to rgb for htmlunitwebelement .
refactor SolrCore , XMLWriter , DocIterator , FunctionQParser , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter to improve code organization to enhance maintainability and readability of the code
updated hexadecimal string format in VirtualAllocCommitUncommitRecommit . java to include " reserved 1024KB for Test " to improve clarity of
keep track of skipped ad group in ad playback state
added a suppression warning for UndefinedEquals in the MultimapSubject class to ensure the method behaves as expected when comparing two Multimap objects
updated the string resource from " deg _ text " to " unit _ hz " in the fetchPropertyValue method calls to ensure the accuracy of
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the use of ` putAll ` with ` new TreeMap < > ( includedLabelSets ) ` in ` TestLabelOptions . java `
added a constant NORMAL _ 4F and refactored the format handling in VertexLighterFlat . java to improve code readability and maintain
added tracing tags for ` grpc . message _ sent . visible ` in multiple interceptor classes to ensure consistent tracing behavior across different interceptor implementations
replaced ZoneId with TimeZone for timezone conversion in ScheduledTrigger . java to ensure consistent time zone handling across the application
added AsyncBucket and InMemoryExtension classes and updated method signatures to throw UnsupportedOperationException to improve error handling and support for asynchronous and custom time measurement in
updated the logic for determining the classes directory in resexhausted003 . java to improve clarity and ensure the correct class path is used
removed unnecessary whitespace in AbstractConnector . java to improve code readability and maintain consistency
updated OngoingStubbing . java file to improve code clarity and maintainability
refactor web server handling in Main . java to conditionally reuse based on the presence of a web server to improve flexibility in server management
renamed the variable ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` for clarity to improve code readability and
added a check to ensure thread allowlist is not empty before clearing it to avoid potential errors when clearing the thread allowlist
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity and consistency in
( chore ) camel - dmn : skip gap and overlap analysis when hitpolicy = collect
add a test for slidingwindow combiner to make it work with pcollection . combine ( ) .
added a check for ` allAppsDirty ` before binding all apps in ` LauncherModel . java ` and modified logging to include app icon
removed the check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to simplify the test by eliminating unnecessary assertions
updated the implementation of the ` Solution ` class to correctly calculate the number of beautifulTriplets based on input values to enhance the accuracy of
refactor AquaMenuBarUI to use AccessController for property retrieval and introduce a check for embedded LWCToolkit to improve
fix setrawlocation ( location , boolean fall ) in glowentity and glowplayer
refactor query construction in SimpleJpaRepository to use CriteriaQuery and apply repository method metadata to improve query efficiency and ensure correct retrieval of results
added timestamp , parent hash , nonce , and number fields to the builder in BlockUtil . java to enhance the block configuration by including additional parameters
remove loop safepoint generation in favor of safepoint insertion
hbase - 25836 fix npe in getrsgroupinfomanagerimpl and getprocedurememberrcpcs when list
changed access modifiers of several methods in ArtifactResolver from package - private to public to allow broader access to these methods from other packages
added thread stop to ClientConnectionHandler and dispose resources in BulletPhysics and ChunkProcessingPipeline to ensure proper resource management and prevent potential
added a validation check for maxBufferedDocs in IndexWriter . java to ensure maxBufferedDocs is at least 1 to prevent runtime errors
added state management for the login process in LoginActivity to ensure proper login behavior during instance state changes
added null checks for source and value extraction in Pump . java and created a new test for UUID sorting in PumpTest . java to
modified access modifiers of several methods and fields in HttpShardHandlerFactory and LBHttpSolrServer classes from private to protected to enhance encapsulation
updated the order in DefaultAuthenticationServiceSelectionStrategy from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added unit
added Jetty server handler setup using HandlerList in TestJNDI . java to enable dynamic handling of context handlers for improved performance
added assertions and improved error handling in SortedDynPartitionOptimizer . java to enhance code robustness and ensure proper schema validation
changed the return value of the method from checking if the loop is an instance of NioEventLoop to always returning true to simplify the logic
updated the logic for setting the number of nulls based on the new row count to ensure that the new row count does not exceed the existing row
camel - 14263 : camel - dsl - migrate camel - kamelet to camel - jbang - kamelet in camel - jbang
replaced OkHttpOAuthConsumer with OpenStreetMapManager authorization handling to improve authorization checks and error handling for OpenStreetMap uploads
pdfbox - 4892 : remove debug code , a suggest by valerybokov
added clientAuth configuration to IoTDBRestServiceConfig and updated related classes to enable support for client authentication based on configuration settings
refactor injection logic in ` PropertyAndSetterInjection ` and add a new test class ` ChildWithSameParentFieldInjectionTest ` to improve
make bloomuriiqfilter more flexible by allow customization of expect size and hash count
changed the ` getCursorAdapter ` parameter from false to true in ` HomeFragment . java ` and set a preference in ` TweetPager
updated intermediate header height ratio from 1f to 75f to improve layout responsiveness for better user experience
replaced ` RuntimeEvent ` with ` RecompilationEvent ` in multiple files and added a new class ` RecompilationEvent ` to
added support for determining if hosts are system - prepped in the execution command and configuration to enhance the flexibility of host - level configuration management
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method and created a corresponding test class to control logging behavior based
added a loop to delete leading slashes from the location string to ensure proper handling of leading slashes in the location string
added properties for managing entities and scores in StaticPipeline to enhance functionality by allowing dynamic configuration of entity and score values
updated file path handling in Frame . java and modified WhoopsModule . java to conditionally enable or disable based on application configuration to improve
[ geos - 5398 ] catalogrepository . getdatastore ( name ) should return null if datastore do not exist
updated assertions in the Assert . java file to improve code clarity and maintainability
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added ` MultiLineJaggedTextTests ` to
camel - 17836 : fixed the unit test error of twoconsumertonsametopic
replaced ` writeMeasurementScheams ` with ` measurementSchemas ` for consistency across multiple classes to simplify code and improve readability by
updated memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve accuracy of memory usage calculations
updated the logging library name from " slf4j - log4j12 " to " slf4j - reload4j "
[ hue ] fix flaky test of huebridgehandlerosgitest
refactor package structure for multiple activities from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities
[ drools - 1276 ] ignore kiecontainersolverfactorytest until drools - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` _ avroSchema ` , ` _ topicName ` , and ` _ gitHub
refactor AbstractExpressionPart class for improved clarity to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix typo in taskslot
replaced ` ChannelFutureListener . FIRE _ EXCEPTION _ ON _ FAILURE ` with ` ChannelFutureListener . CLOSE ` in ` Netty
added error handling for lock release in MoveTask . java to improve robustness by logging exceptions when attempting to release locks
replaced the use of ` Properties ` with ` ResourceBundle ` for retrieving system properties to simplify resource loading and improve code readability
replace the constant ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY in the transaction class to simplify the code and improve readability
removed unnecessary variable declaration for classInfo in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] fix flaky jobmanagerstartuptest
chore ( ruby ) : update apache _ protocol _ version to v3.0 . 1 ( # 119 )
added a ` Bundle extras ` to the ` FileDisplayActivity ` builder to allow for additional configuration options during the display process
changed the control flow from break to continue in the ParticleEmitter class to improve control flow by skipping the iteration when the particle is null
updated expect values in ` AmbariManagementControllerImplTest . java ` to reflect the correct number of expected clusters from 4 to 3 to
removed nullable attribute from the @ Column annotation in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry .
refactor Bug4823811 . java for improved clarity to enhance maintainability and readability of the code
replaced direct argument addition with a pathRelativizer for pattern deletion to enhance flexibility by allowing dynamic path expansion based on project filesystem
[ deco ] schedule deco state request for initial request ( # 1569 )
updated ShibbolethCompatiblePersistentIdGenerator to include an attribute property and modified related methods for improved attribute handling to enhance flexibility in
removed unnecessary whitespace in @ Inject annotation to improve code readability and maintain consistency
refactor keyboard hiding logic to use a Bundle for logging the keyboard close event to improve code readability and maintainability by utilizing a
removed redundant lines in FileNodeProcessor . java and updated MManager . getInstance ( ) . clear ( ) in MManagerBasicTest . java
rename NavigableMap and NavigableSet classes to improve clarity and consistency in naming conventions
add a testslurpfile ( ) to make sure slurpfile ( ) work
added @ FunctionalInterface annotation to several classes and modified the visibility of the wrap method in ManualGrpcSecurityMetadataSource to enhance encaps
refactor span retrieval in TraceWebFluxTests to use a helper method to improve code readability and maintainability by reducing duplication
added support for handling DateWritable types in Hive schema and related classes to enhance data handling capabilities for date - related operations in Parquet
replaced string splitting with Patterns . COMMA _ SEPARATOR for improved readability to enhance code clarity and maintainability by using a more
ggb - 1341 add input validation to stringparser
refactor column count checks in SemanticAnalyzer for better readability to improve clarity and maintainability of the code
updated WANDScorer . java to improve document retrieval logic and assertion checks to enhance robustness and maintainability of the scoring logic
refactor Correspondence class to improve code readability to enhance maintainability and facilitate future development
updated import statements in PaintSetEnabledDeadlock . java to include specific AWT classes to improve code clarity and maintainability by organizing
modified the initialization of ` curPixVal ` in ` XRSolidSrcPict . java ` and added a new test class ` White
fix biome dictionary to use collection instead of list .
corrected the spelling of " withinTolerance " to " exceedsTolerance " in BoundedLocalCache . java to improve code readability and
added test stability rules for LOCAL and PLATFORM _ POSTSUBMIT flavors in TaplTestsLauncher3 . java to enable
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure ` logFileSuffix ` is not empty before proceeding to avoid potential errors when ` logFileSuffix ` is null or
refactor PythonBuckConfig . java to improve code structure to enhance maintainability and readability of the code
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality and functionality of system shared library management
improve meiligao decoder ( fix # 388 )
added null check for tile before accessing its block ' s power to prevent potential NullPointerException when tile is null
added a new ` TrimCache ` class to manage cache trimming to improve user experience by providing progress indication during cache deletion
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated error handling in BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , and related tests to throw NotAuthorizedException instead of returning false to improve
updated schedulePeriodically method signatures and added @ SuppressWarnings annotation to improve code clarity and suppress warnings related to unused parameters
replace ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( ) ` in ` FileDisplayActivity . java ` to
added a conditional check to choose a random InputStream based on a specified path to enhance error handling and provide clearer feedback when multiple streams are found
refactor create _ table method to accept CreateTableRequest instead of EnvironmentContext to simplify table creation process by removing unnecessary environment context parameter
added a volatile boolean ` aborted ` and synchronized the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker ` to
refactor indentation handling in multiple parser classes to ensure consistent indentation behavior across different parsers
added networkwificestatusreceiver , changewificestatusevent , and networkwificestatusreceiver interface .
do n ' t check for control frame when generate protocol exception
added visibility setting for the collapse handle view in WidgetsBottomSheet to improve user interface by hiding the collapse handle component
added two new test classes , Issue475 . java and XSS . java , for handling HTML and JavaScript request parameters to enhance security by
added a check to return early if units to scroll are zero to optimize performance by avoiding unnecessary processing when no units are to scroll
updated the condition to check for the size of the contract list in the transaction cap to ensure that the contract list is not empty before proceeding
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` , along with corresponding tests in ` JsonArrayTest ` and
added hashCode method to IPPPrintService and created TestRaceCond class with hash code verification to ensure consistent hash code generation for print services
replaced instances of ` getIVersion ( ) ` with ` getVersion ( ) ` in ` DB2iDialect ` and ` DB2z
added a condition to check if the transaction ' s platform fee is greater than zero before verifying connection status to ensure proper handling of transactions with
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code readability and maintainability
add clear data first sub sample by adaptive reconfiguration if encryption be enable
removed the ' public ' access modifier from several classes and constructors in several files to enforce package - private access for better encapsulation
added import statement for Retrofit in Part and PartMap classes to enable Retrofit functionality in the application
refactor JsonBuildHelper and ParamsBuildHelper for improved parameter handling and formatting to enhance code readability and maintainability while enhancing
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of taskbar types in AbstractFloatingView . java to enhance functionality by allowing
fix : update gapic - generator - java with mock service generation fix
updated alpha calculation logic in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation responsiveness based on
removed the second parameter from the createRenderScript method in AllAppsView . java to simplify the render script creation process by eliminating unnecessary
pmd : fix typo , a suggest by valerybokov
added a method to check if a bundle is a system bundle and refactored related code to use this new method to improve code readability
updated import statements and formatted code in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
replaced hardcoded value of 0.001 with a constant LOW _ FALSE _ POSITIVE _ RATE in the KeyChainGroupTest
refactor configuration handling by replacing ` rocketConfiguration ` with ` defaultConfiguration ` and adding selection logic to improve code clarity and maintainability
updated the return statement to store the AgentAttache instance in a variable before returning its value to improve code readability and maintainability by redu
added a null check before converting the value to data in DefaultRecordStore to avoid potential NullPointerExceptions when the value is null
cloudstack - 4892 : throw discoveredwitherror instead of return null when host discovery fail .
updated string concatenation for NO _ NAME and NO _ VALUE to include specific attribute names to improve clarity of error messages for better debugging
updated constructor to accept a mock object instead of an invocationcontainerimpl to improve flexibility in creating stubbing instances
added a method to strip method parameters from method parameters in the LocationOpener class to improve the handling of method parameters by removing unnecessary parameters
update version name and code for the GreatVoyage application to reflect the latest changes and improvements
mondrian : use set instead of list for allowedcommands in outputfilter
[ geot - 4569 ] fix style layer to use labelcacheitem
ggb - 2852 center and resize popup when overlap feature be present
updated error messages from " Function : " to " Table - " and " Memory - " in ValidationSuite . java to improve clarity and
replaced an anonymous inner class for handling task launching with a dedicated StartingWindowListener class to improve code readability and maintainability by encaps
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve code documentation clarity and maintainability
updated exception messages and added package access check in CheckPackageAccess . java to clarify security exceptions related to PackageAccess and PackageDefinition
increased the await termination timeout from 30 seconds to 90 seconds and added an assertion to ensure the executor service is terminated before proceeding with
changed the loggingEnabled variable from a boolean to a Boolean and added a null check before setting it to ensure logging is enabled only when it is
added @ JsonIgnore ( true ) annotation to mmm Schema . java and ppp Schema . java to indicate that certain fields should not be
increased the test timeout from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for tests to complete
refactor the ` train ` method in ` SimpleNaiveBayesClassifier ` to use ` calculateLogPrior ` and ` calculateLik
renamed CheckHelperModule to CheckHelperControllerModule and added CheckHelperAuditModule to improve clarity and organization of module dependencies
refactor Prototype class files to improve code organization to enhance maintainability and readability of the codebase
added a check for null tableIsTransactional in SemanticAnalyzer . java to ensure that the tableIsTransactional property is correctly retrieved from the
[ java ] move recordingwriter . writefragment ( buffer , header ) to onblock ( buffer , offset , frame length , session _ id
fix ( cea ) : handle negative subtitle timeus
add alias to the kairos metric query so that it do n ' t break the kairos test
updated the CurrencyPair values in VaultOfSatoshiBaseService for improved clarity and consistency to enhance code readability and maintainability
hhh - 14827 fix unit test to close the entitymanagerfactory
updated KafkaSender import from ' kafka11 ' to ' kafka ' in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to align
added two new test classes , GwtBinaryIntegrationTest . java and A . java , for building Gwt binary to ensure the build process
updated mouse event visibility logic in BrowserContentPane and refactored ResultSet handling in SQLConsole to improve user experience by ensuring loading cause label is
updated test cases in EnhancedRandomImpl and EnhancedRandomImplTest for improved clarity and accuracy to enhance test coverage and ensure accurate
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser to manage XML security settings to enhance security configuration management and
added a new file ` InlineDefaultMethod . java ` containing interfaces and classes with default methods to demonstrate the use of default methods
updated SQL query patterns in SqliteFieldPredicateView . java to use GLOB instead of LIKE to improve query accuracy and correctness in handling
( chore ) camel - dmn : align visibility of the method with the one declare in the class
fixed - rscript . script _ load command should be call on all slave node . # 2370
refactored print statements in EspressoLanguage . java and removed redundant setWordFieldVolatile method in StaticObject . java to improve
updated log messages to use size ( ) instead of string concatenation for target counts to improve clarity and consistency in logging output
fix race condition in fmloutboundhandler . sendproxy ( packet ) .
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS and modified thread pool settings in WebServer . java to allow dynamic
refactor shortcut management logic to improve clarity and efficiency to enhance code readability and maintainability by reducing redundancy
remove unnecessary type check for value in DefaultHttpClientBinderRegistry to simplify code for better readability and maintainability
removed the home case handling in DetailFragment . java to simplify the navigation process by eliminating unnecessary navigation
added a condition to check if the Android market has been enabled before including play services to ensure play services are only included when the Android market has
refactor cell parsing logic in TableBlockParser and add a new test for pipes on outside whitespace after a header to improve code readability and
added support for a bridging header in the NewNativeTargetProjectMutator and related classes to enable configuration of the bridging header for
updated the handling of unused and used methods in PotentiallyDeadCode . java to improve clarity and functionality to enhance code readability and maintain
added support for detecting diamond patterns in type arguments to enhance type safety by logging warnings when redundant arguments are encountered
replace invocation . getInvocationStageTrace ( ) . startSend ( ) with invocation . onStartSendRequest ( ) in HighwayClientFilter
added import for Utils and a debug log statement in SolrCacheHolder . java to facilitate logging of cachemetrics registration for better
added a catch block for AuthenticationException in LdapCtxFactory . java to ensure proper handling of authentication exceptions
updated the calculation of the zero value in Test6796786 . java to ensure correct handling of negative values in the equality check
added a local file for " logback . dev . xml " in JoobyMojo . java and included it in Main .
added a new class JaasEventCheck to handle Jaas authentication events to facilitate event processing for failed and successful authentication events
refactor QuickstepTransitionManager to use a list of views to animate to improve code readability and maintainability by centralizing animation logic
updated string comparison logic in ConjunctionSolrSpellChecker and added unit tests in ConjunctionSolrSpellCheckerTest to ensure correct handling of
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to ensure consistency
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
add agent . script . timeout property to allow modify storage pool command to wait for ready command to return .
added JDBC _ SCHEMA parameter to the table parameters in AbstractJDBCConnectorProvider to ensure the correct JDBC schema is used for the table configuration
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " across multiple files to improve code readability and maintain consistency
replaced ` WeakHashMap ` with ` Collections . synchronizedMap ( new WeakHashMap < > ( ) ) ` for ` schemaTypeCache `
updated header handling logic in StaticServerHttpHeadersWriter to check for headers without adding to ensure that headers are not overwritten with different case to improve
ignore a test that relies on file availability only from within cmu
added a method to create the storage directory in the TestCollector class to ensure the storage directory exists before running tests
added setChunkedStreamingMode ( 1024 * 1024 ) to StarTreeJobUtils . java to enable chunked streaming for HTTP requests
add test for basictype - multiple and basictype - single
hbase - 25827 fix checkstyle violation in hbase - pb
added a new test method to validate recursive structure handling in BeanPopulatorTest . java and created a new Node class to ensure that recursive structure
added IOException to the getRemoteName ( ) method to handle potential IOException during remote name retrieval
added handling for IllegalArgumentException in UserAccountManagerImpl and refactored client creation in ClientFactory and ConnectivityServiceImpl to improve error handling and
refactor WebSocketConnection and ExplicitDemandTest classes to improve code readability and maintainability
added support for using AspectJ mode with protect - pointcut definitions in GlobalMethodSecurityBeanDefinitionParser to enhance security configuration flexibility by allowing
updated import statements and added hostname verification configuration in mmm Connection . java and ppp Connection . java to enhance security by enabling hostname verification
made the ` remove ` method in ` OHLCSeries ` public and added a test for it in ` OHLCSeriesTests ` to
replaced invocation . invoke ( ) . joinInternal ( ) with invocation . invokeUrgent ( ) . joinInternal ( ) and updated
removed duplicate code for destroying and removing JointEdges in the world to improve code clarity and maintainability by eliminating redundancy
fix npe when search for phone number in chat room .
[ hotfix ] [ test ] move sourcereadertestbase to testutils package
added null checks for document and parent folder in DocumentsStorageProvider . java to improve error handling for missing files to ensure robust error management and
added new interfaces ` HookDefinition ` and ` JavaHookDefinition ` , and created corresponding test classes ` JavaHookTest ` and ` JavaHook
refactor the flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by encapsulating
updated setExoOptions method to accept a boolean parameter for allowing timestamps to enhance flexibility in setting video options based on device type
removed user identifier from identifier collection in DMRDecoderState . java to streamline identifier management by eliminating unnecessary user identifiers
added a static INVISIBLE color and refactored the toString method in Color . java , and updated import statements in RailButtonShapes .
updated null handling logic in CountAggregationFunction and added a test for total count with null handling option in NullHandlingIntegrationTest to enhance null handling
set the deep variable to - 1 in InternalTransaction . java to ensure proper initialization of the transaction ' s deep state
escape XML names in StreamInitiation . java to ensure proper handling of special characters in XML names
updated work directory initialization to use configuration instead of hardcoded " work " to enhance flexibility by allowing custom directory paths
[ drools - 1390 ] make the ` ` deprecate ' ' rule a deprecate by default
fix amd64directcallop to use codebuffer ' s position instead of a dummy label
refactor TimeRange to use static final constants for minTime and maxStamp to improve code readability and maintainability by reducing redundancy
refactor BitDocIdSet class to improve code readability to enhance maintainability and facilitate future development
refactor connection handling in AbstractTimelineMetricsSink to use a dedicated method for emitting JSON data to improve code readability and maintainability by
reformatted conditional statements in DetailFragment . java and modified GalleryActivity . java to enhance code readability and maintainability to enhance code clarity
fix tank not be able to fill with empty liquid
refactor CsharpLibrary to handle both CsharpLibrary and PrebuiltDotnetLibrary rules to improve compatibility with legacy build rules and
[ iqep ] do n ' t send get packet to the pep service if it do n ' t exist
added a null check for the runtime variable in IntrinsificationPhase . java to ensure that the runtime variable is not null before proceeding with
do n ' t call metrictrackingwindmillserver . refreshactivework if there be no active metric
pdfbox - 4892 : avoid npe in bfsearchcoosobjectkeyoffsets , a suggest by valerybokov
added constructors to LwjglAppletApplication that utilizes a Canvas for managing the application ' s layout and focus to enhance the application '
updated string representation method in EnvironmentAndSystemPropertyClientProviderStrategy . java to handle null DockerClientConfig to improve robustness by avoiding potential NullPointerException
refactor LDAP authentication handling to use account state handler instead of a separate doPostAuthentication method to improve code clarity and maintainability by consolid
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a private String field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to use this field to
refactor Readable class to improve readability to enhance maintainability and facilitate future development
pdfbox - 551 : use testsupport . with _ font instead of use builder
updated the icon for the share menu item in CaptureActivity . java to ensure the correct drawable is used for the share menu item
updated Java version checks in Constants . java to support Java 9 and above to ensure compatibility with newer Java versions
updated IS _ JDBC41 assignment to use ! = Integer . MIN _ VALUE and added exception handling for AbstractMethodError and NoSuchMethodError to
refactor GenericContainer class to improve code readability to enhance maintainability and reduce complexity
replaced HashSet with ArrayList for filteredList in Enclosed . java to improve performance by using a more efficient list implementation
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasProtocolValidationSpecification , and AbstractCasView classes
removed unnecessary whitespace in ChartProvider . java to improve code readability and maintainability
fix import and open of file in default working directory ( # 3390 )
simplified the return statement in JavacParser . java and added a new test class ExtraSemiTest . java to improve code
added support for querying users by their creation time in JpaQueryCreator and User classes to enhance query functionality for users based on their creation time
refactor Test15FloatJNIArgs class for improved clarity to enhance maintainability and readability of the code
updated import statements and string formatting in mmm plugin . java and ppp plugin . java to replace hardcoded version numbers with constants to improve
corrected the substring index from ` encrypted . length ( ) - 2 ` to ` encrypted . length ( ) - 1 ` in ` Mock
[ java ] add ensurenotreentrant ( ) to ensure that reentrant call be not permitted during callback .
added a null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerException when accessing the dependency
added timeout parameter to @ Test annotations in SslBytesServerTest . java to allow for longer test execution time for improved reliability
refactor Peer class for improved clarity to enhance maintainability and readability of the code
added methods for creating historical index segments and updated the StreamProvider interface with start and setOffset methods to improve segment management and enhance stream provider functionality
added null check before writing to exportedData in FailureWatcher . java to avoid potential NullPointerException when accessing exportedData
updated popup positioning logic and refactored radius calculation in RecyclerViewFastScroller . java to improve the responsiveness of the scrolling
updated message in BuckWSServerPortUtils and added a check for the instantiation of the tool window in BuckEventsConsumer to improve
added a platform check for Windows before creating a JCheckBox in GeneralTab . java to ensure proper functionality on non - Windows platforms
updated import statements from javax . servlet to jakarta . servlet in HttpConfigurationAuthorityOverrideTest . java to ensure compatibility with the latest
updated cropping logic in QuickstepAppTransitionManagerImpl to differentiate between vertical and non - vertical layouts to improve layout responsiveness and
added full - screen exclusive mode management to XWindow and its peers to enhance user experience by allowing full - screen access control
fix stringutils . playeddurationstr ( string ) for string with length of 8
added methods to handle URI credentials in DagUtils for MapWork and ReduceWork to enhance credential management for DAG operations
( chore ) camel - core : use entryset ( ) instead of keyset ( )
trim whitespace from the thread name in SessionState . java to ensure consistent thread naming by removing leading and trailing spaces
updated the message from " Not yet " to " You can ' t add a description until the next point has been logged to a file .
refactor Job class to improve code structure to enhance maintainability and readability of the code
added a new abstract class ` Unused ` and a test method ` testUnusedType ( ) ` in ` Main . java ` to ensure
updated the key in the componentToClusterInfoKeyMap from " hbase _ master _ host " to " hbase _ master _ hosts
deleted the EventReaderDeserializer and EventWriterSerializer interfaces from the project to remove unused classes to streamline the codebase
changed the return type of the ` performJoin ` method from ` GenericRecord ` to ` List < GenericRecord > ` across multiple classes to
updated MAX _ DELEGATE _ LOCK _ PERIOD validation and adjusted related calculations to ensure that the maximum delegate lock period does not exceed a
fix npe when there be no network profile and no network rate
removed initServices ( ) method and updated applySpecification method in CmcExchange . java to ensure proper initialization and specification handling for the exchange
replaced ` ConfigObject ` with ` List < String > ` for retrieving the seed node IP list and updated configuration constants to improve clarity
add ` ` hazelcast . client . tpc . enabled ' ' system property ` ` hazelcast . client . tpc . enabled '
upgrade swagger - ui from 2.2 . 10 - 1 to 3.18 . 2
refactored the division logic in MutableBigInteger and added a new class ModInvTime for computing modular inverses to improve performance and
modified the key initialization logic in NamedObjectList . java to initialize the key to an empty string when the name is blank to ensure that the key
updated method names from ` cleanupEmptyDir ` to ` cleanupEmptyTableDir ` for consistency to improve code readability and maintainability by using
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it with kryo to enable handling of RCFileInputFormat in serialization
generator - translator : make it easy to get the type of a column
added error handling for parsing port from the host header in Request . java and created a test for invalid host headers in RequestTest . java to
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers instead of libcore . util . TimeZoneFinder to improve test reliability and
remove unused method addoutgoingvalues ( ) and forEachoutgoingvalue ( ) from standardop
changed variable declarations from ` final ` to private for ` cfsDir ` and ` cfsReader ` in ` SegmentCoreReaders . java
added hasMainThreadProfile method implementations in AggregateDao and AggregateRepository to check for main thread profile existence to enhance functionality to check for main thread
added a validation check for annotation definitions in the Buck rule to ensure that annotation definitions are only allowed in Buck rules that are required for
updated NAME constants from " greekLowerCase " , " irishLowerCase " , " uaX29UrlEmail " , and " t
refactor HSSFSheet and Sheet classes to improve code readability and maintainability
( chore ) camel - webui : upgrade to dspace 4.0
added a list of time - zone IDs to the BasicDateTime class to remove specific time zone data from the date range
updated SurfaceSyncGroup instantiation to specify the name of the TaskBarController to improve clarity and specificity of the SurfaceSyncGroup ' s
updated GridFsTemplate and GridFsTemplateIntegrationTests to use getId ( ) instead of getObjectId ( ) for file deletion and retrieval to improve
added methods to manage total size and bytesSoFar in ShadowDownloadManager and updated tests in ShadowDownloadManagerTest to enhance functionality and ensure correct column
refactor character handling in TextField to use a boolean variable for enter state to improve readability and maintainability of the code
added a null check before proceeding with comparison in GroupNodeViewModel to prevent potential NullPointerExceptions during object comparison
refactor afterSetStatements method in Block and BlockLexicalContext classes to improve clarity and functionality to enhance code readability and maintainability
added hashCode methods and updated equality checks in IntervalXYDelegate , XYSeriesCollection , and its tests to improve hash code consistency and ensure proper equality
remove nightly test from clientqueuetransciondisruptiontest because it be n ' t clean up
reformatted code for better readability in CloudWatchAppender . java and renamed test method in RegisteredServiceScriptedAttributeFilterTests . java to improve
replaced ` GsonBuilder . serializeSpecialDoubleValues ( ) ` with ` GsonBuilder . serializeSpecialFloatingPointValues ( ) ` in the
added calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduce
added checks for non - empty subtags before canonicalizing language tags in Locale . java and updated language tag handling in LanguageTag . java to
add kvm . ssh . to . agent configuration to control whether or not the management server be allowed to ssh into kvm agents
removed public access modifier from several classes and methods in SchedulerWhen . java to enhance encapsulation and improve code readability
removed an unused import statement for PagerSlidingTabStrip in EmojiKeyboard . java to streamline code by eliminating unnecessary dependencies
added a condition to check if the string contains a hyphen in the filter to ensure that the filter only applies to non - hyphen characters
updated sortColumnsLabel text from " natural order " to " Natural column order " and modified UISettings usage in DataBrowser and Des
replaced ` Arrays . copyOf ( in , 6 ) ` with ` Arrays . copyOf ( in , 6 ) ` in ` Utils . java
replace ` write ( remoteAddr ) ` with ` write ( htmlEncodeButNotSpace ( remoteAddr ) ) ` in ` HtmlSessionInformationsReport
add ` ` smarthome / items / ' ' prefix to itemstatetriggerhandler . isitemstatetrigger ( )
removed unnecessary synchronized block around date formatting to improve performance by reducing unnecessary synchronization
added asynchronous file moving functionality using a configurable thread pool to improve performance by allowing multiple files to be moved concurrently
added methods to trigger a timer with a specified period in WrapTimer . java to enable dynamic scheduling of timers based on a specified period
added support for LOCAL _ DATE _ TIME and LOCAL _ DATE _ TIME types in TypeInfoUtils and corresponding tests in TypeStringUtilsTest to enhance
added a verbose flag to the error logging method in AbstractStatusReporter to enhance error reporting by allowing customizable verbosity settings
added menu toggle functionality to ClickStartHandler in Header and ItemControls to ensure proper functionality when the menu is shown or unbundled
add check to ensure vpn connection can only be esitablished between account ' s vpn gateway and customer gateway
updated error handling logic in CursorReadingTask and added a new test case in CursorReadingTaskUnitTests to improve error handling consistency and ensure proper
pdfbox - 4892 : do n ' t try to extract text from encrypted pdfs
[ 3.0 ] shutdown curatorwatcher thread when zk client get child change ( # 4569 )
updated AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code clarity and maintainability
updated the method to use ` getContentResolver ( ) . delete ( uri , null , null ) ` instead of ` getSelectedItemId ( ) `
updated Java6Assertions and Conditions classes to improve code clarity and maintainability
updated the method signature of replaceOrderBulk to accept a List of strings instead of a Collection of ReplaceOrderCommands to enhance flexibility by allowing
refactor ` enterDefault ` method to ` enterIdentNode ` and implement ` enterFunctionNode ` in ` Lower ` to improve clarity
added a new ` J9ConstantHelper ` class to retrieve long values from class fields and updated ` ObjectHash ` to utilize this new
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent invocation behavior to ensure proper handling of concurrent invocations
added notification when a roster be offline and remove resource from the session .
replaced calls to ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a
updated method call formatting in FunctionObjectCreator . java to improve code readability and maintain consistency
added a null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerExceptions when extTypeCustomDesers
remove system . setProperty ( " mockserver . logLevel " , " WARN " ) in Main . java to reduce log verbosity for better debugging
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed unused imports and refactored the createJetty method in AbstractSolrMorphlineZkTestBase . java to streamline code and
replaced ` scoreMap ` with ` termScoreMap ` and updated related logic in ` TestGrouping . java ` to improve clarity and
updated conditional checks and added a new eq method in U64 . java to improve parameter comparison logic to ensure correct handling of negative values and enhance
removed the headline style from MainViewModel . java to improve the visual appearance of the MainViewModel
updated the notifyChange method to include the didSupportDarkText condition to ensure that the notification accurately reflects the support for dark text
[ hotfix ] [ checkpoint ] handle non - forced enqueue on too many pending trigger request
updated the maximum pool size and keep alive time constants in the Parallel class to improve thread management and reduce memory usage
replaced ` filter ` with ` anyMatch ` for better readability in ` AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java `
added TestRequirements . notWindows ( ) and notArm ( ) methods to OpenCVImageFactoryTest . java to ensure compatibility with Windows Server
fix for http : / / issues . apache . org / activemq / browse / amq - 4237 - allow to configure
[ py4j ] fix exception handling in the protocol . getreturnvalue ( ) method .
added @ Repeatable annotation to Issue . java to enable repeatable issue handling for type and method annotations
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java to align user
updated socket connection logic to use a configurable socksProxyHost property to enhance flexibility by allowing custom host resolution based on system property
[ hotfix ] [ runtime ] fix checkstyle violation in slotstatus
removed the import of ClassUtils from org . apache . commons . lang3 to streamline dependencies by eliminating unnecessary dependencies
replaced ` HashSet ` with ` LinkedHashSet ` for ` _ excludeProtocols ` , ` _ includeProtocols ` , and ` _ includeCipherSuites
added a static final instance of ` systemResource ` to check if the resource is the same as the system resource and return it if it is
increased the size of the plaintextSegment in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel from 16 to
added a test for invalid fallback routes in ServerMvcIntegrationTests to ensure that the circuit breaker correctly throws an exception for invalid fallback URIs
added SSL support to the HttpClient configuration in AppPage . java to enhance security by using SSL for HTTP connections
replaced resetBytesReadCounter ( ) method with setSizeLimit ( 0x7FFFFFFF ) and set the size limit to 0x7
removed the ` preferAES ` variable and its getter / setter from ` ProtectionPolicy ` and ` StandardProtectionPolicy ` classes to streamline
( chore ) camel - opentelemetry : use logger instead of system . out
remove flaky test from elbintegrationtest . testloadbalancerinstanceoperations
renamed the method ` setAlarm ` to ` setRingtone ` in ` AlarmReceiver . java ` to improve clarity by
added error handling for file creation in DiacriticTest . java to improve robustness by preventing file creation failures due to invalid paths
hhh - 14850 - fix oracle 11 timeout in ast translation
updated texture file handling and error handling in TextureUnpacker . java to improve robustness by checking for the existence of the atlas image and its
added locking mechanism and improved service state management in AmbariManagementControllerImpl . java to ensure thread safety when modifying service states
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the ResultSet does not close itself and modified the closing logic in HiveStatement to ensure that the ResultSet is not closed
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5652 - make input
added logic to remove pre - deleted databases from the schema map in ClusterSchemaManager to ensure proper schema management by removing pre - deleted databases
updated the handling of the " chunkedWriter " in Http1xUpgradeToH2CHandler . java to ensure proper cleanup of the chunked
updated item ID comparison in EnhancedBrowseFragment and added delete item functionality in FullDetailsFragment to improve item deletion logic and enhance user experience by
refactor RuleFinder to use an interface RuleBank for rule management to improve code organization and encapsulation by encapsulating rule detection logic
tlscrypto : catch exception in init ( ) and dofinal ( )
added new files TestMonomorphicObjectCall . java and Object . java for testing object finalization and native methods to facilitate
replaced ` removeMetaDataSource ( session ) ` with ` toFront ( ) ` in ` DataBrowser . java ` and ` Desktop
hbase - 25836 fix npe in defaultmemstore . shouldseek ( ) when a scan have no time range
[ hotfix ] [ runtime ] use file [ ] instead of string [ ] for local state directory
modified the constructor of AlterTimeSeriesStatement to accept a boolean parameter and set its value based on its value to enhance flexibility in handling time
fix ` ` match text ' ' to work with ` ` * ' '
added error handling when retrieving the routing table builder in HelixBrokerStarter . java to improve robustness by preventing application crashes due
updated the handling of ` body ` in ` HttpClientIntroductionAdvice ` to use ` putIfAbsent ` for better null - checking to
http : / / issues . apache . org / jira / browse / amq - 4237 - use char [ ] instead of
bug 10750 : do n ' t invalidate the session if an illegal state occur while search for a domain in the management server
refactor equals and isUniformDistribution methods in Counters . java and update test cases in CountersTest . java to improve code clarity
modified the initialize method to assign the original SimulationStatus to a new instance and set warnings accordingly to ensure that the original status reflects the
sulong : do not use system . currenttimemillis in sulongsyscallclockgettimenode
updated the variable name in readObject calls from " tree " to " var " in PrettyPrinter . java to improve clarity and consistency in variable
refactor node initialization logic in LRUDictionary to check for null before creating a new Node instance to improve code safety and prevent potential NullPointerExceptions
refactor filtering logic in DatagramSocket and improve readability in DatagramChannelImpl to enhance code clarity and ensure proper handling of socket
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestQueryDNS . java to migrate tests to the newer Jup
added a new class NutchServerInfo with properties and methods to retrieve , set , , and retrieve job information to facilitate
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter to streamline attribute handling and improve code clarity
[ hotfix ] [ table - planner - blink ] add timestamp support to query inserter
refactor DSAParameterGenerator to handle different prime sizes and improve readability to enhance clarity and maintainability of the code
updated the ` Numbers ` class to use a new ` intBitsToFloat ` method and modified the ` Numbers ` class to use
updated mask comparison to use bitwise AND operator and added multiple test cases for InetAddress to ensure correct masking behavior and improve test coverage for various address
added checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to ensure proper handling of SQL exceptions related to constraint violations
( chore ) camel - kafka : fix checkstyle violation and remove unnecessary setsetzeroiffound ( false )
added methods for adding and inserting tabs in Tabs . java and refactored createTab and insertTab methods to improve tab management functionality and
replaced ` toArray ( new Object [ files . size ( ) ] ) ` with ` toArray ( new Object [ 0 ] ) ` in
[ hotfix ] [ runtime ] add taskmanagerruntimeinfo to mockenvironment
refactor conditional statements in MavenVisitor . java for clarity to improve readability and maintainability of the code
updated mock names from " MOCK _ NAME2 " to " MOCK _ NAME _ UPDATE " and added new test cases for selector and
added a new file FormatCheckingTest . java to test class formatting to ensure correct error handling for illegal class names in the Java process
updated line number handling in CodeGenerator . java to ensure accurate line number assignment to improve code clarity and maintainability
added a try - catch block around the retrieval of service properties in ConfigHelper . java to handle potential exceptions during configuration retrieval
added methods to create toggle options for RadioButton instances in the RadioButton class to enhance user interface functionality by allowing toggling of radio buttons
updated LRUCache initialization to include cacheSize and increased CHUNK _ METADATA _ CACHE _ SIZE from 100000 to 10000 to optimize memory usage and improve
changed access modifier of DEFAULT _ CAPACITY from private to public and modified capacity handling in ChannelParser to allow access to DEFAULT _ CAPACITY from
fix potential npe in osgionamanagementnamerestrategy when bundle name be null
add usemode system property to allow modecontribution to be load from a file
added error handling for adding and removing the shutdown hook in IOManager and improved logging in YARNSessionFIFOITCase to enhance robust
updated ` RobolectricTestRunner ` to use ` androidManifestPath ` instead of ` projectRoot ` to improve clarity and consistency in
http : / / issues . apache . org / jira / browse / amq - 4237 - do n ' t propagate header
rename CompareMode class to improve clarity to enhance code readability and maintainability
added HasTests interface to RustBinaryDescription and RustLibraryDescription classes to enable testing capabilities for build targets
updated placeholder and error drawable resources in FileMessageVH . java to simplify drawable usage and improve code readability
8284874 : add comment to processhandle / onexittest to describe zombie problem
added an onUserPreferenceChanged method to TaskbarManager to recreate the taskbar when user preference changes
updated HeapDump . java to handle heap dumping based on the Ibm VM type to improve flexibility in managing heap dumping based on
[ mybatis ] fix potential resource leak in mybatisproducer
danielwagnerhall : make sure we do n ' t quit the ie driver
replaced instances of " JDK 5 for - loop " with " Java 5 for - loop " and removed unnecessary null declarations to ensure compatibility with
added a call to set the application state to UNAVAILABLE to ensure the application is in an unavailable state before proceeding
updated position and limit calculations in ByteBuffer classes and StringCharBuffer classes to improve accuracy in position and limit calculations
replaced ` toUri ( ) . toString ( ) ` with ` toString ( ) ` in ` ConditionalResolverMergeFiles . java ` to
updated array deletion logic and added setEmpty methods across multiple classes to ensure proper handling of empty arrays and improve code clarity
changed enum declarations from package - private to public for Protocol and Transport in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
replaced ` doc4 ` with ` doc6 ` in ` TestMultiPhraseQuery . java ` and added a new ` doc6 `
do n ' t send pending reservation status for offline payment
added a thread - safe check for the onTimeout thread in HttpChannelState . java to ensure thread safety when invoking onTimeout listeners
replace printStackTrace ( ) with logger . warn in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated read method to conditionally use local quorum consistency level to ensure correct consistency behavior when reading data from Paxos
added support for handling " Home " model in HeosDiscoveryParticipant and added a serial number handling in HeosPlayerHandler to ensure compatibility with
added a new ` Wait ` class and modified ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` classes to support
refactor Neo4j ' s attribute handling to use AttributeController for node and edge data to improve code clarity and maintainability by
added a null check for serverName in the SessionManager class to prevent potential NullPointerException when serverName is null
nifi - 1748 : move rocksdbmetronome to nifi - controller and deprecate it in favor of nifi -
updated the method call to retrieve the " IS _ GRANTABLE " value using the results object to improve code readability and maintainability by
added logging statements and modified URL check logic in JavascriptContext . java to enhance debugging capabilities and improve URL validation logic
camel - 14284 : camel - cxf : allow cxfmtomconsumertest to run on macos
updated column modification logic in LoadTestTool . java to handle both non - existing and non - existing column descriptors to ensure proper handling of column
implemented the Disposable interface in the Texture class to ensure proper resource management and prevent memory leaks
updated WebappRegistrationCustomizerImpl and related classes to use WebBundleDeployerHelper instead of WebappRegistrationHelper to ensure proper handling of
do n ' t allow goquorum config without goquorum privacy
replace IOException with Throwable in HttpInput . java to improve error handling by providing a more specific exception type
added a condition to skip processing for the " JP " country in the LocaleTest . java file to ensure that changes in era are not
updated API operation references from ` Wrapper ` to ` HostResponse . HostResponseWrapper ` and ` ViewPrivilegeResponse . ViewPrivilegeResponseWrapper `
updated FilteredQuery to include boost comparison and hash code calculation to ensure accurate query equality and hash code based on the boost value
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 1341 fix for ` ` show logging ' ' in debug mode
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
fix arrayindexoutofboundsexception in spongecommoneventfactory
renamed ` ColumnMapKeyMappingPreparedStatementSetter ` to ` ColumnMapItemPreparedStatementSetter ` and updated related method signatures to align with the new
fix compilation error in compactionstest
added a null check for the " type " attribute in MiniAapt . java and created a corresponding test case in MiniAaptTest .
added support for the " SpEL " operator in the OperatorEnum and created a new SpELJudge class to enhance the functionality of the
[ hotfix ] [ runtime ] fix checkstyle violation in localexecutionplanner
bugfix # 258272 , use java . awt . eventqueue instead of sun . misc . service
added import statements for JUnit ' s assertEquals method in ConscryptTest . java to streamline dependencies and improve code readability
updated variable initialization from ` 0l ` to ` 0L ` for start _ offset and length in ` ShadowArscAssetManager9 `
updated the source and target options in SetupHid . java from " 1.5 " to " 6 " to incorporate the
changed the access modifier of ` extractMetadataColumns ` from private to public and modified the handling of metadata columns in ` PushProjectIntoTableSource
added sorting functionality for localized names in AboutActivity to improve user experience by displaying the canonical names instead of the localized names
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for liveStreaming before posting a delayed Runnable to optimize performance by avoiding unnecessary delays when live streaming is disabled
added an exception parameter to the MappingException constructor in AuditConfiguration . java to improve error handling by providing the original exception context
( chore ) camel - file - consumer : fix flaky test
updated generic type parameters from ` AbstractType ` to ` AbstractType < ? > ` in multiple files to enhance type safety and improve code cl
added support for transport detection in GitClientApplication and modified repository URL list initialization in RepositoryUrlPanel to improve transport support checks and ensure proper permission
added delegator name logging for various input consumer classes to improve traceability and tracking of gesture interactions
added null check for mavenMetadata and modified version filtering logic in ChangeParentPom . java to improve robustness by preventing null pointer exceptions
8274889 : [ testbug ] testlargepageuseforheap . java fail on solaris because of the output of the
cloudstack - 2182 : skip event migration if usage db do n ' t exist
( chore ) camel - test - infra - broker : fix test on window
added a new test class for ObjectStreamClass and modified the requireInitialized ( ) method in ObjectStreamClass . java to ensure proper initialization of
simplified conditional checks for data center info in ZoneAwareDiscoveryFilter . java to improve code readability and maintainability
changed log level from error to warn in OpenTracingTracer . java to indicate that tracing data capture fails
added a toString ( ) method to the Generator class to provide a readable string representation of the generator ' s state
refactor URI handling in ` mmm URI . java ` and add new test cases in ` Test . java ` to improve clarity and
added a check to throw a NoSuchResourceException if a requested resource does not exist in ClusterControllerImpl . java to improve error handling for missing resources
added error logging for response extraction in AccepttoApiUtils . java to improve error handling and logging clarity during API response extraction
removed conditional ByteBuffer allocation for Android version 5 in VertexBufferObject . java to ensure compatibility with newer Android versions and improve performance
refactor SybaseASADatabase class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] [ table - planner - blink ] make hashjoininfo backward compatible
added a method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` sd ` variable for better
added FLAG _ IMMUTABLE constants and updated PendingIntent creation logic to support immutable and mutable push notifications to ensure compatibility with newer Android versions
added methods to append read column IDs to configuration in HiveFileFormatUtils and HiveInputFormat to improve configuration handling for reading column IDs
replaced ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java
added a new method DisplayTemporaryToast ( ) in SavedExperiments . java to display a temporary toast message to enhance user experience
added version resolution logic to ` ServiceModule ` and a corresponding test in ` ServiceModuleTest ` to ensure the correct version is set for services
added a new test class ` RawSerializationTest ` to validate JSON serialization of collections and objects to ensure that the ` Gson ` functionality correctly handles
danielwagnerhall : rename seleniumserver to sslcertificategenerator so that it would well reflect our new interface that also include
refactor the loop to use an index - based approach for creating the TweetView to improve readability and maintainability of the code by
increased the timeout duration for resource accessibility in ExpiringUrlCacheTests from 3 seconds to 60 seconds to allow more time for resource
added a new test method ` testNGramFilterPayload ` to validate the NGram filter functionality to ensure that the NGram filter
refactor AclImpl class to improve code readability to enhance maintainability and facilitate future development
added a new test for randomizing different arrays in EasyRandomTest . java to ensure that different arrays are randomized correctly with different sizes
cloudstack - 4892 : fix npe in stop / reboot command when vm fail to start
added a ThreadLocal ` __ tryWriteAgain ` to manage the state of write completion in ` _ runCompleteWrite ` to improve thread safety
refactor null checks and add visibility check for parent and actor in the Actor class to improve code readability and maintainability by encapsulating visibility
added logging for rolling - update step on deployment group name and error message to improve visibility into deployment failures during rolling - update operations
[ hotfix ] [ table - common ] fix checkstyle violation in sinkprovider
added error handling for username not found in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve user authentication feedback and
refactor AtMostXVerificationTest class structure to improve test readability and maintainability
updated default query type from " lucene " to " lucenePlusSort " across multiple files to ensure correct default query type is used for
updated SimpleDateFormat instances to use Locale . US for consistency to ensure consistent date formatting across different locales
added an ` isInitialized ( ) ` method to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a new
updated the test parameter and variable name from ' idToken ' to ' shouldHaveIdToken ' in ClientAPITokenIntegrationTest . java to
added beginTransaction , setTransactionSuccessful , and endTransaction methods to DatabaseAdapter and refactored transaction handling in GncXmlHandler to improve transaction
replaced byte array handling with ByteArrayOutputStream for writing data to improve performance and readability of the code
fix checkstyle issue in io / mqtt / messagingtemplate . java ( # 4569 )
added an ` isAcceptable ` method to ` AutoFormatVisitor ` that checks if ` sourceFile ` is an instance of ` J . Compilation
added configuration for maximum buffered documents and RAM buffer size in TestIndexWriterMergePolicy to improve performance by reducing the number of documents and RAM
added a method to clear and update witness data in the Manager class and implemented a test for updating witness data in ManagerTest to enhance functionality and
added exception handling for NoSuchElementException in CopyOnWriteMap . java to improve robustness by preventing NoSuchElementException during iteration
[ fix ] flume should not use log4j since it do n ' t support it
updated authentication assertions and refactored thread handling in BasicAuthIntegrationTest and DaemonStream classes to improve authentication accuracy and ensure proper thread management during
replaced HashMap with LinkedHashMap for the nodes variable to maintain insertion order for graph nodes
add jerseysupport . builder ( ) to return 500 when jerseysupport throw an internal error .
refactor HTTP response header validation logic into a separate method to improve code readability and maintainability by reducing duplication
added a switch - case structure to handle specific system properties to improve code readability and maintainability by eliminating redundancy
updated method parameters from ` String ` to ` CharSequence ` in ` StringSubject ` and added tests for character sequence handling in ` StringTest `
[ gr - 23233 ] add toinvestigated for jfr / internal / jvm . countertime ( ) , jfr /
rename IntUtilsTest to PrimUtilsTest to clarify the purpose of the test class
updated DataSource handling in PersistenceManagerProvider to conditionally create a new datasource based on the forCompactor flag to improve flexibility in data source
[ hotfix ] [ doc ] fix typo in deploymentoptions javadoc
changed the parameter type of the ` updateTextButtonWithDrawable ` method from ` Drawable . ConstantState ` to ` Drawable ` and updated the
refactor InputStream handling in XmlParser and YamlParser to use StringReader instead of ByteArrayInputStream to improve resource management and avoid potential memory leaks
added support for the COALESCE function in the RexNodeConverter and SqlFunctionConverter classes to support coalesce expressions in the query
camel - 14284 : fix the unit test error of camel - hl7
updated JavassistProxyFactoryFactory to set the context class loader for proxy factory generation to ensure proper context class loading during proxy factory generation
updated constructors and access modifiers in DefaultDateTypeAdapter for consistency and clarity to improve code readability and enforce immutability of parameters
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI and query handling to improve code readability and maintainability
removed the filterOldEntries ( ) method from FeedRefreshUpdater . java to streamline the entry filtering process to improve performance by reducing unnecessary
[ hotfix ] [ runtime ] change log level from fatal to warn
added a new class ` NodeMapIterable ` and refactored the ` iterator ` and ` remove ` methods in ` NodeMap ` to
updated import statements and variable names for clarity in DiscoveryClientRouteDefinitionLocator . java to improve code readability and maintainability by using more
added a check for non - empty fields before adding aggregations in MongoRecordReader and modified return logic in RexToMongoTranslator to ensure that
add admin to list of defaultadminprovider if no admin
replaced usage of MultiFields with SolrIndexSearcher for term retrieval in various Q parser plugins to improve performance and avoid potential null pointer exceptions
updated the return statement in ConstantBeanHolder to include class name and identity hash code to improve clarity of bean representation for debugging purposes
refactor the handling of the ` primitiveType ` variable in ` GroovyParserVisitor . java ` to simplify the return statement to improve code read
svm : remove redundant hashcode ( ) method from frameinfosultread .
updated offerTimeout values from 100 and 0 to 200 and 300 in SedaBlockWhenFullTest . java to improve test reliability by
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to
updated the calculation of ` readLen ` in ` MessageUnpacker . java ` to ensure ` readLen ` does not exceed buffer size to
updated import statement for Nullable from ` io . micrometer . common . lang ` to ` io . micrometer . core
updated SQL query in IconCache . java to include user serial number to ensure proper filtering of user icons based on their serial number
[ hotfix ] fix the typo in back pressure for async send
added a boolean parameter ` isClassfileOnly ` to ` addWhitelistedResource ` and modified its logic to conditionally add resources based on its
cloudstack - 5391 : fix baremetal foreign key issue in 4.1 to 420 upgrade
removed the IJava2DRenderer interface and the Java2DRenderer class from the codebase to simplify the codebase by eliminating unnecessary interface
added onTearDown method to handle offload buffer clearing in DefaultAudioSink to ensure proper cleanup of offload buffer when the audio track
added scheduled task functionality to the UpstreamCacheManager with configurable delay settings to improve performance by allowing dynamic delay initialization during tasks
refactor StreamType class for improved readability to enhance maintainability and clarity of the code
added an assertion message to the assertTrue method in Recording . java to improve clarity of the assertion failure message for better debugging
updated FilestorePage and RootPage to use @ RequiresAdminRole and improved authentication logic to enhance admin role management and enhance user experience
( chore ) camel - elasticsearch : ignore test until it can be re - enabled
updated the ` accept ` method to include a check for the declaring class in ` ExpressionControlBusFactoryBean . java ` to ensure that the
updated button text from " leftButtonAltcoin " and " rightButtonFiat " to " buyWithFiat " and
camel - 13663 : camel - restlet should return error code 405 , not 405 .
modified createNextBlock and createNextBlockWithCoinbase methods to accept nullable Address and Coinbase parameters to enhance flexibility in block creation and
removed the Serializable interface from BTreeMapJava and updated serialization methods in ConcurrentSkipListMapTest to improve serialization compatibility and ensure proper exception handling
[ hotfix ] [ runtime ] do n ' t print stack trace when exception be null
reformatted conditional statement for better readability in Main . java to improve code clarity and maintainability
updated the method call from ` mFilesAll . indexOf ( file ) ` to ` mFiles . indexOf ( file ) ` to simplify the
deleted the PlainVerifier . java file to remove unused code to streamline the project
added a condition to close system windows when the alt tab is triggered to improve user experience by closing recents when the alt tab is triggered
updated dialog handling in DialogFragmentIT and removed the onShowListener in OCFileListBottomSheetDialog to improve UI responsiveness and ensure
updated MimeUtil . parseCharset to use " UTF - 8 " encoding for MIME type to ensure proper handling of character encoding in HTTP requests
added a call to the superclass ' s deinitialize method to ensure proper cleanup of the TextField instance after deinitialization
replaced manual serialization code with a utility method for serializing LogFormat to improve code readability and maintainability by utilizing TestUtilities
fix ( core ) : fix bug in group by fill ( # 737 )
updated error handling logic in JAXWSExceptionBase . java to throw an exception for negative array sizes to ensure that negative array sizes do not cause
test : migrate ctunresolvedimporttest to junit 5 ( # 1305 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow more time for the thread to
[ hotfix ] [ test ] change default scheduling strategy from legacy to region
added title handling methods in ShadowActivity and updated @ Implementation annotations in ShadowDialog and ShadowTextView to improve title management and support i18n
replaced Apache Commons Logging with POILogFactory and POILogger in POIFSFileSystem . java to improve logging consistency and maintain
updated alarm handling to use regex pattern matching instead of a hardcoded regex to improve flexibility and maintainability of the alarm detection logic
add latency report for map . delete ( ) call
updated enum Type declaration and modified status check logic in Response . java to improve code readability and maintainability by using a switch statement
refactor javac location retrieval logic in CheckResourceKeys . java to improve code clarity and maintainability by centralizing javac location retrieval
fix ( sdk ) : add project - name to -- create - additional - settings
added a new file ` DeprecatedStubbingTest . java ` to test the functionality of stubbing functionality in the Mockito framework to ensure that
replaced ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType ` in ` IT
add nml and nx a part of the tregex , and add a test for it
add ` ` org . bouncycastle . jsse . fips . allowRSAKeyExchange ' ' system property to enable support
refactor variable names from ` output _ reader ` to ` reader ` for consistency to improve code readability and ensure proper resource management
refactor OAuth service creation and access token handling in PubSubAPI and SDMAPI classes to improve code clarity and ensure proper management of OAuth
replaced the Interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java
added handling for UpdateRegionLocationPlan in ConfigPhysicalPlan and updated logging levels in ProcedureManager and DataNodeInternalRPCServiceImpl to enhance functionality
added a new file ` FileDialogLeakTest . java ` to test the finalization of ` FileDialog ` to ensure proper cleanup and
hbase - 25827 move testopentableincoprocessor from org . apache . hadoop . hbase to org . apache .
svm : do n ' t mark uninterruptible method a non - interruption
[ hotfix ] [ table - common ] remove duplicate code in protobuf byteb to row conversion
updated the condition to check if the dimension ' s disi is not null in DrillSidewaysScorer . java to ensure that the
fix race condition in fakemediasource . preparesource ( ) and setnewsourceinfo ( )
added constants for determining if the Java version is a minimum Java 9 and updated the conditional check to improve compatibility with Java 9 and ensure compatibility with
updated FileReporterTest to explicitly cast null to String and File to ensure type safety and avoid potential NullPointerExceptions
changed the condition from checking end - to - end encryption keys to checking if the end - to - end encryption keys exist to ensure that the
added action bar navigation support in DirectMessageConversation . java to enhance user experience by allowing navigation to the home button
added user retrieval functionality and updated protocol version in RpcServlet and RpcUtils to enhance user management capabilities in the application
added a @ EnabledIfSystemProperty annotation for architecture detection in TestJdbcPluginWithMSSQL . java to ensure compatibility with specific architecture requirements
replaced the usage of ` startClass ` with a new variable ` originalStartClass ` in ` WhiteboxImpl . java ` to ensure
updated exception message and added local handling for parameter register numbers in DexBody . java to improve error reporting clarity and ensure correct registration of
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
[ drools - 4892 ] fix nimbus look and feel in planner example
updated regex pattern in AppPage . java to ensure consistent version formatting to improve code readability and maintainability
updated animation listeners in LauncherAppTransitionManagerImpl to use launcherAnimator and appIconAnimatorSet instead of mUiResetListener to improve animation
dumpedprivatekey : fix typo in error message
fix edit offer data model to use new offer payload
replaced PageParameters initialization with conditional logic for creating milestone parameters based on whether the milestone is open to improve flexibility in managing milestone parameters based
reduced the battery size from 640 to 80 in PipeItemsWood . java to allow for more flexibility in the battery
added a method to generate a unique cluster key and updated cluster storage logic to use this key to improve the identification of cluster states by including blueprint details in the key used to store and retrieve cluster instances
initialized the downgradeAllowed variable to true in UpgradePack . java and added a test for downgrade functionality in UpgradePackTest . java to
replaced ` NameType . ATTRIBUTE ` with ` NameType . ELEMENTSTART ` and ` NameType . ATTRIBUTENAME ` in multiple
add ` ` emulate system load library ' ' flag to enable emulation of library .
replaced instances of ` APP _ NAME _ COMPARATOR ` with ` getAppNameComparator ( ) ` in ` LauncherModel . java `
updated entry handling in DefaultPlatformManager and added directory creation in FatJarStarter to ensure proper resource management and prevent potential errors during file
updated method signatures and assertions in TestSecretKeyCredentialHandler . java for improved clarity to enhance readability and maintainability of the test code
camel - 18443 : fix camel - spring - boot to work with spring 3.0 . 2
updated descriptions in MetricOptions to clarify that only applicable to push - based reporters to improve code readability and provide clearer guid
hbase - 25836 testfulllogreconstruction . testfulllogreconstruction fail on slow ci server
added a new boolean field ` reuseAddress ` and overridden several methods in ` DatagramSocketOptions ` to enhance socket configuration flexibility by allowing
use getshutdownmessage ( ) instead of hardcoded " server shut down . "
douniaberrada : remove deprecate locatablelistener , since it ' s no longer use
updated error messages in VersionInfo . java to clarify that the VERSION _ FIELD field must be searchable and retrievable to improve clarity
replace equalityPredicateColumns with predicateColumns for improved clarity to enhance code readability and maintainability by using more descriptive variable names
reformatted code in HandshakeHandler . java for consistency to improve readability and maintainability of the code
reformatted string concatenation in Navigator . java for consistency to improve readability and maintainability of the code
updated variable access modifiers in RecordReaderFactory . java and added a new test class in RecordReaderFactoryTest . java to improve code readability
added support for GREATER _ THAN _ EQUAL and LESS _ THAN _ EQUAL criteria in MongoQueryCreator and corresponding unit tests to enhance query
refactor group - by expression handling in CalciteSqlParser to improve clarity and maintainability by consolidating group - by checks into a
replace UnsupportedOperationException with an invokeCleaner method in MappedByteBuffer and introduce buffer reference management in FileChannelLinesSpliterator to improve resource management and
replaced direct calls to ` l . getValidator ( ) ` with a local variable ` validator ` in ` LdapUtils . java ` to improve
added ` schedule ( ) ` method to ` CircuitBreakerImpl ` and modified ` testCircuitBreaker ` to use ` ExecutionException ` and ` TimeoutException
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in mmm Launcher . java and ppp
changed the property key from " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in multiple
updated the display name of the TableExtRetrieverTest from " Retrieve view column privileges " to " Retrieve column privileges " and added the @ Disabled
added synchronized keyword to addExportedCount and getExportedCount methods to ensure thread safety when accessing exported counts
updated import statement for IntRangeUtil . requireNonNegative from IntRangeUtil1 to IntRangeUtil . requireNonNegative to ensure compatibility with
updated character validation in HttpParser and added a test for encoded headers in HttpParserTest to improve error handling and ensure correct encoding of HTTP headers
updated the layout resource in ConfigurePagerActivity from trends _ activity to configuration _ activity to improve clarity and consistency in the configuration activity
updated log message to include position information for SLWT to improve clarity of log output for better debugging
updated ForceLeaderTest to conditionally use tlog replicas based on the use of the useTlogReplicas method to improve test reliability by
refactor Thread class to improve thread management to enhance performance and maintainability of the code
refactor template file suffix constants in AbstractConfigurableTemplateResolver for improved readability and maintainability to enhance code clarity and facilit
camel - 14284 : camel - cxf - allow to specify the namespace on the < soap : message / > element
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated the way day and month values are appended to the output in ToChar . java and added new test cases in TestFunctions . java to
added configuration for valid transaction and write ID keys in GenericUDTFGetSplits . java to ensure that valid transaction and write ID keys are
refactor logging statements and initialization of columnNames and columnTypes from ArrayList to Collections . emptyList ( ) to improve code readability and reduce boiler
added null check for book path and improved logging in DataHolder . java ; implemented hasNoInitialImage method in Picture . java to enhance
added a check for ContinueRecord . sid in the SSTDeserializer class and adjusted formatting in the manufactureStrings method to ensure proper handling
updated grid column handling in AppPreferencesImpl and ExtendedListFragment to use a constant for default value to improve code readability and maintainability by
updated the error message for the " diff " field in Platform . java and ComparisonFailureWithFieldsTest . java to clarify that line
fix stick ad playback with drm - protected content
updated path annotations in OkexV3 . java from " / api / margin / v3 " to " / margin / v3 "
simplified conditional statements in LineUtilitiesTests . java for better readability to improve code clarity and maintainability
added error logging for varargs and old array syntax in JavacParser . java and created new classes T6569633 . java with
log a warning if defaultdrmsessionmanager be use on wrong thread
added support for method calls in VariableContext and implemented corresponding tests in TestVariableContext to enhance functionality to support method calls and improve test coverage for
add test for invalid profile string and compilation unit in json parser
updated buffer limit calculation in Piece . java and modified message capacity in SharingPeer . java to ensure correct buffer positioning and improve message
added a response timeout property to NettyRoutingFilter and updated related classes to enhance HTTP client response handling to allow configurable timeout settings for improved
replaced ` NativeLinkTargetGroup ` with ` NativeLinkTarget ` in ` CxxLibraryFactory . java ` and marked related methods as
added unit test base on user forum issue
added a method to visit field access in ASTConverter and convert ExprNodeFieldDesc in RexNodeConverter to enhance the handling of field access
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
[ api ] use relativizeuri ( ) instead of preparerelativeuri ( ) in webclientrequestbuilderimpl
refactor certificate handling in PKCS12KeyStore and update related test cases to improve clarity and correctness in certificate loading logic
added reflection access checks and updated related method names in Bootstrap and ReflectionCheckLinker classes to enhance security checks and improve code clarity
removed the public access modifier from the constructors of the CollisionMap class to allow external instantiation of the CollisionMap class
tradewalletservice : deprecate getrawinputfromtransactioninput ( transactioninput input )
refactor code to use a switch statement instead of if - else for log level assignment to improve readability and maintainability
remove region _ id from account and user table in configuration server
tika - 60284 - throw an encrypteddocumentexception instead of unsupportedoperationexception in oldexcelextractor
[ gr - 23234 ] add - exports = com . oracle . svm . core . jdk = all - unnamed to
updated visibility setting of the image holder in TimeLineCursorAdapter . java to ensure the image is displayed correctly in the UI
increased the timeout duration for the scheduler in BatchingStateChangeUploadSchedulerTest from 10 to 50 milliseconds to allow more time for retries to
refactor file creation logic in ShadowContext and introduce a deleteDir method in ContextTest to improve code clarity and ensure proper directory deletion
replaced custom exception factory implementation with dynamic class loading for AssertionFailedError and ComparisonFailure to improve flexibility and maintainability of exception handling
increased WAIT _ TIME _ MS from 10000 to 60000 in LauncherInstrumentation . java to allow for a longer wait time for
updated import statements and added AUD extension handling in ConnectOAuth2RequestFactory and ConnectTokenEnhancer to enhance OAuth2 connection functionality and
camel - 14284 : camel - kafka - allow to turn off break - on - first error by default
added a new constant selectableItemBackground with a value of 0x10a13 to define a background color for selectable items
replaced individual imports of trade DTOs with a wildcard import and added a method for placing stop orders to streamline import statements and
updated eventType assignment logic in TxnSetOperation . java to ensure correct event type is set when record is null
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 562 : add
updated class name from " AccessLogValve $ 3 " to " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java
added an iterator to update formats in HSSFDataFormat . java and updated test assertions in TestWorkbook . java to ensure correct format handling
[ hotfix ] [ kafka ] deprecate unused method in flinkkafkaproducer
updated condition in CompressedInputStream to use maxCompressedLength instead of chunkLength to ensure proper handling of compressed input stream lengths
camel - 1748 - camel - spring - data - redis - add support for idempotent operation for string key .
fix containerrepair to use metadata instead of damage .
[ mng - 4892 ] only convert local repo to artifact when it ' s a real local repo .
[ hotfix ] [ runtime ] check if the taskmanager be successfully initialize before start it
improve error message when a maven repository can not be find
replaced calls to ` FileStorageUtils . getTemporalPath ( ) ` with ` FileStorageUtils . getInternalTemporalPath ( ) ` and
added a method to find FeedEntryStatus by entries and subscription in FeedEntryStatusDAO . java to improve the retrieval of FeedEntryStatus by
added thread execution logic in ` ContextImpl . java ` and refactored test cases in ` BlockedThreadCheckerTest . java ` to
updated the ` instantiate ` method to accept a ` String ` parameter and added a null check for the ` formatterString ` argument to ensure that
updated file input stream handling in LoadContactsTask to support different Android SDK versions to ensure compatibility with newer Android versions
replaced calls to ` setRemoteAddress ` with ` this . remoteAddress ` and ` this . remoteHostname ` in ` Credentials . java `
added a null check for the shadow class annotated with @ Implements in Robolectric . java to ensure that the shadow class is annotated with
do n ' t disable tlsmutualauthentication if tlsmutualauthenticationrequired be set
updated import statements and added a test for requesting plain HTTP endpoint over HTTPS to ensure proper exception handling for SSL exceptions in the client and server
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to provide access to the consumer and producer instance
removed unnecessary whitespace in PageChangeListener . java and added import statements in FrameRenderer . java to improve code readability and maintainability
corrected the warning message from " email " to " SMS " in CommunicationsManager . java to improve clarity and accuracy of warning messages
# 113 - optimize retrieval of live bean for draftable element
added error handling for IOException in MultipartBody . java to improve robustness against resource temporarily unavailable issues
fix ( core ) : fix typo in executablefactory and zipfolder
updated multiple Java files including EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters to improve code clarity and maintainability
fix attach file action to work directory if file be already create
added LoadOptionsBuilder and SchemaInfoLevelBuilder to AccessTest . java to enhance schema loading options for improved testing accuracy
updated package name from ` org . openj9 . test . loadLibrary ` to ` j9vm . test . loadLibrary ` and
replace exception throwing with returning null in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set project name , enabled , and expanded properties from the prototype to enhance project property management functionality
refactor connectionInfo to use try - with - resources for better resource management to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ datastream ] fix typo in javadoc
replaced the try - with - resources statement with a try - with - resources statement and added a condition to handle EPIPE errors to improve
camel - 14284 : camel - cxf should use classhelper to get the service class name .
added a condition to return true for the " h2 - 14 " protocol in HTTP2ServerConnectionFactory to ensure proper handling of HTTP / 2
refactor parameter handling and conditional checks in LambdaToMethod , ClassFileVisitor , and ReflectionVisitor classes to improve clarity and correctness in handling
fix a bug in the coordinationtransformer where the whnp do n ' t match the whole whnp
updated the timeout value for the copyURLToFile method in DL4JInceptionV3Net . java to allow for longer file transfer
added a method to set the phrase slop in QueryParser to enhance query parsing flexibility by allowing phrase separation
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test reliability by allowing more time
updated the default port from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to
add game scheduler # scheduleparallel ( string , Runnable ... ) to make it easy to run multiple task at once
updated visibility condition for compound in EditShareFragment to ensure correct visibility based on whether edit options are available
updated the progress calculation in DepthController . java to ensure a minimum progress value of 1.1 f to improve the responsiveness of the
remove unused session . packetreceived ( packet ) method that be no longer need .
added debug logging for authentication failure in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClients
added null checks for the service before checking its presence in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUI
added ` hidden = true ` to the ` arity ` and ` smartContractName ` fields in ` PantheonCommand . java ` to
added a class to not instrument CoroutinesRoom $ Companion to improve performance by avoiding unnecessary instrumentation
modified the ` isSupported ` method in ` NegotiateAuthentication . java ` to synchronize access to improve thread safety by ensuring thread safety during the
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the initialization process by eliminating unnecessary method
camel - 15850 : camel - jbang - allow to limit the number of concurrent consumer in a queue .
refactor AuthenticationProvider and TargetObject classes to improve code organization and readability
added handling for tagged images in PdfDocument . java to ensure proper rendering of tagged images in the PDF output
log4j2 - 1349 add unit test for patternlayout . createpatternselector ( )
simonstewart : do n ' t throw an exception if run in hta mode , just launch the test in hta mode
added a new class ` MwThankPostResponse ` and updated the ` thank ` method in ` Service . java ` , while
added a new interface ` SocketBased ` and modified ` ChannelEndPoint ` to implement it to enhance socket handling capabilities in the application
updated revokingStore enabling and disabling logic in Manager . java to improve clarity and functionality of the revoking store logic
added unit tests for the hql collection implicit join functionality in HQLTest . java to ensure correct functionality of the hql collection with implicit joins and
updated assertion to normalize text by removing carriage return characters from expected and actual values to ensure consistency in test output by removing carriage return characters
replaced references to ` toCommit ` and ` pendingCommit ` with a ` filesToCommit ` collection in ` IndexWriter . java `
replaced ` final ` modifiers with ` @ Final ` for several methods in ` BaseError . java ` to ensure method immutability and
added validation for user resource percentage in ConsumeUserResourcePercentActuator to ensure that the percentage value is within the range of [ 0 , 100
added a conditional check for showing old login in AuthenticatorActivity to improve user experience by allowing toggling of legacy login visibility
[ hotfix ] [ test ] rename streamnetworkthroughputbenchmarktests to streamnetworkthroughputbenchmarktest
updated the response page assignment logic in EditTeamPage . java to ensure the correct page is displayed for UsersPage
updated debug log message to provide more context about the error during plugin credentials initialization
refactor shutdown logic in ConnectionManager to ensure proper handling of the live state before stopping and closing the server socket channel to improve resource management and
refactor Rocket class to improve code organization to enhance maintainability and readability of the code
added a private method ` createDynPartSpec ` to handle dynamic partition specifications in the ` BaseSemanticAnalyzer ` class to improve code read
simplify round hack calculation and add debug log
added visitDirectory method implementation in JarDirectoryStep and implemented directory traversal in DirectoryTraversal to improve directory traversal and ensure entries are added to the jar
added a new class JWKSetEditor to handle JWKSet parsing to enable the use of JWKSet as a text property in the configuration
refactor ` finish ` method in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` to directly use ` PendingTerm
improve performance by avoid call method . getparameterklasses ( ) twice .
change default value of fetcher . threads . per . host . by . ip from true to false to align fetcher ' s thread configuration with the
added a condition to check if ` queryTimeout ` is null or zero before setting ` timeToLiveOfQuery ` to ensure that ` queryTimeout
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher , and included target configuration hash logic in HaskellGhciRuleIntegration
refactor ReplicaPosition class implementation to improve code readability and maintainability
server : fix initial delay for network usage stats update task
updated animation interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use a constant FINAL _ FRAME to improve code readability
adjusted swipe length calculation in Background . java to account for display density to improve responsiveness of the navigation bar by adjusting the swipe
added a new module - info . java file and reformatted existing classes for consistency to improve modularity and maintainability of the codebase
fix for npe in jsontype when value be null
removed unnecessary parentheses in conditional statements in ResourceResolverBean . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in executioncheckpointingoptions
updated the parameter type of ` reportInnerClassReferences ` from ` TypeElement ` to ` Element ` and added a new method ` visitPackage `
updated the command string concatenation to include an empty string for " test . tool . vm . opts " to ensure proper formatting of the VM options
replaced FluentIterable with Java Streams for file listing to improve code readability and reduce dependency on FluentIterable
[ 3.0 ] add ` ` register ' ' config option to export to registry ( # 3560 )
do n ' t close otr session if otr mode be disabled
added properties for node label outline size , color , and transparency in the PreviewProperty and NodeLabelRenderer classes to enable customizable outline appearance
refactor ProxySelector , URL , and URLStreamHandler classes to improve code readability and maintainability
updated the boolean parameter from false to true in Win32FontManager . java to enable the font management functionality in the application
added null check for the variable ' v ' before visiting it to prevent potential NullPointerException when ' v ' is null
fix : jdtbatchcompiler do n ' t handle classpath error
added content alignment and text anchor properties to LabelBlock and its tests to enhance label rendering capabilities by allowing customizable text alignment and anchor settings
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future development
implement lazy loopback detection . this provide ~ 10x speed improvement of selenium server startup .
added a Locale parameter to the ` fromRfc1123DateString ` method and updated its usage to ensure consistent date formatting across different locales
pdfbox - 4892 : fix flaky test : filedownloadviaproxytest . testdownloadmissingfile ( )
nifi - 1746 : add property to control output behavior for jsonqueryelasticsearch
cloudstack - 4892 : remove aggregationratio parameter from quotamanagerimpl . updaterunningvmusage ( ) method
[ java ] fix switch / cases indentation for election .
fix streamfilesp . close ( ) in readfilesp . close ( )
refactor widget skipping logic in PageChangeListener . java for improved clarity and maintainability to enhance readability and maintainability of the code
added isWriteProtected ( ) method to Workbook and HSSFWorkbook classes , and improved username length handling in FileSharingRecord to
added a try - catch block around unregisterInvalidatedSessions ( ) to handle potential exceptions during session cleanup
refactor CategorizationFragment to improve code readability to enhance maintainability and facilitate future development
[ hue ] fix ` ` bridge report light as reachable = false ' ' error
add a loading flag to fmlclienthandler and add a method to check if the client be load
add ` ` unit . millions ' ' and ` ` unit . thousands ' ' to UI and BlockInventoryFragment to provide more
refactor MessagePackParser to use a switch statement for handling BYTES and STRING types and introduce a BinKeyPojo class to improve code
added parameterized tests for query handling reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to improve test coverage for
test to reproduce issue 95 . the test currently pass so the bug will be mark a invalid .
added boundary checks for x2 and y2 in GeometryUtils . java to ensure coordinates do not exceed specified offsets
removed unnecessary casts and updated sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to improve code clarity and ensure consistent sorting order
do n ' t crash if testplan can not be find
updated method names from " dbmsName " , " schemaName " , " tableName " , and " schemaName " to " dbmsName "
refactor argument handling in Parser to check for non - strict mode identifiers before adding to parameters to improve error handling and prevent potential null pointer exceptions
update default protocol from " SSL - HTTP / 1.1 " to " scf . getProtocol ( ) " to ensure the correct protocol is
set default value of displayVolume to true in VolumeVO . java to ensure volume display functionality is enabled by default
refactor version method to accept a boolean flag and update log message formatting to improve code clarity and maintainability by using a more descriptive
modified the logic for determining the result of ` found ` in ` ChangeLogParameters . java ` to improve handling of global change logs to ensure
changed log level from warn to debug in JtaTransactionManager to reduce log verbosity for better troubleshooting
hhh - 14827 - skip test for oracle because basicformatterimpl cause exception
updated socket timeout handling in mmm Connection . java and ppp Connection . java to ensure proper handshake and socket timeout settings for SSL connections
updated action bar size calculation in multiple fragments to account for the MainActivity ' s translucent state to ensure consistent size calculation across fragments
enable cha by default and make some class final
http : / / issues . apache . org / activemq / browse / amq - 4237 - set the thread context classloader
refactor test methods in JodaTimeRangeRandomizersTest to use AssertJ assertions and simplify data provider usage to enhance test clarity and
updated WebDescriptor . java to redirect xsd resources based on SERVLET _ MAJOR _ VERSION to ensure compatibility with servlet version 5 and
fix readiness . isready ( ) to return true when the item be a node .
replace liveEndpoints with handler . endpoints in StorageProxy . java to align with the updated endpoint handling mechanism
added a null and empty check for creationStatements in IdTableHelper . java to avoid potential NullPointerExceptions during execution
update RPC _ VERSION from 1 to 2 in DataRpcConfig and UserRpcConfig to reflect the latest version changes
added security checks before accessing package - private classes in ObjectStreamClass and ObjectStreamField to enhance security by ensuring only authorized classes can access package
removed unused utility methods from Utils . java and made UGSCommandCount private in XLCDCommunicator . java to streamline code
replaced ImmutableMap with unmodifiableMap for tags in DefaultMetricsTagProvider . java to improve immutability and simplify code structure
added a new test suite for MockBrowserTest in ClientDriverSuite . java to enhance test coverage for the MockBrowser functionality
change default setting from Level . OFF to Level . ERROR in mmm Launcher . java and ppp Launcher . java to improve cl
changed instance variables from non - final to final in IconNormalizer . java to ensure immutability and improve code clarity
added a ` firstCallPrepareDo ` feature to the ` PrepareInterceptor ` class to control whether to invoke the prefix method based on its value
refactor showWorkspace and exitOverviewMode methods to improve focus handling and state management to enhance user experience by ensuring workspace behavior only occurs when the
replaced ` asEagerSingleton ( ) ` method calls with direct injection in ` Auth ` and ` AuthWithStoreFeature ` classes to
updated the ` incomingAssociations ` method to accept an ` ignoreInvisibleAssociations ` parameter and modified the conditional check for reversal associations to enhance
cloudstack - 4892 : remove private ip from capacity table when delete pod ( # 4892 )
updated the command description in ProfileServlet . java for better clarity to provide users with instructions on how to access the Async Profiler Home Page
fix : add required flag to api model ref property
renamed configuration classes from ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreEnvironmentBootstrapConfiguration ` to ` CasCoreConfigurationWatchAutoConfiguration
refactor FeatureFlags class for improved clarity to enhance maintainability and readability of the code
updated UUID generation and improved string concatenation in ConfigStore and CommonSetup classes to enhance clarity and maintainability of unique identifier generation for large
added image loading logic in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper handling of cached bitmaps to improve performance by avoiding
updated configuration message for compaction on full CRUD tables to clarify that compaction behavior is always run via queries regardless of the value of this
added a null check for the storage path in the isDown ( ) condition to ensure that the storage path is not null before proceeding with
refactor resize threshold checks in multiple hash map classes to use a new method to improve code readability and maintainability by reducing redundancy
refactor LDAP connection handling to improve code readability and maintainability
removed the ` required = true ` attribute from the ` @ XmlAttribute ` annotation in ` AggregateDefinition . java ` to mark the attribute as
removed debug tracing logs from TouchInteractionService and RecentsAnimationDeviceState to clean up the code and improve performance by eliminating unnecessary
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoft
updated variable names from ` hits ` to ` hits2 ` and ` hits3 ` in ` TestMultiSearcher . java ` to improve
added a new file ` LucenePackage . java ` containing a package - private constructor and a method to retrieve the package to facilit
update sizeInBytes calculation in RAMDirectory . java to correctly account for the difference between existing and existing sizeInBytes
updated calculations in StatsRulesProcFactory and added estimation methods in GenericUDAFBloomFilter and GenericUDAFEvaluator classes to improve accuracy of
added a null check for getDrawerToggle ( ) before invoking onDrawerSlide to avoid potential NullPointerException when getDrawerToggle ( ) is
( chore ) camel - spring - security : document unused parameter
added logic to determine if modules should be scanned based on classpath or class loader settings to improve flexibility in module scanning based on user - defined
fix msbibconverter corporate bibentry without author
added a method to cancel core recovery in the CoreContainer class to ensure recovery is only canceled when ZooKeeper is aware to improve recovery management and prevent
replaced direct calls to ` System . currentTimeMillis ( ) ` with a new method ` currentTimeMillis ( ) ` to improve code readability and maintain
simplified the click logic for the first item in the found list to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ doc ] fix typo in javadoc of pgproperty
added trust resolver , role hierarchy , and permission evaluator to the SecurityEvaluationContextExtension and updated related tests to enhance security expression functionality and ensure default
added a check to set exponentSize to primeSize - 1 if it is zero to ensure exponentSize is set correctly based on primeSize
replaced direct usage of ` FileStorageUtils . getSavePath ( mAccount . name ) ` with ` FileStorageUtils . getUsable
refactor the combine method in DistinctSqlAggregation to use accumulate for each value instead of delegate to improve performance by reducing the overhead of
added a test to verify that the login method executes post - login activities for a user after successful authentication to ensure that the login process correctly handles
pdfbox - 4892 : allow extractorframesrare to pass a dictionarypath to spanishstrippedverb
refactor CharArraySet to simplify code initialization and improve type checking to enhance readability and maintainability of the code
updated error messages and simplified the check for unsupported track formats to improve clarity and maintainability of the code
replaced ` JsBundleAndroid ` with ` AndroidPackageable ` in ` JsBundleGenrule ` and updated related tests to ensure compatibility with
added UTF - 8 character encoding support in PinotClientRequestServlet and refactored StringDictionary to use byte arrays instead of StringBuilder to improve
updated the case name from " Logical Analyzer " to " Logic Analyzer " and replaced application icons with their corresponding tile icons to improve cl
replaced direct instantiation of ` vector ` with a singleton pattern using ` instanceClassName ` and ` instanceClass ` to improve performance by avoiding
removed syncMetaLeader ( ) method from CMManager . java to streamline leader synchronization process
update html return value for contribution question with no response
added TestLoggingExtension import and annotation to DiagramRendererTest . java to enhance logging capabilities for tests
updated the ` findProperty ` method to accept a ` useCamelCaseMapping ` parameter across multiple classes to allow for more flexible property name mapping
added VIOMI _ WATERHEATER _ E1 device type to MiIoDevices . java to support the electric water he
refactor SSL session data retrieval to use a local variable for clarity to improve code readability and maintainability
added a new file CreateNewSpreadsheet . java to implement functionality for creating Excel sheets with comments to facilitate the creation of spreadsheet
replaced ` Duration ` with ` long ` for time - to - live in ` CacheProperties ` and updated related getter and setter methods to
replaced CONTENT _ URI with CONTENT _ URI _ NO _ NOTIFICATION and modified related code to use CONTENT _ URI _ NO _ NOTIFICATION
updated the test compile group version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with
replaced ` synchronized ( lucidaFontName ) ` with ` synchronized ( this ) ` in ` SunFontManager . java `
added a condition to check if the character is ' < ' before verifying the length of ' ltLen ' to ensure proper handling of input
removed String . format call from the return statement in Workspace . java to simplify the code by eliminating unnecessary string formatting
added import for Scope and sent a message for validation errors in ValidateCommandStep . java to provide user feedback when validation errors are not found
refactor IntegrationTestContextLoader to use Spring ' s DefaultResourceLoader and FileSystemResourceLoader for resource loading to improve resource loading flexibility and
updated scroll handling logic in ` Component ` , ` Container ` , and ` JavaSEPort ` classes to improve responsiveness to component interactions
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated method signatures in ` StatsService ` , ` DefaultStatsService ` , and ` DefaultStats
replace occurrences of " $ 1 " and " $ 2 " with " $ \ n1 " and " $ 2 " in the expression replacement
simonstewart : fix the test case so it do n ' t fail on window .
[ mondrian ] fix typo in mondrianproperties
added error handling and stack trace printing in ProcessTools . java and improved permission checks in CustomLauncherTest . java to enhance debugging capabilities and
added a test method for embedded images in TumblrRipperTest . java to verify the functionality of the Tumblr
added a condition to convert storeType only if the symbol has a slot for it to ensure conversion only occurs when the symbol has a slot for
fix initialisation for chunk that do n ' t have a load position
replaced ` IndexWriterConfig . OpenMode ` with ` PrintStreamInfoStream ` in ` BaseLockFactoryTestCase . java ` to enhance
tika - 1347 -- add support for tika - config . serviceloader . dynamic = true and tika - config .
updated imports and refactored type declarations in DocLint . java and DocLintTester . java to improve code clarity and maintainability
added a new command constant IMPORT _ CMD and modified conditional checks in DataImportHandler . java and DataImporter . java to enhance command validation and
added a test to verify that modifying inner classes does not modify their definitions when ignoreDefinition is set to true to ensure that inner classes are not
removed unused import of android . util . Log in JettyService . java to clean up the code and improve readability
added a new parameter ` workspaceScreens ` to the ` checkItemPlacement ` method and updated related logic to include workspace screens
http : / / issues . apache . org / jira / browse / amq - 4892 - add a quitquitquit servlet
refactor code to store transformed rows in a list before processing to improve code readability and maintainability by reducing redundancy
added a check to skip processing if Teredo is present on Windows to ensure that only Teredo processes are processed
fix add contact dialog when the protocol provider be not register .
replaced the method of registering a bean definition with a bean component registration to improve clarity and maintainability of the registration process
changed the parameter of the drawBitmap method from r . left and r . top to null to ensure the drawBitmap method is called with a
fix Meitrack and Totem date format ( fix # 1193 )
changed access modifiers of ` getFontPath ` and ` getPlatformFontPath ` methods in ` SunFontManager ` and ` X11FontManager `
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods are outdated and should not be used in future development
[ hotfix ] [ test ] fix clientmapstoretest failure
add an option to keep empty sentence in docprocessor
added error handling for directory creation and checksum verification in MavenArtifactFetcher to improve error handling and provide clearer feedback on directory creation failures
removed unused ` IDELazyTreeLoader ` class and updated ` systemProvider ` to be non - static in ` ReusableCompiler . java
fix npe in directagentattache when resource return null answer .
refactor sendEmail method to throw MessagingException instead of logging an error message to improve error handling and provide clearer logging for email sending failures
fix npe in pipeitemsobsidian and add a package - info . java file
updated DateMathParser to accept a Locale parameter instead of using TimeZone . getDefault ( ) to ensure consistent handling of different locales in date parsing
added a boolean property ` includeDecals ` to ` StorageOptions ` and its getter / setter methods in ` StorageOptionChooser ` to enable
updated the ` generateDocumentation ` method to accept a ` null ` parameter and added a suppression warning in the ` getImplementedDatabases ` method
updated HiveProtoLoggingHook to store end times as a JSON object and modified related test assertions to improve performance logging accuracy and enhance test reliability
corrected a typo in the log message from " Begining " to " Beginning " in SolrIndexConfig . java and DocExpiration
updated the version check in ignoreRecordAttribute to use the MAJOR _ VERSION constant instead of a hardcoded value to ensure compatibility with different
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP authentication to ensure proper handling of password authentication in LDAP users
replaced ` OrcInputFormat ` with ` BasicStatsNoJobTask ` and updated the conditional check to use ` BasicStatsNoJob
fix an npe in reloadmanager # beforeaction ( ) ( # 4566 )
updated the implementation of the VisibleAdvance class to improve performance and maintainability of the code
fix : handle terminal exception in sharedindexinformer # start ( )
added support for dynamic number columns in EdgeDataTable and NodeDataTable to ensure proper handling of numeric columns in Sparklines
added null checks for groupId and artifactId , and improved formatting in RawPom . java to enhance code robustness by ensuring non - null
added null check for ` apiInfo ` before assignment to avoid potential NullPointerException when ` apiInfo ` is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added texture loading and shader disposal functionality in PhotoPanel and FlameRenderer classes to improve texture management and resource management during rendering operations
updated scene parameters and added a context menu for empty items in InsnListEditor and InsnProxyListEditor to enhance functionality and improve user
modified character validation logic in CSSParser . java to ensure only valid characters are processed to improve robustness and prevent potential ArrayIndexOutOfBoundsException
added a check for the look and feel decoration property in UIServiceImpl to ensure default look and feel is applied based on application properties
removed unnecessary ' this ' keyword from method calls in HostRoleCommandDAO . java to simplify code and improve readability by eliminating unnecessary
rename F2 _ TEST and F6 _ UNKNOWN constants to F5 _ TRANSPONDER _ TEST _ REPLY and F6 _ TRAN
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and logic flow to enhance user experience by ensuring proper swipe
replace HostDatabase with ColorStorage in ColorsActivity . java to utilize color storage functionality
refactor String class to improve code readability to enhance maintainability and facilitate future development
removed unused Logger imports and added Charset for ASCII in multiple classes to streamline logging functionality and improve code readability
added a method ` getGlobals ` to the ` MapGlobalResolver ` class to provide a way to retrieve global entries from the map
added multiple assertions to the sendcoin method in MultiSign34 . java to ensure the sendcoin method correctly verifies the expected behavior of the send
test : migrate cuffletest to junit 5 ( # 1305 )
updated classpath appending to use the system ' s path separator to ensure consistent path handling across different operating systems
changed the access modifier of the augmentSuccessViewModelObjects method from static to instance to allow access to the augmentSuccessViewModelObjects method from
updated field retrieval method from ` getField ` to ` getDeclaredField ` in ` TestUtil ` and added assertions for presence of fields in ` AbstractEntity
removed the ` conf ` parameter from the ` Outlink ` constructor across multiple parser classes to simplify the code by eliminating unnecessary parameters
removed the ` LexicalContext ` parameter from the ` ensureUniqueNamesIn ` and ` copyFinally ` methods across multiple files to simplify method
added imports and modified return statement in UseLambdaForFunctionalInterface . java , and modified type checking in TypesInUse . java to enhance code
removed the appendClassSelector call from the file set addition in TestNGAntTask . java to simplify the code by eliminating unnecessary method
removed unsupported check for Aggregate input in HiveCardinalityPreservingJoinOptimization to streamline the code by eliminating unnecessary checks
fix forgerepository . getregistry ( ) throw an npe if the registry do n ' t exist
swapped the positions of x3 and y3 assignments in the Intersector class to ensure proper assignment of x3 and y3 to
added default methods for sbe decoder in MessageDecoderFlyweight . java to implement unsupported operations for SBE versions
test : add test for rest client cluster health
fix bug in work receiver that cause bytebuffer . copyof ( byte [ ] ) to crash .
added version ID support and updated cluster definition handling in ClusterDefinition . java and GSInstallerClusterProvider . java to enhance cluster management by allowing
camel - 14284 : camel - ftp should use source code generate configurer to avoid reflection configuration
[ zeppelin - 3390 ] fix error message when interpreter option can not be load ( # 3390 )
added a condition to handle cases where no locals are reserved for declared variables and created a new test class to ensure that no locals are reserved for
added a check for basic constraints in ForwardBuilder and created a new class BuildEEBasicConstraints for testing to ensure proper handling of basic constraints and
added JDBC initialization for values with the same time after the first database connection to ensure compatibility with PostgreSQL versions 9.5 and above
added maxMessageSize parameter to SimpleEchoClient and implemented input buffer size validation in AbstractWebSocketConnection to ensure that the WebSocket connection does not exceed
replaced undeleteAll and rollbackUndeleteAll boolean flags with pendingDeleteCount and assert statements in SegmentReader . java to simplify deletion logic
added null check for scopes in ClientRegistration and updated test cases accordingly to ensure that null scopes are not allowed and improve test clarity
added null checks for orderBy before adding parameters and explanations in CartesianProductStream . java to avoid potential NullPointerExceptions during execution
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t allow back up vmsnapshots for kvm
added a debug log statement when initializing the Hive log4j to improve visibility into the initialization process for better debugging
added a check for non - empty tasks before processing asset loading tasks to prevent potential NullPointerException when there are no tasks available
[ openpgp ] do n ' t throw exception if node do n ' t exist
refactored relationentity to use id instead of id _ property to improve code clarity
added checks for empty barcode in Code128Reader and Code39Reader , and improved exception handling in TruePositivesBlackBoxTestCase to
replace TreeSet with LinkedHashSet for storing CipherSuites to maintain insertion order
refactor control character validation logic in Escaper . java and update expected string format in InternationalizationTest . java to improve code cl
refactor ProviderSqlSource to check for CharSequence type instead of String and modify return type handling to improve type safety and allow for multiple SQL provider
updated logic in InternalMNode to handle null aliasChildren to improve robustness by preventing potential NullPointerExceptions when accessing aliasChildren
added a method to calculate layout transition offset for a specific page to improve layout transition handling for better user experience
renamed variable ` synthetic ` to ` pruned ` and adjusted related method calls for clarity to improve code readability and maintainability by using
added a call to setAccessible ( true ) on a method in WidgetInterceptor . java to ensure that the method is accessible for accessibility
added a conditional check to set the literal initializer only if the raw name equals " database . server . id " to ensure that the default value
updated the Mozilla version from Macintosh and Intel Mac OS X 10.7 ; rv : 36.0 to AppleWeb
added a menu item for accessing the web interface in BasicSystemUtils . java to enhance user experience by providing a direct link to the server
refactor the handling of ` value ` and ` innerThen ` statements in ` HandleGetter . java ` to improve clarity and maintainability
added error handling for Record building in EncryptedSlideShow . java to improve robustness by preventing ArrayIndexOutOfBoundsException during record building
refactor : more logging of pq behavior ( # 14065 )
removed duplicate call to loadBattlePassManager in Player . java to improve code clarity by eliminating redundancy
updated Docker image version from 1.0 . 0 to 1.1 . 0 and modified SSH configuration options in PortForwardingContainer . java to
added a large array and forced garbage collection in ThresholdTest . java to ensure proper memory management during test execution
updated condition checks in StdErrLog . java and added debug logging assertions in StdErrLogTest . java to improve logging clarity and ensure
fixed - rremoteservice . getremoteserivce ( ) method should return instance of rremoteservice ( #
added methods ` isSelected ( ) ` and ` setSelected ( boolean b ) ` to the ` MultiButton ` class and updated the ` Boolean `
updated import and class name from UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to align with the new naming conventions
[ issue # 5892 ] fix the bug that brokercontroller do n ' t initialize the replicamanager if it be n ' t
refactor RedisReactiveHealthIndicator to utilize ReactiveRedisConnection for connection management to improve resource management and ensure proper closure of Redis connections
updated background color handling in ProgramGridCell and refactored theme color retrieval in Utils to improve code clarity and maintainability by using a
renames occurrence of callparticipanttransportaddresschanged to callpeertransportaddresschanged so that it would well reflect our new call architecture that also
removed multiple type adapter registrations in ToolingApiLauncher . java to streamline type adapter registration for better maintainability and clarity
removed an unused constant from TestPayloadCheckQuery . java to clean up the code and improve readability
refactor ConsoleReader to streamline character printing and buffer drawing to improve readability and maintainability of the code
added user information to the exit message in BaseCommand . java to enhance debugging capabilities by providing context about the command execution process
move test class to api subpackage to avoid clash .
[ hotfix ] [ test ] remove unused slotsharinggroup constructor
added a condition to check for " one . util . streamex . emulateJava8 " before creating a new Java9Specific instance to
updated texture references from " data / wheel . png " and " data / cloudconnected . ogg " to " data / sys . png
rearranged the registration and unregistration of the mCloseSystemDialogsReceiver in the Launcher . java file to ensure proper handling of
updated import statement for Cluster in HostsRemovedEvent . java to ensure proper functionality of the Cluster class
updated refresh token behavior and added support for introspection in the ClientDetailsEntity and related classes to enhance the client ' s ability to introspect tokens
updated method calls to use ` writer . write ( htmlEncode ( ) ) ` instead of ` write ( ) ` and added an ` html
added PhrasePrefixQuery and SpanQuery references to the Query class to enhance query functionality by including prefix matching functionality
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` for better readability in ` CommentsInserter . java
replaced the method ` isLiteralString ` with ` isThisElementAnOperandInABinaryStringConcatenation ` to improve clarity and
changed method parameter types from ` A ` to ` Object ` in multiple classes to improve type safety and consistency in assertion methods
updated the package and interface for ThrowingFunction from ` org . apache . shenyu . plugin . jwt . lambda ` to `
refactor ` getUploaderBehaviour ` and ` setUploaderBehaviour ` methods in ` AppPreferences ` and ` PreferenceManager ` to improve
fix ( prettyprinter ) : fix npe in final field in constructor
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s Bitmap implementation
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and added an unused variable ` c ` to improve clarity and
updated PageMarkerResources drawable from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to clarify the
added a reinvocations counter and updated debug messages in BasicInvocation . java to track the number of reinvocations for better debugging and tracking
updated the calculation of topPadding in DefaultLookAndFeel . java to use getInnerHeight instead of getHeight to ensure proper alignment with inner elements
added a break statement in the Recognize . java file to improve control flow in the Recognize . java file
added preference handling for lock home screen behavior in multiple classes to improve user experience by allowing haptic feedback when the home screen is locked
updated ExcelBatchReader to handle different cell types for formula results and added a new test for text formula functionality in TestExcelFormat to improve handling
fixed bug 138047 - immutablefield no longer report assignment in anonymous inner class
added a private ` UserAgent ` field in ` CommaFeedConfiguration ` and updated ` HttpGetter ` to use it to ensure user agent is
added ' required = true ' to @ XmlAttribute in AvroDataFormat . java to ensure that the XmlAttribute is required for XML processing
changed log level from info to debug for file not found message to improve logging granularity for better debugging
rename ` QueueTest ` to ` QueuedPipeTest ` to clarify the purpose of the test class
updated the version check logic in BukkitMain . java to use the ` getUniqueID ` method instead of the existing method to ensure compatibility
updated the logic for handling empty includes and included patterns in DefaultRoutesCollector . java to improve clarity and correctness in determining routes based on
added a vertex color feature to the PShape3D class to enable customizable color settings for rendering
updated SchemaDotFormatter and DiagramRendererOptionsTest to use generic types for foreign key and table references to enhance code clarity and maintainability
replaced ShadowMatrix extraction with direct matrix access in ShadowMotionEvent . java to simplify code and improve readability by eliminating unnecessary shadow
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
simplified class definition handling in GroovyEngine . java to improve readability and maintainability of the code
[ hawtio - branding ] added plugincontextlistener to handle plugin context initialization and destruction .
removed redundant command print statement in NativeCodeGenerator . java to streamline output for better readability
replaced updateMotors ( ) and updateActiveInstances ( ) calls with fireChangeEvent ( ) in FlightConfiguration . java to improve event
added a new test method ` should _ fail _ if _ actual _ and _ expected _ cause _ have _ different _ types ` to `
removed redundant variable assignments for flatten and pack in AutomaticDependencies . java to streamline code and improve readability by eliminating redundancy
replace ` requestedScopes ` with ` allowedScopes ` in ` ClientDynamicRegistrationEndpoint . java ` to ensure that the correct default scope is used
simonstewart : add marionette test for the firefox driver
camel - 14284 : camel - jbang - allow to expose route description via route property .
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a line to set the edge ' s weight in ImporterCSV . java to ensure that the edge ' s weight is correctly configured for
fix tariff cost per month by use current date when calculate the cost per hour
added an additional column ' adsrc ' to the SQL query in DatabaseMetaData . java and updated the way the column default value is assigned to
add an assertion to make sure binarized sentence be not build by parser .
added a string representation of user properties in the User class to improve debugging by providing more context about the user ' s properties
refactor message body extraction to handle null values more gracefully to improve error handling and provide clearer feedback when message body is null
[ hotfix ] [ runtime ] rename taskdeploymentdescriptfactory # fromexecutionvertex to fromexecution
make rosteraccess . cansubscribe ( ) and rostermanager . isgroupvisible ( ) public
added a reference to " maven . test . classpath " in AbstractJRubyMojo . java and removed unchecked suppression in Cuc
removed unnecessary parameter type handling and updated assertions in MethodHandleImpl . java , and added a new test method in MethodHandlesTest . java to
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilter
updated width and height comparison logic in URLImage . java from " > " to " ! = " to ensure image dimensions do not differ from
added a check to ensure the class name does not start with " META - INF / " and modified the package name extraction logic to ensure that
added background task scheduling for image creation in the edt mode to improve UI responsiveness during image download operations
updated the expected value check in StackWalkerTest to use a dynamic expected value based on the major version to ensure tests accurately reflect the expected
changed the access modifier of the ` addViewportJob ` method from protected to public to allow access to the method from other classes
removed the ` num - output - partitions ` parameter from the ` SimpleWordCount ` class and related files to simplify the code by elimin
removed server restart settings and exit status settings from TestDatabase . java to simplify server behavior and improve test reliability
added null and empty checks for block in NodePathsConvertOperator and improved child check in SchemaQueryMergeOperator to enhance robustness by prevent
added a method to retrieve the total harvesting time and updated related classes to utilize this method to improve tracking of harvesting time
updated draw parameters for particle rendering in ParticleEditor . java to improve rendering performance and responsiveness
added keyserver _ port property handling in UpgradeCatalog240 . java and updated related tests in UpgradeCatalog240Test . java to ensure proper configuration
added a transparent color to the SvgViewerFactory to enhance the visual appearance of the SVG viewer
removed ` @ Config ( minSdk = M ) ` from ` ShadowKeyguardManagerTest . java ` and ` ShadowKeyguardManager .
updated the ` containsExactly ` method to accept varargs and utilize ` asList ` for converting them to a list to improve method flexibility and simplify the argument handling
updated the Bandwidth builder to include refillGreedy and improved key validation in AsyncBucketProxy construction to enhance the clarity and
updated GermanAnalyzer and WordlistLoader classes to support an external list of stopwords to enhance functionality for german language analysis and improve word
added hooks to the Generator class and modified transformations to utilize them to enhance query execution control and enable hook execution for materialized views
added error handling for NoClassDefFoundError in REngine . java to ensure supported state is set to Boolean . FALSE when no class definition
refactor TraceWebFilter to utilize SpanAndScope for better span management to improve code clarity and maintainability by centralizing span management
updated exception handling in AbstractUpdateCommandStep to check for null cause before accessing its message to avoid potential NullPointerException when the cause is null
added base URL to SolrServerException in CommonsHttpSolrServer . java to provide more context for error handling
corrected the logic for setting the landscape state in HSSFPrintSetup . java to ensure correct behavior when landscape is not set
modified return statement to handle null input to ensure proper handling of null values in JavaVoidObjectInspector
added validation for argument names in ArgDesc . java to ensure that invalid argument names do not lead to runtime errors
added functionality to request location updates based on the background listener in AndroidLocationPlayServiceManager to improve user experience by allowing customizable background location handling
change the condition from checking if primitiveType is not GL _ POINTS to checking if primitiveType is equal to GL _ POINTS
trufflestring : fix compare byte [ ] to byte [ ] when compare string .
fix for issue # 228 : combobox setcommandlist ( ) have no effect .
nifi - 1748 : fix issue with backslashes in tl alias file name
updated command usage in ZkCLI . java to use ' 9983 ' instead of ' zkcli . sh - cmd ' to ensure compatibility
updated equality checks for progress and status details in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler to improve code read
added a conditional check for remote gRPC status before posting a severe event to avoid unnecessary event posting when remote gRPC status is OK
removed unnecessary whitespace from method signatures in XYItemRenderer . java to improve code readability and maintainability
fix entity not be add to the tick ' s entity id in forgechunkmanager .
[ fix ] glsurfaceviewapi18 . geterrorstring ( int ) do n ' t work for gl11 error
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 549 : add
updated server URI handling in RFC2616BaseTest . java to ensure correct server URI format and improve test accuracy
added a call to addToHelperList ( ce ) in mmm Construction . java and ppp Construction . java to enhance the functionality
added a condition to skip the first of the " [ [ ] " escape sequence and updated the return value from - 1 to - 2 to
added security permissions for setting the context class loader in mmm Transport . java and TCPTransport . java to enhance security by restricting access to
updated file path handling in ReceiveExternalFilesActivity to check for null folder before calling populateDirectoryList to improve robustness by preventing null pointer
added a null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is not
removed debug logging statement in BarrowmanCalculator . java and adjusted deltap calculation in TubeCalc . java to improve logging clarity and
modified column retrieval logic in TimelineControllerImpl to support both Node and Edge tables to ensure correct column assignment based on object type and improve data
added a method to register extra components in the BaseBrokerStarter class to allow customization of extra components for the broker admin application
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` to verify the behavior of SQL
peergroup : use a linkedlist instead of an arraylist for candidate peer
tweak the abstract builder so that it do n ' t try to save too much data .
added configuration options for config node simple consensus snapshot trigger threshold and updated retry policy in RatisClient to allow dynamic configuration of retry attempts based
refactor multiple Java classes for consistency and clarity to improve code maintainability and readability
added a check for the ManagedService annotation before creating JMXHelper to ensure JMXHelper is only registered when it is annotated with @ ManagedService
fix for tika - 1358 : hanlde non - unicode entry name in packageparser
added a new file TestSplitThruPhiDivMod . java with methods for testing division and modulo in a loop to demonstrate
refactor template lookup methods for generic types and superclasses in TemplateRegistry . java to improve code readability and maintainability by reducing red
updated the constructor of ByteArrayOutputStream from 512 to 1028 to optimize memory usage for improved performance
added comments to the languagesExcluded array to clarify symbol availability for Chinese , Indian , and Korean , and Fars
modify byte array allocation and transfer logic in TransferCompletionHandler . java to optimize memory usage to improve performance by reducing the number of byte transfers
replaced windowfocuslistener with windowadapter in menu and popup menu
added a null check for the source AST node in SemanticAnalyzer . java to improve error handling for invalid table aliases
fix aABB scaling when render skeletal mesh
added ` getSolrHome ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to provide a
added the @ ComponentScan annotation to SpringWebConfig . java to enable the use of Spring ComponentScan in the application context
added a method to retrieve the user ' s platform account to enhance account management functionality in the user list
added unit tests for installing packages in ShadowPackageManagerTest and modified application info handling in ShadowApplicationPackageManager to ensure correct application information is
refactor AvailableSettings class for improved readability to enhance maintainability and facilitate future development
added imports and constructors for TransactionCapsule and ReceiptCapsule in TransactionTrace . java to facilitate the handling of transaction execution and
add ` ` hazelcast . client . shuffle . member . list ' ' property to enable shuffling member list
changed the type of ` val ` from ` Text ` to ` CrawlDatum ` in ` SegmentReader . java ` to ensure the correct
refactor JsonDeserializer class to improve code readability to enhance maintainability and facilitate future development
updated CONFIG _ NAME and CONFIG _ DEFAULT _ PATH in TsfileDBConfig . java and modified fetchSize handling in QueryProcessExecutor . java
updated error message from " trunk ( ) only takes STRING / CHAR / VARCHAR types as second argument " to " trunc ( ) only takes STRING
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve readability
initialize the title variable to an empty string to initialize the title variable to an empty string to ensure the title variable starts from an empty string
fix asynchttpclientcall to handle empty body
deprecate embeddedserverinstance in favor of discovery .
change initialization of macadapter so that it can be use in jabrefframe .
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update related references to improve clarity
removed unnecessary whitespace in the return statement in HandlerLibrary . java to improve code readability and maintain consistency
changed the ` hideUnprivilegedObjects ` variable from non - final to final in ` PgConnection . java ` to ensure immutability
fix test failure : concataudiofilterdatasource be n ' t initialize properly .
added support for saving Giphy Android 11 video in Android Q mode to enhance compatibility with Android Q devices
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 565 : fixed
refactor multiple classes including EhCacheTicketRegistry , LdapPasswordPolicyEnforcer , GoogleAccountsService , SamlService , and SamlCom
simplified the retrieval of logging instances by using ` computeIfAbsent ` to improve code readability and maintainability
hbase - 25828 remove unused class dataoutputstream from hbaseobjectwritablefort96migration ( addendum )
updated table paths for " rowid " in TestAcidOnTez . java to ensure correct data handling for bucket and row IDs
hhh - 13133 change the log level from info to debug to reduce the amount of log under non - debug mode
added getDefaultProviderName ( ) method to Platform . java and updated provider name handling in OpenSSLProvider . java and StandardNames . java to ensure consistent
added @ Captor annotation processing for instance fields in MockitoBeforeTestNGMethod . java to enhance the handling of Captor annotations
added error messages for non - existent class and method names in TestSuiteBuilder . java to provide clearer feedback when test cases are not found
updated import statements and improved prefix computation logic in GroovyAutoComplete . java and GroovyLanguage . java to enhance code clarity and ensure proper
use graphhopperosm instead of graphhopper for import
simonstewart : use the default client config when create a selenium client
changed the visibility of the mHideSysUiScrim variable from final to non - final and added functionality to toggle the visibility of the
renamed the ` enqueue ` method to ` enqueue ` and introduced a ` canceled ` flag in ` OkHttpCall ` to improve clarity
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and logic flow to enhance user experience by ensuring proper swipe
updated the RequestMatcher interface to extend the org . springframework . security . web . util . matcher . RequestMatcher to ensure compatibility with the
updated the ` DeferredAttr ` to include an ` IF ` keyword and added a new abstract class ` ImplicitLambdaConsideredForApplic
simonstewart : add test for boxing constructor and value of .
added unit tests for applying display metrics with default and density qualifiers to ensure correct behavior of display metrics based on device dimensions
replaced IOException with RuntimeException in ExternalViewReaderTest . java and updated timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource in RootCursor from a logo to a launcher icon to improve the visual appearance of the launcher in the application
added content text to errorBuilder in FileUploader . java to improve error handling by providing more context for error messages
refactor ConcurrentHashMap to improve performance to optimize concurrent access operations
added methods to adapt user trades and fill data in the AbucoinsTradeService to enhance trading functionality for user accounts
removed unnecessary event handling and updated claim logic in Claim . java and Delete . java to improve code clarity and ensure proper claiming behavior
simonstewart : add support for the htmlunit driver for the firefox and internet explorer
added support for handling " varbinary " data type in BlobType . java to ensure proper handling of varbinary data types in the database
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 562 : set cookie with
added synchronization around language . simpleTypeMap assignment in LibFFIContext . java to ensure thread safety when accessing language . simpleTypeMap
updated ` InboundBuffer ` to use ` ContextInternal ` and ` VertxThread ` instead of ` Context ` to improve thread safety and
added a new method ` deadServerNoTimeout ` and modified timeout settings in ` LdapTimeoutTest . java ` to improve timeout handling and ensure
corrected a typo in the usage message from " UniocdeData . txt " to " UnicodeData . txt " to ensure
camel - 14284 : fix the unit test error of cxfmessageheadersrelaytest
refactor multiple UI classes for consistency and clarity to improve maintainability and readability of the codebase
added handling for BoosterSet in ComponentAssemblySaver and modified return value in BoosterSet . java to enhance functionality to support boosterset
add the ability to configure a password authentication for the jabref proxy request .
updated metrics key from BLOCKCHAIN __ FORK _ COUNT to BLOCKCHAIN _ FORK _ COUNT and modified interval calculation to improve cl
replace InternalError with a return statement in mmm Class . java to simplify error handling for compile stub invocations
replaced mortbay logging with Apache Commons Logging in TestIPCUtil . java to improve logging consistency and maintainability
use httpclient . request ( ) instead of httpclient . chunkedtransfer ( chunkedtransfer ) .
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure attributes are properly cleared before processing
added polling period parameter and improved error handling in VerificationAfterDelayImpl and After classes to enhance verification reliability by providing a polling mechanism for
added custom authorization manager configuration and modified masking logic in SemanticAnalyzer to enhance security by enabling SQL standard authorization for tests
[ zeppelin - 4892 ] fix zeppelin interpreter to copy jar file from zeppelin
hbase - 25827 fix checkstyle violation in hbaseadmin
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to performance issues
updated ` calcXBounds ` method in ` BarLineChartBase ` and ` CombinedChartRenderer ` , and modified ` mMinX `
added a try - finally block to ensure content and error handlers are cleared after parsing to ensure proper resource management and prevent potential memory leaks
added buffer release for headerBuffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to include a
added null and closed checks before closing the result set to prevent potential NullPointerExceptions and ensure proper resource management
updated driverVersionMajor and driverVersionMinor values from - 1 to 10 and 6 in DerbyDatabase . java to reflect the new driver version
fixed bug 138047 - usestringbufferlength no longer throw an npe if there be no literal
removed error logging statement from RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
refactor createDb method to return a Connection object and ensure it is closed to improve resource management and prevent potential memory leaks
refactor CreateCustomMetric , ListResources , and associated test files to improve code organization and maintainability
hbase - 25827 add config option hbase . hstore . compaction . max . size . offpeak to disable off - peak
updated BitstampDepositAddress to handle JSON deposit addresses and added corresponding unit tests to ensure correct unmarshalling of deposit addresses and validate
replace IllegalStateException with IllegalArgumentException in BufferingResponseListener to improve error handling when buffer capacity is exceeded
updated the method to convert ` linkPath ` to absolute path before calling ` linkInDeletedDirectories ` to ensure the correct path is used for
updated InvocationFinishedEvent to implement MetricsEvent and replaced operationType with invocationType to enhance metrics tracking capabilities and improve thread safety
refactor network interface retrieval to check for multicast support before returning the first element to improve robustness by ensuring only valid multicast interfaces are processed
removed duplicate check for valid checksums in ChangeSet . java to streamline the code for better readability and maintainability
added a clone method to BufferedChecksumIndexInput that throws an UnsupportedOperationException to provide a placeholder implementation for the clone method
updated return statements in Circle . java to use ' radius * radius ' instead of ' Math . sqrt ( x * x + y * y
added a conditional check before setting the frequency band in P25Channel . java and implemented overridden methods in P25ExplicitChannel . java to ensure
renamed variables and constructors from ` tapSquare ` and ` inTapSquare ` to ` tapRectangle ` and ` tapRectangleWidth ` and
change default value of DEFAULT _ REPLICATE _ ON _ WRITE from true to false to disable replication on write for improved performance
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` method and implemented date formatting in ` Util ` to enhance
added getDelegate ( ) methods to TraceCallable and TraceRunnable classes to provide access to the delegate instance
replaced error response handling with result message retrieval in FileActivity . java and updated sync intent in FileDisplayActivity . java to improve user experience
added a method to write data to a stream in the ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to
added a boolean parameter to a method call in JavascriptContext . java to enable additional functionality in the JavaScript context
removed alignment parameters from TableCell constructor calls in BaseTextFormattingHelper . java and added a new constructor in TableCell . java to simplify the
added a new file ` TracingAutoConfiguration . java ` to configure tracing settings in the Brave framework to facilitate tracing configuration
added a Para instance to the start before adding content to the submission to enhance the functionality of adding content into the submission
updated the handling of queryable segments in ServerQueryExecutorV1Impl to improve clarity and functionality to enhance code readability and maintainability
refactor VertxBufferTest class to improve code readability to enhance maintainability and reduce complexity
add unit test for messagesubmissionchunk and fix a bug in hsmf
changed the access modifier of mContext from private to protected to allow subclasses to access the mContext variable
removed unused imports for SortedSet and TreeSet in ShowTablesOperation and ShowViewsOperation to improve code clarity and reduce unnecessary dependencies
added a new class MongoDataIntegrityViolationException and updated MongoTemplate to use it to improve error handling for data integrity issues in MongoDB
added a return statement to the jobCompletionFuture method in JobCoordinationService . java to ensure the method returns the correct job completion future
replaced the ` bitsToHumanReadable ` method with ` bytesToHumanReadable ` and introduced a ` mimeType2HUmanReadable `
replaced ` newMergePolicy ` with ` newTieredMergePolicy ` in ` TestUpgradeIndexMergePolicy ` and added a new test
added a check to return early if the overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
updated error logging message in CpuNDArrayFactory . java to include a link to the documentation for CPU instructions to improve clarity of error reporting
refactor loadSettingModels method to accept an InputStream parameter for reference properties to enhance flexibility in loading settings from different resource sources
added null checks for incoming fields , Terms , DocsEnum , and LeafReader in FilterLeafReader . java to ensure that null input values
add key size support to jcecrmfencryptorbuilder and add test
updated IOException to include the exception ' s message instead of the exception object in NetSocketReader . java to improve error handling by providing more context
added @ Inject annotation to multiple Java classes to ensure proper dependency injection for dependency injection
updated assertions in ` BundledDistributionTest ` and added assertions for database user attributes in ` PostgreSQLTest ` to improve test coverage and ensure correct
[ hotfix ] [ stream ] allow user to specify a job name for print and log .
updated scale calculation logic in OverviewState . java to differentiate between two - panel layouts to ensure consistent scaling behavior across different device profiles
updated IcePlainsBiome to extend SnowyBiome instead of GrassyBiome and adjusted temperature and rainfall
removed unnecessary zone parameter from getMinTime and getMaxTime methods in DataUpdateManager and StorageUtils classes to simplify the code and improve readability by
[ j2kt ] add isqualified to thisreference ( ) .
updated regex pattern in XhamsterRipper . java from " wmde " to " xhamster . com " to ensure proper
fix a memory leak in the glowworld . getentities ( ) method .
modify tableName assignment to include schema if provided to ensure the correct table name is generated based on the provided schema
fix an npe in the console filter ( # 4560 )
added functionality to select and deselect all files based on the number of files in the FileMenuFilter class to enhance user experience by allowing users
[ java ] use termlengthmask instead of termwindowlength in networkpublication .
fixed javadoc for guildupdateownerevent . getguildid ( string ) .
added conditional logic to increment ` inPortalTicks ` based on creative mode and a minimum value of 80 to ensure ` inPortalTicks ` is
add support for compress data in cluster monitor . close # 232
refactor ResponseTemplate , TransactionalListCodecTemplate , TransactionalMapCodecTemplate , and TransactionalQueueCodecTemplate classes to improve code organization and maintainability
change variable types from int to long for length calculations in Base64 . java to improve precision and prevent potential overflow issues
removed unnecessary null check for header in RendererConfiguration . java to simplify the conditional check for null renderer
cloudstack - 5241 : scale vm with custom disk offering should not change the disk offering
updated import statements and modified order builder logic in HitbtcAdapters . java to utilize specific classes and improve clarity to enhance code
[ hotfix ] [ runtime ] fix the variable name of consecutiveidlecount to consecutiveidlecount
updated the description URI from " jruby " to " jrubyscripting " in JRubyScriptEngineFactory . java to align the service
updated the variable name from ' name ' to ' displayName ' for clarity to improve code readability and maintainability by using a consistent variable
updated the condition in ParticipateAssetIssueActuator to include an additional check for negative exchange amounts to ensure accurate validation of exchange amounts for
simplified the iteration logic in FeedUtils . java to improve code readability and maintainability
added a test method ` testHDF4 ` in ` HDFParserTest . java ` to verify the parsing of HDF4 files to ensure
added a new constant ` CALCITE _ 6092 _ FIXED ` and updated test cases in ` SqlOperatorTest . java ` to
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added methods to quietly close multiple AutoCloseable instances to improve resource management and prevent potential memory leaks
updated the button text for positive confirmation in RemoveFileDialogFragment to use a common yes message to improve user experience by providing a clearer confirmation
added a check to ensure srcWidth , dstWidth , and dstHeight are not zero before applying the image to avoid potential errors when image dimensions
replaced ReflectionHelpers with direct method invocation for defining a class in UnsafeAccess . java to simplify the code and improve performance by eliminating
updated regex pattern in GUIUtil . java and added unit tests in GUIUtilTest . java to ensure proper validation of domain names and improve test
updated conflict handling logic in CachedRowSetWriter to use a counter for conflicts instead of a boolean flag to improve clarity and accuracy of conflict
check for pubspec . yaml in pubspec . yaml , not just version .
added a null check before assigning the memory in the REFERENCE case to prevent potential NullPointerExceptions during memory assignment
updated Injector . java to handle seed files and improved error logging to enhance robustness and clarity in injecting seed URLs
added a condition to check if hideOriginal is true before setting the original view ' s visibility to ensure that the original view is hidden when hide
updated the calculation of maxNodes and modified the condition for maxTrips in DefaultLoopPolicies . java to ensure maxNodes does not exceed maximum
blender loader : do n ' t generate texture with unsupported uv coordinate type .
added error handling for file deletion in EncodeActivity and improved input validation in DecodedBitStreamParser and MatrixUtil to enhance robustness and
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality for seeking and closing streams
updated SQL query to use oldPrefixLength instead of oldPrefix to improve clarity and correctness in substring handling
replaced the addition of elements to convertedValsList with a constructor that initializes it directly from the collection to simplify the code and improve readability
added a deprecated constructor to the AbstractTimer class to indicate that the constructor should no longer be used in favor of a new one
added a nightly build warning message for users when running a nightly version of Universal Gcode Sender to inform users about known issues
add sorting of response by recipient team ( # 3390 )
updated return statement to specify the reason for removing unnecessary ` throws ` declarations to improve clarity of the error message for better debugging
deleted the ` CacheApplication ` class and replaced its usage in ` CommonsApplication ` and ` ShareActivity ` to streamline the codebase by
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future development
replaced direct calls to ` Resources . getSystem ( ) ` with a call to ` ResourcesManager . getInstance ( ) . getConfiguration ( ) `
added a new constant ` VERSION _ DEF _ STACK _ REPO _ UPDATE _ LINK _ EXISTS ` in ` VersionDefinitionResourceProvider . java
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
fix npe in cfmetadata . getindex ( ) when oldindexname be null
added import statements for XML resolver helpers and readers in CheckPackageAccess . java to enhance package accessibility for XML resolver utilities
renamed methods ` save ` to ` add ` and ` updateExecutionContext ` across multiple classes to improve clarity and consistency in method naming
remove loop begin from successor if it ' s an instance of LoopExitNode to ensure proper processing of loop exit nodes
updated RecyclerView references to WidgetsRecyclerView and added currentRecyclerView handling in SearchAndRecommendationsScrollController . java to improve widget
added a conditional check for terminal support in ConsoleReader . java to ensure proper handling of terminal input during execution
changed the data type of ` fiveSeconds ` and ` timeAllowed ` from ` long ` to ` int ` and updated related methods to improve
added session validity check before flushing session data in AbstractSessionCache . java and modified session handling in RemoveSessionTest . java to ensure proper session
refactor index change handling to check for null columnNames before processing to improve robustness by avoiding potential NullPointerException when columnNames is null
replaced Vector with ArrayList for managing RadioButton instances to improve performance and modernize button management
updated UserManagerCompat and related classes to use UserManagerCompatVM instead of UserManagerCompatVL and UserManagerCompatVN to improve
added methods to retrieve JDBC major and minor version in multiple database classes to ensure compatibility with JDBC versions 9 and above
refactor ActionGraphCache to use MapDifference for mismatched rules and improve error message formatting to enhance clarity and maintainability of mismatch rule
added LockDatabaseDesc and UnlockDatabaseDesc classes to handle database locking and unlocking operations to enhance the user experience by providing detailed information about the
refactor RankingUIModel and RankingToolbar to use setter methods for setting properties to improve code readability and maintainability by
added handling for disconnect messages in HandshakeHandler and updated logging in NodeImpl to improve clarity of disconnect messages and enhance logging accuracy
added a test for setting and deleting a storage group in IoTDBAuthorizationIT . java to ensure proper error handling for setting and deleting storage groups
chore ( regen ) : update proto file to match proto change
updated type validation logic to support variable declarations and improved error messaging for missing types to enhance type validation accuracy and provide clearer feedback for missing
added afterTestClass and beforeTestClass methods to StepScopeTestExecutionListener to enhance test context management during test execution
updated import statements and modified constructor parameters in CountersManager . java for consistency and clarity to improve code readability and maintainability by using
updated logging statements in MultiSteps . java and SendEmail . java to use placeholders instead of string concatenation to improve readability and maintainability of
added null check and cloning of joinKeys in JoinDesc . java to ensure that joinKeys cannot be modified after initialization
updated WebAuthnConfiguration to use PrincipalResolver for authentication handlers to enhance flexibility by allowing customizable principal resolvers
added an ` ImmutableList < Path > searchPaths ` parameter to the ` addSettingsFromFile ` method and updated the ` XcconfigParser `
changed variable declarations from non - final to final in Oracle . java to enforce immutability and prevent unintended modifications
[ hotfix ] [ runtime ] disable unaligned checkpoint by default
fix unsupportedoperationvisitor for order by , explicit table , and map - value - constructor call ( # 11943 )
add ` graal . compiletheworldtest . log ` to enable debug log
added a check to throw CannotDelambaException if the variable ' s type is not LocalVariable to ensure proper handling of non - Local
added support for MySQL in CreateTableGenerator to handle timestamp column types to ensure proper handling of timestamp data for MySQL databases
added class loader management in EnvConfiguration . java to ensure proper class loader management during execution
added a condition to set the ejection delay for the motor configuration when stageNr is zero to ensure proper motor configuration behavior when stageNr is
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated the corresponding test method to clarify the order
refactor TransactionUtil2 to improve code structure to enhance maintainability and readability of the code
updated issuer validation and issuer resolution methods across multiple classes to accept an Optional < OAuthRegisteredService > parameter to enhance flexibility in issuer claim resolution
updated string concatenation and added null check for DocCollection reference in ClusterState . java to improve null safety and provide clearer error messages when the
replaced getStyle ( ) with getAllStyles ( ) for alignment setting to ensure consistent alignment across the application
added methods to set foreign database and schema names in ForeignKeyColumn and related classes to enhance flexibility in managing foreign database and schema names in the
[ java ] do n ' t allow unsuccessful leaders to join live log and throw a clusterexception .
replaced static import of ` Shadows . shadowOf ` with a private method ` Shadow . extract ` in ` ShadowActivity ` and `
refactor selection root handling in FileSelection . java and add a test for DRILL4192 in TestBugFixes . java to
deprecate item # oninventorytick and replace it with item # onarmortick in favor of item # oninventorytick .
[ recaf ] add support for export a war to a zip file .
added null check for getSherlockActivity ( ) before calling invalidateOptionsMenu ( ) to prevent potential NullPointerException when accessing getSherlockActivity (
updated binding logic for widgets in AppsCustomizePagedView and Launcher classes to improve widget management and ensure correct binding behavior
added new constants for air pressure , air quality , co2 ppm , and voc ppm in EcobeeSensorThingHandler to
fix a nullpointerexception in operationsetserverstoredcontactinfobookimpl . getprofilepage ( ) .
added environment variables for " AAPT " and " AAPT2 " in Genrule . java and updated tests in GenruleTest . java
truffle : only dump access table if truffleinstrumentbranches be enable .
added null check before disposing the message to avoid potential NullPointerException when disposing the message
added @ Getter annotation to the db field and modified init method visibility in TxCacheDB and TransactionCache classes to enhance encapsulation and improve
updated warning messages in CoreContainer . java to clarify that LogWatcher is not yet implemented for log4j and to provide clearer
replaced ` printStackTrace ( ) ` calls with ` fail ( ) ` and ` return ` statements in ` CategoryPlotTests . java ` to
replaced ByteArrayOutputStream with SmallByteArrayOutputStream in IOSImplementation . java and introduced a new SmallByteArrayOutputStream class to optimize memory usage and
use intmap instead of hashmap in shader . getattributetype ( vertexbuffer . type )
replaced ` territory = en _ US ` with ` shutdown = true ` in the ` DriverManager . getConnection ( ) ` call to
updated the handling of the " FirstExchangeCompletedTimestamp " and " LastExchangeCompletedTimestamp " attributes to check for null values before casting to improve
updated javadoc method parameters and added multiple output checks in TestUseOption . java to improve code clarity and ensure correct language handling in tests
updated the condition to check if the result is incomplete and the size of items exceeds 10 to ensure that items are not empty before proceeding with
updated command - line argument handling and introduced a timeColumnName variable in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and functionality
updated variable names and modified output format handling in tests to improve clarity and ensure correct file extension based on output format
updated condition in DeviceProfile to check for QSB enabled status to ensure proper handling of device insets when QSB is not enabled
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and simplified null checks in ` SceneKey ` and ` Gltf
added date handling functionality to AbstractGenerator and Generator classes , and updated HttpConnection to utilize this new date header to enhance the generator ' s
replaced instances of Adler32 with CRC32 in Store . java to improve performance by using a more efficient CRC32 implementation
updated the default value of the XenHeartBeatInterval property from " any # of seconds " to null to ensure that the heartbeat
added a new warning type ` ZERO _ AREA _ FIN ` and updated geometry warning handling in ` FinSetCalc . java ` to improve
( chore ) camel - elasticsearch : fix serialization of metadata in elasticsearchio
[ h2 ] [ sql ] add trunc function to h2 , oracle , postgresql , sqlserver , sqlserver2 ( # 2
added a check for " Memory Pool not found " error logging in MetricUtils . java and updated error messages in MetricUtilsTest . java to
added a boolean parameter ` useJavaScript ` and modified return statements in UserTests , UserContext , FileAccess , and FileTreeNode classes to enhance
updated validation messages to use ` RUNTIME _ PROTOTYPE _ TYPE ` and ` Types . PROTOTYPE _ FACTORY _
updated the BACKFILL string from " / generateAnomaliesInRange " to " / replay " to improve clarity and consistency in the
replace instances of ` new DataWord ( ) . getData ( ) ` with ` new DataWord ( 1 ) . getData ( ) ` and
refactor app notification handling in AllAppsContainerView . java to use child views instead of adapter items to improve code clarity and maintainability
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
removed TODO comment regarding starting context handlers in ResourceHandlerTest . java to clarify the intended behavior after ContextHandlerCollection is started
removed a conditional check for WORKSPACE _ CUSTOM in Cling . java to streamline the code by eliminating unnecessary checks
trufflejdkservices : remove assert that lookupmodule be not null .
updated the test method name from ` shadowInvocationWhenChildIsInstrmentedButUnshadowed ` to ` shadowInvocationWhenChildIs
updated import statements to use the new package name ` itbit ` instead of the deprecated ` v1 ` package to ensure compatibility with the latest
ww - 4352 fix nullpointerexception in profile and scope interceptor
changed classes from non - final to final in Utils , ApplicationUtils , AsyncSocketFactory , and Whois to enforce immutability and provide
fix potential resource leak in registrationsapiutil . getuserbyuuid ( )
updated serialization and handling of Vector and Hashtable in mmm Util . java and ppp Util . java to improve type safety and clarity in
added ` tableNameWithType ` to the warning log message in ` RetentionManager . java ` to provide more context about the table ' s
added trim ( ) . length ( ) . length ( ) . length ( ) check in QueryExecutorImpl . java to ensure proper handling of
fix ` ` resourcepackfilenotfoundexception ' ' by use ` ` modfile . getfilepath ( ) . tofile (
refactor TransformerBuilder handling to use a single instance for node and edge builders instead of multiple instances to improve code readability and maintainability by
modified conditional logic in RecentsView . java to handle task view visibility and focus checks more effectively to improve user experience by ensuring task views
changed the return type of the calculate method in CalculatorEndpoint and CalculatorRestEndpoint from Map < String , String > to BMIView
replace comparator . comparing with thenComparing in QueryCommand . java to simplify the code and improve readability
fix the hay bale not be able to damage . close # 269
refactor environment variable handling in WindowsProcessAddressSpace , J9DDRImageProcess , and NewElfDump classes to improve clarity
added support for plugin configuration in OptionsParser and corresponding tests to enhance flexibility in configuring plugin property values
updated condition in HashJoinBatch to check if hashTable is not empty instead of null to improve clarity and prevent potential NullPointerExceptions
updated timestamp validation logic in Timestamp . java and refactored test methods in TimestampTest . java to improve clarity and ensure correctness of
[ java ] use context . archivecontext ( ) instead of archiveCtx in clusteredserviceagent .
added a check for the ` isCompiled ` condition in ` COMPILE _ THRESHOLD ` and corrected the assertion in ` LambdaForm .
added two new test methods for image mosaic functionality in AbstractTest . java and updated related test cases in multiple online test classes to enhance testing
refactor TogglableFlag to use a constant for the launcher namespace and enhance default value handling to improve code readability and maintainability
updated logging messages in DockerClientFactory to include additional context to improve clarity of error messages for better debugging
added a check to return early if the current platform is Android to optimize performance by avoiding unnecessary processing on Android devices
replaced assertEquals with assertThat for improved readability in RoutesTest . java to enhance readability and maintainability of the test code
added new functional interfaces for byte , float , and short predicates in the package com . speedment . common . function to facilitate
updated getSubsColor and setSubsColor methods to return a String instead of an int in PmsConfiguration . java to allow for more flex
added a conditional check before deregistering the invocation registry to ensure that the invocation registry is only deregistered if the future completes successfully
replaced the manual creation of ` ControlFrameBytes < Void > ` with a call to ` output ( null , nop , close . as
added a check for the " redirected " flag before starting the WelcomeActivity in LoginActivity to ensure that WelcomeActivity is launched only when
added ShadowCheckedTextView class and integrated it into Robolectric to facilitate testing of CheckedTextView functionality in the Rob
added Serializable interface to ParserState and made several fields transient in AccessorProperty and Property classes to ensure proper serialization of ParserState objects
added " identrustdstx3 [ jdk ] " to the VerifyCACerts . java file to enhance security by enforcing
removed redundant setting of TEMPDIR _ CONFIGURED and TEMPDIR attributes in WebInfConfiguration . java to streamline code by eliminating
add test case for occupant . getnick ( )
[ hotfix ] [ quic ] remove unnecessary volatile modifier from quicsession constructor .
updated MergeScheduler and mergePolicy settings in CreateIndexTask . java to use writer . getConfig ( ) . setMergeScheduler and LogMergePolicy
refactor code formatting and improve variable naming for clarity to enhance readability and maintainability of the code
added handling for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange . java to improve default value handling for computed date and numeric
refactor NbtScoreboardIoService to improve code readability to enhance maintainability and facilitate future development
refactor SAML2 service provider metadata handling to simplify resource validation and improve error logging to enhance code clarity and ensure metadata storage behaves correctly
changed the visibility of the ` printer ` variable and refactored the printer creation logic into a separate method ` createPrinter ( ) ` to
added BigDecimal import and updated order ' s average price calculation in HuobiAdapters . java to ensure accurate representation of order ' s average price
updated projection handling in ProjectionOperation and TypeBasedAggregationOperationContext to use target and field names instead of their names to improve clarity and consistency
modified the viewer addition logic to check if the player is in the viewers list before sending a packet to ensure that only players in the view
added ConstantState implementation to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to enhance visual representation of drawable states during rendering
refactor connection handling in SPDYClient to use AsyncEndPoint and ISession . Controller for improved clarity to enhance code readability
fix ( core ) : fix npe in protostuffobjectinput when object be null
pdfbox - 4892 : reformat code , a suggest by valerybokov
refactor BarrowmanCalculator class to improve code readability to enhance maintainability and facilitate future development
added a conditional check to return early if axes are not shown to improve performance by avoiding unnecessary calculations when axes are not shown
replaced ` setFilter ` and ` setWrap ` with ` unsafeSetFilter ` and ` unsafeSetWrap ` for filter and wrap settings to
updated variable declaration for clarity in XmlWorkflowServiceImpl . java to improve code readability and maintainability
added SSL support for HTTPS connections in CustomUrlJob and created a new CustomUrlTrustEverything class to enhance security by restricting SSL connections
updated clock rate retrieval logic to use ` getRealUsedClockRateString ( ) ` instead of ` getClockRateString ( ) ` to ensure
refactor TextureAtlas class to improve code readability to enhance maintainability and reduce complexity
updated the method to return the module name instead of the product name in ProjectGenerator and added a method to set the module name in Apple
added locking and release functionality to the TestSlot class to ensure proper resource management and prevent potential memory leaks
# 113 - fix for findids with inheritance ( # 113 )
updated WebSocketServletRFCTest to use ByteBuffer instead of closeFrame for reading from input to improve clarity and correctness of WebSocket response handling
[ wasm ] fix memory leak in native - image .
add ttl option to create table in sql client ( # 1748 )
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified serialization logic in CustomChangeWrapper and XMLChangeLogSerializer to
replaced ` QueuedThreadPool ` with ` Server ` and ` HandlerCollection ` in ` DeploymentExceptionTest . java ` to improve server management
added error handling for Fresco initialization in CommonsApplication . java and modified vector drawable creation in NearbyController . java to improve
added null and empty checks for objectName before trimming to avoid potential NullPointerExceptions and ensure valid input
updated error message from " could not find file " to " could not open file " in Command . java and TestPrint . java to improve
[ hotfix ] [ table - planner ] use static final string for planner and executor class
updated variable names and logic in KeyTool . java for clarity and consistency to improve code readability and ensure proper handling of issuer and subject
added a @ Deprecated annotation to RuntimeOptions . java to indicate that the class is outdated and should no longer be used in future development
replaced ByteBuffer encoding with direct string byte retrieval using UTF - 8 charset to simplify code and improve performance by eliminating unnecessary byte array allocation
added a new interface PermissionEvaluator with permission checks to facilitate permission evaluation based on authentication context
added a new option ` ERASE _ LINE _ ON _ FINISH ` in ` LineReader ` and implemented cleanup logic in ` LineReader
[ hotfix ] fix checkstyle issue in masterfilesystem
updated exception types from SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _ ERROR and BLOCK
refactor expandwar to use urlconnection instead of juc . getjarfile ( )
improve error handling in defaulthttpclient ( # 3390 )
changed the centering of the spinner container from center to centerAbsolute to ensure the spinner is displayed on the absolute side of the screen
[ hotfix ] [ network ] fix memory leak in networkbufferpool
refactor MBeanServer initialization and release logic in TestJmxIntegration . java to improve resource management and prevent potential memory leaks
replaced ` @ RunWith ( AndroidJUnit4 . class ) ` with ` @ Rule ( RetryTestRule ) ` in ` Abstract
refactor QueryStateMachine to remove the autoCommit parameter and update related logic to streamline transaction management and improve code clarity
pdfbox - 4892 : add package - info . java file for optiq csv package
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] fix checkstyle violation in streamtasktestharness
refactor URI handling in Request . java and add a new test for CONNECT methods in RequestTest . java to improve request URI handling and ensure
updated key references and refactored storage point retrieval logic in MainApp , DataStorageProvider , and WhatsNewActivity to ensure compatibility with
added methods for handling session availability and unavailability in SessionManager to improve session management functionality and ensure correct priority changes
added " liquibase . pro " to the package scan list in ServiceLocator . java to enhance package scanning capabilities for Liquibase
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider . java ` to simplify the
updated the ` loadWithNewGlobal ` method to accept an additional argument for arguments to enhance functionality by allowing passing additional parameters during global loading
refactor path matching logic in FastPathResolver for improved readability and consistency to enhance code clarity and maintainability by standardizing the
replaced usage of ` length ( ) ` method with ` getRetainedSize ( ) ` method in ` HiveClientModule . java `
renamed methods and variables related to randomization depth in EnhancedRandomImpl , FieldPopulator , and PopulatorContext to improve clarity
[ calcite - 3596 ] [ calcite - 3596 ] fix unsupportedoperatorexception for function with lead /
clear the proxy request headers in AbstractProxyServlet . java to ensure proper header management during proxy requests
added a check to skip the test if SA attach is not expected to work to ensure the test does not run when SA attach is not expected
added null check for bgColor in GraphicsDevice . java and implemented translucency support in TranslucentWindow . java to ensure proper handling
added error handling for null user information in UserInfoActivity to improve user experience by providing a clear error message when no information is available
added custom serialization and deserialization for precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers can be used on different machine
[ flink - 20663 ] [ table - common ] [ connector / kafka ] support append update mode in connector connector
added a new integration test class ` MultipleOutputsIntegrationTest ` for verifying named output functionality to ensure that named output groups can be used in
updated regex pattern and modified content handling in FileSettings . java to improve readability and maintainability of the code
[ stateless ] add variable value from flow snapshot when create a new flow instance .
replaced ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests . java
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode for testing purposes
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode "
do n ' t swallow exception when load model from normal or blockstate
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
pdfbox - 4892 : do n ' t use pixeldensity for 2x
refactor RussianLowerCaseFilter to improve code readability to enhance maintainability and facilitate future development
replaced server and client properties handling with empty properties in CsvBulkLoadToolIT . java to simplify configuration setup and improve code clarity
replace ` File . separatorChar ` with ` File . pathSeparatorChar ` in ` displayName ` to ensure consistent file path formatting across different operating
add reset support for wavloader and littleendien
added support for repeat first line indentation in ColumnText to enhance formatting flexibility for better readability
changed the type casting of ` oid . equals ` from ` Oid ` to ` Object ` to ensure proper type handling for equality comparison
fix npe in hikariconfig . getmetricstrackerfactory ( ) ( # 1748 )
loopex : rename controlflowanchornode to controlflowanchored to avoid ambiguity
added a line to set the button ' s focus to false to ensure the button is not painted for better user experience
updated the condition to check for UniqueConstraint , PrimaryKey , and ForeignKey in DatabaseSnapshot . java to ensure proper handling of primary key and foreign
added a deprecated method ` getAccountLedgersWithParams ` to the ` KucoinAccountServiceRaw ` class and updated the ` AccountAPI `
do n ' t throw an exception if the grouprest do n ' t contain a dc . title
do n ' t throw an exception if there be no word in the hypothesisutterance
added unit test base on user forum issue
updated thread setting from background threads to database update threads in FeedRefreshUpdater . java and added getter / setter methods in ApplicationSettings . java to
increased the FASTSCROLL _ THRESHOLD _ MILLIS from 40 m to 10 m in RecyclerViewFastScroller . java to
updated the SystemClassName initialization to use " Ljava / lang / System ; " instead of using MetaUtil to determine the internal name to improve
hhh - 13644 fix nullpointerexception in createstoredprocedurequery
added null check for API properties in RestSwaggerSupport . java to avoid potential NullPointerException when accessing configuration
added two new classes , BinaryFrameGenerator and TextFrameGenerator , to handle WebSocket frames for binary and text data to enhance WebSocket frame processing capabilities
simonstewart : use webdriverwait instead of localdriver . findelement ( by id )
refactor latitude and longitude calculations in RandomGeo3dShapeGenerator to use multiplication instead of absolute value to improve clarity and efficiency in generating
added a keepAlive method to the ClassLoader class to ensure a fresh instance of the ClassLoader is removed
changed the return value from false to true in the SQLiteDatabase class to reflect the correct functionality of the database operations
fix findjsr166lockmonitorenter to only report the lock monitorenter if the sig start with ` `
added MkdirStep to multiple classes and updated steps count in FatBinaryTest to ensure proper directory creation for output files and improve test coverage
updated coordinate checks and error messages in MeshLeveler . java to improve clarity and accuracy of error messages for better debugging
( chore ) camel - pmml : skip kie - pmml parsing and compilation when pmml module be unavailable
updated the condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure the correctness of the thermal status check
added a conditional check for OS - specific temporary directory creation in MountableFile . java to ensure compatibility with different operating systems when creating temporary directories
added a check for Windows OS in PrjFileReader and CatalogManager to ensure memory - mapped buffers are not used for file channels on Windows
added a null check for the organization in the pom . xml file to ensure that Plugis are required to have an organization in the
removed contributor license information from SepPostingsWriterImpl . java to improve clarity and maintainability of the license information
deleted the TerminateWebSessionListener . java file to the functionality is no longer needed in the codebase
updated the argument passed to executeChildProcess from an empty string to the system ' s Java class path to ensure the process execution uses the correct
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv ,
added JUnit test annotations to ` AddLicenseHeaderTest . java ` to address issue # 3198 related to Javadoc changes
changed the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the LAUNCHER3 feature feature
added a ` < div class = ' noPrint ' > ` tag to the HTML output in ` HtmlThreadInformationsReport . java `
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and updated TEST _ VERSION _ CURRENT
added macosx symbolicator and task handles in BsdDebuggerLocal . java and expanded OS detection for Darwin in PlatformInfo . java
[ java ] use weakreference instead of threadlocal to avoid memory leak .
do n ' t log networkdispatcher exception when connection reset by peer
[ java ] initialize adminbuffers when conductorbytebuffers be null .
added a break statement in the TouchImageView class to ensure proper control flow in the code flow
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
remove flushonsslhandshakelistener since it do n ' t do anything
added type checks for " java . lang . Object " and " java . lang . GenericTypeVariable . CONTRAVARIANT " in Type
replace NonBlockingHashSet with ConcurrentSkipListSet for memtablesPendingFlush to improve thread safety during concurrent operations
added null check for ` errs ` in ` MemberEnter ` and updated error handling logic in ` JavaCompiler ` , and introduced new classes `
replaced ` SWT . NO _ BACKGROUND ` with ` SWT . NONE ` in ` BugInfoView . java ` to simplify browser
updated the dialog ' s cancel method from ` finish ( ) ` to ` dialog . cancel ( ) ` in AboutActivity . java to
fix integerstamp . getdiv to handle negative value
added a method to read a stream from an InputStream and updated the image instance creation to use this method to improve code readability and maintainability
added variable declarations and scope management in SwitchCompiler , ExprGenerator , and CaseStmtToken classes to enhance the handling of variable expressions in the switch
refactor RSAClientKeyExchange to handle failover logic more robustly to improve error handling and debugging for cipher provider initialization
updated the import statement for ` psapi . lib ` in ` WinGammaPlatformVC10 . java ` to ensure compatibility with the new library
updated string concatenation in StringUtilsTest . java to use platform - specific newline character to ensure consistent line endings across different operating systems
added encoding settings for UTF - 8 in TemplateEngineFreemarker and updated malicious javascript string in ApplicationController to ensure compatibility with
replace ByteArrayInputStream with String for byte array conversion in CRDGeneratorTest . java to improve performance and readability of the code
make field in sampleresenderfactory final so that it can be reuse by other class
added a conditional check for the " testngEmailableReporter " system property before adding the EmailableReporter to enhance flexibility by allowing custom
added handling for quote characters in CommandLineBuilder and updated test assertions in CommandLineBuilderTest to improve command line parsing accuracy and ensure correctness in tests
removed the ' public ' modifier from several interfaces and classes in the Clock , DelegatingGauge , MetricProducer , and VendorDefined classes to
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to configure the number of reduce tasks for the job
fix handling of default object value for object field of type ` ` object ' '
updated the FILEVERSION constant from " 505365 " to " 532077 " to reflect the latest version of the application
updated extension checks in FloatTextureData to use " OES _ texture _ float " and " GL _ ARB _ texture _ float "
make fileserver . write ( ) and fileserver . closefile ( ) thread - safe
added a null check for outputDirectory and jarStream before setting the output directory to ensure output directory is set only when outputDirectory is not null and jar
added performance measurement for SQLite tasks in ShadowSQLiteConnection to improve performance measurement of SQL queries
replaced ` getCurrentJDKTool ` with ` getTestJDKTool ` in ` JMapHProfLargeHeapTest . java ` and
[ geos - 5390 ] add a new enum resourceerrorhandling to handle resource error report .
added a check for buffer position in RAMInputStream and implemented a test for EOFException in TestRAMDirectory to ensure buffer position is within valid bounds
add miss resource error message to log
updated ForkJoinPool and ForkJoinWorkerThread to accept an innocuous parameter and modified access control context handling to improve thread management and
updated CHECK _ EVERY _ N value and modified memory checking logic in Caches . java to improve memory management and enhance debugging capabilities
hbase - 25836 testsplittransaction . testsplitregion should not call hregion . openhregion directly
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is null
add a parameterized test for Jaas demo in DemoModulesTests . java to enhance testing capabilities for Jaas environments in the Demo
added conditions to check spanX and spanY before creating a folder in CellLayout . java to ensure folder creation can only occur when spanX
refactor CacheOffHeap class implementation to improve performance and maintainability of the code
improve error message when try to create a table that depend on another table with a higher id .
added checks for row and column indices before parsing tiles in TiledLoader . java and improved null check for dataString in TiledLoader
made the ` setWorkingSet ` method synchronized to ensure thread safety during concurrent access to the cache
added a new Java class to calculate the number of steps between two integers to implement a solution for the Manasa algorithm to facilit
add addresschecker interface and use it to check if an address be bad .
fix rendertype = = rendertype . getTranslucentmovingblock ( ) in multilevelmodel and forgehooksclient
remove ` ` default : ' ' tag from config / comment ( # 1351 )
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` and updated related references to ensure compatibility with string representation of
added null check for recieptents before emailing to avoid potential NullPointerException when recieptents are null
[ hotfix ] [ routing ] extract issingle logic into private method
added a failFast parameter to the DockerClientFactory and improved logging in RemoteDockerImage and ImageFromDockerfile classes to enhance error handling
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and updated its usage in ` RobolectricTestRunner ` to
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 549 : remove
replaced ` importProject ` with ` importProjectCore ` in ` OpenAndroidModule . java ` to ensure compatibility with the updated project import
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command execution failures
refactor TreeMap class implementation to improve code readability and maintainability
added methods to enable or disable asynchronous stack traces in the Display class to enhance control over asynchronous stack trace functionality in the application
added a method to set the glow color in BubbleTextView and used it in Folder to allow customization of the glow color
set style class for file row text in LinkedFilesEditor to ensure consistent styling of file rows in the editor
added a new test for class matching in the " alltypes " table and modified the ` AbstractJdbc2ResultSetMetaData ` to return the correct
removed the ` IOUtils . deleteFilesIgnoringExceptions ` call in ` Lucene40LiveDocsFormat . java ` and ` SimpleTextLiveDocs
added a null check for the _ info object before checking its status to avoid potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a provider string to enable initialization of ShadowLocation with a specified provider
updated the maximum RAM limit for 32 - bit devices in LauncherPreferenceJavaFragment . java to allow for a maximum of 2048 RAM to ensure
add miss localmap stats to localmapstatsprovider when there be no data
added logging functionality to FileProfileActivator by implementing LogEnabled and enabling logging for file activation checks to improve troubleshooting and
replace the string " noname1234 " with " invalid _ " in the addToBody method to improve clarity by using a more descriptive
guild # setroles should use toset ( ) instead of tolist ( )
updated the array size limit from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to improve
added multiple assertions to verify the deletion of records in DashboardUserMapper to ensure that the delete method correctly verifies the deletion behavior of records
fix bug in instructorfeedbackresultspageuitest and instructorfeedbackresultspageuitest
sulong : fix llvmderefhandlegetgetreceivernode and llvmpointerstorenode for auto - deref
added a method to retrieve the buffer size in BufferedIndexOutput to provide access to the buffer size for external use
added usage help for the " terasology " command and updated the headless option description to provide guidance on how to start the head
updated the action bar title setting logic and added a check for old interactions in DrawerActivity . java to improve clarity of action bar title
updated CommandLineParserTest . java to improve test coverage to enhance reliability of command line parsing functionality
added interpolators for animation effects in the QuickstepAtomicAnimationFactory and updated visibility of ALL _ APPS _ CONTENT _ FADE _ MAX
updated method to use ` javaNameFromExternal ` instead of ` toUnderscoreSeparated ` to improve clarity and consistency in naming conventions
added native methods for frame handling and object release in CWrapper . java to enhance frame management functionality and ensure proper resource management
added constant value checks in mmm Checker . java and created a new ValueTest . java class to ensure references are valid and validate constant values
updated test cases in MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen to improve test coverage and ensure accuracy
removed null check for constructors in PojoUtils . java to simplify code by eliminating unnecessary null checks
refactor JiraConfiguration class to improve code readability to enhance maintainability and facilitate future development
updated error message formatting from " [ FAILED ] " and " [ COVERAGE ] " to " ( FAILED ) " and " ( CO
update bounds calculations in DeviceProfile . java to include search bar offset to improve layout responsiveness by accounting for search bar offset
pulseaudio : do n ' t schedule next disconnect if idle timeout be 0
refactor overview launching logic to run on the UI thread to improve responsiveness to the UI thread when starting the Recents
added a method to retrieve an Optional < Pair < String , ImmutableList < AppleSource > > > from the AppleSource class to enhance
increased the timeout duration for trigger firing from 22 seconds to 32 seconds in TestSimTriggerIntegration . java to allow more time for trigger
pdfbox - 4892 : use positioncount instead of outputpositioncount for runlengthencodedblock
fix npe in abstractnodecostsearch when distance from start square be too small
added a condition to skip processing for specific component types in ResourceEditorView . java to avoid processing specific UI components that are not part of the
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java
added a null check for commitPoint in ReplicationHandler . java to ensure commitPoint is initialized when it is null to avoid potential null pointer exceptions
added tests for IMEI and MEID functionality in ShadowTelephonyManagerTest and implemented corresponding methods in ShadowTelephonyManager to
refactor debug methods in SimpleHostRoutingFilter for improved readability to enhance debugging capabilities for HTTP requests in the application
added ` destory ( ) ` method to ` IndexSegment ` and ` close ( ) ` method to ` BitmapInvertedIndex ` to
[ issue # 5370 ] fix the test case of normalmessagereceivedit ( # 5371 )
use standardcharsets . utf _ 8 instead of charset . forname ( ` ` utf - 8 ' ' )
hbase - 25836 bulkloadhfiles should not throw multipleioexception if bulkload fail
added a nullable ` commission ` field to ` DefaultWithdrawFundsParams ` and updated the constructor accordingly to allow for optional commission
removed unused import of StreamTerminator from AutoClosingReferenceStream . java to clean up the code and improve readability
refactor exception handling in LoadSolrBuilder and SolrLocator to combine IOException and MorphlineRuntimeException to improve code clarity and maintainability by
added null checks and error handling for abstract overloaded methods in Java2TypeScriptTranslator . java to ensure proper error handling and prevent invocation of
added StacklessLogging for session sweeping in TestFileSessions . java to improve logging capabilities and ensure proper resource management
added serialization support for ` MutableColumnDataType ` and refactored variable declarations in ` Entities ` and ` SqlDataType ` classes to enhance data
rename SubExactLConstantTest and SubExactLNonConstantTest classes to improve clarity and consistency in naming conventions
added a null check for claimRequestString in ConnectOAuth2RequestFactory . java to improve robustness by handling cases where claimRequestString may
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility in creating instances of HiveFilterSetOp
updated the ` processTypeHintForNestedDocuments ` method to handle null source cases and added tests for null values in ` UpdateMapper ` to
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest and added a new method to retrieve core status to improve
initialize transformers and locators in a new ArrayList to ensure that transformers and locators are properly initialized before use
updated error message formatting in AbstractQuerydslProcessor . java to improve clarity of error messages for better debugging
improve error message when a bytecode can not be decode
[ hotfix ] [ rest ] rename setof to copiedsetof in resttemplatebuilder
camel - 14284 : use objecthelper . getidentityhashcode instead of mailutils . dumpmessage to get the identity hash code
http : / / issues . apache . org / jira / browse / amq - 4237 - fix nullpointerexception when
updated the return statement to include setIsPropertyName ( ) method to improve clarity and functionality of identifier name retrieval
create a new activity to launch the wave generator activity instead of show a toast
added null checks and logging for sheet properties in KeyedProperties and SheetOverlaysManager classes to improve robustness by preventing potential NullPointerExceptions
[ k8s ] add test case for kubernetes - client - exec and kubernetes - client - log
added a test method to detect no index and create a new one in TestReplicationHandler . java to ensure proper indexing behavior when no writer is
make dispatchmethodkernelokra ( ) call super . dispatchmethodkernelokra ( range , args ) in graalkerneltester
updated the type of ` records ` from ` List < Object > ` to ` List < DefaultMxRecord > ` and added sorting functionality
refactor thread creation in XToolkit . java for improved clarity and consistency to enhance code readability and maintainability by using a
added validation method in SelectBox and set the dropdown to " Linux6 " to enhance input validation and ensure compatibility with the Linux 6 dropdown
replaced IllegalStateException with Collector . printStackTrace for error handling to improve error reporting by providing a stack trace instead of throwing an exception
updated the ` createState ` method to include a ` SplitState ` parameter and modified related logic in ` FlowBuilder ` and ` SplitState
changed the ` connectionState ` variable to be ` volatile ` and modified the return statement to use ` connectionState ` directly to ensure thread safety
[ hotfix ] [ test ] increase default poll period from 10 to 1000
perf ( core ) : minimize lifetime of stack encode buffer
added exception handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error reporting and
fixed false positive for unused modifier with enum
refactor lambda expressions to method references for clarity and consistency to improve code readability and maintainability
updated the parameterized parameter name in AbstractHttpClientServerTest . java to improve clarity of the test ' s configuration
improve error message when transformation fails
updated method to retrieve active connection permissions instead of user permissions to improve clarity and consistency in permission handling
replaced manual equality check with Apache Commons Lang ' s EqualsBuilder for improved readability to enhance code clarity and maintainability by
updated file processing logic to handle null outputRoot to improve robustness by preventing potential NullPointerException when outputRoot is null
added AnnotationFilter interface and modified PDFPage and PDFRenderer to utilize it for filtering annotations to enhance the filtering mechanism for annotation creation based on
refactor StackTraceCleaner class to improve code structure to enhance maintainability and readability of the code
updated content type handling for CSS and JavaScript files in PluginServlet to ensure correct content type is set based on the presence of file extensions
hhh - 14827 - skip test for cbo in select expression test on oracle
updated the parameter name from ` slot ` to ` slotSize ` and modified the version value comparison logic to improve code clarity and ensure proper
added ` getStats ( ) ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , ` ContextImpl ` , and ` Doc
( chore ) camel - kie - client : enable long polling by default
added accessibility support for scrolling in PagedView and updated related methods in BaseOverview and LauncherInstrumentation to improve user experience by allowing
replaced the initialization of UnlocksDialog in UI . java and added a button in PausedDialog . java to display the unlocks dialog
added a line to clear the drop list in PlayerEventListener to ensure the event ' s drop state is reset before processing
added a constant for the default parameter name in StreamResult . java to improve clarity and maintainability of the code
updated exception type from MalformedURLException to IOException in the testNormalizeOrder method to improve clarity and specificity of exception handling
updated the output format in TsFileSketchTool . java to include the chunk type and modified the skip statement in LocalTsFileInput . java
added a set to exclude specific Swift . h headers in UmbrellaHeader . java and updated tests in ProjectGeneratorTest . java to
renamed the method ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java `
added a call to ` encode ( ) ` in ` RequestPlugin . java ` to ensure proper encoding of data for HTTP requests
added support for DB2 dialect in ` RolapNativeSql ` and ` RolapNativeTopCount ` classes to ensure proper handling of SQL
added null or empty password validation in LdapAuthenticationProviderImpl and created a test class for it to ensure that an AuthenticationException is thrown when an empty
pdfbox - 4892 : remove unnecessary boxing , a suggest by valerybokov
added a condition to clear complexWriters in ProjectRecordBatch . java to ensure proper handling of complex writers during batch processing
added @ SuppressWarnings ( " serial " ) annotations to multiple classes to suppress serialization warnings in the codebase
modified access modifier of ClassGraphClassLoader from public to package - private and updated null check logic to improve code clarity and prevent potential NullPointerExceptions
added a check for the name " _ errors " and modified the return statement in ErrorResponseException . java to improve error handling and provide clearer
added a constructor to EventSourcingRepository that accepts an EventStore and SnapshotTriggerDefinition to enable initialization of EventSourcingRepository with
refactor symbol handling logic in binary node processing to improve code readability and maintainability
updated text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to handle empty search cases to improve robustness by avoiding potential
updated variable names and command handling in NuvoConnector and NuvoHandler to improve clarity and functionality to enhance code readability and maintainability
changed the default planar configuration from PLANARCONFIG _ PLANAR to PLANARCONFIG _ CHUNKY in the TIFFImageReader
added close ( ) method to itemlisttag to prevent resource leak
move averageutil to core . utils and fix laser table update .
added two new files , SigInt . java and SigIntBarrier . java , to implement signal handling functionalities in the application
refactor graph handling in ExporterGEXF to support hierarchical graphs to improve accuracy in determining the maximum number of nodes and edges based on
replaced byte array with Text for null handling in TCTLSeparatedProtocol . java to improve memory efficiency and error handling during string
[ fix # 4396 ] fix bug in feedbackrubricquestiondetails and feedbackrubricresponsedetails
replace DB2Database instance check with a direct comparison for schema and catalog case to improve code readability and maintainability by using a more explicit
simonstewart : make the browsermobproxytest more robust
use integer . tostring ( int ) instead of string . format ( int ) to improve readability
removed duplicate call to mTextWatcher . reset ( ) in InPlaceEditView . java to improve code clarity and maintainability by elim
[ hotfix ] [ javadoc ] fix typo in javadoc of trufflesttring
[ hotfix ] [ graph ] fix type inference in outedgesfunction
updated multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
deleted the file ` ClassA \ 314 \ 201 . java ` and created a new file ` DiacriticTest . java `
replace CountDownLatch with CyclicBarrier and add assertExecutionsDone method to improve concurrency handling in ClusterMembershipTest
added error handling for WorkspaceReader and improved null safety checks in DefaultMaven . java and DefaultGraphBuilder . java to enhance robustness
updated ` ServiceRegistryConfig ` to use ` equals ` for scheme comparison and modified IP port assertions in ` TestServiceRegistryConfig ` to ensure
updated Mockito library version in the project to ensure compatibility with the latest features and improvements
removed unnecessary whitespace in Jdbc3Connection constructor to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class and refactored the instance initialization logic to improve thread
updated delta server time handling and logging in BinanceExchange and BinanceBaseService classes to improve accuracy of time calculations and enhance debugging capabilities
added a check for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " in Tomcat
added null check before deregistering the animated component in InfiniteProgress . java to prevent potential NullPointerException when the component form is not initialized
updated the ` decodeResource ` method to accept an additional ` BitmapFactory . Options ` parameter and added multiple overloaded methods for bitmap drawing to
[ java ] : use executor instead of executor . execute in publisher and subscriber .
added click handling and linkifying functionality for tweets in TimelineArrayAdapter to improve user experience by allowing users to click on tweets
added " text " to the unmodifiableDataTypes list and modified type checks in NumberType . java and ColumnSnapshotGenerator . java to support additional
remove @ ignore from entryprocessorbouncingnodetest ( # 3683 )
updated method name from ` isHardDeletableState ` to ` isRemovableState ` in ` AmbariManagementControllerImpl . java
updated bridge creation logic to check for null before adding to the inbox to improve robustness by preventing potential null pointer exceptions during bridge reconfiguration
fix race condition in preconditionenforcer by synchronize updaterobots ( )
added null check for getDisplayName ( ) in multiple classes to avoid potential NullPointerException when checking if the display name is null
added support for a default shader parameter in the SpriteBatch class to enhance flexibility in shader management by allowing custom shaders
added property setting for synchronous commit in TestUtil . java to enable synchronous commit functionality for improved performance
added type coercion functionality and improved error handling in SortedSetTypeCoercer to enhance type coercion reliability and provide clear
refactor confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve clarity and functionality to enhance user experience by providing clear confirmation
added a condition to check if the character is less than 256 before accessing it to prevent potential index out of bound exceptions
change the port for fragment storage registration to use a dynamic port instead of a hardcoded value
updated expect value in HostResourceProviderTest to return an empty map instead of null to ensure that the test correctly handles cases where no clusters are
[ hotfix ] remove unused logger from yarnentrypointutils
fix a bug that cause the window border size to be n ' t initialize properly .
removed the ShadowHtml class and updated HtmlTest assertions to simplify test cases and improve readability by removing unused imports
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` implementing the ` StarTreeRecordStoreFactory ` interface
replace logger with h3Logger and quicLogger in HttpClientLoadTest . java to enhance logging capabilities for HTTP3 and QUIC scenarios
changed the visibility of the addListeners method from private to package - private and added a new test for listener validation to enhance encapsulation and ensure
[ hotfix ] [ doc ] fix typo in javadoc of statehanderestore
replaced the import of ` Constraint ` from ` org . eclipse . jetty . util . security ` to ` org . eclipse
add parameter to instructorcourseenrollsaveaction and instructorcourseenrollsaveaction to allow enroll student in different section
use try - with - resources to prevent resource leak
fix camel - 13651 : use availableportfinder to find the available port
updated JarBuildStepsFactory to use libraryTarget instead of buildTarget for jar parameters to improve clarity and consistency in handling library JAR parameters
remove ' # validating - cerficates ' reference in trustEverythingTrustManager . java
cloudstack - 4892 : remove override method that do n ' t do anything
added handling for the CLOSED case in IteratingCallback . java to ensure proper handling of the closed state during iteration
added an ` isAuthorized ` boolean and updated access control context initialization in ` AccessControlContext . java ` , and introduced a method to determine if
refactor OSGiDeployer to check for AbstractOSGiApp before sending events to improve code clarity and ensure proper handling of
added a condition to set the MIME type for " tiff " codec in DLNAMediaInfo . java to ensure proper handling of
[ hotfix ] [ runtime ] fix thread safety issue in optimizedcalltarget
added a new file CubocDesktop . java and modified Cubocy . java , Map . java , and MapRenderer . java
updated file paths in PolicyMonitorTest to use the target directory instead of the test resource directory to ensure tests operate on the correct directory structure for
added a call to removeAllFiles ( ) in TrashbinActivity . java to clear the trashbin list before processing new files
replaced org . eclipse . jdi . Bootstrap . allConnectors ( ) with com . sun . jdi . Bootstrap . all
introduce checkglobalvariableregionstoragenode to simplify the execution of llvmcheckglobalvariableregion
updated the ` createLauncherEvent ` method to include an additional ` Intent ` parameter and added hash code and rank calculations to enhance event handling by
added a constant for the maximum burn target lower floor and updated the return statement to use it to ensure that the burn amount does not exceed a
updated imports in UniqueConstraintSnapshotGeneratorSnowflake . java and modified schema handling in DatabaseObjectSnapshotGeneratorSnowflake . java to improve
refactor item assignment logic in DMLTransformer to handle empty insert statements to improve clarity and correctness in generating SQL select statements based on
updated import statements in ServiceValidateControllerTests . java and changed the PGT URL parameter from " http : / / www . github . com
updated ` getDefaultValidFunctionName ` method to include ` isStatement ` parameter and refactored function body handling to improve function name validation and ensure
refactor JarLauncher to improve code structure to enhance maintainability and readability of the code
updated generic type parameters in multiple classes for better type safety to enhance code clarity and prevent unchecked type warnings
added a new dimension of 320 , 200 in DeviceConfiguration . java and implemented sendHolePunchPacket method in OperationSetVideoTele
added a test method to update a PGobject in the ResultSet to ensure that the ResultSet correctly handles updates with PGobject objects
modified the password reset endpoint to return an UNPROCESSABLE _ ENTITY when no valid email is provided to improve error handling and provide clearer feedback
updated the method of obtaining the properties element to use getDocumentElement ( ) instead of getChildNodes ( ) . item ( 1 ) to improve cl
refactor caching logic in Cache . java to improve performance and maintainability of cache operations
corrected the spelling of " timeInSec " to " timeMillis " in Isochrone . java and SPTResource .
fix the light relay not work if the bind be invalid .
added a new ` Chainer ` class and modified ` contains ` method in ` CollectionSubject ` to utilize it to enhance testing capabilities by
refactor Model class to improve code structure to enhance maintainability and readability of the code
updated the recordedTime calculation to include a new value of 619315200000L to ensure accurate tracking of recorded time in milliseconds
added a condition to resize the status if the terminal type is Windows to ensure the status is correctly resized when the terminal is a Windows terminal
updated repository version state handling in UpdateDesiredStackAction . java and RepositoryVersionState . java to ensure that the host version state is only set
[ ci ] remove dependency on jsinterop in integration test
replaced HashSet with LinkedHashMap and LinkedHashSet in multiple classes to maintain insertion order while maintaining insertion order
do n ' t swallow exception in operationserviceimpl . toobject ( ) .
[ hotfix ] fix checkstyle violation in knativeenvironment
corrected a typo in the thread pool executor name from " commitlog _ archiver " to " CommitLogArchiver " to ensure
added connect ( ) method calls in CloudSolrClient and a test for uploading configuration in TestCloudSolrClientConnections to ensure proper connection handling and
synchronize access to allBindings to prevent concurrent modification exception
added methods to clear files and cache in ShadowContext and refactored file handling in RobolectricTestRunner to improve file management and
added imports for LinkedHashSet and TreeMap in SecureXStream . java and updated styles handling in XStreamPersisterTest . java to enhance functionality and ensure
( chore ) camel - kie - api : add kmodulemodel to kiehelper
refactor the handling of Farmland in BlockEventListener to use instanceof for better type safety to improve code readability and maintainability by
added a default implementation of getLocalIp ( ) that returns null to provide a default implementation for the method
updated deserialization method for OBJECT _ VAL in JdbcStepExecutionDao and added a test for integer storage in AbstractStepExecutionDaoTests to improve serialization
updated comments in multiple dictionary classes for clarity to improve readability and maintainability of the code
added " python37 " as a resource and modified the extension and path configurations in the tensorflow files to enhance compatibility with Python and improve resource loading
refactor plugin table initialization and refresh functionality in PluginTab . java to improve code readability and maintainability by encapsulating table refresh logic
changed log level from info to warn for reloading , saving , and trimming history files to improve logging granularity for better error tracking
server : fix npe in vmwarestorageprocessor when vm be stop
camel - 14284 : camel - sftp should use stop ( true ) instead of stop ( ) in camel - sftp
rename ExperimentalMockitoJUnitRunner class to improve clarity to enhance code readability and maintainability
updated GpsSettingsActivity and Session to use a new utility method for serial ID retrieval to improve code readability and maintainability by centralizing
renamed SwapGBuffers . java to improve clarity to enhance code readability and maintainability
added null checks for spatial and skeletonControl before removing it to ensure proper handling of null spatial states and prevent potential null pointer exceptions
added support for setting smart replies in ShadowRankingTest and modified ShadowRanking to utilize reflection for setting channel and smart reply to enhance
[ java ] use archivedir . list ( ) instead of archivedir . list ( ) when list recording and delete file .
refactor carrot2ResourcesDir initialization in CarrotClusteringEngine . java to improve code readability and maintainability
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to address potential
updated ASM _ API _ VERSION from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to ensure compatibility
replaced null return statements with exceptions in RecommenderMapper . java and added null check in CacheTest . java to improve error handling and ensure
added client info initialization in SurrogateAuthenticationEventListenerTests to ensure proper client context is utilized during tests
added a boolean variable isUserView and initialized it to false in CardPresenter . java to initialize isUserView to false when the user view is not
replaced references to ` GraphvizJavaExecutorUtility ` with ` GraphvizUtility ` across multiple files to streamline the codebase by elimin
added initialization of ` constructBatchHistogram ` and ` syncLogTimePerRequestHistogram ` variables in ` LogDispatcherThreadMetrics . java ` to
added a new module - info . java file for the SQLite connector module to provide module - level dependencies and exports for SQLite connector functionality
added a delay of 500 milliseconds in StreamResetTest . java to ensure that the test does not hang under high load conditions
removed conditional check for " new " web type before initializing the PermissionsManager to simplify code and improve readability by eliminating unnecessary checks
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method ` getDepth ` that returns a value of 0.5 f in ` SpringLoadedState . java ` to provide a default depth
replaced manual array copying with ` Arrays . copyOfRange ` for improved readability to enhance code clarity and maintainability by using a
[ hotfix ] fix checkstyle violation in executiongraph
removed the ` removeNotification ( notification ) ` method from ` NotificationActivity ` and refactored ` NotificationRenderer ` to use ` OnClick
updated exception handling logic in DefaultExceptionConverter and modified test assertions in ExceptionsTest and EndpointTest to improve clarity of exception messages and ensure proper
fix checkstyle issue in io / anvil / glowcontainer . java ( # 4348 )
replaced MethodHandle usage with getDeclaredMethod for setting the setter in ProxyMaker . java to improve code readability and maintainability by using a
replaced direct casting to ` int ` with ` intValue ( ) ` for value retrieval in ` MathTest . java ` to improve type safety
fix a bug in baseemailcontentformatter that result in an arrayoutofboundsexception
added a new ` layoutProvidedPanel ` component and modified its visibility based on the presence of a simple panel to enhance the user interface by providing
added a null check for the location in the dead server condition to ensure robustness by preventing potential NullPointerException when location is null
updated BuilderFactory , Pipeline , and PipeliningTest classes to improve code clarity and maintainability
added a check for null DSA key parameters and simplified public key generation to improve error handling and streamline key generation process
refactor ignored media type checking in MediaTypeRequestMatcher to use a dedicated method to improve code readability and maintainability
added taskNum variable and improved logging format in LlapBaseInputFormat . java to enhance clarity and maintainability of log output
added a property to the Spring Boot test annotation to allow bean definition overriding in the test configuration
added a null check before closing the indexReader to prevent potential NullPointerException when indexReader is not initialized
removed the ' service ' package from multiple BTCMarkets - related classes and imports to simplify package structure and improve code clarity
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest . java ` to verify rendering behavior of code blocks
added a new file CompatibilityTest . java to test internal DTD properties to ensure correct parsing and validation of property keys in XML files
added new utility classes for push and security functionalities , including VariantComponentsModule , PushUtils , and SecurityUtils to provide utility methods for managing
refactor replicas calculation logic in TableRebalancer . java and add instance state assertions in TableRebalancerTest . java to improve clarity and
bump version to 2.7 . 0 and tidy release note
log4j2 - 1348 fix line separator issue in unit test
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5652 -
initialize friction , restitution , density , and isSensor variables to zero in FixtureDef . java to ensure default values are
updated method names and parameters related to anomaly classification and scaling in multiple classes to improve clarity and consistency in the anomaly detection process
added error handling for broadcast idle command execution in LauncherInstrumentation . java to improve robustness by logging exceptions during broadcast idle wait
added unit tests for reading font and link tags in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure that
move statscomponent to src _ base / minecraft / src / minecraft / net / minecraft / stats / guic
added functionality to request phone call permissions in Launcher . java to enhance user experience by ensuring necessary permissions are granted when starting a phone view
updated return value from 32 to 36 in SimulationPanel . java and modified method signatures in BasicEventSimulationEngine . java and Startup .
refactor GeoPointDistanceQuery , GeoPointInBBoxQuery , and GeoPointInPolygonQuery classes to improve code readability and maintainability
added a synchronized method ` isDockerAvailable ( ) ` to check Docker client availability to ensure proper handling of potential IllegalStateException when checking Docker connection status
added a constant for VPX encoding in CodecTypes . java to enable support for VPX encoding in the application
added a coordinator address option to the DistBuildFactory and DistBuildRunCommand classes to allow configuration of the remote coordinator thrift server to connect to
added a new method ` match ` in ` FsUtils ` and refactored timer handling in ` WrapTimer ` to improve path matching functionality
added a conditional check before adding label values in TestTaxonomyFacetSumValueSource . java to ensure label values are only added when the value is
ggb - 1348 fix npe in case of non - boolean value
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the test code and improve readability
added materialization time update functionality in ObjectStore and created a test for it in TestObjectStore to ensure that materialization time is correctly set
added error handling for missing native dependencies in VoskSTTService . java to improve robustness by logging warnings for missing native dependencies and
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 549 : add
update break weight logic in GlyphView . java to differentiate between BadBreakWeight and GoodBreakWeight to ensure correct break weight behavior based on
refactor sync reading logic to use a buffer for improved efficiency to enhance performance by reducing the number of bytes read from the input stream
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to indicate that the test is currently waiting for a fix
refactor ToePool to use LinkedList for storing steps and processors to improve readability and maintainability of the code
removed the ` flavorsForFormats ` parameter from the ` setToSortedDataFlavorArray ` method in ` ClipboardTransferable `
hbase - 25827 add - infoport to thrift server test to make it easy to run thrift test on a random port
added a check to return false if the end of the file is at EOF to ensure proper handling of EOF cases in the RegExpScanner
replaced Boolean . getBoolean ( ENABLE _ METRIC _ PROPERTY _ NAME _ PREFIX ) with a check for enabledMetrics and enabledTimers
fix a nullpointerexception in chatroom . getnickname ( ) .
add a check for null or empty filename in papplet . getfilename ( ) to avoid npe
refactor token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by reducing duplication
updated error message formatting in BuckConfig . java for clarity to improve readability and maintainability of error messages
[ hotfix ] remove dead code in yarnflinkapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ( ) ` to ` ShadowNativeImageReaderSurfaceImage ` that returns ` null ` to
set SSL URI for BTCChinaMarketDataService in BTCChinaExchange . java to ensure proper access to the BTC
pdfbox - 4892 : use system . getproperty ( ` ` file . separator ' ' ) instead of system . getproperty (
added OauthController and Oauth2PluginTest classes to handle OAuth2 authorization in the application
refactor SemgrexPattern class for improved readability to enhance maintainability and facilitate future development
added flatMap and flatCollection methods to AbstractStreamEx and removed them from EntryStream , EntryStreamTest , and EntryStreamTest to streamline
added error logging for invalid parameters and improved exception handling in ExceptionToProducerResponseConverters to enhance clarity of error messages and provide clearer
updated the condition in RobolectricClassLoader to allow for Android projects with mixed scala \ java tests to be run with Maven Sure
modified condition to check for non - transmittable audio encodings to ensure correct handling of non - transmittable audio encodings
updated CreateTableGenerator to use DatabaseFunction instead of SequenceNextValueFunction and modified CreateTableGeneratorTest to include a new test for current timestamp
added tests for station GML31 and STATION _ GML32 in NormalizedMultiValuesTest . java to ensure correct handling of station
added a volatile boolean field ` wasInvoked ` and modified HTTP response handling in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest `
do n ' t expand regex mapping if not configure
updated the ` splitIntoThirtyParts ` method to return a fixed length array and introduced a new method ` getPositionsArraySize ` to
added ` XLCDCommunicator ` , ` XLCDController ` , and ` GrblCommunicator ` classes to
( chore ) camel - kie - api : use kie - api . xsd instead of kie - api . xsd ( #
updated retry logic in EventQuery classes to check for non - empty messages and added assertions for retry times to improve error handling and ensure proper validation
replaced the ` awaitThreadStates ` and ` awaitThreadState ` methods with ` join ` and ` join ` methods for thread states to
updated the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a new test class ` DelegatingMethodTest `
increased constants for FREEZE _ V2 , UNFREEZE _ V2 , WITHDRAW _ EXPIRE _ UNFREE
updated method signature and added exception handling in DownloadPlugins . java to improve error handling and ensure proper configuration management during command execution
deleted the ` SpringTransactionHooks . java ` file and replaced its usage with ` AbstractSpringTransactionHooks . java ` to streamline the
refactor AbstractClassAssert to improve code structure to enhance maintainability and readability of the code
added a new class ` GetUninitializedStringValueTarg ` to demonstrate the usage of JDI ' s ` GetUninitialized
added support for provided dependencies in AndroidLibraryDescription and updated related tests to enhance dependency resolution and improve test coverage
added a new device flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of keyboard open
replaced a direct retrieval of system anomaly message with a boolean flag to store bugreport status to simplify the logic and improve readability by
added a constant for " cinepack " format in FormatConfiguration . java and updated LibMediaInfoParser . java to use it to support
added camera bubbing functionality and modified hand movement animation offsets in Player . java to enhance user experience by allowing more control over camera bubb
updated blob mapping from ` data . describe ( ) ` to ` digest . toString ( ) ` in ` GrpcCasBlobUploader .
deleted the HSQLDBServerFilesFilter class and refactored file listing logic to use the FilenameFilter directly to simplify the code structure and
updated null check for restoreFromSeed and restoreFromKey in WalletAppKit . java to ensure that restoreFromSeed and restoreFromKey are
updated API data series version retrieval from ` getApiDataVideoVersion ( ) ` to ` getApiDataSeriesVersion ( ) ` and added a trace
added a method to check if a type already exists in the method invocation to optimize performance by avoiding repeated method calls
replaced hardcoded array size with a constant for the number of values in AmbientCubemap . java to improve maintainability and
bugfix # 227272 - show profile mode reset message if mode be not configure properly
added logic to return ` maskedNumber ` for zero values in multiple UDF classes to ensure correct handling of zero values in the masking logic
use temporaryfolder in boundeheadblockstoretest and derbyblockstoretest
add isitemstackdamageable ( ) and gethassubtypes ( ) method to itemstack .
fix mc - 167447 line _ width not render correctly
simonstewart : set the default browser startup page to 0 in the firefox profile .
added conditions to handle HTTP CONNECT and GET requests in Http1xClientConnection . java to improve connection handling for HTTP / 1.1 requests
updated task type from " compile " to " process - classes " in JoobyMojo . java to improve clarity and specific
replaced ` shutdown ( ) ` with ` closeIdleConnections ( 1L , TimeUnit . MICROSECONDS ) ` in ` HTTPHC
added a condition to check if the aggregate function suffix is not present before creating a new metric to optimize metric creation by avoiding unnecessary computation when
added a method to set fullscreen parameters in TaskOverlayFactory and updated related references in TaskView and TaskThumbnailView to improve fullscreen handling
added a new Java class for counting the number of frequencies to provide a solution for counting the number of frequencies
initialize socketchannel to null in ClusteredAgentManagerImpl . java to ensure proper initialization and avoid potential null pointer exceptions
refactor MutisignOperationerGodicTest . java for improved clarity to enhance maintainability and readability of the test
added exception handling for NoSuchElementException in readToStartFragment ( ) and readToEndFragment ( ) in StaxEventItemReader . java to improve
replaced specific text imports with a wildcard import and modified return logic in ShadowTextView . java , and added null check in TestAttributeSet
updated JSON import statements to use net . minidev instead of com . nimbusds . jose . shaded . json to
updated OS name checks to support AIX systems and added a mapping for " Linux - s390x - 64 " to ensure compatibility with
server : use router control ip instead of private ip for access detail command
added a method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate blocking execution without blocking results
remove xmpp - ignore - presencemessagetests since it ' s no longer use
refactor calculations in PortraitPagedViewHandler to use Math . round for width and height calculations to improve code readability and ensure
removed unnecessary spaces in file paths in TestClusterDumper . java to improve code readability and maintain consistency
updated the return statement in KeyValue . java to include additional class size adjustments to improve memory allocation for key values
camel - 13663 : camel - core - add a type converter to the service registry so it can be use by other component .
added handling for ConditionalTask in SparkCrossProductCheck . java to enable execution of conditional tasks in Spark
updated action handling in Launcher and LauncherModel classes to ensure proper reloading of profile updates to improve user experience by ensuring profile updates are
added a condition to check if the response is not JSON before processing account chooser and discovery in the LoginInfoEndpoint to ensure proper handling of
hbase - 25827 add a todescriptivestring ( ) method to assignermanager for debug purpose
replaced the ` message ` field with ` msg ` and ` result ` in the ` HuobiAccountInfo ` class and updated related
added a method to reserve words " PERIOD " in MariaDBDatabase and a corresponding test case in AddColumnGeneratorTest to enhance database
[ beam - 13434 ] improve the documentation of portableworker . env . defaultenvironmenttype
updated VersionChangeLogs . java to include additional descriptions for Android 7.1 - you now have Launcher shortcuts and some bug fixes to enhance
updated the visibility of NUM _ MILLIS _ IN _ DAY from private to public to allow access to NUM _ MILLIS _ IN _ DAY
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] only invoke aeron client invoker if need .
added validation for implicit lambda parameters in mmm Attr . java and created a new class NoWarnOnImplicitParams . java to improve type safety
refactor menu item visibility and enabling methods in FileMenuFilter and add a method to hide menu items in FileDetailFragment to improve code
updated BTCETransHistoryResult and BTCETransHistoryJSONTest to use BTC _ deposit and BTC _ withdraw
replaced List with Set for series and exceptions in RetryFilterFunctions . java to ensure uniqueness and prevent duplicates in the list
added a @ Deprecated annotation to PluginLoader . java to indicate that the class is outdated and should no longer be used
updated condition in LastQueryExecutor and added a new test for last with unseq time larger than sequence time in IoTDBLastIT to ensure
updated newline character formatting in HttpResponse . java to ensure consistent line ending across different operating systems
added a static block to set the Apache HTTP wire property to ERROR in BuildImageMojo . java to ensure proper logging behavior for HTTP requests
added a safe area setting for the title bar in the Sheet class to improve UI responsiveness by preventing accessibility issues
reversed the iteration order of TimeSeriesChunkMetaDataList in OverflowSeriesImpl . java to ensure correct retrieval of series metadata from the last element
added SQL alteration for table renaming and deparsing in AlterTest . java to ensure that the database schema can be correctly parsed and de
make abstracthikariconfig # copystate public so it can be use by other class
fixed - redissonexecutorservice . executeasyncasync ( ) method return a completablefuture
add a constant . suffix _ split _ file to make it easy to understand what it mean .
[ hotfix ] [ table - common ] fix checkstyle violation in orc module
added null check for valueArg and nameArg in CompareFunctionsProcessor . java to ensure proper handling of value and name arguments during comparison
fix checkavailablediskspace ( ) in compactiontask . checkavailablediskspace ( )
removed redundant ` toString ( IndexReader ir ) ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTerm
added checks for invalid state handlers in AbsSwipeUpHandler and null check for mLastGestureState in TaskAnimationManager to ensure proper
refactor lock timestamp methods to use instance methods in AppPreferences and PreferenceManager to improve code readability and maintainability by centralizing preference management
refactor artist setting logic in MediaInfoParser to use a dedicated method to improve code readability and maintainability by reducing duplication
added null check for remoteMessage before accessing its data to avoid potential NullPointerException when remoteMessage is null
nifi - 2696 : fix npe in splittext when there be no header
added support for Windows - specific keystore type in HttpsConnectorFactory to ensure compatibility with Windows - specific key store configurations
increase default check timeout from 400 to 1 second
added a condition to ignore FILE _ NOT _ FOUND results in FileSyncAdapter . java to improve error handling by indicating that the remote folder
added animation support to the Slider class to enhance user experience by allowing customizable animation options
replaced occurrences of ` eol ` with ` lineSeparator ` in ` LineSeparatorProcessorTest . java ` to ensure consistency in variable naming conventions
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to optimize texture packing performance and reduce memory usage
added a new test method ` UnnecessaryParenthesesTest ` and modified the condition in ` UnwrapParentheses . java ` to ensure
camel - 15836 : camel - hazelcast - queue - consumer should not throw npe if the message body be null .
added a new test class ` TextFeedbackTest ` and modified ` AllTests ` to include it to facilitate testing of text feedback
replaced Math . round with Float . compare for score comparison in DefaultSolrHighlighter . java to improve precision in score comparison
updated case statements for DENSITY _ 560 , DENSITY _ 2HD , DENSITY _ 4K , and updated
added a method to retrieve the array class element offset in HotSpotReplacementsUtil and updated ArrayCopySnippets to use this method to improve
log4j2 - 1349 : do n ' t log line when there ' s no line at all
added support for remote SCM systems in Configuration and RuntimeEnvironment classes to enable control over remote SCM behavior in the application
[ mielecappliance ] do n ' t set appliance state to on _ off when the appliance value be ` ` end
replace ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to utilize the new event
updated logger variable name from ` log ` to ` LOG ` in ` LocalZookeeper . java ` to improve clarity and consistency in logging
added unit tests for ` ProjectGenerationFinished ` and ` ProjectGenerationStarted ` events in ` EventSerializationTest . java ` to ensure correct serialization
ggb - 1396 add preview _ points to select _ tooltips and use it in select _ tooltips
refactor JavaCompiler class to improve code readability to enhance maintainability and facilitate future development
hbase - 25827 integrationtesttimeboundedrequestswithregionreplicas should throw an illegalargumentexception if the amount of time remain for
updated multiple Java files including DumpHeap , TimSortStackSize2 , BasicLauncherTest , JMapTest , and DeadlockDetectionTest to
added additional gc - sections and nocopyreloc flags to the ldflags list in NdkCxxPlatform . java to enhance
updated the URI construction logic in SpringCloudCircuitBreakerFilterFactory to support dynamic expansion of fallback URIs to improve flexibility in URI handling based on
refactor multiple test classes for consistency and clarity to improve maintainability and readability of the codebase
added a check for the URI against NS _ SPREADSHEETML in ReadOnlySharedStringsTable . java to ensure that only valid
added a new method ` getAccountNet ` to ` HttpMethed ` for fetching account network by HTTP to enable testing of account network retrieval
added a check for ` availTextWidth ` in ` SwingUtilities2 . java ` and modified the ` setLookAndFeel ` method
refactor ` FlatteningIterator ` initialization and simplify iterator handling in ` FileResourceIterator ` and ` FlatteningIteratorTest ` to improve code
remove HTML bold tags from title and body when processing notifications to ensure consistent formatting by preventing unwanted HTML elements in notification content
doc : generate sample code in the java microgenerator ( # 10 )
update instructorfeedbackeditquestionsuitest to reload and delete any existing question
updated return values and conditional checks in HSSFSheet . java , and added assertions in BaseTestSheet . java to ensure correct handling of
added permission checks for launching activities and refactored related classes to utilize PendingAddItemInfo for better handling of pending add components to
[ java ] send an event when a cluster session be connect to a new cluster .
updated hashCode and equals methods in AbstractParquetMapInspector and modified equality checks in StandardParquetHiveMapInspector to improve hash code consistency
added a check to flush the session and release the buffer if remotely closed to ensure proper resource management and prevent potential memory leaks
added AutoCloseable interface to the SplitReader interface to ensure proper resource management and prevent potential memory leaks
removed the deepCopy ( ) method from GsonBuilder class to streamline the code by eliminating unused functionality
sulong : cache llvscanner . not _ found instead of null
refactor file opening and closing logic in RestClientRequestImpl . java to streamline file handling and improve readability to enhance code clarity
removed unnecessary whitespace in dispatchStatusString method call to improve code readability and maintain consistency
updated ClassLoader usage in MockFactory and added a new SearchingClassLoader class to enhance class loading flexibility for testing
test : add test case for bug in refresh flag
added support for LEFT _ SEMI _ JOIN in the condition check to ensure proper handling of LEFT _ SEMI _ JOIN joins in the constant
refactor response completion logic in HttpReceiver and HttpSender to directly check for CONTINUE _ 100 status to simplify code and improve readability by
fix array length offset in amd64hotspotloweringprovider and defaulthotspotloweringprovider
http : / / issues . apache . org / jira / browse / amq - 4892 - add default policy to the broker
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
added a check for ` isRunning ` before stopping the application context to prevent potential ` NullPointerException ` when the context is not running
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return the result of the draw operation instead of
refactor metrics retrieval in SpringmvcClient and throw InvocationException in CodeFirstSpringmvc to improve code clarity and enhance error
updated the formatting of the lambda expression in AccountAgeWitnessService . java to improve code readability and maintainability
refactor code formatting and improve readability in StructureHeader . java and StructureReader . java to enhance code readability and maintainability
added ResourceUrlProviderExposingInterceptor bean to CasWebflowContextConfiguration and updated related methods to support resource URL handling in the web flow configuration
add dexreturninliner to handle return statement inlining
[ enrichesruleresponse ] add miss property to enrichedruleresponse
removed the NOFOLLOW _ LINKS option from the directory check in PathResource . java and updated test arguments in AliasCheckerSymlinkTest . java
[ hotfix ] [ table - planner - blink ] remove sqldialect from executionentry
replaced ` ImmutableSet < String > rDotJavaPackages ` with ` Supplier < ImmutableSet < String > > rDotJavaPackagesSupplier ` to
add test to verify packageinfo annotation work
added configuration for minimum cross compaction unseq file level in IoTDBDescriptor . java to allow dynamic configuration of unseq file level for improved
[ hotfix ] [ runtime ] move activeresourcemanager to resourcemanager . active package
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated ZipResource to use new URI constructor and added unit tests for parsing feature files with spaces to improve URI handling and ensure correct parsing of feature
refactor ExpandableUploadListAdapter to improve thumbnail handling and update click listeners to enhance user experience by ensuring proper thumbnail generation and handling of uploaded
refactor RobolectricTestRunner to merge parent class and method configurations using a hierarchy to improve clarity and maintainability of configuration merging
replaced Lists . newArrayList with Iterables . filter for Block , Item , and GameData to ensure only valid registry names are used to improve data
replaced abstract methods with default implementations in AbstractDataChangedListener . java and updated websocket connection handling in WebsocketCollector . java to enhance method
updated JSONPojoConvertor to handle enum types and added color handling in JSONPojoConvertorTest to enhance type conversion functionality and ensure
added a deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the ` --
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` and replaced ` StringBuilder ` with ` ByteArrayOutputStream `
added orientation correction functionality to GyroControl to handle mouse movement events based on device orientation
[ biome ] set biome _ list _ size to the length of the biome gen array .
replaced ` println ` with ` print ` for function evaluation in ` GetInterfaceTest . java ` to improve readability and consistency in function
[ hotfix ] [ doc ] fix checkstyle violation in filecompilertest
added a new interface ` ByteToLongCollector ` in the ` com . speedment . common . function . collector ` package to provide a utility
added a preload parameter to control the loading behavior of the map directory to enable customization of preloading behavior for improved performance
added custom metrics for worlds , economy , plot expiry , and MySQL storage in BukkitPlatform . java to enhance monitoring
refactor QuickConnectREST class to improve code organization to enhance maintainability and readability of the codebase
added aspect ratio and default card image retrieval in CardPresenter . java to enhance visual appearance and maintainability of the card presentation
do n ' t increment the auth method count if it ' s implicit
updated VectorHashKeyWrapper to handle empty arrays for longValues , doubleValues , decimalValues , and byteValues to improve robustness by preventing
added tests for System . nanoTime ( ) and System . nanoTime ( ) in TimeChangeTest . java to enable testing of System . nanoTime (
added trimming of whitespace from the input string in MultiPartFilter . java and printed a print statement in MultipartFilterTest . java to ensure
fire livingexperiencedropevent for mob loot , and make it available to player .
updated error messages and status handling in OpenUVBridgeHandler and OpenUVReportHandler to improve clarity and maintainability of error reporting
remove unsupportedoperatormultiplevisitor and use planner . validate ( sqlnode ) instead
refactor GraphEnhancementQueryEnvironment to utilize RdepsFunction and streamline dependency handling to enhance dependency management and improve code clarity
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added logic to select the entire rocket in the selection option to ensure the user selects the correct component based on its type to improve user experience
simplified assertions in UpdateableResultTest by removing unnecessary Arrays . toString ( ) calls to improve code readability and maintainability
added time boundary detection for offline and realtime tables in BaseBrokerRequestHandler . java to ensure proper handling of time boundaries for hybrid tables and improve
do n ' t try to add socket to the poller if it ' s already in the queue
8muses ripper now can rip from page with both normal album and sub album and have asap rip for sub album
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple test files to improve code
added a condition to check if the profile is a phone and not in landscape mode to ensure proper layout behavior for phone devices on non -
replaced calls to ` getValue ( PROPERTY ) ` with ` unwrap ( QueryImpl . class ) ` in ` PartTreeJpaQueryIntegration
replaced ` Files . readAllLines ( Paths . get ( subsystem . path ( ) ) , param ) ` with ` readMatchingLines (
added a dynamic check for the " getResultStream " method in JpaQueryExecution . java to enable dynamic method invocation for query execution
fix a nullpointerexception in physicsprocess . addentity ( entity ) .
add entry _ processor _ with _ predicate to clear the map when value attribute be indexed
add support for join jitsi - conference - room header to call sip and jitsi - meet
updated color adjustment logic in Utils . java and modified HTML message format in UtilsTest . java to ensure correct color representation and improve readability of
fix : disable menu item when it ' s not set
updated the scratch path format in Aapt2Link . java and added recursive step creation to improve path handling and ensure proper recursive execution
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest .
ggb - 1343 clear selected geos only after update ( ) be call .
camel - 14284 : camel - sjld should not catch markedyamlexception and emptystackexception .
refactor isCanceled ( ) method implementations across multiple classes to improve code clarity and maintainability by centralizing cancellation logic
refactor the ` isAnnotationPresent ` method across multiple classes to provide a default implementation for checking annotation presence to enhance flexibility by allowing custom annotation checks
added a default implementation of the removeAllWidgets method in UILayout . java to provide a placeholder implementation for the method
[ hotfix ] [ yarn ] fix flaky test in yarnsessionfifoitcase
fix opensslcipher . getoutputsizeforfinal ( ) to return the maximum of output size
added logic to force high - res content transcoding for Fire TV - Stick media streams to ensure proper transcoding for high - res
[ beam - 1569 ] add spark dataset show ( ) to readsourcetranslatormockbatch ( # 1569 )
updated listener handling in GpsLoggingService to conditionally prefer cell tower or network tower based on listener presence to improve user experience by
updated putString method to accept a byte array instead of a boolean array and modified wide attribute handling in Relay . java to improve flexibility in
added support for BaseItemDragListener in FolderIcon . java to enhance drag event handling for better user experience
added ` createEmptyArtifact ` method to ` RepositoryConnector ` , ` AbstractRepositoryConnector ` , ` FileSystemConnector ` , and ` Signa
removed unnecessary comments in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed the check for afterAug1 in the video link condition to simplify the condition for checking if the video link contains " . m3
camel - 14284 : camel - sftp should use fileutil . compactpath ( to , ' / ' ) instead of fileutil .
[ hotfix ] [ test ] fix flaky test in baseweatherconsumertest
updated variable name from groupSortStr to sortWithinGroupStr for clarity to improve code readability and maintain consistency in naming conventions
added support for double plant species including LARGE _ FERN in BlockDoublePlant . java and BlockType . java to
replaced ` tree . setFocusable ( false ) ` with ` tree . setRequestFocusEnabled ( false ) ` in ` TranscodingTab .
server : do n ' t swallow exception in vmserver . stop ( ) .
updated DB2TestSystem and related imports and modified condition checks in DockerDatabaseWrapper and TableIsEmptyGenerator to enhance license handling and ensure compatibility
changed the units field from final to non - final and added a setter method in DoubleModel . java , and updated unit handling in GeneralOptim
added a new currency pair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC and ZMW
added sample count setting in TestPBRLighting . java to ensure fpp is set to the number of samples based on user settings
removed the " job . " prefix from the assertTasklet calls in StepWithSimpleTaskJobParserTests . java to streamline the test
changed variable declarations from non - final to final in CentralAuthenticationServiceImplTests . java to ensure immutability of variables and improve code
improve the output of ggbabs ( ) in expressionnode # tostring ( )
added multiple calls to ` addServiceOutput ( ) ` and modified trigger handling in ` DDLSemanticAnalyzer . java ` to improve the
[ drools - 5390 ] fix bigdecimal coercion for objectcreationexpr
added an import statement for " org . eclipse . jdt . " in WebAppContext . java to hide jdt used by jetty
change the return value of the useAuthCache method from super . useAuthCache ( ) and cacheSPNEGO to false to simplify the
updated namespace assignment to capitalize the first segment to ensure consistent capitalization of the first segment
camel - 16407 : directproducer now throw directconsumernotavailableexception instead of camelexchangeexception when no consumer available
added a null check for zooKeeper before setting it to null to avoid potential NullPointerException when zooKeeper is not initialized
updated progress bar message for mod phase 2 initialization to improve clarity of the progress bar during mod loading
replaced direct calls to mVibrator . cancel ( ) with runOnUiHelperThread ( ) in AllSetActivity . java
added a call to update the last remote stream ID in HTTP2Session . java to ensure the correct stream ID is used for remote communication
set render hint for text antialiasing in header and toolbar .
[ java ] : do n ' t allocate term offset if there be no available term in the subscription .
refactor : remove static import of enums in ctannotationimpl
refactor ExoPlayer class to improve code readability to enhance maintainability and facilitate future development
replaced the native method ` getRGBPixelImpl ` with a call to ` getRGBPixels ` using a ` Rectangle ` object to improve
added a new method ` newPrintStream ` to handle encoding settings for output streams to improve flexibility by allowing customizable encoding options
updated vibration duration from 1 to 25 milliseconds in TouchableMovementMethod . java to improve responsiveness during movement transitions
fix checkstyle issue in generator / tools / flybush / appenginesqlcloudsession . java
removed unnecessary whitespace in WebSocketClient constructor and added an empty constructor to improve code readability and maintain consistency
simonstewart : try to fix the i18ntest failure
improve error reporting when a method be not compatible with a class
[ hotfix ] [ test ] restore auth system state in xmlworkflowserviceit
added a custom comparator for case - insensitive comparisons in CoNLLUFeatures to ensure consistent ordering of features based on case sensitivity
refactor JavadocTool to use a uniquefiles set and streamline file parsing logic to improve code readability and maintainability by reducing red
simonstewart : add a few more test for the ` ` toggle ' ' method in the ` ` select ' ' element
added a validation check for the length of keys in HighestKvno . java to ensure that the number of keys does not exceed the
added error handling for attribute retrieval in HDF5BatchReader to improve robustness by logging warnings when unable to retrieve attributes
[ beam - 1341 ] return pcollection . in ( ) instead of pdone in expand ( ) of pcollection . in (
( scott phillips ) camel - process - dsl - dsl - add api - implicitparam annotation for template and processgroup
added a new file TestMultiANewArray . java to implement dynamic class creation and testing with multi - dimensional arrays to ensure proper functionality and
add secondary . storage . vm configuration to control whether secondary storage should be mount on management server
refactor SyncBlockChainMsgHandler to use local variables for head block ID and block length calculation to improve code readability and maintainability by
added a method to set the theme in the PreviewTabView to ensure the preview tab displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a new test for HTTP idle timeout in ConnectorTimeoutTest . java to ensure proper handling of idle timeouts in HTTP connections
add a couple of property to make it easy to add dictionary , dictionarypmi and signature
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` in ` DocCommentParser . java ` and added ` readTagName
removed unnecessary type casting and simplified parameter value assignment in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to improve code
changed log level from warn to debug for child node found in DistributedQueue to reduce log verbosity and improve performance
refactor palette extraction logic to use a dedicated method for generating hotseat palette to improve code readability and maintainability by reducing red
added support for DefaultDataTableEntryTransformer and TableCellByTypeTransformer in TypeRegistry to enable customizable transformations for data table entries and cells
added an assertion to check if newAvailableShared is less than or equal to initShared in AtomicRemainder . java to ensure that the assertion
chore ( regen ) : regenerate with update license year
removed the ` projectGenerated ` boolean and updated its usage in ` WorkspaceAndProjectGenerator ` to streamline project generation logic by eliminating
[ hotfix ] fix checkstyle violation in driverutils
added contact form and post form routes in the application to enhance user experience by providing access to contact information
guac - 1352 : replace permission with objectpermission , objectpermissionset , and systempermissionset in simpleuser .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version and enhance functionality
fix checkstyle issue in util / traitfactory . java
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to enhance
replaced manual closing of perDocConsumers with IOUtils . closeSafely to improve resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added an OnClickListener to the overflow button in ExpansionViewHelper to ensure the menu is displayed when the overflow button is clicked
updated error messages in ` failWithoutSubject ` and ` OptionalSubject ` classes to clarify null and non - null reference scenarios to improve
update line height of help button in algebravieww when heuristic be enable
move protobufferutilstest to core - util so that it can be use by other project
fix divider position not update on window resize
improve handling of crossreferences in aux file generator ( # 3390 )
[ geos - 6668 ] fix serialization bug in geoserverfeaturesource . getmetadata ( )
rename the ` extractTypes ` field to ` dataTables ` in ` RecipeDescriptor . java ` to improve clarity and consistency in terminology
set default avatar to null if meta contact do not have avatars .
updated import statements for Command class in ShellCommand and ShellFactoryImpl to ensure compatibility with the latest SSHD library structure
added a new test method to clean up the audit log table based on the position of the post parameter to ensure that the audit log table is
changed the return type of the inject method to Object and added a suppression warning to improve type safety and suppress unchecked warnings during bean injection
added regex patterns to handle empty line , comment lines , and end line comments in ACLFileParser . java to improve robustness by validating line
updated the ` isReadable ` method to include additional parameters for ` FileSystemPlugin ` , ` StorageEngineName ` , and ` userName ` to enhance
added an ` ancestorDimensionValues ` map and modified the logging format in ` StarTreeNodeImpl ` to improve clarity of dimension names and
added user unlock check before dumping plugins in TouchInteractionService and refactored closeOpenViews method in Launcher to improve user experience by
changed the condition from checking if widthStr is not null to checking if positionStr is not null to ensure that positionStr is not null before
refactor PKIXValidator logic to improve clarity and structure to enhance readability and maintainability of certificate validation logic
[ hotfix ] [ test ] add archunit test for the test code
updated package names from ` org . apache . shenyu . integratedtest . alibaba . dubbo ` to `
cloudstack - 4891 : remove skipprojectnetworks from listnetworks api call ( # 4892 )
updated the method for retrieving the label from ` remove ` to ` get ` in ` RuntimeTypeAdapterFactoryFunctionalTest . java ` to
add property option to store undo info
replace direct access to " sun . java2d . xrgradcache " with a privileged action in XRCompositeManager . java to
replace assertEquals with awaitility in StreamCloseTest . java to improve test reliability by allowing a longer wait time
removed abstract method ` doAfterFlush ( ) ` in ` DocConsumer ` and implemented its implementation in ` DocFieldProcessor ` to streamline
do n ' t convert deprecated property to case insensitive enum
replaced ` capacity ` with ` mask ` and updated related calculations in ` BiInt2ObjectMap ` and ` Int2ObjectHashMap `
updated the thread count from 25 to 15 in HiveConf . java and modified the file renaming logic in Hive . java to improve thread management and
improve trace logging in parallelniosender . close ( ) .
added a null check for the context in SchemeAndroidIDE . java to ensure that a valid context is provided before creating a new SchemeAndroidIDE
make native - image - build - server and native - image - generator use the application classloader .
changed the return type of the modifyGrantedAuthorities method from void to List and modified the authorities array initialization in SwitchUserProcessingFilter to
refactor JaxrsIntegrationTest to JaxrsIntegrationTestBase and introduce RawJaxrsIntegrationTest and JaxrsSpringIntegrationTest
add support for set query timeout in hikaripool # setquerytimeout ( )
added test data providers for XSLT substring functionality in XslSubstringTest . java to enhance test coverage for various substring scenarios in the application
replace eventWriter . close ( ) with delegateEventWriter . close ( ) in StaxEventItemWriter and implement close ( ) in No
added support for MariaDB sequences in the MariaDBDatabase class and updated conditions in CreateSequenceGenerator to ensure compatibility with MariaDB
reformatted string concatenation in multiple classes for consistency to improve code readability and maintainability
replaced BrokerResponse with TableDataManagerProvider in multiple test files to utilize server metrics for improved data tracking
updated the property check for " jsse . enableMFLExtension " to include both " jsse . enableMFLNExtension " and
refactor ObjectIterator to ObjectHashSetIterator and update constructor parameters to simplify iterator initialization and improve code clarity
updated character limit from 22 to 23 in Compose . java and TweetFragment . java to improve the accuracy of character remaining in the URL
add data - point - ttl option to writebuffer ( # 1749 )
updated checkForAndKillXcodeIfRunning method to accept an enablePrompt parameter and improved process manager checks to enhance flexibility in prompting
add terraingrid . getterrainatcell ( ) to get terrain at a cell .
added default value handling in Pretty . java and created T6665791 . java for javac compilation to enhance functionality by allowing default values
added error handling for missing QuestEncryptionKeys . json file in ResourceLoader . java to improve robustness by logging a clear error message when
modified the return statement to check if the push is not supported to ensure that the push feature is only enabled when not in push mode
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
added a sign operation using the private key from local witnesses in BlockUtil . java to enhance security by using a secure key for block signing
updated return logic in FileSystemView to handle empty roots and added security checks in Win32ShellFolder2 to improve robustness by handling potential security
updated method names and logic in ColumnText and PdfPRow classes to improve clarity and functionality to enhance code readability and maintainability by
added a SparseArray for tracking notes and modified note removal logic to improve the management of selected notes in the ListFragment
added logic to update feedback question and response comment in uploadbackupdata
added a null check for data and threw an exception for non - null values in bug8024061 . java to ensure that non - null
no effective change - remove unused pstmtdelegate
refactor widget padding handling to use AppWidgetHostView instead of custom Padding class to improve compatibility with different Android versions and streamline padding
refactor static MethodHandle initialization in NashornBeansLinker . java to use a static block to improve code readability and maintainability
refactor ClassGraph and ScanResult classes to improve code readability and maintainability
replaced the variable ` latch ` with ` goAwayLatch ` and updated the await duration in ` IdleTimeoutTest . java ` to
replaced calls to ` expectFailure . getFailure ( ) . getMessage ( ) ` with ` expectFailure . getFailure ( ) ` to
replaced ThreadLocal currentBook with a null reference in Workbook . currentBook across multiple classes to simplify the handling of the currentBook object
added a ` supports ` method to the ` ContactSecurityVoter ` class and modified the ` vote ` method to validate the object type to
removed unused imports from DataLoader . java to clean up the code and improve readability
added functionality to track the number of rows affected in the postUpdateLog method to enhance the logging functionality to provide clearer feedback on successful updates
mow - 1351 fix problem with suggestion and dock panel .
set default values for foregroundFPS and backgroundFPS to 60 in JglfwApplicationConfiguration to ensure default values are set for improved
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper tracking and releasing of objects to prevent memory leaks
replaced DefaultWebSocketFrame with WebSocketFrame and added ChannelFutureListener to improve WebSocket closure handling
updated test classes to use TestApplicationEventListener1 and TestApplicationEventListener2 instead of TestApplicationEventListener to improve clarity and functionality of state machine
replaced the intent creation and starting of SettingsActivity with a new method to set the list background color to improve the user experience by providing a
replaced the import of Apache Commons StringUtils with OpenHAB StringUtils and added a null check for the line variable to ensure compatibility with the
added an ` accumulate ` method to the ` JavaUserDefinedAggFunctions ` class to enable accumulation of sums and counts based on user -
[ hotfix ] fix checkstyle violation in replicationsink
replace VALID _ CACHE _ SET with REGEXP _ CACHE to store compiled regular expressions to improve performance by reducing repeated compilation calls
added a static method ` reset ( ) ` to the ` GameThread ` class to provide a way to reset the ` gameThread ` to
added a realm check in the login method to ensure the authentication service matches the expected realm to enhance security by preventing unauthorized access to the
refactor parameter handling in SavedRequestAwareWrapper to improve parameter management and enhance null checks to enhance robustness and prevent potential NullPointerExceptions
updated InfoStatus messages in multiple classes to improve clarity and consistency to enhance readability and maintainability of the code
replaced notification logic with a call to ` this . wakeup ( ) ` in ` CommitLog . java ` and ` HAService .
added a check for Android O in imageView condition and implemented user auto - complete adapter in UserAutoCompleteHelper to ensure compatibility with Android O
updated schema info level from minimum to basic in SchemaCrawlerOptions to ensure compatibility with the latest schema crawling practices
pdfbox - 4892 : use bufferedoutputstream , a suggest by valerybokov
replaced the use of ` random . nextBytes ( ) ` with ` randomFixedByteLengthUnicodeString ` for generating random bytes to improve
fix mc - 103516 not be able to place entity on the right side of the world . close # 2066
added " psiprobe . Tomcat10ContainerAdapter " and " psiprobe . Tomcat101ContainerAdapter "
[ drools - 1343 ] fix protobufinputmarshaller to support multi - accumulate ( # 1343 )
refactor switch cases in NowSearchTerm , SearchTermBuilder , and ComparisonTerm classes for consistency to improve code readability and maintainability by
pdfbox - 4892 : remove public modifier , a suggest by valerybokov
added support for dynamic HTTP method and headers in RemoteEndpointServiceAccessStrategy to enhance flexibility by allowing dynamic HTTP method and URL resolution
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to facilitate the creation of ` ResponseBuilder `
added notification for command start in AsyncBackgroundTaskManagerTest to ensure proper handling of command startup events
refactor ` PreviewItemManager ` to remove the private method ` computePreviewDrawingParams ` and add a null check for ` mReferenceDrawable
replaced TokenFilterFactory with CharFilterFactory for improved clarity to enhance code readability and maintainability by using a more descriptive
replaced null checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot to improve code readability and maintainability by
added verbosity handling in JavacStep and ExecutionContext to control output and error messages based on verbosity settings
added a check to convert the schema to uppercase if it is not null and the database type is Oracle to ensure consistent schema handling across different database
added class name to the context description in AsyncLoggerAllThreadContextImplementationsTest . java to improve clarity of the context description for better
added a new file TestShrinkToOneRegion . java that performs garbage collection to facilitate testing of the shrink - to - one functionality
replace string split with Splitter for parsing custom packages to improve readability and maintainability of the code
removed utf8ToString ( ) method from StringField and TermQuery in AnalyzingInfixSuggester . java , and added a test
updated the handling of ` attachment ` in ` PushsaferMessageBuilder . java ` to include ` data : image / ` content type to
[ zeppelin - 4892 ] remove the output stats command from modelexplorer and sequencemodelexplorer
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
changed the FORMATTER function from ` private final static ` to ` private static final ` in multiple field test classes to improve code readability and
updated the ` evaluate ` method to accept a ` Integer i ` parameter and modified its implementation to use ` BigDecimal ` and ` RoundingMode `
[ jsscripting ] use config . valueasorElse ( ) to simplify code
changed class declarations of Test1 and Test2 from package - private to public to allow access to Test1 and Test2 from other packages
updated player event handling to use " plot " instead of " now " for permission checks to improve clarity and consistency in plot event handling
updated the ` getAdditional ` method in ` ConditionAndOr ` and ` ConditionInConstantSet ` to include a ` Session ` parameter and modified
replaced instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusStoredDocValues `
added tests for box and circle creation and reset friction in Box2DCharacterControllerTest to enhance test coverage and ensure proper fri
added tests for FLIGHT _ RECORDER _ OPTIONS and modified memory size settings in TestMemoryOptions . java to ensure proper handling of memory
removed redundant checks for " must be a power of 2 " in ObjectAlignment . java and Options . java to streamline error handling for better
added a method to retrieve the target package name from the manifest and updated related classes to enhance the functionality of extracting the target package from the manifest
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future development
updated acceptableThrowawayItems to use an ArrayList instead of an empty list to ensure proper initialization of acceptableThrowawayItems setting
replaced generic type usage with direct method calls for ` invokeExact ` in ` Test6987555 . java ` to improve type safety
reformatted code in MessageHandler . java for improved readability to enhance maintainability and clarity of the code
refactor Inflection class to improve code organization to enhance maintainability and readability of the code
added methods to retrieve and set the locale in the EvaluationContext class to enhance functionality for managing the evaluation context ' s locale
removed unused import of Plugin in SummaryPrinter . java to clean up the code and improve readability
added a break statement in DrawerActivity . java to ensure proper control flow in the switch statement
updated import statements in MongoQueryCreator . java to use wildcard import and modified debug log message to use query object to improve code clarity and
added system property xwork . loggerfactory to allow customization of loggerfactory
updated test method names and logic in AdminAddPeerWithP2PDisabledAcceptanceTest . java to clarify the purpose of the
updated @ ConditionalOnMissingBean annotations to include name attributes for LivenessStateHealthIndicator and ReadinessStateHealthIndicator to improve clarity and
added a ConcurrentMap to store PStores and modified the return logic to use it to improve performance by avoiding redundant creation of NoWriteLocal
changed the access modifier of the deleteFiles method from public to private to encapsulate file deletion logic within the TestUtility class
rename ` Provider ` to ` ServiceProvider ` and update related methods in ` ServiceLoaderSpliterator ` and ` TypeUtil ` to improve cl
do n ' t swallow exception in javaintermessagereference . setfield ( ) ; throw runtimeexception instead .
added toolchain creation checks in AbstractCell and DefaultToolchainProvider to ensure correct behavior when the Android SDK is present
do n ' t synchronize on the engine lock when remove the context .
updated string comparison from ` indexOf ` to ` contains ` in ` AbstractCheckDescriptor . java ` to improve performance by avoiding unnecessary string index
updated PrebuiltCxxLibraryDescription and related tests to use ` setExportedLinkerFlags ` instead of ` setLinkerFlags ` to
updated method names and logic for updating recents rotation in AbsSwipeUpHandler and RecentsView to improve code readability and maintain
updated instances of ItemReadListener , ItemProcessListener , and ItemWriteListener to use wildcard generics to enhance type safety and reduce potential runtime errors
blockchain : use newblock . getheader ( ) . gethashasstring ( ) instead of newblock . gethash ( ) to
defaultmessagestore : use getstorepathphysic ( ) instead of getstorepathcommitlog ( )
remove unnecessary try - with - resources for jvmGcMetrics and jvmHeapPressureMetrics to improve code readability and maintainability
add get message transferred msg count and total miss message count to compaction log stats
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in future development
added a method to check for the existence of a system UI object and executed a shell command for input key event 82 to enhance UI testing capabilities
updated logger and principal / sessionIds fields to be final in SessionRegistryImpl . java to enhance immutability and thread safety of the class
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 562 : fix npe
[ bonsai ] fix a nullpointerexception in bonsaistateupdater .
updated method signatures in ITextRepository , LimitedSizeCacheTextRepository , and NoCacheTextRepository to accept a CharSequence instead of a String
added @ NotYetImplemented annotation to AlertsTest . java to mark the test as unimplemented due to a known bug in Mar
added a finally block to handle connection return in SocketConnector . java to ensure proper resource management and prevent potential resource leaks
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references to improve clarity
added synchronization to the heartbeatExecutorService initialization in DbTxnManager . java to ensure thread safety when accessing the heartbeatExecutorService
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce ` wrapWithTracingAndCancellation
added a new method ` updateFirstLineShowing ( ) ` to handle drag - selecting text out of the bounds of the TextArea to
added configuration paths for MapReduce and TestInformationSchemaWithPrivilege in TestInformationSchemaWithPrivilege . java to ensure correct file paths are used for
refactor graphics configuration retrieval logic to improve clarity and efficiency to enhance readability and maintainability of graphics configuration retrieval logic
tika - 2857 - fix oom in legacy mode ( # 2857 )
camel - 14263 : camel - core - optimize rout engine to reduce stack frame in use during rout .
refactor PrintTagList to accept a model file and update tag handling to improve flexibility in specifying the parser ' s model file and enhance
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
( chore ) camel - jbang : fix test which fail on window
[ java ] simplify startfromtruncatedrecordinglogtest by use connectclient instead of startclient .
updated the calculation of the arc variable in LineBorder . java to use an off - by - one formula to improve the accuracy of the rectangle
added a check for empty ` galleryImages ` in ` PostGalleryTypeImageRecyclerViewAdapter . java ` to ensure that ` galleryImages `
added a new column " DEPLOYMENT _ ID " with a nullable constraint in the CreateDatabaseChangeLogTableGenerator to ensure the DEPLOY
pdfbox - 4892 : move pdfbox example from fdf to interactive form , a suggest by valerybokov
removed the ' moreColumnOk ' parameter from several methods in AlterTableAddConstraint . java to simplify method signatures by eliminating unnecessary
added support for provisional engines in QuickfixjComponent to enhance flexibility in managing provisional engines in the component
added displayZoomControls functionality to RoboWebSettings to enable or disable zoom control based on content mode settings
added corporea and corporea brick and slab to the mod , and fix a typo in the block name .
refactor ConnectionFactory to improve code readability to enhance maintainability and facilitate future development
added a method to disable menu items based on user settings to enhance user experience by providing clearer menu options based on user settings
updated the message for empty list in ExtendedListFragment to use a new favorite headline and filter list to improve user experience by providing a clear
no effective change - remove unneeded @ serviceregistry annotation
updated MotorMountConfigurationPanel to set auto - resizing mode and auto - creating columns to disable table auto - resizing and improve
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner .
added getter and setter methods for creator , subject , and document properties in POIXMLProperties . java to enhance POIXMLProperties functionality for
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] do n ' t throw an exception if cnc file be empty .
refactor ` NonMarkedFoo ` to ` FooCommand ` and rename ` MarkedFoo ` to ` FooCommand ` to improve
added support for handling jmod files in ClassFileSourceImpl . java to ensure proper loading of JMod - related classes in the classpath
updated the ` TreeBackedElement ` and related classes to remove the ` PostEnterCanonicalizer ` parameter and added null checks to improve code
updated tokenRequest initialization in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest and requestParameters
updated the variable from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure the correct
added multiple calls to ` zooKeeper . sync ` in ` ZKAssign ` and implemented a new ` sync ` method in ` ZooKeeperWatcher `
added checks for EGL _ NO _ CONTEXT in GlUtil . java to ensure proper error handling when no current context is available
added a test for rule flow group deactivation in ExecutionFlowControlTest . java and added a null check in DefaultAgenda . java to
added a return statement in HystrixDashboardConfiguration . java to ensure that the method does not return after execution
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added error assertion in IoTDBPipeIT . java to improve error handling
remove nightly test from clientqueuetransciondisruptiontest because it be n ' t clean up
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl . getsignature ( )
changed the access modifier of the validateInstance method from public to protected to allow subclasses to access the validateInstance method
updated imports and class names in GeoPoint - related classes to improve clarity and maintain consistency in naming conventions
added a new ` FakeBuildable ` class and modified ` OnDiskBuildInfoTest ` to use it to simplify the build process by le
use item . isempty ( ) instead of item . getitem ( ) for null check
renamed ` stream _ path ` to ` stream _ timeseries ` and updated corresponding references in ` TSParser . java ` and ` SQLParser
added a check to return 0 if the vector ' s velocity is less than or equal to EPSILON to ensure that the vector does not exceed
replaced calls to ` getBucket ( gcsUri ) ` and ` getBucket ( segmentUri ) ` with ` _ storage ` and ` _ storage
removed redundant call to blockCloseVertxByName in TestHighwayTransport . java to ensure proper resource management and avoid potential memory leaks
hhh - 14850 - ddl ddl for history view drop and create view do n ' t work correctly in postgres and db
updated the expected number of clustering engines from 2 to 3 in CarrotClusteringEngineTest . java to ensure the test accurately verifies
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to temporarily disable tests that need to be rewritten
replaced ` ObjectInputStream ` with ` ParserStateObjectInputStream ` in ` ParserCacheCommand ` and added a new class ` ParserStateObjectInputStream
added null checks for changeLog and set objectQuotingStrategy in ChangeSet . java and DatabaseChangeLog . java to ensure objectQuotingStrategy is
updated MetainfoParser to use fromXmlStream instead of parse to improve compatibility with XML file handling
deleted the CsrfControllerAdvice . java file to remove unused or redundant code related to CSRF token handling
refactor endorsed path handling in AntCompiler . java to ensure consistent path formatting to improve code readability and maintainability by avoiding
added a scrim animator and utility for managing drawable alpha values in the launcher to enhance user experience by providing smoother transitions during screen
updated the calculation of the long value from 2 to 1 in TypeInferenceUtils . java and added new test cases in TypeInferenceUtilsTest .
regenerate client with updated copyright year ( # 4382 )
added support for handling long and UNC path prefixes in WindowsPathParser and PathOps classes to ensure correct path parsing and validation for long and
replaced InetSocketAddress instantiation with direct multicast socket instantiation in Promiscuous . java to simplify socket initialization and improve code readability
updated the closing order of the writer and query in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
return a cloned version of nBits in IndexColorModel . java to ensure the original nBits is not modified after return
changed the access modifier of the deriveCollectorName method from private to protected in ProfilerCollector . java and added custom test cases in TestProfilerCollector
refactor ` MappingMongoConverter ` to use a new method for type hint checking to improve code clarity and maintainability by encapsulating type
added performance measurement for proxy factory creation in ProxyMaker . java to improve performance measurement during proxy factory creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations in GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting for connection issues
replaced the ` reinflateWidgetsIfNecessary ( ) ` method with ` getWorkspace ( ) . reinflateWidgetsIfNecessary ( )
added a new file ` DeleteInsideFileDialogTest . java ` to demonstrate the deletion of files in a dialog to ensure that
[ lwjgl ] fix inputmanager . setcursorvisible ( false ) in lwjglabstractdisplay .
added test case for update profile picture in instructorstudentlistpageuitest
added methods and methods to manage test execution based on system properties to enhance flexibility in ignoring tests based on environment variables
removed the pointer parameter from the fling method in ScrollPane . java to simplify the method signature by eliminating unnecessary parameters
added null check for pageable in QueryDslJpaRepository and created a test for null pageable in QueryDslJpaRepository
added computeMemorySize method to MemoryManager to calculate the size of memory based on a fraction to ensure that memory allocation does not exceed specified limits
camel - 14284 : camel - jmsp : fix flaky test in publishjmsstest
refactor SnowballAnalyzer to improve code readability to enhance maintainability and facilitate future development
updated previousIndex initialization and logic in StreamingAggTemplate . java to ensure proper handling of previousIndex and improve batch processing logic
throw graalerror instead of assert if null check fails .
added a default method ` stream ` in ` StreamSupplierComponent ` that uses ` computeIntensityDefault ( ) ` to facilitate the
updated logging messages and added a retry mechanism for moving files to ensure the file is fully played and improve error logging clarity
replaced the ` setAccessable ` method with a new ` newInstance ` method in ` InjectorProxy ` and updated access modifiers in ` Standard
[ hotfix ] [ stream ] do not close output stream in flinkstreamingcreatefunction
added unit tests for unsupported SQL statements in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest to ensure proper parsing and deparsing of
replace ` return null ` with ` return ImmutableList . of ( ) ` in ` AppleTest . java ` to ensure that the method returns
updated the error message in NamedSetTest . java to include Quality Distribution and Inc to improve clarity and accuracy of the test cases
updated WebSocket connection handling to include connection state and reconnect logic to improve clarity and maintainability of connection state management
replaced setAttribute with removeAttribute for ACEGI _ SECURITY _ AUTHENTICATION _ KEY and ACEGI _ SECURITY _ TARGET _ URL _
hbase - 25836 addendum fix flaky testregionreplicareplicationendpoint . testregionreplicareplicationendpoint
added initialization and configuration for PMS in FormatRecognitionTest . java to ensure proper resource management and avoid potential memory leaks
imagestoreuploadmonitor : add event for creation of ova data disk template .
updated test annotations and imports in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to use JUnit4 and SpringJUnit4ClassRunner to
added @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method overriding
updated metric and instance names from ' metricVal ' to ' metricVal1 ' in AppendOnlySchemaIT . java to improve clarity and
added a check for document count mismatch in SegmentReader . java to ensure that deleted documents match the segment document count to avoid runtime exceptions
add some method to siplogger to get the name of the jain - sip logger .
updated the minimum length of the FilamentFactory from 1.0 to 0.9 to ensure proper handling of staves with no starting
removed default value of ` handleFileUploads ` from ` VertxPlatformHttpServerConfiguration ` and updated its usage in ` VertxPlatformHttp
added a test to verify the default CSRF protection matcher allowed methods in CsrfFilter to ensure proper handling of cases where the CSRF protection matcher
remove the static field from hotspotobjectconstantimpl because it be n ' t need
updated method names from ` add ` to ` addFrequency ` across multiple classes to improve clarity and consistency in naming conventions
updated FileIO to use a timestamp variable instead of a direct call to instant . now ( ) to improve code readability and maintainability by
fix ( sqmcctestatement ) : make ctedefinition non - final
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData for improved data handling
updated the argument format in JsLibrary . java to include the root path to enhance flexibility in specifying the library ' s output location
updated the angle slider in RailButtonConfig from 180 degree to PI in the RailButtonConfig to ensure the slider aligns with the
fix an issue with the save to the slot on the client that could cause the game to hang .
added support for expression language in KerberosProperties to enable support for Kerberos expressions in the application
removed null check for remoteMountPointComponent before setting translation and rotation degrees to simplify code and improve readability by eliminating unnecessary null checks
updated the ` setupViews ` method to include a ` ScrimView ` parameter and modified related animation logic to enhance animation control and improve
[ hotfix ] [ state ] enable periodic materialization by default
added getter and setter for the ' value ' attribute in ProtocolParameter and updated xml attribute handling in List and ParamTagHandler to enhance parameter management
add a test to verify that the chunkingservlet work with a head request .
added check for bumped : yes / no / master status in checkrouteranswer
added a Content - Type header with a value of " application / x - www - form - urlencoded " in SwitchToPostInterceptor and
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
added logging functionality to ignore setFetchSize ( ) in PhoenixResultSet to improve error handling and provide clearer warning for unsupported operations
added initialization of ` net ` with a new instance of ` AndroidNet ` to ensure proper initialization of the ` net ` variable
[ hotfix ] [ table - common ] fix the order of parameter in lirmtimesegmentdatamanager # getrowcount
removed the ' false ' parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 14827 addendum remove hbase - prefix - tree from tablemapreduceutil
added a check for inflation failure in DesignerActivity and made the root variable final in XMLLayoutInflater to ensure proper handling of back
refactor PushbackInputStream to improve code readability to enhance maintainability and facilitate future development
make loweringphase more efficient by use schedulephase instead of compute controlflowgraph
updated the error message from " download _ folder _ failed _ content " to " sync _ folder _ failed _ content " to improve clarity
updated newline handling in Makefiles . java and improved test cases in MakefilesTest . java to enhance code readability and maintainability by
replaced direct calls to ` getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` and added a null
updated refresh logic in SimpleBatchNode to include RF _ TRANSFORM flag and set bound refresh to ensure correct refresh behavior during batch processing
replace isguaranteedsafepoint ( ) with isuninterruptible ( ) in sharedmethod .
added framebuffer size callback and updated window size handling in LwjglWindow . java to improve window size management and ensure proper closure of
updated animations in LauncherAppTransitionManagerImpl to use mRecentsTransX instead of translationX for centering the task to improve animation
replace ` LiteralNode < Node > ` with ` LiteralNode < Object > ` and rename ` NodeLiteralNode ` to ` NullLiteralNode
added ` setLength ` method to ` FSDirectory ` and ` IndexOutput ` classes and updated ` CompoundFileWriter ` to set file lengths to
removed manifest handling in AndroidNdkScriptGenerator and updated dependencies in AntScriptGenerator and LwjglDebugStarter to streamline the
camel - 14284 - camel - aws2 - s3 : replace copysource ( .. ) with sourcebucket ( .. ) and source
added support for " * " role in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to enhance security by allowing wildcard
updated ZookeeperClientServerRegisterRepository to handle null or empty data cases and improved URI registration handling to enhance robustness and clarity in
renamed methods and variables from ` makeDeepMock ` to ` deepStub ` and ` recordDeepStubMock ` to ` deepStubAnswer
modify contract call value handling to return an empty string when the call value is empty to ensure that the application handles cases where the call value is
fix formatting of debug log message in ` ` parsedate ( ) ' ' method
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and modified the algorithm string in ` PBETest ` to
tmi - tiff : do n ' t throw eofexception if the offset be out of range .
added validation to ensure job parameters are in the form name = value to improve error handling for invalid job parameters in CommandLineJobRunner
updated the expected content format in SmtpTests and MailTests from " \ r \ n " to " foo " to ensure consistency in message
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for lastSequenceId to improve thread safety and performance in sequence ID management
added a new file ` Test . java ` containing a method ` sum ( ) ` to calculate the sum of elements in a loop to provide
updated ` ShadowWifiManagerTest ` configuration to include maximum SDK version and changed access modifiers in ` WifiUsabilityStatsEntryBuilder `
added a new Java file that implements a solution for sorting queries based on ascending and acending arrays to implement a solution for sorting queries based on
do n ' t compute expire time if we already have one
refactor taskbar recreation logic to improve readability and maintainability to enhance the logic for determining whether to recreate based on screen size and
updated synchronization logic in SyncFutureCache . java to improve performance and reliability of cache operations
updated DUBBO _ PROTOCOL _ VERSION and LOWEST _ VERSION _ FOR _ RESPONSE _ ATTATCHMENT from 2.0 . 1 to
[ java ] uselessstringvalueof : fix false positive for literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to validate the functionality
added target max type shard size configuration to hollowproducer to allow for more flexible handling of type shard size
added new version identifiers " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBack
refactor CompilationTask to improve code structure to enhance maintainability and readability of the code
updated assertions in TestSemanticAnalysis and modified database parameter handling in DDLTask to improve clarity and ensure location is not shown in test mode
added an executor for clearing the database change log table statement to improve database management by executing the clear operation on the database change log table
added version handling and improved path assignment logic in CallPath and RestClient classes to enhance the functionality of the CallPath class to support version
updated error messages and modified the ` close ` method in ` PhoenixDriver . java ` to improve clarity of error messages and
simonstewart : throw an unsupportedoperationexception instead of a npe , a suggest by valerybokov
added JUnit ' s @ After annotation and refactored FolderPickerActivityIT to extend AbstractIT and added a screenshot test method to enhance
[ gr - 33939 ] do not remove deoptimization group phase if dev mode be set .
added a length check in StringHelper and a test for removing leading and ending quotes in StringHelperTest to ensure proper handling of strings with no leading and
updated type handling in JpaQueryCreator and added handling for NOT _ CONTAINING case in UserRepository to improve query functionality and ensure correct
do n ' t try to push a branch if it ' s too long
added a call to dispatch a new P25Message with a copy of the message to enhance message handling by providing a copy of the message
added null checks for the WebSocket handler before calling checkClosed ( ) to ensure that the WebSocket handler is only cleared when the WebSocket is closed
[ ds - 3892 ] fix discoveryit ( # 3893 )
updated widget padding settings in AppWidgetResizeFrame and Launcher classes to use the appropriate padding resources to ensure consistent widget padding across the application
added hideAllApps method to TaskbarUIController and implemented closeOverlay method in BaseActivityInterface to improve user experience by hiding all apps
removed the synchronized modifier from the launch method and replaced a sleep delay with a join operation to improve thread safety and ensure the launcher thread is joined
corrected the calculation of the ' p ' variable in JavaSEPort . java to correctly account for the canvas ' s position to ensure accurate
replaced notification handling with startForeground method calls in UploadService . java to improve responsiveness to foreground notifications during upload process
add a new test to prove that static final field can be use in a class .
hbase - 25827 testthrifthbaservicetest fail on slow ci server due to hbase client retries
changed log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity and improve performance
added exception handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve error handling
added a new ` BittrexTickersResponse ` class and integrated it into ` Bittrex ` and ` BittrexMarket
refactor enum constant retrieval and store in a private field to improve code readability and maintainability by reducing redundancy
refactor session registration methods to use Object instead of Class < ? > to improve type safety and clarity in session management
added Unicode escape sequences to the character array in FileUtils . java to enhance character handling for better readability and usability
added CSS handling functionality to ResourceService and updated related methods to improve resource management and ensure proper handling of stylesheet retrieval
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before further operations
changed the parameter type from ObjectParameterStrategy to PointerParameterStrategy in the invokevirtual method to ensure proper handling of pointer parameters in the method invocation
updated condition in CreateSequenceGenerator to exclude CockroachDatabase to ensure compatibility with CockroachDB for sequence generation
removed the ` isEnum ` condition from the ` name . equals ( " java . lang . String " ) ` check in ` ObjectStream
replaced ` UnsatisfiedLinkError ` with ` SymbolNotFoundError ` in ` Library . java ` and created a new exception class to improve
added conditional logic to handle only pseudo - fields in BinaryResponseWriter to improve flexibility in document retrieval based on return fields
added handling for PING and PONG events in WebSocketImplBase . java and a corresponding test in WebSocketTest . java to enhance WebSocket functionality
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in identifiers
update dnsresolverprovider to use default dns cache
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration . java to ensure messaging tracing is conditional on the MessagingTracing class
hhh - 14827 - sqlquery . quoteidentifier ( ) now use db2 dialect
updated import statements in IDELanguageClientImpl , EditorTextActionMode , EditorTextActionWindow , and IDEEditor classes to streamline
added handling for the ' / ' character in XMLLightweightParser to ensure proper closing of XML tags during parsing
removed the line setting the visibility of the TouchCharInput to GONE to improve user interface responsiveness by removing unnecessary visibility settings
added a null check for the getCurrentUser ( ) before comparing IDs to avoid potential NullPointerException when accessing getCurrentUser ( )
refactor JSObjectLinker to conditionally set members based on the index to improve clarity and prevent potential index out - of - bounds
updated DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to initialize randomStringGenerator and suffix as non - final to improve im
added a @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
add ` @ Deprecated ( forRemoval = true , forRemoval = " TODO " ) ` annotation to multiple Java classes to indicate that these classes
deleted the JoglDebugAdaptor . java file and updated its usage in RocketFigure3d . java to streamline the debug
added ` toString ` methods in ` ExtraFieldPropagation ` and ` AWSPropagation ` classes for better string representation to enhance debugging capabilities by providing clear
added PendingIntent to FileDownloader . java and FileUploader . java to update the notification ' s current state to ensure that notifications are updated
refactor ` nextOrd ` method to include a ` set ` method and update its implementation to improve code readability and maintainability by encaps
refactor DateTimeFormatter class to improve readability to enhance maintainability and facilitate future updates
removed unnecessary try - catch block for loading the Win32ShellFolderManager2 class to streamline code by eliminating unnecessary try - catch
added null and empty checks for administrator credentials in the ` setAdministratorCredentials ` method to ensure that administrator credentials are not null or empty ,
added a constant for the maximum width scale for landscape screen and updated width calculation for tablet and two panels to ensure the screen size does not
fix a bug where sketch window color be n ' t render properly
refactor Hashing class to improve code readability to enhance maintainability and facilitate future development
updated the ` accept ` method to use ` folderPath ` and ` fileName ` instead of ` file ` and ` s ` to improve clarity
updated the ` addToListIfNeeded ` method to include ` contentDescriptionInt ` as a parameter for user information display to enhance the functionality by providing
added a null check for the type variable and initialized newType to null if it is not null to improve code clarity and prevent potential null pointer
increased ACTIVITY _ START _ DELAY from 500 to 800 milliseconds to improve responsiveness during activity start
added a new constant for the WEBAPP _ HOME in SolrJettyTestBase and updated its usage in JettyWebappTest to improve
removed diameter assignment and reset selectedMotorSet to null in ThrustCurveMotorSelectionPanel . java to simplify code and improve cl
added import for BufferUtil and called clearToFill method in ByteBufferPool . java to enhance buffer management by clearing data before use
[ api ] fix npe when create a notification rule via rest api ( # 2338 )
replaced instances of " authorization " with " authentication " in LDAP configuration files to ensure consistency and clarity in the authentication context
fix for http : / / issues . apache . org / activemq / browse / amq - 4239 - delete exchange
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
replaced ` syncUninterruptibly ( ) ` with ` addListener ( ) ` for connection handling in ` ServerInfoService . java ` to
refactor CompositeHandlerAdapter to improve code readability to enhance maintainability and facilitate future development
update implementation of Quartz2Adapter class to improve scheduling efficiency and performance
handle illegalstateexception in sulonglibrary . ismembervalid ( )
updated Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with Spring Security 6.3 and improve schema
updated ` newNameResolver ` method to accept ` Args ` instead of ` NameResolver . Helper ` and modified ` DiscoveryClientNameResolver ` to
added a method to check for non - empty annotations and adjusted position handling in JavacParser . java , and created a new test class
added " com . sun . naming . internal . " to CheckPackageAccess . java to ensure proper package access for internal classes
changed the default value of the strict variable from false to true to enable strict mode for improved error handling
updated ` OfflineSorter ` to handle exhaustive partition reading and added a test for over - nexting in ` TestOfflineSorter ` to
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
added a boolean variable ` isInXYMode ` to check if ` lightState . getXY ( ) ` is not null before evaluating color mode
refactor folder creation radius calculations to use targetCell for improved clarity to enhance code readability and maintainability by centralizing icon visibility
replaced direct calls to ` activity . showLoadingDialog ( ) ` with a call to ` FileDisplayActivity . showLoadingDialog ( )
added a null check for ` uigestureFile ` before initializing ` recordsMap ` , ` valuesMap ` , and ` messagesMap `
update error prone , bypass a bug in it , fix some problem it flag ( # 2387 )
added a method to set listeners in the XmlSuite class to enhance listener management for the test suite
added a new method ` loadWithNewGlobal ` to the ` Global ` class and introduced a new method ` loadWithNewGlobal ` to
added JSON string handling methods to StarTreeIndexSpec for JSON serialization to enable proper serialization and deserialization of StarTreeIndexSpec objects
added import statement for ObjectPostProcessorConfiguration in HeadersConfigurer . java to utilize ObjectPostProcessorConfiguration for enhanced security configuration management
replaced double quotes with single quotes in string replacement methods across multiple file handle classes to improve code readability and maintainability by using single quotes
[ drools - 1390 ] fix null pointer exception in in operator ( # 1390 )
added import for FieldCache and included commit and purge of FieldCache in TestDistributedSearch . java to avoid FC insanity during segment
added unit test for message boundary event on subprocess and inside of multiple instance
added resolvestaticcall ( ) method to programmanager to resolve static method call .
http : / / issues . apache . org / jira / browse / amq - 4892 - allow to configure the number of
added constants for slot IDs and updated method signatures to use these constants to improve code clarity and maintainability by using named constants instead of boolean
added alignment support to the widget addition method in mmm Layout . java and modified return type in GdxRenderer . java to improve flexibility
[ hotfix ] [ test ] ignore unalignedcheckpointitcase for now
added imports for sound - related classes and modified a conditional check in JDK13Services . java to enhance functionality by ensuring only valid class types are
added a condition to check if the keyword already exists before adding it to the reference map to avoid adding duplicate keys to the keywordToReference map
camel - 14284 : camel - core - optimize multicast eip to reduce object allocation
fix javadoc warning and remove unused code
escape character in flavor statsd line ( # 644 )
add udp port to multicast so that it can be configure by the client .
rename rx . operators . operatormulticast to rx . ops . operationmulticast so that it would well reflect our new naming convention .
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to improve test reliability by allowing more time
added a try - finally block around the latch count down logic in VertxTestBase . java to ensure latch count is properly released after the
added a synchronized destroy method to the SessionFactoryServiceRegistryImpl class to ensure proper cleanup of cached event listener registry when the service is destroyed
simonstewart : make the login button work with the local storage
[ pytorch ] update ivalueutilstest to use ndarray instead of pt NDArray
added a listener for clearing force invisible flags in RecentsView and removed the onEnterAnimationComplete method from BaseActivity to improve user experience
pdfbox - 4892 : improve performance of checkdatepattern ( ) method in defaultsplitcharacter
camel - 14284 : camel - cxf should use source code generate configurer to avoid reflection configuration .
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability by reducing duplication
added logging for play time calculation and conditional logging in LauncherAnimationRunner . java to improve debugging capabilities and ensure accurate play time tracking
added a conditional check for bailout on exception in C1XCompilation . java and defined a constant in C1XOptions . java to
changed default values of signup and passwd in Links . java and updated corresponding tests in IdentityZoneConfigurationBootstrapTests . java to null to ensure
[ hotfix ] rename previousexecutiongraphallocations to reserveallocations in slotprofile
replace ` SimpleDateFormat onlyFormat ` with ` String format ` and introduce ` getOnlyFormat ( ) ` method to improve clarity and maintain
added NoDataContainer to GeoTiffReader and its test to enable handling of no - data data in the image rendering
improve error message when exception source section be null .
replaced ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in JdbcExecutionContextDao and DefaultExecutionContext
replaced ` client . blockUntilConnected ( ) ` with ` client . getConnectionStateListenable ( ) . addListener ( ... ) ` to
refactor ArrayTypeHandler to check for null values before retrieving arrays to enhance code robustness by preventing potential NullPointerExceptions
replaced the ` RegexpTunnel ` class with a reflection - based method for retrieving the prefix from the program to simplify the code by elimin
updated the application picking method to use the Application class instead of null to ensure the correct class is used for application selection
[ drools - 3390 ] fix npe on mutable global when use a variable reference
replaced Preconditions with validation checks for asset name , URL , and description in AssetIssueActuator . java and added validation methods in TransactionUtil
copypast do n ' t copy parent to child ( textfield )
updated label and description properties in LGWebOSActions and LGWebOSUpnpDiscoveryParticipant classes , and modified status updates in L
replaced setNodes method with addAll method for setting seed , active , and trust nodes to improve readability and maintainability of the code
improve error message in basetokenstreamtestcase to be more informative
log4j2 - 1341 fix timebasedtriggeringpolicy to use a fixed interval instead of a fixed one .
refactor item click methods in ShadowAdapterView and ShadowListView to improve clarity and functionality to enhance code readability and maintainability by
pdfbox - 4892 : avoid class cast exception , a suggest by valerybokov
added a null check for loopScope and implemented the afterMethodScope method in GraphDecoder and PEGraphDecoder to ensure proper handling of method scope
refactor HttpSessionDestroyedEvent to use getSession ( ) and enhance attribute retrieval to improve session management and ensure correct security context handling
added a test for changing the service name in ZipkinSpanReporterTest to ensure that the service name is correctly set to the manually provided one
added logging statements to ` JavaInMemoryFileManager ` and ` JavacToJarStepFactory ` , and modified the spooling
rename ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to clarify the purpose of the generator
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds in ClientMultiMapLockTest . java to allow more
updated ConfluentSchemaRegistryDeserializerProvider to include a cache capacity parameter and added new overloaded methods to enhance cache management and improve code cl
renamed the JCheckBox variable from ` remind ` to ` checkAtStartup ` and updated its tooltip to improve clarity of the checkbox
added method additions for various key and value strength options in NodeGenerator . java and refactored the return statement in NodeFactory . java to
refactor conditional logic for handling transient properties in CascadingActions . java to improve readability and maintainability of the code
added support for retrieving and setting prototype properties in ScriptObject to enhance flexibility in handling ScriptObject properties
updated DEFAULT _ READ _ MODE from " heap " to " mmap " in CommonConstants . java and modified ImmutableSegmentLoader . java to log
added support for ByteArrayTemplate in ArrayTemplateBuilder to enhance functionality for byte type handling
added Hipchat support to the SamlServiceProviderProperties and created a new HipchatConfiguration class to enhance SAML service provider integration with H
replaced List < URL > with Set < URL > for commandRegistryUrls and updated resource retrieval logic to improve performance by using a HashSet for
updated warning message to include the current context and added debug logging for uncovered HTTP methods to improve logging clarity and enhance debugging capabilities
do n ' t call checkloggedin ( ) in svn repository connector , since it do n ' t do anything
http : / / issues . apache . org / activemq / browse / amq - 4892 - allow to configure a transaction
cloudstack - 4891 : fix typo in vmwareresource . java ( # 4892 )
modified the implementation of the Timers class to improve performance and maintainability of the code
replaced the constant ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java
removed deprecated constants and constructors for UAX29URLEmailTokenizer to clean up code and encourage the use of newer token types
removed redundant ` Map < Object , Object > ` implementation from ` ScriptObject ` and updated assertions in ` ContextTest ` to simplify code and
refactor EventBusMetrics class to improve code readability to enhance maintainability and facilitate future development
[ ds - 3892 ] add a method to get the eperson ' s locale for use in workflow and subscription
make javerstransactionaldecorator use @ initializingbean instead of @ postconstruct
removed null check for pgTypeName before putting it into _ pgNameToSQLType to simplify the code by eliminating unnecessary null checks
added multiple server setups in ScopedHandlerTest . java to ensure proper server setup for multiple handlers
improve calltimeoutexception handling in waitnotify phase ( # 11977 )
updated the condition from ` isBlank ` to ` isEmpty ` in ` RestLoginProcessingFilter . java ` to ensure that the login request ' s
updated permissionNode check from ` Objects . equals ( permissionNode , " " ) ` to ` ! permissionNode . equals ( " * "
rename ` encoding ` to ` sourceCharset ` and update related methods in ` AbstractCompiler ` and ` ICompiler ` to improve clarity and
changed the type of postLogin from byte array to String in HostBean . java and updated related methods in TerminalBridge . java and HostDatabase
added imports for GenericComponentModifier , FinSet , and FlightConfiguration , and modified simulation handling logic in GeneralOptimizationDialog . java to
camel - 14263 : camel - jbang - allow to turn on / off context reload by default
replaced log4j configuration with logger configuration in CommonTestUtils . java to improve clarity and consistency in logging configuration
updated PrologSizeSanityCheck . java file to improve performance and maintainability of the code
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future development
added a check for non - closeable content type before invoking ` invokeSafely ` on ` nonCloseable : : reset ` to ensure
do n ' t run type argument qualifier check if the embedded setting be enable
update player movement and health debug command to use default value
updated the ` random ` method to include a half - length total weight in the ` RandomLoadBalancer ` class to improve the randomness of the
improve error message for invalid timestamp in metricresourcetest
updated parameter descriptions for " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi . java to clarify sorting
replace multiple instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract .
[ iotdb - 4892 ] pipe : fix deadlock in pipetaskcoordinator ( # 4893 )
modified DependencyJar creation to conditionally use preinstrumented JARs based on system property to enhance flexibility in managing instrumented jars based on
changed the conditional check from ` if ( ! isSilent ) ` to ` if ( isSilent ) ` to simplify the conditional logic for better
added checks for default and required values on dynamic fields in IndexSchema . java to ensure proper error handling for unsupported attributes on dynamic fields
removed the randomlyReadRepair check from the repair logic in StorageProxy . java to simplify the repair logic by eliminating unnecessary checks
replaced ImmutableSortedSet with Iterables for adding system include roots and added a test for includesDirs to improve code clarity and ensure correct functionality
removed null initialization for startDate and endDate in AdaptableX509CertSelector . java and added checks for Subject Key Identifier and Serial Number in Forward
log4j2 - 1343 use abstractappender . parse ( int , int ) instead of string . parse ( int , int
deprecate guiscreencensorevent . getkeyboard ( ) for removal in 1.16 .
removed duplicate methods for adding and removing categories in CategoryEditSearchRecyclerViewAdapter to streamline category management by eliminating redundancy
add servercachetype parameter to servercachemanager . getcache ( ) and servercachemanager . getcache ( string , string ...
updated the way massOverriddenBy and CDOverriddenBy are set in RocketComponent to use an iterator for better iteration to ensure
nbjavac : fix compilation cancellationexception in javadiagnosticprovider
refactor MultiThreadedBuildRuleResolver to use a Supplier for task execution instead of abstract methods to improve code readability and maintainability by
refactor executor initialization in WanReplicationServiceImpl to use a synchronized block to improve thread safety and thread safety when managing the executor
added null checks for partition and table locations in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to improve robustness
refactor lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java for improved readability to enhance code clarity
added unit tests for the ` Files ` class for file deletion functionality to ensure proper functionality and error handling when deleting temporary files
removed unnecessary try - catch blocks around socket closing in ServerSocketAdaptor and SocketAdaptor to simplify resource management by eliminating unnecessary exception handling
updated the class name check in SSLLogger . java from " java . lang . System " to " Logger . class . getName ( ) "
replaced the use of ` currentWorkingDirectoryList . clear ( ) ` with ` addWorkingDir ( f . toString ( ) ) `
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of
changed the visibility of the ` GeneratedEntityDecorator ` class from public to private to restrict access to the class for better encapsulation
removed URLs from SimplePostTool . java to streamline the code by eliminating unnecessary URLs
[ geosymbolic ] fix issymbolicdiffers for max and min command
refactor client container initialization and shutdown handling in JavaxWebSocketClientContainerProvider and JavaxWebSocketClientContainer to improve error handling and
updated conditional check to use logical OR instead of logical AND to improve readability and maintainability of the code
close the jdbc pool and close the web application context in some test
added functionality to retrieve search strings from query parameters in RemoteBrowseHandler . java to enhance user experience by allowing dynamic search based on user input
removed the visibility of the neutral button from SetupEncryptionDialogFragment to improve user interface by hiding the button during setup
added countitems ( ) method to itemdao , use it instead of countnotarchived / countwithdrawn ( )
updated SQL statement syntax in DDLTask . java to use double quotes for table and column descriptions to ensure consistency in SQL syntax and improve readability
added logging and exception handling in CheckTokenEndpoint . java to improve error management and logging for OAuth2 exceptions
updated multiple Java classes and added a method to override the lookupSeriesPaint ( ) method in the AbstractRenderer class to improve code clarity and
updated IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to use exchange for updating identity zones instead of posting to improve test reliability
updated dismiss delay from 20000ms to 10000ms in ExtractionModelFrame and DataBrowser classes , and added tooltips in SQLConsole
added support for Surefire 2.22 . 0 and JUnit 5 in the ActionProviderImpl class to ensure compatibility with Surefire
replaced ` HumanReadableException ` with ` RuntimeException ` in ` WorkerShellStep . java ` to improve error handling by providing a more
[ hotfix ] [ stream ] move datastreamutils and collectsink annotation to flink - core
refactor StreamCepstrumSource class to improve code readability to enhance maintainability and facilitate future updates
added a check to prevent index out of bounds errors in the List class to improve code robustness by preventing index out of bounds errors
updated assertions in CloneHelperTest to check for Parenthesis instead of OrExpression to ensure correct handling of Parenthesis expressions in the test
added confirmation and requiredType attributes to the DebugPaste command to enhance user experience by providing confirmation options for debugging
improve error message when no endpoint can be find
danielwagnerhall : do n ' t focus mathquillggb when new creation mode be enable .
updated imports and refactored argument classes in GoBinaryDescription . java for consistency and clarity to improve code readability and maintainability by
updated the environment variable retrieval logic in Jooby . java to use a dynamic logback resource path to improve flexibility in configuring
updated ` SimpleRetryExceptionHandler ` to use ` RetryListener ` instead of ` RetryListenerSupport ` and introduced a new ` SecondDummyRetryListener
fix meter count report with decimal ( # 498 )
made email and author fields final and added a constructor to the Contribution class to ensure immutability of email , author , and commits
replaced a for - loop with a do - while loop that appends a period to the StringBuilder to improve performance by reducing the number of
refactor how elements are retrieved and instantiated from the fields map to ensure that elements are correctly instantiated if they do not already exist
enhanced error messages in StaxEventItemReader to include the resource URL to improve clarity of error messages for better debugging
change testmultirenerendertarget to use pointlight [ ] instead of geometry for light
added null check for currentProfile before retrieving the client in DelegatedAuthenticationClientLogoutAction . java to avoid potential NullPointerException when currentProfile is null
replaced ' target ' with ' newElement ' in SaajStaxWriter . java to ensure the correct element is being added to the
added BigInteger fields for various cryptographic algorithms in KeyStoreManager . java to enhance security by using specific cryptographic algorithms
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
[ activiti - 5 ] fix engine version for bpmn deployer
updated property names for resource loader and file loader in SpecificCompiler . java to improve clarity and consistency in resource management
updated thread verification logic in CEntryPointSnippets . java and modified method names in VMThreads . java to enhance thread verification logic and improve
added null check for map values in GenericUDFMapValues . java and created a corresponding test case in TestGenericUDFMapValues .
rename " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to improve clarity and consistency in naming conventions
add a config option to enable / disable oil spouts at the bottom of large lakes .
added a check for the existence of a " . clean - me " file in ImportContext and updated related conditions in JobQueue to ensure that
fix possible npe in memoryrealm . readxml ( )
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
removed redundant static final declarations from ZipConstants . java and added a wildcard import in ZipEntry . java to streamline code and improve readability by
refactor ` newFileSystem ` methods to improve file validation and error handling in ` ZipFileSystemProvider . java ` to enhance robustness by ensuring
replaced ` createHorizontalStrut ` with ` createHorizontalGlue ` for the condition panel in ` IfControllerPanel . java ` to
refactor connection initialization in FailoverUpdateURIsTest . java to improve code readability and maintainability
added SerializedName annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enable serialization and deserialization
added deletebook ( ) method to databaseadapter to delete book
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
fix off - by - one error in abstractajpprocessor
do n ' t start the admin console server if it fail to start
replaced the unregisterHandlers ( ) method with direct field assignments for binaryConsumer and textConsumer to improve code readability and maintainability by redu
added configuration properties for device ID transformation method , ID table , and ID table log file in IoTDBDescriptor . java to enhance configuration flexibility
increased the number of documents per type from 2000 to 100 and updated related test assertions to accommodate a new delaying search component
updated the condition for mocking the access error in TestSignatureInfo . java to ensure that the error check accurately verifies that the error is
transaction : use scriptbuilder . createp2pkhoutputscript ( ) instead of createp2pkhoutputscript ( ) .
updated the expression in IndexSchema . java to include both " / schema / types / fieldtype " and " / schema / types / fieldType
added null and instance checks for valueCompleters in Completers . java and created OptionCompleterTest . java to ensure proper handling
[ hotfix ] fix checkstyle violation in s3utils
changed the data type of ` sourcePeerId ` and ` cacheQueueMap ` from ` String ` to ` int ` across multiple classes to
refactor FtpHelper to handle ZIP file uploads more efficiently to improve code readability and maintainability by consolidating file upload logic
removed unused imports and set alpha values for the reply button to improve code clarity and ensure the button is fully visible
added mock for ` AccessLogContext ` and modified expected string formatting in ` AccessLogSupportTest . java ` to improve test clarity and
fix marycachetest by use tmp / testfiles - deleteme
replace null check for subscribers with a direct initialization of subscribers to simplify code and improve readability by eliminating unnecessary null checks
replace initialization logic with a null check for the marshaller in AbstractSamlObjectBuilder . java to improve error handling by throwing an IllegalArgumentException when the marshaller
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of printing
added a check for the existence of the assets directory in dev mode and implemented a new test for handling non - existent assets to ensure that the
[ hotfix ] [ rocksdb ] pass writeoptions to rocksdbkeyedstatebackend . db . put ( )
updated the default format string from " value - tag - index " to " value - index " to standardize the format used in the application
updated GraphHopper initialization and hint settings in MainActivity . java to improve code readability and maintainability by standardizing hint settings
enable native secp256k1 and altbn128 by default
rename duclsspacetest to sandboxtest to avoid confusion
camel - 13663 : camel - cxf should use the exchange . setexception instead of log a warning .
make sentimentcostandgradient . forwardpropagatetree public so it can be use from other package
updated the group by clause in JDBCExample . java to include a new parameter to improve the accuracy of the result set in SQL queries
improve error message when use $ { project . basedir } expression in profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future development
added zoom support in ShareActivity to handle back key events to enhance user experience by enabling navigation to the floating action bar
added a condition to skip deprecated fields when they are annotated with @ Deprecated to improve handling of deprecated fields in JSON processing
added fade - in and fade - out animations for sending layouts in the LauncherFragment to enhance user experience by providing smoother transitions during
[ hotfix ] [ yarn ] fix checkstyle violation in util
added Progressable parameter to createSequenceWriter and related methods across multiple classes to enhance progress tracking during file operations
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
remove contribution from panelByContribution and update panel ordering and color updates to improve the management of contributions in the ContributionListPanel
changed the class name from HyervisorTemplateAdapter to HypervisorTemplateAdapter and modified the conditional check for URI scheme to improve clarity and
added a check to set dPath to the user ' s directory if it is empty to ensure dPath defaults to the user ' s directory
fix e - ac3 output channel count default to 48000
log4j2 - 1342 add filter ( ) method to mapfilter to make it easy to use
renamed VerificationInOrderWithCallsTest . java to improve clarity to enhance code readability and maintainability
updated the method call from ` setFromAxis ( axis . z , axis . y , axis . z , angle ) ` to ` setFromAxis
corrected a typo in the constant name from " colelction . delim " to " collection . delim " to ensure consistency with naming
add a unit test to verify that the connection state listener be set at the start of the server .
bugfix # 5355 - fix syntax error in generated documentation
refactor the handling of one - handed mode support in RecentsAnimationDeviceState to improve code readability and maintainability by reducing
added onDetachedFromWindow ( ) method to manage running tasks in AppsCustomizePagedView to ensure tasks are properly canceled when
added dictionary resource support to MorfologikAnalyzer , MorfologikFilter , and MorfologikFilterFactory classes
updated exception handling logic in ResultSetTest . java to reset the thrown flag to false to ensure the test accurately reflects the expected behavior of
updated the message parameter from " debug " to an empty string in GradleBuildService . java to improve clarity of the initialization message
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` for ` preventedByLocking ` and ` preventedByMVCC
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability by reducing duplication
increased await duration from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow more time for the zipkin server to
add config option deviantart . username and deviantart . password to disable login
refactor Google signed package keys to use constants instead of arrays to improve code readability and maintainability by reducing redundancy
replaced ` commonApp . solutionBusiness ` with ` commonApp . createSolutionBusiness ( ) ` in ` ImportDirSolveAllT
added a method to notify window state changes in WWindowPeer . java to ensure proper handling of window state changes in the application
added email description to template data in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to enhance user experience by
updated the method call from ` remove ( sel ) ` to ` data . remove ( sel ) ` to ensure proper data removal functionality
refactor ` getISO3Language ( ) ` to handle cases where the base locale ' s language length is 3 to improve clarity and
refactor Liquibase parser usage to use a dedicated method for creating UpdateVisitor to improve code readability and maintainability by reducing
added a check to return early if the screen pinning is active to optimize performance by avoiding unnecessary processing when the screen is pinning
added text fields and methods to display chart data without data to improve user experience by providing clearer feedback on available chart data
added synchronization to check if the HTTP header has been sent before updating cookies in Http1xServerResponse and Http2ServerResponseImpl to ensure
refactor chunk handling in NettyResponse to use a separate chunkHandler method to improve code readability and maintainability by reducing duplication
added " : scheme " header to Http2TestBase and updated test cases in TestHttp2Limits and TestHttp2Section _ 8 _
fixed - rlocalcachedmap . keyset ( ) , rlocalcachedmap . value ( ) and rlocalcachedmap . entryset
camel - 14284 : camel - jpa - allow to configure entitymanagerfactory and transactionmanager if they be null . thanks to
fix jump speed for physic
added a condition to check if reparsedFunction is null before processing syntax extensions to ensure that syntax extensions are only applied when reparsedFunction is
renamed the logger variable and updated order book handling in BitstampPusherService . java to improve clarity and consistency in naming conventions
added deprecated methods for retrieving old upload segment URIs in FileUploadDownloadClient to encourage the use of a new segment path instead of a
updated the query to use a filter parameter when retrieving the tracking object to ensure that the tracking object is retrieved based on the specified filter
( chore ) camel - test - infra - juel : fix unit test
added a range check for the alpha value in RecentsView . java to ensure the alpha value is within the valid range of 0 to
corrected the string concatenation syntax for the " Import - Package " attribute in ManifestReversion . java to ensure proper formatting of the import package
refactor DataSyncConfiguration class for improved readability to enhance maintainability and facilitate future development
added import for JavaSnippetRepository and initialized it in JavaLanguageServer to ensure the JavaSnippetRepository is properly initialized before use
added a loop to iterate over time buckets before updating sums in StarTreeRecordStoreCircularBufferImpl . java to improve performance by avoiding
chrome : use googleapis . com instead of code . google . com for test
camel - 14284 : use preparedstatement in camel - pgjdbc to avoid potential resource leak
update rome dependency to 1.5 . 0 ( # 1352 )
added Content - Length header handling in TransferCompletionHandler and refactored NettyTransferAdapter initialization in NettyAsyncHttpProvider to ensure accurate
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
removed the protected constructor from EnhancedRuntimeException to simplify the constructor signature to improve code clarity and maintainability
added CountDownLatch to manage thread interruption and modified exception handling in SocketAppenderTest . java to improve thread safety and enhance debugging capabilities
camel - 14263 : remove unused eventadminendpointbuilder from camel - core
updated method signatures and exception handling in ByteArray . java for improved clarity and consistency to enhance error handling and maintain consistency in method signature
added a method to disable input proxy during touch events in RecentsAnimationWrapper . java to improve user experience by preventing unintended
camel - 6770 fixed the restletdomainservicetest issue of camel - restlet
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify method signature by eliminating unnecessary parameters
move module - info . java to com . hazelcast . test . modulepath so that it do n ' t clash with other module
added a method to retrieve source directories and improved logging messages in JavaLanguageServer . java and JavaServerConfiguration . java to enhance clarity
updated menu item visibility from " open web " to " mute hashtags " to improve user experience by allowing mute hashtags
rename methods and assertions in AncestorDescendantTests and Node classes for clarity to improve readability and maintain consistency in naming conventions
fix ( worldeditplayer ) : prevent indexoutofboundsexception in worldeditplayer
added PathNotExistException handling to the selfCheckDataTypes method to improve error handling for non - existent data types during partial insert operations
removed an unnecessary closing brace in JavaCompiler . java to improve code readability and maintainability
[ hotfix ] [ stream ] move mailboxexecutor from operatorfactory to abstractstreamoperatorfactory
hbase - 25827 add pre - checks for settablestateinmeta and fixmeta in master
updated method reference from ` meter . getId ( ) ` to ` Meter : : getId ( ) ` in ` GatewayMetricFilterTests . java
updated BlockJUnit4ClassRunner to use the correct Java class reference to ensure compatibility with the current testing framework
( chore ) camel - kie - api : use lastdata instead of remoteitems for delete event
adjusted calculation for allAppsCellWidth and allAppsCellPaddingPx in DeviceProfile . java to improve layout responsiveness by accounting
[ hotfix ] [ core ] fix checkstyle violation in coreoptions
replaced calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to writer . forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the merging process for improved performance
modified the ` Session ` interface to implement ` java . io . Closeable ` and changed method return types to void in multiple classes to improve resource
updated method signatures in GetLocations . java to improve code clarity and maintainability
replaced exception stack trace printing with a null check for the exception variable to simplify the exception handling logic and improve code readability
updated exception handling to ignore IOException instead of throwing a UncheckedIOException to improve error handling by avoiding unchecked exceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android features
ruby flavor : do n ' t throw syntaxerror if multiple repeat
changed logging level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
remove unused usecaches from nio2
refactor ` CasGeoLocationConfiguration ` to use ` Resource ` instead of ` MaxmindProperties ` for city and country database reading to
update instructorfeedbackresultspageuitest to use new instructorfeedbackresultspageopenview
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter to ensure proper handling of encoded qualifier optimization based on
removed the public access modifier from several methods in ApprovalStore and ApprovalsControllerService classes to enforce encapsulation by restricting access
added a boolean flag to track if a download has started in FileDownloader . java to ensure a delayed notification is cancelled when a download has
replaced ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and added new methods in ` AbstractFloating
updated project version from 1.0 . 11 to 1.0 . 13 and copyright year from 2008 to 2009 in JFreeChart
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread
refactor GsonBuilder class to improve code readability to enhance maintainability and facilitate future development
added null check for centerGeo before adding it to circleCenters and fixedPoints to avoid potential NullPointerExceptions when adding to fixedPoints
remove -- java . espressohome option , use graalvm . home instead
doc ( javadoc ) : fix typo in javadoc of java . lang . *
changed the visibility of ` deleteSession ` and ` timeToDieInSeconds ` from protected to private and simplified session management logic to enhance encapsulation and
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency and
initialized variable ` sz ` to 0 in ` JoinQParserPlugin . java ` and modified result initialization in ` SolrIndexSearcher . java
added a file parameter to the triggerMediaScan method in FileDataStorageManager to enhance media scan functionality by including the file object
removed conditional logic for posting test results in TestRunning . java to simplify test result handling by eliminating unnecessary verbosity checks
added custom G - code settings to MainWindow . java to enhance user experience by allowing custom G - code options
replaced PrintWriter with BufferedWriter in AdditionalJaxbMappingProducerImpl . java to ensure proper character encoding for output stream
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future development
added JUnit exception handling for " unset . sys . property " in TestBadConfig . java to improve test reliability by ignoring specific exceptions
added a method to remove the current fragment and the action bar in GpsMainActivity to improve user experience by ensuring the action bar is properly
updated spanishTokens and spanishTokens2 lists to replace " = RRB = " with " ( " , " ) " to ensure
updated range handling in RemoteMediaHandler and RemoteRawHandler to use Byte type instead of Range to improve consistency and clarity in handling range values
updated G - code file path and modified output formatting in VisualizerCanvas . java , and modified G - code view translation logic in Gcode
added new test cases for versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to
updated formatting of method calls in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain
added a condition to close the exchangeClient if the query has no output stage and the query state is complete to ensure proper resource management and prevent
fix integrity check for non - existent link
removed unused import and added shardToClient variable in ChaosMonkey . java to streamline code by eliminating unnecessary dependencies
added null check for fas before retrieving the shared persistent file to avoid potential NullPointerException when fas is null
refactor the formatting of the add method in NestedRepositoryTreePanel . java to improve code readability and maintainability
updated the constructor of ExtensionTypeHeader to be public and added a validation check for the extension type to ensure the type is within the valid range
pdfbox - 4892 : remove catch block , a suggest by valerybokov
updated the pushOnShutdown property from ` deleteOnShutdown ` to ` pushOnShutdown ` and added getter / setter methods to improve clarity
added a trigger callback and improved error handling in the ReactiveStateMachineExecutor to enhance error management and provide clearer context during state machine operations
added a test for multiple Python executables on the first path in BuckConfigTest . java to ensure that the Python interpreter executable is correctly
set the default button for the signin button in InitialAccountRegistrationFrame to ensure the signin button is displayed correctly in the UI
added TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN configuration in HiveConf and updated TezCompiler to
updated error logging messages to include the exception as a parameter to improve clarity of error reporting for better debugging
refactoring : move reflection to util package . no functional change .
added a static method to ` OidcIdTokenClaimCollector ` and a corresponding test class ` OidcIdTokenClaimCollectorTests ` to
removed the center variable from multiple Circle , Ellipse , Polygon , Polyline , and Rectangle classes to streamline the code by eliminating
simplified the conditional check for pcollection equality in RegisterAndProcessBundleOperation . java to improve code readability and maintainability
refactor SslContextFactory methods for improved readability to enhance maintainability and facilitate future development
removed @ Ignore annotations and updated assertions in ConfigurationPropertiesTest to use defaultMaxExpectations ( ) and defaultMaxLogEntries ( ) to simplify
change return value from " access _ confirmation " to " access _ confirmation _ error " to accurately reflect the action being performed
[ 3.0 ] add support for use custom classloader in consumer ( # 4569 )
modified the shiftRows method to include a boolean parameter for copying and resetting original row heights to enhance flexibility in row height management during shift operations
replaced ` setRolloverIcon ` and ` setRolloverPressedIcon ` methods with ` setRolloverPressedIcon ` and ` set
replaced gridTranslationSecondary with gridTranslationY in TaskViewUtils and updated related classes to streamline translation handling and improve code clarity
updated assertion methods in Assertions . java to improve code clarity and maintainability
added a null check for the currentDateTimeFunction in multiple database classes to optimize performance by avoiding repeated calls to the same function across different database
added a new method ` anonymousPath ` to ` IOUtils ` and updated ` Log4jUtils ` to use it to improve path handling and
updated the ` call ` method in ` DigitalWellBeingToast ` and ` TaskView ` to include a content description parameter
updated wait timeout logic in CatalogTracker . java to include a default value of 50 to improve responsiveness by allowing the timeout to be set
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
make genericitem . getstate ( ) return a stateconverterutil . defaultconversion ( state , typeClass ) instead of null
added integration tests for BidirectionalOneToOne and PostDetails in BidirectionalOneToOneNPlusOneTest . java to enhance test coverage
added functionality to remove extra empty screens and adjusted startSearchPageIndex initialization to ensure proper handling of empty workspace screens
fix nullpointerexception in markbasepointersphase and add a null check in indexedvaluemap .
updated string formatting in GoogleLineChart . java and GooglePieChart . java to use double quotes instead of single quotes to improve consistency and
[ java ] wait for batch to complete in case of interruptedexception in sendingaccountor .
added a position property and its getter method in WALPrettyPrinter . java to enable seeking to a specific position in the WALPrettyPrinter class
updated the port number in Transceiver from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java to ensure the
refactor event handling in SimpleReport to sort events before generating a report to ensure that the events are processed in the correct order before generating the
added a test method to verify CSV line description contains double quotes to ensure correct formatting of CSV lines with escaped quotes
updated file names in multiple classes for consistency and clarity to improve readability and maintainability of the code
added check to ensure that we do n ' t try to connect to an iq server that be not remote .
removed the @ JniImpl annotation from VM . java to simplify the code by eliminating unnecessary annotations
updated configuration settings in Fetcher2 . java to use Protocol constants instead of hardcoded strings to improve code readability and maintainability by using
added a condition to check if the video HDR format is not " dolbyvision " before processing the SID in FFMpeg
updated the package name from " other _ package " to " other _ package2 " in AstTests . java to align with the new package
[ net . minestom . server . api ] fix worldborder . setdiameter ( ) and worldborder . setdiameter (
hbase - 25828 hmaster . getwalgroupsreplicationstatus should return an empty map if master can not host user region
do n ' t open the login view if the user click on it
refactor routing table configuration handling to use a dedicated method for instance configurations to improve code readability and maintainability by centralizing instance configuration generation
changed the access modifier of the FieldAttributes class from package - private to public to allow access to the FieldAttributes class from other packages
add a test to verify that an error occur when a maven project contain a reference to an artifact
removed redundant null checks for oldProto and protoHistory in PropertyMap . java to simplify the condition for better readability and maintainability
refactor methods in DoorbirdInfo , ControllerConfiguration , and ControllerHandler to accept a configurable controller ID to enhance flexibility in managing controller
replaced sessionFactory . close ( ) with session . close ( ) to ensure proper resource management and avoid potential memory leaks
removed the condition that checks for PROMPT _ CONSENT in OidcConsentApprovalViewResolver . java to simplify the consent approval logic by
removed debug print statement from Http2SolrClient to clean up the code and reduce unnecessary console output
replaced the extractor method in BaggagePropagation to use an enum NoopGetter instead of a lambda expression to improve code readability and
refactor ConditionalOnEnabledResourceChain for improved clarity to enhance maintainability and readability of the code
added a condition to check if the tree ' s child count is greater than zero in the BarrowmanCalculator class to ensure that the tree
replaced ` getFilteredStream ( ) ` with ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java ` to ensure
updated logging statements and added intent result listener functionality in FacebookImpl . java to enhance logging clarity and ensure proper handling of session state changes
updated return statements in ShadowICU . java to use skeleton instead of " h : mm a " and added a new test in ShadowIC
removed the check for the KeyguardManager ' s device lock status in the TouchInteractionService class to simplify the condition for better readability and
cloudstack - 4891 : fix npe in set default disk offering ( # 4892 )
replaced FileChannel with AsynchronousFileChannel in UtowBodyHandler . java to improve performance by using asynchronous file operations
removed unnecessary whitespace in SigInt and SigIntTest classes to improve code readability and maintain consistency
drawtext : remove unused private method , use prepareboundboxresize ( )
change the return value from - 1 to 0 in the Asset . java file to reflect the correct asset processing behavior
refactor benchmark function initialization and use constants for value loader and mapping functions to improve code readability and maintainability by reducing redundancy
added setOnRefreshListener to UploadListFragment to notify the adapter when data changes
change bibdatabasecontext to use optional < path > instead of file
replaced instances of ` emitters . items [ i ] ` with ` emitters . get ( i ) ` in ` ParticleEffect
refactor Tomcat to simplify service and engine retrieval to improve code readability and maintainability by reducing redundancy
updated error message formatting in BuildRuleFactoryParams and Console classes to improve clarity and consistency in error reporting
added a check to return early if the playback state is not playing to prevent unnecessary processing when the playback state is not playing
replaced ` findByPK ` with ` findById ` in ` DeleteServiceTest . java ` to simplify the retrieval of the ` ServiceComponentDesired
refactor Java2TypeScriptTranslator to improve inner class detection logic and add new InnerClassFieldClash class to enhance code clarity and
add support for configure logging and follow redirect filter in the docker client .
replace direct call to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure thread safety
hhh - 10183 - fix test failure on sqlserver2008
added a ` revert ( ) ` method and wrapped the ` verifyZipHeader ( input ) ` call in a try - finally block to ensure
changed the access modifier of the storeClassFile method from private to public to allow access to the method from other classes
added a new test class for verifying the behavior of NO _ MORE _ ORDS in SingletonSortedSetDocValues to ensure that the
updated error messages in CGIHandler and added JavaVM callback handling in JavaVM to improve clarity of error messages and ensure proper execution of
added conditions to check for additional line endings in LineReaderImpl . java to enhance functionality to handle additional line endings for better readability
changed the method and variable types from List to Set in DistBuildService , ServerContentsProvider , and DistBuildServiceTest to improve performance and
added a check to return early if the mesh has no vertex to avoid unnecessary processing when the mesh is empty
updated verification methods in IncorectBindingPuzzleFixedTest and added new test cases in DescriptiveMessagesOnVerificationInOrderErrorsTest to
replaced ` FileUtil . createData ( ) . delete ( ) ` with ` FileUtil . createFolder ( ) . delete ( )
improve javadocs for implicitcast and typesystem .
refactor JsonObject class to improve code readability to enhance maintainability and reduce complexity
updated conditions in ` SelectChannelEndPoint . java ` and ` HttpConnection . java ` to check for ` _ maxIdleTime ` to ensure
fix farmlandblock . cansustainplant not check if the block can sustain a plant . close #
added a new table SALTEDTABLE123 with a primary key and associated salt buckets in QueryDatabaseMetaDataIT . java and modified the query
updated date formatting to use Locale . US in HttpCookie . java and added a new test class B6791927 . java to ensure
removed multiple redundant null checks for the database resource to improve code readability and prevent potential NullPointerExceptions
increase timeout in batchmessagelistenercontainerintegrationtests to 5 second
[ gr - 23234 ] economy allocation stage should use trace phase when tracing be enable .
add save _ database and save _ all keybinding support to source tab
refactor ObjectMapper initialization to use a static block to ensure consistent line separator for better compatibility across different operating systems
updated path handling in NativeEnvironmentRepository . java to change Windows path ' \ ' to ' / ' to ensure consistent path formatting across different operating
refactor test classes to use a single Application instance instead of multiple instances to streamline resource management and improve code maintainability
[ java ] remove record validation from recordlog . validateexistinglog .
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
remove debug code from testfuzzoptimizations
replaced SharedPreferences usage with a private boolean variable for reverseImage to improve code readability and maintainability by reducing redundancy
updated string comparison for entry names from ` equals ( ) ` to ` equals ( ) ` for consistency to improve code readability and maintainability
added a predicate to exclude IDs and metadata from field replacement in TerserUtil . java and updated related test cases in MdmMatchLink
updated JUnit test annotations from public to JUnit 5 in AuthenticationSuccessListenerTests . java to align test class with JUnit 5 conventions
use arraylist instead of new . arraylist ( ) to improve performance
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future development
updated triggerTime to use LocalDateTime for date formatting to ensure consistent date representation across the application
added a method to create an AbstractMethodError thrower for non - static and non - private methods in MethodHandleResolver to improve error handling
camel - 13663 : camel - simple - fix invalid syntax for $ { body . xxx }
removed a check for empty ` toExplore ` and return ` TargetGraph . EMPTY ` to streamline code by eliminating unnecessary
camel - 14284 : camel - jclouds - add copy method to copy inputstream to outputstream
[ hotfix ] [ test ] disable camelconsultest until osgi bundle release
added a check for the ACC _ STRICT access flag on default methods in the Check . java file and created a corresponding test class to
[ java ] increase driver timeout for channel validation test .
added a new file ` FileExtensions . java ` with constants for CLANG _ SOURCES and CLANG _ HEADERS to provide a structure
refactor FORMAT _ THREAD _ LOCAL to use ThreadLocal ' s withInitial method to simplify the initialization process and improve code readability
removed deprecated VM options and added a test for memory limit in VMDeprecatedOptions . java to clean up the code and encourage the use
added a ` displayName ` property and associated logic for delegated clients to enhance client configuration flexibility with a customizable display name
replaced RuntimeException with EarlyTerminationException in multiple files to improve error handling by providing a more specific exception type
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and maintain consistency
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 562 : add
fix npe in capabilitydispatcher when parent be null
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling by removing unnecessary exception handling
added a @ Deprecated annotation to SubmitOrderedCompletionService . java to indicate that the class is outdated and should no longer be used
modified the length calculation in HyphenationTree . java to correctly store and return the original length instead of the original length
iqregisterhandler : add a sleep to ensure that the thread do n ' t hang forever .
move simpleaccountregistrationactivator . bundlecontext to javax . swing . * and remove unused import
updated the description of the constant ` PARAMETER _ NEEDS _ TO _ BE _ NAMED ` in ` ParameterBinder . java ` to
added a new boolean variable ` providersChanged ` and initialized it to false in ` ConfigurationManager . java ` to ensure the ` providersChanged `
added a method to handle quote tokens in the token rewrite stream to ensure proper handling of quoted identifiers in the semantic analysis
added a null check for the ' name ' entry in the font file before adding it to the font list to handle cases where the ' name
updated the type casting and usage of AnalysisSPILoader in SolrResourceLoader . java to improve type safety and eliminate unchecked warnings
updated the hit check logic in the Window class to ensure that the hit object has a valid parent actor before proceeding with further processing
added a null check for appManifest before accessing its target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator to use a dedicated method for adjusting configuration metadata to improve code readability and maintainability by centralizing configuration adjust
added userName property and its getter / setter methods to the Driver class and HiveSemanticAnalyzerHookContextImpl classes to allow users to specify a
added setter methods for file , url , and input stream in XsltBuilder . java and updated instance creation in XsltComponent . java to
added support for HadoopShim in multiple classes to enhance compatibility with Tez ' s Hadoop functionality
removed unnecessary variable assignments in ShadowAssetManagerTest and ShadowContentObserverTest to simplify code and improve readability by eliminating unnecessary variable declarations
added null check for request . getMappingData ( ) . context before logging access to avoid potential NullPointerException when context is not initialized
updated ThroughputLogger to return early if startTime is zero and modified message formatting to improve logging clarity and ensure accurate tracking of messages
updated VM version checks to use Platform . isDebugBuild ( ) instead of System . getProperty ( " java . vm . version " ) to ensure
replaced the usage of ` MeterStatisticsManager . statisticsOperationMap ` with a ` Map < String , MeterDetailStatisticsModel > ` to
updated logback configuration handling in FrameworkLauncherExtended . java to ensure proper resolution of the logback system property
added @ NotNull annotations to method parameters in CipherExecutor , CookieRetrievingCookieGenerator , and CookieValueManager classes to enforce non - null constraints
replace ` Escaper . BASH _ ESCAPER ` with ` Escaper . SHELL _ ESCAPER `
[ hotfix ] [ test ] use try - with - resources in test
changed the class name from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to align the test class with the new naming convention
removed unnecessary whitespace in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate shield addresses in RpcApiService to enable users to obtain shield addresses from the wallet
changed return type of ` readConsoleInput ( ) ` method from ` byte [ ] ` to ` String ` in multiple terminal classes to improve
updated regex patterns and variable initialization in TestStabilityRule . java to improve clarity and correctness of platform identification
added a check for multi - valued fragments in DefaultSolrHighlighter . java and updated highlighting test in HighlighterTest . java to ensure
updated the ` tryToLogin ` method to accept credentials and return status codes as parameters to enhance the functionality of the ` tryToLogin `
removed unnecessary imports and updated entity handling logic in HandlerSceneEntityDrownReq . java and PacketSceneEntityDrownRsp . java to
fix checkstyle issue in camel - jms
removed the wrapping of the collection parameter in the update method to simplify the method call by directly using the parameter
added logging functionality to handle unknown currency exceptions in BTCEAdapters . java to improve error handling and logging for unknown currencies
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5652 -
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated ` startController ` method to accept a ` useTenantIsolation ` parameter and added new methods for creating broker and server tenants to enhance
updated the return statement in HasSettings . java to directly cast the response value to a Map to simplify the code and improve readability by elim
added a check to ensure attrs size is greater than zero before validating its size to prevent potential errors when attrs size is zero
added abstract methods for retrieving project JDK name , type , and language level in AbstractIjProjectConfig and updated IjProject and I
updated the description from " Experimenal : Enable optimization to avoid shuffle when bucket count is compatible but not the same " to " Experiment
added unit tests for ` GrantedAuthorityEffectiveAclsResolver ` to validate user authentication token functionality to ensure correct behavior of ` resolveEffectiveA
javaparsertypedeclarationadapter now use typesolver . get solvedjavatypeobject ( ) instead of new classdeclaration ( object .
added button count management logic to XToolkit to ensure that the number of buttons is at least a maximum of 24 to improve flexibility in
updated import statement for assertEquals from jdk . testlibrary to com . oracle . java to ensure compatibility with the latest testing framework
added a new ` MessagePackFactory ` class and refactored ` newUnpacker ` methods in ` MessagePack . java ` to improve
add miss tag for boneme ' s cave , desert and cave biome , fix item tag for boneme
rename method ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in naming conventions
added a condition to check if the horizontal component is different before setting the layout and updated UIIDs based on the element and button UIID to
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( ) ` with ` matcher . matches ( ) ` to
updated touch handler check from instanceof AndroidMultiTouchHandler to hasMultitouch in AndroidInput . java and AndroidLocklessInput . java to
[ java ] do n ' t check if the commit position counter be close in clusteredserviceagent .
added UserSite and UserSiteId classes for managing userSites and their identifiers to facilitate the management and retrieval of user - related
added error handling for malformed URL addresses and port retrieval in HttpConverterRegistrar . java to improve robustness by providing clear error messages when the address
api : do n ' t allow storage _ alloated and storage _ storage _ id to be list in listvms api response ( #
replaced ` dir . openInput ( fileName , IOContext . DEFAULT ) . close ( ) ` with ` dir . fileLength ( fileName
refactor JavascriptCompiler and related classes to improve class generation and exception handling to enhance code clarity and maintainability by using a more descriptive
removed synchronization from the ` store ` method in ` UISettings ` to ensure thread safety during serialization
added a conditional check for native text input and changed the visibility of the fireDataChanged method from private to public to ensure proper handling of text
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink ]
simplified the use of the diamond operator by removing redundant generic type parameters to improve code readability and maintainability
updated the handling of ` double [ ] ` to ` short [ ] ` in ` ObjectInputStream ` and added a new class ` CloneArray `
replaced nonce claim retrieval method and improved logging behavior in OIDCAuthenticationFilter . java to enhance code clarity and provide more informative
added a condition to check for relationship fields in DCInputSet to ensure proper handling of relationship fields in the input set
added support for server slogan capabilities in the file storage manager to enhance user experience by enabling theming capabilities in the database
modified the conditional structure for tinting menu items in DrawerActivity . java to improve readability and maintainability of the code
updated the test to skip the test if network connection is unavailable and added an import for JUnit ' s Assume to ensure the test only runs
added a check to return early if no missing symbol events are present to improve performance by avoiding unnecessary processing for empty symbol events
add test case for ` ` data 5 - 4 ' ' in stringutilstest
added a warning log for empty data providers in Parameters . java and created a test for it in EmptyDataProviderTest . java to indicate that the
( chore ) camel - jbang : use collections . emptylist ( ) instead of collections . empty _ set ( )
fix selection style for freeplane 1.9 . 14 +
updated the parameter name from ' mass ' to ' restitution ' in PhysicsRigidBody . java to improve clarity by
added a new file ` AutoFtpActivity . java ` that implements auto - FTP testing functionality to facilitate testing of FTP connections
refactor the handling of TOK _ TABNAME and StringLiteral types in BaseSemanticAnalyzer to improve code readability and maintainability by
added getter and setter methods for component state in ImageViewer , OnOffSwitch , Component , and GenericSpinner classes to enhance component state management functionality
added a new class ` RemoteExecutionEnabled ` to handle ` Boolean ` serialization and deserialization of ` Boolean ` to enable or disable remote execution based
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced ` FileReader ` with ` InputStreamReader ` and added ` StandardCharsets . UTF _ 8 ` suppression in ` ImportCsv . java ` to
added a method to assert shadow variables are not stale in AbstractScoreDirector to ensure that shadow variables are not stale during score calculations
updated the configuration key for semijoin conversion from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin .
[ netty ] add log for ignore message content .
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated related logic in ` FileDisplay
added assertions to verify the presence and presence of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly validated
deprecated the ISchemaRegion class and updated the test method name from ` testConstructSchemaBlackList ` to ` testDeleteTimeseries ` to
added null check for samplemimetype in MediaCodecRenderer to ensure that a valid mime type is provided before processing a new format
replaced ` notify ( ) ` and ` wait ( ) ` calls with ` notifyAll ( ) ` and ` notifyAll ( ) `
updated the @ AllArgsConstructor annotation to include onConstructor _ = { @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) }
added a check to throw an exception for creating an index on a view in MetaDataClient . java to inform users that creating an index on a
added a new class ` Website ` and updated ` PopulatorImplTest ` to utilize it for populating ` Website ` beans
added a setup method to set the default locale in BSFormatterTest . java to ensure consistent locale settings for tests
add a warning about badly download jar file that be name a zip file
replaced ` containsString ` with ` Matchers . equalToIgnoringCase ` for assertion in ` MultiPartParsingTest . java ` to
added checks for single - type parameters in SimpleExprGenerator to ensure correct handling of variable expressions in function parameters
added a volatile boolean field ` createdVertx ` and modified the conditional check for ` vertx ` to ensure proper handling of the vertx
nodestylebuilder now pass the node model to the writeattributes ( ) method , not null
updated log messages from " Synchroned " to " Synchronized " in SynchronizeFolderOperation . java and added null checks in FileDisplayActivity
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated its usage in ` CategoryREST ` and ` FeedREST
replaced instances of MavenTestingUtils . getTargetDir ( ) with MavenPaths . targetDir ( ) in TestAnnotationConfiguration . java and WebAppContext
added validation for data types in RegisterServerConsumerExecutor and updated method signatures in URIRegisterExecutorSubscriber and MetaDataRegisterExecutor to improve data validation and
updated the condition for determining if the sound is playing in GwtMusic . java to ensure that isPlaying is only set when the
added a new permission for the ADMIN _ SUDO _ AREA in the MainCommand and related captions classes to enhance security by restricting
updated the query option handling in ` ServerRequestPlanVisitor ` to use a new method ` updateQueryOptions ` to improve code readability and
refactor path comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject
updated assertions in ResourcesTest to use a variable for attribute values to improve readability and maintainability of test assertions
replaced the native method ` NMTWaitForDataMerge ( ) ` with a new method ` NMTOverflowHashBucket ( long
[ hotfix ] [ serializer ] deprecate eitherserializersnapshot . snapshotconfiguration ( )
updated default values for NDOTS and ROTATE _ SERVERS in AddressResolverOptions and refactored regex pattern handling in AddressResolver
added a call to ` super . __ associate ` in ` RequestRockerTemplate ` and a corresponding test in ` RequestRockerTemplateTest
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML path references from " liquibase / parser / core / xml " to " www . liquibase . org /
move commonmimetypelocator to test / source instead of test / source
updated the repository version state from INIT to NOT _ REQUIRED in multiple classes to indicate that the repository is not required for improved functionality
updated the comparison logic in GenerateChangeLogTask to utilize a new SchemaComparison array to enhance the comparison process by including additional schema comparisons
[ hotfix ] [ test ] use testng annotation instead of junit one
added a new file ProgressiveJPEGTest . java to implement a progressive JPEG rendering test using Gdx to facilitate testing of
updated MaterialLoader to use mat . setFloat ( " AlphaDiscardThreshold " ) instead of rs . setAlphaTest ( true ) and reset
improve error message when build native - image on window
added a null and length check before setting the size of the label to avoid potential NullPointerExceptions when the text is empty
modify the readVarInt ( ) method to include a modulus operation to ensure that the readVarInt ( ) function correctly handles decimal values
made PushUtils class final and added private constructors to their constructors to enforce immutability and prevent instantiation of constructors
replaced the calculation of ` length ` using ` curConfig . getBounds ( ) ` with a direct call to ` curConfig . getLength (
removed unnecessary cast to MockDirectoryWrapper in TestDirectoryReaderReopen . java to simplify code and improve readability
updated the file pattern used in the componentPresetDao . load method from " . * csv " to " ( ? i ) . * csv
added a condition to announce accessibility based on the duration and app state in TaskbarStashController . java to ensure accessibility is only
updated the instantiation of ` homeNode ` to use ` RefreshTask ` instead of ` Args ` to improve code clarity and maintainability by
add a test to make sure that only one jdk can target
use mockitojunitrunner instead of powermock in quotaresponsebuilderimpltest
added streams for error and output in TestSchemaToolCatalogOps . java to improve error handling by setting standard output streams
added a DFSClient parameter to the FanOutOneBlockAsyncDFSOutputSaslHelper constructor and cleared data encryption to enhance security by
updated MongoQueryMethod and related classes to include RepositoryMetadata as a parameter to enhance query method functionality by integrating repository metadata
refactor Digester to use a wrapper class for EntityResolver2 to improve flexibility and maintainability of entity resolution logic
removed duplicate import statements for PhoenixDatabaseMetaData constants in MetaDataEndpointImpl . java to streamline code and improve readability by elim
increased ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry logic in TestTxnHandler
replaced variable name ` xl ` with ` xAxis ` in ` BarChartActivity . java ` and modified line offset calculation in ` YAxis
added methods to check printable characters and validate system names in FsUtils . java to enhance character validation and ensure compatibility with different operating systems
simonstewart : rename ` ` in ' ' to ` ` using ' ' , a suggest by valerybokov
do n ' t process plugin configuration when build a maven project
corrected division by zero in calculations for amount transfer and outgoing counters to ensure accurate representation of time in milliseconds
fix vision test to work on window
replaced " STUB " return value with null in ModeledConnectionRecord and ActiveConnectionRecord , and added getRemoteHost method in Authenticated
add check for admin permission in community list servlet
added thread counter for long and short compaction threads in CompactSplit . java to ensure unique thread names for long and short compaction processes
replaced getApplication ( ) . getPackageName ( ) with resources . getResourcePackageName ( R . array . wallpapers ) in Wallpaper
updated the method to retrieve players in the plot and added a new method to filter out visible players from the plot to improve code clarity and
refactor multiple classes related to AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity to improve code organization and maintainability
refactor MlibOpsTest class to improve code readability to enhance maintainability and facilitate future development
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _ IMPL
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a test for expected properties in Scheme
replaced conditional key and iv initialization with default values in UploadFileOperation . java to simplify code by eliminating unnecessary null checks
added @ Stability annotation with specific flavors to WorkProfileTest . java to enable test stability for specific flavors and post - submission
removed a conditional check for bucketing version in TezCompiler . java to streamline the code by eliminating unnecessary checks
replaced ` setCursorPosition ( x , y ) ` with ` input . setCursorPosition ( x , y ) ` in ` G
refactor ` LockFreeBucket ` to extend abstract classes and introduce new classes ` LockFreeBucket _ FinalFields _ CacheLinePadding `
add tpstats to the list of available command to print thread pool stats
updated max bitrate setting to use user preferences instead of direct calls to Utils . getMaxBitrate to ensure compatibility with user preferences for maximum bit
refactored conditional checks in ZipkinHttpSpanExtractor and added new helper methods for handling trace and span IDs to improve code readability and
do n ' t return duplicate and bsq swap payment account if bsq swap be enable
simplify withtypeiconrightaligned ( ) to avoid reflection ( # 1305 )
* fixed copysinglefilewithoverwrite whose test be break by the ant upgrade from 1.6 . 5 to 1.7 . 1 ( npe )
updated ` JsBundle ` , ` JsBundleBuilder ` , and ` JsLibraryBuilder ` to accept ` ProjectFilesystem ` as a parameter to
refactor multiple classes related to envelope and databinding functionality to improve code organization and maintainability
refactor MetricsDSLContext to improve code readability to enhance maintainability and facilitate future development
removed the ` VersionConfig ` interface and updated the ` VersionBuckConfig ` class to use ` ImmutableSet . builderWithExpectedSize ( )
added a try - catch block around the bindShadowClass method call to handle TypeNotPresentException to improve robustness by handling potential TypeNot
changed the access modifier of the ` validateTypes ` method from static to public and updated the error message format to allow external access to the method
chore ( deps ) : update gapic - generator - java with mock service generation fix
added logging functionality to the SimulationStatus class using SLF4J to facilitate debugging and monitoring of simulation status changes
updated the version position of the Splash class from 138 to 150 and changed the font size from 9 to 14 to improve the visual appearance
added a runLater ( ) method to the notification addition process in UserInterfaceComponentImpl . java to ensure notifications are executed on the Event Dispatch Thread
added a mock implementation in ReturnsElementsOf . java to enable testing of return values for mock objects
updated error message for non - string partition columns in ErrorMsg . java to clarify that non - string partition columns only allow equality
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` to ensure that line file documents are correctly
added a method to retrieve the version code from the MainApp class and updated references to use this method to improve code clarity and maintainability
camel - 1560 : fixed ambiguity in beanref when use explicit method invocation with string or input stream .
replaced instances of ` getContentDispositionFilename ` with ` getSubmittedFileName ` in ` MultiPartInputStreamTest . java ` to ensure consistency in
added buffer ownership checks to IndexBufferObject and VertexBufferObjectWithVAO constructors to ensure proper buffer management and prevent memory leaks
added a transition for " forgotPassword " to the login form transition in PasswordManagementWebflowConfigurer . java to enhance user experience by
refactor JerseyClientConfiguration to improve code readability to enhance maintainability and facilitate future development
int - 1188 remove the class reference to CharacterStreamReadingMessageSource and CharacterStreamWritingMessageHandler in the bean definition of ConsoleInbound
replace instances of ` s ` with ` o ` in ` InstanceOfPatternMatchTest . java ` and update import statements in ` RemoveRed
added methods to manage column and row indices in StringDict and Table classes to ensure proper handling of empty array elements in the table
added AutoCloseable interface to Container and implemented createContainerCmd hook in GenericContainer to ensure proper resource management and allow customization of container commands
updated logging level from info to error in MediaInfo . java and modified exception handling in RendererConfigurationTest . java to improve error handling and ensure
added support for " schemapattern " option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance database configuration flexibility by allowing
added null check for tlsSession in ProvSSLSessionImpl . java to ensure that the method returns an empty byte array when tlsSession is
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve code readability and maintainability
refactor Base64 class to improve code readability to enhance maintainability and reduce complexity
add fallback and i64managed single context assumption to llvmglobalcontainer .
added IPHONE and SELENESE to the @ Ignore annotation in JavascriptEnabledDriverTest . java to mark the test as ignored for
refactor FlowBuilder and FlowJobBuilderTests classes to improve code readability and maintainability
replace ` ResName ` with ` int ` for ` resId ` in ` AttributeResource ` constructor and update related code to improve clarity
[ type : refactor ] support tl configuration in docker client
try to fix the test failure of simplereactiverespositorytests
refactor type variable capture logic in ` ppp Attr . java ` and add a new class ` T6450290 . java `
added logging level configuration to ` LoggingFlags ` and ` LoggingOptions ` classes to allow dynamic configuration of logging levels based on configuration settings
added logging statements to track package removal and item removal in the database to improve traceability and debugging capabilities during the uninstallation process
added ` allFilesOption ` method to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` classes to handle
hhh - 16900 restore api combatibiliy by use deprecate default method
updated the calculation of ` numPredictiveAppCols ` to account for phone devices to ensure ` numPredictiveAppCols ` is set to
replace UTF - 8 character encoding with UTF - 8 in StringUtils . java to ensure consistent character encoding for content processing
added a new ` RequestMatchers ` class and its corresponding test class ` RequestMatchersTests ` to provide utility methods for matching request matchers to enhance
ggb - 1341 fix for input box and button selection in applet
updated calculations in ProgressBar . java to account for bgBottomHeight and bgRightWidth to ensure proper positioning and alignment of the knob elements
[ native ] use external _ functions . json instead of src / test / resources / external _ functions . json
changed ` Object extra _ L0 ` and ` Object extra _ L1 ` to ` final Object ` and ` Object extra _ L0
added a condition to check if the state handler is invalidated in the gesture handling logic to ensure proper handling of gesture states when the handler is invalidated
updated layout metrics calculation to use constrained dimensions for landscape and portrait layouts to improve layout accuracy and ensure consistent metrics across different orientations
added a condition to check if the file is " / robots . txt " in the redir validation to ensure proper handling of robots . txt
[ netbeans - 4892 ] use constant instead of hardcoded string
updated button names from " continue " and " close " to " createWorld " and " return " in AdvancedGameSetupScreen . java to
added null check for ' b ' in UDFOPDivide . java and created unit tests in TestUDFOPDivide .
refactor code formatting and improve exception handling in FlowJob . java and StopAndRestartFailedJobParserTests . java to enhance code readability
replaced ` filterProcessesUrl ` with ` logoutRequestMatcher ` in ` FormLoginBeanDefinitionParser ` and ` LogoutBeanDefinitionParser `
added onDestroy ( ) method to unbind the uploadServiceConnection in ShareActivity and ContributionsActivity to ensure proper cleanup of the uploadServiceConnection
corrected a typo in the variable name from ' thumbNail ' to ' thumbnail ' in WallpaperPickerActivity . java to
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
added request timeout configuration in RaftServerConfigKeys to enable dynamic configuration of RPC request timeout
updated error logging and exception handling in TsFileResourceManager . java and modified test cases in ResourceManagerTest . java to improve logging clarity
added setSystemProperties ( ) method to MavenModuleLoader to ensure system properties are correctly set during model loading
added server metrics for readiness checks in multiple classes to enhance monitoring capabilities for readiness checks
added support for custom itemblock in the animatedtorch ( # 1341 )
added null check before closing the writer in FileHistoryCache . java to avoid potential NullPointerException when closing the writer
added a method to retrieve HiveConf from a configuration directory in UtilsForTest to enable dynamic configuration management based on the specified directory
added " Muting Users " link to the links list in FeaturesActivity . java to enhance user experience by providing a link to the Muting
added initialization of " jdk . reflect . useDirectMethodHandle " to false in System . java to disable direct method handle usage in reflection
hbase - 25827 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] move methods related to lib and plugins directory into abstractyarnclusterdescriptor
trainer dictionary : use getword ( ) instead of getpronunciations ( ) to get the pronunciations
removed the newline character from the JSON structure in JsonUtilsTest . java to simplify the output format for better readability
added extra " id " field to TimeLineCursorAdapter and TimelineArrayAdapter , and updated the Compose class to handle the tweet ID
added a warning log when Terminating MessageListener on a topic to inform users that the underlying ring buffer data is lost to improve debugging and
improve error message when no class be find to analyze
replaced import of java . security . Key with java . security . PublicKey in KeyFetcher . java to ensure compatibility with the latest security framework
updated the ` isIncompatible ` variable initialization in ` DLNAResource . java ` to ensure proper initialization of the ` isIncompatible ` variable
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to enhance clarity and specificity
pdfbox - 4892 : avoid npe , a suggest by valerybokov
http : / / issues . apache . org / jira / browse / amq - 4237 - fix for amq - 4
enable off - heap format in StarTreeIndexSpec and update default star tree format version from " ON _ HEAP " to " OFF _
modified the title handling in FeedUpdateService to truncate the title to a maximum of 2048 characters to ensure the title does not exceed the allowed length
updated the initialization of ` previewPanel ` in ` JColorChooser ` and ` BasicColorChooserUI ` to use ` ColorChooserComponentFactory
changed log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity during extension checking
added a null check for the reusable bitmap before initializing the bitmap factory options to avoid potential NullPointerExceptions during bitmap loading
added layoutParams field and getter method to FakeView class to enable access to layout parameters for testing purposes
added a check to throw an IllegalStateException if the cursor is already closed in DefaultCursor . java and a corresponding test in CursorSimpleTest . java
pdfbox - 4892 : simplify code , a suggest by valerybokov
( chore ) camel - jms : ignore the test until it can be fix
added a private ` String ts ` field with getter and setter methods to the ` Message ` class to provide a way to retrieve and set the
[ opengrok ] add log for genericexceptionmapper and validationexceptionmapper
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
remove legacy parameter from route hint , not from request
removed the ' public ' access modifier from multiple test classes to enforce package - private access for better encapsulation
refactor CSRF handling into a separate method to improve code readability and maintainability by encapsulating CSRF setting logic
do n ' t try to load class that do n ' t exist in the bootstrap jar .
[ drools - 4892 ] add support to disable numeric cell in decision table ( # 4893 )
change log level from info to debug for logging default value to improve performance by reducing log verbosity when debug logging is not enabled
updated Lwjgl3Controller and Lwjgl3ControllerManager to handle null joysticks and polled controllers to improve
updated import statements for ObjectFactory from cucumber . api . java to io . cucumber . core . backend . ObjectFactory to
refactor code to use HostDatabase for port forward saving to improve code readability and maintainability by reducing duplication
added a new property ` SHOULD _ SNAPSHOT _ DATA ` to ` GlobalConfiguration ` and updated related methods to enable or disable snapshot data
refactor job scheduling logic in SyncedFolderObserver . java to include a null check for the file path before scheduling to improve robustness by
refactor LocationMarshaller class for improved clarity to enhance maintainability and readability of the code
removed trackpad motion event checks in StatusBarTouchController . java to simplify touch handling logic for better readability and maintainability
refactored the ` VectorReader ` interface and modified the ` VectorReaderImpl ` class to remove the ` VectorReader ` interface to simplify
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test files to ensure compatibility with the latest Mockito API changes
replaced calls to ` getRelativePathName ( ) ` with ` getRelativePath ( ) ` across multiple classes to simplify path handling and improve code clarity
updated ` completeMapAndTransformRow ` and ` transform ` methods to accept ` RecordReaderFileConfig ` instead of ` RecordReader ` to
added a null check for extractor before instantiation in ControllerMethodInvoker and updated annotations in Param and Params to use @ WithArgumentExtractor to ensure that
cloudstack - 4891 : fix secondary storage limit calculation for volume ( # 4892 )
fix motionshiftevent not be cancelable . close # 958
added a deprecated constant for " cold _ reads _ to _ omit " and marked it as deprecated to indicate that the option should no longer
added leech . stop ( ) method call to ClientTest . java to ensure proper resource management and prevent potential memory leaks
add label _ is _ retry to popmessagerequestprocessor metric ( # 4569 )
renamed KeyboardAddonSettingsFragment . java to improve clarity to enhance code readability and maintainability
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests that are not ready for a moment
renamed ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and introduced `
added upgrade request and response handling to ` UpgradeConnection ` and ` JettyTrackingSocket ` classes to enable tracking of upgrade requests and responses for
added timeout support to AndroidImplementation to enable configurable connection timeout settings
refactor getUserAccessPermissions and getTeamAccessPermissions methods to return user and team permissions directly instead of using RpcUtils to streamline permission retrieval
added a new test method ` testQuotedCastExpression ` in ` SelectTest . java ` to validate SQL parsing and deparsing for quoted cast
updated assertions in Misc . java to differentiate between writable and executable files based on the root OS to ensure that only writable files are validated
added logging for thread group and thread per group settings in FixedThreadExecutor . java and refactored executor selection logic to use dynamic properties to
added null check for the field before checking for " catalogname " to avoid potential NullPointerException when field is null
replaced instances of ` CasEventListener ` with ` InitializingBean ` and updated related method signatures to align with the latest Spring framework changes and
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added an override for the close method in DeflaterOutputStream to ensure proper resource management and prevent potential memory leaks
added a new file gsp001 . java that tests JVMTI GetSystemProperty to verify that JVMTI GetSystemProperty
fix issue with beandefinitioninjectprocessor not be able to process @ injected bean .
[ jme3 ] export camerainode and lightcontrol to jme3 export
refactor the handling of the popup notification window in PopupNotificationPanel . java to improve code clarity and ensure proper parent window disposal
replaced instances of NoInstanceException and InvalidInstanceException with InferenceException and updated related method signatures to improve clarity and consistency in exception
added a method to retrieve the feature value in the FeatureField class to provide access to the feature value for external use
changed the parameter type of the ` after ` method from ` int ` to ` long ` to accommodate larger delay values in the Mock
added ` OnBuild ` and ` ExecutionDriver ` properties with their respective getters and setters in ` ContainerConfig ` and ` Info ` classes to
added conditional logic for setting icon based on RTL direction in Toolbar . java and adjusted x - positioning in FlowLayout . java to
added a boolean flag ` enablePositionIncrements ` to the ` StopFilter ` class and modified the creation of the ` StopFilter ` to
added internet address to EmailsTest and SystemErrorEmailReportTest classes to facilitate testing by associating with a specific email address
added a new boolean variable ` mTryShareAgain ` and initialized it to false in ` FileActivity . java ` to ensure sharing behavior is
added support for determining the use of TTY name based on version in JansiNativePty . java to enhance compatibility with different operating
replaced the variable ` bytes ` with ` bytesSize ` for better clarity to improve code readability and maintainability by using a more
replaced Jayway ' s Awaitility assertions with Jayway ' s Awaitility for better synchronization to improve test reliability
replaced multiple URL constants with a single API _ BASE _ URL constant in EaseeBindingConstants . java to streamline the codebase by
increased read timeout from 2 second to 1 second and added startup attempts for Kafka container to improve reliability of KafkaIOIT by allowing
replaced ` Matchers . anyOf ( ) ` with ` Matchers . is ( itemName ) ` in ` SearchResultMatcher . java `
added SSL trust management for client and server certificates in OkHttp . java to enhance security by enforcing SSL certificate validation for client and server
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve code clarity and maintainability by
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` and ` HSSFCell . java
added nullability checks for stdout and stderr in ShellStep . java to ensure that the working directory is not null before accessing its path
increase asyncappendertest timeout to 2 second
updated method signatures and variable names in AbstractDatabase . java to improve clarity and consistency to enhance code readability and maintainability by using more
added a boolean field ` inputChanged ` and modified the condition for input validation in ` MaterialRenameDialog . java ` to ensure the input field
added a test for state change behavior in ShadowDisplayTest and implemented setState method in ShadowDisplay to ensure that state changes apply to other instances of
add directinvocationservice interface and refactor dispatcher to use it
added handling for the key ` KEY _ X ` and ` KEY _ Y ` in ` GlobalKeyDispatcherW . java ` to ensure correct
updated SQL query construction for pg _ catalog , pg _ depend dep , and pg _ class pkic based on server version to ensure compatibility with
added @ Nullable annotation to the message variable in QueueChannel . java to improve code clarity and prevent potential null pointer exceptions
updated the ` getPathsFromResource ` method to use ` URI ` instead of ` String ` for improved clarity to enhance code read
added support for monitoring Jenkins nodes in the remote collector to enhance monitoring capabilities for the application
refactor attribute resolution in HeadersBeanDefinitionParser to use a placeholder for " disabled " and " defaults - disabled " attributes to improve flexibility
log4j2 - 1349 fix eofexception in protobuflogreader . read ( )
removed duplicate calls to destroyRegistries ( ) and destroyMetadataReports ( ) in DefaultApplicationDeployer . java and added shutdown ( ) in
camel - mybatis - fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to handle SPDY . V2 and SPDY . V3 versions
refactor AuditEvent and AuditEventTests for improved readability and formatting to enhance code clarity and maintainability
added checks for FLOAT _ ROUNDING _ ERROR and modified the return statement in the cbrt method to ensure proper handling of floating - point
fix path issue in forgeworldedit . java ( # 3748 )
refactor code to store the executable path in a variable before adding it to the builder to improve readability and maintainability of the code
added assertions to compare ` PointRangeQuery ` instances in ` TestPointQueries . java ` to ensure correct equality checks for ` PointRangeQuery
hbase - 25827 make testhfilecleaner use / namespace / table / region instead of / hfile _ archive _ directory
added a check to set the file label only if the file name does not match the request name to ensure that the file label reflects the
[ hotfix ] do n ' t swallow exception in jedisclustercommand
[ hotfix ] [ runtime ] set chainingstrategy to always in rowtimeminibatchassgineroperator
updated ` FilterInvocationDefinitionSourceEditor ` to use ` PathBasedFilterInvocationDefinitionMap ` instead of ` RegExpBasedFilterInvocationDefinitionMap `
updated benchmarks in QMapReadRandomKeyBenchmark , QMapReadSequentialKeyBenchmark , and QMapWriteBenchmark to use HashMap and improve
added initialization of ` G _ SCH _ B ` with a new ` HashMap < > ( ) ` in ` HybridPlotWorld .
added a check for empty fields and refactored identifier handling in GroovyEngine . java to improve code robustness and maintainability by avoiding
fix for angle not be draw properly in dependent number
added configuration options for server read socket timeout and TCP keep - alive in HiveConf . java and modified server transport initialization in HiveServer . java
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` in ` FileRenameAction . java ` to improve cl
no effective change - code cleanup - remove unused import
refactor thread handling in RealtimeSegmentRelocator to use a lambda expression instead of anonymous classes to improve code readability and maintainability
do n ' t assign success to a variable in createvpccmdbyadmin . java
updated the calculation of windowAlpha and modified the condition for shapeRevealProgress in FloatingIconView to ensure windowAlpha is non - negative
updated schema version error message from 3.2 to 4.0 in SecurityNamespaceHandler . java to ensure compatibility with Spring Security 4.0
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
[ hotfix ] fix checkstyle violation in disruptor - core
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` to utilize it to
updated regex pattern in LogMessageWaitStrategy and added parameterized tests in LogMessageWaitStrategyTest to improve clarity and maintainability of test cases
simplified logger method calls by removing unnecessary ' final ' keyword to improve code readability and maintainability
replaced ` update ` methods with ` DELETE ` methods in ` SchemaDao ` , ` ShardCleaner ` , and ` ShardDao `
added support for the Java language version " 17 - preview " in the JavaLanguageModule to enhance language support for the 17 - preview feature
make fileappenderresiliencetest more reliable by wait for compression job to finish
[ hotfix ] [ runtime ] remove assert in volatilereadnode # hasonlyusagesoftype
added a method to retrieve an unmodifiable list of steps in SimpleJob . java to improve usability by providing access to the list of steps
removed redundant fromBase58 and contractAddressBase58 fields from TronJsonRpc and TronJsonRpcImpl classes to streamline code and
refactor currency pair creation to use a local variable for clarity to improve code readability and maintainability
update duration measurement to use base time unit and add assertions for active tasks and duration in MeterRegistryCompatibilityKit to ensure accuracy of time measurement and
[ hotfix ] [ euphoria - core ] do n ' t use hashpartitioner in reducebykeytranslator
replaced String value with CharSequence value and updated type handling for value in HostEditorActivity to improve type safety and enhance code clarity
replaced IncompatibleDatabaseHandler with DatabaseVersionHandler and refactored the database version handling logic to improve clarity and maintainability of the
added a constant for the maximum number of tweets in the reply queue and updated the condition to check for it to ensure that replies exceed the
increased the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest to allow more time for the LDAP authorization map
fix queue . getpersistedbytesize ( ) for fully acked deleted tail page
fix checkstyle issue in net / protocol / server / glowserver . java ( fixes # 346 )
added a ` grow ` method to the ` DataIO ` class and refactored the buffer resizing logic to improve code readability and
removed unused import of DataOutputStream in GdxSetup . java to clean up the code and improve readability
added a method ` getSubmittedFileName ( ) ` to retrieve the submitted file name from the ` part ` object to provide access to the submitted
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure the fragment is marked as read for loading
added exception handling for NegativeArraySizeException in JarInstrumentor . java to improve robustness by skipping instrumenting due to negative array sizes
added a method ` checkForSpillPossibility ` to handle partition flushing in ` HashAggTemplate . java ` to ensure that out - of
updated method calls to use ` dsName ` directly instead of ` info . info . getDocStoreSegment ( ) ` to improve code readability
added a default name ID format to the supported name formats in SamlProfileSamlNameIdBuilder . java to ensure that the name ID format
added redirects and error handling in ChangePasswordPage . java to improve user experience by providing clear feedback when password changes are aborted
added a semicolon to the end of a block in Deadlock2 . java to improve code readability and maintain coding standards
added a method to get the maximum idle time in the NioReceiverMBean class to provide access to the maximum idle time for better management of
deleted the FontScalingTest . java file to remove unnecessary font size checks to streamline the codebase
[ rrd4j ] fix oom when request data and boundary = true ( # 14292 )
added a check to return early if numVectors is less than or equal to zero in GenericUDAFComputeStats . java to prevent further processing
test : migrate executableresourcetest to junit 5 ( # 1305 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java
camel - 18686 : added wiretap support to the dsl . thanks to jesus camacho rodriguez
changed the access modifier of the setAction method from public to protected to allow subclasses to access the action method
added a new option validator for the topn planner in PlannerSettings and implemented the matches method in PushLimitToTopN to enable the
[ java ] remove redundant aerondirectoryname assignment in test .
fixed - rbatch . ping ( ) and rbatch . executeasync ( ) method do n ' t work correctly for batch mode . #
replaced ` InputStream ` with ` URL ` for configuration variable retrieval and removed ` LoopingByteArrayInputStream ` class to streamline configuration variable handling
replace ` Device . defaultDevice ( ) ` with ` criteria . getDevice ( ) ` in ` BaseModelLoader . java ` to ensure the
updated the onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to enhance menu functionality for motor details options
refactor CertificateValidator class to improve certificate validation logic to enhance security and maintainability of certificate validation logic
fix a bug where the hawtio . dirname system property be n ' t take into account .
added a condition to handle empty comments and whitespace in Space . java to improve handling of empty comments and improve code readability
changed ` mClosed ` and ` mNativeDict ` fields to be ` volatile ` in multiple dictionary - related classes to ensure thread safety during
removed printStackTrace ( ) call from ContextHandler . java to improve error handling by avoiding stack trace printing
move customitemdroptest to integration / regression so it can be run with customitem
added a check for non - existent partitions in DDLTask and modified DDLSemanticAnalyzer to handle ifNotExists scenarios to ensure that partitions are
refactor input reading logic in NfsSecondaryStorageResource . java to improve readability and maintainability of the code
[ java ] do not set control request stream id in echo service node .
added support for spatial operators in the CapabilitiesTransformer and implemented tests for spatial operators in GetCapabilitiesTest to enhance functionality and ensure correct functionality of spatial
added import for LuceneTestCase and annotated BasicDistributedZkTest with AwaitsFix to address a known issue related to SOL
added conditions to check if the position is zero and the last valid length is greater than CLIENT _ PREFACE _ START . length to improve handling
[ java ] disable inbound exclusive mode by default for aeron cluster .
replaced string constants for HBase cache keys with an array of keys to enhance flexibility in managing configuration properties
added methods to track and update the running record count in JSONRecordReader to improve clarity and maintainability of record processing logic
added filtering of out years from merged items in CategorizationFragment . java to ensure only valid years are processed in the merged items list
updated drawColor method parameters in CacheableTextView , CellLayout , and HolographicOutlineHelper to use a constant value instead of
removed OpenGL version check for rendering method in Mesh . java to ensure compatibility with OpenGL ES 2.0 and avoid runtime exceptions
pdfbox - 4892 : set actioncontext to null in backgroundprocess to avoid npe
updated the ` getUnescapedName ` method to include a database name parameter and modified related methods to enhance table name handling to include the default database
added connection timeout configuration and changed the ` count ` variable to be ` final ` in ` StubConnection . java ` to ensure that the `
added multiple test cases for the approx _ percentile function in TestHiveAggregationQueries . java to ensure correctness of percentile calculations across different data
updated default idle timeout and write timeout configurations in WebSocketConstants and WebSocketChannel classes to improve clarity and ensure consistent handling of idle and write timeouts
updated the method to retrieve shares using user ' s platform account instead of the account object to ensure compatibility with the current user ' s platform account
updated Inet6Address . java to use generics for address enumeration and added null checks for scope _ id and ifname to improve type safety and
refactor button management methods in PlaybackControlView . java for improved clarity and functionality to enhance code readability and maintainability by
updated session handling to use a long session ID instead of a single session object to improve clarity and consistency in session management
replace ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to
disable exception probability by default in graaloptions
updated the color assignment logic in PredictedAppIcon . java to differentiate between themed and non - themed icons to
guacamole - 1343 : simplify mysqluser . init ( ) by use constructor instead of setter .
added " centre " alias to the aliases in the Middle class to enhance clarity and organization of center - related functionality
added dependency injection for DirectUpload in CommonsApplicationComponent and changed the visibility of DirectUpload class from package - private to public to allow external
added space space for left and right axes in BarChartActivity and adjusted calculations in BarLineChartBase and YAxisRenderer to ensure proper spacing
added ` HasJavaAbi . CLASS _ ABI _ FLAVOR ` and ` HasJavaAbi . VERIFIED _ SOURCE
added a new parameter for operation event status type in OnlineHubService and modified the initialization of the services list in CompositeLogService to ensure
added debug logging for method parameters and implemented a check for annotation presence to enhance debugging capabilities and ensure proper handling of visibility annotations
( chore ) camel - jms : replace startbundle ( ) with setup ( ) and teardown ( )
refactor classpath creation and process creation in SortedArrayStringMapTest . java to improve code readability and maintainability by reducing redundancy
updated documentLoader load method to use " res " separator instead of " values " to improve clarity and consistency in resource path handling
[ hotfix ] [ dataset ] fix checkstyle violation in dataset . java
added JUnit Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
updated error message formatting to escape percent characters to ensure proper stack trace formatting for better error reporting
fixed - http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 562 : j
fix log level for already claim exception in commandcontext . close ( )
refactored the initialization of ALPNClientConnectionFactory in HTTP2Client . java to improve code readability and maintainability
entitypropertiespacket : use instance . getbasevalue ( ) instead of getvalue ( )
[ sonos ] add check for initalization status before play notification sound
increased the timeout duration for countDownLatch . await from 500 milliseconds to 5 seconds in ContextRegisterListenerTest . java and SpringMvc
changed log level from info to debug in LightThingHandler . java to reduce log verbosity for better troubleshooting
cloudstack - 3361 : use fixed thread pool for asyncjobmanagerimpl when db . maxactive be set to 2 / 3
refactor ` Reporter ` and ` ReturnsSmartNulls ` classes to include an ` Object ` parameter for improved clarity and consistency to enhance
changed the parameter type in the generate method from Frame to Frame to ensure compatibility with the updated frame type handling
removed duplicate entries in package - info . java and module - info . java files to improve code clarity and maintainability
[ hotfix ] fix an npe in orrcpagesourcefactory when column name be empty
added a return statement to call methCla . mixPlay with input and amp to enhance audio playback handling in the engine
refactor JComponent and SynthTextPaneUI classes to improve code organization and readability
pdfbox - 4892 : fix bug in finderpatternfinder and add more test case
removed unnecessary checks for leadingIncludePaths in PreprocessorDelegate . java to simplify the validation logic for presence of leadingIncludePaths
add null check to stringtemplate . isvectormultiplication ( ) to avoid npe
add $ $ x and $ $ find to the list of supported search method in selenideelementproxy .
fix e - ac3 output channel count default to 48000
make xssfname a final class so that it can be re - used
increase the target value from 60000 to 90000 in HighDimensionsTest . java to accommodate larger data sets
fix a bug in simpletypegt and add a unit test for it
added a new test class ClassPathXmlJobRegistryContextTests to validate job registry functionality to ensure that the job name is correctly retrieved from the
changed the data type of mHistoricTimes from float to long in MotionPauseDetector . java to accommodate larger time values and improve
camel - 12320 : camel - restlet should use label = advanced , not label = consumer
camel - 14284 : remove showout method from logendpointbuilder
refactor the event submission logic into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by encapsulating
added status checks before adding limit orders in HuobiAdapters . java to ensure only valid limit orders are added to the list
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to ensure correct image layout handling and improve error handling
updated timestamp handling in Event . java and JrubyEventExtLibrary . java to use RubyTimestamp and JrubyTimestampExtLibrary . RubyTimestamp
added a check to return a resource if it ends with a slash in ContextHandler . java and created a test for getRealPath in WebAppContextTest
updated the type in ScriptFunctionImpl from TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _ GE
updated variable names and logic for setting scroll values in JEditTextArea to improve code readability and maintainability by using more descriptive variable
added null check for callerLoopScope before setting guardsStage and stageFlags in GraphDecoder . java to improve robustness by avoiding null
test ( refactor ) : migrate sniperprettyprinterjavaxtest to junit 5
updated URLOutputStream initialization to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added multiple @ Entity annotations to Mail . java to improve code organization and clarity in entity management
updated default value of includeTablespace from false to true and modified command parameter description to clarify that tablespace is enabled by default
added getter methods for metaDataBuffer and valuesBuffer in CountersReader to facilitate easier access to buffer data
added a check for non - empty files in ScanBatch and implemented a test for handling empty JSON directories to ensure proper handling of empty JSON files
added a conditional check for the internal custom name before failing comparison in StringSubject . java and updated assertion messages in StringTest . java to improve
updated the regex pattern for matching library names in LibUtils . java to improve clarity and correctness of library name validation
changed catch blocks from ClassNotFoundException and NoClassDefFoundError to Exception and Error in JrtJavaBasePackages . java and PackageHelper . java
hbase - 25836 masterfs should wait for dfs to be write to a file system in safemode ( ashutosh
updated error message formatting in TranslatingJavacPhaseTracer . java to improve clarity of error messages for better debugging
remove unused plugincache . get ( plugin , artifactrepository , list < artifactrepository > ) method
do n ' t fire the presence status change event if the connection be n ' t connect .
remove unused servletdetails # withresourceandparams ( string , set < string > )
added a new integration test for fetching account information in the BTCE exchange to ensure that the PollingAccountService correctly retrieves account information from
added mouseWheel method to VDUInput and vt320 classes and implemented mouse wheel handling in TerminalView to enhance user interaction by providing mouse
updated library path retrieval to use a temporary variable to improve code readability and maintainability by reducing redundancy
no effective change - code cleanup - remove deprecate @ columnhl
add player _ skin _ flags to the metadata index , fix # 269
refactor LoadBalancerWithServiceTests to use logging for master URL and simplify service dsl creation to improve test readability and maintainability by utilizing
refactored code in MapService . java for improved readability by adding braces to enhance code clarity and maintainability
replaced System . getProperty with AccessController for retrieving the OS version to enhance security by using privileged actions
updated fileSuffix handling in TemplateEngineFreemarker to use a configurable file suffix to enhance flexibility by allowing dynamic file suffixes based
fix the issue that ` selectmessagelubricants ` and ` selectmessagelubricants ` do n '
added animation callback to manage layout animations in ToolbarPanel . java to improve visual feedback during animations for better user experience
fix issue with caret not be bind correctly in styledtextareavisual
added CxxBuckConfig and declaredPlatforms fields to PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGen
replaced SimpleParameterAccessor with ParameterAccessor in JpaCountQueryCreator , JpaQueryExecution , and PartTreeJpaQuery classes to
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerException when passwordAttribute is null
added array creation logic in DataUtilities and a test for default values in DataUtilitiesTest to ensure correct handling of array types and validate default values
updated SSL engine creation logic to use hostName based on client authentication status to ensure correct host name verification based on client authentication settings
updated assertions in TestFSTableDescriptors to use assertTrue instead of assertEquals to improve clarity and correctness of test conditions
simonstewart : fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ?
added a flag to track the end of the launcher transition and modified the return condition in the AbsSwipeUpHandler to ensure launcher transitions are
added UTF - 8 charset to HTML tags in HTMLListWriter and HTMLWriter to ensure proper character encoding for title elements in the output
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future development
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and modified path separator handling in multiple files to improve
added a new class ` bug6337518 ` and modified ` BasicComboBoxUI ` to handle arrow buttons to address a bug related to
renamed TestRandomAccessBuffer . java to improve clarity to enhance code readability and maintainability
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future development
added imports for HomeContentProvider and updated broadcasts in multiple services to utilize it to enhance functionality by allowing dynamic content URI updates
added functionality to manage and invalidate the pressed or focused background in BubbleTextView and Launcher classes to improve user experience by controlling the
updated the ` getFallbackResponse ` method to accept a ` Throwable ` parameter across multiple classes to enhance error handling by providing more context during fallback
removed the conditional check for ` env . _ compile _ only ` in the ` DumpBytecode . java ` file to simplify the code logic
added null check for tags before accessing its length in ChannelUri . java to avoid potential NullPointerException when tags are null
updated JAVA _ REGEX _ SPECIALS string to include a period at the end to ensure proper handling of special characters in regex patterns
added functionality to save and restore the action bar title in FileActivity and update action bar title in FileDisplayActivity to ensure the action bar title
updated the method to retrieve the last element instead of the first element in ` PythonDslProjectBuildFileParser . java ` and added a
updated the schedule interval from " * " to " 0 " in CleaningService . java to allow for a zero hour scheduling instead of a
added handling for partitioned tables in TransactionalValidationListener to improve validation of table structure for partitioned tables
refactor ReplicationHandler and SnapPuller classes to improve code readability and maintainability
changed ` generatedKey ` type from ` int ` to ` long ` and modified SQL execution logic to handle generated keys more efficiently to improve
updated variable name from ' proxy ' to ' _ rc ' for consistency to improve code readability and maintainability
updated test failure messages to include " failed to inline " to improve clarity and accuracy of test failures
improve keepalivetimeout configuration to be 10 second instead of 60 second
deleted the HttpTestAccount001 . java file to remove unused test cases to streamline the codebase
change catch block from Exception to Throwable in Dispatcher . java to improve error handling by catching all throwable types instead of just Exception
camel - 14284 : camel - cxf should only send message to cxf server if dataformat be not cxf _ message
added a new case ' ~ ' in ClientUtils . java to handle the ' ~ ' character in connection handling
camel - slack : use java . time . duration for delay property in camel - slack
fire blockharvesting event instead of blockdropped event . close # 2321
updated the layout size in TranscodingTab . java and modified the string concatenation for the JCheckBox in TranscodingTab . java to improve layout
added a new file ` bug8057791 . java ` that implements a Java Swing application using a Nimbus Look and Feel
updated flag assignments in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and functionality of static
do n ' t expose engine api ' s websocket method if engine api be not available
changed the condition from checking if ' to ' is non - empty to checking if ' to ' is not null to ensure ' to ' is
refactor ParquetFixedWidthDictionaryReaders to handle dictionary reading differently based on the usingDictionary condition to improve readability and ensure correct handling of
updated orientation handling in PortraitPagedViewHandler to use landscape instead of appsStackedVertically to improve layout responsiveness
added a new annotation ` Log ` and ` LogInterceptor ` to handle logging before and after proceeding to provide a mechanism for logging before and
updated string concatenation in QueuedThreadPool . java to handle empty trace arrays to improve clarity of thread state representation
added support for caching implementations in CacheGenerator and CacheProvider classes to enhance cache management by allowing specification of implementations
added totalFrameSize parameter to createReferenceMap method in FrameMap . java to enhance memory allocation by including total frame size
refactor TypesafeConfigurator to improve code readability to enhance maintainability and facilitate future development
( chore ) camel - graphql : add karaf feature for camel - graphql
added two new test methods ` bug1 ( ) ` and ` bug2 ( ) ` in ` RFE2891944 . java
replaced URLEncoder . encode with direct key and value appending in HttpClientIntroductionAdvice . java to simplify the code and improve
replaced the unsupportedPlatformTool method with a new class UnsupportedPlatformTool to simplify the code structure and improve readability
updated loopCount variable type from double to int and modified log message format to improve clarity and accuracy of recovery delay logging
added a ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way
[ drools - 5390 ] fix a bug in abstractaddressmanager that cause test to fail on jdk11 .
updated layout specifications and components in VLCVideo . java for improved UI consistency to enhance user interface responsiveness and maintainability of the
remove reference to bisq by default
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker
[ mng - 4892 ] allow user . home / . m2 / user . xml to be specify for maven installation .
added binding of the GL _ ARRAY _ BUFFER to the buffer handle in VertexBufferObjectWithVAO . java to ensure the buffer is properly
refactor ServerHttpSecurity class for improved readability to enhance maintainability and facilitate future development
added a JUnit 5 @ Disabled annotation to the PostgresStoredProcedureIntegrationTests class to temporarily disable tests that are not ready for execution
added default HTTP headers to HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration flexibility by allowing custom HTTP headers
improve error response when user password be not valid
deleted the NoOpConfigPathGetter . java file to remove unused configuration path getter functionality
replaced codec . base16Decode with Bytes . fromHexString for signingKey to ensure compatibility with the latest byte - encoding standards
replaced ` CascadedStyle ` with ` CascadedStyle ` and added validation for the FLOAT property in ` FloatUtil . java
planningfactproperty , planningentitycollectionproperty , planningsolution and planningfactproperty need to be in org . optapl
refactor defaultHeaders method to return MultiMap instead of CaseInsensitiveHeaders to improve header handling by utilizing case - insensitive headers
replaced ` String ` encoding with ` Charset charset ` in ` ProxyServer ` and ` Realm ` classes to enhance flexibility by allowing
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
replaced ` Long . compareTo ` with ` Long . compare ` for comparison in ` ExpandableUploadListAdapter . java ` and ` File
do n ' t log http response in jdkblockinghttpclient if debug level be enable
updated import statements in LegacyAuthenticationHandlerAdapter . java to use namedAuthenticationHandler and UsernamePasswordCredentials to improve clarity and maintainability of the
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
filtermanager : do n ' t remove filter from the network if it ' s our own
pgp : move bcpginputstream . wrap ( inputstream ) to pgpkeyring . wrap ( inputstream )
minimallockingwriteaheadlog : use bufferedoutputstream for write - behind
added a new test method ` testSelectAllFromView ` and modified assertions in ` TestJdbcDriver2 ` and ` HiveBaseResultSet `
renamed FocusTransitionTest . java to improve clarity to enhance code readability and maintainability
updated the import statement for GWT from org . gwtproject . core . client to com . google . gwt . core . client to
added a type check for sourceTask before retrieving counters in CounterStatsAggregator . java to ensure proper handling of MapRedTask instances and avoid potential
removed unnecessary whitespace in HttpInput . java to improve code readability and maintain consistency
refactor color handling in AppearancePanel to use a ChangeListener instead of direct method invocation to improve code readability and maintainability by redu
updated TaskHelper constructor to include hidden parameter to enhance control over the task ' s visibility behavior
make the test more robust by wait until the broker be start
pdfbox - 4892 : fix resource leak , a suggest by valerybokov
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize DefaultParameterHandler for improved parameter handling functionality
added a check for the loop depth before setting the spill state in LinearScanWalker . java to ensure spill state is only set when
improve micronautastbuilder . compile ( string script , compilephase , boolean statementsonly ) . ( # 2321
make pgresultset . getresultset ( ) volatile to ensure thread safety
set default value of serviceAdvisorType to PYTHON to ensure compatibility with Python environments
replaced the static ResolvingDecoder resolver with a ThreadLocal < ResolvingDecoder > for better thread safety to improve performance by avoiding redundant
changed the parameter type from Collection to List in the Path constructor and modified return statements in PdfContentStreamProcessor and PdfCleanUpContentOperator to
replaced the use of an empty byte array with a random byte array for outputs in SendCoinShieldTest . java to improve test reli
added a new method ` setPersonalisation ` to the ` SkeinParameterSpec ` class for writing personalisation data to enhance functionality
removed redundant check for argument count in CodeGenerator . java to streamline code for better readability and maintainability
simplified the scroll method parameters by removing the percentage parameter and adjusting the gesture height calculations to improve code clarity and maintainability by
changed the access modifier of the pointer variable from private to public and added reset methods to FlatRecordReader to allow external access to the pointer variable
rename ` ContentDigestHistory ` class to ` BdbContentDigestHistory ` and update references accordingly to clarify the purpose of the class
fix a bug in castexpression where boolean expression be implicitly cast to int .
replaced the use of ArrayList with a boolean flag for managing accepted media types to simplify the code and improve readability by eliminating unnecessary
added a new boolean parameter ` false ` to the ` TaskView ` class to control the behavior of task management in the application
added auto - increment functionality to CreateTableChange and LiquibaseDataType classes to ensure correct handling of auto - increment columns in table creation
set default value of errorText to " Command failed due to Internal Server Error " to provide a clearer error message when command fails due to
updated imports in DeadListenerTest . java and LocalManagementTest . java to utilize ProcessTools and Utils , and added performance data usage options
replaced ` toSimulate . add ( currentStatus ) ` and ` toSimulate . add ( boosterStatus ) ` with `
added support for AJP connector configuration and port validation in GitBlitServer . java to ensure Gitblit runs with appropriate root permissions for
added type coercion for compound types in TransTypes . java and created Intersection03 . java for testing to ensure correct type coerc
rename the class from EmbeddingTest to EmbeddingITest to clarify the purpose of the test class
added a native method to start the toolkit thread and modified thread creation logic to ensure the toolkit thread only starts if it is not already
[ gr - 33939 ] add option to compress the bundle in parallel .
set surface visibility to false on window
updated the temporary directory path to use the current class name instead of a hardcoded value to ensure the test uses the correct class name for better
added configuration parameters for enabling fullNode and solidity node HTTP functionality to allow dynamic configuration of HTTP service availability based on configuration settings
added a ` service ` property to ` GoogleCloudFirestoreTicketDocument ` and implemented ` countTicketsFor ` method in ` GoogleCloud
refactor Generate . java to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ table - common ] remove nullableparameters from scalarfunction
updated BadgeRenderer to use a constant for DOTS _ ONLY and adjusted width calculation accordingly to improve readability and maintainability of the code
changed the ` getConfiguration ` method from ` final ` to non - final in ` FreemarkerManager . java ` to ensure thread
added a test for invalid excluded package names in OgnlUtilTest to ensure that ConfigurationException is thrown when setExcludedPackageNamePatterns is invalid
updated device Udid assignment logic based on platform name to ensure compatibility with macOS devices by default
updated DefaultHttpClientFilter to replace error logging with warning logging and introduced ProduceProcessorManager for better error handling to improve logging clarity and ensure proper
refactor context binding and execution logic in AllAppsView . java to improve code clarity and prevent potential null pointer exceptions
added a new boolean flag ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to control the shadow layer based on
added teardown methods for table and view cleanup in TestColumnAccess and TestReadEntityDirect classes to ensure proper cleanup after tests are executed
added retrieval of parser from parsers map in SecurityNamespaceHandler to improve parser management by retrieving the parser instance
added a new ` fastpath ` method to ` BoundedLocalCache ` and modified the conditional check in ` BoundedLocalCache . java `
updated RawConnection and WebSocketAsyncConnection to extend WebSocketConnection and implement complete and flush methods to enhance connection management and ensure proper handling of WebSocket frame
added multiple test methods for asserting assertions in SoftAssertionsPerfTest . java to improve test coverage and ensure correctness of assertions
added error handling for test failures in PythonRunTestsStep and modified visibility of assertExitCode method in ProjectWorkspace to improve test reliability by ensuring
refactor conditional logic in GlyphLayout . java for better readability to enhance code clarity and ensure proper handling of text rendering when markup is
refactor score comparison logic in TestBooleanRewrites . java to use streams for improved readability and maintainability to enhance code clarity
updated the logic to determine the superclass of the anonymous class instead of the enclosing class to ensure the correct superclass is used for anonymous classes
add ` playerconnection # flush ` without guarantee
added a check to prevent multiple invocations of the OnDrawListener in the Launcher and LauncherAnimUtils classes to improve performance by avoiding
refactor multiple classes including CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder to improve code organization and maintainability
updated import statements in ReplicaAssigner . java and modified condition to check for NOT _ APPLICABLE match status to improve code clarity and
changed the default value of MEDIAPARSERV2 from false to true in RendererConfiguration . java to enable MEDIAPARSERV2
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 549 : add
added assertions and permission verification for warehouse directory and table names in FolderPermissionBase . java to ensure proper permission verification and table truncation functionality
do n ' t publish status for provider in wrong state due to registration state change .
updated the random color generation logic in PastelColor . java to incorporate a customizable color base to enhance visual clarity
refactor ScriptEngineFactory to improve code readability to enhance maintainability and facilitate future development
updated image handling in HolographicViewHelper to use original and outline bitmaps instead of drawable drawable to improve visual clarity and maintain
refactor request method handling to use ` HttpMethod . fromString ( requestMethod ) ` for better readability to improve code clarity and maintainability by
add a method to infer the position of a tree that contain a phrase , and use it to make the code more readable .
[ hotfix ] [ test ] fix checkstyle violation in iochannelutilstest
modified the class loading logic in Table . java to handle HivePassThroughOutputFormat to ensure proper retrieval of the output format class based on the
renamed ChunkListener , AfterChunk , and BeforeChunk classes to improve clarity and consistency in naming conventions
added a boundary check for the start and length parameters in the DOMBuilder class to ensure that the method correctly handles cases where the start and length
refactor conditional logic in ClusteringCoefficient . java and update return messages in DiameterUI . java and HitsUI . java to improve
camel - 14284 - camel - aws2 - translate : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` containing an interface with static and default methods and a test class to demon
add support for camel context on defaultkeyselector to allow to use property placeholder in password .
replaced multiple checks for ` ThreadDeath ` with a single ` throw ` statement in ` LogResolverBean . java ` to simplify exception
refactor multiple classes related to security and key management to improve code organization and maintainability
updated JGit version from 201106090707 to 201109151100 and sorted jars in Launcher . java to ensure compatibility
updated the client key assignment logic in HttpClientIntroductionAdvice . java to ensure the correct client key is used based on client annotations
add a transformer context to the namespace handler so it can be use for the ' transformer ' bean .
renamed BACK _ FACTOR to REWIND _ TIME and introduced a new constant REWIND _ TIME with a factor of 0.92 to
added ` isScrollWheeling ( ) ` method to ` CodenameOneImplementation ` and ` JavaSEPort ` classes and modified
updated usage string formatting in UtilityCommands . java and modified usage string handling in DocumentationPrinter . java to improve clarity of usage information and ensure
corrected the attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in
modified methods to use merged file sizes instead of sequential and unseq files directly to improve clarity and streamline code by referencing merged file arrays
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
fix a bug in projectpropertiesmodel that cause the rule set to be synchronize twice .
fix synchronization issue in abstractsootfieldref . getfieldunsafe ( )
add ElasticNamingConvention class and update ElasticMeterRegistry to use it for naming conventions to improve clarity and maintainability of Elastic meter registry
updated IController and TinyGController to use IController ' s IController interface and updated BackendAPI to use IController ' s interface
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to ensure proper rendering of huge horizontal elements
replace system . out . println with tty . println in type system test and partialescapeanalysisphase
updated multiple Java files for consistency and clarity to improve code readability and maintainability
change the condition from ` frameLength = = 0 ` to ` frameLength < = 0 ` in ` LogInspector . java ` to ensure
updated return statements in IntFloatMap and IntIntMap to return defaultValue instead of zeroValue to ensure consistent behavior by returning the default value when
refactor ImageDownloadService to use ` Display . getInstance ( ) . callSerially ( ) ` for setting icons and styles to improve performance
added a null check for the registered variable in HandlerRegistration . java to ensure proper handling of null registration scenarios
removed native method ` hasNextSibling ( ) ` from ` AttributeNode ` , ` DocumentNode ` , ` HtmlNode ` , and ` I
added null check for results in RedisDistributedMapCacheClientService to prevent potential NullPointerException when results is null
updated logging statements in MobFileCache . java to include cache configuration details to improve clarity of log messages related to MobFileCache
rename ColConvCCMTest . java to improve clarity to enhance code readability and maintainability
replaced instances of ` target ` and ` source ` with local variables ` allowCovariantReturns ` and ` syntheticNameChar ` to improve
pdfbox - 4892 : avoid unchecked cast , a suggest by valerybokov
replaced Float . toString ( jsonData . asFloat ( ) ) with asString ( ) in mmm Json . java and added a new class
added a return statement to the GenericFileConsumer class to ensure that the method does not return after execution
added EventQueue . invokeLater with a Runnable in bug6638195 . java to ensure thread safety during event handling
updated maxSize calculation to use maxBinaryMessageSize instead of maxTextMessageSize to ensure correct maximum message size is used for compression
update steeringValue calculation in TestAttachDriver , TestFancyCar , and TestPhysicsCar to use - instead of +
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using ` MessageDigest
refactor JdbcSerDe to use LocalDate and LocalDateTime for date and timestamp handling to improve clarity and accuracy of date and timestamp representation
updated the version number from 2 to 3 and refactored metadata reading and writing logic to ensure compatibility with different versioning and improve metadata handling
added a new configuration class ` FlywayInitializerJpaDependencyConfiguration ` and modified ` FlywayAutoConfiguration ` to include it to
added a sorted ( ) method call to ClassesImpl . java to ensure the classes are processed in the correct order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer to improve code readability to enhance maintainability and facilitate future development
refactor memory scope handling in TestCloseScope0 to support both MemoryScope and ResourceScopeImpl versions to ensure compatibility with different Java versions for
updated test parameters from 500 to 5000 in AdaptServerSocket . java to allow more time for the test to run
refactor CaptchaChannelProcessorTests to improve test coverage to enhance reliability and maintainability of test cases
added a condition to update the owning collection of an item based on its handle to ensure that the item ' s owning collection is correctly managed and
added a maximum number of retries for saving properties in AbstractRegistry to improve error handling by allowing multiple attempts for saving properties after retries
updated the variable name from ` mergeDirectory ` to ` directory ` in ` TrackingDirectoryWrapper ` to improve clarity by using a more
pmd : fix a bug in unusedimports and add some more test
added validation for insert overwrite queries on bucketed Iceberg tables to ensure proper error handling for insert overwrite operations on bucketed Iceberg
updated assertions in BootstrapTests to check for the presence of legacy SAML keys from the default identity zone configuration to ensure that SAML keys are correctly validated
updated method names and conditions for checking anonymous and non - static fields in Excluder . java to improve clarity and accuracy of field
refactor the getAddressVector method to improve clarity and functionality to enhance code readability and maintainability by reducing unnecessary synchronization
removed WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , and WAITING _ TO _ LEAVE _
added IOException handling to the release method in Lock and NativeFSLockFactory classes to ensure proper resource management and prevent potential resource leaks
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to align package
simplified the transformation logic in SpelExpressionTransformer . java and modified the return condition in LiteralNode . java and OperatorNode . java
added TypeValidation . DISABLED to ByteBuddy initialization to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` to simplify type handling and improve code
updated lock handling in LockModePessimisticReadWriteIntegrationTest and set global innodb _ lock _ wait _ timeout in MySQL
do n ' t overwrite the system property of the log file if it ' s already set
added a method to check for redirect status codes and refactored the request method to use the first connection parameter to improve handling of redirects and
added constants for SERVICE _ MAPPING , VERSION _ MAPPING , and APP _ MAPPING in ServiceCombConstants . java and updated MicroserviceFactory . java
updated method call from ` getName ( ) ` to ` getBeanName ( ) ` for the ABOUT _ TO _ BEGIN _ PROCESSOR to
updated database path regex and added database prefix assertions in BaseAndroidTestCase . java and GeocodeHelperTest . java to ensure proper database management
updated return statement to retrieve unread count from HomeDataSource to ensure accurate tracking of unread accounts
renamed the method ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool ` to
added a limit parameter to the getAllOrder method and implemented a limit for market order retrieval to limit the number of orders processed and prevent exceeding
updated user retrieval logic in HomePage . java to handle null user cases to improve robustness by preventing null pointer exceptions
updated LocalFileSystem to return the absolute path of the file and added a new test for matching relative wildcard paths to ensure accurate file path resolution and
added maximum width and height limits for the instance ' s bounds to ensure that the instance ' s bounds do not exceed defined limits
added logging capabilities and a method to set connection manager timeout in CommonsHttpSolrServer to improve error handling and logging capabilities for better debugging and
removed error handling for document creation errors in PrintController . java to streamline error handling for better clarity and maintainability
refactor filename formatting to use lambda expressions in CrateType . java and add assertions in RustBinaryIntegrationTest . java to improve code
added a method to check if a word is a number and updated the SpellChecker to improve spell validation to ensure only valid numeric inputs are
removed unnecessary whitespace in the MESSAGE constant declaration to improve code readability and maintain consistency
added methods to manage file actions in the FileDisplayActivity class to improve user experience by allowing file actions to be displayed on the bottom sheet
disable daemon puller in ReplicationHandler and improve error handling in SnapPuller to ensure proper handling of exceptions during replication operations
updated the parameters of the update method in StoreCachedTest . java to ensure consistency in parameter order
renamed the parameter from ' materials ' to ' theMaterials ' in the StreamerLoader constructor and removed specific MaterialColumnParser instances to
updated string arrays in DependencyBank . java for consistency and clarity to improve code readability and provide more detailed information about the dependencies
added maximum recycled views for various item types in RecyclerView to improve UI responsiveness by limiting recycled views based on
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that building binaries
improve examplebaritonecontrol . setpathingbehavior ( ) for mining
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enhance functionality by integrating ParsedNode and
added null handling functionality in FilterOperatorUtils and corresponding unit test in NullHandlingEnabledQueriesTest to enhance query performance and ensure correct handling of null
added validation for bootstrap method argument types and signatures in JDynamicInvokeExpr . java to ensure bootstrap method ' s signature and arguments match the expected
[ ci ] use port 9000 for jms test
clear formatters in CucumberInstrumentation . java to ensure formatters are properly initialized before usage
updated the type of ` contacts ` from ` RegisteredServiceContact ` to ` DefaultRegisteredServiceContact ` and added type casting in ` AbstractRegistered
added conditional logic to adjust workspace labels based on cell padding to ensure workspace labels are only hidden when they are too small to improve UI respons
updated assertion messages in ReplicationFactorTest for clarity and consistency to improve readability and maintainability of the test code
sulong : do not initialize llvmcontext if pre - initialization be enable .
added JUnit @ Ignore annotations to ChaosMonkey tests to temporarily disable tests that are not ready for execution
replace RuntimeException with JsonIOException in Gson . java to improve error handling for JSON - related issues
replaced ` Integer . valueOf ( ) ` with ` Integer . parseInt ( ) ` in ` VisualScoreTagTest . java ` to improve
updated error messages in mmm Copy . java and ppp Copy . java for clarity and consistency to improve error handling and provide clearer
refactor HLCSegmentName and LLCSegmentName to use a new method to check if the segment name is a high - level consumer
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to ensure
updated the method to return the current time as a DateTime object instead of using the current time directly to ensure the correct time representation is used for
updated the return statement in TargetCpuType . java to include a specific target architecture to ensure compatibility with specific architecture requirements
added a method to delete all files for an account in FileDataStorageManager and integrated it into ManageAccountsActivity to ensure that temporary files are
updated the command - line help message format in SchemaCrawlerCommandLine . java to correct the command - line option usage for clarity
added a method to create suite descriptions with a unique ID and updated the equals method to ensure unique IDs are consistent and prevent null pointer exceptions
replaced the decoding method for HARDER and PURE _ BARCODE with a direct call to decodeBarcode to simplify the code
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and related classes to simplify the constructor and eliminate unnecessary
[ grid ] fix the issue that zoomcontextfinder # getrange do n ' t return the correct value
added support for enabling dependency tracking in JRubyScriptEngineConfiguration and updated JRubyScriptEngineFactory to conditionally activate dependency tracking based on
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
catch alreadyexistsexception when try to create a table in the storage service
refactor WelcomeWindow to use a cached image instead of a background image to improve performance by reducing memory usage and enhancing image
updated tuner configuration handling and added error logging for buffer transfer resubmissions to improve clarity of tuner configurations and ensure proper resource management
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enhance functionality by allowing tests
added a condition to include a specific database string in TestFilter . java to ensure compatibility with HSQLDB database configurations
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
fix trufflestacktrace . materializehostexception ( ) for empty stack trace .
export jvmci to service in graalservices . load ( ) instead of use serviceloader . load ( )
added unit test to verify that duplicate command handler resolution work
[ flink - 20865 ] [ stream ] enable fine - grained resource management in batch job
fix fish hook not be able to place block in the wrong place . close # 467
camel - 14284 : fix typo in camel - ftp and camel - sftp doc
rename ` commandRunner ` to ` stepRunner ` across multiple files to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter . java ` and update related method signatures to
added a check to return early if items are empty in AppsContainerRecyclerView . java to avoid unnecessary processing when no items are available
added @ ConditionalOnMissingBean annotation for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure proper bean
refactor xmllayout to use stringbuilder instead of stringbuffer to improve performance and readability
added a new constant ` OMIT _ HEADER ` and implemented the ` remove ` method in ` NamedList ` to control the removal of response
replaced ` _ id ` with ` getPropertyNumber ( ) ` in ` EscherProperty . java ` and added unit tests in ` Test
updated method call from ` getBuildRuleType ( key . getSimpleName ( ) ) ` to ` Description . getBuildRuleType ( key . getSimpleName (
make sure tootclass . remove ( methodnumberer ) be call before fasthierarchy . remove ( methodnumberer ) .
do n ' t throw npe at testifdisputetriesreplay if dispute fails
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified the ` retrieveColumns ` method
wallet : set not _ seen _ in _ chain a default for sendtx .
refactor HttpClientIntroductionAdvice to handle both Body and Header annotations more efficiently to improve code readability and maintainability by
refactor conditional checks in CraftingHelper . java for better readability to improve code clarity and ensure only valid JSON files are processed
hbase - 15827 hregion . open ( ) should log error if region close fails
refactor credential comparison logic to use local variables for length comparisons to improve readability and maintainability of the code
[ java ] do n ' t check for subscription image if they do n ' t have an image .
refactor the destroy ( ) method to handle InterruptedException and simplify process destruction to improve code readability and maintainability by simplifying process
added Oracle support to the conditional check in TestDefaults . java to ensure compatibility with Oracle database features
camel - 14284 : camel - mail should only try to connect to the mail store if it ' s not already connect to the store
added cancellation check for tokens in the query to ensure that no tokens are consumed after the query has been consumed
camel - 14284 - aws - translate : list all the available language in the enum - start with ` ` en ' ' complete
added a method to retrieve the data file name and modified model initialization logic in Voice . java to enhance data file handling and improve model initialization logic
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to allow dynamic configuration of email domain for identity
added read and connect timeout configuration constants and methods in Configuration . java and updated ViewRegistry . java to use these constants to improve configuration flexibility
do n ' t run processdeferredconcepts when there be no concept link to save
added RedisCategory import and annotation to RedisServiceRegistryTests to categorize tests related to Redis functionality
refactor ` FindDeprecatedMethodsTest ` to use parameterized tests with a ` typePattern ` parameter to improve test clarity and enforce non -
added a call to the superclass ' s paintComponent method in OverlayPanel and adjusted mImageHeight in WaterfallPanel to ensure proper rendering
removed unused imports from multiple Java files to clean up the code and improve maintainability
updated event signature handling in ContractEventTriggerCapsule and added event signatureFull field in LogEventWrapper to improve clarity of event signatures and
updated filter condition to append " _ " to the file name in FileTestHelper . java to ensure the file name ends with " _ "
replaced the clearRect method with fillRect and set the background color to improve the visual appearance of the graphics context
refactor package compilation error handling in PackageBuilder . java to improve clarity and maintainability of the code
removed debug print statements from various graph - related classes to clean up the code and improve readability
added a check for NaN score values before asserting equality in TestFieldCacheSort . java to avoid potential NullPointerExceptions when comparing score values
replaced the direct assignment of oldKeys with a copy of the deviceProfile ' s entity keys to ensure that the original set is not modified
added a method to check for zero - time strings in ColumnSnapshotGenerator and created a test for default date handling in MySQLIntegrationTest to ensure
rename ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and ` taker
replaced ` Map ` with ` Map < ? , ? > ` for the ` vsContext ` variable across multiple collector classes to improve type
[ drools - 5390 ] add test for edit ksessionmodel in kiecontainerimpl
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure the correct configuration is used for
added a check to return early if modalness matches mModalness to optimize performance by avoiding unnecessary processing
added a test for codec capabilities in ShadowMediaCodecListTest . java and implemented native _ getGlobalSettings in ShadowMediaCodecList . java to
fix incorrect focus in edit offer view ( # 5460 )
added validation for width and height in SunVolatileImage and enhanced error handling in XRSurfaceDataProxy to ensure dimensions are non - negative
updated group separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure consistent Unicode character representation
replaced ` int [ ] ` with ` AtomicInteger [ ] ` and updated idle time handling in ` AsyncStressTest . java ` and
added beta flavor visibility handling and toast messages in AchievementsFragment and LeaderboardFragment to enhance user experience by providing clear feedback for unavailable
added access , name , and description fields to SearchMethodVisitor to enhance the search functionality by associating access and name with the context
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java and modified exception handling in IoTDBInsertWithoutTimeIT . java to ensure
updated formatting of code in DLNAResource . java for consistency to improve readability and maintainability of the code
removed the ` required = false ` attribute from ` @ XmlRootElement ` annotations in ` ResequenceDefinition ` and ` BatchResequ
refactor TableReader to manage transaction acquisition and release logic to improve transaction management and ensure proper resource management
[ hotfix ] [ thrift ] remove the keymanager - type property and use ssl . trustmanager . algorithm .
refactor ` getSingleSourceApplicableTest ` to use ` TreeVisitor < ? , ExecutionContext > ` instead of ` JavaIsoVisitor ` to
added an exit ( ) statement for handling tab key events in Blockmania . java to ensure proper exit behavior when the tab key is pressed
replaced ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple files to standardize access specification for no functional
renamed the method ` unHandled ` to ` unhandled ` and updated related logging and exception handling to improve clarity and consistency in method naming
updated the logic for retrieving stripes and stripe statistics in OrcInputFormat . java to ensure accurate retrieval of stripes and stripe statistics based
added a null check for the exception in JCache . java to avoid potential NullPointerExceptions during execution
use http : / / myhentaicomics . com instead of http : / / myhentaicomics . com to
added a command - line option to display the current JAR version to provide users with the ability to view the current version of the application
use splittokens ( ) instead of split ( ) in exportlist ( )
updated rotation handling in ConsoleActivity and added input connection methods in TerminalView to improve user experience by allowing dynamic rotation based on keyboard configuration
changed the type of the hq variable from PriorityQueue < ? > to PriorityQueue < ? extends ScoreDoc > and added a suppression
added a null check for ownerConnectionAddress in ClientSmartListenerService . java to avoid potential NullPointerException when ownerConnectionAddress is null
camel - 15836 : camel - jbang - add support for configure the headersmapfactory class name
added a space character to the end of a line in JavaCompiler . java to ensure proper formatting of code output for better readability
int - 1186 add support for the jms namespace handler and a parser for the jms outbound gateway .
updated the index parameter in the expect method call from ` i + 1 ` to ` i2 ` in the ArrayFunctions class to correct the
refactor script engine loading logic and improve error handling in AbstractScriptProcessor . java and InvokeScriptedProcessor . java to enhance code clarity
added support for PGStatement in Proxy instantiation in PooledConnectionImpl . java and created a corresponding test in ConnectionPoolTest . java to enhance
refresh the size estimate when the test be run
changed log level from error to warn in AtomicRemainder . java to provide more informative logging for fragment limit issues
[ hotfix ] do n ' t sort candidate in time - to - live compaction
fixed - rblockingdeque . shortpoll ( ) and rblockingqueue . shortpoll ( ) should return 1 second if the timeout value
removed unnecessary string formatting from printMap calls in JobInspectCommand . java to simplify output formatting for better readability
refactor Engine class to improve code structure to enhance maintainability and readability of the code
replace Stream . of ( children ) with Stream . of ( children . entrySet ( ) ) in ChildHolder . java to improve code readability
[ issue # 5390 ] fix typo in acl client ( # 5391 )
changed condition from numIndexDims to numDataDims in BKDWriter . java to correct the variable name from " numIndexDims "
[ hotfix ] fix npe in notebookserver . start ( )
updated the variable name from ` funN ` to ` lt ` in the ` ExpressionNode ` class to improve clarity and consistency in the
removed the public access modifier from verifyIdsAreStable and getNodeId methods in NodeIdAccessor . java to restrict access and improve encapsulation
cloudstack - 4892 : improve error message when attach volume to vm before create snapshot policy
removed public access modifier from write , flush , and clear methods in ItemWriter . java to enforce encapsulation and improve method accessibility
updated the mock parameter from an empty string to " test " in RoombaHandlerTest . java to ensure the test accurately reflects the
added ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest `
replaced FSDirectory with RAMDirectory for directory creation in TestNorms . java to improve performance by avoiding unnecessary file operations
added a static variable ` mLineHeight ` and modified the line height assignment logic to ensure ` mDrawTextRectBuffer . height ( )
refactor WalletAppKit to improve code readability to enhance maintainability and facilitate future development
bugfix # 20613 , remove hat _ js _ rhorn and hat _ js _ nashorn from oql
remove the chat transport menu item from the button group in ChatTransportSelectorBox to ensure the correct menu item is removed from the button group
added resolve and replaceTokens methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes to enhance functionality by allowing dynamic variable resolution and
chore : fix a nullpointerexception in prefspayload when bsqblockchainexplorer be not set
added attribute management methods to StandardSession and Session classes to enhance the management of session attributes in the application
added assertions to verify the presence and presence of a plain bean in the found object to ensure the correctness of the database schema by validating the
updated the array size in MonotonicAppendingLongBuffer from pageSize to initialPageCount to ensure the array is initialized with the correct initial page
refactor BatchCommandLineLauncher to improve code readability to enhance maintainability and facilitate future development
added JDBC datasource and transaction manager beans to BatchMetricsApplication to enable support for HSQL database integration in batch processing
changed the implementation of ` GlowrootLogHttpService ` from ` UnauthenticatedHttpService ` to ` HttpService ` to enhance security by
added calls to setComposite for non - stroke graphics in PageDrawer . java to ensure proper rendering of non - stroke graphics during drawing operations
removed synchronization from the close method in DocumentsWriter and added segment refresh logic in DocumentsWriterPerThread to improve performance by reducing unnecessary
added methods to retrieve multiple choice options and validation constraints in UiBinding . java to enhance property management for multiple choice options and validation constraints
updated method calls to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` for better readability to improve code clarity
bug fix : only update the stored copy of the tree for a full save
refactor condition handling by replacing ` String ` with ` Pattern ` in ` Affix ` and ` Dictionary ` classes to improve flexibility in
updated generic type declarations for KrakenMakerFees and KrakenTakerFees to use diamond operator to improve code
removed import of CharTermAttribute and its usage in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class to improve code readability to enhance maintainability and facilitate future development
removed unsupported encoding check from VectorizedPrimitiveColumnReader to streamline code by eliminating unnecessary error handling
refactor logging logic in HttpSolrCall . java for improved clarity and consistency to enhance readability and maintainability of the code
added a call to destroy the metadata service proxy to ensure proper cleanup of the metadata service proxy
fix ( db ) : fix infinite recursion issue in defaultentityqueryrepository
updated error message construction in HubChangeExecListener . java to include the changelog ID if it ' s null to improve clarity of error messages
improve test coverage of abstractblackboxtestcase .
updated method signatures in CxxPreprocessAndCompileStep to return ProcessExecutor . Result instead of int to improve type safety and clarity in
removed the ` numEvents ` variable and adjusted the range setting logic in ` ObjectStore . java ` to simplify the loop and ensure the query
no effective change - code cleanup - remove unused code
fix potential race condition in entityawareworldprovider . removetemporaryblockentities ( )
removed redundant type checks in IntrinsifyArrayCopyPhase . java to streamline code for better readability and maintainability
do n ' t set logger level to all in test for now
removed the WantedAnywhereAfterFollowingInteraction class and updated exception handling in Reporter . java and its tests to simplify exception management and
added checks for existence of accounts and keys in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that ownerAddress and key are
improve the output of the scriptlauncher by use a treemap instead of a comparator
regenerate gapic - generator - java : update gapic - generator - java with mock service generation fix
replaced ` addProperty ` with ` setProperty ` for metadata properties in ` BaseSingleTreeBuilder . java ` to improve clarity and consistency in property
updated AsmLoader to use interface class loader for class definition and added constructors to initialize AsmLoader with a parent class loader to enhance class
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated the export namespace formatting in Java2TypeScriptTranslator to conditionally use " declare " for declaration scope to ensure correct namespace declaration formatting based
replaced EmptyServerHandler with AbstractHandler and modified the start method to set the request as handled to ensure that the server correctly handles requests and
simplified the listener parameters in HelloInput . java to improve code readability and maintainability
added null check for lhs in AbstractSqmPath to ensure lhs is not null before using it to avoid potential null pointer exceptions
updated package declaration for tests in the oc _ framework _ test _ project . test package to ensure consistency in package structure across test files
refactor BufferedImage initialization and image filtering logic in AwtCanvas . java to improve code clarity and ensure proper handling of different image types
[ gr - 33939 ] startup libgraal from classpath if not in native image .
[ hotfix ] [ test ] remove dataflowportabilityapiunsupported from pardotest
chore : update java microgenerator to 1.0 . 2 add request initialization to sample code
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for these classes
renamed CallStack class to improve clarity to enhance code readability and maintainability
add warn log when max size configuration for map do not allow any data in the map
corrected the spelling of " AST " to " LST " across multiple files to ensure consistency and accuracy in documentation regarding the use of
fix out of bound exception in threadedacousticscorer . getbestjob ( )
replace AssertionError with a return statement in NetHooks . java to improve error handling by returning null instead of throwing an AssertionError
updated method calls in ApplicationControllerFluentLeniumTest . java for consistency and clarity to improve code readability and maintainability by using
added default implementation of ` makeString ` methods across multiple iterable classes to enhance flexibility in string generation across different iterable implementations
updated the order handling in OidcServicesManagerRegisteredServiceLocator to use a constant for default order to improve code readability and maintainability by
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated related logic to allow validation of proposed weak associations based on rules
refactor Deflater class for improved performance to optimize compression performance and reduce memory usage
added a try - catch block that throws an IOException if a Throwable occurs to ensure that the application handles potential exceptions gracefully
added a null and empty content check in VersionTypeBinding . java to ensure that a default version is returned when no content is provided
refactor NearbyListFragment to directly return the place list instead of storing it to improve code readability and maintainability by reducing
change content type check to be case - insensitive to ensure consistent behavior across different operating systems
add ' openssh ' format for private key and private key to spec
refactor ` updateItemLocationsInDatabaseBatch ` to accept a boolean parameter and update folder name suggestion logic to improve flexibility in handling folder
replaced specific Hibernate annotations with a wildcard import and modified entity retrieval logic in InheritanceCacheTest . java to streamline import statements and
updated import path from DefaultOAuth2RequestFactory to DefaultOAuth2RequestFactory and added getUserApprovalRequest method to TofuUserApprovalHandler
fix influxdb naming convention not apply to tag value ( # 645 )
simonstewart : replace system . out . println with a private method dump ( string string , double d , double d )
updated the key used in the cookie check from " Cookie " to " Cookie2 " to ensure compatibility with the new cookie naming convention
added a static method ` classMetadataUnsupported ( ) ` in ` Platform ` and updated its usage in ` Subject ` and ` Platform ` classes to
added functionality to clear all items based on user preferences in OverviewActionsView to enhance user experience by allowing users to choose whether to clear all
updated the ` desiredRepoVersion ` variable to be final and modified the timeout duration in ` ClusterStackVersionResourceProvider . java ` , while
remove memoryleaktest , it ' s not need anymore
updated the return statement in ServletTester . java to include the local host address to improve clarity of the URL by using the local host
allow plotSquared to hook mvdwplaceholderapi into mvdwplaceholderapi
fix partition assignment test by assert cluster size eventually
added singleton implementation for FFIProvider and modified provider loading logic to enable dynamic loading of FFI providers based on Jafl settings
add a test for hierarchical file listing in BatchProcessTest to ensure the functionality works correctly for hierarchical file listing in batch processing
added null checks for objectToSave , collectionName , and mongoPersistentEntity in MongoTemplate . java and corresponding test cases in MongoTemplateTests .
updated the Position initialization to use NODE _ LIST instead of 0 for directInputCount and directSuccessorCount to improve clarity and consistency in
added ` accTradeValue ` field and its getter method in ` BithumbTicker ` and updated related classes to support trading values for
updated log messages to include segment name in multiple locations to improve clarity and traceability of log messages for better debugging and monitoring
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java
replace ArrayList with CopyOnWriteArrayList for headerReaders , dataReaders , and readers in FixedByteMVMutableForwardIndex and FixedByteS
fix typo find by codespell on fossies . org
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerException when destBuffer is not initialized
try to fix the camel - jbang test failure
updated the condition to check if ` beginCycle ` is greater than ` currentCycle ` instead of comparing against ` currentCycle ` to ensure proper
increased the length of generated strings from 6 to 10 in JdbcExpiringCodeStore . java and updated corresponding tests in CodeStoreEndpoints
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure proper matching of unique constraints in the database
updated MediaDetailFragment to handle multiple language codes and replaced string processing with a HashSet to improve code readability and maintainability by utilizing a
do n ' t swallow arrayindexoutofboundsexceptions in findbugs2
add withreferencefilter ( ) / withkey ( ) / withvalues ( ) method to listimagecmd and listimagecmdimpl ( #
camel - 14263 : camel - jms should not allow to configure bridgeerrorhandler on endpoint
added logic to skip lines containing " # ifndef " or " # endif " in OpExclusionUtils . java to ensure proper handling
added return statements in DatabaseCommand . java to ensure proper handling of database commands
added two new Politician instances , p1 , p2 , p3 , and p4 to the HonestPolit
[ zeppelin - 3390 ] use stringutils . isNotBlank ( ) instead of string . length ( ) > 0
camel - 14284 : camel - restlet should use the configured port if available .
removed unused imports and added a case for WALL _ SIGN in SchematicFormat . java to streamline the code and improve clarity
added a system property " hive . query . max . length " with a value of " 100Mb " in QTestUtil . java
do n ' t send server version if ssl be not valid
rename s3 - sink and s3 - sink to s3 - source and s3 - sink for consistency .
updated HiveConf to check if the application name is not equal to " spark . app . name " and modified HiveSparkClientFactory to
corrected variable name from ' white ' to ' included ' in ManagedClassFactory . java to improve code readability and maintain consistency in naming
simonstewart : add support for maximize window on the server
updated methods in LocalCellProviderFactory and AbstractEmbeddedCellBuckOutInfo to use main cell root and BuckPaths instead of embedded cell
updated the assertion in TestXMLEntityExpansion to check for the presence of " entity expansions " in the error message to ensure
modify table offset and length assignments to mask values with 0x7FFFFFFF to ensure proper handling of hexadecimal values for table properties
added a null check for the customized field in DirectMethodHandle to ensure that the form ' s customized field is set to null to avoid potential
refactor buffer allocation and coordinate checks in LineChartRenderer . java to improve code readability and maintainability by reducing redundancy
refactor flavor handling and error messaging in AndroidBinaryDescription . java to improve clarity and maintainability of flavor validation logic
updated buffer assignment from offset to i in LwjglGL11 . java to ensure the correct buffer index is used for rendering
added new classes ` Property ` and ` PropertySuper ` , and created ` TestClassResolutionFail ` for testing class resolution to enhance error handling
do n ' t remove shutdown hook if shutdown hook be disable .
corrected the class name from " FilterChainProxy " to " FilterChjainProxy " and simplified the constructor and debug logging to improve
replaced ` Collections . sort ` with ` Arrays . sort ` for sorting intermediate results to improve performance and readability of the code
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and modified MDTable assignment logic in QueryTypeAnalyser to ensure
replaced the instantiation of ` baseType ` with ` null ` and added literalPrefix , literalSuffix , and localizedTypeName in ` MutableColumnDataType
replaced hardcoded ` ` # container ' ' and ` ` # insertupdate ' ' and ` ` # removedupdate ' ' links with
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
updated paths from " / / osx _ x86 - 64 " to " / osx _ config " in multiple test files to ensure
added sound effect functionality in AllAppsView . java to enable or disable sound effects in the application
changed the exception type from Exception to IOException in the main method to improve error handling by explicitly indicating that the main method throws an IOException
added granularity enabling for the left axis in BarChartActivitySinus to improve the visual representation of the left axis in the chart
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by centralizing version comparison logic
updated ContextHandlerGetResourceTest to use MavenTestingUtils for directory checks and added OS support assumption to improve test reliability and ensure compatibility with
added a ` close ( ) ` method to various classes and modified the initialization of ` JsonAsyncHttpPinotClientTransport ` to ensure proper
fix intermittent test failure on slow machine
[ beam - 4142 ] improve error message for hadoopresourceid . isdirectory ( )
removed unused static imports from IsometricStaggeredTiledMapRenderer . java to streamline code and improve readability by elimin
removed duplicate call to unbindHandle in ItemServiceImpl . java to streamline code by eliminating redundancy
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the codebase
simplified the conditional check for touch target handling in OtherActivityTouchConsumer . java to improve code readability and maintainability
replaced the use of ` Themes ` with a configuration check for the navigation button ' s theme and updated the taskbar button intensity accordingly
simonstewart : throw instead of abort in polybenchlauncher . getlanguage ( )
replaced ` bootstrapMethodIndex ` and ` nameAndTypeIndex ` with ` refKind ` and ` memberIndex ` in the ` ClassWriter
added an ` BlockFormattingContext ` parameter to multiple ` findBox ` and ` findElementBox ` methods in ` BasicPanel . java `
added a method to retrieve standard error output in WorkerProcess and improved error handling in WorkerShellStep to enhance error reporting and provide clearer
added null check for operator and improved error handling in CheckedListReplaceAll . java to ensure proper handling of null operators and provide clearer
added conditional logic to handle socket write operations in SslConnectionTest . java to improve test reliability by controlling the write operation based on the
added and removed listener registration logic in DeviceFlag and made defaultValue final in FeatureFlags to improve listener management and ensure immutability of the feature
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to issue gh - 1114
removed the import of MalformedURIException from StandardRequestHandler . java to eliminate unused dependencies and improve code clarity
update instructorfeedbackeditpage to focus on the end date box instead of the first element
refactor synchronization logic for subscription of trades and user trades in KrakenStreamingTradeService . java to improve code readability and
replaced ` System . err . println ` with ` System . out . println ` in ` ChangeableUrls . java ` to standardize
replaced ` RandomAccessSparseVector ` with ` Vector [ ] ` and added a ` randomAccessRows ` boolean parameter to ` SparseRow
cloudstack - 4891 : do n ' t create volume delete event when volume pool be not set
updated the way the input stream is created based on the HADOOPJT configuration to ensure the correct plan path is used based on
use vendored guava guava instead of guava vendored guava to fix build
memorycallgraphbuilder : register memorycctprovider before register internal state
fix an npe in the conference chat manager when the protocol provider do n ' t have an operation set for multi user chat .
added validation to ensure the update file can be written before proceeding to prevent illegal user action exceptions during file operations
added a new ` FolderSyncActivity ` class and modified ` DrawerActivity ` to launch it to enhance folder synchronization functionality and improve user experience
[ hotfix ] [ test ] use try - with - resources in sequentialchannelstatereaderimpltest
update spanishtreenormalizer to handle % and % as well a %
replaced the usage of ` PointReader ` with ` getPackedValueSlice ` in ` SimpleTextBKDWriter . java ` to
added LocaleRandomizer and its corresponding test class to enhance random number generation functionality for different locales
added unit tests to verify MIME type handling for " application / x - font - printer - metric " and " application / x - font -
[ netbeans - 4892 ] upgrade to netbeans 9.0 . 0 . final and update version to 9.0
removed the ` AccessController . doPrivileged ` wrapper around the ` run0 ( ) ` method in ` TCPTransport . java ` to simplify the code
updated the read timeout handling in Http2AsyncParser to use a default value of 0 to ensure that the socket read timeout is set correctly when
increased the default watch initial delay from 120 to 600 milliseconds to allow more time for the watch to complete before proceeding
updated the primary key column error message to include the column name in the error message to improve clarity of error reporting for better debugging
[ te ] update date format when send to jira api ( # 6563 )
refactor header generation to use a priority generator instead of a lease pool to improve code readability and maintainability by centralizing priority generation logic
added a maximum scalar replace code size limit and updated the condition for scalar replacement to ensure scalar replacement only occurs when the entire class does not exceed
added DATE _ TAKEN to the projectionTest array and updated folderSortOrder to include DATE _ TAKEN to enhance sorting capabilities for media
updated rectangle drawing parameters in TexturePacker2 . java to correct the positioning of images to ensure correct rendering of images in the texture pack
added WebSocketUpgradeFilter handling to JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to ensure filters are properly configured for WebSocket connections
added shutdown calls for validateSignService and trxHandlePool in multiple classes to ensure proper resource cleanup and prevent memory leaks
added ` RawJsonRequestBodyAnnotationProcessor ` and registered it in ` JaxrsSwaggerGeneratorContext ` to enable handling of raw JSON request bodies
added a new method ` newTarget ` to create a ` Target ` object with specified parameters to enhance logging capabilities by allowing customizable target types
modified the return statement in BeanContainer to create a new ArrayList instance and added a new test class for BeanContainerTests to enhance functionality and ensure
hbase - 25827 addendum fix metric name in testmetricsregionserver
camel - 14263 : fixed the issue that cachedoutputstream do not release the fileinputstreamcache when exchange be complete .
added device ID setting for position in TeltonikaProtocolDecoder to ensure proper device identification during decoding
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( ) . readFirstLine ( ) ` to
added null check for operator before visitAssignOp in Attr . java and created a new Test class in FailOver15 . java to ensure proper
added a boolean flag ` enableAccountHandling ` and modified ` mixinRegistry . onCreate ` to conditionally call ` mixinRegistry . onCreate
improve performance of isochroneresource . getexteriorring ( point ) .
updated DrillViewTable to accept a list of paths instead of a single view and modified the constructor accordingly to enhance flexibility in view management
added default parameters to the PooledByteBufAllocator constructor in PooledByteBufAllocatorL . java to enhance flexibility by allowing configuration of
updated the handling of ` double [ ] ` to ` short [ ] ` in ` ObjectInputStream ` and added a new class ` CloneArray `
added LLAP _ IO _ THREADPOOL _ SIZE configuration to configure the number of threads for low - level IO thread pool to improve flex
add support for java 11 + and java 8 + in securityservicesfeature
updated latitude and longitude range checks in LatLonGrid . java and added a new test for growing polygons in TestLatLonGrid . java
implement expectedconditions # invisibilityofelementwithtext ( by locator , string ) and # refreshed ( by locator , string )
added an additional parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its access level to enhance file replacement functionality by allowing
added a test for retrieving the enclosing object of ` SomeInnerClass ` in ` ReflectorTest . java ` to ensure that the outer class
updated the configuration key from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources "
updated HubChangeExecListener to include author information in log messages to improve clarity of communication failure messages for better debugging
added properties list and getter / setter methods to Link class and updated QuickLinksConfigurationModuleTest to handle properties to enhance link configuration flexibility and
removed duplicate @ EqualsAndHashCode annotations in InitialConfig and YamlConfigFileDTO , and added a toString method in YamlConfigFileDTO to improve code cl
updated generic type parameters in SimpleForwardingServerCall and SimpleForwardingClientCall configurations to improve type safety and clarity in the code
added CallerSensitiveAdapter annotation and modified forName methods in mmm Class . java and ppp Class . java to enhance security by ensuring caller context
refactor : use hamcrest ' s isemptyornullstring instead of hamcrest ' s isemptyornullstring
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve clarity and specificity of the
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow access to the method from other classes
updated imports and modified Cucumber test methods in TimeStepdefs . java for improved clarity and functionality to enhance code maintainability and
add miss spark _ isolated and spark _ recessive pattern to the banners .
updated the ` RestInvocationHandler ` to use ` getUri ( ) ` instead of ` ExchangeSpecification ` and modified the constructor to accept a `
updated print statements in RecordGenerator . java for clarity to improve readability and maintainability of output output
[ hotfix ] [ kafka ] remove auto commit sync in kafkaproducer
removed lock release logic and updated output statements in LoggingExecutor and StandardLockService to ensure proper lock management and improve logging functionality
updated @ SuppressWarnings annotations in AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to include additional suppress warnings to improve code clarity and suppress warnings
pdfbox - 4892 : remove unnecessary synchronization from database . closefiles ( )
refactor property resolution logic in SpringBootAutoConfigurationMojo . java to improve clarity and maintainability of property resolution logic
updated the ticker reference from baseSymbol to counterSymbol in VirtExMarketDataService . java to ensure the correct ticker is used for
camel - 13663 : camel - core - add a dump module to the camel - core module to enable the use of the dump tool
updated the way testId is added by using System . getProperty instead of UUID . randomUUID to ensure the testId is retrieved from the system
added synchronization to date and number format parsing in DefaultJobParametersConverter to ensure thread safety when accessing shared resources
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated heightmap height scale from 256 to heightScale to allow dynamic scaling of the height map
updated equality check in SecurityConfig to use assertNotSame instead of equals to improve clarity and accuracy of security comparison
updated the default value of dumpPartitionId from a boolean to false to ensure that the default value of dumpPartitionId is set to false
added UTXO test cases and assertions in UTXOSetTest . java to ensure proper functionality and validation of UTXO outputs in
[ java ] fix false positive for unused local variable in java 9
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated jobRestartProperties handling in JsrJobOperator and added a test for new job parameters overriding previous restart parameters to ensure correct job restart properties
added a protected boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ( ) ` to
removed redundant assignment of the principal variable in JaasAuthenticationHandler . java to streamline the code by eliminating redundancy
refactor core closing logic to use an executor service for better resource management to improve thread safety and resource management during core closure
added null check and visibility logic for mActionsView in RecentsView . java to ensure mActionsView is visible when fullscreenProgress
refactor parameter handling in RunIdIncrementer to improve clarity to enhance code readability and maintainability by reducing redundant null checks
refactor BasicEntity and TestUtil classes to improve code organization and readability
added assertions to verify the number of matched devices in SchemaRegionTestUtil . getMatchedDevices to ensure the test accurately reflects the expected
[ 3.0 ] log metric event error in tryinvoke ( )
added a check for ` max ` before calculating centralities in ` EigenvectorCentrality . java ` and created a new `
updated port handling in LookupIPv6 . java to use a random port instead of a hardcoded port to improve reliability and maintainability of
mondrian : fix a bug in the geometry generator that cause it to fail to load .
updated the Amplifier setting in BlockEntityBeacon . java to reset the Amplifier to zero instead of a fixed value to ensure
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable http client health check by default
updated the type of ` groups ` from ` List < Class > ` to ` List < Class < ? > > ` and added validation checks
updated the @ key and @ run annotations in bug8057791 . java and added a timeout value to improve test reliability and ensure
fix # 322 : make thread daemon in statisticreportercomponentimpl
simonstewart : do n ' t replace \ d with a space in the version string .
added a call to ` ReflectionCheckLinker . checkReflectionAccess ( type ) ` in ` JavaAdapterFactory . java ` to ensure proper
( chore ) camel - aws2 - sjms : add lazysessioncreation = true to the camel - mina unit test
updated initIOContext method in CombineHiveRecordReader and HiveContextAwareRecordReader to include RecordReader parameter to enhance flexibility in initializing
deleted the ClassLoaderHolder and LoaderManager classes from the codebase to streamline the codebase by eliminating unnecessary classes
added a method to handle configuration changes and modified root removal logic to improve robustness by ensuring only writable files are removed and preventing unnecessary operations
added try - catch blocks around registerSessionCallback and unregisterSessionCallback calls to handle potential exceptions during callback registration and unregistration
updated index paths in TestBackwardsCompatibility . java to remove the " src / test / org / apache / lucene / index / "
refactor AkkaRpcServiceUtils to use a BiFunction for creating AkkaRpcService to improve flexibility and flexibility in
[ hotfix ] [ test ] set mapreduce . map . maxattempts to 3 in testexportsnapshot
pdfbox - 4892 : remove dead code , a suggest by valerybokov
add a new test class ` SslConnectionTest ` to verify SSL connection behavior to ensure that the SSL connection is properly closed before fill
added validation for address and family types in InetAddress and NetworkInterface classes to ensure that only valid IPv4 and IPv6 addresses are processed , improving
added a test for date serialization in a collection in DefaultTypeAdaptersTest . java to ensure correct handling of date values in JSON serialization
refactor Message class to improve code readability to enhance maintainability and facilitate future development
added debug logging for SQL generation and modified condition for first update key handling to improve traceability of SQL generation and ensure correct initialization of the first
corrected the loop condition in TableOutput . java to correctly account for the difference between maxWidth and runningWidth
pdfbox - 4892 : simplify code , a suggest by valerybokov
fix formatstringchecker priority for format string with { 0 }
[ java ] add ` ` ignoreforeachdecl ' ' property to localvariablecouldbefinalrule
updated PDFExporter and PDFExporterTest to use PDFTarget instead of Les Miserables . gexf and set full compression settings to
added unit tests for the LdapUserDetailsMapper class to ensure correct role attribute mapping functionality
add ldap read timeout config ( in milli sec ) to make ldap read timeout configurable
refactor multiple test classes to improve code organization to enhance maintainability and readability of the codebase
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and readability
rename ` shouldCacheIterator ` to ` shouldAvoidAllocation ` for clarity to improve code readability by using a more descriptive variable
added a condition to check if the state handler is invalidated in the gesture handling logic to ensure proper handling of gesture states when the handler is invalidated
updated the maximum distance for folder creation from 0.6 f to 0.55 f and removed unused rotation variables to improve the responsiveness
updated OciConfigConfigSource to use ConfigProviderResolver for configuration resolution to improve code clarity and maintainability by using a more modern
refactor Testjsig class to improve code readability to enhance maintainability and reduce complexity
fix the mana item not take into account the stack ' s count
regenerate client with updated copyright year ( # 4382 )
removed the serialVersionUID field and added a @ SuppressWarnings annotation in P11TlsPrfGenerator . java to suppress serialization warnings and improve code clarity
refactor validation logic for tsFile to check if the file is empty before validating to improve error handling and ensure proper cleanup of resources when validation
added new files Switch21 . java and Switch19 . java with switch pattern matching and null handling methods to implement a switch - case structure for
updated error messages in ComparableSubjectTest . java to simplify clarity to improve code readability and maintainability
replaced ` Source ` with ` DOMSource ` in ` StreamHelper . java ` and added a new test class ` TestStreamHelper .
updated capacity check and improved error message formatting in Int2ObjectCache . java to enhance code clarity and ensure proper array size validation
removed sorting of security filter chains and added a new test for ordering filter chains in WebSecurityConfigurationTests to ensure correct ordering of security filter chains
removed ` TimeInForce . GTC ` from the ` OrderType ` and ` recvWindow ` parameters in the ` BinanceTradeService
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update method implementations to improve code clarity and ensure minimum and maximum values are
replaced the character KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to
camel - 15836 : camel - jms - provide documentation and json schema for the jms component
added error handling for retrieving the upper bound in SourceUtils and created a new test class for it to improve robustness and ensure correctness of
refactor code to use a dedicated method for creating FilterPredicateLeafBuilder based on Parquet type to improve code readability and maintainability by
updated artifact name handling in BatchPropertyBeanPostProcessor and improved test setup and teardown methods in JobContextFactoryBeanTests to ensure proper resource management
added a loop to read all certificates from the input stream and generate a unique server key for the trust store to ensure that only valid certificates are
modified the handling of default boolean values in mmm Config . java and added a new DnsFallback . java class for testing DNS fallback functionality to
ww - 4352 add exception to log message when tag write fails
changed the success field from boolean to String and updated related JSON properties to improve clarity and functionality of the DepositAddress class
updated the return statement in WindowsSecurity . java to use a lambda expression instead of an anonymous class to improve code readability and ensure proper resource
removed " address " scope from the OAuth2 scope configuration in CommonOAuth2Provider . java and its tests to simplify scope configuration by removing unnecessary
refactor ` ManagedSelector ` to use a custom ` Start ` class for managing the ` _ started ` state to improve code readability and
added hue and saturation calculations using BigDecimal in WLedBindingConstants and WLedHandler to enable dynamic color selection based on segment index and improve color
replaced the use of ` Stream ` with a ` Set < String > ` for validating calls to improve code readability and maintainability by
added a method ` caseJSRInst ` to the ` InstSwitch ` class to provide a way to handle JSR instances in the switch
add transactiontemplate to subscriptionactivatingsubscriber so that it do n ' t need to be run in a transaction .
updated SQL query construction in DBMSProcessor . java to use SQL update and insert statements instead of TRUNCATE to improve performance by avoiding
remove elevation setting for contact in ContactItemInflater for compatibility with devices running Lollipop or higher
renamed variable ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity and consistency in variable naming
added ` AccessController . doPrivileged ` for file operations in ` SandboxFileManager . java ` to ensure proper security when reading and writing files
refactor Groovy parser and printer to improve handling of binary operations to enhance readability and maintainability of the code
updated warning message format in MetaDataFetcher . java to include the exception class name to improve clarity of error messages for better debugging
updated character handling in RecordInputStream and UnicodeString classes and added a test for reading and writing Unicode strings to improve data integrity and ensure correct functionality
added a new test method ` downloadsFileWithNorwayCharactersInName ` to ` FileDownloadViaProxyTest . java ` to ensure
replaced RuntimeException with CancellationException and added cancellation checks in AsyncResource . java and FingerprintScannerSample . java to improve error handling and provide
added null check for statistics before processing cache to avoid potential NullPointerException when statistics are null
added a test method to remove an object from an explicit collection in MongoTemplateTests . java to ensure that the removal of objects from an explicit
update copyright year from 2015 to 2022 in multiple Java files to ensure consistent and accurate copyright year across the project
[ hotfix ] fix checkstyle violation in coder
added a flag to track if the clear all button is fully revealed and updated scroll logic in RecentsView and PagedView
added a COMMON _ HMS _ PROPERTIES map and refactored related code to use it to improve encapsulation and maintainability of the
refactor error handling to use a new method ` isAddressInUse ` for better clarity to improve code readability and maintainability by redu
added a command - line argument to set the test class path in TestNestmateAttr . java to ensure the test class path is
updated verbose schema detail type from VERBOSE to verbose _ schema in Grep . java to improve clarity and consistency in logging output
fix checkstyle issue and add miss @ override annotation
# 113 - add support for nested sub - transactions ( # 113 )
replaced a fixed fetchSize with a ThreadLocal < Integer > fetchSize in QueryProcessExecutor . java to improve thread safety and manage fetch
[ java ] use no - op idle strategy for embedded ping pong .
refactor the handling of blocking HTTP calls by introducing a new method ` handleBlockingCall ` to improve code readability and maintainability by
added HDP _ VERSION handling in SliderAppsViewControllerImpl . java to ensure the application uses the correct HDP version configuration
refactor ` JavacProcessingEnvironment ` to use private fields for ` loaderClass ` , ` jusl ` , and ` loader
added DeepCloner class and modified parameters in ParameterizedRobolectricTestRunner and RobolectricTestRunner to enable deep cloning
added a bind for the JETTY _ SHOW _ STACKTRACE property in ResourceBase . java to disable stack trace display for improved debugging
added a check for the type of ' obj ' in NativeObject . java to return null if the object is an OBJECT type to prevent potential
replaced specific OopField declarations with a common method for obtaining well - known klasses to improve code clarity and maintainability by
updated JwkKeyListView to use PublicKey instead of RSAPublicKey and added Base64 encoding for modulus and exponent in JSON serialization to enhance
do n ' t spawn isolates if useonlywritablebootimageheap .
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for unsupported MBean methods
removed the import of OrderClassLoaders from MavenPluginCollector . java to eliminate unused dependencies and improve code clarity
replaced the ` Validator ( ) ` method with ` validator ( ) ` and added ` getOwnerAddress ( ) ` method in multiple actuator
http : / / issues . apache . org / activemq / browse / amq - 4237 - add example for amq
replaced direct calls to ` sendCommand ( ZCOUNT , key , byte [ ] , byte [ ] ) ` with conditional logic for converting
added handling for empty indices in the ProtobufAnnotationSerializer and DependencyGraph classes to ensure proper serialization and deserialization of edges with empty indices
[ java ] remove the entry from the asynccommandid set when remove a correlationid .
added saveConflict calls in FileDataStorageManager and FileDownloader to handle file conflicts to ensure proper handling of file conflicts during file operations
updated generic type usage in ExecutionContext and related classes for improved type safety to enhance code clarity and reduce unchecked warnings
replaced instances of ` StrUtils . splitFileNames ` with ` splitFileNames ` across multiple filter factory classes to streamline file name
added support for " remarksReporting " and " useInformationSchema " properties for Oracle and MySQL drivers to ensure compatibility with Oracle and MySQL databases
updated the MockMethodInterceptor instantiation to include a handler parameter and added a serialVersionUID to ensure compatibility with the latest features and fixes for deprecation warnings
replaced the use of ` Date ` with ` System . currentTimeMillis ( ) ` for time measurement in ` FileChangedExclusiveReadLockStrategy .
[ hotfix ] [ table - planner - blink ] add classloader wrapper to executioncontext
added onBufferChanged method to TerminalView and modified buffer height handling in TerminalTextViewOverlay to improve UI responsiveness by notifying the
added a null check for ` contents ` and adjusted formatting in ` processConfigFile ` method to ensure proper handling of null values and improve code read
updated freeze operation handling in OperationActions and removed unused disableFreezeAction method in OperationRegistry to ensure compatibility with TVM freeze v2 and
added support for insecure trust manager configuration in ` TlsConfig ` and ` TlsUtils ` to enhance security by allowing configuration of insecure trust
refactor code to simplify the search logic for source and class paths in JavadocTool . java to improve code readability and maintainability
refactor edge column handling in ExporterGDF by replacing nodeColumns with edgeColumns and introducing edgeIdColumn to improve clarity and
added cascade = CascadeType . ALL to the OneToOne relationship in DefaultUserInfo . java to ensure that the one - to - one relationship
refactor message . equals ( ) to use array . equals ( ) instead of messageid . equals ( ) .
updated the character encoding for the " X - ISO " header in AsyncProvidersBasicTest . java to ensure proper handling of Unicode characters in response
[ hotfix ] remove unused iskeyserializertypevariablesized ( )
added a method to retrieve the static permissions from a ProtectionDomain and updated the subjectPd assignment logic to improve accessibility of static permissions
add a null check for the recipe in recipehandlerbrewery and recipehandlerelventrade , and fix formatting in cachedfloating
refactor parsing logic in mmm Parser . java and ppp Parser . java to improve clarity and maintainability of parsing logic
added a ` showConnectionErrorPopup ` method in ` UploadMediaDetailFragment ` and modified error handling in ` UploadMediaPresenter ` to improve user
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to check for unsupported media types to ensure
updated bitwise operation from ` 1 < < < bitIndex > ` to ` 1L < < bitIndex > ` in NodeBitMap .
refactor import layout handling in ImportLayoutStyle . java to improve code readability and maintainability
replaced the ` gitBashConfigValue ` with ` useStdIn ` and updated related logic in ` ConsoleUIService ` to enhance
replaced mock implementation of AccountManagerCallback with TestAccountManagerCallback and updated assertions to improve test reliability and clarity by using a more
do n ' t cache enclosingtype in analysistype . getenclosingtype ( )
rename method names from ` getEntry ` and ` getConcatSeparator ` to ` entries ` and ` concatSuffix ` across multiple classes to improve cl
removed the timeout parameter from the map . set method call to simplify the code by eliminating unnecessary timeout handling
fix ( client ) : fix npe when consumer be not register or unregister ( # 4370 )
[ java ] generate the source identity before send a command to the driver .
added a new file ` TopTabAction . java ` implementing the ` Presenter . Toolbar ` interface to provide functionality for displaying a "
camel - 18443 : dynamicrouterruntime should use reactivehelper to avoid thread leak . thanks to benjamin
updated imports and modified test class annotations in AggregateItemReaderTests . java to improve test structure and ensure proper setup and teardown methods
updated Procedure constructor to include generic type parameter to enhance type safety and improve code clarity
added functionality to retrieve and display the number of wikidata edits for users in AchievementsActivity and updated network URLs in Network
added a validation check for the length parameter in OfflineSorter to ensure it does not exceed Short . MAX _ VALUE to prevent illegal argument exceptions
do n ' t report load of min value for long . min _ value in dumbmethods
updated multiple dataset classes to improve consistency in naming conventions to enhance code readability and maintainability
enhanced error message in InvalidTopologyTemplateException to include acceptable credential types to improve clarity of error messages for better debugging
updated random number generation in TestVectorUtil . java to ensure a fixed range for the first and second values to improve randomness and prevent potential
changed the return type of the ` compareBy ` method from ` int ` to ` long ` and simplified time comparison logic to improve performance and
added SSL property handling in TestUtil and updated related assertions in PGPropertyTest to ensure proper SSL configuration and improve test reliability
simonstewart : enable safebrowsing by default for chromedriver
added null check before cloning oldConfig in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerException when oldConfig is null
added a condition to check if transcoding is disabled in DLNAResource to ensure proper rendering behavior when transcoding is disabled
updated logic to return an empty list when ` gherkinRows ` is empty and added a check for empty lists in ` DataTable ` to
added a custom ignore tag for section native code in RobustJavaMethodParser to improve flexibility by allowing custom code to be ignored
camel - 16407 : do n ' t throw optimisticlockingaggregationrepository . optimisticlockedexception if update fails .
fix @ configurationproperties ( ` ` parent ' ' ) for @ configurationproperties ( ` ` parent ' ' )
updated ` PreferencesActivity ` to extend ` LimitlessIDEActivity ` instead of ` IDEActivity ` and modified padding settings in ` PreferencesActivity
deleted the ClusterNodeInfo . java file to the functionality is no longer needed in the codebase
removed unnecessary whitespace in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output statements for " Standard ciphersuite chosen " and " Legacy ciphersuite chosen " in ServerHandshaker . java to improve debugging
updated template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle single templates more efficiently to improve user experience by
added a nodeLabelMap to track node drafts and modified the handling of duplicate node labels to improve error reporting and ensure unique node identifiers are
added a new file R2303044ListSelection . java that implements a GUI with a List to demonstrate the functionality of
[ java ] check for client timeout instead of keepalivetimeout when create a new publication .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerException when mWorkspace is not initialized
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to verify the functionality of ` compound `
replaced the calculation of row count with a new variable to store row counts to improve code readability and maintainability by reducing redundancy
added path URL formatting and improved parameter handling in SpringBootDocBuildTemplate . java to enhance URL formatting for API methods and enhance parameter management
fix some code smell and remove unused code .
replaced DistBuildCachingEngineDelegate with CachingBuildEngineDelegate and modified the handling of source file materialization based on remote configuration to improve
improve error message when json can not be parse
added a conditional check for DEBUG before logging the debug message in WidgetsModel . java to ensure logging only occurs when debug mode is enabled for
refactor Console and Scanner classes to improve code readability and maintainability
updated the calculation of numTerms in SimilarityBase . java and added a test for discount overlaps in TestSimilarityBase . java to ensure
added a check for the presence of the ` send ` method in ` SimpleMailMessage ` and ` MimeMessageItemWriterTests ` to ensure
added exit and quit methods to Global . java and removed them from ScriptingFunctions . java to streamline code by consolidating exit and
updated LoanBrokerGateway and LoanBrokerSharkDetectorDemo to use a context variable instead of a local variable to improve code readability
rename methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in naming conventions
server : fix the npe in the vmware web service request when the cookie be miss .
swapped the order of authority assertions in ResinAcegiAuthenticatorTests . java to ensure consistency in authority retrieval order
updated bigIntegerToBytes method to specify a size of 32 bytes to ensure compatibility with larger data sizes
changed the property key from " fml . disabledMods " to " fml . modStates " to align the property key with the
refactor account selection and selection handling into a separate method for clarity to improve code readability and maintainability by reducing duplication
[ hotfix ] [ sink ] improve error message when connect to client
added error handling for unexpected empty simulation results in ValidatorContractController to ensure proper contract execution by throwing an exception when unexpected results are encountered
updated TexturePackerFileProcessor to handle empty JSON files gracefully to improve robustness by avoiding null pointer exceptions during JSON parsing
removed null check for datasource and datasourceJNDI in PooledConnection . java to streamline code by eliminating unnecessary checks
increased TARGET _ MB and WINDOW values from 10 , 000 , 000 to 1 , 000 , 000 and introduced a sink object for
added null checks for currentConsole before invoking write methods to avoid potential NullPointerExceptions when currentConsole is not initialized
added a credential refresh delay of 100 milliseconds in KinesisConfigUtil to improve user experience by allowing longer refresh intervals
replaced AlertDialog with a dedicated method showInfoAlert for displaying information to improve code readability and maintainability by reducing duplication
added a new parameter ` pack ` to the ` test ` method in ` T4501661 . java ` to support package - specific
updated Jetty module version from " 1.7 . 0 _ 60 " to " 1.8 . 0 _ 31 " and modified dependency
updated import statements and added a method to check if a dependency is provided before adding it to the list to improve code readability and ensure only
added a HashSet to manage ZipFileInputStream instances and modified the release logic to ensure proper resource management and avoid potential memory leaks
corrected the spelling of " DATA _ MATRIX " to " DATA _ MATRIX " across multiple files to ensure consistency and
added logic to run active and idle methods based on keyRanges size in SequenceGeneratorSource . java to ensure proper handling of non - empty key
fix typo : getcurrentyactiveconnections - > getcurrentactiveconnections
replaced ` findAny ( ) ` with ` findFirst ( ) ` and added ` getAnnotations ( Class < T > type ) ` method to
added support for " ppc64 " and " ppc64le " architecture checks in Bits . java and ByteArrayAccess . java to enhance
updated the exception message format in RoboMonitoringInstrumentation . java to improve clarity of error messages for better debugging
updated waitWithDeadline parameters from COMMIT _ TIMEOUT _ MINUTES and ROLLBACK _ TIMEOUT _ MINUTES to Long . MAX _ VALUE
[ test ] fix dateutiltest failure on window
refactor BytesRef class to improve code readability to enhance maintainability and reduce complexity
added a Toast message to indicate that YouTube Player does not work on Lollipop yet and waiting on an update from Google to
added error handling for unterminated dollar quotes and named dollar quotes in SQL parsing to ensure proper parsing and error reporting for SQL syntax errors
fix a nullpointerexception in anysoftkeyboard . vibrator . getprimarycode ( ) .
updated table border and background color formatting in DotRenderer . java to improve readability and maintainability of the code
added a method to check if a configuration variable is encoded in HiveConf . java and updated SetProcessor . java to use this method to improve
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class for improved readability to enhance maintainability and facilitate future development
fix wavefrontconfig . defaulturiimplementationworkswithproxyuri ( # 3903 )
removed BitmapLruCache initialization in TimeLineCursorAdapter and added image loading functionality in NetworkedCacheableImageView to improve image loading efficiency
removed the ` View ` parameter from the ` ofFloat ` method calls across multiple classes to simplify the method signature and improve code clarity
updated controller version handling in DependencyBank and BuildScriptHelper to ensure compatibility with the latest version of the Gdx controllers
refactor LaunchedURLClassLoader to improve code organization to enhance maintainability and readability of the code
refactor JDBC query handling in DataSourceHealthIndicator to use DataAccessUtils for column count validation to improve robustness by ensuring the correct column count
add cache control to layout tag for no - cache
updated warnMsg format to use Locale . ENGLISH to ensure consistent string formatting across different locales
modified the constructor of SolrQueryParser to include an Analyzer parameter to enhance flexibility by allowing custom query analysis
updated copyright year from 2016 to 2017 and modified imports in multiple Java files to reflect the new copyright year and clarify license terms
removed an unnecessary semicolon in MainTest . java to clean up the code and improve readability
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper initialization of VectorizedRowBatch with default size
updated parameter from templateName to req . getName ( ) in StatementGenerator . java to improve clarity by using the request ' s name instead of
removed the isTypeMatch method from AbstractConfig . java to simplify the code by eliminating unnecessary type matching logic
[ java ] reset the session timestamp when the offer operation be complete .
renamed methods ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll `
make bootstrapinserter only build bootstrap static block if there be no bootstrap annotation
hbase - 25836 tabledescriptorchecker should use tabledescriptorbuilder . getvalue ( ) instead of tabledescriptor . getmaxfilesize (
replaced ` maxCommits ` with ` requestedCommits ` and updated the calculation of ` numCommits ` in ` BranchGraphServlet . java `
updated method signatures to include ` InvocationTargetException ` and modified ` invokeLater ` to ` invokeAndWait ` in ` bug6794831 .
added BUILD _ ID constant and modified metadata handling in CachingBuildEngine to improve clarity and maintainability of build information management
removed unused imports for TxInputUtil and TxOutputUtil in TransactionCapsule . java to streamline code by eliminating unnecessary dependencies
removed duplicate call to markAsDone ( future , channel ) in HttpProtocol . java to streamline code by eliminating redundancy
added import for TezConfiguration and used its copyInto method in TezConfigurationFactory to facilitate the use of TezConfiguration
added a null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is not initialized
simplified the conditional statement in CustomPlaybackOverlayFragment . java to improve code readability and maintainability
added a ` forget ` method to the ` OpenALAudio ` class and modified the sound stop logic to check for null before stopping the most
fix position discontinuity reporting in simplebaseplayer
added multiple DecimalFormat instances and added multiple NumberTickUnit instances to improve text formatting for better readability and usability
replaced instances of ` TargetGraphAndBuildTargets . builder ( ) ` with ` TargetGraphAndBuildTargets . of ( ) ` to
removed the IndexFileNameFilter class and simplified file name checks in IndexFileDeleter . java to simplify code and improve readability by elimin
allow for dummy container to check the entire entity ' s collision bound box for ladders instead of just the entire entity ' s collision box
added a default compression level parameter to multiple methods in the ApkBuilderStep and SignedJarBuilder classes to enhance flexibility in handling different compression
added a test to verify that static fields in the generated JAR file include static fields to ensure that the generated JAR file correctly includes static fields in
replaced UNDEFINED _ FIELD _ SIZE with UNDEFINED _ METRIC _ SIZE and updated related cases to support BYTES data type to improve accuracy in metric
updated string formatting in multiple test files to ensure consistent line breaks to improve readability and output formatting in error messages
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed unnecessary
added caching functionality and updated test cases in SpringDataJPAJoinFetchPaginationTest , SpringDataJPAJoinFetchPaginationConfiguration , and For
mary : add locale prefix to pronunciation . xml and pronunciation . treepath .
added null post body handling in SimpleHttp and updated test cases in TestHttpPlugin to ensure proper handling of null POST requests and improve test coverage
added dispatcher to ClientSideSlb and shutdownNow method in ClientSideSlbTest to improve resource management and ensure proper shutdown of the dispatcher
updated texture height adjustment logic to account for vertical flipping to ensure correct texture positioning based on vertical orientation
improve error message for unknown property on discovery strategy
added a null check for contextPath in MetricsPublisher . java to ensure contextPath is set to " NA " when it is null to avoid potential NullPointerException
[ drools - 3390 ] reinit all defined class , not just the current one ( # 3390 )
added B _ TREE _ MAP _ ROOT _ HEADER value and validation in BTreeMap . java and SerializationHeader . java to ensure the
added support for ` precompiled _ header ` in ` AppleDescriptions ` and improved error handling in ` AbstractCxxSourceRuleFactory
replaced ` WeakReference ` with ` AccWeakReference ` and added security context handling in ` ImageWatched . java ` to enhance
updated visibility of ` findNextIndex ` method in ` ObjectSet . java ` and modified the removal logic in ` OrderedSet . java ` to
changed the initialization of the isDirect variable from true to false to ensure the isDirect variable reflects the current state of the object
mary : fix return value of audioeffecthelpTextsmap . get ( effectname ) in maryclient . getaudioeffecthelptext
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 in Actor and Group classes to improve
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) in randomaccessreadbuffer . read ( byte
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is not initialized
updated border spacing logic in CellLayout and DeviceProfile classes to differentiate between folder and non - scalable grid layouts to improve layout consistency and
refactor valueNumeric and defaultValueNumeric initialization to use a new ValueNumeric class to improve code readability and maintainability by encapsulating parsing logic
added a condition to return ` _ deferred ` for deferred authentication in ` FormAuthenticator . java ` to ensure proper handling of deferred responses in the
updated command - line argument checks to use " -- add - to - start " instead of " -- module - startd - ini = "
added a default partition value and updated dynamic part value handling in DynamicPartitionFileRecordWriterContainer to ensure a default partition value is used when no
[ hotfix ] [ stream ] add nullability annotation to streamnode . operatorfactory
add classifier to defaultartifact ' s tostring ( ) method
camel - 14850 : camel - kafka : fix offsetstaterepository . getstate be call twice for kafka consumer
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to provide clearer feedback when a dependency is missing in the classpath
fix jabber account registration wizard : enable gmail notification by default
doc : [ cryptokey ] fix typo in cryptokey . java and cryptokeypb2 . java
updated LumberjackMultiThreadTest to use a configurable concurrency level to improve test reliability by adjusting expected message count based on available
fix npe in player . getplayerdisplayname ( ) when player be dead
camel - 14284 : fix typo in javadoc of exchange
api update : api key and secretkey must be specify with apikey , not secretKey .
refactor switch statements to if statements in MfaProvider , JdbcMfaProviderProvisioning , and idleTimer classes to improve code readability and
refactor AbstractMetaDataExportMojo class for improved clarity to enhance maintainability and readability of the code
added handling for SQL integrity constraints and improved exception messaging in Hive to ensure users are aware of materialized views that use a materialized table
corrected the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency with the
added a new file ` RoboExecutorService . java ` that extends ` org . robolectric . android . util . concurrent . Rob
added conditional logic to handle root groups in the GroupTreeView to improve group management functionality in the user interface
updated the method signature of ` buildServiceNameAndSpanName ` to check if the path starts with " / " and modified the condition to check
refactor argument handling in TestDynamicNumberOfGCThreads for improved clarity and consistency to enhance code readability and maintainability by
replaced ` ImmutableFlavor ` with ` ImmutableSet < Flavor > ` and updated related methods in ` CxxPlatforms ` and `
updated SQL creation command to include options and parameters in CreateTable and CreateTableDeParser to enhance flexibility in handling table creation options and improve
updated background color setting in ChatViewerFragment to set alpha to improve visual consistency and visibility of the chat background
test : migrate ctiteratortest to junit 5 ( # 4352 )
added token . clear ( ) and result . clear ( ) methods to CharTokenizer , KeywordTokenizer , TokenStream , Tokenizer , and Documents
add a test to make sure we do n ' t crash on block statement
updated generic type parameters in StateMachineConfiguration and StateMachineFactoryConfiguration classes and added null checks for configurers to improve type safety and provide
danielwagnerhall : remove workaround for link locator in selenium - backed selenium
updated StringConverter to set maximum and minimum fraction digits for BigDecimal and Float types to ensure proper formatting of floating - point values and improve accuracy in
aggregatelifecycletest . getcurrentscope ( ) now return the current scope of the current unit of work rather than the managed
updated touchable insets settings in TaskbarDragLayerController to improve user interface responsiveness
removed a conditional check for the ' ~ ' character in the FencedCodeBlockParser to streamline parsing logic by eliminating unnecessary
added support for a socket timeout property in multiple classes to enable configurable timeout settings for socket operations
added a sleep delay of 500 milliseconds in ElementAttributeTest . java to handle potential interruptions during test execution
added UTF - 8 encoding to InputStreamReader in HttpUtils . java to ensure proper character encoding for input streams
refactor List class to improve code readability to enhance maintainability and facilitate future development
added URI handling in AsyncFileImpl and updated context handling in AsyncFileImpl to improve error handling and ensure proper context management during file operations
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine to indicate that these classes are stable and should not be used
fix npe when there be no vsp device configure on the physical network
renamed ` retryUploads ` method to ` retryFailedUploads ` and updated its logic to handle failed uploads more accurately to improve clarity
updated Java version references from Java 8 to Java 9 in ConstantPoolTagTests . java to ensure compatibility with the latest Java 9 and above features
fix error message for compile with - xlint
added a method to clear the client header map in AsyncHttpClient to improve header management and prevent potential memory leaks
replaced Vector with ArrayList and updated method calls to use get ( 0 ) and get ( 1 ) instead of elementAt ( 0 ) to improve
updated the default grid column value from 4.0 f to 3f in AppPreferencesImpl . java to adjust the default grid size for better
added a condition to check if the view creation is not allowed in the Calcite planner to ensure proper handling of view creation scenarios in the planner
updated regex pattern and assertion in TestHS2HttpServer . java for improved clarity and consistency to enhance readability and maintainability of
added error handling when retrieving the object from reflection to improve robustness by preventing application crashes due to potential runtime exceptions
updated the driver from IE to FIREFOX and modified the test method from " ElementFindingTest " to " PageLoadingTest " to
updated byteOffset calculation to use Math . addExact and added a test for too many allocations in ByteBlockPool to improve accuracy of byte offset
updated InteractionValueEncoder to use Locale . ENGLISH for string formatting to ensure consistent string formatting across different locales
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5652 :
add miss ` @ suppresswarnings ( ` ` serial ' ' ) ` to ` papplet `
updated OcamlDebugLauncher to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver and removed unnecessary dependency on SourcePathResolver to simplify
change ` ` database have change ' ' message to ` ` return to jabref ' '
updated OAuth20DeviceCodeResponseTypeRequestValidator to improve response type validation and error logging to enhance security and clarity in handling OAuth response types
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure that the index is within valid
updated the initTableMapperJob method to accept an additional input format class parameter to enhance flexibility in handling different input formats during job initialization
removed duplicate call to append ( jrubyClasspath , testClasspathElements ) in AbstractJRubyMojo . java to streamline the code
throw an exception if a language do n ' t exist or access internal .
added deprecation warning and validation for the RESERVE parameter in ReplicationHandler . java to ensure that master . RESERVE is mutually exclusive
hhh - 14850 - fix bug in cache support for foreign key
pdfbox - 4892 : remove native method , a suggest by valerybokov
[ hotfix ] [ runtime ] introduce restarting . suspend ( throwable cause ) and use it in statewithexecutiongraph # suspend
replaced the singleton instance of RotationTouchHelper with a direct instantiation to simplify the code and improve readability by eliminating unnecessary static
refactor filtering and mapping logic for port table and overrides in UniFiControllerCache . java to improve code readability and maintainability
updated thread ID parameters from ` lwp _ id ` to ` unique _ thread _ id ` in multiple classes to improve clarity and accuracy
do n ' t add the offer to the offer list if it already exist in the list
use constant instead of hardcoded string for tl 1.3
added type handling for mock instances in MockitoMethodInvocationControl and updated import statements in SystemClassUserTest and SystemClassUserCases to improve
replaced instances of ` NotLoadedException ( ) ` with ` NotLoadedException ( this ) ` in multiple files to improve exception handling by
removed unused import of DisplayUtils and added an extra file to the intent to streamline code by eliminating unnecessary dependencies
added error handling and improved error messages in StoreDirect and StoreWAL classes to enhance error reporting and ensure proper resource management during compaction operations
added a task snapshot retrieval process in AbsSwipeUpHandler . java and removed it from SystemUiProxy . java to improve task animation handling
added a ` hidden ` property and its getter / setter methods to the ` CommandArgumentDefinition ` class to enable handling of command - line arguments
updated the remote address from 8090 to 9092 in LoggingKafkaPluginTest . java to ensure the test connects to the correct
[ geos - 5398 ] use stylegroup . getstyledlayersld ( ) instead of getcatalogfromstyle ( )
added permission checks for launching activities in InstallShortcutReceiver and modified the completeAddShortcut method to include a PendingRequestArgs parameter to enhance security
added ` getId ( ) ` and ` setId ( int id ) ` methods to multiple tiled map tile classes to provide a unique identifier for
refactor Manager class to improve code readability to enhance maintainability and facilitate future development
updated JDBC connection and session builder to support version V _ 0 _ 13 to ensure compatibility with the latest IoTDB features and improvements
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo . java and updated diffOutputControl initialization to enhance schema handling
replaced ` putIfAbsent ` method with ` put ` method in ` JmxRegistry ` to ensure proper caching behavior for registered channels
log singlebenchmarkrunnerexception in warn instead of error
removed the ` final ` modifier from the ` doPutRecord ` method in ` AbstractCacheRecordStore . java ` to enforce immutability
fix a bug where the callbackbridge would n ' t be set on the client side .
added tests for handling large and slow response content in FastCGIProxyServletTest to improve reliability and reliability of response content handling
added a call to start the ReadInteractionsService in the MarkReadService to ensure the service starts correctly for reading interactions
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are logged only when the
added configuration for SMTP server port and default value in Email . java to allow dynamic configuration of the SMTP server port and provide a default value for
re - enable retry for sslfactory reload ( # 2321 )
updated the date format in ObjectMapperProvider from " mm ' T ' HH : mm ' Z ' ' to " mm ' ss ' Z '
updated the assertion message in the SpyingOnRealObjectsTest to clarify that the error is due to mocking a private class that
added a method to check if the line ends on NL and modified the conditional logic in InlineBoxing . java and LineBox . java to
updated filePathString initialization to handle null parent cases to improve robustness by preventing potential NullPointerException when filePath . getParent ( ) is null
removed unused import of DocCollection from TopicStream . java to clean up the code and improve readability
replaced ByteArrayInputStream with a custom ServletInputStream and added a new test for handling Windows 1250 multipart form data to improve code readability and ensure
updated property configuration in AbstractCasEndpointTests to include specific endpoints to enhance security by restricting access to web endpoints
added a validation check for the current graph to ensure that the current graph is a dynamic graph to prevent runtime errors
improve error message when bean of type ` ` @ scopeone ' ' be disabled
added support for suppressExceptions property in JsonPathExpression and related classes to enhance error handling capabilities in JSON path processing
removed duplicate call to ControllerLeaderLocator . create in HelixServerStarter . java to streamline code by eliminating redundancy
updated usage message from " java CLHSDB " and " HSDB " to " clhsdb " and " hsdb " to
removed duplicate configuration of ` FaultTolerantChunkProvider ` in ` FaultTolerantStepFactoryBean ` and updated listener registration in `
[ beam - 3391 ] remove write class and deprecate write class in favor of beam sdk . io . write
refactor ShadowAccessibilityManagerTest to use a single instance of AccessibilityManager instead of multiple methods to improve code readability and maintainability
add ' flutter usage statistic ' to the analytics group ( # 1305 )
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from several classes to
refactor enum data type handling in PostgreSQLDatabaseConnector to use a new PostgreSQLEnumDataTypeHelper class to improve code clarity and maintainability by
updated log path comparison in LogFileTests to use File . separatorChar to ensure consistent file path formatting across different operating systems
replace instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to ensure consistency in naming con
added exception handling for dropping index tables in HiveMetaStoreClient to improve error handling for unsupported operations
added visibility check before updating disabled flags in RecentsView to ensure actions view is disabled when the view is not visible
nano : use sh - repl highlighter on non - window platform
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 562 : add
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
removed unnecessary whitespace in the removeCaptureListener method call to improve code readability and maintain consistency
change the value of _ metaDataComplete from true to false to indicate that the metadata has been completed successfully
replaced the return type of ` removeTaskTarget ` with ` void ` and modified bitmap creation logic in multiple classes to improve task removal handling
added environment variable " PLATFORM " and " RELEASE " to the JsBundleGenrule to enhance environment variable handling for release flavors
updated type casting logic in ` ppp Lower . java ` and added a new class ` ppp T6500701 . java `
added tests for crlfNewLinesInComments and crlfNewLinesInJavadoc in AddImportTest . java to ensure proper handling of new
added a ` hubMode ` property to ` AbstractLiquibaseChangeLogMojo ` and set it in ` AbstractLiquib
removed unnecessary null checks in JsrFaultTolerantStepBuilder and JsrChunkProcessor to simplify code and improve readability by elimin
added error handling for the use of ` linkDb ` in ` IndexerMapReduce . java ` to ensure that the correct linkDb is
replaced reflection - based method lookup with a direct method call to retrieve the " setIndexerThreadPool " method to simplify code and improve flexibility
removed the port number from the SMS address string in GameCanvasImplementation . java to simplify the address format for better readability
introduced a ` copy ` method for ` JobExecution ` and updated the ` executionsById ` map to use it for storing and deserializing
added a new file ` DownloadTest . java ` to implement a test for downloading a PNG file to ensure that the texture functionality works as expected
updated language normalization in multiple classes to ensure consistent language handling to improve code clarity and maintainability by standardizing language code
updated error handling for ROUND function in GenericUDFRound . java to use UDFArgumentTypeException for argument type validation to improve error clarity and
fix npe in managedependencies when no version be specify
removed multiple AntPathRequestMatcher entries from SecurityConfig . java to simplify the configuration by eliminating unnecessary matchers
added JUnit Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
fix : do not generate bean definition for java . lang . object class .
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to performance issues
updated ` SUPPORTED _ THING _ TYPES ` and ` ENERGY _ SUBSCRIPTION _ PERIOD ` from ` final static ` to
remove the code that check for socketstatus . open , socketstatus . stop , and socketstatus . timeout in aprendpoint . java
deleted the SunToolkitSubclass . java file to the class is no longer needed for the current implementation
replaced MathUtils with Matrix4 and added getTranslation method in DefaultRenderableSorter . java and implemented hasRotationOrScaling method in Matrix4
added a new test method to TypeHandlerRegistryTest to verify the registration of wrapper handlers before primitive types to address issue # 165 and address
pdfbox - 4892 : use alternate color space in pdseparation , a suggest by valerybokov
updated API URL references to use BuildConfig instead of CommonsApplication to ensure consistency and maintainability across the codebase
add health check for camel - main for camel - http to make it easy to configure health check .
fix a nullpointerexception in the thorn chakram .
added a test for altering a table with indexes extending a primary key in AlterTableWithViewsIT . java to ensure that the table
updated offset initialization in FileFloatSource . java and added assertions in TestFunctionQuery . java to improve code clarity and ensure correct commit behavior
removed the ID field from the fields collection in MongoRecordReader . java to streamline the code by eliminating unused constants
added dispose ( ) and disconnect ( ) methods to YeelightHandlerBase and DeviceBase classes , and modified WifiConnection to terminate
added support for " AUTO _ INCREMENT " in the parser and created a test for it in TestCompatibility to ensure proper handling of integer types
fix ( kubernetes - client - api ) : add getexistingsharedindexinformers ( ) method to sharedinformerfactory
server : fix template detail for private template ( # 4569 )
refactor ShadowBitmapFactory to use RobolectricBufferedImage for image size retrieval and streamline color array initialization to improve image handling and
removed deprecated constants and fields from LauncherSettings . java to clean up code and improve maintainability
[ drools - 4892 ] move starter to example folder
added legendTop variable and updated related calculations in PieChart . java to improve legend positioning and ensure proper positioning of the chart
added a check to return early if the world transformation is zero to avoid unnecessary processing when the world transformation is zero
added a new file ` MaryScriptCreator . java ` that reads and prints Mary scripts from input and output to facilitate
added a flow file attribute for remote source host in ListenHTTPServlet to enable tracking of the remote source address in the session
removed redundant code and ensured the deletion of the compaction log file in LevelCompactionTsFileManagement . java to improve code clarity and
replaced " xlink : href " with " href " for license and location elements in ComponentDescription . java to simplify link handling by using
camel - 14284 - camel - aws2 - s3 : use s3 _ streaming _ upload _ timeout _ checker for timeout checker
hbase - 25836 cluster shutdown procedure should not be warn when transition to closed state
added null checks for span before logging stopped spans in Slf4jSpanLogger . java and improved warning messages in DefaultTracer .
trim whitespace from the active option before adding it to the configuration to ensure that empty options are not added to the configuration
added depth effect preference handling in DepthController . java to allow dynamic depth value based on user preferences
added an assertion to verify the success count of the overseer action in the OverseerTest class to ensure that the overseer
modified the return value of ` getKernelVersion ( ) ` to ` true ` in ` LinuxFileStore . java ` to ensure compatibility with
refactor ExecConstants to improve code readability to enhance maintainability and facilitate future development
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for tests
added a method to set scan attributes for paging in ScanUtil and updated TableSnapshotResultIterator to utilize this method for setting scan attributes for
added a check to ensure lowRange is less than or equal to 1 , 000 , 000 to prevent potential errors when lowRange is set to
changed access modifiers of keySizeEstimator and valueSizeEstimator to protected in AbstractCachedSource . java and adjusted cache estimation in AsyncWriteCache .
fix bug in listhosts - use getzoneuuid ( ) instead of getuuid ( )
[ zeppelin - 4892 ] fix content - type header of zeppelin - 4893 ( #
updated the filesystem removal logic to include the zfs parameter to ensure that the filesystem is removed only if it matches the specified zfs
changed the type of the ` obj ` variable from ` Object ` to ` String ` and updated its usage in the ` toJson ` method to
increased the polling wait time from ` hardCommitWaitMillis * 2 ` to ` hardCommitWaitMillis * 5 ` and ` hard
log selenidelistener . beforeevent ( ) and logselenidelistener . afterevent ( ) throw runtimeexception if listener call fails
refactor multiple Dial - related classes for improved organization to enhance maintainability and readability of the codebase
reformatted error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest features
replaced ` getBootstrapPaths ( ) ` with ` getAdditionalBootstrapPaths ( ) ` in ` BootClassLoaderHook . java ` and added a
do n ' t try to extract patchy jar if it do n ' t exist
[ hotfix ] [ yarn ] simplify yarnclusterdescriptor creation in yarnitcase
update localmapstatsprovider to include map without data
deleted the AllTests . java file to the test suite is no longer needed for the current testing framework
added support for unicode characters ( non - breaking horizontal and zero - width space ) in AbstractWordConverter to enhance text formatting for better readability
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify memory behavior on large stack trace invocations to
updated method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( ) ` in ` NestedResultSetHandler . java `
added a new boolean field ` eventHandled ` and set it to true in ` UIText . java ` to ensure event handling is properly
deleted the ` Controller . java ` file and renamed the ` Weldby ` class to ` WeldModule . java ` to streamline
[ nfa ] fix zero - width quantifier not monitor capture group in empty check
replaced the retrieval of the Liquibase Pro license key with a protected field to allow subclasses to access the Liquibase Pro
set the memberreader of a virtual cube to null , so that it do n ' t have to be reset .
add -- g option to generate debug information
[ mondrian ] fix typo in mondrianproperties
added support for handling friend paths in Kotlin compiler and related classes to enhance functionality by allowing users to specify additional source paths for Kot
added aliases for BATK , BRAH , and MANDAIC in Character . java and modified CheckScript . java to use
updated equality checks for commandId , hostname , role , and roleCommand to use ` . equals ( ) ` instead of ` = = `
updated Mockito library version in the project to ensure compatibility with the latest features and improvements
refactor OCFile class to improve code readability to enhance maintainability and facilitate future development
added a toString ( ) method to the SystemScope class to provide a readable string representation of the object for easier debugging and logging
updated the handling of CSS number and percentage types in CSSParser . java to improve accuracy and clarity in parameter validation for the cmyk
added a test method to verify the reverse scan functionality of a local index to ensure that the reverse scan correctly returns all rows for the specified index
updated import statements and method names in BaseAndroidTestCase , BackupHelperTest , and LanguageHelperTest to use ApplicationProvider instead of Instrumentation
updated message and toast messages in ItemListActivity , LiveTvGuideActivity , and MediaManager to use getString ( ) method to improve localization
simplified condition checks in RendererUtilities and added a new test in RendererUtilitiesTests to improve code clarity and ensure correct functionality of item
replaced iterator usage with ArrayNode for ask and bid in KrakenStreamingAdapters . java to improve type safety and clarity in handling
added a try - catch block around the altering of the FILESYSTEM _ CRC32 column in FileContentProvider . java to handle potential SQLite
removed a debug print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added a method to compute online data size based on hash table load factor in ConvertJoinMapJoin . java to improve accuracy of total size calculations
updated the ` buildView ` method to accept a ` Context ` and adjusted background resource settings to enhance flexibility by allowing customizable background resources
added a ` withAuthentication ` method that accepts a ` Consumer < Authentication > ` and updated the ` SecurityMockMvcResultMatchers ` to allow
vpc : set gatewaynet ' s vpcid to null to avoid npe
[ hotfix ] [ test ] disable flinksavepointtest on jdk 1.11
change the access modifier of multiple fields from private to private in multiple Java files to enhance encapsulation and improve code readability
modified the loop condition to check if ` i ` is within the size of ` actions ` instead of using a variable ` n ` to ensure
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to ensure compatibility with the latest Bitmex features and improve
add test case to verify that virtual metadata be work for parent / child relationship
added null check for spatial in LodControl . java to avoid potential NullPointerException when spatial is null
updated ` ConditionalTokenFilter ` and ` FixedShingleFilter ` to update ` lastTokenFiltered ` to true in ` ConditionalTokenFilter . java
make unsafestorenode and storefieldnode state after the state be add to the graph .
replaced ` super . putAddress ( base + offset , value ) ` with ` io . putAddress ( base + offset , value )
added an assertion to verify that no events are loaded in CasAuthenticationEventListenerTests to ensure that the event repository is not empty before proceeding with
removed unused attributeTemplateName and attributeLine parameters from AuthenticationAttrProcessor . java to streamline code by eliminating unnecessary parameters
added null key validation in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that the specified key is not null to
removed the ` setTypeface ` method from the ` CodenameOneTextPaint ` class to enforce runtime error handling to prevent runtime errors
implemented the ` open ` method across multiple filesystem implementations in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` Hadoop
simonstewart : remove deprecate webdriverrunner . fail ( string message )
removed a condition that checks if the item size is greater than zero to simplify the conditional logic for better readability
refactor DefaultResultSetHandler to replace ResultObject with a single instance for managing constructor mappings to improve code readability and maintainability by reducing
updated SQL syntax in CreateTableGeneratorTest . java to use double quotes for table name concatenation to ensure correct SQL syntax for foreign key references
added support for filtering in VectorizationContext by introducing a boolean flag to determine if the expression is a filter expression or not
added generic type declaration for moveSelectorConfig in ExhaustiveSearchPhaseConfig . java to improve type safety and clarity in configuration handling
replace ` new ReorganizeTableStatement ( getCatalogName ( ) , getSchemaName ( ) , getTableName ( ) ) ` with ` modify
replaced string literals for cluster _ name with constants in multiple files to improve code readability and maintainability by using defined constants
refactor connection handling in PeerGroup . java to improve error logging and exception management to enhance clarity of connection failures and provide more informative
added logic to modify style based on string values in Nano . java to enhance styling flexibility based on user - defined strings
use adventurenbtconverter . fromadventure ( ) in datafixer . fixup ( )
updated the return statement in NoToStringOnStringType . java to clarify the purpose of the method to provide clearer guidance on
updated the JVM JVM version from " - Xmx64m " to " - Xmx32m " to optimize memory usage for improved
refactor ` retryFailed ` method to return ` FailureContext ` instead of ` int ` and introduce ` DataProviderRetryAnalyzer ` and
updated return statement to use the bandwidth variable instead of the first token to ensure correct retrieval of the token based on the specified bandwidth
simonstewart : implement webdriverbackedselenium . selectpopup , webdriverbackedselenium . deselectpopup
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and added public key algorithm details to streamline the method ' s
removed unnecessary whitespace in TaskAsyncCallTest . java to improve code readability and maintain consistency
added validation checks for dialog opacity , background , shape , and shape in Dialog and Frame classes to ensure that dialog properties are properly validated to prevent
changed the ` state ` variable from non - final to final in ` DefaultProjectFilesystem . java ` to ensure immutability of the `
updated RedisObjectFactory to use RedisStandaloneConfiguration for sentinel configuration to enhance configuration flexibility for Redis connections
do n ' t send delayed message to jabber if it ' s already in the room .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` notifyContent ` method calls to ensure
refactor sharing operations to use Intent for creating and unsharing to improve code readability and maintainability by centralizing the creation of sharing operations
removed unnecessary condition in ` BeanDefinitionInjectProcessor . java ` and added ` @ Inject ` annotation in ` FieldPropertyInject . java ` to
updated loop conditions to use a variable ` yStart ` instead of using ` getMinBuildHeight ( ) ` to improve code readability and maintain
added a check for NullPointerException in SmackIntegrationTestFramework . java to ensure proper handling of NullPointerExceptions during execution
tmi - exif : do n ' t read interop sub directory if it ' s already link
added support for the ENABLED _ LS mode in VersionTargetGraphMode and updated the executor initialization in VersionedTargetGraphCache to improve flexibility in
added a check for video format in conditional statements to ensure proper handling of video formats in DLNAResource
refactor AutoMlClient to improve code readability to enhance maintainability and reduce complexity
refactor LwjglNativesLoader to load PersistenceService dynamically instead of using reflection to improve flexibility in loading native libraries based on
updated CSVRequestHandler to support escaping options and improved encapsulator handling to enhance flexibility in CSV processing by allowing custom escape options
added support for the AUTHORIZATION _ CODE grant type in ClientRegistrations and updated corresponding test cases to ensure that only supported grant types are
enhanced error handling in Throwable and SuppressedExceptions classes to include the original cause and suppressed exceptions to improve error reporting and ensure proper handling of
added a query to validate the count ( * ) functionality in DerivedTableIT . java and modified the OrderedResultIterator constructor in ClientAggregate
added calculation of the " RSquare " in RegressionEvaluator and a corresponding test in StreamExpressionTest to ensure the correctness of the
added handling for multiple request header names in ThreadContextMDCServletFilter to enhance request processing by adding context attributes based on request headers
refactor code to use a local variable for MapWork and add configuration settings for split sizes to improve code readability and maintainability by redu
refactor image loading logic in PdfJndiReport and PdfSessionInformationsReport to use a cache for images to improve performance by avoiding
updated cache configuration in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer resolution in JwtIssuerAuthenticationManagerResolverTests to
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for
llvminteroptype : do n ' t add type to typecache if the function be not a method .
removed redundant sleep calls in AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating redundancy
added a new file ` KernCrash . java ` that implements a simple application using custom fonts to demonstrate the use of
added a fail ( ) statement to LinkedHashTreeMapTest . java to indicate that the test has failed due to potential issues
added a method to retrieve the interface IP addresses based on the loopback status of the network interface to enhance functionality by providing a way to filter out
fix potential deadlock in hikaridatasource . shutdown ( )
updated method call to use getSlaveAddress ( ) instead of getClientAddress ( ) in GroupTransferService . java to ensure consistency in accessing the
updated assertions in the Assert . java file to improve code clarity and maintainability
added a new test class ` Issue247Test ` to validate the functionality of ` TreeMap ` to ensure that the ` TreeMap `
changed the type of the results set from Set < CategoryItem > to Set < String > and modified the doInBackground method to return an
added checks for today and birth years in ValidatorTest . java to ensure proper error handling for date validation based on the current year
added error handling for alarm and error codes in GrblController to improve user feedback by providing clearer feedback on processing errors
updated the return statement in Workspace . java to conditionally return a specific label based on the number of screens to improve user experience by
removed the count parameter from the getTrades method and related calls to simplify the method signature and eliminate unnecessary parameters
updated ConsoleReader to strip ANSI escape codes and modified loop conditions in MemoryHistory to improve code clarity and ensure proper handling of null input
removed the " . jdk " suffix from the jdkPath assignment to simplify the path construction for better readability and maintainability
refactor code to replace usage of ` input . getDescription ( ) . getBuildRuleType ( ) ` with ` input . getType ( ) `
added a logger parameter to JFCModel constructors and updated related methods to enable logging of warnings during model initialization
added a validation check for tolerance in MaximumInscribedCircle . java to ensure tolerance is non - negative to prevent runtime errors
added methods to create and drop views in TestUtil . java and corresponding tests in DatabaseMetaDataTest . java to enhance functionality for creating and drop
added support for checking stable float and double in NaNTest . java to improve test reliability by skipping tests on non - SSSE platforms
added a new class DesktopTaskbarUIController to manage the hotseat ' s icon alpha in the taskbar to enable proper visual
add progress tracking to moditemadapter . updateinstallenabled ( ) to update install button state
refactor methods in mmm and ppp files to improve code readability and maintainability
refactor interceptor handling in AnnotationGrpcServiceDiscoverer and update annotations in GrpcServerAutoConfiguration to improve code readability and maintainability
updated the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` and modified the ` ChainingServicesManager ` class to remove the
update resourcepackloader to use modid instead of modfile name
chore : update gapic - generator - java version to 2.1 . 0 ( # 10 )
added grow ( ) and growX ( ) methods to Cell class to enhance functionality for better cell management
refactor DefaultInputHandler to simplify key binding handling to improve code readability and efficiency by eliminating unnecessary token parsing
fix for http : / / issues . apache . org / activemq / browse / amq - 4237 - try to fix
replace long array with byte array in MetricsMemoryTester . java and add memory fail count check in TestDockerMemoryMetrics . java to improve
deleted the JobParametersPrototype . java file to remove unused code to streamline the project
added a securityEnabled parameter to the MappingsTable class and updated related methods to enable or disable security checks based on configuration
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ EXPORTED _ OBJC _ C
changed the DUMP _ TO _ FILE constant from true to false in TestMSPowerPointParser . java to disable the file dump functionality
add eos propagation workaround for amazon and afts codec
[ java ] : do n ' t check if the buffer be connected before set the producer limit .
added a check for no info output in BaseFormatter to ensure proper handling of database information when no info output is available
enable ssl by default for presto driver uri
added error output options to the DOMSubtree building process to enhance output flexibility for XHTML rendering
updated assertions in the Assert . java file to improve code clarity and maintainability
[ java ] add ` ` retained ' ' option to publish to a topic .
removed JsonIgnore annotation from TestResultSummary . java and updated test case name in EventSerializationTest . java to ensure proper serialization of test cases
[ hotfix ] [ table - planner - blink ] fix tumble function name in standard operator table
replaced the import of ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter .
improve session context management by introduce read - only lock .
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` and modified string formatting in ` AppModule
[ hotfix ] [ sql ] replace calcitesqldialect with ansisqldialect in sqlnodeconvertcontext
changed log level from debug to trace in FirmwareUpdateService . java to reduce log verbosity for better traceability
added tests for handling null values for date and timestamp columns in GetObjectTest . java to ensure correct behavior of date and timestamp retrieval with null values
refactor string concatenation in ` StringSubject ` and ` Subject ` classes for improved readability to enhance code clarity and maintainability by
added tests for repository permissions in UserModelTest . java to ensure correct permissions are applied for multiple teams and users
added a new file Test7088020 . java to test method handles with incorrect argument types to ensure proper error handling for incorrect method type
refactor audience restriction validation in Saml2ResponseValidator . java to use a HashSet for audience URIs to improve clarity and maintainability of
refactor cache refresh methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener to use a unified refreshLocalCache method to improve code
updated the handling of the ` _ stderr ` variable to allow null values to improve robustness by avoiding potential NullPointerExceptions
added a new constant SEPARATION _ ORDER in Warning . java and updated BasicEventSimulationEngine . java to track active stages to enhance warning
updated the parameter from offlineTableConfig to realtimeTableConfig in the optimize method call to ensure the correct table configuration is used for query optimization
refactor aggregation SQL statement and add configuration for enabling or disabling the HBASE normalizer to improve code clarity and ensure proper handling of
refactor SavepointV2 and FileStateHandle classes to improve code readability and maintainability
added Bluetooth class functionality and corresponding test in ShadowBluetoothDeviceTest and ShadowBluetoothDevice to enable testing of Bluetooth device functionality and
fix checkstyle issue in io / player / glowofflineplayer . java and io / player / uuidlistfile . java
[ flink - 13434 ] [ table - common ] improve error message for sum ( [ ] )
updated the method call from ` graphModel . getGraph ( ) . readUnlockAll ( ) ` to ` graph . readUnlockAll ( )
updated coreNodeName construction to use coreName from nodeProps to ensure the correct core name is used for better clarity
use updatebackpressure for update contact list in chatactivity
updated TaggerParserPosTagCompatibilityITest . java to improve test coverage for tagging functionality
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
added a new class T7005671 with multiple methods for type casting and modified the condition to check for element types to enhance type safety and
updated triangle position calculations in DelaunayTriangulator and replaced EarClippingTriangulatorTest with DelaunayTri
added @ Override annotations to multiple Java classes to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use builder pattern to improve code readability and maintainability by using the builder pattern
refactor state management in StackOverflowCheckImpl to use state variables for improved clarity to enhance code readability and maintainability by redu
added shadow methods for ` ContentValues ` and ` SQLiteDatabase ` in ` Robolectric ` and removed deprecated methods from ` ShadowContent
replaced ` graphics . initiateGLInstances ( ) ` with ` graphics . initiateGL ( ) ` in ` LwjglAWT
replaced the ` bytesPerDim ` variable with ` ArrayUtil . ByteArrayComparator ` and updated the comparison logic to use ` ArrayUtil . getUnsignedComparator
added a ` script ` property to the ` defaultLocale ` and updated its initialization logic to allow customization of the locale ' s script based on
update return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct text alpha is returned for the last set
corrected the spelling of " Confimap " to " ConfigMap " in the warning log message to improve clarity and accuracy of warning messages
replaced multiple test suite imports with a single call to UaaJunitSuiteRunner . allSuiteClasses ( ) to streamline test suite
added trimming of whitespace before adding elements to _ mimeTypes , _ excludedAgents , _ excludedPaths , and _ excludedPathPatterns to ensure that
corrected spacing in the assignment of _ outputType to improve code readability and maintain consistency
updated the default regex implementation from JDK to JONI to ensure compatibility with the latest Nashorn features and improvements
replaced ` Handler ` with ` FutureTask ` and ` Consumer < ViewRef > ` in the ` ViewCapture ` class to improve task
[ mary - 489 ] add support for ` ` dfki - pavoque - styles ' ' and ` ` style '
added a check to ensure the parent folder exists before creating it to prevent potential errors when creating the parent folder
updated the fallback IP address for node discovery from 0.0 . 0.0 to 127.0 . 0.1 to ensure compatibility with
camel - 16407 : fix typo in workitem handler name
pdfbox - 4892 : remove unused static import , a suggest by valerybokov
replaced instances of ` WorkModeToggleContainer ` with ` WorkFooterContainer ` and updated related references to improve clarity and consistency in the
refactor multiple classes related to dalvik analysis and transformation to improve code organization and maintainability
refactor : fix bug in defaultjavaprettyprinter . visitcttypedescriptor ( cttypedescriptor )
added a call to free memory in the DriverContext class to ensure proper memory management and prevent memory leaks
updated string formatting in QueryByExamplePredicateBuilder . java and modified string replacement in StringQuery . java to improve clarity of error messages and
refactor eviction and cache statistics handling in ConcurrentLRUCache and FastLRUCache classes to improve performance and clarity by using AtomicLong
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` and added a new method ` runAndWait
fix ipv4 address check in networkaddressmanagerserviceimpl ( # 4749 )
set data root and source root for database in mainframe .
added ` MarkedClientEnabled ` and ` MarkedServerEnabled ` constructors to ` AdminClientBootstrapConfiguration ` and ` AdminServerBootstrapConfiguration
[ hotfix ] fix checkstyle violation in tableenvironment
refactor timeout handling in MapperBuilderAssistant and update timeout configuration in ExecutorTestHelper to improve code clarity and ensure consistent timeout behavior across
removed the hangingTscTimeout parameter from multiple transpilation process classes to simplify method signatures and improve code readability
added serialization for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocationResponse
replaced instances of ` ImmutableSourceArtifactImpl ` with ` BuildArtifact ` in ` ArtifactFilesystem ` and updated tests accordingly to ensure correct handling
tika - 2857 -- fix for tika - 2857 - throw an exception when parse an excel document that do n '
make sure setboolean ( ) do not trigger concurrent modification
fix ( nio2 ) : wait for data to be available before try to write to the pipe .
add a check to ensure that ` GuavaOptionalSubject ` does not fail with the same ` toString ( ) ` values to improve error reporting
added VERTICAL _ SWIPE _ INDICATOR to visibility checks in BackgroundAppState and modified mid progress calculation in ShelfScr
fix a null pointer exception in the matdefeditorlelement .
mow - 1341 fix for mow - pin - image to work properly .
rename ErrorOccuredInOnExceptionRoute . java to improve clarity to enhance code readability and maintainability
replace scheduleatfixeddelay with schedulewithfixeddelay and change log level from info to debug
simplify initialization of irrUnit and pemUnit in SinglePassAndImageBasedLightingLogic . java to improve code readability and
added @ Ignore ( " Test hangs " ) annotation to JmsJdbcXALoadTest . java and JmsJdbcXATest . java
updated import statements in GuiceFactoryTest . java to include specific classes for improved dependency management
added a system feature list and methods to manage system features in RobolectricPackageManager to enhance feature management capabilities in the application
refactor property handling in RCAFrameworkLoader to use a postfix for the path to improve code readability and maintainability by using a more
added a logging statement to indicate the start of the cancellation watch dog to improve visibility into task execution for better debugging
added null and length checks for enumerationValues in RADProperty . java to ensure proper handling of empty enumeration values
replaced ` needInline ` boolean variables with ` needStartText ` and ` needEndText ` for better clarity to enhance code read
added synchronization to the collectAndSendTelemetryData method and updated the method to retrieve the remote IP to improve performance by allowing asynchronous data collection
removed conditional column type alteration for MySQL for UPGRADE _ ITEM _ ITEM _ TEXT in UpgradeCatalog260 . java to simplify the
updated error messages in BaseTableDataManager to provide clearer guidance on permissions for index and temp resources directory creation errors to enhance clarity
refactor DatasetUtilities class to improve code readability to enhance maintainability and facilitate future development
added a line to append the selector ID to the key to improve the identification of the selector for better debugging
updated debug log message formatting and formatting in GouraudShadingContext . java to improve code readability and maintain consistency in formatting
updated taskbar alpha handling and visibility logic in multiple controllers to improve UI responsiveness and maintainability of the taskbar functionality
removed unnecessary whitespace in KeyExchange . java to improve code readability and maintain consistency
added a check for JdbcConnection before executing the version check in CockroachDatabase . java to ensure proper handling of JdbcConnection instances during
updated file index retrieval logic and assertion checks in ServerMainTest . java to improve clarity and correctness of file existence checks
added methods to retrieve media recording MIME type in CodenameOneImplementation , MediaManager , and ImageIO classes to facilitate easier
fix rendertileenchanter and rendertilepylon not use shaders
updated the BindableFilter condition in DruidAdapterIT . java to include a OR operator and modified the return value in the return statement to
updated the instantiation of ZkStateReader in CloudSolrServer . java to ensure consistent timeout handling for ZkStateReader
updated XML feature settings and formatting in XMPMetaParser . java to improve code readability and maintainability
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced a conditional check with a while loop in UrlHelper . java to improve readability and maintainability of the code
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated its logic to improve clarity and
refactor border property checks to use a new method ` borderIsNotSetOrBlank ` to improve code readability and maintainability by reducing
changed log level from info to debug for reconnect logging in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance by reducing
updated the ` InternalDropAllCommandStep ` and ` HubUpdater ` classes to include a ` HubRegisterResponse ` parameter and retrieve the project
replaced bitwise operations on byte values with Byte . toUnsignedInt for improved clarity to enhance code readability and maintainability by using
removed unnecessary parentheses in string concatenation to improve code readability and maintainability
updated the DepFiles default value from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure the caching behavior is consistent with
changed the value of the rangePannable variable from true to false to disable the range panning functionality
modify the logic for adding or removing the work mode switch in AllAppsContainerView . java to ensure proper management of the work mode switch based
changed visibility of GLCapabilities , GcodeRenderer , and FPSAnimator from private to private and initialized them in the constructor to enhance encapsulation
added handling for CancellationException in FunctionTest . java to improve error handling for cancellation scenarios
changed the access modifier of the constructors of JarFileResource and JarResource from package - private to protected to allow subclasses to access these constructors
refactor DefaultTrackSelector to improve code readability to enhance maintainability and facilitate future updates
added a loop to wait for unseq merging in LevelCompactionTsFileManagement . java to ensure proper synchronization during unseq merging process
updated the fee currency from AUD to BTC in the BTCMarketsAdaptersTest to ensure the correct currency is used for user tra
updated SQL queries to use " post " instead of " Post p " and added assertions for ID and title in tests to improve clarity and
refactor Unicode class to improve code readability to enhance maintainability and ease of understanding
modified the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
fix the issue that sendheadersfirstpublisher do n ' t call oncomplete ( )
camel - 14284 : camel - aws : use jsonpojobuilder instead of custom deserialization for sckey .
added support for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to improve error handling for unsupported value types
rename variable ` inner ` to ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper . java ` to improve clarity and consistency
removed annotation logging from ParameterInfo . java to streamline the code by eliminating unnecessary console output
added support for AC3 streaming and updated playback logic in PlaybackController . java and VideoManager . java to enhance audio playback functionality and improve
updated the return statement in LocalNode . java to return a new HttpResponse with content with a null value to ensure that the response contains a content
added @ SuppressWarnings ( " deprecation " ) annotations in DelegatingStatement . java and DiskFileItem . java to indicate that the use of Common
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` to verify the functionality of SQL select statements
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
added test case for issue # 358 , fix issue # 358 .
updated client thread and scheduler initialization in ClientConnector . java to include unique names for client threads and schedulers to improve clarity of thread
refactor ViewResultsFullVisualizer to use JScrollPane and JCheckBox components instead of protected variables to enhance encapsulation and improve code readability
added descriptions for phone numbers and resources in ScimUserEndpointDocs . java to clarify the purpose and usage of user phone numbers in
changed class visibility from package - private to public for several classes and added private constructors to enhance encapsulation and prevent instantiation of singletons
added error logging for null properties and responseMap in JsonHttpPropertyRequest . java and URLStreamProvider . java to ensure proper handling of null
refactor SolrRequestHandler to improve code readability to enhance maintainability and facilitate future development
added a condition to check if ` parallel ` is not ` DEFAULT _ PARALLEL ` in ` XmlSuite . java ` to ensure
fix checkstyle issue in vmware / testsuite / testvmware . java
added handling for SCARD _ E _ NO _ SMARTCARD in the error check to improve error handling for smart card availability
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress system output for specific test cases
updated BindyKeyValuePairFactory and BindyKeyValuePairDataFormat to include an additional parameter for lists to enhance the binding functionality by allowing additional
change default value of useowner and usetimestamp from true to false
updated method signatures in Utils . java to use ThrowingRunnable instead of Runnable to improve clarity and functionality of exception handling
update CrawlURI . java to handle null values for ` via ` , ` viaContext ` , and ` pathFromSeed ` to improve
camel - 14284 - configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from 4.1 . 1 to 4.2 and refactored object retrieval methods in LiquibaseXMLTransformer to
change default value for proxy . cert . validity to 90 second
replaced the ` frame ` variable and introduced ` smoothDelta ` and ` lastDeltaUpdate ` variables with their respective values and updated calculations to
added a null check for the paginator in HttpBatchReader and modified the URL parsing logic in HttpScanBatchCreator to ensure proper handling of pagination
added null check for the CompactionInfo client in Worker . java and created a test for exception handling in TestWorker . java to ensure robust
updated fragment state saving logic in ShadowFragmentActivity and added unit tests in FragmentActivityTest to ensure that onSaveInstanceState is called correctly for fragment
reformatted code in BatchResourceFactoryBean . java for improved readability to enhance maintainability and clarity of the code
added a test for parsing simple Android color references in ColorResourceLoaderTest to ensure that the color resource loader correctly handles color references
added error handling for query result retrieval in AbstractJPAQuery . java and created a test for uniqueResult functionality in AbstractStandardTest . java
refactor communities handling in Collection . java to improve clarity and functionality to enhance the organization of communities by associating them with their
updated the reference to ` l ` in ` DepthController . java ` to use ` LawnchairApp . getInstance ( ) ` instead
removed redundant import of ProcessTools in LocalManagementTest . java to streamline code by eliminating redundancy
removed the parameter ` now ` from the ` updateTotalEnergyAverageUsage ` method in both ` EnergyProcessor ` and ` E
refactor ExtensionStack to handle null extensions and improve string representation to enhance robustness by preventing potential NullPointerExceptions during string concatenation
2 . x : fix flowable . flatmap ( ) . flatmap ( ) . onerror ( ) not dispose inner subscriber ( #
added connection timeout settings to MultiGetRequest and ServerTableSizeReader to improve connection management and enhance error logging for connection timeouts
updated formatting of AndroidPlatformTarget initialization in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replace ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to ensure compatibility with the
added SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and updated inlineImage method in BaseImageService .
added a new test to verify output hash calculation when caching is not writable to ensure that output hash is not calculated when caching is not writable
camel - 14284 : camel - netty - enable use of bytebuffer by default in camel - netty4
updated the method to retrieve the table name from ` getOldName ( ) ` to ` getQualifiedName ( tbl . getTTable ( ) ) `
improve error message when the vertx instance can not be create with prefernativetransport option set to true .
add unit test for color type handler ( fixes # 269 )
refactor StreamEx class to improve code readability to enhance maintainability and facilitate future development
removed hint settings for JAVAEE query and lock timeouts in SessionImpl . java to streamline query execution by eliminating unnecessary hints
added a new file ` StaticLoggerBinder . java ` that implements the ` LoggerFactoryBinder ` interface to provide a singleton logger instance for logging
replaced instances of ` familyMap . put ( family , list ) ` with ` familyMap . put ( family , set ) ` across
updated the condition to check for different window orientation in TaskbarManager . java to ensure correct rendering based on the new and old orientation configurations
unescapes the nickname of the occupant if it ' s xml format
added a new test class ` Issue265Test ` and modified the ` longStackPut ` method call in ` StoreDirect . java ` ,
added @ SuppressWarnings ( " mutable " ) and multiple @ SuppressWarnings ( " Main " ) annotations to multiple Java files to suppress compiler warnings related to
( chore ) camel - test - infra - flowcontrol : fix broken test
updated formatting and improved efficiency in array copying and logging methods to enhance code readability and maintainability while optimizing performance
updated NBWriteServlet and TestWriteListener constructors to accept a boolean parameter for unlimited behavior to enhance flexibility in handling write operations based on
blockchainimpl : update total difficulty after minelight ( # 1 )
simplified the action assignment logic for player seekability in DefaultPlaybackController . java to improve code readability and maintainability
replaced synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and updated related methods in SecurityServicesFeature . java to improve thread
added uniform allocation logic and modified bend distance calculation in AllAppsView . java to improve performance and ensure accurate bend distance calculations
added a check for the presence of a colon in the key in HttpURLConnection to ensure proper handling of keys containing a colon
added PrincipalResolver to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable dependency injection for principal resolution
replaced ObjectMapper with ObjectBuilder for JSON parsing in DelegationTokenResponse . java to improve code readability and maintainability by using Noggit
added a method to remove trailing slashes from the StringBuilder to ensure proper handling of leading and trailing slashes in the builder
added a new method ` matchesAny ` to ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to enhance pattern matching
refactor error message formatting in LoadIncrementalHFiles . java to improve readability and maintainability of the code
fix fire block not fire on potion . close # 269
removed unnecessary whitespace in beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintain consistency
refactor calculation of decreasePercent for improved readability to enhance code clarity and maintainability
added a check for unready input in AsyncContentProducer and improved logging in BlockingContentProducer to ensure correct handling of unready input during
added a null check for the weightField parameter in DocumentDictionaryFactory to ensure that a mandatory parameter is provided to prevent runtime errors
added imports for ` FindAndReplaceStep ` and ` ImmutableMap ` , and modified plist variable handling in ` AppleBundle . java ` ,
fix turret not be able to damage if they be not in the team
updated the return type of ` adaptOrder ` to ` Object ` and cast it to ` OrderCreateApiRequest . OrderCreateApiRequestBuilder ` to
added a new file ` PreParseGrammarTest . java ` for testing XML schema grammar parsing to facilitate testing of XML schema parsing
added ` @ SuppressWarnings ( " doclint : missing " ) ` annotations to multiple Java files to suppress warnings related to the " doclint :
added FontManager import and overriddenFont method call in ExtendedEditText . java to enhance font customization functionality for improved text rendering
added a null check for currentUser in AuthorizeTag . java and created a test for unauthorized access in AuthorizeTagTests . java to ensure that
camel - 14263 : camel - cxf - allow encode a uri that contain unsafe character . thanks to daniel for the
mondrian : fix jdbcgeometrytestsetup so it do n ' t override setupdata
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] stop restore attempts for already cancel task
add server . rmi . create = true to enable rmi registry creation
improve logging of anticompacted ranges in sstables
updated display metrics handling in multiple classes to ensure consistent display metrics across different SDK versions
[ java ] : add cluster member id to the service heartbeat counter to track the member of a service .
added support for handling total thread allocated bytes in ThreadMXBean based on version check to ensure compatibility with version 21 and above
modified the return logic in CustomExpression to handle negative and positive infinity cases and improved hash code generation to ensure proper handling of NaN values and
updated logging statements in AjaxListener . java for improved clarity and consistency to enhance readability and maintainability of the code
added authentication and authorization routes to the AuthenticityController and created corresponding unit tests to enhance authentication and authorization handling in the application
do n ' t re - enter snippet if the node be already alive .
updated the logger initialization to reference HttpClientRequestImpl instead of ConnectionManager to ensure the correct logger is used for HTTP client requests
fix the order of compare ( ) method in defaulttrackselector .
refactor RuntimeSerialization class to improve code readability to enhance maintainability and facilitate future updates
danielwagnerhall : do n ' t try to crop image if it be already crop
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` and updated related references in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and
tika - 1348 -- allow content - type parameter to be specify in the email body .
updated the URI construction in ThumbnailsCacheManager . java to use fileId and getLocalId instead of remotePath to improve clarity and accuracy in
added mark and reset methods for input handling in Source . java to ensure proper handling of input mark and reset operations
added @ Deprecated annotations to multiple classes and tests to indicate that these classes are outdated and should not be used in new code
added a configuration property for showing or hiding error stacks in the server error page to enable users to control the visibility of error stacks on the
bug 10729 : cleanup account in domain and delete account in accountmanagerimpl . removeaccount
sparcarithmetic : do n ' t throw a bailout if the foreign call be require
( chore ) camel - kie - api : implement method that throw unsupportedoperationexception for legacy drl api
added a new boolean variable ` waitingForResult ` and modified the ` onRequestPurchaseResponse ` method to use ` Display . getInstance ( )
increased the default timeout value from 100ms to 1000ms in UnboundedSourceSystemTest . java to improve test reliability by allowing
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code clarity and ensure proper handling of parent resource
8274889 : [ testbug ] remove obsolete test for jdk - 8274883
added a check for blank scope in DependencyInsight . java to ensure a default value is used when the scope is not provided
refactor error handling in BTCETradeServiceRaw to use constants for error messages to improve code readability and maintainability by reducing
[ hotfix ] [ test ] use hamcrest assertion instead of junit in camel - core
added ` getPaymentRequestUrls ` method to ` BitcoinURI ` class and corresponding tests in ` BitcoinURITest ` to enable retrieval of payment
planner - 383 : throw illegalargumentexception instead of illegalargumentexception when use a parameterized collection .
removed duplicate call to setFolderInfo in FolderPagedView . java to streamline code by eliminating redundancy
jfr : do n ' t free jfr buffer in jfrchunkwriter and jfrbuffernodelinkedlist
refactor null value check in BasicAbstractTuple to use a for loop to improve readability and maintainability of the code
refactor ` LintUtility ` to use ` InputResourceUtility ` for reading and parsing linter configurations to improve resource handling and error logging for
replace direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a Runnable to ensure backgrounds and paddings are
fix inventory . oninventorytick not incrementing index correctly .
added a case for OCELOT _ BABY in PlayerEvents . java to handle the OCELOT _ BABY
added multiple @ PublicEvolving annotations to StateTtlConfig . java to enhance the functionality of the StateTtlConfig class
added null check for variable ' x ' in PreparedStatement and adjusted method calls accordingly to ensure proper handling of null values and improve code clarity
[ java ] improve archivetool documentation for ` describe - all ` and ` describe - descriptor `
replaced double quotes with single quotes in StringBuilder . java to improve code readability and consistency
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest ` to validate JSON serialization functionality to ensure proper handling of JSON
updated imports and refactored the removal of transactions and blocks in BroadTest . java to improve code organization and enhance cache management functionality
added functionality to enable or disable the privileged mode based on the " LeLensMask " command in AmcrestHandler and Dah
removed NoSuchBuildTargetException from method signatures in BuckConfig and BuildRuleFactoryParams to simplify method signatures by eliminating unnecessary exception handling
updated the constructor of ChangeLogIterator to accept a list of ChangeSetFilters instead of a single list to enhance flexibility by allowing customizable
do n ' t swallow guest exception in launcher
updated environment variable retrieval to use system property to ensure compatibility with different environments
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility across different versions
refactor spacing logic in SpacesVisitor to use dropParentUntil for better clarity to improve code readability and maintainability by reducing
add copy ( boolean nearcache ) method to servercacheoptions to allow copy of servercacheoptions
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to address the issue of border visibility on flo
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` to
updated variable names and exception handling in KucoinExchange . java from LIVE _ URI to PROD _ URI and added logging for K
updated string concatenation syntax and improved resource path handling in SpringResourceAccessor . java to enhance code readability and ensure proper resource path formatting
updated unit tests in SmartHomeUnitsTest . java and SmartHomeUnits . java to replace " μ " with " � "
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure
deleted the Tls12SocketFactory . java file to the functionality is no longer needed in the project
fix duplicate entry in texbibentriesresolver # resolve ( # 3390 )
added a check for Robolectric ' s legacy mode in ResourcesTest . java to ensure proper handling of legacy resources in Robolect
added a check for FirebirdDatabase to return a specific DatabaseDataType " DOUBLE PRECISION " to ensure proper handling of double precision in Firebird
added null checks for dataSource and transactionManager in DefaultBatchConfigurer to prevent potential NullPointerExceptions during initialization
[ gestalt ] add @ api annotation to package - info . java for unittest . stubs
updated the command from " www . google . com " to " 127.0 . 0.1 " and modified test methods to include a
fix findbugs warning in ebeanserver _ savealltest . java
updated TermScorer instantiation to conditionally use scores based on scoreMode to ensure correct scoring behavior based on score mode requirements
fix npe in dataflowmetrics when no metric be set
server : fix npe when deployvm fail to start
refactor dynamic partition pruning to use a helper method for finding the target object inspector to improve code readability and maintainability by reducing
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` and ` ActionAnalysisData ` to
added logic to set the row selection interval for the selected row in the table to ensure proper selection behavior when a row is selected
[ j2kt ] add helper method to test assert arraystoreexception .
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future development
added user agent parameter and related methods in HttpClientBuilder and HttpClientConfiguration to enhance HTTP client configuration flexibility by allowing users to specify a specific user
refactor session management to use a computeIfAbsent method for creating and restoring session data to improve code readability and maintainability by reducing
updated assertions in IssueTest and changed results type from HashSet to Set < Object > in Reporter to improve clarity of test results and ensure consistent
updated ByteArrayDataSource initialization to handle null file content type to ensure default content type is used when content type is not provided
add an activationrequestdenied event to the character system , and use it in the entity system .
reformatted code in GraphApplet . java for consistency and clarity to improve readability and maintainability of the code
added a method to update the snapshot radius for task views in RecentsView and updated the visibility of the updateSnapshotRadius method in Task
added logging for schema generation and updated revision assignment in StaticMicroserviceVersions . java to improve traceability of schema generation for 3rd party services
changed the return type of the ` put ` methods in ` ArrayMap ` from void to int to allow the method to return the index instead
updated KafkaContainerCluster to use a startup timeout and streamlined broker start logic to improve code clarity and maintainability by using Java ' s
http : / / issues . apache . org / jira / browse / amq - 4237 - retry send back message if exception
updated header checking logic in StaticServerHttpHeadersWriter to check for headers with different case to ensure that headers are not written in the same case
added package access check for listener types in EventListenerList . java to enhance security by ensuring proper access control for listener types
added a custom ` CustomAdapter ` class and modified ` onCreateView ` method to utilize them to enhance the user interface by providing custom
updated the ` applyIcon ` method to accept both ` ImageView ` and ` Task ` parameters to enhance flexibility by allowing both ` Image
refactor DownloadStateCursor to use try - with - resources for resource management to ensure proper resource management and avoid potential memory leaks
fix ( sqm - to - sql - ast - converter ) : handle insert clause in sqm - to - sql ast
added JUnit test annotations and removed transaction context in HibernateCursorIntegrationTests and HibernateCursorProjectionItemReaderIntegrationTests to improve test coverage
refactor DataInputStreamWithTimeout to utilize Future for asynchronous processing and improve error handling to enhance thread safety and maintainability of the code
added ENABLED _ TS ( 0 ) to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to enable
refactor UpgradeCatalog150 . java to improve code structure to enhance maintainability and readability of the upgrade process
rename ` ` testnet3 ' ' to ` ` oldtestnet ' ' for consistency .
do n ' t update the object panel if there be only one geos selected
updated onboarding preferences handling in AppsDividerView . java and added @ Nullable annotation in ActivityContext . java to improve code clarity
replaced ` IOUtils ` with ` BufferedIndexOutput ` and refactored ` HdfsIndexOutput ` to utilize ` BufferedIndexOutput
pdfbox - 4892 : do n ' t set clip when the path iterator be not complete
removed synchronization around localAddress assignment in SocketChannelImpl . java to simplify the code for better readability and maintainability
refactor row addition logic into a separate method ` addToRow ` to improve code readability and maintainability by reducing redundancy
added a method to check if the operating system is Windows before attempting to rename files to ensure compatibility with non - Windows operating systems and improve error
replaced ALPHABET with CHECK _ DIGIT _ STRING and updated related references in Code39Reader . java and Code39Writer . java to
refactor the logic for handling unexpected types in NodeGenFactory . java to improve clarity and maintainability of type casting logic
removed unnecessary conditional check for fieldType . stored ( ) in IndexingChain . java to streamline code for better readability and maintainability
fix ( sql ) : fix timestamp with nanosecond in where clause
removed unnecessary conditional check for ` postedRunnableStacktraces ` before adding to ` runnables ` to simplify code logic for better readability
camel - 14284 : camel - google - cloud - storage - api - v1 : fix typo in description of abstractgs
replaced ` assertInitialized ` method with ` waitUntilInitialized ` method in ` ConnectionPoolTest . java ` to ensure that the waiter waits
updated directory retrieval method calls from ` null ` to ` " single " in ` CachingDirectoryFactoryTest ` and ` RAMDirectoryFactoryTest
refactor FaultTolerantChunkProcessor to directly manage filter counts instead of using a size parameter to improve code clarity and maintainability by
added tab initialization and error handling in FileWithTabs and T4994049 classes to enhance file handling and improve error reporting for unexpected return
replaced manual return statements with assumeTrue method in ConsoleReaderTest . java to improve code readability and maintainability by reducing redundancy
removed unnecessary isAdmin check when processing session data to simplify code logic for better readability and maintainability
adjusted calculations for newSelection and currentPageCol in AllAppsView . java to improve accuracy of velocity and position calculations
do n ' t call threadinfo . notifyclientonresultsavailability when there be no thread .
refactor DataModelManagerDialog and ExportPanel to improve connection handling and encryption logic to enhance code clarity and prevent potential null pointer exceptions
replaced ` writeBufferSize ` with ` WRITE _ BUFFER _ SIZE ` for consistency and clarity to improve code readability and maintainability by
replaced the segment size calculation method with a SegmentInfo instance to streamline segment size calculation and improve code clarity
fix an issue with armature modifier not be validate if the dvert be not present .
refactor FileDisplayActivity to improve code readability to enhance maintainability and facilitate future updates
replace direct creation of UnsupportedOperationException with a predefined instance to avoid filling in stack trace to improve code clarity and maintainability by avoiding filling in
updated the method to return the average line height instead of the label bounds to improve accuracy of label height calculation based on the number of lines
replaced the singleton instance of RotationTouchHelper with a constructor that accepts a DisplayHolder to improve modularity and encapsulation of the Rot
refactor quote handling logic in AVA . java to improve clarity and maintainability of string processing logic
replaced ` Long . valueOf ( s , 16 ) ` with ` IdConversion . convertToLong ( s ) ` and updated the handling of
added a new test method ` testSmall ` and ` testBig ` to ` ServerDatagramConnectorTest . java ` and implemented a server
updated the assertion in TestSqlEntityProcessorDelta . java to correct the substring syntax to ensure correct parsing of the COUNTRY _ CODE _ s
refactor caching logic in Cache . java to improve performance and maintainability of cache operations
updated variable names from ' e ' to ' ev ' in ResourceSetRegistrationEndpoint . java to improve clarity and consistency in variable naming
removed unused imports and updated IndexSearcher initialization in TestUnifiedHighlighterTermVec . java to improve code clarity and maintainability by
added a main method to GcodeTable for initializing a GcodeTable with a JFrame , JScrollPane , and a JTextArea to
replaced the constant WEBAPP _ CONNECT _ TIMEOUT with a configuration property for connection timeout to improve flexibility by allowing configurable timeout values
updated various Java classes for consistency and clarity to improve code readability and maintainability
refactor TestMediaService for improved readability to enhance maintainability and facilitate future development
removed the public static String HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK from Messages . java to streamline the
add main method to print market currency in desktop
add hostname validation to endpointaddressinterceptor to ensure account id do not contain invalid character
added multiple registerSecurityKeyStart and registerSecurityKeyComplete methods to AccountProxy and HttpAccount classes to enhance security key registration capabilities in the application
refactor ServerSpanThreadBinder class for improved readability to enhance maintainability and facilitate future development
bulletphysics now use userpointer instead of userpointer , and increase the allowance to 0.04 .
replaced " Location " with " the _ geom " and added " number " to the builder in Csv2Shape . java to improve cl
replaced callGasWord with gasCost in VM . java and removed unused imports in Program . java to streamline gas calculation and improve code
refactor parameters for improved clarity to enhance maintainability and readability of the code
added piePlot . setIgnoreNullValues ( true ) to MultiplePiePlot . java to enable handling of null values in pie
refactor resource bundle loading logic to streamline the loading process to improve code readability and maintainability by simplifying the loading process
pdfbox - 4892 : fix typo , a suggest by valerybokov
aFreeplaneAction , ExecuteScriptAction , and AFreeplaneAction classes now have a method to check if the action is allowed during the
added a userModified flag to the LoginSamlAuthenticationProvider class to indicate that the user has been modified
added a new file TestSealedObjectNull . java to test the equality of a SealedObject with a null cipher to ensure that the
updated method names from ` onOpen ` to ` succeeded ` in ` ConnectPromise ` and ` WebSocketClientConnection ` to improve clarity and
replaced the usage of the Tag . SNOW with a static Set of Materials based on server version to ensure compatibility with different server versions
added ` lastTradeId ` tracking and modified Trade instantiation in ` CryptsyAdapters ` and ` CryptsyPublicTrade ` to
added error handling when closing the HMS connection to ensure proper resource management and avoid potential memory leaks
use random . nextlong ( ) instead of system . currenttimemillis ( ) for seed
added a new device profile for the Nexus 5 device in DynamicGrid . java to enhance the flexibility of the device ' s icon size
2 . x : fix flowable . refcount ( ) to disconnect early
replaced the method of instantiating SynthContext from ` type . newInstance ( ) ` to ` ReflectUtil . newInstance ( type ) `
added support for a new whitespace token type ` WHITESPACE _ AROUND _ TEXTUAL _ OP ` in the formatting logic to enhance formatting capabilities
added checks to ensure ` writeFile ` is not null and ` file . length ( ) ` is greater than zero before writing to prevent errors when
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during operations
log4j2 - 1346 add support for mutable logevents in smtpmanager . add ( )
changed the PADDING property builder from LengthLike to NonNegativeLengthLike to ensure proper handling of negative padding values
replaced calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` in multiple resource classes to simplify context
fix handling of jimple catch in methodirbuilder .
updated formatting in JUnitRunner . java and AndroidPlatformTarget . java for improved readability and clarity to enhance code maintainability and
updated cacheSize calculation from maxMemory / 16 to maxMemory / 8 to optimize memory usage for improved performance
added a condition to check if ` start ` is zero in ` InvocationStageTrace . java ` and modified the JSON structure in ` TestInvocation
pdfbox - 4892 : fallback to bcks if keystore can not be load
updated server socket port initialization and URL verification logic in UpstreamCheckUtilsTest . java to improve test reliability by dynamically retrieving the local port
bug fix for split pane , make sure we do n ' t resize the split pane
fix glrenderer to only set max compute shader , geometry shader , tessellation shader , and max tessellation shader limit for
refactor PopulatorContext class to improve code readability to enhance maintainability and facilitate future development
do n ' t send save all notification for project that do n ' t have data
added UTF - 8 encoding handling in ZQLJobManager to ensure proper character encoding is used when writing JSON data
updated the condition to check if the last argument is an instance of Table to ensure that the argument length is greater than zero before proceeding with
replaced hardcoded header strings with a constant variable in FakeOSSOHeaderDecoder . java to improve code readability and maintainability by
added @ Deprecated annotations to multiple options in GenerateJavaSources . java and Config . java to indicate that these options are outdated and should not be
removed debug log statements related to Apache Derby driver class loading and system information to streamline error logging for better clarity and maintainability
[ cep ] fix flakiness of cepesptest and cepjavatypetest
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by redu
updated the operation type comparison to be case - insensitive and added a check for the Liquibase hub mode before updating the properties file to
added constants for Java VM version success and failure keys in Constants . java and implemented a test for version information in TestDDRExtensionGeneral .
modified font addition logging logic in FontFamily . java and created a new DebugFonts . java file to enhance clarity of font addition requests
added HTTP _ 1 _ 1 negotiation logic in NegotiatingServerConnectionFactory to ensure proper handling of negotiated HTTP versions
added RateControl import and set rate control to No _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to improve test reliability
added a new Java file ` Test6741426 ` implementing a Runnable with a JComboBox and JTextField to facilitate testing
updated the error message in the assertion in CsrfAwareEntryPointAndDeniedHandlerTest to include the exception message to improve clarity of
added null checks for dbMgdPath and dbExtPath in conditional statements to improve robustness by preventing potential NullPointerExceptions
added package declaration for s3CopyObjectRequest to ensure proper organization and access to the S3 library
refactor setup methods to remove accentColor and preference screen parameters to simplify category setup logic and improve code maintainability
updated the error message in TemporaryFolderUsageTest to include the fileAtRoot variable to improve clarity of the error message for better debugging
replaced instances of ` ClassTypeInformation . from ( Map . class ) ` and ` ClassTypeInformation . from ( Collection . class )
add address validation to clientnetworkconfig # addaddress ( string , string ... )
added " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate validation for keynectisroot
logstash - 1342 : return the number of output in the pipeline instead of void
added a condition to set the menu mode only if the popup is not showing and reset the model ' s armed state to ensure the menu
pdfbox - 4892 : fix arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added a new test class FinalizerInfoTest to verify the finalizer information of a MyObject class to ensure that the GC . finalizer
use doonnext instead of map in cachingroutelocator to avoid race condition
refactor handling of custom address and receiver address retrieval in BurningManService . java to improve clarity and maintainability of the code
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future development
updated the byte array size in BatchValidateSignContractTest from 1 , 000 , 000 to 1000 , 000 , 000 and added an @ Ignore
updated the method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity and consistency in method naming
updated query handling in RetweetActivity and Search classes to replace " @ " with " from : " to ensure consistency in query formatting for better
removed the conditional check for rebalance in SimulatorDiscoverer . java to streamline the code by eliminating unnecessary checks
added a new POST endpoint for importing an account in YubiKeyAccountRegistryEndpoint to enable users to import an account from the YubiKey
removed several shader program additions and updated parameter handling in multiple classes to streamline shader management and improve code clarity
added null check for ` cnt ` in ` paintOnTopLoop ` method and adjusted padding logic in ` SideMenuBar ` to ensure proper
refactor AbiWriterProtocol to improve code readability to enhance maintainability and facilitate future development
added a check for null subName before setting the caption in HierarchyBase . java to ensure the correct caption is assigned when subName is
change the data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to ensure
updated condition checks and added a null check for sim in CustomExpression . java to improve code robustness and prevent potential NullPointerExceptions
replaced the method ` requestBlindVoteListFromNetwork ` with ` sendRepublishRequest ` in ` VoteResultService . java `
added a new test method ` testCase4 ( ) ` to ` PostgresTest . java ` to validate the functionality of ` Hik
replaced double quotes with single quotes in substring methods to improve code readability and consistency
replaced hardcoded line separators with a constant for better maintainability to improve code readability and maintainability by avoiding magic strings
replace atomicreference with atomicreferencefieldupdater for singleimplementor . currentsnapshot .
added null check for filters before adding them to the qlist in SimpleFacets . java to avoid potential NullPointerException when filters are null
fix ( core ) : merge bridge and bridgeimpl into a single thing
replace calls to ` printHelp ( ) ` with specific error messages in ` Ktab . java ` to improve error handling by providing clearer
added a check for the existence of the output file before returning it to avoid unnecessary processing when the output file already exists
added date parsing logic for date strings in DateConverter . java and corresponding test in DateConverterTest . java to enhance date parsing accuracy and ensure
added assertions to verify the existence of a post by its slug in SpringDataJPALockTest . java and implemented a query in PostRepository
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and modified its initialization logic to improve
added a static request factory with connection and read timeouts in ClientRegistrations . java to configure HTTP client request timeouts for improved performance
added assertions to verify file existence and original file names in SourceTest . java to ensure that the Source class correctly handles file paths and their original
remove graalvm . version system property from defaulthomefinder
added expiration checks for access token and refresh token validity in ClientAdminBootstrap to ensure proper configuration of client access and refresh token validity settings
updated the return statement to use Options . v ( ) . android _ api _ version ( ) instead of defaultSdkVersion to ensure compatibility with
removed ` this . ` prefix from references in ` PropertyPlaceholderHelper . java ` to simplify code and improve readability
removed the placeholder from the Subject Public Key Algorithm in the resource file to simplify the text for better readability and maintainability
refactor ZkSolrClientTest to manage collection processing more efficiently to improve test reliability by ensuring all collections are processed in parallel
added BigInteger to simpleTypes in MongoMappingContext to support BigInteger data type in MongoDB operations
added a condition to check if the toast is displayed when the button text equals the string to ensure that the toast is only displayed when the button
added a condition to check if MEncoder has out - of - sync settings are enabled before proceeding with video processing to ensure proper handling of
fix ( netty ) : increase default nio event loop size to 15
changed access modifiers of several fields and methods in CountMin4 and AdaptiveWindowTinyLfuPolicy classes from package - private to protected
added methods for retrieving ` FileFloatSource ` in ` ExternalFileField ` and created a corresponding test class ` ExternalFileFieldSortTest `
updated error message from " Invalid URL " to " Connection Error " in DoiFetcher . java to provide clearer context for connection errors
added support for handling source components in OpenRocketSaver and updated FlightDataBranchHandler to utilize this new feature to enhance event
changed the access modifier of the check method from private to protected final to restrict access to the method for better encapsulation
added functionality to handle SynchronizeFileOperation in FileActivity to enhance user experience by providing feedback on file synchronization issues
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for file path and modified the request header to enhance URL handling and
added a check for the existence of the client property " cn1 $ infinite " in InfiniteContainer . java to avoid potential null pointer exceptions
updated the total variable initialization and modified the addition logic in IntHashSet . java to improve the accuracy of the total value by incorporating
added a conditional check for locked state before updating the feed in FeedRefreshUpdater . java to improve error logging when the lock timeout occurs
refactor conditional statements for determining user principals in SolarisAclFileAttributeView . java to improve code readability and maintainability by
replaced the list implementation of creating edges from a polyLats array with an array of edges to simplify the code and improve performance by redu
added a try - finally block to close the input stream in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
remove non - ascii character from bibtex comment ( # 2690 )
added strict property handling in Main . java and corresponding test cases in MainTest . java to ensure that unknown parameters are ignored when strict mode is
skip validation of @ constraint ( validatedby = { ... } ) if bean have no @ validatedby ( ) annotation
camel - 14284 : camel - http4 - fix the verifier to use the correct http protocol
added a waitForThingsToLevelOut ( 30000 ) method to TestCloudPivotFacet . java to improve test reliability by waiting for
simplified the conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability by eliminating
refactor ApplicationTest class to improve test structure to enhance maintainability and readability of the codebase
replaced String concatenation with StringBuffer for constructing the details string to improve performance and readability of the code
rename ` Type ` to ` RoboType ` across multiple files to improve clarity and specificity regarding the purpose of the enum
[ java ] do not abort recording descriptor poller if dispatch be complete .
added cache key and cache lookup attribute handling in EntityProcessorBase . java and updated related test cases in TestCachedSqlEntityProcessor . java to
added a new file ` PutfieldError . java ` that tests for ` IncompatibleClassChangeError ` to demonstrate the behavior
camel - 14284 : camel - aws : allow public ip address to be use in a client connection .
[ hotfix ] [ memtable ] enqueue memtable flush if it reach memtable _ flush _ after _ mins and memtable _ operations
replaced instances of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` in multiple Java
removed an unused method encodedLength ( ) from Flyweight . java to streamline code by eliminating redundancy
refactor TestMethodResultMapBuilder for improved clarity to enhance maintainability and readability of the code
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 456 :
[ hotfix ] [ runtime ] remove unused constructor from tasklocalstatestoreimpl
updated return values in Utils . java to include milliseconds and hours , days , and days to ensure accurate representation of time in milliseconds and hours
updated logic to handle DeepShortcutView instances in Utilities and FloatingIconView classes to ensure proper drawable retrieval based on the type of the view
changed the type of the ` validator ` from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > ` and updated
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate
remove hard - coded class name in coveragecontroller . java ( # 1305 )
added a check to ensure EventBus is not registered before registering sticky to avoid potential issues with multiple instances of ThumbnailView
added asciiOnly check to normalize methods in NormalizerBase . java to ensure only ASCII characters are processed to avoid normalization errors
[ hotfix ] [ runtime ] change ismigrationallowed ( ) to aremigrationtasksallowed ( ) in jobcoordinationservice
added error handling for the UPDATE STATISTICS SQL execution in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the
( chore ) camel - cometd : migrate to junit4 for camel - cometd
updated HTML tag attributes in HtmlTag . java for consistency and clarity to ensure compatibility with version 5 and improve code readability
added a line break before the ` < br / > ` tag in ` HtmlCoreReport . java ` to ensure consistent formatting of HTML elements
updated ramBytesUsed calculation to handle null scores to ensure accurate memory usage calculation when no scores are provided
added a custom ` StringHolder ` class and a custom ` StringHolderTypeAdapter ` for serialization and deserialization of ` JsonElement ` objects to enhance
updated MergeCoordinator to use extra data from mining parameters and added a corresponding test to ensure correct handling of extra data from mining parameters
added a static map to track the number of arguments passed to the argsToProperties method to improve flexibility by allowing dynamic configuration of file parsing
refactor PathParamServerEndpointConfig for improved clarity to enhance maintainability and readability of the configuration code
refactor variable name from ` configedThreshold ` to ` configuredThreshold ` for clarity to improve code readability and maintainability by using
updated method parameter names from ' part ' to ' partOrList ' in RestClientRequest and RestClientRequestImpl classes to improve clarity
[ te ] fix build after upgrade to twitter 1.6 . 0
pdfbox - 4892 : remove unnecessary code , a suggest by valerybokov
hhh - 14836 - deprecate abstractentityloader # load ( object id , sharedsession contract implementor , lockoptions lockoptions
hbase - 25836 regionserversnapshotmanager and regionserverflushtableproceduremanager should use taskpool . poll instead of taskpool
fix setsize ( ) for empty width / height
fix checkstyle issue in util / pool / hikariconfig / hikaridiopool . java ( # 118
initialize luceneMatchVersion to Version . LATEST in AbstractAnalysisFactory to ensure luceneMatchVersion is set to LATEST for
fix proxy constructor generation for interface method with @ client annotation ( # 3390 )
added a condition to check if the input starts with a comma before matching to ensure the parser correctly handles the case where the input starts with a
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
add a check to ensure that the payload length be non - negative and throw an exception if it be negative .
move PublishSubscribeChannel and related classes from the channel package to the dispatcher package to improve organization and clarity of the codebase
updated executionId type from String to Long across multiple classes to ensure compatibility with larger execution IDs across different components
added multiple digest updates for width and height in ImageProcessor . java to improve image processing efficiency by ensuring correct digest size
removed a log statement for overlay version in SolrConfig . java and added import statements in SolrConfigHandler . java to improve logging clarity and
updated the delay duration in FileSyncAdapter from a fixed value to a dynamic value based on the current time to improve synchronization efficiency by allowing more
fix the unit test error of segmentv1tov2tov3formatconvertertest
refactor ` addPathToMTree ` method to accept a ` Path ` object instead of a ` String ` to improve code clarity and
updated DefaultPackageScanClassResolver to handle URI and URISyntaxException in URL processing to improve handling of file paths and enhance error logging for better debugging
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner - blink
added a new file ` SpringSecurityAuthenticationSource . java ` to implement ` AuthenticationSource ` for LDAP authentication to provide functionality for retrieving principal and
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version from LOLLIPOP to KITKAT in ShadowAlarmManager . java to ensure compatibility with the latest SDK
replaced ` Dialogs . autoSuggestDialog ` with ` SimpleFormDialog ` for custom file suggestion to improve user experience by utilizing
added a new test method ` testNewput ` in ` TxInputUtilTest . java ` and modified assertions in ` StoreAPITest .
updated the collection name parameter in the stream method from ` collection . getName ( ) ` to ` collectionName ` to ensure the correct collection name is
simonstewart : fix zoom issue in map overview image
added similarity functionality to KNearestNeighborClassifier and updated related test cases to enhance classification accuracy by allowing customizable similarity settings
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler . java to simplify query creation and improve performance
replaced ` toString ( ) ` with ` getReason ( ) ` for ` reasons ` in ` LowResourceMonitor . java ` to improve cl
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated ShadowBluetoothGattTest and ShadowBluetoothGatt to handle mtu requests with callback functionality to ensure correct mtu request behavior
refactor the output stream creation in TestPayloadNameRequestWrapper to use a dedicated method to improve code readability and maintainability
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging for unsatisfied links
replaced HashMap with ConcurrentHashMap for mProcessingChains in ChannelProcessingManager . java to improve thread safety and performance in concurrent environments
updated the message to include " all , " " grouped , " and " summary " in Japanese and Chinese resource files to improve
updated condition from ` size > 0 ` to ` size > 1 ` in ` JDBCTypeMapping ` and adjusted assertions in ` JDBCTypeMapping
added synchronized keyword to addPlayer and removePlayer methods and modified entity addition / removal logic to ensure thread safety during player interactions
replaced the ` isScreenReaderActive ` method with a direct call to ` AccessibilityStateTester ` to streamline the state testing
added support for the " SIDE _ NAVIGATION " option in MenuBar and SideMenuBar classes to enhance user experience by allowing
removed unnecessary Disposable declaration in PoloniexManualExample . java and added state handling in WampStreamingService . java to improve code
added validation for energy limit in UpdateSettingForEnergyLimitContractActuator to ensure energy limit is greater than zero to prevent invalid contract types
updated variable names and added protocol handling in PostmanJsonBuilder . java and UrlBean . java to improve code readability and maintainability by
added getters and setters for namespacePrefixRef in SoapJaxbDataFormat . java to allow external access and modification of the namespacePrefixRef
refactor assertions in TestRange to use a new utility method for comparing dates to improve code readability and maintainability by reducing duplication
added server restart logic for Jetty Solr runners in BasicAuthIntegrationTest . java and updated security properties in ZkStateReader . java
added price feed parameter to TradesChartsViewModel constructor and updated currency code setting based on preferences to enhance price feed functionality and ensure currency
updated configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to use a local variable for
replaced the variable ` from ` with ` end ` and adjusted its logic for determining the last index of the string to improve clarity and
added file download functionality using FileDataStorageManager in FileDownloader . java to enable downloadable files during the download process
[ java ] set the length of the randomaccessfile in the mappedrawlog .
added a method to check if the registry is running and a method to delete a file if it exists with a retry mechanism to improve reliability
removed unused imports and added startLoading ( ) method call in Quick3dMain . java and TextureTest . java to streamline code and
removed unused private variables and added suppress warnings in multiple Java files to improve code cleanliness and eliminate unnecessary warnings
added null check for instances in TraceFeignContext to prevent potential NullPointerExceptions during execution
added support for setting isolation level to TRANSACTION _ READ _ COMMITTED or TRANSACTION _ SERIALIZABLE in SQLExceptionCode and Phoenix
added transaction handling and error management in multiple classes to improve error management and ensure proper rollback behavior during chunk processing
replaced ` CasClient ` with ` DirectCasClient ` and refactored ` CasManagementSecurityInterceptor ` to extend ` SecurityInterceptor
updated menu item visibility and added category edit functionality in ListFragment and navigation drawer fragment to enhance user experience by allowing users to edit categories in the
renamed the method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation . java ` and updated method names in ` File
pdfbox - 2576 : use base class instead of cosdictionary , a suggest by valerybokov
updated font size handling in TerminalView and modified text size retrieval in TerminalBridge to improve code clarity and ensure consistent text size configuration
do n ' t crash if the fact be not valid
refactor multiple classes including DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser to improve code organization and maintainability
replace direct return of spans with a new ArrayList instance to ensure that the spans list is immutable before use
removed unnecessary lock service checks and streamlined validation and iteration logic in Liquibase . java to streamline code and improve performance by elim
added a method to set the revision in MicroserviceVersions and modified InstanceCacheChecker to set it to null to ensure that the microservice version
replaced UNKNOWN constant with formatted foreign key and index names in TableRetriever . java to enhance readability and maintainability of foreign key and index
camel - 15836 - camel - aws2 - s3 - add configuration test for the s3 component
removed the currency pair parameter from the getBitstampUserTransactions method in BitstampAccountService . java to simplify the method signature for retrieving user transactions
added error handling for component instance retrieval in BlueprintContainerRegistry to improve robustness by preventing application crashes due to missing components
enable push by default if remote push be not enable .
refactor LegacyAddressTest to use a BufferedReader for reading addresses from a dataset to improve readability and maintainability of the test code
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
refactor Push notification handling in NotificationsActivity and DrawerActivity to improve clarity and maintainability of push notification setup logic
added logging for channel closure in NettyAsyncHttpProvider to improve debugging and ensure proper resource management during channel closure
replace null checks with StringUtils . isEmpty for better readability to improve code clarity and reduce potential null pointer exceptions
refactor DefaultAnnotationEngine and Stubber classes to improve code readability and maintainability
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to known issue PHOENIX - 2840
nifi - 1748 : add timezone property to aboutdto to allow the user to specify the time zone
updated assertions and logic in the Splitter and StorageService classes to improve clarity and correctness of range splitting logic
no effective change - code cleanup - remove unnecessary try / catch block
removed redundant synchronized block around circuit addition in CircuitManagerImpl . java to streamline code by eliminating unnecessary synchronization
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using IllegalStateException instead of GdxRuntimeException
[ hotfix ] [ runtime ] move sink and source getter / setter to pollablerunner
replaced error logging with info logging for user authentication failures to improve logging clarity and provide more context for authentication failures
refactor ContainerOrderFocusTraversalPolicy for improved readability to enhance maintainability and facilitate future feature additions
make sure freehand function do n ' t throw exception
reformatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and maintain consistency
refactor connection handling and executable execution in SchemaCrawlerMain and Executable classes to improve resource management and ensure proper closure of database connections
( chore ) camel - http : / / issues . apache . org / jira / browse / amq - 4237 -
updated exception messages from " values " and " labels " to " metadata " in CountersManager . java to improve clarity and accuracy of
modified audio handling logic in MediaManager . java to ensure stopAudio ( false ) is called when mCurrentAudioQueuePosition is less than zero to
added an additional parameter to the debug log statement in HttpConnection . java to enhance debugging information by providing more context during the upgrade process
added support for the ` @ Transient ` annotation in ` JpaPersistentPropertyImpl ` and its unit tests to enable handling of transient fields in
update stack version assertions and request properties in UpgradeResourceProviderTest . java to ensure correct stack version handling and improve test reliability
make trufflelvm . eval return object instead of symbol .
changed the visibility of the method ` isBinaryType ` from private to public and modified logging statements in ` Proxy . java ` to allow external
updated the configuration key for TEZ _ DYNAMIC _ PARTITION _ PRUNING _ MAX _ DATA _ SIZE in HiveConf . java
remove unused parsing error from javaprovider . findproblem ( int )
replaced ` DEFAULT _ OFFHEAP ` with ` DEFAULT ` in ` DictionaryIndexType ` and ` BloomFilterHandler ` classes to
replaced hardcoded newline character with a dynamic line separator in TableWriterTest . java to ensure consistent line endings across different operating systems
refactor DebugHelper class for improved clarity to enhance maintainability and readability of the code
added a boolean field ` ownsTexture ` and its initialization in ` ParticleEffect . java ` to ensure texture ownership is checked before proceeding
added LDAP authentication configuration properties to HiveConf . java to enhance configuration flexibility for LDAP authentication settings
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated input method management in DetailActivity . java to use SHOW _ FORCED instead of SHOW _ IMPLICIT _ ONLY to enhance user experience by
added a test for converting data structures to maps of primitive and object types in DataTableTypeRegistryTableConverterTest to ensure correct conversion of data structures
updated size parameters in TestFileSystem . java from 100 , 500 , and 10 , to 50 , and added a temporary file to improve memory management
updated error message for Rule M2.4 exception in ContentTypeManager . java to improve clarity of error messages for better debugging
applied patch from villind via sourceforge . patch make dropsequences an abstract method so implementing database need to consciously decide if they can drop sequence or not .
added a null check for the status variable in MainWindow . java to avoid potential NullPointerExceptions during execution
updated the assignment of the result of binaryField . createField to variable ' f ' to improve clarity and maintainability of the code
gather leave and parent style for icon event , not just icon event .
added a test method to verify the behavior of ` findOne ` after upserting a non - existing object to ensure that the ` findOne ` method
hbase - 25836 fix findbugs warn in rowindexseekerv1 and bytebuffer
added stats tracking for app launches and modified broadcast intent handling to improve app launch tracking and prevent null pointer exceptions
replaced direct data setting with graphics drawing in JavaSEPort . java to ensure proper rendering and disposal of graphics resources
update instructorfeedbackresultspageuitest and instructorfeedbackresultspageuitest to use team member from roster section
fix inventory . getwindowid ( ) to return 0 if player have no inventory id
added a conditional check for the ' found ' variable before breaking the loop to ensure the loop does not continue when the ' found ' variable is
added a condition to check if returnType is null in multiple parser visitor classes to ensure proper handling of return type annotations when the return type is not
refactor TileMapRenderer to handle null blended tiles gracefully to improve robustness by preventing null pointer exceptions when blended tiles
8274889 : [ testbug ] test / sun / security / pkcs11 / probe / java / util / concurrent / concurrent
simplified the getArea method ' s calculation by adding an additional check for the last variable to improve code readability and ensure accurate
fix ( core ) : fix thread safety issue in throttler
updated the ` PipeEventBus ` and ` PipeBehaviourEmzuli ` classes to override superclass methods and modified event handling logic to improve
updated timeout value from 1000 to TIMEOUT in ZkControllerTest . java to improve test reliability by reducing timeout duration
added a test to verify the passcode functionality with client parameters in TokenMvcMockTests to ensure proper handling of client - specific parameters in the
added new constructors for LengthFilter , KeepWordFilter , and CharArraySet in TestRandomChains . java to ensure the correct number of
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to enable the test to run and ensure
fix interoperability issue in llvmx86 _ 64bitvastart .
updated method calls in ` btCollisionObjectArray ` and ` btRigidBody ` to use ` getInstance ` instead of ` upcast
added a build copyright property and updated the copyright year in BuildProperties . java , and updated the online URL in AboutDialog . java to
add getdistributedobjects ( ) method to jetclientinstanceimpl ( # 11936 )
added debug print statements in FinSet . java and updated variable values in MassCalculatorTest . java to improve traceability of fin and in
replace ` TOTAL _ MEMORY ` with ` MAX _ MEMORY ` in ` SmartDexingStep . java ` to align memory
[ hotfix ] fix checkstyle violation in standaloneschemafetcher
burningman : change burningman output prefix to bisq so that it ' s unique
updated JSON string handling and added exception handling in JsonLoaderTest . java to improve code clarity and ensure proper exception management during JSON parsing
updated the capacity check in ObjectSet . java from 1 to 0x40000000 to ensure that the required capacity is within the range of 0
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve clarity and ensure data scale is only set when it is
removed the @ AddToRuleKey annotation from several private fields in AppleTest . java to streamline the code by eliminating unnecessary
added error handling for security exceptions in FileHelper and updated content handling in TextHelper to improve robustness by preventing application crashes due to
added a new constant ` StyleWithMultipleAttributes ` and two test cases for ` resolveAttributes ` in ` ShadowThemeTest ` to enhance theme
updated the parameter in ` doesContainsSheetName ` method from ` - 1 ` to ` sheets . size ( ) ` in ` HSS
change the color used in the ManageAccountsActivity from primaryColor to elementColor to ensure the correct color is used for the accounts activity
added a null check for replyHandler in DefaultEventBus . java and simplified path resolution in DefaultPlatformManager . java to improve robustness by
added binaryCollationName configuration to MariaDbDbmsType and MySqlDbmsType , and modified SQL query handling in FilterSortedSkip
added a default method ` whenType ` to the ` Tree ` class that returns an ` Optional < T > ` to enhance type safety by
refactor navigation logic in ItemLauncher to use a new method for user view destination retrieval to improve code readability and maintainability by reducing
replaced the return statement to return a temporary redirect instead of a successful response to improve user experience by redirecting to the application ' s public
[ flink - 20663 ] [ kinesis ] add check for non - serializable kinesis deserializer
( chore ) camel - aws2 - sjms : update license year for new file
added a try - finally block to ensure the ZkClient is closed after initialization to ensure proper resource management and prevent potential memory leaks
rename methods and variables related to icon transitions from " setIconAndDimTransitionProgress " to " setIconsAndBannersTransitionProgress " across multiple
added a new method ` read ` to the ` ProxyHandler ` class for reading data from a ` EndPoint ` to improve code clarity
replaced ` BufferUtil . allocate ` with ` ByteBuffer . allocate ` for length 11 in ` ABCase1 _ 2 . java ` to
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success or failure to improve clarity and control flow of the upload process
replaced direct comparison with Integer . compare for order comparisons in AbstractConfigLoader . java and updated test cases in TestMicroserviceConfigLoader .
added a new class PicOfDayAppWidget to handle pic - of - day app widgets to enable users to update the app widget ' s
server : set default value of internallbvmofferingid to 0 to avoid npe
updated imports and method calls in HiveParserCalcitePlanner to use HiveRelOptUtil instead of RelOptUtil to improve compatibility with Hive
[ hotfix ] [ runtime ] deprecate unused code in streaming api
added username and password options for remote jmx access in NodeToolCmd . java to enhance security by allowing users to access remote jmx via
removed duplicate initialization of scratch in Stemmer . java to improve code clarity and reduce redundancy
updated widget ' s applyFromAppWidgetProviderInfo and applyFromResolveInfo calls to include mPageViewIconCache and numPages parameters to
ggb - 2852 fix for 3d view on thumbnail
updated rotation calculations in GcodeRenderer . java to ensure proper positioning and prevent negative values to improve rendering accuracy and prevent rendering errors
added a new option WORKSPACE to the OptionEnum and updated TerminalClient to set the workspace directory to enhance the application ' s configuration options for
rename generate file : it ' s . html , not . apt ( even if i initially want apt , but snippet macro could not do it )
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to enhance test reliability and clarity by using
refactor ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` ModelAndView ` to
added assertTrueEventually to validate session retrieval and cache hit count in HibernateIT . java to improve test reliability by ensuring the correct
refactor EventBusHook class to improve code readability to enhance maintainability and facilitate future development
refactor MultiPaintEventTest class for improved readability to enhance maintainability and facilitate future development
removed final modifier from mNewScale assignment in WorkspaceStateTransitionAnimation . java to improve code readability and maintainability
refactor SyncFactory to improve synchronization logic to enhance performance and maintainability of the synchronization process
added handling for unique key fields in LukeRequestHandler to ensure proper identification of unique keys in the schema
added functionality to set document filters for stroke and background colors in BorderEditor and updated color handling in EditableResources to enhance color rendering capabilities and
fix assert . neverpartofcompilation ( ) in binaryparseexception and assert . neverpartofcompilation ( )
[ hotfix ] [ test ] fix deprecation in defaultschedulertest
added logging statements for pending requests in GatewayRSocket and GatewaySocketAcceptor , and modified backpressure handling in PingPongApp to improve
added Toolbar . OnMenuItemClickListener implementation to RecentChatFragment to enhance user interaction by allowing the menu item to be clicked under construction
replaced ` ButtonDropTarget ` with ` UninstallDropTarget ` and modified methods in ` InfoDropTarget ` and ` UninstallDrop
replaced instances of ` add ( ) ` and ` removeTail ( ) ` with ` push ( ) ` and ` pop ( ) `
updated API URLs and EVENTLOG _ WIKI from " testwiki " to " commonswiki " in CommonsApplication . java
refactor index handling by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and maintainability by encapsulating index
replace usage of Collections . sort with direct method calls to improve code readability and reduce boilerplate
added DateTimePatterns to the FormatData _ hr _ HR . java file to support additional date and time formats in the application
added clearFocus ( ) method call to clickedView in DetailFragment . java to ensure the clicked view is cleared when necessary
updated language selection logic in DescriptionsAdapter and removed unnecessary null check in SpinnerLanguagesAdapter to improve user experience by ensuring the correct language is
updated time zone identifiers from " WSST " to " WSDT " across multiple language files to improve clarity and consistency in time zone naming
added native methods for registering global and weak fields and refactored the FastGetField class to use these methods to enhance functionality and improve code
added default value handling for UNION and NULL types in ReflectData . java and updated test assertions in TestReflect . java to ensure correct handling of
updated the offer timeout value from 300ms to 1000ms in SedaBlockWhenFullTest . java to allow more time for the offer
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerExceptions during remapping
add constructor to hapifielddialect that take the databaseversion
camel - 15836 : http producer should set connection header to ` ` connection : close ' ' when use http / 1.0
increased the socket timeout from 60000 ms to 120000 ms in BasicDistributedZkTest . java to allow more time for
added an assertion to verify that the count of tickets with status = ' FREE ' and final _ price _ cts greater than 0 is
refactor Parser class to improve code readability to enhance maintainability and facilitate future development
refactor CasProcessingFilter to improve code structure to enhance maintainability and readability of the code
simplify code by use getfirstelementchild ( ) . getfirstelementchild ( ) . getchild ( ) . getchildren
[ optaplanner - 1348 ] use immutable look - up strategy for enum , and add test for it .
[ hotfix ] [ runtime ] wait for node to shut down in clusterenvbase
elcontextcleaner : change log level from warn to info
added a content type of " application / octet - stream " to WebdavEntry . java to ensure proper handling of multipart / form - data
added a method to retrieve the queue size in LazyTraceThreadPoolTaskExecutor and created corresponding unit tests to ensure that the queue size is accurately
add distance check to distanceop to avoid infinite loop
changed the variable name from ' required ' to ' requiredLabel ' in AbstractUITag . java to improve clarity and consistency in variable
removed the next ( ) method from the PurgingPartitionIterator class and called updateProgress ( ) directly to streamline the code by elimin
added a method ` getAsUnescapedPath ( ) ` to ` SchemaPath ` and updated its usage in ` VectorUtil ` to enhance the
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to the ` BaseMonochromeBitmapSource ` class to provide a
added validation to ensure polygon has at least 6 points and updated localVertices assignment logic to improve robustness by preventing array access issues
replaced ` ObjectMapper ` with ` ObjectMappers . newDefaultInstance ( ) ` in multiple files to standardize object mapping for improved
ggb - 2851 avoid npe when try to compute the square of an implicit curve with a null coeff
updated ` ExternalNameRecord ` to use ` readUByte ` and ` readUnicodeLEString ` for handling compressed and compressed Unicode names to
fixed typo in description of jms destination type
added conditional logic to exclude username and password from login prompts in LoginInfoEndpoint . java and corresponding test cases in LoginInfoEndpointTests .
updated listener removal logic from ` remove ( listener ) ` to ` removeIf ( listener - > l - > l = = listener ) `
added a case to toggle the spinner action in the PieChartActivity to enhance user experience by providing a smoother transition to the chart
kvm : kill copy process if copy _ vhd _ to _ secondarystorage return null
hbase - 25827 hmaster . normalizetables ( ) should skip table that have a namespace quota ( # 2370
removed unused imports and added a resize method for pressure in AndroidInput . java to improve code clarity and ensure pressure is respected before use
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and formatted the ` @ VisibleForTesting ` annotation to improve code
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to mark the test as ignored due to blocking issues
fix the hopperhock not be able to place item in the right place . close # 374
added authentication dialog functionality in SsoWebViewClient . java to enhance user experience by providing basic authentication options
refactor TestStressIndexing2 to improve document deletion and query handling methods to enhance code clarity and maintainability by centralizing document deletion
[ hotfix ] [ test ] ignore upsertkafkatableitcase due to flink - 22559
replaced direct retrieval of ` typeList ` with ` computeIfAbsent ` and corrected the calculation of ` csize ` and ` ctype ` to
hhh - 14850 - allow single - value array deserialization in defaultentitymapper
updated localization messages to include " BE , UK , and SL . " to provide clearer context for localization updates
do n ' t show default category for cl . app . categories , use cl . app . categories instead
refactor ` visitExpressionInstanceOf ` to ` visitRelExpressionInstanceOf ` in ` ASTBuilderVisitor . java ` and add a new
nifi - 4892 : added mime . type to the response for http gethttp
add a toprovenance ( ) method to ResourceHistoryProvenanceEntity and initialize it in BaseHapiFhirDao and ResourceHistoryTable
rename exit button to done button in HelpActivity and add search book content handling in SearchBookContentsActivity to improve clarity and user experience by
refactor NatsConfiguration class to improve code readability to enhance maintainability and facilitate future development
refactor ` invalidateStalePartition ` to ` invalidateStalePartitions ` and update its implementation to accept a ` MetastoreContext ` parameter to
improve performance of viewresultsfullvisualizer by use circular buffer
updated the icon resource in UsersAndGroupsSearchProvider and ShareUserListAdapter from ic _ group to ic _ chat _ bubble to improve the
updated method calls from ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure thread safety
updated method names in MocksCreationTest for consistency and clarity to improve readability and maintainability of test method names
added a constant for the data source name in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to
increased the timeout duration for awaiter from 10 seconds to 30 seconds in multiple files to allow for more time for the phaser to
removed the BuildSlaveFinishedStatusEvent class and its usage from DistBuildRunCommand and DistBuildSlaveEventBusListener to simplify the event publishing
fix findbugs encode warning in vmwarestoragemanagerimpl . java
add test for deposit workspace item without workflow
added distinct filtering to the classpath processing in ClassLoaderSupportImpl . java to ensure only unique classpath files are processed
removed the method ` isBoxedPrimitive ` from the ` Unbox ` class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool and add a test for ordering of flags to improve code clarity and ensure correct ordering of flags in
added a null check for the table before deleting the directory to avoid potential NullPointerException when the table is not external
updated asynchronous execution settings and improved error messaging in HiveServer2 to enhance thread management and provide clearer feedback on asynchronous operations
added try - catch block around dismissing the dialog to handle potential exceptions during dialog dismissal
refactor UpgradeResourceProvider to use a static final EXECUTE _ TASK _ ROLE constant for task execution filtering to improve code clarity and maintain
added a variable to store current configuration information in OperationSetTelephonyConferencingSipImpl . java to improve clarity and maintainability
fix an npe in the log view ( # 4560 )
updated return statements in ChannelEndPoint to include input and output shutdown checks to ensure proper handling of socket state based on channel state
refactor SetNullableGenerator to improve code structure to enhance maintainability and readability of the code
camel - 16407 : camel - example - reportincident should use the cxf endpoint instead of the cxf one
simplified import statements in NettyRoutingFilter . java and refactored form handling in FormIntegrationTests . java to improve code read
added an ApiOperation annotation and implemented the hello method in multiple service classes to provide a flexible way to handle person names with specified values
updated lifecycle listener management in Lwjgl3Application . java and modified method signatures in Lwjgl3Window . java to improve
updated the FG _ FK color value from 90 to 200 in UIUtil . java to improve the visual appearance of the UI component
do n ' t require mp3 in the sound manager , since it do n ' t support them
fix secondaryindexmanagertest . testbuiltindexes ( ) by use getbuiltindexes ( )
pmd - plugin : display version and eclipse version in preference page
[ hotfix ] [ test ] use optional instead of throwable . getcause ( )
refactor MediaFormatUtil class to improve code readability to enhance maintainability and facilitate future development
added an overridden method ` isCellEditable ` that returns false in ` GeneralTab . java ` to provide a default implementation that returns false for
introduced a new method ` isUnusedDependenciesOnlyPrintCommands ( ) ` to control whether to print unused dependencies only to improve flexibility
added a static integer variable ` tmpCount ` and modified the ` vscales ` array in ` VocalTractScalingProcessor . java `
updated import statements in BaseScalarUdfTest . java and TestGenericUDFConcat . java to ensure proper usage of BaseScalarUdf
implemented hashCode ( ) and equals ( ) methods in UaaAuthenticationDetails class to ensure proper object comparison and hashing for better object comparison
update testskeletoncontrolrefresh to use animcomposer instead of animcontrol .
renamed NodeFilter to NodeCountFilter and updated related method signatures to improve clarity and consistency in naming conventions
updated the condition to check if the size of sync block to fetch is less than or equal to SYNC _ FETCH _ BATCH _ NUM
updated the state and local context values in DebugExpressionParser . java for improved clarity and consistency to enhance code readability and maintainability
updated dependency exclusion logic to check for classpath dependencies to ensure only relevant dependencies are processed in the classpath
added a new method ` dst2 ( T v ) ` and renamed the method ` lerp ( T target , float alpha ) `
initialize the ` args ` variable to an empty array in ` GridHubConfiguration . java ` to ensure ` args ` is initialized before usage
refactor linker flags handling in RustBinaryDescription and add a test for linker flags override in RustLinkerIntegrationTest to improve flex
[ # 1748 ] add travis and appveyor test to testproperties
added support for external DAG name in Hive configuration and improved logging format in GenericUDTFGetSplits to enhance flexibility in managing
removed unused import of java . io . File in TileAtlas . java to clean up the code and improve readability
refactor EscapeProcessingOutputStream to use AtomicBoolean for closed state management and improve error handling in GradleDaemonExecutor to enhance thread safety and
updated the ` validateQuery ` method to include an additional ` arguments ` parameter and modified the error message formatting to enhance error handling by providing more
updated INDEX _ VERSION from 1 to 2 and removed the repository field from the LuceneExecutor class to align with the latest index version and improve
[ hotfix ] [ kryo ] fix the default kryo registered class do not change
added null check for property removal before adding it to configTypesUpdated to avoid potential NullPointerExceptions during property removal
refactor boolean handling in MetaStoreDirectSql to use BooleanUtils for better readability to improve code clarity and maintainability by reducing
added a call to hideCustomizationDrawer ( ) in the Launcher class to improve user experience by hiding the customization drawer
refactor term vector handling in TermVectorComponent to use a constant for the warnings key to improve code readability and maintainability by reducing
added support for optimistic types and modified logging levels based on the environment to improve logging clarity and control over optimization types during compilation
refactor Expect class implementation to improve code readability and maintainability
added UnixSocketConfigurationStrategy to DockerClientFactory and modified DockerMachineConfigurationStrategy to support Docker socket access to enhance compatibility with Unix - specific Docker
added JUnit @ Test annotations to CloseableDoSFilterTest to mark tests as flaky due to low rate IP issues
camel - 16407 : add the stream name to the exception when there be no active subscription
refactor task handling in Vectorizer to use convertMapWork instead of validateMRTask to improve clarity and functionality to support Tez tasks
updated constructors in StringAppender and LogDivertAppender to include a new boolean parameter to enhance flexibility in appender initialization
fix a potential npe in gui package . getgui ( )
sulong : add ` ` weak ' ' and ` ` weak _ odr ' ' encode value to linkage .
updated multiple Java files including LoadClassNegative , XCheckJSig , and ReadFromNoaccessArea to improve code organization and maintainability
add test case for defaulttransactionthreadlocal
added a check for invalid operation handles in the HiveStatement class to enhance error handling for invalid operation handles in the server side
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - aws - secrets - manager : support ability to load property from vault / secrets cloud service - aws secret manager
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed error message from the email response in UserREST . java to simplify error reporting for better clarity
updated the ` fromContent ` method to include a ` subTree ` parameter and modified the constructor accordingly to enhance functionality by allowing subTree handling
updated column width calculation in HSSFSheet and added a test for it to ensure correct handling of default column widths in Excel sheets
added configPath parameter to the less command in Builtins . java to enhance command functionality by including configuration path
replaced ` Set ` with ` Collection ` for tables and weakAssociations in ` DotWriter ` and ` GraphExecutable ` classes to improve performance
updated the default SSHD container image from " quay . io / testcontainers / sshd @ sha256 : 18aa92932
server : fix npe in listvirtualmachines ( ) when hostid be null .
refactor grouping logic in DefaultGroupKeyGenerator to simplify key generation to improve code readability and maintainability by simplifying key generation logic
updated testSeekNegative method to testSeekingExceptions and modified seek logic to improve error handling and ensure correct seeking behavior with specific limits
replaced the creation of ` IngredientStack ` with a builder pattern for ` IngredientNBTBC ` to improve
rename put ( string key , object value ) to putobject ( string key , object value )
refactor visibility handling in CellLayout and introduce a private method in Workspace for drag - and - drop functionality to improve code readability and
refactor the rewrite function handling in ModifyRequestBodyGatewayFilterFactory and add a test for empty upstream request bodies to improve request body handling and ensure
updated access checks in ConstructorFinder , FieldFinder , and MethodFinder to include isPackageAccessible method to enhance security by ensuring only accessible types are
changed log level from warn to trace for various log messages in LoggingHandler . java to provide more granular logging for debugging purposes
fix whitelisting of jar resource with wildcard ( # 348 )
added functionality to create a menu option for gallery images in the GalleryActivity to enhance user experience by allowing users to view images directly from the gallery
refactor MongoDBServiceFactory to use a singleton instance for local and remote mappings to improve performance by avoiding multiple instances of SingletonMongoDBService
added tests for boolean constants in InlineConstantMutatorTest to ensure correct formatting of boolean values with true and false
added a blackhole parameter to the decode method in RecordTest . java to enhance the functionality of the decode method to allow for more flexible
chore ( deps ) : update gapic - generator - java with mock service generation fix
updated method signatures and variable types in DPTUnits and DeviceThingHandler classes to use Map . Entry instead of String to improve type safety and
removed the call to clear witnesses in ManagerTest . java to improve test efficiency by eliminating unnecessary witnesses
do n ' t swallow exception in jdbcpagingsink . abort ( )
removed the " stack " property and replaced its usage with getter and setter functions in NativeError . java to streamline stack management and improve code
removed a condition that checks if the path name starts with a dot to simplify the path filtering logic for better readability and maintainability
corrected the spelling of " onboard " to " autoload " in multiple files to improve code readability and maintain consistency in naming con
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before running tests
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 to reflect the new version of the HSSFFont class
changed ` fThreadGroup ` to be volatile and modified ` fLookForStuckThread ` to be final in ` Timeout ` class to
refactor the ` getValue ` and ` setValue ` methods in ` ValueResultData ` to enforce immutability to enhance code clarity and
updated hash code and equality checks in FuzzyQuery . java to ensure proper object comparison and avoid potential null pointer exceptions
removed debug print statements from PushedResourcesTest . java to clean up the code and improve readability
changed method visibility of ` removeFile ` and ` removeDirectory ` from ` SharedRandomAccessFile ` to ` void ` to indicate that these methods
updated database driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated the retrieval method to initialize the attributes with a zero hash map and modified the principal creation process to improve clarity and ensure the principal is
changed log level from info to warn for connection errors in OpenWebNetBridgeHandler . java to provide more informative warning messages for better debugging
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple hash map classes to improve consistency and clarity
added a constructor to ThumbnailGenerationTask that initializes storageManager , account , and imageViewReference to ensure that storageManager is not null ,
updated the condition in the loop to check if ` nrFound ` is less than ` count ` and ` tries ` is less than 5 to
added a new file Bug1933922 . java implementing a recursive program loading mechanism to address issue 1933922 related to recursive compilation
removed unnecessary parentheses in comparison operators across multiple Java files to improve code readability and maintainability
update control character validation from 33 to 32 in FileResolver . java to ensure that control characters 0 - 31 are valid and a space character 32
added a call to requestFocus ( ) in the Display class to ensure the component focuses when necessary
update instructor home page ui test to use new test data
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
refactor Crouton cancellation logic and update result intent handling in DetailFragment and MainActivity to improve user experience by ensuring correct confirmation messages are
added a test for schema query and fetching with unrelated templates in IoTDBSchemaTemplateIT . java to ensure correct handling of schema queries and
refactor Dialog class to improve code readability to enhance maintainability and facilitate future development
replaced ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder . command ( args ) ` and modified process execution
updated HintedHandOffTest to use hostname instead of local host to ensure compatibility with IPv6 address format
refactor subsystem assignment in Metrics . java to use a loop for better readability and maintainability to streamline code and enhance maintainability by
disable daemonlifecyclemanagertest and installcommandintegrationtest when apple sdk be not present
remove jvmciversioncheck . validateproperties ( ) and use requireproperty ( name ) instead
updated Mockito library version in the project to ensure compatibility with the latest features and improvements
updated TestLargePageUseForAuxMemory . java file to improve memory management testing efficiency
added charset handling methods to ParsingExecutionContextView and updated BinaryParser and PlainTextParser to improve character encoding management and enhance parsing capabilities
added a new ` MultiPartFormDataCompliance ` enum and updated ` HttpConfiguration ` to set its default value to ` LEGACY `
added GradleVersion . version ( " 7.2 " ) with JDK - 17 support to GradleDistributionManager to support Java
added a method to set the type in SnapshotControl and updated its usage in DatabaseSnapshot to improve type management by encapsulating type addition logic
refactor Term class to improve code readability to enhance maintainability and facilitate future development
added a null and empty check for the ' runWith ' variable in ChangeSet . java to ensure that ' runWith ' is not null
http : / / issues . apache . org / jira / browse / amq - 4892 - add unit test for amq
refactor multiple classes related to audio and codec handling to improve code organization and maintainability
pdfbox - 417 : do n ' t count image with negative pixel , a suggest by valerybokov
updated tinting amount handling in TaskView . java to improve clarity and maintainability of tinting logic
added a new file ` SumZeroAggr . java ` and implemented aggregation functions for sum zero in the aggregation framework to enable the aggregation of
[ hotfix ] [ table - planner - blink ] remove ` ` not null ' ' constraint from test
updated the ` getAllocationFailWarningMessage ` method to use a ` StringBuilder ` for better string concatenation to improve readability and maintainability of
added a null check for propName before putting it into roleObject ' s properties to avoid potential NullPointerException when propName is null
updated access modifiers and added @ VisibleForTesting annotations in StatusBarTouchController . java and RecentsView . java to enhance testability and
add ` ` stream ' ' parameter to dockerclient . logcontainer ( ) to keep stream open indefinitely
add performance test for mvstore . get ( ) and cache . put ( ) .
updated LONG type from " L " to " J " in PrimitiveType . java to provide a more accurate representation of long data type
changed the method ` delegatingApplicationListener ` from instance to static to allow instantiation of ` delegatingApplicationListener ` without needing an instance
camel - 14284 : fix restbindingadvice to set message body to null .
added FileDeletingTasklet and TaskletJobFunctionalTests classes to implement functionality for file deletion and job functionalities in batch processing
g3d - 285 : do n ' t update drawables on plane companion when update size
added comments to clarify the handling of index out - of - bounds in multiple classes to improve code readability and prevent potential runtime errors
updated event handling methods to use state ordinal instead of event tag to improve clarity and maintainability of state testing functionality
added checks for video thumbnail requests in RequestHandler and RequestHandlerV2 to ensure proper handling of video requests based on user agent
refactor error handling in ErrorCheckerService and improve error message formatting to enhance clarity of error messages and improve code readability
updated title area addition logic in SideMenuBar . java to differentiate between top and bottom buttons based on theme settings to improve flexibility in
updated Skia . java by adding " libskia " and modifying the value and link assignments to ensure compatibility with the latest Skia library
wallet : add support for unittestnet to networkparameters
added error handling for format arguments in QueryCommand and implemented tests for owner and format arguments in QueryCommandIntegrationTest to ensure that format arguments are
replaced the capacity variable with a length variable for improved clarity in the IntIterator class to enhance code readability and maintainability by
added a ` srcTarget ` parameter to the ` walkRuleAndAdd ` method and updated its logic to conditionally visit dependencies based on the
fix patchmodulefilemanager to work with override module name
[ java ] do n ' t use semanticversion . major ( ) for version check in election .
added conditional logic to set default client policy based on SAML authentication status to ensure the client is always a new client when using SAML authentication
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure required resources are provided to prevent runtime errors
refactor to use utils . close ( ) instead of manual try / catch
refactor AnonymousAuthenticationFilter to use a Supplier for deferred security context to improve clarity and maintainability of the security context management
updated the ` removeActor ` method to accept a boolean parameter for unfocusing to enhance actor removal functionality by allowing conditional unfocusing based
refactor prompt logic to use a variable for valid configurations to improve code readability and maintainability by reducing redundancy
added logging functionality to NettyHttpServer and RoutingInBoundHandler to enhance debugging capabilities by providing detailed logging information during HTTP requests
refactor multiple parser - related classes to improve code organization to enhance maintainability and readability of the codebase
replace direct call to ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` in ` CodeDependenciesPanel
camel - 14263 : camel - groovy should use the language to load the groovy script instead of the class loader to avoid reflection .
remove dependency on maven ' s artifactutils , use collections . empty _ map instead
[ hotfix ] [ python ] make static method in programoptions and programoptionsutils public
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
added logic to retrieve the storage key certificate chain in HttpsMessenger . java to enhance security by ensuring the correct storage key entry is utilized
simonstewart : throw a more meaningful exception when we try to convert a text response to a response .
changed the access modifier of the ` updateImage ` method from private to protected in ` ImageButton . java ` and ` ImageTextButton .
add block . dropresources ( ) , close # 6240 ( # 6240 )
added native methods for spatial location calculator configuration in DataOutputQueue and depthai classes to enhance functionality for spatial location calculations in the application
refactor multiple Java classes related to communication detection , GSA components , page rank , and single source shorten paths to improve code organization and maintain
replaced the method ` keySet ( ) . isEmpty ( ) ` with ` isEmpty ( _ root ) ` in ` TreeTrie . java `
updated foreground and background calculations in AttributedStringBuilder . java to improve rendering accuracy by using specified dimensions
added a check for the " solr . disableFingerprint " system property in the PeerSync and PeerSyncTest classes to control the fingerprint behavior based
changed access modifier of the moveFunds method from private to public to allow external access to the method for better encapsulation
added BeforeConvertEvent handling and updated test cases for PersonWithIdPropertyOfTypeUUID in MongoTemplate and MongoTemplateTests to ensure proper event processing
use quicktest annotation instead of problematictest for collectionitem . settransactiontest
added null check and closing logic for InputStream in TikaCLI . java to ensure proper resource management and prevent potential memory leaks
updated exception handling from ApiBag . ExceptionWithErrObject to ApiException in TestCollectionAPIs . java to improve clarity and specificity of
removed unnecessary whitespace in OptionsParser . java to improve code readability and maintain consistency
instructorfeedbackcopyactiontest : fix checkstyle issue in instructorfeedbackaddactiontest . java
[ hotfix ] fix checkstyle violation in externalworkerservice
removed the step property and related methods from HmDatapoint and HomematicTypeGeneratorImpl classes to simplify the data point handling and
added logging statements for acquiring shared locks and acquiring exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve
removed duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline the code by eliminating redundancy
simon : fix flaky testistextpresent in testgettextcontent
replaced static Deque < Boolean > with ThreadLocal < Logger > loggerTL and updated logger initialization logic to improve thread safety and ensure logger
change functioninitializer to use mockitojunitrunner instead of jmockit
added methods to handle primitive types and improved type boxing logic in ` Types ` and ` Infer ` classes to enhance type safety and
updated task view handling in RecentsView and removed redundant initialization of DigitalWellBeingToast in TaskView to improve task
[ hotfix ] [ test ] use getregions ( ) instead of stream ( ) in testflushfromclient
added logic to clone the repository and delete the new contract address if it has contract details to ensure that changes to contract details are properly managed and
updated balance calculations in TokenIssueProcessor to use dynamic properties for asset issue fees to ensure accurate balance calculations based on repository ' s asset issue
refactor cache management in RealisticRenderStrategy by replacing apMap and texCache with a URI - based caching mechanism to improve texture management and
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code cl
added isUnselectedStyle handling in Component and updated stringWidth calculation in Label and DefaultLookAndFeel classes to improve text alignment based on font
updated ArrayList initializations to specify initial capacities and streamlined action list handling to enhance flexibility by allowing dynamic initial capacities for
removed the ' flags ' parameter from several method signatures in ShadowApplicationPackageManager . java to simplify method signatures by eliminating unnecessary flags parameter
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future development
add sample for audio with increasing timestamp in transformation test
[ tradfri ] remove old firmware check from tradfrigatewayhandler . shutdown ( )
refactor AjaxElementLocator to improve code structure to enhance maintainability and readability of the code
updated layout checks to use DefaultLayout instead of InlineLayout and added support for " table - cell " display to ensure proper layout behavior based on
refactor JsonDecoder logic and add a new test for field reordering in TestJsonDecoder to improve code clarity and ensure correct handling of
updated the listener implementation to include a removalCause parameter to enhance the listener ' s functionality by providing more context about the removal cause
added JUnit Ignore annotation to SavepointTestBase . java to temporarily disable tests that are not ready for execution
added @ Test annotations to DroolsMvelParserTest . java to enable unit tests for parsing functionality
changed instance variables from non - final to final in ContextRegisterListener . java to enforce immutability and prevent unintended modifications
refactor ObjectHashSet to allow customizable iterator initialization and reset behavior to enhance flexibility in object set operations by allowing customizable iterators
added batchBytes handling in SparkReduceRecordHandler and ReduceRecordSource to ensure proper batch size validation and prevent exceeding defined limits
changed the application settings mode from READABLE to PRIVATE in AppSettings and UpdateUtils to enhance security by restricting access to the application settings
updated logging messages in JdbcProxyGenerator to clarify that close ( ) is called after already close ( ) or abort ( ) is called
updated animation animation to use mState instead of getState ( ) and added important for accessibility based on the current state to enhance accessibility
changed log level from warn to debug for malformed edits in ProtobufLogReader . java to reduce log verbosity and improve performance
updated scope handling in UaaTokenServices and added a test for persisting a token with 1000 scopes to ensure that the scope is longer than
updated import statements and added a toString method in AvailableJDBCDrivers . java , and modified test assertions in TestAvailablePlugins . java to improve code
( chore ) camel - kie - api : add executablecommand interface
( chore ) camel - itest - idempotent : remove unused jdbctableservice
added padding methods to CellLayout and modified bitmap scaling logic in Launcher to enhance layout consistency and improve bitmap scaling accuracy
refactor candidate filtering logic to conditionally use ` possible ` based on the presence of a string to improve flexibility in determining candidate candidates based
refactor ` SamlMetadataUIParserAction ` to ` Action ` and add service user interface metadata handling to improve code clarity and ensure
added a method to check for open ports in LdapMockMvcTests to ensure that LDAP ports are accessible for testing purposes
log4j2 - 1640 : fix checkstyle issue in log4j2 - core
updated URL handling in Fetcher . java and HTMLMetaProcessor . java to improve redirect logic and enhance debugging capabilities
updated SolrQuery in TestSpellCheckResponse to use " name : samsang " instead of " * : * " and modified the
refactor Console initialization to use reflection for different Console API types to ensure compatibility with different Console API implementations
blender loader : fix npe in getverticescolors ( ) when blender be not compatible .
added a file filter to exclude time - sensitive reports directories and updated the copyDirectory method to use this filter to improve performance by avoiding unnecessary
replaced ` testDeviceName ` with ` validateName ` in ` DataValidatorTest . java ` and added parameterized tests for email validation to
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a check to throw an exception if bindStatus is null in FieldUtils . java to provide clearer feedback when an expression is not executed
removed debug print statement from JoglInput . java to clean up the code and improve readability
added support for allowing extracting private fields in FieldSupport and updated test cases accordingly to enhance functionality by allowing extraction of private fields in field values
added a line to replace the device name with the device ' s name in WebDataHandler . java to ensure that the device name is properly
replaced direct instantiation of ` Lookup ` with a method handle lookup based on the presence of Java 8 types to improve flexibility by allowing dynamic
replaced the old weights method with a new weightsByDouble method in ZParams . java and updated its usage in SortedSetCommandsTest . java
added a Database parameter to the writeCustomHTML method across multiple writer classes to enhance functionality by allowing the use of the migrator ' s database
removed unnecessary type casting when deserializing keys in BTreeMap . java to improve code clarity and prevent potential runtime errors
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to include BalanceInsufficientException and InvalidProtocolBufferException
[ netbeans - 4892 ] add a system property to disable zerofile .
replaced print statements with direct messaging calls in ChangeSet . java and Main . java to improve code readability and maintainability by centralizing
[ hotfix ] fix bug in hortonworksencodedschemareferencestrategy
added imports for ItemProcessListener and ItemReadListener in multiple Java files to enhance event handling capabilities in batch processing
updated formatting and added null checks for properties in AbstractProviderModule . java to improve code readability and prevent potential NullPointerExceptions
updated print statements to use ` title ` directly instead of ` doc . get ( " title " ) ` in ` SearchFiles . java `
updated Test7005594 . java file to improve test coverage and functionality
remove subtype from exception message in ResourcesValidationProcess . java to simplify error reporting for better readability
refactor TopKRollupPhaseOneJob class to improve code organization to enhance maintainability and readability of the code
server : fix npe when try to map an ip address for a vm that have no ip4 address .
replace digital triggers with analog triggers and add a listener for GUI scaling to enhance input handling capabilities for gamepad interactions
refactor ` iteratesOverSequence ` and ` iteratesOverAsList ` methods to accept ` Iterable < T > ` instead of ` Object `
camel - 14284 : camel - defaulthttp should only apply to header if there be at least 2 parameter
added assertions to verify the number of results returned from native queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure that the system correctly
added a new ` LargeValueFormatter ` class and modified value calculations in ` BarChartActivityMultiDataset ` and ` BarLineChartBase
replaced hardcoded character ' z ' with a constant INNOCUOS _ CHAR to improve code readability and maintainability by using a
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to suppress warnings related to incompatible argument types
tracelinearscanlifetimeanalysisphase : fix typo in log message
added a TODO comment to the NullAssertionValidator class to address auto - generated method stubs for improved code clarity
added handling for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to ensure proper rule key formatting for Buck build rules
added system profile directory creation and setup methods in PmsConfiguration , DLNAMediaInfoTest , and SearchRequestHandlerTest to ensure proper
updated the ` createThreadFactory ` method to use ` createThreadFactory ( ) ` instead of creating a new instance of ` DefaultThreadFactory
refactor message counting in HttpChannelOverHTTP and HttpReceiverOverHTTP to use a dedicated method to improve code readability and maintainability by
added a new attribute " accept " to the el in ImageFileInputDialog . java to enable the dialog to accept images by default
refactor ElasticIndexWriter to use PreBuiltTransportClient and update BulkItemResponse to use OpType . INDEX to improve code clarity and
added detailed information for witnesses and their class names in ForkController . java to improve debugging by providing more context about the witness and its types
added a new test class ` NullPointerAndEmptyArrayTest ` to validate the behavior of ` CustomURLClassLoader ` with null values to ensure
removed unused imports and updated methods in BaseIjModuleRule , IjProjectBuckConfig , and Test classes to streamline code and
updated the ` constructWildcards ` method to accept a ` Function < String , String > ` replacement for wildcard patterns to enhance flexibility in handling
added validation for TableScanOperator aliases in the map work to ensure proper validation of map work aliases and improve error handling
updated MockitoJUnitRunner import from ' mockito . runners ' to ' mockito . junit . MockitoJUnitRunner
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging errors when setting values fails
replaced specific imports with a wildcard import and modified the ` getLangs ` method to return a ` Set < String > ` to improve code
updated import statements and modified assertion logic in LazyTraceScheduledThreadPoolExecutorTests . java to improve code readability and maintainability
hbase - 26969 snapshotmanager should check if . tableinfo be present before try to take a snapshot
[ j2kt ] add support for ` ` isnull ' ' expression in try - finally .
added a test to verify that the HTTP RPC endpoint has been modified in the Explorer endpoint to ensure that the HTTP RPC endpoint is
added a volatile boolean flag ` isSuspended ` and modified thread state handling in ` Thread . java ` to improve thread suspension handling and
replaced instances of ` Javadoc . Author ` and ` Javadoc . Since ` with ` Javadoc . Hidden ` and ` Javadoc . See ` ,
[ camel - 18686 ] fix npe when use two camel context in remoting producer
updated multiple security - related classes to include @ Override annotations to ensure proper method overriding and improve code clarity
added module import support in Java2TypeScriptAdapter and updated eval method in EnumTests to ensure correct handling of static fields in enums
use http : / / www . w3 . org / 2001 / xmlschema instead of xmlconstants . w3c _ xml _
added logic to set content description based on badge status in BubbleTextView . java to enhance user experience by providing more detailed badge information
added MouseWheelListener to handle mouse wheel movement events in TestMouseWheelScroll . java to enable proper handling of mouse wheel direction during
added resource cleanup for PDF documents in VisualTester and created a new test for positioning absolute in VisualRegressionTest to ensure proper resource
updated currency pairs from BTC _ ETH to BTC _ XRB in KucoinAdapters and KucoinIntegrationTests to ensure
updated VacuumController , VacuumFrame , VacuumView , and VacuumView classes to use
removed redundant currency assignment for bitfinexSymbol in BitfinexAdapters . java to simplify code and improve readability
replaced ` Sets ` with ` ImmutableSet ` and refactored the handling of default fields in ` JsonFormat . java ` to improve code
added handling for primitive array types in JacksonXmlFormatMapper to ensure proper serialization of primitive arrays in XML processing
refactor thread handling in VirtualThread . java for improved clarity and consistency to enhance code readability and maintainability by standardizing thread
updated ` DirectoryTaxonomyWriter ` and ` TestDirectoryTaxonomyWriter ` to use ` catTerm ` and ` NO _ OP _ CACHE ` to
refactor VetoableChangeSupport class to improve code readability to enhance maintainability and facilitate future development
adjusted the calculation for the vertical position in the BrowserContentPane to correctly account for the height value
pdfbox - 4892 : remove unused throw clause , a suggest by valerybokov
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
[ web ] add ` ` close ' ' button to help panel
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced ` Thread . sleep ` with ` ThreadHelper . waitUntil ` for better readability and reusability to improve code clarity
updated the version check logic in SwingStartup . java to use ReleaseStatus instead of BuildProperties to improve clarity and correctness in handling update
db migration : add option to not include generated file comment in migration xml
updated usage strings in multiple command classes to use " < player | * > " instead of " < player > " to improve clarity and
deleted the BadHdfsThreadsFilter and BadZookeeperThreadsFilter classes to remove unused thread filter classes to streamline the codebase
updated method calls from ` nameVariableName ` to ` optionName ` in ` OptionProcessor . java ` to improve clarity and consistency in naming con
added a condition to check for parallel classes in TestNGContentHandler . java to enhance test coverage for parallel processing
remove useless null check in routeinfomanager # registerfirst ( # 10663 )
refactor : remove static import of enums in ctmethodimpl
added serialVersionUID fields to multiple Java classes to ensure proper serialization compatibility for these classes
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code readability and maintainability
updated the ` shaBase64 ` method to accept a ` CONST _ SEPARATOR ` parameter and added unit tests for its functionality to enhance flexibility
added null check for SYSTEM _ ACTIONS _ ENABLED in Parameters . java and modified the condition for systemActionsEnabled in TestAction . java to
added a new class ` Person ` in the ` org . apache . maven . it0074 ` package with a private field ` name `
fix cossiper initialization so that it do n ' t require a local address
updated the method call to convert the time string to uppercase in AbstractClient . java to ensure consistent handling of case sensitivity for time strings
added assertions for timeColumn , timeUnit , and totalDocs in SegmentMetadataImplTest . java and updated segment metadata handling in SegmentMetadataImpl .
replaced ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` and updated the foreground color
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to ensure
use annotationtypesbystereotype ( ) instead of getannotationnamesbystereotype ( ) in defaultbeancontext ( #
danielwagnerhall : fix issue with click on an element hidden by double overflow
added try - catch block around dismissing the dialog to handle potential exceptions during dialog dismissal
added support for custom JNDI lookup in JtaTransactionManager to enhance flexibility in JNDI configuration for JTA TransactionSynchronizationRegistry
changed the visibility of the ` pickUri ` method from public to private to restrict access to the method for better encapsulation
removed the ` hasFunction ` method from the ` Library ` class to simplify the code by eliminating unnecessary functionality
replaced the variable ` enabledCiphers ` with ` result ` for better clarity to improve code readability and maintainability by using a
fix ( bigquery - storage - api ) : use bigquery . bigquery . timestamp . toepochmillis ( ) instead of big
replaced manual null checks with requireNonNull method in Identifiers . java and DatabaseConnector . java to improve code readability and maintainability by redu
fix a bug in coercevalueforinputobjecttype that cause a nullpointerexception when the value be null .
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that row and column indices are within valid bounds to prevent
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user experience by ensuring the selection
[ java ] unnecessarylocalbeforereturn : fix false positive
replaced ` scriptEngineManager ` with ` scriptEngine ` and removed unnecessary null check for ` scriptEngine ` to streamline the code and
simplified calculations in Euclidean distance similarity to improve accuracy of correlation calculations
do n ' t run the backup task if sstables be null
modified the ` relativize ` method to accept two ` Path ` parameters instead of using ` baseDir . relativize ( ) ` to
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator . java and modified the condition in DataType . java to ensure proper handling of
updated file deletion logic in DeadLetterQueueWriterTest . java to skip the current writer head file to improve test efficiency by avoiding unnecessary files
replaced ` ByteArray . toHexString ( listBytes ) ` with ` ByteArray . toJsonHex ( listBytes ) ` in ` TronJsonRpc
refactor ErrorHandlerController to Error403Controller and create new Error404Controller and Error404Controller files to improve organization and clarity of error
replace TerminalFactory . resetTerminal ( this ) with TerminalFactory . resetIf ( this ) in UnixTerminal . java and WindowsTerminal . java
updated Tiny . java to enable a trigger pattern for collection conversions using ExpressionTree and NewArrayTree to improve constraint handling for collection types and
fix concurrentmodificationexception in connectionpool . acquireconnection ( )
updated method and variable names from getDateConverter to getLdapDateConverter in LPPEAuthenticationHandler , PasswordPolicyConfiguration , and PasswordPolicyResult
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting to include the classloader in JavassistUtils . java to improve clarity of error messages for better debugging
added exception handling for writer and reader threads in LargeStreamletTest . java to improve test reliability by allowing more time for exceptions to
updated the logic to increment extra pages based on user preferences instead of a hardcoded value to improve flexibility by allowing dynamic page types based on
added error handling for Gaussian image allocation in AndroidImplementation . java to improve robustness by preventing application crashes due to image processing exceptions
added @ SuppressSubnodes annotation in BaseParser . java and simplified return statement in ImplicitActionsConverter . java to improve code readability and maintain
pdfbox - 4892 : use try - with - resources to prevent resource leak
deleted the file TestDocInverterPerFieldErrorInfo . java to the test class is no longer needed
added a shell command for input key event 82 in AbstractLauncherUiTest . java and modified the assertion in LauncherInstrumentation . java to
added import for ObjectMapper and updated filenameToUrl mapping in FileDumper . java to enable JSON serialization of filename - to - URL mapping for better
make resetresultsnotifiedflag ( ) private so that it can be call from other thread
blender loader : fix texturehelper . loadtexturefromimage ( ) and blenderhelper . loadimagefromimage ( ) .
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to use " application " instead of
updated the isbn randomizer identifier from " 9781797745008 " to " 9781797845005 " to ensure
updated notification sound setting to use a dynamic ringtone URI to enhance user experience by allowing customizable notification ringtone settings
added a method to report loop count in RootNode to ensure proper handling of loop count reporting in the call target
added version finalization logic for standard repository type in FinalizeUpgradeAction . java and updated merge method in ClusterImpl . java to ensure cluster version
fix the bug in portableipdaoimpl : use regionid instead of rangeid when search for state
removed duplicate call to streamManager . open in ItemOrientedStep . java to improve code clarity and reduce redundancy
added a new file ` CountedLoopProblem . java ` that generates a loop with a count of iterations to test the behavior of a loop
fix miss parameter name in executecompiledmethod ( ) and executecompiledmethodargarg ( )
[ gr - 23236 ] graalvm : : _ pending _ failed _ speculation should have type long or jlong .
replaced ` TransformerSupplier ` with ` ValueTransformerWithKeySupplier ` in the ` KafkaStreamsTracing ` class and updated method signatures accordingly to
[ # 7510 ] instructor : view result : add point receive column to csv file result ( # 7518 )
added a call to ` DynamicColors . applyToActivitiesIfAvailable ( this ) ` in ` BaseApplication . java ` to ensure that activities are
added stack dumping functionality and improved thread handling in CloseRace . java to enhance debugging capabilities and ensure graceful termination of threads
updated return statement in IntPointField . java to use intValue ( ) method and added assertions in TestPointFields . java to ensure correct value
updated arcSize variable to use arcSizefraction instead of arcSize and adjusted calculations accordingly to improve the accuracy of arc size based on the width
updated the ratio width from 720 to 640 in the AddAndScaleMultiImage and ImageBorderCuttingWizard classes to improve image scaling
renamed ` minifySqlEnabled ` to ` shrinkWhitespacesInSql ` and updated related methods to reflect this change to improve clarity and
refactor ` waitForLauncherCondition ` and ` waitForStateTransitionToEnd ` methods in ` AbstractLauncherUiTest ` and ` WorkProfileTest
updated import statements in multiple test classes to utilize new configuration classes to improve code organization and maintainability by organizing dependencies
replaced the use of ` raf . readLong ( ) ` with ` DataIO . getLong ( buf , 0 ) ` for reading single byte
camel - 14284 : fixed the unit test error of camel - http
refactor the creation of the proxy class path and create a new builder for the module boot path to improve clarity and maintainability of the
[ media ] add default scriptscopeprovider for audio and voice .
added methods to get and set the layer manager in AnimComposer and updated AnimEvent to check for the existence of the layer manager to
added a check for an empty queue in DeferredHandler . java and removed unused methods in Workspace . java to improve performance by avoiding unnecessary operations
added null checks for mapOp and mapWork in MapRecordProcessor . java and improved exception handling in TezProcessor . java to enhance
refactor the center variable and methods in CylinderRegion . java to improve clarity and consistency to enhance code readability and maintainability
updated TestBadUseCases . java to use JUnit ' s ExpectedException rule instead of static imports to improve code readability and maintainability
modified the parameter handling in the sendOneQuery method and added a test for multi - execution in StatementTest to improve query execution accuracy and ensure
do n ' t log custom security environment if it ' s not set
added a rctag parameter to the GET endpoint in ReviewInterface . java to include application and edit tags for recent changes
refactor Test class to improve code readability to enhance maintainability and facilitate future development
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in key length handling
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
pdfbox - 4892 : add writesectiondefinition ( ) method to write section definition
added distance detection for large jump points in GpsLoggingService to improve accuracy checks for point accuracy
removed debug print statements from TableCellLayout , TableLayout , TableLayout2 , and TableLayout2 classes to clean up the code and improve
doc : generate sample code in the java microgenerator ( # 119 )
replace boolean flags with Reference < Object > for rootNameFn , sourceFilterFn , and sourceFilterFnHash in InsightFilter . java
removed binary search for adding app names in AllAppsList . java to simplify the code by directly adding app information to the list
replaced ` ThemedPreferenceActivity ` with ` PreferenceActivity ` in ` SettingsActivity ` and removed ` ThemedPreferenceActivity `
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to accurately reflect the purpose of
updated assert statement in FST . java to improve clarity to enhance code readability and maintainability
added an assertion to check if the security policy exists or is a file to ensure that the security policy is valid before proceeding
camel - olingo2 : fix the olingo2 component so it do n ' t have to override the getconfiguration method
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for recovery process to complete before
removed the exception parameter from the LOGGER info statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary context
added option to publish xmppicmage by http to the client .
camel - 15836 : camel - netty - remove the channellocal from nettyproducer to avoid the need for the state to
updated regex pattern in BalancedClickhouseDataSource and added tests for valid and invalid host names in BalancedClickhouseDataSourceTest to improve URL
remove system . setProperty ( " org . apache . jasper . compiler . disablejsr199 " , Boolean . TRUE . toString (
added null string handling functionality to CSVRecordReader and CSVRecordReaderConfig to enhance flexibility in handling CSV data with null values
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to skip the Liquibase service for
updated the type of ` aggregatedScope ` and ` addImportedStaticFieldNames ` from ` J . CompilationUnit ` to ` JavaSourceFile ` to
add ` ` / command ' ' and ` ` / state ' ' to event topic for item command and state
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve cl
added deprecation warnings for " zkCredientialsProvider " and " zkCredentialsProvider " in SolrXmlConfig . java to clarify
fix the mana tablet not be able to be damage properly . close # 489
set the identifier collection of mCurrentCallEvent to ensure the current call event uses the correct identifier collection
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter in TestRandomChains . java to clean up the code
updated the thread pool executor name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to simplify the
refactor GeneratedCode class to improve code structure to enhance maintainability and readability of the code
updated the assertion message in TypeDefinitionRegistry to include the ' definition ' parameter to improve clarity of the error message for better debugging
updated import statements in LocalFileListAdapter . java and set visibility of the shareWithMeIcon to GONE to ensure the shareWithMeIcon
updated the link in DefaultLogoutPageGeneratingFilter and LogoutPageGeneratingWebFilter to use HTTPS instead of HTTP to ensure the link is accessible to
added @ NotNull annotation and modified header handling in RouterFilter and RouterServerListFilter to enforce non - null constraints to improve code robustness and
enhanced assertion message in TestIndexWriterMergePolicy . java to include detailed information about the writer ' s segment count and index to improve debugging
deprecate multilayer perceptron in favor of multilayer perceptron implementation
added a null check for the context in the CrawlerSessionManagerValve and implemented a test for multiple contexts in TestCrawlerSessionManagerVal
modified the ` getJspApplicationContext ` method to use a privileged action for retrieving the ` JspApplicationContextImpl ` instance based on security settings to enhance
replaced the variable ` l ` with ` minL ` and ` maxL ` and updated length calculation logic in ` RocketComponentConfig
removed the Singleton annotation from NonceService and modified the binding method in OpenIDAuthenticationProviderModule to ensure NonceService is only instantiated in the single -
added a new call to ` updateChildLinks ` in ` FileWrapper . java ` to update child links with random and hasher parameters to enhance
refactor ` doExecute ` method and improve URL building logic in ` SpringCloudPlugin . java ` to enhance code readability and maintainability
increased the delay duration for publishing messages from 100ms to 500ms in RetrievalBlockingMessageStoreTests . java to improve test reli
add an attribute to control if the shift code be always override
[ hotfix ] [ runtime ] fix the issue that zookeeper do n ' t check if the node be the leader for a role .
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition in AbstractKerberosDescriptorContainer to use isReference ( ) instead of getName ( ) to improve clarity and correctness
replaced ` AbstractCommandOptions ` with ` boolean noop ` in ` newInstance ` methods across multiple factory classes to simplify the method signature and improve
added a sleep delay of 3 seconds before catching IOException in TestListenTCPRecord . java to ensure proper synchronization during exception handling
update methodCall . arguments handling in PatchExtensionMethod . java to ensure original arguments are preserved when modifying method call arguments
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` for managing native libraries to
added support for ' apply - sequence ' and ' ignore - send - failures ' attribute on the < router / > element .
removed the x509PublishUrl variable and related methods from ClientKeyPublisherMapping and JwkViewResolver to streamline the code by elimin
modified the way a single reader is assigned in QueryComponent . java to ensure that the correct reader is used when there is only one reader
replaced ValueSourceParser with Double2Parser for max and min functions to enhance functionality by using Math . max and Math . min instead of
removed focus and pointer event checks from the return statement in the Container class to simplify the code by eliminating unnecessary checks
removed unused variables in Highlighter , SpanGradientFormatter , and TokenSources classes to clean up code and improve readability
cloudstack - 4892 : fix duplicate ip address in user table
updated ` CasMultifactorAuthenticationWebflowConfiguration ` and ` CasWebflowContextConfiguration ` to use ` ObjectProvider < FlowBuilderServices
updated WriteJdbcPTest . java to improve database connection handling and connection management to enhance the reliability of database operations and ensure proper connection management
removed conditional check for the editor ' s laf preference and set the UI look and feel directly to simplify the code by eliminating
replaced calls to ` getDesiredStateEntity ( ) ` with direct calls to ` stateEntity ` and ` desiredStateEntity ` to
simplified margin calculations in FloatingTaskView . java to improve code readability and maintainability
added a conditional check for running in RootFolder . java and updated the status line in NavigationShareTab . java to improve control flow and provide
cpu call graph : use ti . threadid instead of ++ threadid
do n ' t use toold . getalltools ( ) , use default toolbar instead
added NetworkAddressChangeListener implementation to HomekitImpl and enhanced logging messages in HomekitImpl . java to enhance network address management and improve logging cl
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of a null check
replaced ` Optional . < SourcePath > ` with ` Optional . absent ( ) ` for ` prefixHeader ` and ` linkStyle `
added null check for exception message in ExceptionHandlerRegistryFactory and created a new test for handling fatal IOException with null message to ensure robust error handling
changed the ` nextID ` variable to be ` volatile ` and modified the ` getSize ( ) ` method to return ` nextID ` to
try to fix intermittent ci failure
added HasSourcePath interface and updated AbstractThinArchiveArg , FileListableLinkerInputArg , and SourcePathArg classes to implement
replaced StringBuffer with direct string concatenation in IllegalArgumentException to simplify code and improve readability
added a custom index field name to facet configurations in OrdinalMappingAtomicReader . java and updated test cases in TestOrdinalMappingAtomicReader
updated the epoch millisecond calculation logic in Instant . java and added a test for it in TestInstant . java to ensure correct handling of negative and
updated attribute retrieval in OGLESShaderRenderer and LwjglRenderer to use the name ( ) method for buffer type to ensure
added functionality to block script updates in CopyPaste . java to improve user experience by preventing unwanted scripts from being executed
added a new file ` TestCMoveLimitType . java ` with methods for testing character buffer operations to ensure correct handling of limit types in
replaced the ` getMutableMetadata ( ) . resetTemporalAttributes ( ) ` call with a new method ` contains ( RecorderType recorder
camel - 14850 : fix arrayindexoutofboundsexception in ssptparser
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " to reflect the current vendor of the application
refactor console creation into a separate method and add version printing functionality to improve code readability and maintainability by centralizing console functionality
refactor token validation logic in InputStreamBinder and replace it with a new method in NextcloudRequest to improve code clarity and maintainability by
improve handling of eofexception in http / 1.1 . x
added unit tests for the ` DefaultGroupProvider ` class to verify the behavior of ` deleteMember ` and ` deleteMemberFromNonExistent
( chore ) camel - aws2 - quartz : remove unnecessary object [ ] constructor
deleted the V2ReplicationProtocol . java file to the replication protocol is no longer needed for protocol version 2
updated ` ImmutableSortedSet < BuildRule > compileTimeClasspathDeps ` to ` ImmutableSortedSet < SourcePath > compileTimeClasspathSourcePaths
added new files ` ConstructorArgsDemo . java ` and ` StrictDemo . java ` while renaming ` StupidFinal . java ` to
make templatefeatureiterator thread - safe by use threadlocal
updated the assertion condition in WriteResponseHandler to include 2 * replication factor to ensure that the response count is at least 2 * replication factor
added a null check for the index number in the ItemRowAdapter class to prevent potential NullPointerException when the index number is not set
corrected the spelling of " Anchestors " to " AnAncestors " across multiple files to improve code readability and maintain consistency
added a check to return early if the app ' s width is less than 12 to optimize performance by avoiding unnecessary processing when the app '
updated equality check to use ` . equals ( ) ` instead of ` = = ` in ` ChangeLogParameters . java ` and added a
changed the loggers map from static to instance variable to allow concurrent access to the loggers map
update return statement to use ` getBasePlot ( false ) ` instead of returning ` p ` directly to ensure that the method returns the base plot
do n ' t warn when upload directory do n ' t exist
added a boolean parameter ` sendStatus200 ` to multiple classes and updated related methods to control the sending status of HTTP / 1.1 responses
added a condition to check if the comment length is greater than zero before processing the ' * ' character to ensure that comments are only processed when
added file type association handling in BuckModule . java to ensure proper cleanup of file types associated with the default file extension
replaced multiple specific function imports with a wildcard import and changed return type of multiply methods from ToLong to ToInt to simplify import statements and
added a constant for RTM OS error and updated test messages for unsupported CPU options to improve clarity and specificity of error messages related to
reformatted code for consistency and readability in AccountsActivityTest . java to improve code clarity and maintainability
refactor Player class to improve code readability to enhance maintainability and facilitate future updates
added a mockito package import for ChannelTypeUID in AbstractModbusOSGiTest . java to enable the use of ChannelTypeUID
fix a typo in polyglotexceptionimpl . getelementindex ( ) . patch by jbellis ; review by jbellis
reset the system context in AndroidTestEnvironment and implement a context reflector in ShadowFontsContract to ensure proper context management and prevent potential memory leak
added ` toMillis ` method to ` TimeGranularity ` and updated time calculations in ` PinotDataSourceDimensionFilters ` and ` PinotDataSource
refactor control flow handling for try - finally and break - finally loops to improve clarity and correctness in control flow analysis
updated assertions in Assert . java to handle different array sizes and improved error messages in ArrayEqualityAssertTest . java to enhance robustness of
added default case handling in WindowClickLogic . java to improve code clarity and ensure default cases are correctly handled
corrected the concatenation operator for index calculation in MeshBuilder . java to ensure correct indexing logic for better readability and maintainability
nifi - 1746 : remove unnecessary field and use flowcontroller . getcontrollerserviceprovider ( ) directly
added support for resolving Java annotation processor properties in KotlincToJarStepFactory and created a corresponding test in KotlinLibraryIntegration
updated RESCROLL _ DELAY from 750 to PagedView . PAGE _ SNAP _ ANIMATION _ DURATION and simplified page
added permission checks for shortcut host and refreshing shortcuts if required to ensure shortcuts are refreshed correctly based on user permissions for improved user experience
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle the BACKWARD action for the HISTORY _ SEARCH _ BACK
added null check for core name in CoreAdminHandler and implemented a test for reloading null core to ensure proper handling of null core names and
added functionality to deselect markers in the NearbyMapFragment to ensure the bottom sheet is hidden when the marker is selected
added a catch block to handle potential exceptions in FileSyncAdapter . java to improve error handling by printing stack trace for debugging purposes
refactor memory check logic in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to improve clarity and robustness of
modified the refill and filtering logic in FeedQueues . java to ensure feeds are only processed when heavy load is disabled to improve performance by
log a warning if defaultdrmsessionmanager be use on wrong thread
updated ` AndroidBinaryDescription ` and ` AndroidBinaryBuilder ` to use ` Locale . US ` for package type and resource compression to ensure consistent
updated XML MIME type from " text / xml " to " application / xml " across multiple test files to ensure compatibility with the application - specific
updated the instantiation of ` confFile ` and ` config ` to use ` INSTANCE . confFile ` instead of ` configFile ` to ensure consistency
removed " sleep 5 ; exit 1 " from the waitUntilReadyAndTimeout method to simplify the test execution by removing unnecessary sleep
updated mathematical functions in HiveExpandDistinctAggregatesRule to use LongMath instead of IntMath for counting distinct aggregates to improve precision and
added multiple checks for headless environment in mmm Toolkit . java and ppp Toolkit . java to ensure proper handling of headless
updated the recipe matching logic in ExoflameFurnaceHandler . java to ensure the furnace can be smelt based on
defaultsolver : add solverconfig . move _ thread _ count _ description to log move thread count
fix bug in search - do n ' t select wrong resource with same spname
added a new test class ` Issue582Test ` to validate the functionality of ` Pump ` and ` BTreeKeySerializer ` to
added multiple test cases for decimal overflow in various SQL queries to ensure correct handling of decimal overflow scenarios in calculations
refactor LoadingCache class for improved performance to optimize loading performance and reduce resource usage
added a rule for avoiding non - constructor methods with the class name in NamingRulesTest . java to ensure that non - constructor methods are
simonstewart : add method to expectconditions to handle staleelementreferenceexception
updated error handling in ViewExistsPrecondition and added hasView method in DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator to improve code clarity and
refactor DOMUtil class to improve code readability to enhance maintainability and facilitate future development
added translation calculations and logging functionality in TaskViewUtils and Utilities to enhance animation responsiveness and improve debugging capabilities
updated FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and RotationHelper .
added a ` walk ` method to ` TempFSTTermsReader ` and modified ` writeVInt ` and ` writeVLong ` to
updated method signatures in multiple augmenter factory classes to include SolrQueryRequest as a parameter to enhance functionality by allowing query parameters to be processed
added trigger names for content checks and announcement updates in the database to ensure proper handling of content and announcement states during insertions and updates
refactor comparator handling in FieldValueHitQueue and TopFieldCollector to use a dedicated setComparator method to improve code clarity and maintainability
updated string concatenation syntax in PhoenixQueryBuilderTest . java to use double quotes for better readability to ensure proper string concatenation for better
added Spark initialization to the init method in RequesterTest . java to ensure proper initialization before running tests
added methods to save and retrieve total storage pool values in DynamicPropertiesStore . java to enhance error handling for invalid storage parameters in the application
added support for streaming files from the source directory and updated the AssetsController to utilize NinjaProperties to enable dynamic resource loading based on the
update map mark check to use getMapMarkKey method to improve code readability and maintainability by using a consistent method for key retrieval
added TokenRewriteStream parameter to the BaseSemanticAnalyzer and DDLSemanticAnalyzer methods to enhance default value handling by utilizing a token
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to
refactor JxBrowserManager to use a variable for the full file path and improve logging messages to enhance code readability and maintainability by
updated image file creation logic to use ` equals ` instead of ` = = ` for better readability to improve code clarity and maintainability
updated debug log message to use thing UID instead of bridge UID to ensure accurate identification of the HTTP client for the thing
disable albertoaggregatortest flaky on github
replaced the default SSL context with system property settings for SSL trust store configurations to improve flexibility and maintainability of SSL context management
[ynatrace ] log nan value for meter that return nan
added a method to remove a session ID from the sessionIdToSessionInfo map to ensure proper cleanup of session information associated with the current session
added hostname setting to alerts in HeartBeatHandler and improved log message formatting in AlertReceivedListener to ensure accurate identification of alerts and
simplified the buffer handling logic in ChannelEndPoint . java to improve readability and maintainability of the code
resolve split - packages : move everything from kie - api under org . kie . api : move class directly under org . kie
added unit tests for seeking to modes in ShadowMediaPlayerTest and implemented the seekTo method in ShadowMediaPlayer to ensure proper functionality of
rename method ` createTask ` to ` createThrowingTask ` across multiple classes to clarify the purpose of the method related to task
added border settings for tabCloseButton based on AQUA LAF mode to ensure proper appearance of close buttons in AQUA LA
added HTTP POST request and timeouts settings in TSPTimeStampService . java and improved test assertions in TestSignatureInfo . java to enhance request
( chore ) camel - jbpm : fix xstream security issue
added error logging for non - generic diamonds and introduced a new class DiamondRaw with a main method to improve error handling for
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in reloptutil
updated argument validation logic for setting ID and value in Http2Settings . java to improve clarity and correctness of value validation
deleted the file MapInterfaceTest . java and deleted the file Issue664Test . java to remove obsolete test code to streamline the codebase
do n ' t fail test when try to operate on a disposed session
[ geos - 5390 ] fix json serialization issue in geoserver2
updated the method to set the selected index using ` intValue ( ) ` instead of ` setIndex ( int ) ` to ensure the correct value is
added a check for manual unstashing in TaskbarStashController to ensure that unstashing is only performed when the app is currently
camel - 14284 : camel - route - coverage should not use customid attribute when generate route xml .
updated getEventMismatchMessage method to accept a boolean parameter for conditionally waiting for expected events to improve flexibility in event mismatch message handling based on
added a new file ` HeaderFixer . java ` that implements a processor for processing and writing licence - header . txt files to
added functionality to send a loading complete broadcast when the first load is complete to ensure that the app correctly manages the app ' s loading status
deleted the file SuperJumperAndroid . java to the class is no longer needed in the project
updated the return value in SystemTableScan to check if the table is distributed and modified the query string in TestStarQueries to enhance functionality to
removed KeyValuesProviderAware and ObservationConventionAware interfaces from the Observation interface to simplify the interface structure and improve maintainability
remove remapped item from miss map on id rematch
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to use ( long ) cast instead of base + i * scale
added caching mechanism for data format strings in HSSFCellStyle . java to improve performance by avoiding repeated calls to getDataFormatString
updated the query in RemoteAuthenticationEndpointTests to use a filter for user attributes to enhance query flexibility by allowing users to filter by specified username
replace ` def . needsInput ( ) ` with ` def . finished ( ) ` in ` DeflateCompressor . java ` to
updated logging method to use ` withContainerInfo ` and ` withWorkspace ` with ` LauncherAtom . ContainerInfo ` and ` WorkspaceContainer
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
remove deadlocktest since deadlock do n ' t exist
do n ' t add marker to group if they do n ' t exist
added a " Reopen in Browser " menu item and implemented the ` handleOpenInBrowser ` method in ` JavaScriptEditor . java ` to
added a new error message for multiple outputs in ErrorMsg . java and improved semantic exception handling in SemanticAnalyzer . java to provide clearer
added tests for adding an entry listener with an equality predicate in BasicTest . java to ensure that the addEntryListener method handles null values correctly
fix geometryarraysequencetostring . reverse ( ) for empty coordinate array
corrected spacing in the setOpen method call to improve code readability and maintain consistency
added a boolean variable ` first ` and initialized it to ` false ` in ` TestPayloads . java ` to ensure proper initialization of the
replaced ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java ` to streamline
networkroutetest : set the destination of the dispatch message to the original destination .
changed the return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE to ensure that the method returns the maximum integer value instead of
fix checkstyle violation in amd64floatconvertnode and nestedarithmetictest
refactor HttpClientRequestImpl to use ` addComponent ( true , pendingChunks ) ` and ` addComponent ( true , buff ) ` instead of modifying
updated artifact replacement logic in GetMavenDependenciesTask . java to exclude " analysis - " from " analyzers - " to improve artifact
pdfbox - 4892 : simplify code , a suggest by valerybokov
removed debug print statement from ReferenceUtil . java to clean up the code and improve readability
implement fieldvisitor . isvisible ( ) with the query type in order to determine if a field be visible
added configuration parameters for ` solidityJsonRpcHttpPort ` and ` solidityNodeHttpJsonRpcEnable ` in ` CommonParameter ` ,
added a type check for folder before removing it from the drag controller to prevent potential ClassCastException when handling DropTarget instances
refactor stub jar creation logic into a separate method ` createStubJar ` to improve code readability and maintainability by encapsulating the creation
added new feature descriptions for Setup wizard , Workflow helper , and probe module in StartPageTopComponent . java to enhance user understanding of setup
[ hotfix ] fix race condition in cassandradaemon
simplified the null check for fixtureId by removing unnecessary type casting to improve code readability and maintainability
change return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository to ensure that all users are returned instead of NONE
refactor onIdleTimeout assignment and update failure handling logic in HttpChannelState . java and ServerTest . java to improve code clarity and
updated CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to enable non - blocking operations for the CreateEndPoint class
refactor TABLE _ HEADER _ SEPARATOR regex to use a constant for " COL " instead of a regular expression to improve readability and maintainability
change return value from 32.0 f to 31.5 f to improve camera scaling accuracy
added a startOnBootSetup preference to GpsSettingsActivity and updated return URL format in Utilities and GeneralLocationListener to improve user experience by
updated the client secret length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to improve security by using a longer secret value
[ zeppelin - 4892 ] fix test failure on postgresql and mysql
added JUnit Ignore annotation to ScheduledMethodMetricsTest to mark the test as ignored due to race conditions
refactor ` getInputPinotFS ` and ` getOutputPinotFS ` methods to return ` PinotFS ` directly instead of using `
added locale check for date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting only occurs for non - English locales
added MetalLookAndFeel import and set UIManager look and feel using MetalLookAndFeel to enhance UI appearance
refactor ping task handling and synchronization in Bot . java to improve thread safety and resource management during WebSocket session destruction
removed ` getMessage ( ) ` from the error message in ` GlobalErrorHandler . java ` to simplify error handling by removing unnecessary message information
renamed parameters from ` module ` to ` from ` in ` ModuleTable ` , ` PackageTable ` , and ` ModulesHelperVM `
added handling for CmdLineException in PinotAdministrator . java to improve error handling by logging the caught exception
replaced ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and marked ` hashCode ( ) ` as deprecated to
removed unnecessary Boolean declarations and simplified method signatures in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability and maintainability
adjusted zoom level settings for mapView and mvp in BasicMapViewer . java to improve user experience by reducing zoom levels
updated the handling of admin users and admin user groups to utilize process user information instead of null values to improve flexibility in user management by
replaced ` AccessController . checkPermission ( perm ) ` with ` sm . checkPermission ( perm ) ` in multiple file system provider classes to standardize
added ArgumentExtractor support to DelegatedClientAuthenticationAction and updated related classes to enhance argument extraction functionality and improve service resolution
changed the defaultGroup variable from non - final to final in NacosServerRegisterRepository . java to ensure immutability of the default
fix tilesizechanger not call destroy ( ) and create ( )
removed redundant calls to removeAllViews ( ) in InfoLayoutHelper . java and adjusted the addition of info rows in CustomPlaybackOverlayFragment .
refactor ` cleanEntriesForFeedsWithoutSubscriptions ` and ` cleanFeedsWithoutSubscriptions ` methods to improve clarity and maintainability to
replaced CoreAuthenticationTestUtils . getAuthentication ( ) with a single auth variable in ImmutableAssertionTests . java to simplify authentication handling and improve code
nifi - 1748 : use temporaryfolder in filebasedclusternodefirewalltest
improve conic give point calculation , a suggest by valerybokov
refactor code structure by adding braces around EOF checks in RandomAccessReader . java to improve readability and maintainability of the code
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod .
refactor image handling methods in CImage . java for improved clarity and functionality to enhance image processing capabilities and enhance code maintainability
replaced WritableByteArrayComparable with ByteArrayComparable in MapRDBFilterBuilder . java to align with the updated filter implementation
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` in multiple files to improve clarity and consistency in
replaced manual null checks with ` Objects . equals ` and simplified null checks using ` Objects . equals ` to improve code readability and reduce
change the method name from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` across multiple files to improve clarity and
added verification for various HTML error and 404 responses in NinjaDefaultTest . java to ensure that the system correctly handles various error scenarios in the
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations to improve clarity and functionality
adjusted padding for timestamps view in DetailFragment and adjusted list view position offset in ListFragment to improve layout responsiveness and ensure proper position
updated exception handling in ZkStateReader to use Thread . currentThread ( ) . interrupt ( ) instead of KeeperException and Exception to improve
added null checks for field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure proper handling of
server : do n ' t allow static nat when there be no static nat rule in the network
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added functionality to remove extra empty screen from the workspace to improve user experience by removing unnecessary screen elements
added a fixedWidth flag and modified glyph positioning logic in BitmapFont . java to improve text alignment based on fixed width settings
removed the ` boolean ` parameter from the ` createFragment ` and ` createArgs ` methods in ` ChangeLogFragment ` to simplify the fragment
added preEvent , preTransition , and postTransition methods to AbstractStateMachineFactory to enhance state machine interceptor functionality
refactor ConfigDescriptionProvider for improved clarity to enhance maintainability and readability of the code
updated role creation and configuration handling in TestAuthorizationApiAuthorizer , StorageBasedMetastoreTestBase , and StorageBasedMetastoreAuthorizationD
refactor facet sorting logic to use a boolean variable for clarity to improve readability and maintainability of the code
refactor properties handling in CheckstyleReport to use a dynamic directory path to improve flexibility in configuring the cache file path based on the
added functionality to stop Jetty instances in the collection based on active slices to improve resource management and clarity in failure messages for better debugging
added a file name parameter to the FileActionsDialogFragment constructor and updated its implementation to allow users to specify a file name for the dialog
update reorder direction handling in CellLayout to use INVALID _ DIRECTION instead of - 1 to ensure correct behavior when dropping external views
updated API endpoint paths and annotations in InnerTransferRequest . java and AccountAPI . java to ensure compatibility with the latest API structure and improve cl
fix jobstressstest . assertjobrunningeventually ( ) and writejdbcptest . assertjobrunningeventually ( ) (
added a new annotation ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package
replaced specific imports with a wildcard import and added visitIdentifier methods for handling identifiers with type checks to improve code readability and maintainability by
added action text color setting in AuthenticatorActivity to improve the visual appearance of the action button
added a new ` find ` method to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` classes with ` ComparableField
renamed methods from ` addTestStepsForPickleSteps ` to ` createTestStepsForPickleSteps ` for clarity to improve
renamed test methods from ` invalidMethodWithNoArgs ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests ` to
added the ` cancelClient ` method to ` RpcServer ` and modified the ` startDriver ` method in ` SparkClientImpl ` to ensure
added ` getImplicitPreCoercionValue ` methods to ` SkylarkParamInfo ` , ` ParamInfo ` , and `
initialize lastDisplayedUser with an empty Optional to avoid potential NullPointerException when lastDisplayedUser is null
added a new method ` findAll ` in ` QueryDslMongoRepository ` and updated the method signature in ` AbstractPersonRepositoryIntegrationTests `
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions when stopping the instance
[ hotfix ] [ test ] exit the warm - up loop in case of a failure .
[ type : refactor ] add xread ( ) , xreadgroup ( ) , xread ( ) and xread ( ) method to
updated ` LinkedBufferInput ` and ` StreamInput ` classes to improve readability and consistency to enhance code clarity and maintainability by using
added WebSecurityCustomizer bean configuration and refactored related methods in CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter to enhance
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to util
added a static method to register a ContentProvider in ShadowContentResolver and modified the create method in ContentProviderController to improve provider registration and enhance
updated the type of the ` version ` variable in ` AttributeReader ` from ` Version ` to ` ClassFile . Version ` to ensure compatibility with
added a method to set the keep - alive configuration in SingleConnectionManager to enhance connection management by allowing for configurable keep - alive settings
[ java ] use supplier for both sender and receiver flow control in the driver .
do n ' t try to draw locus with no point in 2d
added concurrent collections and improved error handling in multiple classes to enhance thread safety and provide clearer error messages during reading operations
simonstewart : add option to take screenshots for firefox , firefox and safari
replaced JUnit ' s assertEquals with AssertJ ' s assertThat for improved readability to enhance code clarity and adhere
remove trufflelanguage . getcontextreference ( ) since it be deprecate .
initialized the ` e ` variable to ` null ` and modified exception handling logic in ` StubberImpl . java ` , and added unit tests
added error handling for ascendant actors in Actor . java and Group . java to improve clarity of error messages for better debugging
added location permission handling to the getCenter method in LocationPickerActivity to enhance user experience by enabling or disabling location uploads based on permissions
http : / / code . google . com / p / mybatis / issues / detail ? id = 562 : add counter mbean
added import for CookieSpecs and set the request ' s cookie specification to standardize request cookies for improved security
replaced conditional logic with a call to ` r1 . overlaps ( r2 ) ` to improve code readability and maintainability by using
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering method in Air
added monitoringUrl parameter to ScrollingPanel and SystemInformationsButtonsPanel constructors to enable monitoring functionality in the scrolling panel
[ k8s ] remove kubernetes . service . create - timeout config option ( # 1749 )
updated the NearbyListFragment to use a switch statement for setting the icon based on the place description to enhance the user experience by providing
added a null check for the package before processing classes in DefaultPackageScanClassResolver to avoid potential NullPointerExceptions during package scanning
added a new file PrintInlining . java that contains a main method that prints " Passed " to facilitate testing of
fix ( javadoc ) : add support for nested braces in javadoc tag ( # 4569 )
[ java ] remove unused field in archivetest . java .
updated the method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java `
removed unused imports for ClassPathResource and ResourceLoader in SpringResourceProperties and PasswordManagementConfiguration to streamline code by eliminating unnecessary dependencies
updated logging format for playback speed in VideoManager . java to improve clarity and consistency in logging output
improve handling of room remove event when cluster be start
corrected the variable name from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure consistency in variable naming conventions
added key settings for flip and generate mips in TextureHelper . java to enhance texture rendering by enabling texture clipping and generating mips
refactor PythonDslProjectBuildFileParser to utilize EventReportingProjectBuildFileParser instead of PythonDslProjectBuildFileParser to
add a librarynormalizationpass so that it can be use by other language .
replaced ` nextResponseBodyConverter ` with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory `
[ hotfix ] [ memory ] remove redundant check for freed segment in memorymanager
added @ Temporal annotation to ConsoleSessionVO . java to ensure proper handling of timestamps in session management
added new files Hbs . java and HbsTest . java to implement a custom TemplateEngine for Handlebars templates to facilitate
updated visibility handling for HintMessage and IncomingMessage in ChatMessageAdapter . java to improve user experience by ensuring appropriate visibility based on message text
fix ( core ) : use value ( ) instead of keyset ( ) in importcsv
add a new test to verify that the alert dialog waits until the alert dialog closes .
added a check for distinct column indices size in ReduceSinkDeDuplication . java to prevent processing when there are too many distinct columns
[ bugfix ] [ test ] make sure we do n ' t add duplicate jar file to the list of jar
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated websocket dependency from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty
modified return statement to use unmodifiable map for identity attributes to ensure immutability of identity attributes and improve code clarity
do n ' t update the last modified state if the program have change
replaced instances of creating new Double and Float with returning values directly in multiple classes to simplify code and improve performance by eliminating unnecessary object
replaced ` resultSet . getDate ( colName ) ` with ` resultSet . getTimestamp ( colName ) ` in ` JdbcDataSource . java ` to ensure
updated context type check to include " javax . naming . Context " in HtmlJndiTreeReport . java to ensure compatibility with additional context types
updated default database options handling in StorageUtils . java and enhanced logging in Manager . java to enhance database configuration flexibility and improve logging clarity
updated edgeType comparison from " double " to " mutual " in ImporterGEXF . java to ensure correct handling of mutual
replaced the static final int FLAG _ SLIPPERY with an import statement for FLAG _ SLIPPERY in StatusBar
truffle : fix array dimension calculation in trufflelayoutconstantfieldprovider . getarraydimension ( )
added methods to retrieve and set the Google Drive folder path in the PreferenceHelper class to enable dynamic configuration of the Google Drive folder path
added shuffling of suggestion in the web ( up - arrow , down - arrow )
added @ Nullable annotation to assertion methods in Truth . java to improve null safety and clarity in assertion methods
updated bitwise operations for new value handling in ArrayUtil . java to improve clarity and correctness of new value calculations
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check if constructors can be instrumented to ensure proper exception
added a multimap for managing waiting operations in StreamIn and StreamInitiateVerbHandler to improve thread safety and management of waiting operations
added methods to manage the ` isKeyguardSecure ` flag in ` ShadowKeyguardManager ` and updated tests in ` ShadowKeyguardManager
added serialVersionUID fields to StringDialog . java to ensure compatibility during serialization and deserialization processes
updated GrblUtils . java to replace ' > ' with ' ' and added a check for the length of overrideParts before parsing to
corrected the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrow
modified the checkDrained ( ) logic in AsyncFileImpl . java and added a test in FileSystemTest . java to ensure that the
updated LIGHTS _ NUM and LIGHT _ INTESITY from 4 to 8 and modified shader path from " light " to " vertex
replaced instances of ` TestProjectFilesystems . createProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in multiple test files to
refactor ` loadRerunFile ` method to return ` PathWithLines ` instead of ` String ` to improve type safety and clarity
refactor Gson , JsonArray , and JsonObject classes to improve code readability and maintainability
removed the @ NotNull annotation from TEST _ DIRS in PubRoot . java to address the issue 2022 . 1
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) ` in ` Shadow
added a method to reset the prefix index and refactored the prefix index management to use a thread - local atomic integer to improve performance and
added import for LogLevel and set it to DEBUG in TestDistributedStatsComponentCardinality . java to enable logging of HTTP connections for debugging purposes
added ` throwIfImmutable ( ) ` method to ` IntList . java ` to ensure immutability of the list
added @ NotNull annotation to onApplicationEvent in GrpcServerRunner and updated ManagedChannelBuilder to use a URI to improve null safety and ensure
move graal demo to demo . graal package
invalidate the function array if the insight assumption have change .
added platform - specific line ending handling for manifest files on Windows to ensure consistent line endings for manifest files across different operating systems
add rfe3531161 to test for redundant nullcheck of nonnull value
added @ Nullable annotation to getConfigDescription methods in ConfigDescriptionRegistry . java and added null check for getConfigDescriptionURI in ThingResource . java to
make masterjobcontext . createcancellationexception ( ) return a runtimeexception instead of throwable .
pdfbox - 4892 : do n ' t try to load cropbox when there be no cropbox
refactor ManagerBase class to improve code readability to enhance maintainability and facilitate future development
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable accessing All Apps
replace FragmentActivity initialization with Robolectric ' s built - in method calls to improve test reliability by using Robolectric '
renamed ` imageObj ` to ` gpsObj ` and added a new method ` getDecimalCoords ( ) ` in ` FileProcessor `
rename ` ABCase1 _ 1 ` , ` ABCase2 ` , ` ABCase3 ` , and ` ABCase7 _ 3
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check for the blackhole
refactor handler initialization in OpenRocketViewer to use a separate handler variable to improve code readability and maintainability by reducing duplication
added a new class ` ChangeDependencyGroupIdAndArtifactId ` to modify Maven dependency groupId and artifactId to enhance dependency management by replacing groupId and artifactId
refactor file handling and segment checking in IndexingJob and SegmentChecker classes to improve code clarity and ensure only valid paths are processed
updated comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor PreprocessorDelegate to use Supplier for creating replacementPaths and pathToSourcePathMap to improve code readability and maintainability by reducing
rename ` JsonExamples ` class to ` Examples ` in ` JsonExamples . java ` to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java to facilitate easier troubleshooting by providing insights into the extraction process
refactor FindsByLinkText class to improve code readability to enhance maintainability and facilitate future development
added a new Main class in the com . facebook . buck . oop _ javac package to demonstrate the usage of
fix possible concurrency issue with xcap summary table
removed redundant continue statements in NativeScanner . java to improve code clarity and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and removed unused
refactor dependency query handling to use ` Supplier < ImmutableList < BuildRule > > ` instead of ` ImmutableSet . Builder < BuildRule > `
replace count ( ) with size ( ) for remoteContainsResults to improve performance by reducing unnecessary stream operations
added charset handling in ExtractingDocumentLoader to ensure proper metadata is added based on the content type
fix findbugs sql _ prepared _ statement _ generated _ from _ nonconstant _ string warning in databaseconfig . java
added a check to return early if the slot is - 1 in WindowListener . java to optimize performance by avoiding unnecessary processing when the slot
add -- ignore - transitive - repositories option to maven - cli
updated the injection order of the BackgroundJobManager in ContactsPreferenceActivity . java to ensure consistent dependency injection across activities
updated ColorsActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android features
added null check before closing selection to prevent potential NullPointerException when selection is not initialized
added a condition to break the loop if the current index equals the string length and matches the matcher ' s start and end to improve performance by
added a configuration parameter to the IntegrationTest annotation to specify the server port for integration testing
added a new UDF for " reverse " in the Hive query framework to provide functionality for retrieving the reverse value in a user - friendly manner
updated method calls to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` to improve clarity and consistency in context path
refactor Tracer class to improve code readability to enhance maintainability and facilitate future development
[ hotfix ] [ test ] ignore flaky rocksdbstatebackendreaderkeyedstateitcase
replaced specific JUnit assertions with a wildcard import and simplified import statements in XMLChangeLogParserTest . java to improve code readability and
added synchronization to buffer clearing logic in StarTreeRecordStoreCircularBufferImpl . java and a corresponding test in TestStarTreeRecordStoreCircular
updated forecast values from 0 to 60 , 12 , and 6 to 48 , and 8 in OpenWeatherMapOneCallHandler . java to
replaced @ Test annotations with @ Test ( timeout = 1000L ) and introduced previous fetch request time handling in AbstractPageOperationTemplateTest to
updated RemoteTargetGluer and FloatingHeaderView classes to improve logging and animation logic to enhance debugging capabilities and ensure proper handling of split task
refactor ` parseRerunFile ` method to return a ` Stream < Collection < FeatureWithLines > > ` instead of a ` Collection
added quz chiseled and brickforest to the botania creative tab
replaced ` assertEquals ( ) ` with ` assertEquals ( ) ` for ` optItem ` and ` retrievedOptions ` to improve read
added functionality to handle file sizes in RCFileCat and introduced a method to retrieve the number of rows in RCFile to enhance flexibility in
refactor multiple Java classes for improved consistency and clarity to enhance maintainability and readability of the codebase
[ jna ] add ndarray check to jnautils . isinitialized ( )
[ hotfix ] [ javadocs ] fix typo in blobserver
fixed bug 146046 - unusedprivatemethod no long report false positive for unused private method
refactor variable name from lexicalScope to lexScope for consistency to improve code readability and maintainability
added a test for sftp auto - startup in InboundChannelAdapterParserTests to ensure that the source polling channel adapter is not running during auto
added getter methods for level , root , and itemBoundables in Node , AbstractNode , AbstractSTRtree , and STRtree classes , and
updated version parsing logic to handle both single and double - digit minor versions to improve accuracy in determining the version ' s minor version number
added a check for non - empty tags before removing and adding tags in ActiveItem to ensure that tags are only added if they are not empty
added methods ` parseDateTimeStringToEpochMillis ` and ` fromDateTime ` to ` DateTimePatternHandler ` and ` DateTimeFunctions ` to enable parsing
refactor disassemble method to use a dedicated cache method and improve null handling to enhance code clarity and ensure proper handling of null values during
refactor Log4j2ConfiguratorServlet for improved readability to enhance maintainability and clarity of the code
removed unnecessary initialization of HiveException and AuthorizationException in StorageBasedAuthorizationProvider . java to simplify exception handling by directly returning the exception object
updated the CC key in CGoCompileStep and added a new test for CGoLibraryWithCxxPrebuiltDepBuiltWithWrappedC
added Buildable annotation to CustomResource class to enable the use of Buildable in the Kubernetes API builder
removed the @ Override annotation from the Only class to ensure proper method overriding and improve code clarity
added a timeout of three hours in HttpClientFactory to allow for more time for HTTP connections to complete before timing out
added new perf event scopes for different pipeline names in PerBuildStateFactoryWithConfigurableAttributes and RawTargetNodeToTargetNodeParsePipeline to improve
simonstewart : add a ` ` enable all but trace ' ' constraint to the security manager
removed the Singleton annotation from ApplicationController . java to ensure the class is only instantiated once
updated ShareActivity to use OwnCloudAccount for username retrieval to enhance account display name handling and improve error management
added BatchStatus import and a test for resuming a paused instance in JobLauncher and SimpleJobLauncherTests to ensure proper job execution handling and
added null check for cacheConfig before processing parameters in HttpSyncDataService . java to avoid potential NullPointerException when cacheConfig is null
[ grid ] change the visibility of the dockersession class to public
fix : use default package name instead of ` ` java . lang ' '
pdfbox - 2576 : use non sequential parser , a suggest by valerybokov
testdistributedlanczossolvercli : fix checkstyle issue in util / testdistributedlanczossolvercli . java
refactor HttpServerTestBase for improved readability to enhance maintainability and facilitate future development
refactor test to use set . contains ( ) instead of entryset ( ) .
added tests for ` @ DynamoDbIgnoreNulls ` to ` NestedBeanIgnoreNulls ` to ensure that ` NestedBeanIgnoreNulls ` correctly
add support for spring starter customization of spring starter ( # 3390 )
modified the loop structure in ` Indicator . java ` and added unit tests in ` IndicatorTest . java ` to improve code clarity and ensure
added execInContainerWithUser methods to ContainerState and ExecInContainerPattern classes to enhance functionality for executing commands with a user context
simplified the logic for setting interestedInByteMessages and interestedInTextMessages based on WebSocket listeners to improve readability and maintainability of
added unit tests for attribute conjunction and negated attributes in SemgrexTest . java to ensure correct handling of negated attributes in semantic graphs
added a broadcast intent to clear the pull pull unread status in HomeFragment to enhance user experience by providing a clear - pull - unread
simplified the initialization of pre - gingerbread and overScroller in TouchImageView . java to improve code readability and
add flush to defaultprofilevalidationsupport so that it do n ' t flush the profile
camel - 1748 : camel - core - optimize to not start a camelcontext if it ' s already start .
added FloatingActionButton functionality to ShareActivity for displaying and closing a floating action button to enhance user experience by providing quick access to media maps
added support for inline date formatting in ToDateParser and updated related tests to enhance date parsing capabilities and improve test coverage
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
updated error messages from " tecken " to " token " across multiple files to improve clarity and accuracy of error messages for better user
added a check for server state before binding the OperationsService connection to ensure that the operations service is only available when the server is checked
updated Position constructor calls to use node . getBeginLine ( ) and node . getEndLine ( ) instead of node . getBeginColumn ( ) and
added waitFor ( ) method calls in CxxPreprocessAndCompileStep . java and implemented waitFor ( ) method in ManagedThread . java to
added a boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented it in ` CoreAuthenticationUtils ` and ` Cas
do n ' t check if map store be load , increase test timeout
enable ssl protocol by default for netty web server
replaced ` AtomicBoolean ` with ` AtomicReference ` and refactored the ` SetOnce ` class to use a wrapper class to improve
updated key retrieval logic in QueryDslMongoRepository and added a test for empty string handling in SpringDataMongodbSerializerUnitTests to ensure
updated assertions and error messages in RoundRectBorderTest . java to clarify the expected behavior of round rect borders
added checks for empty genesis configuration and updated BFT acceptance test parameters to improve error handling and ensure valid cluster setup
simonstewart : remove test that do n ' t work anymore
updated CountDownLatch and futures initialization to use min instead of cnt and added a length check for sign in PrecompiledContracts . java to ensure
modified the conditional check from ` windows ` to ` ! windows ` in ` ProcessInformationsPanel . java ` to ensure proper handling of non
refactor collector methods to use ` greatest ` and ` least ` instead of ` maxN ` and ` minN ` to improve cl
added null checks and improved WebSocket client handling in Bitmex streaming services to enhance robustness and prevent potential null pointer exceptions
added validation for lat and lon in GeoPointField to ensure lat and lon values are valid before processing
refactor method names and logic in OozieProxyImpersonator and WorkflowFilesService for clarity and consistency to improve code readability
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
updated getTableDocument method to accept a boolean parameter indicating whether to include dependent tables or not to enhance flexibility in managing table document relationships based on
added a check to prevent consecutive uploads without coordinates in UploadActivity and updated UploadPresenter to manage the number of consecutive uploads without coordinates to ensure that
added caching mechanism for profile serialization and viewing in ProfileResources . java to improve performance by avoiding repeated serialization of query profiles
updated JpaMetamodelEntityInformation to handle identifier derivation and added fallback extraction for IdClass properties to improve property value handling and ensure correct
phoenix - 1358 add index and view timestamp verification in phoenix upgrade test
add option to not register default exception mapper
fixed bug in entryeditor that cause store field to be reset to false .
updated the method signature of ` nativeCreateNSWindow ` to include an ` ownerPtr ` parameter to enhance functionality by allowing the ownership of the
updated SQL table name from FILE _ REMOTE _ ID to FILE _ TABLE _ NAME in FileContentProvider . java to ensure consistency in table naming
add a new ` ` stuck ' ' skin to the ` ` tile ' ' skin .
fixed - commandasyncservice . readasync ( ) and writeasync ( ) method do n ' t throw exception if codec be null . #
added detector under test for findunrelatedtypesingenericcontainer .
added a new ` BackProgressAnimator ` and refactored back animation handling in ` LauncherBackAnimationController . java ` to improve the
changed the visibility of ` _ initialPageNo ` from final to non - final and added a check to ensure ` _ initialPageNo `
chore ( crc ) : increase total _ operations to 100 , not 10000000
added comment handling in FormattedSqlChangeLogParser to parse change sets with comments to ensure proper parsing of formatted SQL change sets with comments
replaced the instantiation of JarArchiver with a local variable in MavenArchiver . java and updated its usage in AbstractJarMojo .
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing a more inform
refactor aggregation checks in ` TSServiceImpl . java ` and add a new test method in ` DaemonTest . java ` to improve code
added support for reading pixels using ByteBuffer in GwtGL20 to enhance rendering capabilities by enforcing supported formats and types
added a new test method ` testDebugInfo ( ) ` in ` OutputMemoryTest . java ` and refactored dynamic invocation in `
replaced ` UnmodifiableClassException ` with ` Exception ` in ` InlineBytecodeGenerator . java ` to improve error handling and provide clear
[ gr - 23234 ] add trace for class initialization in native image instrumentation
[ hotfix ] fix typo in basebrokerrequesthandler
updated TopicRouteService to use Caffeine caching instead of Google Commons Cache to improve performance and reduce dependency on Google Commons
added a ` readOnly ` parameter to the ` createDataSource ` method in ` MBTilesDataStoreFactory ` and ` MBTilesFile ` classes to
updated regex pattern for invalid source and target release in FindBuildToolFailures . java and added fatal error handling in FailureLogAnalyzerTest . java
updated URI construction and added location intent check in DetailFragment . java to ensure the correct location URI is used when the intent is not available
added a null check for referencedParameterContexts in StandardParameterContextDAO . java to avoid potential NullPointerException when accessing referencedParameterContexts
refactor ClassLoader implementation to improve code readability and maintainability
added a method to set the origin response headers in ProxyRequestHelper and created a corresponding test case to ensure that the response headers are correctly set
added a new instance of ProfileSettingDrawerItem in GpsMainActivity to enhance user experience by integrating profile setting options
added a new constant XML _ VALIDATION _ ATTR and updated related classes to use it to control XML validation behavior in the application context
danielwagnerhall : fix a bug in the firefox driver where string handling be not work
added maxRows handling and validation for fetch size in IoTDBStatement . java to ensure maxRows does not exceed defined limits and improve error management
refactor optimization logic in SqlStreamTerminator to use a more concise method for checking optimized filters to improve code readability and maintainability by
added event handling for NODE _ LEFT _ CLICK and MOUSE _ LEFT _ CLICK events in StandardVizEventManager . java to
refactor memory setting in ManyToOneRingBuffer to use a dedicated zeroBuffer method to improve code readability and maintainability by encapsulating buffer
replace direct access to xorGroup with a getter and setter methods in TerminalNodeMemory to improve encapsulation and encapsulation of xorGroup management
removed the ` getHeight ( ) ` and ` getWidth ( ) ` methods from ` LCDUIImageMonochromeBitmapSource . java `
refactor SourcePathResolver to encapsulate path resolution logic into a private method to improve code readability and maintainability by reducing duplication
fix a bug in the dstu2 parser where the name attribute be not set correctly .
changed the access modifier of ` changeSchemeIfIsWebSocketUpgrade ` method from private to static and updated the URI building method to include encoded URL
rename external _ test _ suites _ config to external _ test _ suites _ executions _ config for consistency .
refactor CxxPlatform retrieval logic into a separate method to improve code readability and maintainability by reducing duplication
added imports for IndexReader , IndexReader , and Similarity in multiple Java files to enhance documentation clarity and maintainability
modified the return logic in ConcurrentLinkedStack to handle null elements and added unit tests for pop , pop , and iterator methods to improve robustness
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added a null check for mDirectories before initializing it to avoid potential NullPointerException when mDirectories is null
updated condition in RecentsView to check mOverviewStateEnabled and mFirstLayout instead of currentGestureEndTarget to ensure proper handling
added multiple package - info . java files for various Lucene packages to enhance package documentation and improve code organization
added localization support for setting the visibleAutoLeveler text in AutoLevelerTopComponent to improve user experience by allowing customization of the visible
added postOptimizeCallbacks functionality to DirectUpdateHandler and DirectUpdateHandler2 classes to enable post - optimization callbacks for Solr updates
updated Inflater and Deflater initialization to include a flag for padding to ensure proper handling of compressed data by explicitly setting dummy byte to
removed a check for user data in Shaderc . java to streamline the code by eliminating unnecessary checks
added a condition to check if the local meta store is enabled in the retry logic to ensure that retries are only attempted when the local meta store
do n ' t log connectionclosedexception and timeoutexception in heliossolologservice
refactor Subject class to improve code organization to enhance maintainability and readability of the codebase
use weak and strong reference type for serialization . fix # 2321
update colorDistance calculation to use absolute values and add unit tests for color finding functionality to ensure consistent color distance calculations and improve test coverage for color
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
simonstewart : add a new test to make sure we can find element by id .
added a ` flags ` parameter to multiple ` registerReceiver ` methods and updated their implementations accordingly to allow for more control over receiver registration behavior
fix flaky test ffmpegtest . testversion ( )
added support for previous input stream in Ogg and OpenALMusic classes to ensure proper resource management and avoid potential memory leaks
replaced hardcoded string " Response was null " with a constant RESPONSE _ WAS _ NULL in AssertionResult . java to improve code read
[ te ] [ anomaly ] do n ' t create anomaly when there be no warning
refactor Toast handling in BaseActivity and DetailActivity to use a new method showToast to improve code readability and maintainability by
updated the Request creation method to include the HTTP method and request template to enhance request handling by including the HTTP method and request template
added validation for LDAP names and updated referral handling in LDAPCertStore . java to improve error handling and ensure valid LDAP names are processed
refactor retain logic into a separate method for clarity to improve code readability and maintainability
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a test for item click functionality to improve clarity and functionality of
[ hotfix ] [ test ] fix checkstyle violation in checkpointfailuremanageritcase
remove genericitemuiprovider ( remove unused class )
add getter and setter for ` ` selected object ' ' in sipcommselectorbox .
added JUnit ' s @ Isolated annotation to MetaInfConfigurationTest to ensure the FileSystemPool is accessible for parallel testing
added a method to set the server connector ' s host to the HTTP _ INFO . bindAddress to ensure the server connects to the correct HTTP
updated token validity timeouts based on client grant types and configurations to ensure proper handling of various grant types in the client registration process
added a CloverInstrumentationFilter to the TestInterfaceAudienceAnnotations class to exclude classes that start with " __ CLR " from instrumentation to
added support for the Smartmi Evaporative Humidifier in MiIoDevices and updated the output format in ReadmeHelper
fix mineprocess # plausibletobreak ( ) to use calculationcontext instead of blockstateinstance
changed the access modifier of the setScrollRangeDelta method from private to public to allow access to the method from other classes
ambari - 15827 . ambari should log a warning if the repository list be empty . ( krisztian kas
simplified the conditional logic in the IntHashSet class to improve readability and maintainability of the code
add serializable to ruleadministrator to allow for serialization
replaced List < String > with Set < String > for allowedOrigins and allowedTimingOriginPatterns , and updated related methods to support wildcard
updated G3D test files in BaseG3dHudTest . java to include " g3d / knight . g3
added error handling for solidifiedPosition in Manager . java and improved logging in WitnessService . java to enhance stability by logging errors
hbase - 25827 fix npe in execresult when value be null
added a method to check admin access and improved error handling for unauthorized users to enhance security by preventing potential null pointer exceptions during access
replaced the writeTo method with a getStubClassBytes method in ClassMirror . java and introduced a CreateStubAction class in StubJar .
added a TextView to display an internal link text based on the file ' s folder type to enhance user experience by providing clearer information about the
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting across different locales
fix modelzootest to work on non - snow day
added ime hiding functionality in AllAppsContainerView and logging events in LauncherAllAppsContainerView to improve user experience by preventing
[ test ] add inmemoryeventstorageengine to eventhandlingconfigurationtest and sagaconfigurationtest
updated path retrieval logic to use ` BsdNativeDispatcher . getmntonname ` instead of ` BsdFileStore . getParent `
add test case for issue # 1599
added a new parameter ` x ` and ` y ` to the ` spawn ` command and implemented error handling for invalid arguments to enhance the command
added MIN _ CONTENT _ DIMEN constant and modified content area height calculation in mmm Folder . java and ppp Folder . java to
move addmethod and codeinstall to graalcompilertest and hotspotcryptostubstitutiontest
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added plugin check class names to failed checks in UpgradeCheckRegistry and reformatted the addColumnsToUpgradeTable method in UpgradeCatalog280 to
refactor Environment class to improve code readability to enhance maintainability and facilitate future development
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with BadApple annotation to address issue SOLR - 74
updated the path construction logic in CodenameOneImplementation . java and removed a warning check in HashtableContent . java to ensure the home path
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
updated import statements and resource initialization in LiquibaseEntityResolver . java and XMLChangeLogSAXParser . java to streamline resource
added security property " jdk . tls . disabledAlgorithms " to ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS algorithms for
updated ` CxxDeps . EMPTY ` to use ` CxxDeps . of ( ) ` instead of ` CxxDeps . EMPTY `
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` , and update related references to
removed unnecessary whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated folder name hint logic to check for empty title before setting text to improve clarity of folder name display when the title is empty
updated UaaResetPasswordServiceTests to include a client identifier in the loadClientByClientId method to ensure the client is loaded with the correct
changed access modifier of methods from public to private in ShadowSQLiteDatabase . java to restrict access to these methods for better encapsulation
updated string concatenation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to include " ( isClosed ? - 1 : - 1 ) "
refactor MimetypeIconUtil class to improve code organization to enhance maintainability and readability of the code
corrected the spelling of " supportsViewFor " to " supportsViewsFor " across multiple view provider classes to improve code readability and
added a new test method ` negateInstanceOf ` to ` UnnecessaryParenthesesTest ` and updated type checks in ` UnwrapParenthes
added support for teleporting instances of ` org . bukkit . location ` in the ` Location ` class to enable the use of reflection
replaced Base64 encoding methods with Base64Utils . encodeToUrlSafeString for modulus and exponent to ensure URL - safe base64 encoding
updated import statements and modified statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
rename the interface from ContainerAnnotation to ContainedBy to clarify the purpose of the interface
added a null check for the result variable in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value
refactor ` setUpRevampedTweet ` method to include ` isMuffled ` parameter for better clarity and functionality to enhance the
added conditional logic to display the verified text based on the theme setting to enhance user experience by allowing customization of the verified text based on the
updated the ` AbucoinsDigest ` class to remove the static instance variable and made the ` timeDiffFromServer ` field final to improve
camel - 14284 : camel - mongodb should use autowired property to avoid reflection configuration .
added sourceIndex parameter to the AttributeMapping constructor and updated related methods to allow dynamic retrieval of the source index to enhance flexibility in attribute mapping
add log for corrupt column statistic when alter partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks for user authentication
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
escape email for contact in geoserver home page
move reflections . cache to modulemanagerimpl so that it can be reuse
modify join modeller to use the number of features instead of a hardcoded value to improve clarity and maintainability of the code
added a check for non - empty input in the AlgebraProcessor class to ensure that the command string does not contain an empty string before processing
[ hotfix ] [ kafka ] check log level before log message in singlenodekafkaresumestrategy
replace references to ACTION _ SET _ PLAYBACK _ SPEED with PlaybackStateCompat . ACTION _ SET _ PLAYBACK _
updated IgnitionConfigurationHandler to handle ' automatic ' separation and added new methods in MotorMountHandler and AxialStage to
tika - 2696 -- allow ascii and unicode name length to be different from their respective chunk length . patch by jbellis ;
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to non - deterministic
refactor lock file creation into a separate method in MavenDependencyResolver to improve code readability and maintainability by encapsulating lock file creation logic
updated preference key from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added multiple sync interval settings to
added a check for the FEDERATION _ USER in AuthenticationManager to return null if the username equals the FEDERATION _ USER
fix executemethodnode . isinstance ( value ) to exclude truffleobject .
replaced usage of ` Collectors . toList ( ) ` with ` toList ( ) ` in ` JakartaClientShutdownWithServerWeb
logbackvalve : do n ' t try to write to log when access do n ' t work
refactor Collection and Map classes to improve code readability and maintainability
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to utilize Lucene ' s version
added handling for missing primary key changes in OracleDatabase and AbstractDb2Database to ensure correct schema and index configurations for missing primary keys
updated exception handling in ` execute ` method and added a test for invalid partition names in ` TestMSCKRepairOnAcid `
[ hotfix ] [ kafka ] retry commit transaction in kafkaproducertest
remove the receipt handle from the receipt of a message in the forward message to dlq activity
added a ` withServices ` method to ` DockerComposeContainer ` and modified the ` runWithCompose ` method to accept a list of services
[ java ] : use copy set for resource . getclasses ( ) . entryset ( ) .
removed HTMLCleaner imports and simplified XML return logic in FeedParser . java to streamline code and improve readability by eliminating unnecessary
removed conditional check for ` AppsCustomizePagedView . DISABLE _ ALL _ APPS ` in ` Launcher . java `
change the type of energy reactive varacsumconsumed , energy reactive varacsumproduced , powerapparentssum
added a new file ` bug4150029 . java ` that implements a file chooser to create temporary directories and ensure the backspace
added ` isSparkConfigUpdated ` property and its getter / setter methods to ` HiveConf ` , ` SparkClient ` , and ` Spark
added getLongPressIndicator method to AppIcon and AppIconMenuItem classes and modified Launchable and Workspace to utilize it to provide a long press
added checks for empty polygon shapes in WKBWriter and updated test cases in WKBWriterTest to ensure correct handling of empty polygon shapes and
refactor UnflavoredBuildTarget creation to use a builder pattern and ensure immutability of the UnflavoredBuildTarget to
added a new file MultiplyByMaxInt . java containing a test method for multiplication with maximum integer limits to demonstrate the use
removed drawer indicator enabling for the root file in OCFileListFragment to streamline the user interface by disabling the drawer indicator when the
changed the package of TestRAMDirectory from ` org . apache . lucene . index . store ` to ` org . apache . l
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify code
replaced string concatenation with message creation for error messages in DMNEvaluatorCompiler . java and added a message constant in Msg . java to
replaced instances of " @ ContainedBy ( AC . class ) " with " @ Repeatable ( AC . class ) " and "
updated message formatting in AbstractController . java to include send duration to improve clarity of file sending duration output
updated the way class names are retrieved and checked for package access in OpenMBeanAttributeInfoSupport . java to improve security by ensuring the correct class
fix quorumresponsehandler . isdatapresent ( ) to return false if there be no response .
adjust freeSize calculation in StoreDirect . java to ensure accurate free size adjustment
fix npe in anykeyboardview . aretouchdisabled ( nativemotionevent )
replaced instances of SslContextFactory with SslContextFactory . Server in HttpServer , RESTServer , and ThriftServer classes to ensure compatibility with the latest SSL
removed the privileged socket implementation from the connection initialization to simplify the code by eliminating unnecessary privileged actions
refactor InputTest class to improve code readability to enhance maintainability and facilitate future development
added functionality to pause blurs on Windows in DepthController and updated related methods in AbsSwipeUpHandler to improve user experience by ensuring blur
refactor NearbyMapFragment to handle null currentLatLng before removing the current location marker to improve robustness by preventing potential NullPointerException
updated the ` removeSecret ` method to use ` clientDetailsService . retrieve ( clientId ) ` instead of directly accessing the client object to improve
updated SQL query formatting in SqlSourceBuilderTest . java and modified setup method in SqlSourceBuilderTest . java to improve test readability and
added awaittermination to the consumer thread pool so it do n ' t hang forever .
added unit tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure that UnknownKeyException is thrown for specific task keys and row
refactor filterConditions initialization to use Optional for null safety to improve code clarity and prevent potential NullPointerExceptions
simplify lightcontrol . controldirection by use cloner .
updated the logic for setting ` _ hideStacks ` and improved stack trace handling in ` StdErrLog . java ` to enhance code cl
replaced direct calls to ` context . publishEvent ( e ) ` with ` getContext ( ) . publishEvent ( e ) ` and added
added a semantic check for the CREATE CQ statement in ASTVisitor . java to ensure compatibility with the latest syntax version of the CREATE CQ
[ hotfix ] [ table - common ] fix typo in flinkiobtdbsink
added counter for custom simplification considers nodes in CanonicalizerPhase . java to improve clarity and tracking of simplified node scenarios
updated the context parameter in the setImageDrawable method call to ensure the correct context is used for file type icons
updated ` readIdentifierWithSchema ` to use ` schema . getName ( ) ` instead of ` readIdentifierWithSchema ( ) ` and modified
fix bigqueryTableRowIterator to handle timestamp field in read ( # 11977 )
added a method ` findViewWithTag ` to ` ShadowView ` and ` ShadowViewGroup ` classes and implemented it in ` ViewTest `
replaced explicit type usage with diamond operator in multiple Java files to improve code readability and reduce unchecked casting warnings
removed unused import of PColumnFamily and updated imports in IndexTool and MetaDataClient to improve code clarity and maintainability
added constants for JSON _ VALUE and JSON _ CREATOR in DocAnnotationConstants . java and updated enum value retrieval in SpringBootDocBuildTemplate
svm : do n ' t try to load resource file from classpath if it ' s a jar
updated CUDA _ constants in cuda . java for consistency and clarity to improve code readability and maintainability by removing unnecessary comments
refactored the ResourceLoader class to iterate over multiple layout directories for resource loading to improve resource loading efficiency by excluding specific layout directories
fix blocktorch . getattachedface ( ) to return blockface . down instead of throw an exception .
[ hotfix ] [ table - planner - blink ] add varbinary case to reltostageconverter
added import statement for DateHelper in NoteAdapter . java to utilize DateHelper for date handling functionality
updated backup error messages and added validation for backup saving to enhance user experience by providing clearer feedback on backup operations and improve error handling
mow - 285 fix position of ` ` absolute ' ' element in simple panel
replaced the deletion of a temporary file with a direct pipe file creation in ShadowParcelFileDescriptor . java to simplify the file creation process
use addfirst ( ) and removefirst ( ) instead of poll ( ) in securitycontextholderstrategy .
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to accurately reflect the
canonicalization of ` ` x = = y ' ' to ` ` x = = y ' ' for x = = y .
added a new constant STRING _ ARRAY to the TypeFactory class to facilitate the creation of String array types in the application
refactor keyboard hiding logic to use a dedicated logger method to improve code readability and maintainability by centralizing keyboard hiding logic
force blockstatecontainer ' s bit density to fix network issues , resize below if needed .
updated assertion messages in ` TimelineMetricCacheSizingTest . java ` and ` TimelineMetricCacheTest . java ` for clarity
add max _ texture _ size to par1playerusagesnooper , only calculate once .
[ java ] do n ' t try to stop log recording if we do n ' t need it .
added a condition to set startPosn to 0 if isInTransform is true to ensure startPosn is initialized correctly when in transform mode
refactor star tree handling by replacing the ` isStarTreeDisabled ( ) ` method with a new ` isSkipStarTree ( ) `
added a lockNearbyView flag and updated refresh logic in NearbyActivity . java to control the visibility of the nearby places view
add maptransformer . of ( map < k , v > ) and maptransformer . inverse ( map < k , v > ) method
refactor EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added support for loading widget information from the launcher in the LauncherPreviewRenderer and PreviewSurfaceRenderer classes to enhance widget management capabilities by allowing dynamic
updated StageSelector and StageAction classes to use EventObject instead of ChangeListener to improve event handling consistency across components
added methods to get and set calling process ID and UID in ShadowBinder and implemented reset functionality in Robolectric to enhance testing capabilities and
replaced the ` @ AutoValue ` annotation with a ` @ Nullable ` annotation and refactored the ` ExpectationFailure ` class to
bitcoinserializer : do n ' t warn about no support for deserializing message
pdfbox - 4892 : avoid div by zero in imagereplacedelement . resize ( )
added support for newline characters in Markdown rendering and updated related tests to ensure proper handling of newline characters in Markdown output
updated the password setting logic in SharePasswordDialogFragment to use a dedicated method for setting password to improve code readability and maintainability by redu
replaced private static final methods with a static class mapping methods for MAP _ ADDRESS and UNMAP _ BUFFER to improve code readability and
changed method visibility from public to package - private for several methods in AbstractAssert _ describedAs _ printed _ to _ console _ Test . java
added new options for slider keytab and directory settings in LlapOptionsProcessor . java to enhance configuration options for the Slider AM keytab
modified the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and added animation control in the ` Extraction
added functionality to manage and assert workspace loading state in LauncherModel . java to ensure shortcuts are only added when the workspace has been loaded
replaced boolean isFinished with a final Set for data and nodePaths in multiple operator classes to improve immutability and ensure immutability
updated method signatures in ` IssueInterface ` and refactored ` ValidationReport ` to ` JsonValidationReport ` to improve clarity and functionality
added a method to safely retrieve the cipher provider name in RSAClientKeyExchange . java to improve error handling and provide clearer output for debugging
rename ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple files to clarify the purpose of the configuration related to the Mes
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity and improve performance
modified the formatting logic in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static to public static in DefaultMapScaleBar . java to allow access to
removed the @ Ignore annotation from CovariantOverrideTest . java to temporarily disable the test due to lack of functionality
refactor pattern . curly ( ) to return Qtype . GREEDY instead of new Curly ( prev , cmin , Q
camel - 13663 : camel - jbang - reloadstrategy should use type converter to load the resource and not the jaxbcontext
added space minimum and maximum settings for the X - axis in ScatterChart to improve the visual representation of the chart ' s data
[ hotfix ] fix checkstyle violation in expressionstringbuilder
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` State
added a check for the presence of the UTF8 key in properties to ensure that a runtime exception is thrown when the UTF8 key is missing
updated TestReproduceMessage and LuceneTestCase to use SeedDecorators and modified the @ RunWith annotation in LuceneTestCase
added a UI event for long - pressing an AllApps item in StatsLogManager and integrated it into ItemLongClickListener to track user interactions
added null check for log in StoreWAL . java and created a new test class Issue112Test . java to ensure proper handling of null
added a condition to check if ` showSectorLandInfo ` is enabled based on ` Vars . showSectorLandInfo ` to ensure
updated generic type usage from ` CompositeType ` to ` CompositeType < ? > ` across multiple files to improve type safety and reduce unchecked cast
refactor Enum class to improve readability to enhance maintainability and facilitate future development
[ nearby ] fix npe in nearbyselectionconfig . buildnearbyrandom ( )
remove temporarycache . remove ( ) method and use google common cache instead .
updated visibility settings for createSQLViewContainer and createWMSLayerImportContainer in NewLayerPage . java to improve user experience by disabling
initialize ` Availability _ availability ` to ` Availability . UNAVAILABLE ` in ` ContextHandler . java ` to ensure proper initialization of ` Availability _
updated ` FetchInvDataMsgHandler ` to include sync finish condition and modified ` processPBFTCommitMessage ` method to accept ` BlockCaps
chore ( regen ) : update gapic - generator - java version to 2.1 . 0 ( # 10 )
replaced the ` _ freeSpaceReclaimDisabled ` boolean with a ` _ freeSpaceReclaimQ ` integer and updated related methods to
changed access modifiers of KDC options from public to private static in KDCOptions . java and added a new class KdcDefaultOptions .
updated the initialization and assignment of the writer variable in Json . java to ensure proper handling of the writer instance and avoid potential ClassCastException
updated formatting of code in ProfilePager . java for consistency to improve code readability and maintainability
renamed the method ` paintBackground ` to ` paintComponentBackground ` in the Slider class to improve clarity by accurately reflecting
added a method to retrieve the value from a class constant and log warnings if the value is not properly formatted to improve error handling and provide clear
added error logging for service initialization failures in KafkaService . java to improve debugging and diagnostics when service initialization fails
updated the ` RESOURCES _ TO _ ALWAYS _ ACQUIRE ` set to include both " usr / share / zoneinfo / tzdata
improve error message if the output channel name be configure a default - output .
added functionality to retrieve and index keywords from meta tags in HTMLDocument . java and created a test for index keywords in TestDemo . java to
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
modified the initialization of ` _ addresses ` to include an empty list if ` addresses ` is null to ensure that ` _ addresses ` is always
updated the class reference in CorrespondenceSubclassToFactoryCallTest to use the class reference instead of a new instance to improve clarity
refactor Builder class to improve code readability to enhance maintainability and facilitate future development
update isbntobibtexfetcher to use http : / / www . ebook . de / tools / isbn2bibtex
[ gr - 33939 ] increase keep - alive timeout to 10 second .
added null check for text before firing data change event and adjusted cursor position accordingly to prevent potential NullPointerException when text is null
move some of the code to rnnutils , so that it can be reuse .
added trimming of whitespace from the input lines in SuffixURLFilter . java to improve code readability by eliminating unnecessary whitespace
added a check to return early if the player is in Godmode to optimize performance by avoiding unnecessary processing when in god mode
fix the problem with the checkbox creation dialog not register the popup correctly .
modified LinkedHashMapCache and BoundedLinkedHashMap constructors to remove unnecessary parameters to simplify code and improve readability by eliminating unnecessary parameters
replaced _ channel . close ( ) with close ( ) in ChannelEndPoint . java to ensure proper resource management and avoid potential memory leaks
added validation for keyIndex in FixAcidKeyIndex and removed hard - coded builder names in OrcRecordUpdater to ensure proper handling of
added Locale import and modified exception handling in DirectUpdateHandler2 . java to improve clarity and maintainability of error message formatting
add writenode . setstorecheckguard to allow subclass to set store guard
[ fix ] jsr : fix edge detection for exception dispatch .
add method getclassificationdisagreement ( buginstance ) to calculate disagreement of a bug
replaced ` BuildTarget . copyOf ( unstrippedTarget ) ` with ` buildTarget ` and added ` @ JsonIgnore ( ) `
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future development
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
renamed ` knownApis ` to ` knownSdks ` and introduced a method to retrieve known SDKs to improve clarity and functionality
use confidenceprogressindicator instead of progressindicator for create offer
updated user agent header checks from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 classes to ensure compatibility with
added support for force iteration of blockindex in blueprintbuilder .
added new view type constants and modified onCreateViewHolder method to handle different message view types to improve code readability and maintainability by consolid
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
simplify an exact match expression , a suggest by valerybokov
removed the canvas parameter from the insert method and related calls in TexturePacker . java to simplify the code by eliminating unnecessary canvas parameter
replaced the ` getVisitors ( ) ` method with a default method ` apply ( Refactor < S , T > refactor ) ` to
added methods to retrieve child elements by name and recursive names in Xml . java to enhance functionality by allowing retrieval of child elements by their names
set the " Content - Charset " header to " UTF - 8 " in HttpSolrServer . java and its test in BasicHttpSolrServer
updated SystemUiController and TaskThumbnailView to use SystemUiControllerFlags instead of hardcoded UI _ STATE _ ALLAPPS to improve code
removed the private ClientConfigurationService variable from IntrospectingTokenService . java to clean up unused code and improve maintainability
updated exception message formatting in HiveRecordSet . java to improve clarity of error messages for better debugging
removed the ownerId field from NodeEntry . java to simplify the code by eliminating unnecessary fields
updated configuration key from BackupSnapshotAferTakingSnapshot to BackupSnapshotAfterTakingSnapshot to clarify the purpose of the configuration property
updated the merge method in TextFragment to update textEndPos and score based on the difference between TextFragment ' s scores to ensure that the
removed the private Digester variable from Md4PasswordEncoder . java to streamline the code by eliminating unused dependencies
added validation to ensure maximumUnimprovedStepCount is non - negative to prevent runtime errors due to invalid property values
added a check to return early if there are currently opened editors to optimize performance by avoiding unnecessary processing when no editors are open
added new methods ` verify ( ) ` and ` verify ( VerificationMode mode ) ` to ` BDDMockito ` and corresponding test cases
replace Thread . currentThread ( ) . getContextClassLoader ( ) with PathScanner . class . getClassLoader ( ) in PathScanner . java to improve class loading
refactor ` sayHi2 ` method to return a ` CompletableFuture < String > ` and add asynchronous operation annotation to ` CodeFirstPojo
add log to abstractsplitbraintest for splitrainprotectiontest
added null checks before setting the logout filter in DefaultLoginPageConfigurer and ServerHttpSecurity to enhance security by preventing null pointer exceptions during
[ giac ] do n ' t include degree in the output of giac . tostring ( )
added logging functionality to DockerComposeContainer and created a test class for it to improve logging management and ensure proper functionality through unit testing
updated the generic type parameter in the testMapping method from Class < ? > to Class < ? > < ? > to improve type safety and
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to return a ` ThrowingSupplier < T , E > ` from a ` Supplier < T >
replace ` break ; ` with ` return ( true ) ` in ` ConsoleActivity . java ` to ensure proper control flow in the method
camel - 14284 : camel - platform - http : / text / post do n ' t handle text body correctly
added methods to handle platform - specific path separators in MorePaths . java and modified argument handling in CopyStep . java and AarWithLib
added a null check for authorizationContext parameters before iterating over it to avoid potential NullPointerExceptions during execution
replaced ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ( ) ` in ` NativeLibraries . java ` to improve error handling
updated SDK version from " 4611349 " to " 4514284 " and added new test cases for TextToSpeech functionality to ensure
queuetransactionlog : fix queuetransactionlog . getitemid ( ) and queuetransactionlog . getname ( )
added ` enableSqlWithoutProfile ` property and its getter / setter in ` JdbcEnvironmentProperties ` , and modified ` JdbcEnvironmentRepository ` to
added a try - finally block around the write method to ensure the data is cleared after writing to improve resource management and prevent potential memory leaks
use eventgenerator . fromfunction ( ) in create _ registries ( ) to avoid compiler warning .
updated the date format from ' date ' to ' calendar ' in DateUtils . java and removed an assertion in FontParsersTest . java to
updated the ` loadValue ` method to call ` super . getThreadInfo ( ) ` and modified the ` getThreadInfo ` method to include a
added a new protected variable ` prevTlogOnPrecommit ` and modified a sleep duration in ` LeaderTragicEventTest ` to
updated the job directory from P2 - V6 to 1.17 in BukkitPlatform . java to reflect the latest version of the
refactor file creation logic in SegmentGeneratorConfig . java to ensure outputDirectory exists and handle null paths to improve error handling and prevent potential NullPointerExceptions
added a new method ` calculateNormalVector ` to ` ObjUtils ` and modified the usage of ` vertexToCoordinate ` in ` Triang
updated the ` find ` method in ` JdbcAuditService ` to include ` IdentityZoneHolder ` as a parameter and modified the query to include
refactor SpanCollector class to improve code readability to enhance maintainability and facilitate future development
added a null check for the getCurrSession ( ) method in AuthorizationFilter . java to ensure that the method only executes when the session is
refactor TransactionIsolationLevel class for improved readability to enhance maintainability and facilitate easier debugging
updated method names from printLVgroups to printLogicalVolumegroups in OshiController . java to improve clarity and
added thread name setting for the current thread in TestSession . java to improve clarity of thread naming for better debugging
refactor CookieManager to improve code readability to enhance maintainability and facilitate future development
simplified the return statement in LauncherExtension . java by returning an empty ArrayList to improve code readability and maintainability
added OverviewToAllAppsTouchController to the list to enhance the functionality of the OverviewToAllAppsTouchController
replaced the ` scaleHotseatWithWorkspace ` method with ` getHotseatScaleAndTranslation ` in ` LauncherState `
added a condition to check if an exception class name starts with " org . mockito . internal . junit . JUnitRule " to
refactor byte array handling in MappedResizeableBuffer . java to improve clarity and consistency to enhance code readability and maintainability by using
refactor balance listener management in DepositListItem . java to improve code readability and maintainability by reducing redundancy
updated color conversion logic in RealisticRenderer to handle edge modes to ensure correct color is applied for non - sticky decals
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and updated log initialization in various test classes to improve robustness by preventing
remove unnecessary patternutil . checkpattern ( ) call from gl200 protocol
refactor playback time handling in FullDetailsActivity to use a variable for last playback time to improve code readability and maintainability by reducing
updated SpanishXMLTreeReader to improve elliptic node handling and added MWE _ PHRASAL constant to enhance clarity and
added a check to clear the language ' iso ' when the first value is an empty string in InstallItem . java to ensure that the item
updated the ` ReactiveLoadBalancerClientFilter ` to override the scheme based on the security status of the service instance to ensure that the scheme is overridden
[ hotfix ] fix checkstyle violation in defaultmessagestore
make fullfilepathfromclassname non - final to allow reuse
replace anonymous inner class with lambda expression in ShadowBackupManagerTest . java to improve code readability and reduce boilerplate
corrected the spelling of " isNonUSLangSupported " to " isNonENLangSupported " across multiple files to ensure consistency and
removed null check for redeemData in LocalTransactionSigner . java to simplify the condition for better readability and maintainability
add the ability to override the texture for the forge client . close # 3553
added a return statement to the TxCacheDB class to ensure proper execution flow and prevent potential null pointer exceptions
updated import statements from ` com . sun . xml . internal . ws . org . objectweb . asm ` to ` jdk . internal
refactor FastDictionary class for improved efficiency to enhance performance and maintainability of the code
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5652 :
updated FlightEvent parameters in FlightEventsTest . java to reflect the new values for GROUND _ HIT and SIMULATION _ END
chore ( bazel ) : update bazel . project to vendored grpc
replaced ' target ' with ' newElement ' in SaajStaxWriter . java to ensure the correct element is being added to the
update instructor profile picture link to include session name and course id
added shortRules list and modified defaultRules initialization in DefaultPasswordValidator to optimize password validation by limiting rules to a maximum of 20 characters
simonstewart : add a command to the selenium server to be able to retrieve the last remote control log
removed the JUnit @ Test annotation from ProxyClassSerializationTest . java to simplify the test class and improve readability
updated the ` args [ 8 ] ` string to include ` format = bgr24 ` for scaling and padding in ` DLNAM
remove speculativeguardmovementphase from speculativeruntimecompilationsupport and speculatortest
added checks to prevent overriding of the authentication manager bean definition in the authentication manager configuration to ensure that multiple authentication managers do not throw an exception when
updated the handling of ` forwarded . _ host ` and ` forwarded . _ server ` in ` ForwardedRequestCustomizer . java ` to
set the StringBuilder length to zero in ConsoleReader . java to ensure proper initialization of the StringBuilder to avoid potential null pointer exceptions
changed access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists
updated OpenIDE - Module - Specification - Version and associated properties in multiple files to ensure compatibility with the latest OpenIDE features and improvements
hbase - 15836 allow to configure the size of ssl handshake for hbase server netty tl
refactor multiple classes including CookieStore , HttpURLPermission , Inet4Address , Inet6Address , InetAddress , ProtocolFamily , SocketOption ,
replaced TestCase with JUnit 4 annotations and updated imports in FixedLengthTokenizerTests . java to improve test coverage and ensure proper exception handling
updated the protocol binding handling in OpenSamlAuthenticationRequestFactory and added unit tests for its functionality to improve flexibility and ensure protocol binding is validated
refactor DepthController . java to use AttachedSurfaceControl for applying SurfaceControl transactions to improve code readability and maintainability by utilizing
updated the return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to ensure
hbase - 25827 prepreparebulkload and precleanupbulkload should be create by default ( aihua xu )
updated the range calculation for ` unSeqMergeList ` in ` TsFileManagement . java ` and modified measurement schemas in ` MergeTaskTest
camel - 14284 : fixed genericfileconverter to convert inputstream to java . io . file
added a login parameter to the ` build ` method in ` DefaultShardManagerBuilder ` and modified the login logic in ` ShardManager ` to
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
rename the table in AbstractRegisteredService from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify
modified the response completion handling in HttpSender . java to check if the completion is marked before terminating the response to ensure that the response is only
updated condition to check if the user is student before verifying if the giver is the student ' s giver to ensure that giver
added security checks and updated profile handling logic in BMPImageReader . java to enhance user experience by enabling or disabling linked
updated Location and PlotBlock parameters in setSimpleCuboid calls in ClassicPlotManager . java to correct the positioning of the plot world
added a wait message for PMD status and refactored the actionPerformed method to run in a separate thread to improve UI responsiveness and
refactor grid size handling in StdGridFragment . java to use a dedicated method for setting grid sizes to improve code readability and maintainability
updated return statements in ContributionsListFragment . java to replace false with true to ensure correct behavior in the ContributionsListFragment
added a test for skipping a range in the DistinctPrefixFilterIT and modified the handling of the limit in BaseResultIterators to ensure
added a new test method ` testAcrobatCheckBoxGroupProperties ` to verify the properties of a checkbox in acrobat acro form
added a method to retrieve the last modified timestamp of a file to provide functionality for retrieving the last modified timestamp of a file
added a condition to check for both " metaTable " and " defaultFileFormat " properties in HiveIcebergStorageHandler . java to
use a combobox to select all fiat currency instead of just the default one
changed catch blocks from IOException to Throwable in WriteFlusher . java to improve error handling by catching all throwable types
added a new boolean flag ` mStartedEnterAnimation ` and modified animation logic in ` IconRecentsView . java ` to improve animation handling
added a new field ` activeKeyId ` to the ` UaaConfiguration ` class to support configuration of an active key ID in the application
updated action labels and descriptions in SendMailActions . java for clarity and consistency to improve code readability and maintainability by using more d
changed the ` isActive ` variable from non - volatile to volatile to ensure thread safety when accessing the ` isActive ` variable
replace ` isDesc ( ) ` with ` isAsc ( ) ` in ` OrderByExpressionContext ` and update ` SelectionPartiallyOrderedBy
make sure tostring ( ) be call before append ( ) , a suggest by valerybokov
added OWNCLOUD _ APP _ NAME constant and modified condition in DisplayUtils . java to ensure compatibility with the application ' s context when
hbase - 25827 master should set hbase . rootdir . perms in hbase - site . xml if hbase . security
replace ` httpServletRequest . getLocale ( ) ` with ` httpServletResponse . getLocale ( ) ` in ` JakartaServletWebExchange .
refactor Instant class to improve clarity to enhance maintainability and readability of the code
updated state format from int to String across multiple classes to ensure consistent state formatting across different environments
removed the type variable from the logging statement in CentralAuthenticationServiceImpl . java and adjusted the conditional check in AbstractTicket . java to simplify
added IllegalArgumentException to the exception check in PDICCBased . java to improve error handling by including additional exceptions
corrected spacing in a conditional statement in AbstractFileResourceSet . java to improve code readability and maintain consistency
[ mng - 5390 ] fix plugin parameter expression to align to the base directory of the project .
[ beam - 13434 ] fix protobuf coders not be register in coderregistry .
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer . java and added a new test for query with signed numeric
fix launch lug and rassero rail guide not work correctly
removed the getNonceFactory method that returns null in BitmexStreamingExchange . java to eliminate unnecessary nonce factory implementation
mailbinding : use placeholder instead of string concatenation for log message
[ java ] use default timer interval and mtu length for test .
changed the initialization of the ` initializeLoadedClasses ` variable from ` true ` to ` false ` in ` ScanSpec . java ` to disable
added a call to grab focus on the search field in FullTextSearchPanel . java to ensure the search field remains focused when needed
refactor NioParams initialization in TlsConnectionLogging . java to improve code readability and maintainability
simplified the assertion for retrieving a random double value in StatementTest . java to improve clarity and maintainability of the test code
updated the assertion message format in TestSolrConfigHandler . java to include the server base URL to improve clarity of error messages for better debugging
replaced the use of ` HttpMethod ` with mocks for ` ServerHttpRequest ` and ` ServerWebExchange ` in ` CsrfWebFilter
updated the density filtering logic in FilterResourcesStep . java to use a variable for the original density to improve clarity and maintainability of the
added methods to handle UIID updates for ButtonGroup components to improve clarity and maintainability of UIID generation logic
removed the densityDpi check from the displayInfo condition in RecentsAnimationDeviceState . java to simplify the condition for better readability
added two new test classes , TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java , to
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with it to mark the test as awaits
fixed - redissondexecutorservice . schedule ( ) method do n ' t throw npe if nextstartdate be null . #
simplified the condition for updating credentials in FileDownloader and FileUploader to improve code readability and maintainability
added null check and closing logic for StoreFileScanner to ensure proper resource management and avoid potential NullPointerExceptions
[ java ] add default value to netmetrics to avoid nullpointerexception .
added a nonce parameter and associated claims retrieval in TokenMvcMockTests to ensure the correct nonce is used for token claims verification
updated multiple editor and factory classes to improve code consistency to enhance maintainability and readability of the codebase
added width , height , and layout settings for formLayeredPane in mmm Form . java and ppp Form . java to ensure the
added a maxY method to the BrowserContentPane class to calculate the maximum vertical height based on the owner ' s owner ' s height
modified the ` openDatabase ` method to return a ` boolean ` indicating the connection status to ensure that the database is only opened if the user
replaced the static DOCKER _ COMMAND reference with a reference to Platform . DOCKER _ COMMAND in DockerTestUtils . java to
added null check for input stream in TestIsartorValidationFromClasspath . java to avoid potential NullPointerException when input stream is null
added a color parameter to the drawLeaveBehind method and updated its usage in TaskbarView , CellLayout , and PreviewBackground to allow
show an error dialog when the canary plugin do n ' t work with android studio
api : fix npe in listidentityproxies when table name be null .
removed modulePersistEnable and modulePersistDisable lists from StartArgs . java to streamline command - line options for enabling and disabling modules
updated the argument length check from ` = = 1 ` to ` > = 1 ` in the GeminiMarketDataService class to
replaced HashSet with LinkedHashSet for the " questions " key in the request flow scope to maintain insertion order
add unit test to demonstrate issue
remove all jsp file in the authcheckfilter , since they do n ' t seem to be need
refactor scheduler logic to manage scheduled runnables more efficiently to improve code readability and maintainability by consolidating runnable execution logic
changed the parameter type of ` runCommand ` from ` String [ ] ` to ` String . . args ` across multiple classes to simplify method signature
refactor XML parsing logic to handle end - of - stream cases to improve robustness by handling potential end - of - stream exceptions
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to address text rendering issues
added pivot properties for mArrow in DeepShortcutsContainer to ensure proper positioning of the arrow based on icon positioning
remove exception . printstacktrace ( ) from try - catch block in jabrefexecutorservice and update log level in fileupdatemonitor
updated the ` AbsSwipeUpHandler ` to include a ` refreshView ` parameter for thumbnail updates to improve the handling of task updates based
pdfbox - 4892 : improve usage message , a suggest by valerybokov
updated InternetAddress instantiation to include a boolean parameter and improved hostname validation logic to enhance flexibility in address formatting and enhance error handling for invalid
removed redundant references to ` this ` in multiple activities to improve code readability and maintainability
updated the handling of ` maxDocId ` and ` currentDocId ` in ` SizeBasedDocIdSet ` and ` FilterBlockDoc
updated the ` promptToOpenFile ` methods to accept an optional file name parameter to enhance flexibility by allowing users to select an existing file
updated page sleep delay and refactored page count updates in AppsCustomizePagedView . java to improve responsiveness and maintain
refactor FlightConfiguration to use InstanceMap for processing active instances and update component bounding box calculations to improve efficiency and maintainability of flight configuration
update message history test to use direct link instead of seda link
updated DateTimeFormatter to use Locale . ROOT for default date format to ensure consistent date formatting across different locales
add permission filter to dspaceobjectconverter to filter out hidden metadata
added a test for missing required dimension and metric names in StarTreeConfig to ensure that the builder correctly handles null values for dimension and metric
camel - 14284 : camel - spring - dsl - add support for dynamic and static recipient list
refactor InlineLayoutBox and HoverListener to improve layout handling and repaint logic to enhance code clarity and ensure proper repaint behavior based on
replaced DetectAuthenticationMethodOperation with OperationsServiceConnection and OperationsServiceBinder for better service management to enhance the authentication process by integrating operations service
