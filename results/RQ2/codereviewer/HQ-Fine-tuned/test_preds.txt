replaced the instantiation of SocketAppender with setting remote host and port properties to improve flexibility in socket appender configuration
refactor BasicAuthPlugin to use a dedicated method for setting authentication headers to improve code readability and maintainability by reducing duplication
removed the call to RecordDescriptor . msgLengthOffset ( recordIndex ) in ManyToOneRingBuffer . java to simplify the code by directly using
server : fix npe in capacitiesmanagermanagerimpl when vm detail cpu or ram be null .
added a flags field and its getter method in ShadowPaint . java , and updated related tests in PaintTest . java to support anti - alias
updated the title of the MassSetFieldsDialog to use localized strings to improve localization support for field names and content
replace assertFalse with a conditional statement for reporting bugs in DetectorsTest . java to improve error handling for cases where Eclipse was not used
added a check to ensure the nonce is not empty before processing in Realm . java and updated authentication handling in NettyAsyncHttpProvider .
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` constructor to utilize it to improve input handling by providing a
reformatted conditional statements in OrcEncodedDataReader . java for improved readability to enhance code clarity and maintainability
added a condition to check if a home connect thing is enabled before filtering the handler to ensure that only active home connect thing handlers are processed
added null check for ' bs ' before calling removeAllPolicies and addPolicies methods to avoid potential NullPointerExceptions when ' bs ' is not initialized
updated assertions in DefaultTypeAdaptersTest and ObjectTest to use matches method instead of isEqualTo for Java 9 or later to improve clarity and
added JSON serialization and logging for DAG information in TezTask . java to enhance debugging capabilities by providing detailed DAG information during execution
updated time calculation in ComputedSummary . java and added getHeapTime method in HprofHeap . java to improve accuracy of heap time retrieval
replaced ` RxJava2Tasks . getUploadCount ` with ` CommonsApplication . getInstance ( ) . getMWApi ( ) . getUploadCount
removed unnecessary checks for MVStore and modified conditional logic in MVTable . java to streamline lock handling logic and improve code clarity
[ issue # 3640 ] fix commitlog size calculation ( # 3641 )
added a check to ensure the folder info is marked as open and log a message if it is not to improve folder management by preventing folder
added a test method to verify sorting of PGProperty names in ascending order to ensure that PGProperty names are correctly sorted in the specified order
removed the constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN from Common . java to streamline the
changed the parameter type of ` supportsDrop ` and ` getUninstallTarget ` methods from ` Object ` to ` ItemInfo ` to improve type
updated assertion in RequestBuilderTest to use ` isIn ` instead of ` hasMessage ` for better clarity to improve readability and maintainability of
replaced instances of " RetainedFragment " with " NearbyMapFragment " and " NearbyListFragment " in Near
renamed the parameter ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor to improve clarity by using a
[ te ] send zero anomaly email when there be no result
[ hotfix ] [ kafka ] fix open method in flinkkafkaproducermanagementschemawrapper
removed unused methods from DataManager for retrieving users and geofences to streamline the code by eliminating unnecessary dependencies
added a constructor to the BlockingResponseListener that accepts a maximum length to improve flexibility in handling larger requests
[ java ] refactored the memberbroadcastsreceived method to accept a byte array instead of a single message to improve code readability and
[ iotdb - 5370 ] fix the npe in sendsnapshotfragment ( # 5371 )
removed trailing slash from assertion statements in LoginSAMLAuthenticationFailureHandlerTest . java to ensure proper URL formatting for test cases
[ hotfix ] [ test ] fix checkstyle violation in configmetadataprovidertest
updated imports and method parameter names in ListFragment and SnoozeActivity to improve clarity and consistency to enhance code readability and maintain
added a new AcceptAllFilter class and modified directory stream creation logic in Files . java and WindowsDirectoryStream . java to improve directory stream handling
refactor JdbcTestDataSet for improved clarity to enhance maintainability and readability of the code
added ClassNotFoundException to the lookupType method signatures and improved error handling in HotSpotJVMCIRuntime and CompilerToVMHelper to enhance
refactor Docker image name validation to use a new utility class to improve code readability and maintainability by centralizing validation logic
updated dialog messages in LoginActivity to provide clearer guidance on login failures to improve user experience by providing clearer feedback on login failures
added autofocusing functionality to multiple form classes to enhance user experience by preventing unintended focus changes
added unit tests for SAML properties in SamlIDPRefreshMockMvcTests . java to ensure proper handling of SAML properties in identity zones
added checks to ensure the list is not empty before adding it to the stack and added a test for Mng 7644 in ComparableVersionTest
updated mode settings and calculated dimensions in Sheet . java and added padding and margin properties in UIManager . java to improve layout responsiveness and
updated package structure and import statements in ParallelUniverse . java and ParallelUniverseTest . java to organize classes under the internal package and
refactor methodHandle assignment and simplify constructor invocation in LocalCacheFactory and NodeFactory classes to improve code readability and maintainability by reducing
changed the fill style pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve
added functionality to display edges and self loops in the ProcessingPreview class to enhance user interface by providing visual representation of graph edges and self loops
updated references from ` ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 ` to ` ALLOW _ TVM _ SOLID
corrected the method name from ` addManaged ` to ` manage ` in ` DropwizardAppRule . java ` to ensure consistency in method
added a translation setting to the drag handle indicator in AllAppsTransitionController to improve the visual appearance of the drag handle
removed unnecessary log statements from CollectionViewer , CommunityViewer , and ItemViewer classes to streamline logging for better readability and maintainability
updated the description of the HiveConf configuration to clarify that filters may be pushed down in the operator tree and removed from the original filter
added a platform - specific assumption to the ScanningAppProviderRuntimeUpdatesTest . java file to address build server issues related to finding itself on
added Maven bundles for " jetty - alpn - java - client " and " jetty - alpn - client " in TestJ
fix activiti optimisticlockingException when update process instance lock time
refactor Transaction class to improve code readability to enhance maintainability and facilitate future updates
replaced CustomFieldBehavior annotation with ExcludeFromRuleKey annotation in GenruleBuildable . java to clarify that Genrule execution is
added a method ` whichExec ` to ` AsyncExecute ` and modified the ` FirefoxCustomProfileLauncher ` constructor to utilize it to improve
pdfbox - 4892 : avoid npe , a suggest by valerybokov
[ hotfix ] [ runtime ] remove unnecessary suppression of rawtypes in hadoopoutputcollector
phoenix - 5339 add support for view with derived column and index in metadata endpoint
[ # 7868 ] instructor : add account : update google id for student ( # 7869 )
replaced the import of TestCellReference from org . apache . poi . ss . util to org . apache . poi . ss . util
fixed lenspiston not be able to reach the piston ' s hardness
added a new Java file ` LongPointerPressTest3049 . java ` that implements a UI component with network error handling to demon
truffle : remove unnecessary check for inlining in partialevaluator .
refactor null checks in BaseBuilder and XMLConfigBuilder to use ternary operator to improve code readability and maintainability
simplified the indentation condition in ListBlockParser and added a new test for deeply indenting lists to improve code readability and ensure
added a new abstract class ` AbstractOptionalAssert ` and refactored the ` OptionalAssert ` class to use it to improve code organization and
added JUnit @ Ignore annotation to WebfluxNotIncludedTests . java to temporarily disable tests related to issue 1070
[ wasm ] fix testcaselogger . savemessage to use string . nativestring .
updated formatting in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the format is video before processing web subs to ensure web subs are only processed for video formats
added import for Security and set the " jdk . tls . disabledAlgorithms " property in ComHostnameVerifier and JavaxHostnameVerifier to
server : do n ' t allow local storage pool to be create in the local storage scope
updated logging statements in Driver . java and QueryResultsCache . java to improve clarity and formatting to enhance readability and maintainability of log
added an option to skip model updates after managing dependencies in the ` AddManagedDependency ` and ` AddManagedDependencyVisitor ` classes to improve dependency
added a new test method ` sendWithRequestCode ` to ` ShadowActivityTest ` and implemented ` send ` method in ` ShadowActivity `
updated RocketFigure3d . java to enable and disable FBO and improved rendering hints handling to enhance rendering capabilities and ensure consistent
added synchronized keyword to the controllerListeners list in HydrawiseAccountHandler and added dispose method in HydrawiseControllerHandler to ensure thread safety
added a static method ` beforeClass ` in ` TestCoreAdminApis . java ` to skip tests that do not work with Java 9
updated year retrieval logic to use ` ChronoField . YEAR _ OF _ ERA ` instead of ` Math . abs ` for BC dates to
do n ' t disconnect jabber connection if it ' s already disconnect .
updated the variable name from " cur . ws _ commit _ id " to " cur _ ws _ commit _ id " in the TxnHandler
replaced ByteChunk with ByteBuffer for buffer management in BufferedInputFilter . java to improve performance and memory efficiency when handling buffer overflow exceptions
added a method ` toSync ` to ` AsyncUtils ` for converting a ` CompletableFuture < T > ` to a ` CompletableFuture < T >
added ActionGraphBuilder to multiple CompilerFactory classes and updated related methods to utilize it to enhance the functionality of compiler factories by integrating Action
added a new test method ` testUploadingWithHiddenFileInput ` to ` UploadTest . java ` to verify the behavior of uploading files
removed the import statement for ` java . util . Date ` and refactored the ` createTables ( ) ` method call to streamline
added a check to return the local Maven directory if the file does not exist to ensure that the method handles cases where the file does not exist
do n ' t hide algebra label if it start with hidden _ prefix
fix ( core ) : fix npe in ctelementimpl # getmetadata ( string , int ) ( # 4649 )
replaced ` setFlags ( ) ` with ` addFlag ( ) ` in ` DefaultTrackOutput . java ` to ensure the buffer flag
added a condition to check if the cached object is sorted by ID before reordering to ensure correct ordering behavior based on the cached state of the
updated error message to clarify missing method call for verify ( mock ) to improve clarity of error reporting for better debugging
added a null check for backupFolder before logging the expiration date to avoid potential NullPointerException when backupFolder is null
added a new file ` ArrayNewInstanceOfVoid . java ` that tests the behavior of ` Array . newInstance ( void . class , 2
added ` @ AddToRuleKey ` annotation to the ` toolType ` field in ` ClangCompiler ` and ` GccCompiler `
replaced hardcoded timestamp and lastStart checks with a constant PINCODE _ TIMEOUT to improve code readability and maintainability by using a
added isSampled ( ) method to PrometheusMeterRegistryTest and PrometheusExemplarsSample classes to ensure metrics are sampled by default
removed the @ Ignore ( " requires mongodb server " ) annotation from multiple test classes to streamline the test suite by eliminating unnecessary tests
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test failure
updated the condition to check if the table is artifical instead of name starts with a space to ensure that the table name does not start
updated file status checks from isFile ( ) to isDir ( ) in FileOutputCommitterContainer . java and LaunchMapper . java to improve cl
added null and empty checks for session attributes in MongoSessionManager . java to ensure proper handling of empty session attributes and prevent potential NullPointerExceptions
updated surfaceHolder ' s fixed size method from setFixedSize to setSizeFromLayout to improve the responsiveness of the surface holder
replaced direct access to ` _ stopping ` with a local variable ` stopping ` for better readability to improve code clarity and maintainability
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 15836 : defaultmessagelistener should use current time instead of stopwatch to calculate elapsed time
[ hotfix ] [ test ] remove redundant call to doonerror in delayedmonopublishertest
replaced assertTrue with a conditional failure assertion in WebsocketTest . java to improve error handling by ensuring that the error is expected to be
updated AllAppsTransitionController to implement View . OnLayoutChangeListener and refactored the layout change listener implementation to improve code readability and maintain
refactor variable names from " theHandler " to " handler " in PolicyBasedAuthenticationManager . java to improve code readability and maintain consistency
int - 1186 add default - output - channel attribute to xpath router element
updated cacheSeconds type from int to String and added DurationCapable annotation in MessageBundleProperties . java and CasCoreWebConfiguration . java to
updated OpenAPI version from 3.0 . 0 - rc1 to 3.0 . 0 in multiple Java files to ensure compatibility with the
removed the append ( ) method call from ByteBufferPool . java to streamline buffer handling by eliminating unnecessary overhead
added a check for the presence of " alt - rt . jar " in the boot class path and included a warning message if it is detected
updated user deletion queries to use upper case for usernames and updated email addresses in ScimUser initialization to ensure proper deletion of users based on user
updated FlightRecorderProfiler . java to use ArrayList instead of Arrays for options and added conditional unlockDiagnosticVMOptions and debugNonSafepoint
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check
added a condition to check if the content view has content before processing in HttpParser . java and implemented a test for chunked PUT requests in Proxy
refactor AtmosEndpoint class for improved clarity to enhance maintainability and readability of the code
added support for " printf " and " print " methods in Java2TypeScriptAdapter . java to enhance functionality by allowing more flexible method
added a new file TestCapacityUntilGCWrapAround . java and implemented native methods for increments and decrements metaspace capacity until garbage collection to
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
update endTime calculation logic in SamplingStatCalculator . java to ensure correct time calculation for sampled data
added unit test base on user forum issue
tmi - jpeg : do n ' t throw an iioexception if the sequence number be bad .
fix terra pick and terra rod not cause reequip animation , close # 1188
removed configuration and environment binding from JoobyModule and SpringModule , and added a conditional check in JoobyExtension to stream
fix a bug where the parent classloader of the webapploader be different from the container ' s classloader .
add support for additional nameupdater . properties file ( e . g . jmeter . nameupdater . properties )
added a new variable ` started ` to the ` EllipsoidRegionSelector ` class to track the state of the ellipsoid region selector
updated codenameone com protocol from http to https in JavaSEPort . java to ensure proper access to the codenameone website
[ geos - 8470 ] wfs getfeature query with sortby = = null should throw wfsexception instead of npe
replaced ` grantTuple [ 0 ] . equals ( null ) ` with ` grantTuple [ 0 ] = = null ` in ` Abstract
added imports for GraphicsConfiguration , GraphicsDevice , and Transparency , and modified image assertions in DiagramGenerationTest . java to ensure compatibility with
fix npe in minecraftlogger when try to install minecraft . class on top of fml
refactor DataUtilities and ReTypeFeatureReader classes for improved code organization to enhance maintainability and readability of the code
fix flakiness in locktest . testacquirelocked
added methods to tokenize and join tokens in StringUtil . java to improve tokenization logic for better readability and usability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5888 .
refactor command handling in SystemHighlighter to use ParsedLine for improved readability to enhance code clarity and maintainability by utilizing
updated version and version date constants in Constants . java to reflect a new snapshot version and mark a pending release
updated the position setting in StarTreeRecordStoreCircularBufferImpl to use dimensionSize instead of idx to ensure correct dimension size is used for
added support for checking drag state in SystemUiProxy and related classes to enhance drag - and - drop functionality in the system UI
added unit tests for socket traffic class verification in SecureSocketAppenderSocketOptionsTest and SocketAppenderSocketOptionsTest to ensure compatibility with Java 7 and
added a new cipher type " PSK - AES256 - GCM - SHA384 + TLSv1.2 " to the TestCipher
updated description text to use getLongDescription ( ) instead of getDescription ( ) . getText ( ) to improve clarity and consistency in displaying long descriptions
added JsonProperty annotation to ScimGroupMember class to enable JSON serialization for the " value " property in the ScimGroupMember class
refactor HqlQueryRenderer to handle reserved words in query parsing and add tests for function names and schemas scoping to improve query parsing accuracy
corrected the variable name from " d " to " s " in the requireNonNull check to ensure consistency in variable naming conventions
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
updated the ` offsetStreamIndex ` method to include a new parameter ` indexStartsAtOne ` and adjusted related calculations to enhance stream index handling
updated byte decoding logic in MagicDetector . java and added new mime type assertions in TestMimeTypes . java to ensure correct decoding behavior and improve
[ hotfix ] [ table - planner - blink ] remove getmonotonicity method from flinksqloperatortable
added Inheritance annotations and implemented equals and hashCode methods in OneTimeTokenAccount and OneTimeToken classes to enable serialization and deserialization of OneTime
added a condition to check if the assistant is not launched before processing fling events to ensure that fling events are only processed when the assistant
added a new file SolarisShortDSA . java that implements a key pair signing and verification using DSA to demonstrate
added a call to toggleSearchLabel ( false ) in ListFragment . java to improve user experience by hiding the search label
server : fix snapshot creation to lock volume before create a snapshot
replaced the direct instantiation of ` ServiceConnection ` with a ` DetailsServiceConnection ` class and added null check for ` mConnection ` to
replaced direct failure handling with an AtomicReference for SSLPeerUnverifiedException to improve clarity and maintainability of exception handling logic
removed the equals method from the ConjunctionScorer class to streamline the comparison logic for better readability and maintainability
added a null check for the variable ' v ' in the bindItems method and logged an error if it is null to improve error handling and
randomize getraftgroupids to avoid race condition
updated cache size checks and added a warning log for shrinking to 90% in DefaultCache . java to improve cache management reliability and provide
updated API paths from " / api / v2 " and " / api / v3 " to " / api / v3 " and
added an ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check if the collection is empty
drill - 8023 : fix an npe in drillparquetreader when read empty dictionary page
updated argument validation and improved channel name generation in SerumStreamingService . java to enhance input validation and ensure correct market data type is used
add a config option to disable the animation when an item be charging on top of a mana pool .
[ java ] do n ' t fail cluster node restart test if timeout occur .
added error logging for InterruptedException in WaitForHelper . java to improve debugging by providing more context on the interrupted exception
refactor DefaultServletTest to use JUnit ' s assumeTrue method and simplify directory creation logic to enhance test reliability and maintainability by
updated style injection calls in ResourcesInjectorFull . java to ensure consistent usage of openScreenStyle and dialogStylesScss
updated references from ` String ` to ` FileResource ` in ` BaseLiquibaseTask . java ` and ` DBDocTask .
fix npe in blockworldvector . equal ( ) , close # 3550
refactor LongConcurrentLRUMap to make CacheEntry fields final to improve immutability and ensure immutability of the CacheEntry class
camel - 14284 : camel - spring - boot - spring should quote the literal before add it to the resource configuration
updated the cache retrieval logic in FileCredentialsCache . java and modified the argument handling in EmptyCC . java to improve clarity of the cache
corrected the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to ensure
make fast sync minimum peer wait less aggressive
danielwagnerhall : do n ' t attach the session to the current thread if it ' s not need .
added a check to avoid expanding " AreEqual [ Segment [ X , Y ] , Segment [ Z , W ] ] " format expressions to
added a condition to clear pendingRenderingOperations when there are too many pending operations and the implementation is minimized to ensure that pending rendering operations are
fix a race condition in hazelcasttestsupport . testdeadline ( ) .
fixed race condition in coalescedwritebehindqueue . put ( ) and delayedentry . setvalue ( ) .
set the icon of the JLabel to null in GroupTreeCellRenderer . java to save some space for better UI consistency
updated test methods in TestBlacklistAwareRedirectResolver to change strict match behavior to ensure consistent behavior in redirect matching tests
added socket closure and updated test methods in ShutdownMonitorTest to improve resource management and enhance test coverage for the ShutdownMonitor functionality
mondrian : fix randomaccessstore . getchunksize ( ) to account for adjust chunk fill rate .
added a new method ` readFields ` to read fields from an object using a ` ObjectMap < String , Object > ` to improve field
[ hotfix ] [ runtime ] refactor componentclosingutil to use futureutils
server : destroy all volume when vm transition to error state
server : fix ipv6 range for vlan without ipv6cidr
updated variable names from ` InitializeUserDetailsManagerConfigurer ` to ` InitializeAuthenticationProviderManagerConfigurer ` for clarity to improve code read
increased the retry duration from 15 seconds to 30 seconds in CollectionsAPIDistributedZkTest . java to allow for longer leader
refactor error handling methods to remove unnecessary parameters and improve logging to enhance code readability and maintainability by standardizing error messages
updated pixel coordinates in the URLImage rendering from ` x ` and ` y ` to ` - x ` and ` - y ` to ensure
updated the size check from solrDocument1 to solrDocument2 in SolrTestCaseJ4 . java to ensure the correct comparison of field names
refactor code to encapsulate the check for item zero high cardinality in a separate method to improve code readability and maintainability
[ hotfix ] [ stream ] pass exception to streamtaskexception constructor
refactor the handling of tag characters in Preprocess . java to improve readability and maintainability of the code to enhance code clarity and
reformatted the ` read ` method in ` MessagePack . java ` for consistency to improve code readability and maintainability
added a new annotation interface ` Mapper ` in the ` org . apache . ibatis . annotations ` package to provide a mechanism for defining
added support for Fhir comments in JsonParser and created a new test for handling empty extensions in JsonParserR4Test to ensure proper
update artifact extraction logic to handle external meta entries without internal names to ensure correct artifact handling and avoid potential issues with external dependencies
added an alias for " node _ popup _ scripting " in the ScriptingMenuEntryVisitor to provide a more appropriate menu entry for script
removed HIDDEN _ FOCUSED _ SCROLL and HIDDEN _ SPLIT _ SCREEN constants from OverviewActionsView and added
camel - jms : use getout ( ) instead of getout ( ) to avoid classcastexception
removed unnecessary ` throws IOException ` declarations from multiple Java files to improve code clarity and reduce unnecessary exception declarations
deleted deprecated classes AbstractDelegatedVerb . java and FailureContext . java , and removed the AbstractDelegatedVerb . java and FailureContext .
updated GzipHandlerTest to use a new MicroServlet and added a new test for gzip handling to enhance test coverage and ensure proper handling of gzip
fix onsubscriberedo to use backpressureutils . getandaddrequest instead of consumercapacity . getandadd
added logging capabilities and improved message formatting in SpeedmentImpl . java to enhance debugging capabilities and enhance code readability
( chore ) camel - dspace : added a new servlet class to load dspace - config
updated StoreScanner and TestWideScanner to improve row matching logic and increased batch size to enhance performance and reduce memory usage during scan operations
( chore ) camel - test - infra - jmx : add usejmx ( ) method to nagioseventnotifier
replaced hardcoded ' / ' with a constant for package separator in SourceLineAnnotation . java to improve code readability and maintainability by
added methods to find the YARN binary and print application information in RemoteSparkJobMonitor to improve application management and debugging capabilities for YARN
added support for " maria " database in the DbConnectionManager to enhance compatibility with additional database configurations
updated log message formatting in SplitLogManager . java to improve readability of log messages for better clarity
added a new file ExecuteAndReturnStringTest . java to implement a UI test for executing and returning a string to facilitate testing
added a new file ` InvokespecialInterface . java ` implementing an interface and a class implementing ` I ` to demonstrate the
refactor EvictingBoundedList class implementation to improve performance and maintainability of the code
replaced initialization of encodingManager with setEncodingManager in GraphHopper . java to streamline encoding management and improve code clarity
added a null check for backgroundDisabled and validation for selection in SelectBox . java to ensure that selection cannot be negative to prevent runtime exceptions
added a null check for the method metadata in RpcServer . java to ensure that UnsupportedOperationException is thrown when the method is not supported
updated the calculation of hotseatCellSize and hotseatIconCenter based on cell layout border space to improve layout responsiveness by
replaced string manipulation with direct retrieval of partition column values to simplify the code and improve readability by eliminating unnecessary string manipulation
fix serialization of namedtaskdecorator and taskdefinition with version 4.1
updated the method call from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
changed the default value of the equal variable from false to true and modified its logic to ensure that the equal logic accurately reflects the intended
updated UnicodeToLatexFormatter to handle high - codepoint Unicode characters correctly to ensure correct formatting of high - codepoint Unicode characters in the Latex
added handling for ISO control characters in OAIDCCrosswalk and Item classes to ensure proper formatting of ISO control characters in input values
danielwagnerhall : when select a frame , do n ' t select a frame that match the original window handle .
added functionality to manage and clear bookmarks in the StringSearchPanel and BookmarksPanel classes , and implemented a clear button in DataBrowser to
refactor the baseUrl construction in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for URL building to improve code clarity and maintainability by
updated soft assertion methods and error messages in SoftAssertionsTest . java to improve accuracy and clarity of date validation errors
updated the ` adaptOrders ` method to include a reverse parameter and modified the return type of the ` adaptOrders ` method to improve order adapt
added null and pos checks for vartype in PrettyPrinter . java and created a new Java11Var class with a test method to ensure proper handling
danielwagnerhall : fix a couple of compile error in the test suite
updated the instantiation of Configuration to set a default value of false and removed unnecessary debug logging for Hadoop conf property overriding to improve configuration flexibility and
changed the call to ` super . drawChildren ( batch , parentAlpha ) ` to ` super . draw ( batch , parentAlpha ) `
added unit test base on user forum issue
replace usage of ` Globals ` with ` context . getCatalinaBase ( ) ` in multiple classes to standardize the base path retrieval
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified the return statement in ` ShadowICU
minecraftforge / fml / plotSquared . java : increase the size of the color map to 16x16
added ZuulProperties support to the TraceRestClientRibbonCommandFactory and related classes to enhance functionality by integrating Zuul -
tika - 2696 -- add test to verify that fontparser . getcreationdate ( ) and fontparser . getmodified ( )
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to use ` getBuildTime ( ) `
updated the calculation of ` xDist ` to use ` Math . abs ` to ensure that ` xDist ` is always positive to prevent potential
deleted the GUIRWTester . java file to the functionality is no longer needed in the project
removed the ` @ NullableDecl ` annotation from the ` countPlaceholders ` method in ` LazyMessage ` and ` StandardSubjectBuilder ` classes to
updated error message format in TestStream . java to include the processing time to improve clarity of error reporting for better debugging
move thymeleaf . templateparser . markup to org . thymeleaf . templateparser . markup . thymeleaftemplate
added a new test method ` testXPathString ` to ` XPathTest . java ` and updated the XPath evaluation logic in ` XPathBuilder .
added @ Nullable annotation to FutureUtils . java to indicate that the field may be null or undefined
onfly : warn about dynamicinvokeexpr not resolve during call - graph construction
updated email addresses in ContextTest . java from " myfakeemail @ gmail . com " to " myrealemail @ example . com
updated the response format in HttpConnectionTest from " badMessage : bad encoding expected . . . " to " bad / encoding % x "
added ` getColumnDataType ` method to ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a way to
added default implementation for serviceClientConfiguration methods in AsyncClientInterface , SyncClientInterface , AwsClient , and V2TestDynamoDbBase
refactor HSSFPictureData class to improve code structure to enhance maintainability and readability of the code
replaced ` long ` with ` Instant ` for startTime and improved logging in ` Statistics . java ` to enhance time handling by using `
added version detection and option settings in LibMediaInfoParser . java to ensure compatibility with newer MediaInfo library versions
removed reflection imports and refactored IdeaDependency creation logic in ProjectReader . java to streamline dependency handling and improve code clarity
added a new ` SerialHeap ` class and updated the heap mapping in ` Universe . java ` and ` SerialHeap . java ` to
added multiple @ SuppressWarnings ( " serial " ) annotations in mmm $ Gson $ Types . java and ppp $ Gson $ Types . java
use mouse . getposition ( ) instead of mouse . getposition ( ) for mouse wheel event
datamongo - 1608 - fix nullpointerexception in mongodb query creator
[ hotfix ] [ runtime ] add multiset type info to maptypeinfo
added a method to retrieve an identity provider by its issuer in XOAuthProviderConfigurator and corresponding tests in XOAuthProviderConfiguratorTests to enhance functionality
pdfbox - 4892 : improve parsing of cmaps with poor whitespace
added OperationsServiceConnection and OperationsServiceBinder to manage operations service connections and unbinds to improve service management and resource management during backup operations
added a new constraint implementation in Attr . java and refactored the checkWithinBounds method in Infer . java and T6938454
add isconfighidden ( ) method to accountid and accountlist to be able to check if an account be hidden or config .
added a check to log an error if the number of displays differs from the supported bounds to ensure that the number of displays does not exceed the
updated schema removal logic in PMetaDataImpl and added a test for schema removal in PMetaDataImplTest to ensure that the schema is removed correctly
do n ' t fire passive login event when the loginpassive action be set
added a new file Box2DTest . java and modified GDXTester . java to include a new Intent for Box2D Test to
improve debug output for index and indexed column mutation . patch by jbellis
[ hotfix ] [ runtime ] change default buffer request timeout from millis to minutes .
chore ( deps ) : upgrade gapic - generator to 0.0 . 5
added a help button to the OpenOfficePanel to provide users with an overview of OpenOffice integration functionality
use child option instead of option in nettyacceptor and protocoldecodingserver
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceFundingHistoryParams to use wildcard generics to improve type
refactor class reference handling in ScanResultObject . java to improve clarity and maintainability of class loading logic
refactor connection handling in DecodeServlet . java to streamline image decoding process to improve code readability and maintainability by reducing redundancy
added support for null handling in Querydsl by introducing a new method toQueryDslNullHandling to improve null handling flexibility in query
added null check for actor before iterating over actions in ParallelAction and SequenceAction classes to ensure actions are processed only when the actor is not null
reformatted code in CtTypeTest . java for improved readability to enhance code clarity and maintainability
added synchronization to the writers map in HDFSEventSink . java to ensure thread safety during concurrent access to sfWriters
added a new interface ` Issue888 _ JavaI ` and implemented ` Issue888 _ KotlinI ` in ` JJ
added a new command to revoke an existing agent certificate in CertificateManager . java and created a corresponding test in CertGenerationTest . java to ensure
added a check for non - body responses in AbstractHttpTest and implemented a new test for writing a body after no body responses to ensure that
added error handling for script loading and language validation in ScriptTransformer . java to ensure compatibility with Java 6 and improve error messaging for script evaluation failures
updated connection pooling type in HiveConf and added HikariDataSource support in TxnHandler to enhance connection pooling flexibility and support for
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` across multiple test files to
added filtering functionality for file locking and unlocking actions in the FileMenuFilter and OCFileListFragment to enhance user experience by allowing users to
refactor Version class to improve code readability to enhance maintainability and facilitate future updates
clear the endpoint cache when create a new keyspace . patch by jbellis ; review by brandonwilliams for cassandra - 3
replaced direct calls to ` waitForSignal ( ) ` with a new method ` waitForState ( Thread . State ) ` to improve code read
updated SkylarkDescriptionArg , SkylarkDescriptionArg , SkylarkRuleContext , and SkylarkRule
simonstewart : introduce a new interface ` ` storage ' ' that extend from ` ` localstorage ' ' and ` `
add test for unnecessary or replace option in create view statement
changed the catch block from Exception to Throwable in SegmentGenerationJobRunner . java to improve error handling by catching a broader range of exceptions
updated query string retrieval logic in SpellCheckComponent . java to ensure safe access to the query string parameter to prevent potential NullPointerExceptions
added validation for header values in mmm Headers . java and ppp Headers . java to ensure valid header values and improve error handling
replaced instanceSize with arrayBaseOffset and updated related methods in HybridLayout , HostedInstanceClass , and UniverseBuilder to improve
pmd : add experimental annotation to astcommentcontainer and abstractapexcommentcontainernode
hhh - 14850 log a warning if association with ` fetch = " join " and ` lazy = " true " ` found
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpec
added assertions to check database and table names in TestCompactionTxnHandler . java and set database and table names in TxnHandler . java to
camel - 14850 : timer consumer should not throw exception during graceful shutdown .
added a condition to check if the trace is not processed before adding it to the traces list to ensure that the trace is only added when not
updated ProviderManager to use CollectionUtils for checking null elements and added tests for null values in ProviderManagerTests to ensure proper handling of null values and
simplified the condition for checking the database type in InsertOrUpdateGeneratorPostgres . java to improve code readability and maintainability
added SQL queries and assertions in LocalIndexIT and modified BaseScannerRegionObserver to handle LOCAL _ INDEX _ FILTER to improve index limit handling and
added validation to prevent adding collections with the same name in the past to ensure that collections with the same name cannot be added to the past
updated cursor position calculations and window base calculations in VDUBuffer . java and vt320 . java to improve accuracy of cursor positioning and ensure
removed the static final String USE _ RETRIES constant from HttpShardHandlerFactory . java to streamline the code by eliminating unused
updated the VERSION _ NUMBER regex in JavaVersion . java and added a new test case in TestJavaVersion . java to ensure accurate version parsing
added a check to return early if no input gates are available to optimize performance by avoiding unnecessary processing when no input gates are available
added a JUnit test method to the TestReceivingMessageSourceParserTests class to facilitate testing of the functionality of the message
added a null check for properties before retrieving the property to avoid potential NullPointerException when properties is null
replace throwing an IOException with creating a new IOException instance and setting its cause to improve error handling by preserving the original exception context
ambari - 15836 . fix typo in javadoc of cluster api . ( dlysnichenko )
added a TxConfidenceListener to manage transaction confidence updates to ensure consistent transaction confidence updates across the application
bugfix # 182 , add support for g1 perm gen in jmxsupport
removed unused imports and simplified return statements in NearbyController . java to improve code clarity and maintainability
pdfbox - 4892 : make the class public , add a suppression warning
updated activity type checks in BaseSwipeUpHandlerV2 . java to include a check for home activity type to ensure proper handling of home
rename ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and update related constants and methods to improve clarity and consistency in
updated method names and return values in ShadowTelephonyManagerTest and ShadowTelephonyManager to ensure consistency and correctness in handling ISO
removed the setUnfreezeAmount method call from UnfreezeBalanceV2Actuator . java to streamline the code by eliminating unnecessary
[ conference scheduling ] fix typo in description
danielwagnerhall : use fileutils . copydirectory instead of com . google . common . io . files .
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
refactor Observable class to improve readability to enhance maintainability and facilitate future updates
updated the method for adding multi - field operations in the Update class and added tests for multiple pushAll functionality in MongoTemplateTests to enhance functionality
added a null check for randomUUID before setting the hubChangeLog ID to avoid potential NullPointerExceptions when randomUUID is not provided
added hover event handling in InputConsumer and OverviewInputConsumer classes to enhance user experience by dispatching specific hover events for quickstep live tiles
added a check for ` zkRun ` and ` confDir ` before retrieving ` boostrapConf ` in ` CoreContainer . java `
camel - 14284 : camel - netty - http should use maxheadersize instead of maxheadersize
hbase - 14850 increase the number of client retry from 5 to 35
replaced ` toPath ( ) . resolve ( ) . to ( ) ` with ` new File ( baseDirectory . getAbsolutePath ( ) ) `
attempt to fix the problem that encodedgraphcachetest . java fail on slow machine .
updated the query command from " customer _ count " to " all _ tables " and added a new test for querying over output to improve cl
added currency adaptation logic for Kraken assets in KrakenAdapters . java to ensure correct currency metadata is used for currency adaptations
added a ` toString ( ) ` method to ` AnyOf ` class and created a new test class ` AnyOf _ toString _ Test `
[ hotfix ] [ runtime ] fix npe in alerttaskrunnerv2 when dimension be empty
[ beam - 10625 ] improve warn log for missing measurement / database setting ( # 10625 )
renamed methods ` doTransform ` to ` downcast ` across multiple converters to improve clarity and consistency in method naming
updated local address filtering logic in NetUtils . java to include unique local addresses to enhance security by ensuring unique local addresses are excluded
refactor column name handling in DataTextFormatter to use a dedicated method to improve code readability and maintainability by centralizing quoting logic
added methods for setting properties and parsing strings in WrapSystem , StrUtils , and CompileMethodEntity classes to enhance system property management and improve method
added a constructor to the UpdateRequest class that initializes the request with a POST method to facilitate the creation of a new UpdateRequest
changed the visibility of the EnumSerialization enum from static to an enum to allow external access to the EnumSerialization enum for better encapsulation
removed the ` addExperimentalFormatWarning ` method from ` RequestHandlerUtils ` to streamline response handling by eliminating unnecessary warnings
updated debug logging to include the format of module names and added a format method to improve logging clarity and ensure proper formatting of module names
change row height of conditional style table to use the default label font .
[ issue # 3640 ] fix npe in defaultbrokerheartbeatmanager # onbrokerheartbeat ( # 3641 )
added initialization for meanPartitionSize and partitionCount in CqlInputFormat . java to ensure correct calculation of splitCount based on the presence of
simplified condition in JUnitTestsShouldIncludeAssertRule . java to improve code readability and maintainability
[ hotfix ] [ table - planner - blink ] add equal and hashcode to ruleterminalnodelefttuple
added StageIDsRearranger import and conditionally resolve stage IDs in TezCompiler to enable dynamic stage ID rearrangement based on
fix the mbean name for the messagingservice to match the other mbean name .
updated memory consumption logic in LotsOfOutput . java to include debugging information to improve visibility into memory consumption during testing
added imports for Document and modified DimConfig initialization across multiple classes to improve documentation clarity and ensure consistent usage of DimConfig across different
updated ` LdapAutoConfiguration ` and ` LdapProperties ` to set ` anonymousReadOnly ` and ` anonymousReadOnly ` properties in ` LdapProperties `
refactor DatabaseMetaData class for improved clarity to enhance maintainability and readability of the code
changed the visibility of the EchoInputDoFn class from public to private to restrict access to the class for testing purposes
added a ` finishMocking ` method to ` MockitoSession ` and implemented the ` finishMocking ` method in ` DefaultMockito
removed the ` extraDeps ` parameter from ` GoTestDescription . java ` and added new test cases in ` GoTestIntegrationTest . java
replaced ` buffer ` and ` handler ` fields with ` readBuffer ` and ` writeBuffer ` and ` writeHandler ` in ` SPD
replaced static block retrieval with a slowing block retrieval in BlockLiquidWrapper . java to ensure that the correct block is used for
updated intent handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to use data URI parsing instead of extra keys to improve compatibility with external URLs
refactor AprEndpoint class for improved clarity to enhance maintainability and readability of the code
[ hotfix ] [ cli ] fix json dump for streamingplan
fix craftingmanager . getshapedrecipe ( ) to use computeifabsent ( )
flume - 1131 . fix flaky test in flume - channel - file .
removed unnecessary parentheses from whitespace checks in TabsAndIndentsVisitor . java to simplify the condition for better readability and maintainability
added regex pattern matching for temporary files in NeuteredLinesFilter . java to enhance regex matching accuracy for temporary files
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a condition to handle " INTERVAL " data type definitions in DataTypeFactory and modified condition checks in ColumnSnapshotGenerator to improve data type handling
added a method to check if the WavefrontTimer is publishing histogram before creating its distribution summary to ensure that metrics are only added when not publishing
updated the handling of the ` handleAdd ` in ` ShenyuClientRegisterSpringCloudServiceImpl . java ` and modified the
added a new method ` registerListener ` to ` ShadowSensorManager ` to enable listener registration with rate and maximum latency parameters
added SSL test methods for full method , full URI , and full header in SelectChannelServerSslTest . java to ensure proper handling of socket
( chore ) camel - ignite : fix npe in ignite test
added handling for zero or empty line numbers in AbstractClient . java to improve clarity of output when there are no lines available
pdfbox - 2576 : catch all exception instead of just ioexception , a suggest by valerybokov
added tests for HDR capabilities retrieval and exception handling in ShadowDisplayTest . java to ensure proper functionality and error handling for unsupported hdr types in
added a finally block to reset the classLoader to null in JavacInMemoryStep . java to ensure proper resource management and prevent potential memory
enhanced error messages in SemanticAnalyzer and added a toString method in SemiJoinHint to improve clarity of error messages and provide better debugging
added a default constructor to the Message class to provide a default constructor for the Message class
added class check for GUI class in SerializableIdiom . java to improve bug reporting for non - GUI components during serialization
updated PhoenixDecimalObjectInspector and PhoenixObjectInspectorFactory to use PrimitiveTypeInfo for better type safety and precision scaling to
changed the type of ` gzipstream ` from ` GZIPOutputStream ` to ` OutputStream ` and added a check for ` response . isCommitted (
corrected the spelling of " WWWAuthenticate " to " authenticateHeader " in multiple files to improve code readability and maintain consistency in
added conditions to check for directory paths starting with " EJS " or " _ " in DCD . java to ensure proper handling of directory
added a method to retrieve the thread group name in ThreadLeakTest . java to improve clarity in identifying the thread ' s thread group
added logging functionality to MethodInvocationPrivilegeEvaluator for better traceability to enhance debugging capabilities during security decision processes
changed package name from ` org . apache . nutch . crawl ` to ` org . apache . nutch . tools ` and
updated import statements in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to improve code clarity and
server : fix iso migration for user vms ( # 4569 )
modified the handling of signal handlers in SigInt . java and updated test methods in SigIntTest . java to improve clarity and functionality of
replaced the static import of ` isEmpty ` with ` ArrayUtils . isEmpty ` in ` NodeTool . java ` to improve code readability and
replaced NoopDiscoveryClientAutoConfiguration with WebClientAutoConfiguration and HibernateJpaAutoConfiguration in AxonAutoConfigurationWithSpring
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and maintainability
planningentityselector . setresetinitializedplanningentities ( false ) should be remove in favor of planningentityselector . setresetinitialized
added a new parameter ` artifactBuildTimeMs ` to the ` TwoLevelArtifactCacheDecorator ` and ` ManifestRuleKeyManager ` classes to
replaced ` getFields ( ) ` with ` getDeclaredFields ( ) ` and updated the logic for calculating fixed row size in ` GroupByOperator .
added null checks before adding block appearance in Wallet . java to prevent potential NullPointerExceptions when adding block appearance
added CNC _ BTC currency pair and updated FTC and BTC to FNC in BTCEUtils and TickerDemo to
updated the skewAllowance value from 5 to 15 and refactored related logic in multiple classes to allow for more flexible control over the
added sorting functionality to SongListActivity and updated query sorting logic in Utils to ensure correct sorting behavior based on the main item type
removed redundant method ` readBodyToBytesIfNecessary ` in ` Utils . java ` to streamline request handling by eliminating unnecessary complexity
replaced ` BaseBlock ` with ` LegacyBaseBlockWrapper ` in ` MobSpawnerBlock ` and ` SignBlock ` to
refactor IcebergBranchExec to use SnapshotRef for tag retrieval instead of an Optional to improve error handling for missing tags in Ice
replaced ` newArrayList ( " * " ) ` with ` Collections . singletonList ( " * " ) ` in ` AbstractLdapMockMvcTest
updated boxesSsboBinding and frameNumber initialization in HybridDemoSsboInstancing and PhotonMappingDemo classes to
added validation for the ` requirePasswwordChangeRequired ` property in ` IdentityProviderEndpoints ` and improved logging messages in ` IdentityProvider
added a call to removeAll ( assumeReflective ) in UnreadFields . java to ensure that uninitialized fields are not included in constructors
modified the connection URL handling in JdbcExecutor to ensure it defaults to " CLOSED CONNECTION " when the connection is closed
added a new test method ` testRequiredBody ` to ` SpringmvcClient ` for validating REST template parameters to ensure that the template correctly
updated regex patterns for user and password in CredentialInjector . java and updated JDBC URL in CredentialInjectorTest . java to improve pattern matching accuracy and
added a new menu item " Item4 " and a key stroke for the enter key in ActionListenerCalledTwiceTest . java to enhance user
updated debug print statements and assertion logic in TestCoreParser . java to improve clarity of query output and ensure correct assertion outcome
updated equality checks for ` id ` and ` children ` in ` SimpleNode . java ` to ensure correct equality check for ` id ` and
changed the access modifier of the PopulatorContextStackItem class from public to package - private to restrict access to the class for better encapsulation
updated MoreLikeThis . java to use getDocCount instead of numDocs and added a new test method in TestMoreLikeThis . java to
reformatted the lambda expression for event firing in QuestManager . java to improve code readability and maintainability
[ hotfix ] [ test ] make networkbufferpooltest extend testlogger
modified the query to append " $ gt " and " $ lt " to the end in MongoSessionDataStore . java to ensure the query correctly
added a native method ` unsafeGetLong ` to the ` CompilerDirectivesSubstitutions ` class to facilitate the retrieval of long values
update time zone from ARAST to EET across multiple files to align with the latest time zone standards
updated the deprecation logger ID from 90000010 to 90000011 to reflect the new version of the logger
added handling for JDBCException in SessionImpl . java to improve error handling for rollback - only transactions
do n ' t try to download an external file that have a slash at the end of the filename ( bibtex . download ( ) )
enable screen menu bar on macosx by default
add integration test for piecewise ( h , h2 , h3 , h4 , h5 )
changed access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ( ) ` methods in `
added a new configuration variable ` modWhiteListPattern ` and a test for modifying Hive metastore uris in ` TestJdbcWithSQLAuthorization
added a line to store invalid class values in the EntryLoader class to ensure proper handling of invalid class entries in the entry loader
updated the method call from ` Team . sharded ` to ` player . team ( ) ` in ` MobileInput . java ` to ensure
updated the cookie domain from " comp1 " to " domainHelper . getHostName ( ) " in CookieImplementationTest . java to ensure the
added nullable validation logic to ` MissingColumnChangeGenerator ` , ` MissingTableChangeGenerator ` , and ` ColumnSnapshotGenerator ` to ensure proper
updated multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
updated CustomCollectionTest and CompositeIdRouter to use static final constants for separator and bitsSeparator to improve code readability and maintainability by redu
added snapshot handling functionality in ExecutablePreparedStatementBase and updated dependenciesChangeString in PostgreSQLIntegrationTest to enhance binary streaming functionality for PostgreSQL databases
added checks for max _ cached _ files , max _ cache _ size , and max _ cached _ file _ size in DefaultServlet . java
added drag and drop functionality to the JabRefFrame for handling tab drag events to enhance user experience by allowing drag - and - drop functionality
updated description creation in ExecutionUnitRunner and updated test assertions in CucumberTest and ExecutionUnitRunnerTest to improve clarity and accuracy of
replaced ` ! myVersion . isEmpty ( ) ` with ` StringUtils . isNotEmpty ( myVersion ) ` and ` StringUtils . isNotEmpty ( build
changed access modifiers of several methods from public to package - private in TimeUtils and TimeUtilsTest classes to restrict access to these methods for better
added a method to check if a class is a security frame or an injected invoker in RefectionMHTests . java to improve compatibility with
updated file extension checks from " jpg " and " jpeg " to " . jpeg " in PreviewImageFragment . java to ensure compatibility with
updated the method to return the Java name of the method based on the type of the HostedMethod to ensure accurate representation of the method '
added getIcon ( ) method to Data class and updated classDisplayed initialization in DataTableTopComponent . java to provide a default icon for nodes and
modified the logic for retrieving the last character of the request name in CounterRequestAggregation . java to improve robustness by avoiding potential null pointer
refactor the replacement logic in FindAndReplace . java and add a test for dollar signs tolerated in FindAndReplaceTest . java
fix nullpointerexception in smackpacketdebugger . setconnection ( smackpacket . connection ) .
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a method to copy directories in a specified directory to a specified directory to facilitate directory - based file operations in the application
added error handling for unknown datum classes in JacksonUtils to improve robustness by throwing a specific exception for unknown datum types
refactor build rule handling in DefaultJavaLibraryBuilder to utilize HasJavaAbi for class and source ABI jars to improve clarity
removed background padding and adjusted height calculation in SelectBox . java to simplify height calculation for better readability and maintainability
added normalization for dbName and tableName in ObjectStore . java to ensure consistency in database and table names during object store operations
refactor database type handling in DbSqlSession . java to use a variable for schema and oracle database type to improve code clarity and ensure
removed the Logout method from HomeFragment to avoid logging out because we do n ' t actually log out because we handle it ourselves
[ hotfix ] [ test ] fix runtimecontext initialization in multiple test
added null check for candidate elements in FastImportAction . java to ensure robustness by preventing potential NullPointerExceptions
updated the managed check in ContainerLifeCycle to use a boolean variable for better readability to improve code clarity and maintainability by using a
rename iexecutionattributesdialect to iexecutionattributedialect to be consistent with other dialects
added a call to ` metadata . clearUnsafe ( ) ` in the ` AlterTest . java ` file to ensure the metadata is cleared
fix npe in gettime command when loc be null .
added null check for measurement in TabletInsertionDataContainer and refactored DisruptorQueue to set default exception handler in DisruptorQueue
deleted the Session2Token . java file to the class is no longer needed in the project
server : fix volume not be remove in case of failure to create a volume
added a new Install SystemShortcut class and integrated it into PopupDataProvider to enable the installation of instant app functionality in the Android launcher
added a NullAuthoritiesPopulator implementation to LdapAuthenticationProvider and updated its instantiation in LdapAuthenticationProviderTests to ensure proper handling of null authority
updated the handling of the " retrolambda " jar path in the Executor and CN1BuildMojo classes to ensure the retrolambda
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the build process by elim
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` and modified its implementation to improve performance and
added a method to handle null results in JMESPathExtractor to improve error handling by providing a default value and matching number
updated import statements and added a check for null or empty authorities in AuthorizeTag . java to improve code clarity and ensure proper handling of
updated assertions in multiple test files to remove unnecessary parameters to improve code readability and maintainability
server : fix vm snapshot with memory error message for vgpu enabled vm
refactor configuration handling in RobolectricTestRunner and Config classes to use HashSet instead of ArrayList for shadows to improve clarity and
replaced SelectChannelConnector with SocketConnector in JettySolrRunner . java to utilize a more appropriate socket connector implementation
added a check for partially equal partition keys in HiveAlterHandler . java and updated related tests in TestHiveMetaStore . java to ensure
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER to FeatureFlags . java to enable the display of icon in
reformatted conditional statement in SimulationStatus . java to improve code readability and maintainability
replaced SharedBlockingCallback with Callback . Completable in StandardDeployer and StandardUndeployer classes to streamline handler deployment and undeployment
added WorkspaceListener functionality to PreviewControllerImpl and modified graph building logic in PreviewUIController to enable dynamic updates of the preview graph based on workspace
added checks to ensure only non - anonymous classes are processed in the noInflation condition to enhance security by preventing inflation of non -
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future updates
updated file path formatting in CatalinaAcegiUserRealm . java to ensure consistent file path formatting across the application
updated server and manager startup logs in AmbariServer . java to improve clarity of logs related to server initialization and initialization
added null checks for forNode ' s init , modify , and getter in JSONWriter . java to ensure robustness by preventing potential NullPointerException
modified the ` run ` method in ` SliderAppsViewControllerImpl ` to accept a ` FileSystem ` parameter and adjusted user proxying logic
added a check to ensure backgroundManager is not attached before attaching it to avoid potential null pointer exceptions when attaching to the background manager
set the current tab to 1 in AllAppsTabbed , Launcher , and PagedView , and adjust newY calculations in Workspace to
added null check for the URL in BaseDataSource and created a test for invalid URLs in SimpleDataSourceTest to ensure that IllegalArgumentException is thrown when the
( chore ) camel - pebble : enable pebble module test on jdk 11
added EditNameDialog support for creating a new directory in FileDisplayActivity to enhance user experience by allowing directory creation with new names
added support for toggling the bar border width in multiple chart activities to enhance user interface flexibility by allowing border width to be togg
updated OkCoinExchange SSL URI from " https : / / okcoin . com " to " www . okex . com " to ensure
jbrules - 1889 : add a score comparator to the acceptedforagertest to make it easy to run the test
replaced FileChannel with SeekableByteChannel for reading input streams in Files . java and added a new test in BytesAndLines . java
refactor the ` getFlattenFieldTransferPair ` method to accept a ` FieldReference ` parameter to enhance code clarity and maintainability by
renamed ` MockHandler ` to ` MockHandlerImpl ` across multiple files to improve clarity and consistency in naming conventions
removed redundant checks for SERIALIZATION _ TYPES _ KEY and PROXY _ SERIALIZATION _ TYPES _ KEY in SerializationConfigurationParser .
added activity manager watch heap limit configuration in QuickstepProcessInitializer . java to optimize memory usage for debugging purposes
refactor sumWithCompensation logic to store the result of applyAsDouble in a variable before incrementing it to improve code readability and
log4j2 - 1343 do n ' t swallow exception in abstractloadbundletest
added a conditional check for deletion time before serializing the data output buffer in PrecompactedRow . java to ensure proper serialization handling when the
updated rendering intent return logic in ICC _ Profile and ColorConvertOp classes , and added a new test class for invalid rendering intent to ensure
added MeterRegistryLifecycle bean to manage lifecycle management of meter registries to ensure proper resource management and prevent memory leaks during registry lifecycle operations
[ 3.0 ] log warn when config center be specify but no config item find
added error handling for certificate generation in CertificateFactoryTest to ensure robust validation of certificate integrity
camel - 17654 : simple parser should not treat ambiguous binary operator a a binary operator . thanks to daniel dai for
simplified the ` onTabUnselected ` method in ` EditorActivity ` and added focus handling in ` IDEEditor ` to improve
added user name to access log error message in AccessLogValve . java to provide more context for error logging for better debugging
updated scaling values in SkeletonModelGpuSkinningTest and modified animation time calculation in OgreXmlLoader and SkeletonModelViewer to
removed the ` throws InterruptedException ` declaration from the ` createOrThrow ` method to simplify the method signature by eliminating unnecessary exception handling
added @ Deprecated annotations to UpgradeResponse . java to indicate that these classes are outdated and should not be used in new development
added support for specifying the output directory for generated d . ts files in the JSweet transpiler to enable users to place generated d .
added a test for Kinesis fetch timeout in StreamConfigTest . java and modified fetch timeout calculation in StreamConfig . java to ensure correct fetch timeout
added a " . html " file suffix to the timestamp in StreamingDataflowWorker . java to enhance file naming for better clarity in data
increased the maximum number of metastore server threads from 100000 to 1000 to allow more concurrent execution of the metastore server
changed the return type of the onTaskSnapshotChanged method from void to boolean to allow the method to return a boolean indicating success or failure
updated the shadow radius setting in SwipeUpAnimationLogic to use shadowRadius instead of mMaxShadowRadius to ensure the correct shadow radius is
added a new test method ` chainNestingAndAggregation ` in ` ChainParserTests . java ` to validate the behavior of message aggregation in
updated loop condition from ` limit ` to ` end ` in ` MarketSellAssetActuatorTest . java ` to ensure the test
change polyglotcontextimpl . isinternal ( ) to polyglotcontextimpl . isinteractive ( ) to improve clarity and accuracy
updated conditional check in CreateKeytabFilesServerAction . java to handle cases where previousCachedFilePath is null or equal to cachedKeytabFilePath
added DisplayController import and modified WindowManagerProxy instantiation in LauncherPreviewRenderer . java to enhance functionality by integrating display management functionality
removed conditional check for root directories in MetalFileChooserUI and SynthFileChooserUIImpl to streamline the code by eliminating
replaced ` getToolkit ( ) . getScreenSize ( ) ` with ` Toolkit . getDefaultToolkit ( ) . getScreenSize (
changed the return type of the ` recognise ` method from ` List < ? extends RecognisedObject > ` to ` List < Caption
added unit tests for entity persistence and removal in JPASQLBase . java to enhance test coverage for entity retrieval and retrieval with factory expressions
removed point removal logic in FreeformFinSetConfig . java to streamline the code by eliminating unnecessary debug output
update moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to ensure compatibility with the latest moe
spend all gas when constant can not set call value .
updated error messages to include newline characters for consistency to enhance readability and maintain consistency in error reporting
added a @ Deprecated annotation to the Weights class to indicate that the class is outdated and should no longer be used
refactor unsafe plugin registration to use a dedicated method for clarity to improve code readability and maintainability by reducing duplication
added @ Hint annotation to AndroidAppModularityDescription , AndroidGraphEnhancerArgs , and AndroidBinaryModularIntegrationTest , and
changed mCenterPagesVertically from true to false to disable vertical scrolling for improved user experience
added a call to ` migrationInfo . doneProcessing ( ) ` in ` MigrationRequestOperation . java ` to ensure that the migration process is
[ knnected ] rename konnected module ip address to konnectedupnpserver base url ( # 11943
changed the type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy . java
refactor database creation and query processing in TestJdbcWithMiniLlap and LlapBaseInputFormat classes to ensure correct database context is
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate SQL parsing with cases containing brackets to
added a check for touch events in ConsoleActivity and refactored the startCopyMode method in ConsoleActivity to ensure proper handling of touch events
refactor ` writeXmlOutput ` method to accept a ` Writer ` instead of a ` String ` for XML output to improve XML output handling
camel - 16400 : fixed npe in abstractlistaggregationstrategy when use custom aggregation strategy with empty split
camel - 14850 : camel - core - optimize to use camelexchangeexception instead of exchangehelper . createexceptionmessage .
updated package structure and import statements in BasicConfigurator . java and SocketMin . java to improve organization and clarity of the codebase
added a condition to check if the target VN has a PHI _ NODE flag before comparing it to source VN to ensure that the
remove unused import of SharedStringSource in TestXSSFRichTextString . java to clean up the code and improve readability
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with tracing capabilities
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
[ hotfix ] [ test ] migrate readablewritableconfigurationtest to junit 5
lucene - 4892 : fix nullpointerexception in instantiatedindexreader . getorderedterms ( )
changed the visibility of the IndexFileNameFilter singleton from public to private to restrict access to the singleton instance for better encapsulation
replaced instances of ` testPluginDefinition ( ) ` with ` pluginDef ` in ` IfStatementTest . java ` and refactored
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java `
removed the ` nullSafe ` method from the ` TypeAdapter ` class and simplified its usage across multiple test files to streamline the code and
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added a new file EXIFReader . java to process Exif metadata files to facilitate image processing by providing detailed metadata for Ex
change the return value of ` toStandardUnit ` method from ` UNKNOWN _ TO _ SDK _ VERSION ` to ` NONE ` in ` CloudWatch
[ drools - 5892 ] fix pmml4datafactory . newinstance ( ) to use parameterinfo . getvalue ( )
updated the message format in the FluentProtocol to include additional line breaks to improve readability and clarity of the error message for expected phases
added a check to return early if the bubble bar is not visible to improve performance by avoiding unnecessary processing when the bubble bar is not visible
[ gr - 23254 ] fix branchtargetindexexception when emit a bitcode .
added a try - finally block around the initialization of JDKLogManager in JDKXRLogger . java to ensure initPending is set to false
added a ` find ` method to ` TicketCatalog ` and ` DefaultTicketCatalog ` classes , and modified ` HazelcastTicketRegistry ` to
refactor SSL configuration and connection logic in TestSSL . java to improve readability and maintainability of the code
[ hotfix ] fix filewriter leak in sortmergeresultpartition
( chore ) camel - jms : use long . max _ value instead of null for read and write
added type and sort parameters to PluginHandleController and PluginHandleDTO classes to enable filtering and filtering of plugins based on their type and sorting criteria
updated span creation method from ` start ( ) ` to ` start ( ) ` in ` DefaultSpanCreator . java ` and ` Sle
added configuration options for color , depth , and stencil formats in IOSApplicationConfiguration and updated IOSGraphics constructor to use them to enhance flex
refactor login logic to use attemptLogin method and add a new test for user locking out after failed attempts to improve code readability and ensure
[ pytorch ] add support for real ( ) and complex ( ) in jni utils .
simplified the while loop condition in SynchronizationStatistics . java to improve readability and maintainability of the code
refactor Implements and ShadowPicker classes to improve code readability and maintainability
refactor HttpClientOptions creation to use a dedicated method for creating HTTP2 client options to improve code readability and maintainability by centralizing connection
added support for ` DynamicArray ` in ` StructType ` and improved type handling in ` SolidityFunctionWrapper ` to enhance type
updated font size retrieval to include a default value of true to ensure consistent font size behavior across different environments
added constructors to CopyStep to accept a Path object and a recursive flag to enhance flexibility in path handling during copying operations
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) method do n ' t call '
camel - 14850 : camel - core - dsl - add routecontextprocessor to routecontextnavigatortest to make it easy
added a new ` FlavorParser ` class and updated ` BuildTargetParser ` and ` FlavorParserTest ` to utilize it to
change the data type of witnesses from List < String > to List < ByteString > in WitnessScheduleStore . java to ensure compatibility with
added a check for non - empty resultsMeta before printing to System . err . println to avoid printing empty results when resultsMeta is empty
refactor ConcurrentLinkedQueue to improve handling of null elements and introduce a new RemoveLeak class for testing to enhance code robustness and
added a boolean parameter ` addSpecialTokens ` to several encode and batchEncode methods in ` HuggingFaceTokenizer . java ` to enhance
[ hotfix ] [ runtime ] use nCopies for compute resource profile in taskgroupmanager
updated LoadSingleTsFileNode to use AlignedChunkData for chunk addition and data size updates to ensure proper handling of chunk data and data
added session storage context constants and action management in BrowserSessionStorage and DuoSecurityMultifactorWebflowConfigurer to enhance session management
add test to verify that schema validation be work
added a default constructor to TypeAdapter and modified annotations in Java17RecordTest and ReflectionAccessTest to disable the test until record support is added
improve handling of suspension in debugger . kill ( ) .
refactor AntPathRequestMatcher class for improved clarity to enhance maintainability and readability of the code
refactor create resource policy method to remove unnecessary parameters to improve code readability and maintainability
added a null check before releasing the deflater entry in GzipHttpOutputInterceptor . java to prevent potential NullPointerExceptions when _ deflaterEntry
added JUnit ' s AfterEach annotation to ReactorCoreAutoConfigurationTests to ensure tests run after each test execution
updated MD5 computation to use Normalizer for normalization in CheckSum to ensure consistent MD5 formatting by removing unknown unicode characters
refactor command handling in Example . java for improved clarity and consistency to enhance code readability and maintainability by consolidating command checks
changed the ProfilerKeyListener field to be final and added multiple @ Override annotations in BasicProfilerState . java and BaseAppState . java to
updated the type of ` objectToSave ` from ` T ` to ` DBObject ` and added a new test for saving JSON strings correctly
added logic to handle multiple remote addresses in RequestUtils and created a corresponding test in RequestUtilsTest to improve handling of multiple remote addresses and ensure
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` in ` JsLibrary . java ` and updated the
replaced ` InetAddress . getLocalHost ( ) . getHostAddress ( ) ` with a static method ` getAddr ( ) ` in ` Cookie
refactor glyph wrapping logic in GlyphLayout . java and add a new test case in BitmapFontTest . java to improve code clarity and
added pauseOrResumeSplits method to PulsarSourceReaderBase and PulsarPartitionSplitReaderBase to support multiple split pa
added a new configuration variable for the Hive script operator ' s ID in HiveConf . java and updated ScriptOperator . java to use it to
refactor the getListedTermCounts method to use a stream - based approach for sorting term counts based on the facet _ sort parameter to improve
added a new file ` UseSeparateStepSizeAction . java ` to implement a menu item for usingSeparateStepSize to enhance user
added user ID handling and refactored unlock action handling in FileMenuFilter . java to improve user management and ensure proper action visibility based on
hbase - 15836 roundrobintableinputformat . parse ( ) should return empty list instead of null
updated HttpClientRequestAdapter to set sampled headers to " 0 " and " true " instead of " false " and " true " respectively to ensure
pdfbox - 4892 : use ioutils . closeclose instead of manual null check
updated GwtApplication and GwtGraphics to improve fullscreen handling and display modes to enhance user experience by enabling fullscreen mode management and
updated WebfingerIssuerService to use URI instead of String for issuers and introduced a new WebfingerIssuerFetcher class to enhance type
add a new test class SoulApacheDubboClientConfigurationTest for testing Dubbo configuration to ensure that the Dubbo
updated asset resolution method from ` Gdx . files . internal ( ) ` to ` resolve ( fileName ) ` in ` SkinLoader .
updated logging level from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
replaced calls to PMS . REALTIME _ LOCK . lock ( ) with PMS . REALTIME _ LOCK . lockInterrupt
changed the package declaration of the class from ` java . lang ` to ` java . lang . compiler ` to ensure the correct package declaration is
added exception handling logic to NullDerefAndRedundantComparisonFinder . java to improve error reporting for redundant method calls
refactor DashRendererBuilder to use DefaultHttpDataSource for ManifestFetcher and update method signatures accordingly to improve code clarity and maintainability by
added a new configuration property EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION to manage the maximum number of
changed the return type of the ` set ` method from ` WritableConfig ` to ` Configuration ` across multiple classes to align the method signature with
removed the checkErr method from the AutoScalingHandler class to streamline error handling for command operations
refactor CombinedDataset class for improved readability to enhance maintainability and clarity of the codebase
replaced the use of a fixed - size byte array with a fixed - size byte array in the read method to improve performance by avoiding
added methods to remove cryptography restrictions in the Utilities class to ensure proper management of cryptography security policies
added a check for cancellation in the moveToNether method and modified teleporting logic in the Entity class to ensure proper handling of movement events and
added a new test method ` testPageMarginsLongTextTransform ` to the ` TextVisualRegressionTest ` class to ensure that the long
replaced the initialization of ` vContext ` with a null check before retrieving it in ` Vectorizer . java ` to ensure that ` v
[ wialon ] fix wialon speed parse error ( # 2696 )
hbase - 25711 enable metric user by default ( addendum )
added an ` isEmpty ( ) ` method to ` JsonObject ` and a corresponding test in ` JsonObjectTest ` to provide a way to check if
initialize mUserPresent , mVisible , and mAttached variables to true and conditionally unregistering the receiver to ensure that the receiver is only
refactor AsyncFile , HttpClientRequest , HttpClientResponse , and ReadStream classes to improve code organization and maintainability
added parameters to the zadd method call in PipelineBase . java to enhance the method ' s functionality to include additional parameters
( chore ) camel - dspace : fix checkstyle violation
renamed TestAsyncMessages class to TestAsyncMessagesPerformance to clarify the purpose of the test class for performance testing
refactor VersionedTargetGraphBuilder to improve handling of optional targets and implement HasTests interface in VersionPropagatorBuilder to enhance code clarity and
replaced constant EPOCH _ SECONDS _ HIGH and EPOCH _ SECONDS _ LOW with a predefined value of 31 _ 556 _ 8
updated the return value in EscherBlipRecord . java and added a new test class TestOLE2Embeding . java to ensure
removed initialization of row and column variables in JSONParser . java to streamline the code by eliminating unnecessary variables
replaced instances of ` JavaType . ShallowClass . build ` with ` Pattern . compile ` in ` FindTypes . java ` and
added functionality to retrieve and display local trailer information in the BaseItemDetailsFragment to enhance user experience by allowing users to play and manage local trailer
added a method to remove glyph information from the cache in CStrike . java and implemented it in CStrikeDisposer . java to
fix : terminateendeventactivitybehavior and terminateendeventactivitybehavior do not terminate scope execution
camel - 13654 : camel - core - xml should use the @ xmlrootelement annotation to retrieve the name of the xml element
updated the endpoint check from " http : / / www . apereo . org / scottb . html " to " https :
add ` ` prdef ' ' option to reset all preference to default
changed access modifiers of several fields and methods from private to protected in ThriftMetrics and ThriftServer classes to enhance encapsulation and restrict access to these
[ danfossairunit ] remove deprecate channel manual _ fan _ speed
use hamcrest assertion instead of junit in integration test
removed duplicate code for stopping the expansionHelper in TweetActivity . java to streamline the code by eliminating redundancy
added null check and equals and hashCode methods in PartitionPanel and PartitionFactory classes to ensure proper handling of null values and improve object comparison and hashing
server : set root disk size to default value if not specify in vm config
updated visibility logic in PredictionRowView based on user preferences to enhance user experience by enabling suggest apps based on user preferences
[ geos - 8470 ] apibboxparser . tofilter ( bbox , crs ) should return filter . include if bbox be empty or
added validation methods for value and position parameters in LibrustzcashParam . java to ensure values and positions are non - negative and
moved IThrowableEntity to FML cpw . mods . fml . common . registry . IThrowableEntity to mark the class as
added random values for x and y in NodeDataImpl . java to generate random values for improved data representation
renamed the method ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test method ` validateRefreshToken _ should
refactor javac invocation handling to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to release a new version of the application
added a condition to check for DEEP _ SHORTCUT item type in LoaderCursor . java to ensure proper handling of deeps shortcut items
added a hashCode ( ) method to the TimeGranularitySpec class to ensure proper hashing behavior for different data types
changed visibility of BooleanWeight and DisjunctionMaxWeight classes from private to protected in BooleanQuery and DisjunctionMaxQuery classes to allow subclasses to
added a boolean flag ` useProxyResponseCode ` to control the use of NTLM proxy behavior to ensure proper handling of NTLM
fix aarch64 move to use aarch64 . sp instead of aarch64 . sp
server : return reserve and used vm ' s ram size if host be down
added a condition to check if ` docs . getMaxScore ( ) ` is not null before including the score in JSONResponseWriter to ensure that
updated the audio recoder ID from 22050 to 44100 in AudioRecorderTest . java to align the audio recoder with the latest
updated the calculation of newOriginX in RocketFigure . java to adjust the origin based on subject bounds to ensure the new origin is
added null and empty check for Druid data source in DruidQueryBasedInputFormat . java to ensure proper error handling for empty or null
added ` ORIGINAL _ TYPE ` to the ` CustomProperty ` class and modified the pattern pattern in the ` CustomPropertyTest ` to
added a static method create ( Table parent , Map < String , Object > data ) to the Index class to provide a factory method for creating
simplified the condition for checking boundary period in the return statement to improve code readability and maintainability
updated SchemaCompatibility to include index handling and added new test cases for incompatibility messages to enhance schema compatibility checks and ensure correct error messages are returned
added support for handling multiple persistent attribute types in QueryUtils . java to enhance association handling and improve query performance
added synchronization to the spans list in TestSpanHandler . java to ensure thread safety during concurrent access to the spans list
updated method signatures to use List < ? > instead of Object and List < ? > in multiple classes to enhance type safety and clarity in
updated exception handling to include InvocationTargetException and improved logging messages to enhance error handling clarity and provide more informative logging for authentication failures
refactor OAuth2AccessTokenEntity class to improve code readability to enhance maintainability and facilitate future updates
updated error messages in SCBEngine and related classes to clarify that requests are rejected due to status = DOWN to improve user understanding
added iOS resource files for Default - 1024w - 1366h in GdxSetup . java to ensure compatibility with iOS ' s resource
added ConcurrentMergeScheduler to the MockAnalyzer configuration in TestSearcherManager . java to optimize indexing operations by using a concurrent merge scheduler
added a condition to check the return value of SessionState and improved list handling in GenericUDTFInline to enhance code robustness and
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
simonstewart : make sure we do n ' t swallow the event in the spreadsheet key listener .
added handling for persistence and session factory services in HibernateBundleActivator and updated test cases in OsgiTestCase to improve service management and
update timeout calculation in HikariPool . java to use connectionTimeout instead of elapsedTimeMs to ensure accurate timeout calculation for connection timeouts
refactor component file creation logic in VoiceCompiler . java to utilize non - packaged resources to improve clarity and maintainability of the
updated file name handling and improved file existence checks in Compat . java and FileOpener . java to enhance file handling accuracy and ensure
changed the return type of the ` row ( ) ` method from ` Cell < T > ` to ` void ` to allow the method to
improve error message when -- p2p - port = xxx and -- p2p - port = xxx be specify multiple time (
added nullMask functionality to WebSocketClient and modified WebSocketConnectionD12 to use FixedMaskGen to enhance mask generation flexibility for WebSocket connections
refactor ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of a ` Rel
added node selection statistics tracking for bucketed and non - bucketed nodes in NodeScheduler and TopologyAwareNodeSelector classes to improve tracking of selected
added a new class Person with a name property and its getter / setter methods to provide a structured way to store and retrieve the name of a
added a boolean variable ` hasOwnerPtr ` to track the presence of an owner pointer and modified the execution logic to improve code clarity and
added clock functionality and animation handling in PlaybackOverlayFragment to enhance user experience by providing visual feedback during playback transitions
remove unnecessary call to world . updatecomparatoroutputlevel , it be already call in block . updatecomparatoroutputlevel
updated the access modifier of IMPL from private static final to private static and improved error handling for SegmentReader class loading to enhance code cl
added SwingUtilities . invokeLater for firing cell updated events in Sudoku . java to ensure UI updates are executed on the UI thread
replaced instances of ` DefaultInetAddressAdapter ` with ` INET _ ADDRESS _ FACTORY ` in ` DefaultTypeAdapters `
added methods for handling double , long , boolean , string , and null values in Series . java and corresponding tests in DataFrameTest . java to
updated the option for audio time stretch from " -- no - audio - time - stretch " to " -- audio - time - stretch " to
updated boundary conditions in GeoRelationUtils and GeoUtils to use ` < = = lon ` and ` - = lat ` instead of ` <
server : fix npe in getvirtualmachinefromvirtualmachine ( ) when the service offering do not have a disk offering ( #
added cleanup method to HazelcastTest class to ensure proper resource management and cleanup after tests
added tests for the " NoPadding " cipher algorithm in BlockCipherTest . java to ensure that the " BC " algorithm returns appropriate exceptions for
added logging filters for operation operations in QFileClient . java to enhance visibility into operation logging for better debugging
fix beandefinitioninjectprocessor to correctly process type argument .
set currentconnectionaddress to proxySocketAddress if it ' s null to avoid npe .
replaced Math . addExact with MathUtils . cappedAdd in WebSocketConnection . java to improve performance by utilizing cappedAdd for
refactor image output stream handling to use try - with - resources for better resource management to ensure proper resource management and avoid NullPointerExceptions
refactor search functionality by replacing TvApp . getApplication ( ) . showSearch ( ) with startActivity ( SearchActivity ) across multiple classes
refactor SchemaCrawlerCommandLine and GrepOptions to remove unnecessary ' this ' keyword and improve readability to enhance code clarity and maintainability
http : / / code . google . com / p / mybatis / issues / detail ? id = 61616 activemq
added an @ Autowired annotation to PersonRepository in RepositoryIndexCreationIntegrationTests . java to facilitate dependency injection for PersonRepository
updated the stop method signature from Exception to InterruptedException in UIServer . java and adjusted logging message in TestVertxUIManual . java
added support for various cactus block types in BlockCactus . java to enhance functionality to support additional cactus types in the
refactor mouse event handling in ThemeSelector . java to utilize MouseMotionAdapter to improve mouse interaction responsiveness and maintainability
added a new abstract class AbstractMinMulticastFlowControlRhsPadding and refactored the AbstractMinMulticastFlowControlFields class to
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation . java and IOSNative . java to enhance flexibility
modified the StatTokSentAnnotator constructor to throw IllegalArgumentException instead of Exception and modified null checks for modelFile and multiWordRulesFile to improve
added a condition to check if the query is a distinct query before processing group columns in ClusterIntegrationTestUtils and modified QueryGenerator to handle distinct
[ gr - 23254 ] add optionparser . stringsimilarity ( ) to get the best linkage .
fix checkstyle issue in gui / util / textarea . properties file
added null check for children before iterating to avoid potential NullPointerException when children is null
added tokenPosition and currentPosition variables to MessagePackParser and improved error handling in MessagePackParserTest to enhance code clarity and ensure proper
set the default locale to english in AbstractSolrMorphlineTestBase to ensure consistent testing across different locales
removed conditional checks for launcher status bar size in LauncherFragment . java to streamline code logic for better readability and maintainability
added unit tests for the MetricsReporter class to ensure proper functionality and error handling of metric registration
( chore ) camel - osgi : remove unused import
added ` equals ` and ` hashCode ` methods to the ` Rectangle ` class to ensure proper comparison and hashing behavior for rectangle instances
[ hotfix ] [ test ] use random name for sink list in streamkafkapptest
refactor DSAParameterGenerator to simplify conditional checks and improve readability to enhance code clarity and maintainability by reducing redundancy
added LLAP _ DAEMON _ AM _ USE _ FQDN configuration and modified LlapBaseInputFormat and LlapTaskComm
fix clientoutofmemoryhandlertest . testclientoutofmemory ( ) ( # 11936 )
added a method to get the CmoObjectId for shape IDs and updated related classes to use it to ensure consistent object ID handling across shape classes
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the functionality of a distinct query
refactor Driver , SearchTravRetLoadFieldSelectorTask , and SearchTravTask classes to improve code organization and maintainability
fix : remove bindextensionadapter and unbindextensionadapter from managedkubernetesclient
updated subtitle text to use a new utility method in DetailsDescriptionPresenter and added a new utility method in Utils to improve clarity and functionality of
updated JUnit imports and annotations from ` @ Before ` and ` @ After ` to ` @ BeforeEach ` and ` @ AfterEach `
added error handling for summary generation in BugCollectionBugReporter and XMLBugReporter to improve robustness by logging exceptions when generating summary HTML
removed unnecessary parameters from reset method calls in TermsHash . java to streamline the reset process by eliminating unnecessary parameters
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code clarity
updated API version check from S _ V2 to TIRAMISU and added a new WindowSessionDelegateU class to improve compatibility with
added a condition to check if the scheme is not the same as the request scheme in UrlHelper . java to ensure proper handling of non -
added support for MSSQLDatabase in foreign key constraint generation to ensure compatibility with MSSQL database operations
hbase - 2649 fix checkstyle violation in hbase - client
add filtereventhandler to handle pipe side check for emzuli pipe
danielwagnerhall : add a logging option to htmlidentifier to make it easy to turn on / off
updated method calls from ` getProducedTableSchema ( ) . getFieldDataTypes ( ) ` to ` getTableSchema ( ) . getFieldData
fix crash when use wrong thread in exoplayer
updated SQL query to use CatalogAndSchema for schema name retrieval to ensure compatibility with Liquibase ' s custom schema configuration
updated color scaling in SpriteBatch , SpriteCache , and modified GdxTest initialization in LwjglDebugStarter to improve
fixed - redissonconnection . tocompletablefuture ( ) . join ( ) method can throw classcastexception . # 3550
added a base URL replacement for HTTP and HTTPS in SolrLoggerServiceImpl . java to ensure accurate tracking of Solr version usage
updated method names and variable types in TaskActionController and TaskAdapter to improve clarity and consistency to enhance code readability and maintainability by
refactor MorfologikFilter to use DictionaryHolder for dictionary loading and update related imports to improve code clarity and maintainability by
updated sorting options from " CommunityRating " and " CriticRating " to " lbl _ community _ rating " and " lbl _
added imports for ViewKt and ListRow , and modified the visibility condition for ListRow in CustomListRowPresenter . java to enhance the
refactor switch - case structure in StressAction . java to improve readability and ensure proper resource management to enhance code clarity and ensure
refactor HttpClient class to improve code readability to enhance maintainability and facilitate future updates
replaced instances of ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in multiple files to ensure compatibility with DB2 database
[ jsr310 ] add javatimemodule support to standardjavascriptserializer
replaced org . apache . log4j . MDC with org . slf4j . MDC in LogUtils . java to
replaced TypeBearer with Type in PhiTypeResolver . java to simplify type handling and improve code clarity
removed unnecessary import statements and formatted the CoinbaseTransactionStatusDeserializer class to improve code readability and maintainability
added a method to retrieve build targets from a section and key in BuckConfig . java and modified the build logic in ProjectCommand . java
replaced the initialization of BusySpinIdleStrategy with a call to System . gc ( ) to ensure proper garbage collection and prevent potential
updated ` ContentProvider ` to ` ContentResolver ` in ` OCFile ` and related classes to enhance content resolution capabilities and improve code cl
removed unnecessary state change checks for checkboxes in ReportPanel . java to simplify the code for better readability and maintainability
[ hotfix ] [ runtime ] add null check for slotowner in testinglogicalslot
added a new class ` RemoveCallsToSystemGc ` to remove calls to ` System . gc ( ) ` and ` Runtime . gc
removed unnecessary super ( ) calls from various exception classes to streamline code by eliminating unnecessary super ( ) calls
added a method to set the UIID in the ScaleImageLabel class to ensure the correct UIID is used for setting the icon
replaced ` foundEntry ` with ` update ` in ` FeedUpdateService . java ` to improve clarity by using a more descriptive
added support for " - cp " command - line argument in the Main class to enhance flexibility by allowing additional command - line options
updated the compiler parameter from options to compiler in avutil . java to ensure compatibility with the latest compiler features
set the initialized variable to true in StorageService . java to ensure the service is properly initialized before use
updated Test7196045 . java to improve test coverage to enhance reliability of test cases
updated density and decay values in ShaderParametersLightShaft . java from 1.5 f to 1.0 f and 0.95
added ` withState ` and ` stateData ` fields to ` OidcConfiguration ` and modified related methods in ` OidcRedirectActionBuilder
updated unique constraint handling in BaseTableDdl to support nullable constraints and improved null checks to enhance unique constraint flexibility and ensure proper handling
added federated sharing capability checks in UsersAndGroupsSearchProvider and modified file folder checks in EditShareFragment to enhance user experience by allowing fed
added a method ` needsDocValues ( ) ` to the ` TestBBoxStrategy ` class to determine if document values need to be included in
refactor BufferAlignmentAgent and BufferAlignmentInterceptor to improve error handling and clarity to enhance code readability and maintainability by standardizing exception
added a new method ` intForEach ` in ` Int2ObjectHashMap ` and modified ` IntObjConsumer ` in ` IntObjConsumer
fix map storage share scoreboards early ( # 96499 )
changed return type of count methods from Long to long in multiple repository classes to accommodate larger count values for better performance
updated MManager . java to adjust log creation conditions for MTree snapshot creation to ensure MTree snapshot is only created if the time difference is
update dotProductScore calculation and test cases in VectorUtil and TestVectorUtil classes to improve accuracy of dot product scores and enhance test coverage for
added IRREVERSIBLE _ THRESHOLD configuration and methods to manage the latest confirmed block number in DynamicPropertiesStore to allow dynamic configuration of the
replaced the setLocale method with a call to Systems . setLocale in GpsMainActivity and MainPreferenceActivity to streamline locale setting process and
added a check for new database creation in ` LauncherClings . java ` and modified the logic in ` LauncherProvider . java `
refactor BasicAclEntryAfterInvocationCollectionFilteringProvider to improve clarity and structure to enhance code readability and maintainability by encapsulating collection
reordered conditional checks for ` datamodel ` and ` OS _ ARCH ` in ` Constants . java ` to improve code readability and
added a check to ensure the current thread is the same as the current thread in TestIndexWriterDelete . java to avoid unnecessary processing when the
changed the visibility of the closeDatabase method from private to protected to restrict access to the method for better encapsulation
updated imports and method calls to use ` ModelCompat . asSdk ` instead of ` apiclient . model . dto . BaseItemPerson
added functionality to import SVG attributes from the document in BatikSVGDrawer to ensure proper handling of SVG attributes in the document
added a try - catch block to handle IllegalArgumentException in ConsoleKeys . java to ensure proper logging of user configuration when parsing fails
added handling for " WaitForResult " extra in AndroidImplementation and CodenameOneActivity to ensure that " WaitForResult " is only set when
modified the ` HitQueue ` , ` SpanPositionQueue ` , and ` PriorityQueue ` classes to use a ` Supplier < T >
added a new field ` mWidgetDescription ` and updated related logic in ` WidgetCell . java ` to manage widget descriptions to enhance user interface
added a maximum attribute count check in the registration process to ensure that the number of registered attribute types does not exceed a defined limit to prevent runtime
change package name of predicatestest to match class name
camel - 14850 : camel - core - add case - insensitivity option to headerfilterstrategy to allow header name to be filter
updated inline alignment logic and improved string break handling in InlineLayout and Breaker classes to enhance code clarity and ensure proper handling of space
added nullability annotations and improved view inflation logic in ShareUserListAdapter . java to enhance code robustness and prevent potential NullPointerExceptions
refactored setup . shouldinstrument to remove dependency on android . support . v4
added a condition to return the last column in the table if the destination is inserted before the source to ensure that the correct column index is returned
updated memory limit file path retrieval in CmdModifierTest . java to ensure compatibility with different Docker versions for memory limiting
replace ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE ` in ` AbstractCxxDeps ` and
added a null check for the rule in JavaTestRule . java to ensure that a specific source under test is not among its dependencies to avoid
add support for mc 1.10 . 2 and 1.10 . 1 to the crossversionproxy .
added a check to ensure atIndex is non - negative to prevent index out of range errors during string processing
increased timeout duration from 100ms to 500ms in BuckBlockJUnit4ClassRunner and adjusted sleep duration in Thread . sleep
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to improve flexibility in handling assist content requests
updated the handling of the witness address in VoteWitnessProcessor . java to ensure proper encoding of the witness address to avoid potential issues with malicious
updated DefaultMethodRegressionTests . java to improve test coverage to enhance reliability of method regression tests
refactor WorkloadManagerMxBean class for improved clarity to enhance maintainability and readability of the code
replaced ` KafkaProducerException ` with ` KafkaException ` in ` KafkaOutboundAdapterParserTests . java ` to ensure compatibility with the latest
added a call to close the container loader in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and corresponding tests in FaultTolerantExceptionClassesTests and FatalRuntimeExceptionClassesTests to
[ hotfix ] [ test ] improve error message in configbuilder
added extraProperties parameter to applyTunerConfigs method across multiple classes to enhance tuner configuration flexibility by allowing additional properties
added handling for in - progress instances in the PinotRealtimeSegmentsManager class to ensure only valid instances are added to the list of segments
added a condition to return null if touchable is disabled to ensure proper handling of disabled touch scenarios
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure
throw a retryablehazelcastexception if the cache config for a cache name have not be create yet
refactor module installation logic in JSweetTranspiler and ProcessUtil to improve clarity and functionality to enhance the reliability of module installation
added MBeanContainer and Destroyable annotations to MBeanContainer and Destroyable classes to enhance MBean management capabilities for better component management
modified the conditional statement to check for ` false ` instead of ` settings . inAppBrowser ` to simplify the conditional logic for better readability
updated string comparisons in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` ` equals ' ' method
updated isReifiable check in mmm Types . java and added new classes T6558559a and T6558559
updated player print statements to reflect new player position settings to improve clarity and accuracy of position logging for better debugging
( chore ) camel - kafka : fix thread leak in kafka consumer
removed the default implementation of the examples ( ) method in Schema . java to simplify the code by eliminating unnecessary default implementation
refactor thread handling in AgentRunner . java to improve clarity and control flow to enhance code readability and ensure proper thread interruption
removed the time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure proper handling of time columns in data source
simplified the condition for shard validation in FacetComponent . java to improve code readability and maintainability
replaced LinkerProvider usage with CxxPlatforms . getParseTimeDeps in RustBinaryDescription and RustLibraryDescription to stream
added a ` name ` property with getter and setter methods to ` JdbcAuthenticationProperties ` , ` AbstractLdapProperties ` , and ` Ntl
added debug print statements and improved exception handling in CFGPrinterObserver and IdealGraphPrinterDumpHandler to enhance debugging capabilities and provide clearer
refactor small scan logic to utilize a configurable threshold instead of a hardcoded value to enhance flexibility in small scan behavior based on point
added " routeId " to the return statement in RetryGatewayFilterFactory . java to provide more context about the retry configuration for better debugging and
replaced ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java ` to improve
replaced ` onOverviewShown ` methods with ` showForOverviewIfNeeded ` and added delay handling in ` DiscoveryBounce ` to improve handling
refactor null checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex . java and add a new test method for
updated the publish method call to use updateLastState instead of true to improve clarity and functionality of the state publishing process
updated SQL string concatenation syntax in MetastoreDirectSqlUtils . java to improve readability and maintainability of the code
removed the addition of a null element to exp in SpliteratorCollisions . java to simplify the code by eliminating unnecessary operations
danielwagnerhall : add textcaseinsensitivity and textcaseinsensitivity to the condition class .
removed unnecessary do - while loops in ManyToManyConcurrentArrayQueue . java to improve code readability and maintainability
# 174 - enh : add forward - only fetch size support to ormqueryrequest
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to prevent sending 404 back to the client when the channel is already closed
pdfbox - 4892 : initialize pdobjects with the size of beads , a suggest by valerybokov
added support for rounded corners on window in QuickstepAppTransitionManagerImpl . java to ensure proper window radius initialization based on device support
replaced ` mBackground ` with ` mBackgroundView ` and updated background handling in ` DesktopTaskView . java ` to improve background
added a new UpstreamCheckService instance and initialized it in UpstreamCheckServiceTest . java to ensure proper initialization of the upstreamCheckService
removed warning log statements from session logging in AbstractSession and AbstractSessionManager classes to simplify logging behavior for better readability and maintainability
replaced error logging with a return statement in ZooKeeperHiveLockManager . java to simplify error handling and improve code clarity
[ hotfix ] [ javadocs ] fix typo in javadoc
added a check for custom data before generating mipmaps in FileTextureArrayData . java to ensure that mipmaps are only generated when
updated assertions in DefaultMaskingFormatterTest to use single quotes for secretKey and refreshtoken to ensure consistency and correctness in string representation
added selectable property and methods to manage selection state in the List class to ensure touch events are not eat touch events when not selectable
added a check to return false if the first field vector value count is zero in LlapArrowBatchRecordReader . java to ensure proper handling
updated the file separator expansion logic in PolicyContext . java and added logging statements in TestPolicyContext . java to improve code clarity and enhance
replaced Set with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance by using a list instead of a set for
refactor TLS restriction handling in TLSRestrictions . java to improve code clarity and maintainability
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 588 : kafka
updated assertNodeStateProvider method to include an ignorableNodeValues parameter and modified its implementation to improve node state management by removing ignorable node
added a check to delete the LOCK file if it exists before deleting it to ensure that the lock file is deleted only if it does not already
updated MiniZooKeeperCluster to use InetSocketAddress for client port creation to ensure consistent client port handling across the cluster
added a new method ` getResponse ` to the ` RestClient ` class and modified exception handling in the ` getResponse ` method to improve response handling
updated the parameter list from ` segmentURIs . toString ( ) ` to ` segmentTarURIStrs . toArray ( new String [ 0 ]
updated loginStudent method calls to use TEST _ STUDENT1 _ PASSWORD instead of TEST _ STUDENT2 _ ACCOUNT to ensure
added null checks for mCurrentItem in EnhancedBrowseFragment and StdBrowseFragment to ensure robustness by preventing potential NullPointerExceptions
increased the number of strings from 500 to 100 in TestSpecialOperations . java to optimize resource usage for better performance
replaced the existing ByteArrayInStream implementation with a new implementation that initializes a byte array to simplify the code and improve performance by eliminating
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` in ` MockitoMessageMatchers . java ` to improve clarity
added a check for direct substates in AbstractStateMachine to ensure proper handling of substates during transitions
added type checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure correct equality
added the JoinOperation interface to the PostJoinOperation class to enhance functionality by allowing the PostJoinOperation to implement join operations
added a new test method ` testDataIssue258 ` to ` AdditionalPostgreSQLTest . java ` to verify the functionality of the PostgreSQL
http : / / issues . apache . org / jira / browse / amq - 5035 - fix test failure
refactor AvaticaDatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
replaced integer constants for lifeTime , idleTime , and maxWaitTime with String constants in MongoDbConnectionPoolProperties and MongoDbConnectionFactory to
fix ( sip ) : use sip activator ' s media factory instead of null
refactor filter handling methods to return a boolean indicating applied filters to improve clarity and control over filter applied behavior
[ hotfix ] [ shuffle ] add timeout handler to channel pipeline .
replaced hardcoded value of - 1 with a constant QUICKSTEP _ ROTATION _ UNINITIALIZED in OrientationTouchTransformer .
camel - 14284 : deprecate xquerybuilder . evaluateaslist ( ) and xquerybuilder . evaluateasbytessource ( )
replaced direct resource loading with DataResource import in NNDataSet . java to improve code clarity and maintainability by using a more modern
pmd : add unit test for edgecasestokenizer ( # 1751 )
added a null check for the ' atlas ' property in AtlasTmxMapLoader . java to ensure that a missing ' atlas ' property is
camel - 14850 : camel - core - remove propertyplaceholders from defaultcomponent . thanks to jesus camacho ro
added a call to close the database in BlockchainTest . java and removed unnecessary receive listeners in KafkaTest . java to improve resource management and
refactor CoreMarkdownNodeRenderer to use a new method for retrieving lines from a string to improve code readability and maintainability by centralizing
removed unused import statements from WebServiceInboundGatewayParserTests . java to clean up the code and improve readability
replaced ` ImmutableList . Builder ` with ` List ` for argument handling and added logging for deprecated constructors in ` SQLBindings ` to improve code
added a check for the Java VM name in addition to " OpenJDK " to ensure compatibility with OpenJDK environments
http : / / issues . apache . org / jira / browse / amq - 4892 - add keepalive option to reactorclient
replaced string literals with constants from ShaderProgram in MD5Renderer . java and ObjLoader . java to improve code readability and maintain
camel - 14284 : camel - jbang - allow to use the property component from the registry instead of a hardcoded one .
refactor account retrieval logic in UnfreezeBalanceActuator . java to improve clarity and ensure null safety when accessing AccountCapsule
updated the version number from 3.8 , 0 to 3.8 , 1 to reflect the new alpha release status for the server
replaced calls to ` t ` with ` t . unannotatedType ( ) ` in multiple locations to ensure correct handling of unannot
updated assertions and configuration settings in StorageGroupProcessorTest . java to ensure correct handling of sequence TsFile file sizes during testing
updated class names and import statements to reflect the new Jetty EE10 environment structure to ensure compatibility with the latest Jetty EE10
added a waitbeforestart parameter to FFMpegVideo . java to allow for a longer wait before starting of the video process
removed the ' skipCorrupt ' parameter from the OrcEncodedDataConsumer constructor and related classes to simplify the code by eliminating unnecessary skip
refactor tests in AccessorsTest . java for improved clarity and organization to enhance maintainability and readability of the test cases
added a new method ` compileMethod ` to ` GraalCompiler ` and a getter method ` frameMap ` in ` LIRGenerator `
updated JUnit test imports and annotations in DynamoDbTicketRegistryTests , BaseAuthenticationRequestRiskCalculatorTests , and BaseAuthenticationRequestR
adjust boat ' s y - coordinate when target be of type blockwater
updated the ` toString ( ) ` method in ` Directory ` and added ` getLockID ( ) ` method in ` RAMDirectory ` to improve
removed the ` allowExperimentalOptions ( ) ` method from the ` Launcher ` class to simplify the code by eliminating unnecessary method
added two static methods ` then ` and ` then ` to ` BDDAssertions ` for path assertions to enhance flexibility in asserting
rename variable ` hp ` to ` hostField ` for clarity to improve code readability by using a more descriptive variable name
updated logging level from debug to warn for multiple Kubernetes config files and improved logging message formatting for better clarity to enhance user experience by providing
added handling for file upload status in UploadListActivity to enhance user experience by providing user feedback during file uploads
added a new ` ProviderLoader ` class and refactored ` TerminalManager ` to utilize it to improve the handling of crypto provider installation
replaced ` Span ` references with ` TraceMessageHeaders ` in ` StreamEnvironmentPostProcessor ` and related tests to utilize the new library
updated the SelectFromDatabaseChangeLogStatement to use a computed column configuration instead of a hardcoded list to enhance flexibility by allowing dynamic column
hhh - 14850 - postgresql dialect should return the current _ schema ( ) instead of sys . dummy
fix partition count calculation when data member size be zero
added scheduler state checks and improved error handling in ExecutionScheduleManager and ExecutionSchedulerImpl classes to ensure proper scheduler state management and provide clearer
removed the ` toString ( ) ` method call from the ` InlineBox ` constructor and simplified the conditional check in ` BoxBuilder . java `
updated string concatenation in the checkArgument statements for consistency to improve readability and maintainability of the code
changed the return value from 383 to 500 in TabletSplitToConfirmTimings . java to adjust the slide end value to accommodate
updated button strings to use localized strings in WaveInfoDialog and PlacementFragment to improve localization support and maintain consistency across the application
updated conditional check in BukkitMain . java to include plotArea ' s own plot absolute retrieval to ensure proper handling of plot area components
added a test for enabling and disabling touch exploration in ShadowAccessibilityManagerTest and modified listener handling in ShadowAccessibilityManager to
pdfbox - 5328 : fix indexoutofboundsexception , a suggest by valerybokov
bug fix : use testelement . getname instead of testelement . getpropertyasstring
replaced instantiation of NPOIFSFileSystem with POIFSFileSystem . create ( big ) in TestNPOIFSFileSystem . java
added null check and calculation for plot area in Move . java to ensure robustness by handling cases where the plot area is not available
updated the regex pattern for version matching in TestWebHCatE2e . java to ensure accurate validation of the version string format
updated the condition to check for count to be less than or equal to 1 to ensure that count is greater than or equal to the number of
fix ( kafka ) : add client id to property for consumer thread
added error handling for non - successful javac execution in JavacCompiler . java to improve robustness by throwing an exception when the jav
ggb - 1186 repaint view only when necessary
camel - 14263 : camel - spring - batch - do not throw npe if header be null .
added a method ` isAnimationFinished ` to check if an animation has finished to provide a way to check if an animation has finished based on
updated import statements and added a new test for custom fav icon with line breaks in LoginMockMvcTests . java to improve code clarity and
added null check for ` otherUrl ` before comparing it with an empty string in ` TimeLineCursorAdapter . java ` to prevent potential NullPointerException
modify stopEditing method to replace " space " characters with " space " in string replacements to ensure proper handling of special characters in input strings
refactor ObjectHashSet class implementation to improve performance and maintainability of the code
refactor null checks and comparison logic in DataUtilities . java for improved clarity and efficiency to enhance code readability and maintainability by
fix nbt data , allow for deletion of enchanted books ( mc - 12770 )
add unit test for async resource endpoint ( # 2329 )
rename target - flat - headers . hmap to target - user - headers . hmap for clarity
added error handling and logging for failed mail sending in MailService . java to improve debugging and provide clearer error messages for failed messages
replaced ` resetTaskItemView ( ) ` method with ` resetToEmptyUi ( ) ` in ` TaskHolder . java ` and
added unit tests for the ` getPartitionsByNames ` method in ` TestHiveMetaStoreClientApiArgumentsChecker ` to ensure correct behavior
added a closing brace to the FileListListAdapter class to improve code readability and maintain consistent formatting
changed the type of ` sharees ` from ` ArrayList ` to ` List ` in ` OCFile ` and ` OCFileListAdapter
updated child index from 1 to getChildCount ( ) - 2 in BubbleBarView . java to correct the positioning of the BubbleBar
removed unnecessary imports from JavaxWebSocketConfiguration and JettyWebSocketConfiguration to streamline code by eliminating unnecessary dependencies
updated the boolean parameter in the S3Request constructor from true to false to align the constructor with the intended use of the new boolean value
jfxradiobutton : do n ' t call updateanimation ( ) if timeline be null
updated the condition for parsing DeweyNumber from checking if splits length is zero to checking if the deweyNumberString is a valid
refactor category set string handling in MwVolleyApi . java to improve readability and maintainability of the code
corrected the spelling of " Invalid close control status code 1111 " to " Invalid close code 1111 " to improve clarity and
added null check for classLoader in WebappLoader and updated expected repos length in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to
removed duplicate code for adding inherited persistent fields in PersistentAttributeTransformer . java to streamline the code for better readability and maintainability
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a new test class TestPorterStemFilter for testing the PorterStemFilter functionality to ensure that the PorterStemFilter operates
added a success parameter to the postBatchMutate method and modified its implementation to conditionally write index updates based on its success status to improve
rename package from ` org . springframework . batch . core . exlore . support ` to ` org . springframework . batch .
fix deadlock in chatwindowmanager . getactivechatpanel ( ) .
removed redundant calls to Sys . touch ( ) in multiple Java files to streamline code and improve readability by eliminating redundancy
updated HgCmdLineInterface and VersionControlCmdLineInterface to include " - mardu " command and removed untrackedFiles method to
camel - 15836 : camel - netty should use a unified timer for read timeout handler . thanks to benjamin
made directional , point , spot , and range fields final in multiple light classes to enforce immutability and ensure immutability of
added calculation for width and height in X11GraphicsConfig and WGLGraphicsConfig classes to ensure minimum dimensions are used for rendering rendering
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a readable string representation
added a new class AnnoFilterTreeSet and a method to find annotated classes with annotations to optimize the filtering of classes based on inner classes
bytescolumnvector : do n ' t throw exception when integer overflow occur
refactor assertion in WriteBehindMapStoreWithEvictionsTest to use assertTrueEventually for better responsiveness to improve test
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in MotifScrollPaneUI and X
implement polyfunction . isequal ( polyfunction ) to check if two polyfunctions have same degree and coefficient
added a null check for the table before retrieving the column class to avoid potential NullPointerExceptions when table is null
added error handling for Class . forName ( ) invocation in CustomChangeWrapper . java to ensure proper instantiation of CustomChange based on class type
refactor DistBuildConfig and related classes to replace ConfigPathGetter with BuckConfig and improve path handling to enhance code clarity and maintain
updated the ` isDoubleEntryEnabled ` method to remove the ` defaultValue ` parameter and adjusted the return value logic in ` GnuCashApplication
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to temporarily disable tests that need to be tracked down and fix
changed the return type of ` doJoin ` methods from ` void ` to ` boolean ` and modified related calls to return ` true ` to
removed the method ` getAutodeps ( ) ` from ` JavaLibraryDescription . java ` to streamline the interface by eliminating
added FLAG _ ACTIVITY _ NEW _ TASK to the intent in LauncherTimelineCursorAdapter . java to ensure that a new task is
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable paging sorting functionality in the query
updated assertions in RepositoryConventionPluginTests to reflect the correct number of repositories to ensure the correct repository URL is used for testing purposes
http : / / issues . apache . org / jira / browse / amq - 4358 - add a new nodetask for
improve error message when tagliburi be invalid
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added handling for arrays in CacheKey and refactored related comparisons in CacheKeyTest to improve performance and maintainability of cache key comparisons
updated file type detector implementations across multiple files to ensure consistent detection of file types across different operating systems
added a call to close the WebSocket session in TestWsWebSocketContainer . java to ensure proper resource management and prevent memory leaks
updated ` ShadowVirtualDeviceManagerTest ` and ` ShadowVirtualDeviceManager ` to directly access ` VirtualSensorCallback ` and ` VirtualSensorDirect
added a condition to check if the session context is not removed from the session if it was previously set to ensure that the session context is not
replaced the variable ` lch ` with ` loopback ` and updated the address retrieval logic in ` NetUtil . java ` to improve cl
rename BUF _ SIZE to DEFAULT _ BUF _ SIZE and update related buffer initialization to improve clarity and maintain consistency in variable naming
added secure validation and improved exception handling in KeyInfoReferenceResolver , XMLSignatureInput , TransformXPath , and ResolverLocalFilesystem classes to enhance
added a check for the existence of the icon change listener before adding or removing it to ensure the icon change listener is only added when the icon
added Russian language support in mmm and ppp files to enhance language support for Russian in the application
hhh - 15836 - sqm duration should be nanosecond instead of second
disable frame state verification in SubstrateGraphKit . java to improve performance by reducing unnecessary state verification
updated RobolectricTestRunnerTest to reset system properties for SDKs and resources mode to ensure proper cleanup of system properties before tests are
added a system class " org . slf4j . " to the webAppContext and updated class loading logic in ViewClassLoaderTest to ensure
added a check for " jar " packaging in ChangePackaging . java and created a corresponding test in ChangePackagingTest . java to
updated file download method to use withExtension ( " txt " ) instead of direct calls to $ ( byText ( " Download file with \
added a call to ` nk _ buffer _ clear ( cmds ) ` in ` GLFWDemo . java ` to ensure the buffer is
replaced instances of ` getDefaultUnits ( ) ` with ` getPreferredUnits ( ) ` and updated related methods to use this new preferred units
updated date formatting in DatePatternConverterTest to use UTC time zone to ensure consistent date formatting across different environments
removed unnecessary whitespace in the return statement to improve code readability and maintain consistency
updated exception messages and added validation for file URIs in multiple classes to improve error handling and provide clearer guidance on invalid file URIs
use jabrefexecutorservice instead of scheduledexecutorservice in jabrefframe # showtrackingnotification
updated FtpReconnectAttemptServerStoppedIT to increase maximumReconnectAttempts and added Awaitility for session management to improve test reliability and ensure
replaced ` ConcurrentHashMap ` with ` ConcurrentSkipListMap ` in ` KeyedProperties . java ` to restrict concurrent access to the `
added ` ignore ` methods to ` JavaUtilLog ` , ` Logger ` , ` Slf4jLog ` , ` StdErrLog
added a null check for runningTaskView in LauncherActivityControllerHelper . java to prevent potential NullPointerExceptions when accessing runningTaskView
removed unnecessary type casting for item and contents in BukkitWorld . java to improve code clarity and reduce unnecessary casting overhead
removed the cleanImage method call from PanelManager . java to streamline image processing by eliminating unnecessary complexity
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing MMap and SimpleFS directories to facilitate MMap operations and
added null check for ` ic ` before creating ` cleanUpColor ` to avoid potential NullPointerException when ` ic ` is null
updated the query parameter in assertQueryEquals from " f = field1 maxDocFreq " to " f = field1 _ s maxDoc
refactor ExtendedOperatingSystemMXBeanImpl class to improve code organization to enhance maintainability and readability of the code
added functionality to install left commands in the SideMenuBar to enhance the user interface by providing access to left commands in the title area
added a boolean variable ` advanceWindowed ` and conditional setup in ` TweetActivity ` and ` UserProfileActivity ` to control window setup
added support for SybaseDatabase in DropPrimaryKeyGenerator to enhance compatibility with Sybase database features
refactor Client class for improved clarity to enhance maintainability and readability of the code
[ java ] reset the idle strategy and reset the last recording position when the leader be ready .
updated ` invalidate ( ) ` method to ` setCellLayoutPressedOrFocusedIcon ( ) ` in ` BubbleTextView . java `
added a return statement in NearCachedClientMapProxy . java to ensure that the method does not exit prematurely
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a ` shutdownHttpServer ` method to handle server shutdown exceptions to improve error handling by gracefully shutting down the HTTP server gracefully
camel - 15836 - camel - aws2 - s3 : fix checkstyle issue in camel - aws - s3
[ hotfix ] remove unused parameter in taskmanagermetricshandler
bug 10625 : drop unique _ name key from 2.2 . 7 version of the db .
added a new test class ` TestThriftCLIServiceSecurity ` and modified the password handling in ` TOpenSessionReq . java ` to ensure
added a new private variable ` maxEnergyLimit ` and updated energy limit assignment in ` VMActuator . java ` to ensure proper energy
added ` maxInMemorySize ` property and its getter / setter in ` HttpClientProperties ` , and modified ` webClientPlugin ` method to
refactor Cache class implementation to improve performance and maintainability of cache management
added new files RunCucumberTest . java , StepDefinitions . java , and StepDefinitions . java to implement unit tests for Cuc
added error handling for parsing double values in TypeJsonUtils and corresponding tests in TestArrayOperators to improve robustness by handling potential JSON parsing errors
removed duplicate byte array elements from Utf8StringBuilderTest . java to streamline the code by eliminating redundancy
added checks to ensure parameters are only appended if they are set to improve parameter handling and prevent potential null pointer exceptions
camel - 14850 : camel - circuitbreaker - should not exceed the maximum number of output on load balancer type .
updated the doc frequency assertion in TestIndexWriterExceptions . java to ensure the maximum buffered documents is set to 3 to improve test reliability by
replaced calls to ` hasher . putUnencodedChars ( ) ` with ` Sha1HashCode . update ( hasher ) ` in multiple
removed unused enumValue , intValue , and longValue methods from AsmRuntime . java to clean up the code and improve maintainability
add new biome tag for dark and marble ( # 2329 )
replaced the async image loader with a thread pool for request images to improve performance by reducing the number of concurrent requests
changed access modifiers of several fields in BaseTableUpsertMetadataManager from private to protected and refactored the preloadSegments method to improve encapsulation
updated character identifiers from " \ u0646 \ u0648 \ u0627 \ u0631 " to " \ u
updated image equality checks from ` getImage ( ) . equals ` to ` hasImageEqualTo ` in ` AbstractSunSecureRule . java `
camel - 14850 : camel - jbang - add -- repos parameter to jbang run - dcamel . jbang . version
added handling for NaN scores in CrawlDbReader to improve robustness by preventing processing of NaN scores
added a cleanup method to the OnStartupTriggeringPolicyTest class to ensure temporary files are deleted after test execution
updated focus handling in FilterConditionEditor and FindAction classes to improve focus behavior based on window focus state
[ hotfix ] [ checkpoint ] make checkpointscleaner thread - safe
added a new file XPathWhiteSpaceTest . java to demonstrate XML schema validation to demonstrate the presence of whitespace in XML
fix bonsaipersistedworldstate . getmutable ( ) with rollback not override trieloglayer
refactor FilledNewArrayInstruction class to improve code structure to enhance maintainability and readability of the code
simonstewart : add a timeout to the simplenetworktest so it do n ' t hang forever .
updated the condition for determining the end of the path in OCFile . java to improve clarity and correctness of path handling logic
added a print statement to indicate when a skin file could not be loaded to improve debugging by providing clearer error messages during skin loading
added dirty state management to LgoLevel2BatchSubscription and implemented isValid method in LgoGroupedLevel2Update to ensure that the accumulator is
added a new constant ` UNDEFINED ` in ` Result . java ` and updated the return statement in ` TestStep . java ` to use this
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper error handling for registered callbacks in the database
refactor uploadjobmultipartoperation to use operation instead of asyncjoboperation ( # 11943 )
[ hotfix ] [ runtime ] do n ' t corrupt recovery location if load fails
bugfix : summarylevels . of ( nodemodel ) and summarylevels . ignoringchildnodes ( nodemodel ) do n ' t work correctly
replaced the ` pos ` field with a ` sizeMask ` and modified the ` ensureAvail ` method to include a size mask to
added JUnit @ Ignore annotation to ChaosMonkeySafeLeaderTest and RecoveryZkTest classes to mark tests as ignored due to
fix arrayindexoutofboundsexception in storageproxy . getmessages ( )
[ hotfix ] fix checkstyle violation in filemanager
chore ( core ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added getSimpleName ( ) and getEnclosingElement ( ) methods to Element and VariableElement classes to enhance functionality by providing name and enclosing element information
updated RFC reference from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compatibility with the latest RFC standards
updated version number from " 2.17 . 3 " to " 2.17 . 4 " and changed type casting from int to Character to
refactor selected items handling in ListActivity and NoteAdapter to use SparseBooleanArray instead of HashMap to improve performance and maintainability of the code
simplified conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated path handling in ConfigFileApplicationListener to use ResourceUtils for URL validation and added a new test for absolute resource defaults to improve URL handling and
updated PreviewPositionHelper to accept a Context parameter and modified its clipping logic based on multi - window mode to enhance flexibility in preview positioning
[ java ] do not publish a new leadership term if it be the same a the current record .
[ drools - 5892 ] fix test failure on window
refactor ByteArrayInputStream to improve handling of available bytes and add a new Skip class for testing to enhance input stream functionality and ensure accurate skipping of bytes
modified conditional logic in UpdaterTask . java to ensure promptUpdate is only called when promptUpdate is true to improve code clarity and maintain
change the visibility of MAX _ HEADERS from final static to public static and modify blockChainDownload logic to allow access to MAX _ HEADERS
added " rt . jar " to the STANDARD _ LIBRARIES list in ModClassLoader . java to facilitate the loading of
do n ' t send the framed hello message if the local node be not ready
refactor parameter retrieval methods in RasterLayerResponse and related classes to use a unified Utils class for improved readability and consistency to enhance code
added a check to send a 500 error response only if the response is not committed to ensure that errors are only sent when the response is not
updated condition checks in HttpSession . java for clarity and correctness to improve readability and correctness of polling logic
updated fadeOutFakeTaskView behavior and added new gesture navigation tutorial animations in HomeGestureTutorialController and SwipeUpGesture
[ prefab ] fix npe when try to deserialize a non - existent prefab
removed unnecessary initialization of ` eDB ` and ` bootstrap ` in ` LdapMockMvcTests . java ` to streamline external group management and
added a validation check for the transfer amount in TransferActuator . java to ensure that a non - existent account transfer does not exceed a single
updated the lastIndexOf method to use File . separator instead of ' / ' to ensure consistent file path handling across different operating systems
do n ' t show input help when there be an error
updated GpsMainActivity and AnnotationViewFragment to use session description instead of an empty string and replaced Intent with CommandEvents to enhance user experience
added a conditional check for the number of pages in JsoupNonVisualRegressionTest . java to ensure that the test verifies the correct
* deprecate androidbufferallocator in favor of androidnativebufferallocator
added checks for " ! " prefixes in flag names and modified flag detection logic in PrimaryItem and Util classes to ensure correct parsing of flags based
added a NOPMD comment to the executeQuery ( ) method in JDBCHistoryCache . java to indicate that the method is no longer
updated the string comparison for item use op from " ITEM _ USE _ GRANT _ SELECT _ REWARD " to " ITEM _ USE _
refactor QueuePriorityTest to use a fixed item count for expected queue elements and update related assertions to improve test clarity and maintainability by
affinityapiunittest : move affinity group creation and validation to a separate test
added a null check for the main command and modified the conditional check to include " -- " OPTIONS . HELP to ensure proper handling of command
updated LightOutputStream initialization in multiple classes to increase the output stream size for better performance
changed the Scanned class from package - private to public to allow access to the Scanned class from other packages
modified the visibility of ` showBlank ` in ` ClassWriter . java ` and added a new class ` T8032819 . java `
removed assertion for the length of a string in Person . java to simplify the code by eliminating unnecessary checks
refactor file extension handling in VirtualFile . java to improve null safety to enhance robustness by preventing potential NullPointerExceptions
replaced return statement with continue in ContactRightButtonMenu . java to improve control flow by continuing the loop instead of continuing
[ hotfix ] [ runtime ] slotsharinggroupassignment should check if the simple slot be cancel before return it
simplified the screen index calculation in InstallShortcutReceiver . java to improve code readability and maintainability
updated the bind method and socket handling in PlainSocketImpl to ensure proper fd assignment and resource management to improve resource management and prevent potential memory leak
added functionality to manage removed items in BookmarkListRootFragment and MediaDetailPagerFragment to improve media detail management by ensuring removed items are properly
updated log message to reflect the element ' s in - view center point instead of the center of the element to improve clarity and accuracy of
added a new file ` bug4865918 . java ` implementing a GUI test for the ` JScrollBar ` to verify the scrollbar
replaced the ` VelocityEngine ` initialization with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code by using
updated import statements and added group triggers handling in QuestCommand . java to improve code clarity and ensure group triggers are properly formatted
added a new method ` startXmlFileChooser ` to ` AccountsActivity ` for selecting GnuCash account files to improve code organization and
added lombok . ToString annotation to PartitionChangeEvent and TbApplicationEvent classes , and updated imports in PartitionChangeEvent and TbApplicationEvent classes to
updated the configuration URI in CloudService to use a constant to improve code readability and maintainability by centralizing configuration URI
removed setViewportComponent and setJScrollPane methods from BrowserPanel to streamline the code by eliminating unnecessary components
added support for the forward dash key in LwjglInput and updated related event handling in Layout and ParticleEditor classes to enhance input
added a conditional check for " moreIndexingFilter . indexMimeTypeParts " in MoreIndexingFilter . java to enable the retrieval of MIME type parts
added regex pattern matching for author comments in JSDoc . java to improve the matching logic for constructor and method declarations
added new metrics for CREATE _ TOTAL _ DATABASES , CREATE _ TOTAL _ TABLES , and DELETE _ TOTAL _ PARTITION
added ` DrillHiveMetaStoreClient ` and ` SchemaConfig ` parameters to ` HiveDatabaseSchema ` and ` HiveSchemaFactory `
updated oauth2LoginLinks method to accept MultiValueMap as a parameter and added error handling in the login process to enhance functionality by allowing additional parameters
updated the Hijrah calendar name from " Hijrah - umalqura " to " Islamic Umm
added a condition to check if Firefox is not supported in WebAudioWrapper to ensure compatibility with both IE and firefox environments
added a method ` appendInterceptor ` to the ` GrpcServerBuilder ` class and removed the private constructor from ` InterceptorConstants ` to stream
added default charset support to the CREATE TABLE statements in TestCompatibility . java to ensure compatibility with the InnoDb database schema
removed unnecessary calls to allocateOutgoing ( ) in StreamingAggTemplate . java and adjusted return logic in WriterRecordBatch . java and StreamingAggTemplate
[ hotfix ] [ runtime ] fix typo in executiongraph . java
added a boolean flag ` hasFrom ` to the ` Delete ` class and modified related methods in ` DeleteDeParser ` and ` DeleteTest
replaced isSuccess ( status ) method with isMultiStatus ( status ) in SynchronizeFolderOperation . java to improve clarity and consistency in handling
refactor applicable test matching logic into a new utility method ` applicableListTests ` to improve code readability and maintainability by centralizing applicable
updated regex pattern in LogAnalyser . java to ensure consistent formatting of log lines to improve code readability and maintainability
( chore ) camel - test - infra - google : enable google cloud integration test
fixed - redissonsearch . value ( ) method should use ismaxexclusive ( ) instead of isminexclusive ( )
add option for select change and no license in cclicensestep
add null check for ifcRoot . getGlobalId ( ) before putting it into guidIndex to avoid potential NullPointerException when accessing globalId
replaced ` equals ` method with ` areEqual ` for comparison strategy in ` OptionalAssert ` to improve code readability and maintainability by
updated memory management in NoNewLineParagraphCssApplier and ParagraphCssApplier to conditionally store the last margin bottom value to improve memory management
added a new file TestArrayCopyToFromObject . java to test array copying behavior to ensure that ArrayStoreException is thrown when copying an object to
replaced instances of ` escapeAsBashString ` with ` escapeAsPythonString ` in ` BuckPythonProgram . java ` to
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5883 :
deprecate craftinghelper . findallfiles ( ) and replace it with craftinghelper . findfiles ( )
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test as unstable to mark the test as unstable
added a null check for the exception before attempting to doRequest in TestInternalInputBuffer . java to avoid potential NullPointerExceptions when the client is not
modified the ` autoloadCall ` method to include a lock for class loading to enhance thread safety by allowing multiple autoload calls to be executed concurrently
updated the ` getServerVersionEqualOrGreater ` method in ` CustomPlaybackOverlayFragment ` and ` PlaybackController ` to improve server version comparison
replaced the writeJAASConf ( ) method call with a new OneKDC ( etype ) . writeJAASConf (
added a boolean flag ` jsr250AttributeFound ` and modified return logic in ` Jsr250Voter . java ` , and created
updated import statements in MP4Parser . java to include specific boxes instead of wildcard imports to enhance code clarity and maintainability by organizing
added a new constant HS2 _ PROXY _ USER and modified session parameters handling in ConnectionFactory . java to ensure session parameters include the proxy
camel - 14850 : camel - hdfs - add support for compress bzip2 / snappy to camel - hdfs
added a sleep duration of 1000 milliseconds in HttpClientTest . java to ensure proper timing for asynchronous operations
make sure xssfcell . setcelltype ( cell . cell _ type _ blank ) do n ' t notify array formula change
updated glyph offset calculation and added width and height in GlyphLayout . java and modified text in BitmapFontTest . java to improve rendering accuracy and
refactor Fabric8IstioIT to use the Commons class for image pulling and loading to improve code readability and maintainability
replaced calls to ` apiClient . ReportPlaybackStartAsync ` with ` TvApp . getApplication ( ) . getPlaybackManager ( )
fix potential resource leak in simpleauthority
fix maploader hitting eviction on initial load when eviction policy be set to lru
updated bitwise operation in ResponseFlag . java to include ERROR _ BIT to ensure proper handling of error flags in the response
fix default policy for community , add read policy to default collection
added a concurrent map implementation for composite fonts in FontUtilities . java to improve performance by avoiding multiple instances of CompositeFont for the same physical
updated the calculation of prefHeight to reset it to 0 and adjusted its calculation accordingly to ensure that prefHeight reflects the actual height of the
drools - 1649 dmn feel : improve dmn feel validation error message ( # 1649 )
removed unused imports and simplified the instantiation of LinkedList in multiple Java files to improve code clarity and maintainability
changed the visibility of the ` finishRunningRecentsAnimation ` method from private to public and modified blocking logic in ` NavHandleLongPress
added null checks for ` id ` and ` type ` in ` ElementFactoryImpl ` , and modified edge handling in ` ImportContainerImpl `
[ beam - 10660 ] fix npe in fnapicontrolclient and beamfnstategrpcclientcache
nifi - 1883 : fix binfiles . createbin ( ) to use sessionfactory . createsession ( )
refactor core build selection logic in Teams . java to use a loop for finding the closest core to improve code readability and maintainability
added a check for the ` CONTENT _ LENGTH ` header in ` RestTemplateCopyHeaderFilter ` and a corresponding test in ` TestRestTemplate
updated Java2TypeScriptTranslator and SyntaxTests to handle class and character literals correctly to ensure correct formatting of string literals in TypeScript translation
updated filter calculations and modified channel size settings in multiple classes to improve layout consistency and enhance user interface responsiveness
hbase - 15836 allow canary to Tries all region on a regionserver ( chaoyu tang , review by
removed NodeModule import and modified ImmutableMap . < String , String > of ( ) in CassandraConnectorFactory . java and TestCassandraConnector .
added a call to resetCursorPosition ( ) in the KahaDBStore class to ensure the cursor position is reset for the order index
added minimum size adjustments in CallDialog and OneToOneCallPanel to ensure frame dimensions are within defined bounds to improve user interface responsiveness
fix worldgen loss of state information during world generation .
refactor TestHTTPSamplersAgainstHttpMirrorServer to use static imports and simplify setup and teardown methods to enhance code readability and maintain
added injection and removal logic for KerberosPrincipalEntity and KerberosPrincipalHostEntity in KerberosPrincipalDAO to ensure proper management of Kerberos
removed the ' true ' parameter from the getTableSnapshot method call to simplify the method call by eliminating unnecessary parameters
improve error handling in AprEndpoint by catching Throwable and logging warning messages accordingly to improve error handling and provide clearer logging for
updated error message in AndroidGradleBuilder to reference " Monetization setup " section instead of " Service & Apis " to clar
updated the file folder name from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNAResource . java ` and removed
[ drools - 5892 ] fix relative package name for boot - inf . classes in kie - builder
added a condition to skip the CheckIndexTest based on the runtime version to ensure compatibility with older versions of Java
simplified the method signature of ` assignTargetsForSplitScreen ` by removing the ` Context ` parameter and directly using ` targets ` to
[ hotfix ] [ doc ] fix typo in leaderlatch javadoc
added methods to initialize ZKSNARK parameters in SolidityNodeHttpApiService to enable dynamic configuration of ZKSNARK
updated transaction confidence handling and added a depth future method in TransactionConfidence . java to improve clarity and functionality of transaction confidence management
added a new method ` createMediaRecorder ( String path ) ` to ` CodenameOneImplementation ` and renamed ` longtitude `
set default platformName to " ios " in JavaSEPort . java to ensure compatibility with iOS devices
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added braces to conditional statements in Graphics2D . java to improve code readability and maintainability
refactor CreateVisibleSignature class for improved readability to enhance maintainability and clarity of the code
added a try - catch block around the outgoing frame method call in AbstractExtension . java to handle potential exceptions during frame processing
replaced the try - catch block with a privileged action for caller class retrieval to enhance security by ensuring privileged actions are performed on the
added functionality to filter out child categories based on their ID in FeedCategoryREST to ensure that only relevant child categories are processed in the API
updated ContributionManagerDialog to use a dynamic title based on contribution type to improve user interface clarity by providing a more descriptive title for
added a ` vwap ` field and its getter / setter methods to the ` Ticker ` class and updated the ` Ticker `
added a new field ` mNoWidgetsView ` and updated related methods in ` WidgetsFullSheet ` and ` SearchAndRecommendations
add rendergraph api to make it easy to create a tint node
set the color of the NCFirebaseMessagingService to the primary color to improve the visual appearance of the NCFirebase messaging
refactor ShadowUsbManagerTest to improve test structure to enhance maintainability and readability of the test code
updated training and evaluation percentage calculations in AbstractDifferenceRecommenderEvaluator , AverageAbsoluteDifferenceRecommenderEvaluator , and RMSRecommenderEvaluator classes to
added a call to ` selectedConfiguration . update ( ) ` in ` Rocket . java ` to ensure the selected configuration is updated correctly after
updated strokeWidthUpperBound calculation to use Math . max for better validation to ensure stroke width is within a valid range to avoid potential errors
pdfbox - 4892 : use linkedhashmap instead of hashmap , a suggest by valerybokov
replaced ` nativeClosureManager ` with ` closurePool ` in ` NativeClosureFactory . java ` to improve closure management by utilizing a
( chore ) camel - core : migrate test to junit 5 ( # 3649 )
added a new file ` WebsocketIngressIntegratedBootstrap . java ` and ` WebsocketPluginTest . java ` to implement integration tests for
[ ds - 3352 ] fix the wrong generic type set in abstractimportmetadatasourceservice .
refactor authentication comparison logic to use a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability by
added a check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to ensure
replaced calls to ` callNode . getType ( ) ` with ` callNodeType ` for better clarity to improve code readability and maintain
added a new annotation ` Insecure ` to the ` MessageBuffer ` class and modified the constructor accordingly to enable the use of the ` MessageBuffer
added new configuration variables for various Hive configurations in HiveConf . java to enhance configuration flexibility for Hive processes
initialize scopes and policies to a new HashSet instance and add null check for policies in DefaultResourceSetService to ensure proper initialization of collections and prevent
lucene - 4892 : make multireader constructor accept a collection of readerfinishedlistener
refactor multiple asynchronous socket channel implementations and test classes to improve code organization and maintainability
danielwagnerhall : fix flaky selenium test in 2.49
removed the ` getFirstTypeArgument ` method from multiple classes and replaced it with final modifiers in several classes to improve code clarity and enforce im
changed return types of keySet and values methods from Set < Integer > to KeySet < Integer > and Values < Integer > to improve clarity
added a duration parameter to the FlipTransition class and updated background color and motion parameters to allow customization of the transition animation duration
removed the conditional check for subsAreValidForStreaming in DLNAResource . java to simplify the logic for setting subsAreValidForStreaming
bump major and minor version from 8 to 9 and 10 to 10
replaced System . err . println with LowLevelLogUtil . log for warning messages in StackLocator . java to improve logging clarity and
[ javaparser ] add support for bleseding edge language level java _ 16 and java _ 15
updated conditional logic for setting padding in ExpansionViewHelper . java to improve readability and maintainability of the code
[ hotfix ] [ runtime ] do not invoke backup replica anti - entropy callback when there be no version map
added metadata handling functionality to SeedUrl and SeedResource classes to enable better management of seed resource metadata
added a null check for the declaration before creating a cloned pattern to avoid potential NullPointerExceptions when the declaration is null
[ hotfix ] [ test ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
ww - 4445 add package name to action config
updated assertions in IterableTest to cast null to Object and added a new test for iterable containsExactly with only null passed as an array to
added stream ( ) and parallelStream ( ) methods to MapIterable and PrimitiveObjectMap classes , along with corresponding test cases in MapIterableTest
clone the notifInfo object before returning it to ensure that the notifInfo object is not modified after return
update command key comparison logic to use commandConstants for case - insensitive comparison to improve robustness by ensuring command keys are processed consistently
refactor AEADBlockCipher class implementation to improve code readability and maintainability
added a method ` isVariableLocal ` to ` VariablesMap ` and modified the ` searchName ` method in ` WebVariablesMap ` to
added a check to assign an ID if the resource name does not contain a period and changed the default resource mode from best to legacy to ensure
added a condition to check if ` ulSize ` and ` ulPos ` are zero before retrieving table buffers in ` TrueTypeFont . java
refactor SignPlugin to accept a list of HttpMessageReaders instead of a static list to enhance flexibility by allowing multiple message readers to be
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added validation check for MavenDeployer in StandardMavenAuthenticationProvider . java to ensure proper handling of remote repository instances to prevent runtime errors
refactor AudioNode class to improve code structure to enhance maintainability and readability of the code
added SSL context initialization and exception handling for SSL encryption in LinkyHandlerFactory and EnedisHttpApi to enhance security by ensuring proper SSL context
added imports for OracleSqlOperatorTable and SqlStdOperatorTable , and modified the HiveFunctionRegistry to use a map for function replacement to enhance
http : / / issues . apache . org / activemq / browse / amq - 4892 - add support for jmx
updated the ` getBuildTargetForAlias ` method to accept a ` possiblyFlavoredAlias ` string and modified its return logic to improve cl
camel - 14284 : camel - odata - do not process empty feed in olingo consumer
added support for equivalent Hive versions in MetaStoreSchemaInfo to ensure compatibility with newer Hive versions
server : do n ' t try to expunge the vm if it be already expunge
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that these classes are outdated and should no longer be used
updated ONDashClockExtension and AlarmReceiver to use getAlternativeTitle for improved title handling to enhance clarity and maintainability of
updated GoogleAuthUserConfigTable and TotpEndpointIntegrationTests to use " nvarchar / " instead of " matchers . containsString "
replaced calls to ` editor . commit ( ) ` with ` editor . apply ( ) ` across multiple files to ensure consistency in preference handling
added a new TestIdleListener class and modified the session initialization in AsyncTimeoutTest . java to enable testing of idle states in the session
bigqueryioit : add test _ id to the table name to make it unique
added background resource and reset functionality for the icon in HotseatPredictionController and BubbleTextView to enhance the visual appearance and
mondrian : fix typo find by codespell on fossies . org
[ native ] add test for native system query
refactor active features retrieval logic in LIMEExplanation . java and add assertions in LIMEColumnarTest . java to improve code cl
added support for passing arguments when running with - r in AppleSimulatorController and InstallCommand classes to enhance flexibility in handling apple
fix lineselection . getabsoluteposition ( ) return - 1 when there be no paragraph
added a check for the available state of the pipeline and manager in ContainerBase and StandardContext classes to ensure that only valid Lifecycle instances are processed
added a background view to the QSB widget to enhance the visual appearance of the widget
added time tracking and logging for flag conversion progress in SQLManager and modified flag splitting logic in BlockTypeListFlag and PlotArea classes to improve
updated FloatingTextRenderer to conditionally enable or disable depth testing based on the floating text status to enhance rendering flexibility based on the floating
rename ` libffi _ context _ linux ` and ` libffi _ context _ posix ` to ` libffi _ context
updated propagation behavior in JdbcAggregationRepository by introducing a private variable and getter and setter methods to improve flexibility and maintainability of the propagation
refactor layer validation logic to handle L1 and L2 regularization correctly to improve robustness and ensure proper handling of regularization configurations
added error handling for read and write operations in AbstractChecker . java to improve robustness by logging exceptions during read and write operations
changed the visibility of the ` colorStack ` array from static to instance - level to allow multiple instances of ` GlyphLayout ` to access the
updated method calls from ` getMappedStatement ` and ` hasStatement ` to use ` true ` instead of ` false ` to enable statement mapping
convert tradableIdentifier and currency to lowercase in BTCEDepth retrieval to ensure consistent depth retrieval across different locales
updated expected output values for channel state assertions in ChannelStateTests . java to ensure accurate representation of channel state values in tests
remove the ` versionedHashes ` parameter from the ` EnginePayloadParameter ` class and related methods to simplify the code by eliminating unnecessary parameters
set the trigger price to an empty string and call the onTriggerPriceTextFieldChanged method to ensure the model reflects changes to the price field
updated conditional logic in StudentFeedbackSubmissionEditSaveAction . java to improve clarity and structure to enhance code readability and maintainability
removed debug print statements from I18NPageController . java to clean up the code and reduce unnecessary console output
hbase - 2596 addendum fix checkstyle issue in hstore
fix for # 1193 : do n ' t call setloadedproperty when a new bean be insert / update
added a boolean property ` _ alwaysSaveUri ` and its getter / setter methods to control whether to always save the URI or not based on
added new methods ` nSetLayerType ` and ` nSetLayerPaint ` to ` ShadowRenderNode ` to provide functionality for setting layer
replaced specific imports with wildcard imports and added a method to hide the popup menu to improve code readability and ensure the popup menu is displayed
replaced null check for the ' insert ' variable with a new HashMap initialization to ensure proper initialization and lowercasing of the ' insert '
replaced references to ` scala . collection . JavaConversions . asScalaIterable ` with ` collectionAsScalaIterable `
added null checks for requests and improved logging in MockServerEventLog , HttpForwardObjectCallbackActionHandler , and CallbackWebSocketServerHandler to
[ hotfix ] [ runtime ] add warn log when property file can not be load
added try - with - resources for SessionDataSet in ClientMain . java to ensure proper resource management and prevent potential memory leaks
added a condition to check if the network supports multicast and is up in SetOutgoingIf . java to ensure proper handling of network interfaces based on
updated the constructor of sqlCommand to include an offset and length parameter to ensure that the SQL command is constructed with the correct length before use
added methods to set latestConsumeTime and setLatestConsumeTimeForEnergy in UnDelegateResourceActuator , BandwidthProcessor , and E
added a new method ` invalidSessionStrategy ( InvalidSessionStrategy invalidSessionStrategy ) ` to the ` SessionManagementConfigurer ` class to improve
improve error message when protobuf token can not be find
added a new test class ` MapAssert _ containsKeys _ Test ` to verify the functionality of ` MapAssert ` with key assertions to ensure
replaced ` stgen ` with ` psgen ` and added a new interface ` JDBC4TemporaryPreparedStatementMethods ` to enhance proxy generation
added a static method ` ensure ` to ` ServerWebSocketContainer ` and updated method signatures to use ` Handler ` instead of ` ContextHandler `
replaced ` ImmutableMultimap ` with ` ImmutableListMultimap ` in ` CxxFlags . java ` to standardize the use of ` ImmutableListMultimap
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a static final EMPTY constant and refactored MethodHook array initialization to use it to improve code readability and maintainability by using a
added a boolean parameter ` grantAccess ` to the ` MockAuthenticationManager ` constructor and modified the authentication return logic to allow access control based on
updated the ` afterJob ` method to accept a ` JobExecution ` parameter across multiple classes to allow for more flexible job execution handling
added a check for file execution permissions in SharedLibraryLoader . java to ensure that files are only writable if they can be executed
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
bug fix : use sampleevent when can get unmarshall working
added constants for battery level , annotation , time with offset , distance , and start timestamp in BundleConstants . java and updated CustomUrlManager
change the type of the ` applyRule ` method from ` Hashtable ` to ` Map ` in ` SearchExpression . java ` to allow for
ggb - 1343 move absolute - screen - loc to object instead of widget ( for audio )
updated JoglGraphics . java and ProjectiveTextureTest . java to improve texture handling and filter settings to enhance texture rendering accuracy and ensure
modified the ` setResourceToDelegate ` method to return a ` File ` instance instead of void to improve resource handling by ensuring the output file is
camel - 14850 : fixed the issue that camel - properties component intercept from a property uri should not resolve the property placeholder . thanks
updated the condition from ` currentTime > > ` to ` currentTime > = ` in ` ActionScheduler . java ` and changed the expected
updated dbg _ zip assignment to use a temporary directory if debug _ log is not null to ensure proper resource management and avoid potential null pointer exceptions
renderingdebugconfig : change worldrenderingimpl . visible to renderingdebugconfig . hud _ hidden
move pipe gate reset to a separate method so it can be reuse by pipe . resetgate ( ) .
added a try - finally block to restore the default locale before running the TestSupplementary test to ensure the TestSupplementary test runs in a
updated the randomness of the Team constructor from 0.8 f to 0.4 f to improve the randomness of the Team ' s
refactor ` activeMatchedStates ` from a ` Set ` to a ` Collection ` and add logging statements for state removal to improve performance and
updated the condition to check for null annotations in SoftAsserts . java to simplify the logic by removing unnecessary null checks
updated error handling in StorageResources . java and added exception handling in StoragePluginRegistryImpl . java to improve error reporting and provide more informative
refactor call tree CSV reporting to use a new method ` toCsvFile ` to improve code readability and maintainability by reducing duplication
added null checks for note and noteTmp in DetailFragment . java to ensure proper handling of null values and prevent potential NullPointerExceptions
added a peakTasks variable and modified task loading logic in AssetManager . java to improve task tracking and ensure accurate loading ratio
danielwagnerhall : enable native event by default on window
added metadata handling for custom score and fetch interval in CrawlDatum to enhance functionality by allowing customizable score and fetch interval configurations
updated import statements from ` org . apache . commons . collections . ListUtils ` to ` org . apache . commons . collections4 . List
updated the condition in CoreContainer to check if zkController is null and added a method to check if shareSchema is true in TestCoreContainer
updated sizeInBytes method calls to include a boolean parameter for false and true values to improve clarity and accuracy of size calculations in the code
updated assertions in VersioningTest to check for null values before validating Version1 _ 2 to improve test accuracy by ensuring that Version1 _ 2
updated SQL query to include type not null checks in Field and AbstractJdbc2DatabaseMetaData classes to ensure correct handling of non - null domain columns
[ java ] update time of last log update when append new leadership term event .
removed unused method ` buildMediaType ` from ` WebClientPlugin . java ` to streamline code by eliminating unnecessary complexity
replaced instances of ` fillUsingLengthPrefix ` and ` fillUsingLengthPrefix2 ` with ` fill ` and ` fillSlice ` to
refactor compaction logic in AcidUtils and add a new test for cleanup after IOW and major table compaction to improve code clarity and
set default values for immutableStorageScheme and qualifierEncodingScheme to ONE _ CELL _ PER _ COLUMN and NON _ ENCODED _ QU
added new classes PojoProducersCustomized and RestProducersCustomized , and modified PojoProducersCutomized to extend P
updated the method calls to use CACHE _ SECTION _ NAME instead of " cache " in ArtifactCacheBuckConfig . java to improve clarity
replaced the registration of AesGcmSivProtoSerialization in AesGcmSivKeyManager . java to ensure proper serialization
add miss replacement for wooden _ slab in oredictionary .
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` in ` GnuLinker . java ` to simplify the class
update version number to 3.2 ( release note )
hhh - 14850 - fix test for denormalizedtablephysicalincludedtablesconstrainttest
updated drawing position in the HelloWorld . java file to correct the positioning of the texture in the sprite batch rendering
refactor player permission checks and improve plot ID handling in PlayerFunctions . java and WorldGuardListener . java to enhance code clarity and ensure
added a deprecated static final Version constant for Lucene 8.5 . 0 to signal that this version is outdated and should not be used in
updated print statement to include thread name in the closeSocket method to improve clarity of log output for better debugging
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure the SQL query correctly interprets a
refactor dependenciesType handling in CoNLLUOutputter and add DependenciesType enum in SemanticGraphCoreAnnotations to improve code clarity
refactor methods in NoSuchBuildTargetException and ParseContext for improved clarity and consistency to enhance code readability and maintainability by centralizing
replaced the method call from ` testFromMain ( ) ` to ` test ( ) ` in ` TestOutOfMemory . java ` to
updated the array size for configBlocks from Block . blocksList to 256 to optimize memory usage by using a more efficient array size
update bukkitmain to include git - spigot and craftbukkit title
added escaping for Postgres question mark operators in AbstractSQLChange and corresponding tests in AbstractSQLChangeTest to ensure correct SQL statement generation for Post
added methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` , ` MutableBagFactoryImpl ` , and corresponding tests
pdfbox - 4892 : improve error message , a suggest by valerybokov
updated MqttBrokerConnection initialization to include a boolean parameter to allow for additional configuration options for the Mqtt broker connection
updated the method of obtaining the ChangeSet ' s root ChangeLog to ensure a valid ChangeSet instance is retrieved to avoid potential NullPointerExceptions
( chore ) camel - rocketmq : fix nullpointerexception in staticmethodinterceptor
added HiveMetaStoreClient initialization and logging in TestHiveMetaStorePartitionSpecs and TestObjectStore classes to improve database management and enhance debugging
added a new parameter " order _ currency " to the BithumbAuthenticated class and updated the BithumbAccountServiceRaw class to include
deleted the SSEFluxWebConfig . java file to remove unused configuration properties to streamline the codebase
updated method return type checks in JsonBuildHelper , IDocBuildTemplate , and JavaClassUtil to check for void return values to ensure correct handling
[ te ] add support for list yamls endpoint ( # 1748 )
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to enforce encapsulation and
refactor thread factory initialization and introduce a new method ` awaitTermination ` in ` Basic . java ` and ` GroupOfOne . java
added unit tests for adding to lists with simple and mapping converters in MongoTemplateTests and created a new class PersonWithAList with a list
ggb - 1186 sync the applet panel size when the coordinate space be change
replaced direct toolbar visibility setting with a delayed execution in DrawerActivity to improve UI responsiveness by delaying the display of the toolbar
[ iotdb - 5892 ] fix overlapped page in seriesreader ( # 5893 )
server : do n ' t try to save password for vm on router if vm be not start
set usingOutputStream and usingWriter to false , and set isCharacterEncodingSet to false in Response . java to ensure proper handling of character encoding
added a warning check for assignment side effects in GroupDialog to ensure proper handling of side effects during group assignment
refactor JSON and JSONObjectConvertor classes for improved readability to enhance maintainability and facilitate future updates
updated icon size check from maxHeightWithMargin to maxWidthWithMargin in FileUploadApiController . java to ensure proper alignment of icons based on the
updated the fetchPublicKey method to use JcaPEMWriter and replaced EncodingUtils with BouncyCastle ' s PEMWriter for public key
added mime type checks for UNIX and non - Windows environments in Basic . java to ensure proper handling of mime types across different operating systems
improve netty connection to support jzlib compression
added a new method ` doesClassLoaderDescendFrom ` to ` Util ` and modified conditional checks in ` Class . java ` and ` MethodHandles
removed the ` doConnect ` method and its usage in ` ChannelProvider ` and ` ProxyChannelProvider ` classes to simplify the connect method signature
added a new test method for handling empty final columns in CSV processing to ensure proper handling of empty final columns in CSV output
added compass gravity and margins to NearbyMapFragment to improve UI appearance and appearance of the map
added a new test method ` testInterpolation ` to ` GeoPathTest . java ` to validate the interpolation behavior of ` GeoPath ` with
updated method signatures and exception handling in LeafFilterFactory , ParquetFilterPredicateConverter , and TestParquetRecordReaderWrapper to improve error handling
added a condition to set the language of the current audio track based on the stream type to ensure the correct language is set when the audio track
added a warning log statement to indicate compatibility issues with schemas in the new version to inform users that schemas in the new version may cause compatibility issues
replaced arraycopy calls with addAll method across multiple array - related classes to simplify code and improve readability by using a unified addAll method
reformatted the try - catch block for closing the connection in DataSourceProxy . java to improve code readability and maintainability
added constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a Map < String , ClientRegistration > to enhance
added a method ` resetUIState ( ) ` to reset the UI state in ` SchemaUpgradeHelper . java ` to ensure the UI state
added a failedStep flag and updated related logic in JUnitReporter and JUnitReporterTest to improve handling of pending exceptions during JUnit reporting
allow . in entity selector ( # 82386 )
added an ` Closeable ` interface to the ` Selector ` class to enable proper resource management and prevent potential memory leaks
refactor MaxConcurrentStreamsTest to use a MultiplexConnectionPool for improved connection management to enhance performance and maintainability of connection pooling
added multiple calls to ` stringType ( ) ` in ` CoreOptions . java ` to enhance string type handling functionality in the application
updated context configurations in HqlQueryRenderer and UserRepositoryFinderTests to reflect the correct H2 file format to ensure compatibility with EclipseLink
updated HTTP status checks in HttpGenerator , HttpChannel , HttpChannelState , and Response classes to use HttpStatus constants instead of hardcoded values to
pdfbox - 4892 : avoid npe , a suggest by valerybokov
replaced hardcoded JDBC URL with a dynamic source class name in HikariCPCollectorTest . java to improve flexibility and flexibility
refactor ParquetFormatPlugin and ParquetGroupScan to improve file selection handling and metadata cache management to enhance code clarity and maintainability
modified the success status logic in Jsr199Javac . java to reflect successful compilation and diagnostics to improve error handling during compilation and ensure
added a TableModelListener to manage table change events in DefaultSortedTableModel to ensure proper event firing when a table changes
updated the condition to validate the number range from 49152 to 65535 to ensure that the number is within the allowed range of 65535
added imports for DocumentsContract and updated notifyChange calls in AuthenticatorActivity , AccountRemovalJob , and DocumentsStorageProvider to ensure compatibility with
removed the call to ` Log _ OC . startLogging ( getAppContext ( ) ) ` in ` MainApp . java ` to stream
refactor exception handling in FilterChainProxy to utilize ThrowableAnalyzer for determining the cause chain of RequestRejectedExceptions to improve error handling robustness
updated the calculation of ` newSize ` and ` newSize ` in ` StringBuilder . java ` to use ` this . length ` instead of ` length
added a check for an empty filterList in Filter . java and a corresponding test in TestFilters . java to ensure that an IllegalArgumentException is thrown
added a new file ` tbstopwatch . java ` that implements the ` StopWatch ` interface to facilitate the management of time
set the initialized variable to true in PListStore . java to ensure proper initialization state for the PListStore class
added @ Deprecated annotations to multiple Continuation classes to signal that these classes are outdated and should no longer be used
[ zeppelin - 4892 ] fix context class loader in remoteinterpreterserver
fix commandsourcestack . getentity ( ) to use source . source instead of entity . get ( )
updated minimum SDK version from P to O _ MR1 in ShadowRttCallTest . java and ShadowCall . java to ensure compatibility
corrected variable name from ' indexInTickArray ' to ' tickArrayIndex ' in DeadlineTimerWheel . java to improve code
# 174 - add a method to retrieve the simple name of a bean ( # 174 )
updated header URLs from " wro " to " static " in BasePage . java and added a new WroSassProvider class to
added a new test method ` showLatestTimeseriesTest ` to validate the functionality of retrieving the latest timeseries to ensure that the ` showLatest
updated configuration parameter names from " appContextLocation " to " contextConfigLocation " in multiple files to clarify the purpose of the configuration
refactor exception handling in OCSPChecker to use instanceof for better type safety to improve code readability and maintainability by avoiding implicit type
add config option to turn on / off write output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 119 )
added a new test class ` Issue _ 815 ` for reopening slice sizes in ` SortedTableMap ` to ensure that the slice size functionality
added pipe waterproof and slime ball recipe to the game registry to enhance the crafting system ' s shapeless recipe
fix arrayindexoutofboundsexception when use sequential access sparse vector
added functionality to manage ownership of shulker entities in the BukkitMain and EntitySpawnListener classes to enhance entity management by ensuring
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and ` SolrWriter ` classes to provide access to the debug logger
updated imports and added methods to retrieve maximum directory and file name lengths in IOHelper . java and MultiKahaDBPersistenceAdapter . java
replaced the instantiation of UpToTagChangeSetFilter with a new instance of UpToTagChangeSetFilter and added a check for tag matching to
[ beam - 10670 ] use list instead of linkedlist in order to improve performance .
refactor BrokerRoutingManager to improve code readability to enhance maintainability and facilitate future updates
changed color values in CandlestickRenderer from gray to gray for volume and up components to improve visual clarity and consistency in color
refactor layout parameters in InsettableFrameLayout to use a more descriptive variable name and improve layout handling to enhance code readability and
added a duration field to the BuildTargetDurationListener and updated related tests to include it to enhance the functionality of the BuildTargetDurationListener to
replaced ` @ Profile ( " hsqldb " ) ` with ` assumeTrue ( " Expected db profile to be enabled " ) `
added null check for user before processing claims in OAuthConfirmationController . java to prevent potential NullPointerException when user is null
camel - 16400 : added advicewithroutebuilder to replace route from endpoint . thanks to benjamin for the patch
replaced ConcurrentSkipListSet with NonBlockingHashSet in CassandraConnection . java to improve performance by allowing concurrent access to statements
api : listpublicipaddresses - add source network id parameter to listpublicipaddresses api
added tests and implementation for ignoring battery optimization functionality in ShadowPowerManager to ensure correct behavior of battery optimization settings in the power manager
updated the version property retrieval in Jetty . java to use a dynamic value from the build properties instead of a hardcoded value to enhance flex
added unit tests for verifying invocations in order in NumberOfInvocationsInOrderVerifierTest . java to ensure correct verification behavior for multiple invocations
refactor evaluation logic in TRegexExecNode to improve clarity and handling of no match instances to enhance code readability and ensure correct evaluation
added a " - foreground " parameter to the profile start method in NewProfileExtensionConnection . java to allow the profile to start in a foreground
replaced ` executor ` with ` executorLauncher ` and ` executorCloser ` in ` MiniSolrCloudCluster . java ` to improve clarity
replaced ` Map < String , String > ` with ` String [ ] ` for ` parseFieldnames ` in ` MetadataIndexer . java
updated file logging to use the file name instead of the full path in CodeEditorView . java and added null check in EditorTextActionWindow
added error message to skipped entries in ClassFileReader and modified warning message in JdepsTask to improve clarity of skipped entries and enhance error reporting
added LinkStorage to the Fetcher and updated FetcherMain to use LuceneStorage for document storage to enhance document storage capabilities for Lucene
updated the ` populateBubble ` method to include an ` existingBubble ` parameter and added a null check for existing bubbles to
updated error handling and logging in CronScheduledRoutePolicy , ScheduledJob , and SimpleScheduledRoutePolicy classes to improve clarity of error messages and
( chore ) camel - shenyu : remove unnecessary for loop
[ java ] : use nak multicast delay generator for conductor loss handler .
updated Gson initialization and added properties for client information in ClientInformationResponseView . java to improve serialization and deserialization of client information for better debugging and
added a conditional check to set the average price only if the field amount is non - zero to ensure that the order ' s average price is
removed the rawExecutionReports ( ) method from BinanceStreamingMarketDataService . java to streamline the code by eliminating unnecessary
added a new method ` fail ( Exception e ) ` to ` LdapTimeoutTest . java ` and modified the timeout check logic in ` Read
added a check to ensure the user dictionary file exists before reading it and improved logging for missing filenames to enhance error handling and provide clearer
added a check for blank password file or credential store alias before updating the password in AmbariServerConfigurationHandler . java to ensure that the
added a check for already parsed segments in ParseSegment . java and a method to check if a segment is already parsed in SegmentChecker . java
[ hotfix ] [ yarn ] add application _ attempt _ failures _ validity _ interval option to yarnclusterdescriptor
[ geos - 8470 ] do n ' t unload h2 driver if it be not include in geoserver . properties
hbase - 24936 tableinputstreamformatimpl should set default readtype for snapshot - based inputformat ( # 2498 )
added fixed height and width parameters to the LoginInstanceRequest class to enable dynamic adjustment of instance dimensions based on user settings
added a cornerRadius parameter to several update methods in ActivityControlHelper , WindowTransformSwipeHandler , ClipAnimationHelper , LauncherLayout
updated COMMANDS _ TO _ REMOVE to replace " DESCRIBE " with " DESC ( RIBE ) " and added new commands to
added retry logic for retrieving a connection from the connection pool in TxnHandler . java to improve stability by allowing retries when there is a problem
renamed method ` txnEnsureReserve ` to ` txnCheckReserve ` and added a new method ` txnEnsureBackupReserve `
added a new field ` strings ` to the ` FirstOfStringsMatcher ` class to store the ` char [ ] [ ] ` array for
updated delete statements to use " DELETE ROWS SERVER SELECT " and " DELETE ROWS CLIENT SELECT " instead of " DELETE ROWS " to
updated the exception handling logic in BaseServiceException to distinguish between SocketTimeoutException and SocketException to improve clarity and accuracy in determining if an exception is
added support for multiple rapid install types in AdbHelper , RealAndroidDevice , and BuckConfig classes to enhance flexibility in managing
updated the regex pattern for the SeedPattern in SortTest . java to allow for additional characters in the seed string to enhance flexibility in seed
refactor MultimapSubject to use a factory for creating ` IterableValuesForKey ` and ` IterableEntries ` instances to improve code clarity and
adjusted the return statement to subtract one from the display size based on device orientation to correct the logic for determining the vertical position of the launcher
added a ` transmux ` boolean field and updated related constructors and methods in ` Transformer ` , ` TransformerInternal ` , and ` Transformer
added localization logic to localize strings in Picker . java to improve user experience by ensuring localized strings are displayed correctly
camel - 14263 : camel - cxf - rs should return a 404 error if the customer can not be find
hhh - 14850 - postgresql postgresql do n ' t throw lockacquireexception and pessimisticlockexception
updated query ID handling in TestJdbcDriver2 and modified import statements in HiveStatement to enhance query ID retrieval and improve code clarity
[ beam - 10670 ] add usesunboundedpcollections category to pardotest
removed the ` < em > ` tag from the ` txtFilename . setText ( Html . fromHtml ( ` ` ... ' ' ) )
[ java ] remove unused leadershiptermid parameter from joinlogasfollower method .
refactor HttpSender to use a local variable for the HttpExchange instance to improve code readability and maintainability by reducing redundancy
[ hotfix ] [ test ] migrate failoverstrategycheckpointcoordinatortest to junit5
renamed the method ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` and updated its
added null checks and improved marker equality handling in Recipe , Markers , and SearchResult classes to enhance robustness and prevent potential NullPointerExceptions
changed return type of getFontSizeAsFloat and getFontSizeAsDouble methods from float to double and refactored BigDecimal handling in XWPF
replaced the variable ` email ` with an array of ` emails ` in ` AddressBookDoCoMoResultParser . java ` to improve
refactor exclusions handling in RawMavenResolver to utilize a set for better organization to improve code clarity and maintainability by consolidating
added checks and exception handling for DSX exchange info and updated currency pair extraction logic to improve robustness and error handling for unsupported DSX pairs
chore ( core ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
[ drools - 90 ] fix incremental build fail if kiemodulepom be invalid
updated the initialization of ` copy ` to use ` finale - k ` and added a conditional check for ` sobj . has ( k
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code readability and maintainability
hostfielddesc : unreflectgetter and unreflectsetter should not throw an exception if the field be not static .
added a new annotation for the " java . util . concurrent . CompletionStage " in the database to enable the use of the " completedStage
updated the calculation of mFreezeCheckPoint from 9000 to - 10000 to correct the calculation for the freeze checkpoint duration
removed unnecessary imports and modified the run method in AbstractCommonPowerMockRunner and PowerMockRunner to streamline code by eliminating unnecessary dependencies
unmarshalin ( inputstream , typecode , longholder , objholder ) should use realtype ( ) , not typecode ( )
refactor indentation handling in TabsAndIndentsVisitor . java to improve clarity and correctness to enhance code readability and ensure correct
replaced ` LuceneTestCase ` with ` TestCase ` in ` TestSingleTokenTokenFilter . java ` to utilize JUnit
updated the write method in HtmlProcessInformationsReport to use a wrappedText class instead of a newColumn to improve the rendering of the column
refactor execution context management in JdbcStepExecutionDao and MapStepExecutionDao to streamline execution context management to improve code readability and maintain
added a conditional check to only add the mon if the folder is not hidden to ensure that the mon is only added when the folder is not
added null checks for actors and updated actor removal logic in SplitPane to ensure proper handling of null actors and prevent potential null pointer exceptions
added handling for JavaType . Parameterized types in RemoveUnusedImports . java to improve type management for parameterized types in the code
fix npe in uniquemodlistbuilder when select a file with no modinfo
changed the logger variable from private final to static final in TicketGrantingTicketImpl . java to improve performance by avoiding unnecessary object creation
updated SQL query string in PhysicalPlanTest . java to include a new version of the RLE file to ensure compatibility with the latest version of
added a method ` isValue ` to check if a string value is present in ` AttrData ` and updated ` Converter ` to handle enum values
updated conditional logic in CPlatformResponder . java and added utility methods in LWCToolkit . java for character modifier keys to enhance character
[ java ] set publication connection timeout in c test for spy simulator .
added a condition to return false for specific request URIs that start with " / css " , " / images " , and " / favicon
added an assertion to verify the installation of the wellbeing test APK to ensure the device is rooted before proceeding with the installation
# 174 - remove oracleansisqlrowslimiter since it be no longer use
updated assertions in TestSimpleBodyHandler and TestVertxTLSBuilder to use 3 secure protocol values instead of 1 to ensure correct number of secure protocols
updated Java library path from e3506ff7c11f638458d08120d54f186dc79dd
added a check for the haptic dismissed state in TaskViewTouchController to ensure that dismissal occurs only when the hapt
fix mixineventworldexplosion crash if entity be not a projectile
removed unused imports and modified the getItemId method in SymbolInputAdapter to improve code clarity and maintainability by eliminating unnecessary code
updated the method signature of ` getBook ` to use ` @ PathParam ` instead of ` @ PathParam ` for limiting bids and asks
added handling for single quotes in the result string to ensure proper formatting of special characters in the output
[ hotfix ] [ k8s ] add tostring ( ) method to kubernetesleaderelectiondriver and zookeeperleaderelectiondriver
refactor SqlSessionFactoryBean to improve session management to enhance performance and maintainability of SQL session management
[ 3.0 ] fix nullpointerexception in tripleinvoker ( # 4649 )
replaced Gdx . app . error with GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing an exception instead of
added a method ` isStarted ( ) ` to the ` Deadline ` class and implemented timer registration logic in ` RawStoreProxy ` to ensure
added handling for ClosedChannelException in NettyRequestExecutor to improve error messaging for closed channels
modified the way genres are retrieved in ItemListActivity to avoid null pointer exceptions when mBaseItem . getGenres ( ) returns null
[ flink - 20613 ] [ coordination ] reset the master hook in checkpointcoordinator when region recovery be trigger
entity system : add support for mappedcontainers in prefab ( # 1187 )
[ hotfix ] [ wal ] use cost of active memtables when there be no unpinned memtable
added a new test for retrying the same host on callback failures in HttpTest . java to ensure proper handling of callback failures during HTTP requests
remove unnecessary package - info . java file in the background package to improve code clarity and maintainability
added a new test class SQLServerEscapeQuestionCharacterTest for SQL Server entities to ensure proper handling of escaped question characters in SQL Server queries
added nullability annotations and improved constructor parameters in CamelModule and JoobyBeanRepository to enhance code robustness and prevent potential NullPointerException
replaced synchronized block with Util . wait for synchronization in JavaFXSEPort . java to improve thread safety and reduce synchronization overhead
updated package structure and import statements from ` com . kenai . jaffl ` to ` com . kenai . jaff
replaced RegionDecoderCropBehaviour and BitmapCropBehaviour initialization with a new method createCropperBehaviour to improve code clarity and
removed appName parameter from configure methods in InputRC and related classes to simplify the configuration process by eliminating unnecessary appName parameter
add test for install / uninstall command that ignore dependency
danielwagnerhall : use -- headless = chrome instead of setheadless in test .
replaced direct assignment with interning of the value in VersionedValue . java to ensure that the value is not reassigned after use
added support for " MOVE " status in the connection handling logic to enhance functionality by allowing multiple status codes to be processed
updated ISO8601 _ PERIOD _ MICROS and US _ MONTH _ DAY _ YEAR2 _ TIME and US _ MONTH _ DAY
updated import statements from ` org . apache . curator . shaded . com . google . common . collect . Lists ` to ` com
[ hotfix ] [ network ] fix potential npe in hsbuffercontext # startspilling
updated permission checks in Visit . java to include both PERMISSION _ ADMIN _ VISIT _ UNTRUSTED and PERMISSION _ VISIT
do n ' t try to register a jabber protocol if it ' s already registered
updated BasicURLNormalizer to include additional hexadecimal characters and added a new test for curly braces in TestBasicURLNormalizer to enhance URL normalization functionality to
changed access modifiers of methods in QuickstepTransitionManager from protected to private to restrict access to these methods for better encapsulation
added a condition to compare the clock rate when res is zero to ensure consistent comparison of clock rates across encodings
added a method ` getProjectPath ( ) ` to ` ProjectGenerator ` and modified ` generateProjects ( ) ` to return an ` ImmutableSet <
simplified the handling of zero digits in HostLocaleProviderAdapterImpl . java to improve code readability and maintainability by reducing unnecessary
added a new file MSwingUtilities . java that implements Swing utility methods for image manipulation to facilitate better error handling and image
camel - 14850 : camel - mail - should use defaultasyncproducer instead of defaultproducer to enable asynchronous processing of mail message
added @ RefreshScope annotation to CasCoreWebConfiguration and PasswordlessAuthenticationConfiguration classes to ensure proper refresh behavior during configuration updates
added unit test base on user forum issue
added new Main and ScriptRenderer classes for script rendering functionality to facilitate the rendering of JavaScript templates in the application
added a condition to check if the input state is __ NONE in the content type check and added a new test in RequestTest . java to
added bounds checking for glyph dimensions and introduced a method to check for descendant actors in Group and FlickScrollPane classes to improve code robustness and
replaced calls to ` reportFailure ` with calls to ` context . runCloseHooks ` in ` DeploymentManager . java ` and added a
simplified the ` stackToString ` method by introducing a ` forceIgnore ` parameter and modifying the ` wildKey ` variable to improve
increased sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve test reliability by allowing more time for
updated import statements in LoincHandler . java to use a wildcard import and modified conditional check for shortName to improve code readability and ensure
do n ' t use classpathurlstreamhandler in jollydayholidays . getjollydayholidaysxmlurl ( )
added a new file ` FieldUtils . java ` with utility methods for accessing and setting fields in a specified class to provide utility methods for accessing
removed the condition for checking the mode in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to simplify
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added padding for custom content to improve user interface
added method to update account settings with error handling in XabberAccountManager to ensure proper handling of invalid token and state updates when accounts are
added a new method ` setvar ` to set a variable in the command - line to provide functionality for setting variable values from command - line
fix catentity not be able to fire animal tame event . close # 402
improve error message for unsigned range in windowframe
pdfbox - 4892 : check that there be only one help font , a suggest by valerybokov
added a call to set the application ' s mode in PageListController to ensure the application correctly reflects the current state of the application
added support for specifying Docker file path and build arguments in ImageFromDockerfile . java and created DockerfileBuildTest . java with parameterized tests
added a null check before initializing threadInfos [ threadId ] to avoid potential NullPointerExceptions when accessing threadInfos [ threadId ]
updated the condition to use a constant FLOAT _ EPSILON instead of a hardcoded value to improve code readability and maintainability by using a
[ hotfix ] add more logging in singleinputgate and singlecheckpointbarrierhandler
added new table constants to the Schema class to enhance functionality by supporting additional table types
added a minimumSimilarity parameter to the FuzzyQuery constructor and modified FuzzyTermEnum to accept a minimum similarity value to enhance flexibility
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
log4j2 - 1343 add immediateflush property to outputstreamappender and warn if it be not set within the enclosing appender
added additional auto - configuration classes for Rabbit , Kafka , and Rabbit in ZipkinAutoConfiguration to enhance auto - configuration flexibility for better integration
added null check for the component before removing it in JLayer . java and created a new test class bug6875716 . java to
updated import statements from ` shaded . com . google . common . base . Function ` to ` com . google . common . base .
refactor BciBlockMapping to introduce returnBlock and unwindBlock for better block management to improve block mapping efficiency and clarity in
refactored conditional checks and added getter and setter methods for legacyRenderer in Label . java to improve code clarity and ensure proper handling of
replaced the method ` intToFourBytes ` with ` Ints . toByteArray ` in ` AbstractJweDecrypter ` and `
added a null check for mObserver before verifying its presence to prevent potential NullPointerException when mObserver is not initialized
modified the return type of the ` thenComparing ` method in ` Comparator . java ` and added a new ` Department ` class with
refactor DocIdSet class to improve code structure to enhance maintainability and readability of the code
updated the anomalyResult ' s end time to use the current key bucket millis instead of null to ensure the anomaly result reflects the
added a try - catch block to handle NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is not thrown when parsing values
added ClassLoader setting to MockFactory enhancer configuration to ensure proper class loading for mocking scenarios
added a new ` OriginalFormat ` class and modified the ` format ` and ` parseObject ` methods in ` ConverterWithEnumFormat ` to
replaced hardcoded string " yyyy / MM / " with a static final constant PATTERN _ YYYY _ MM in FileStorageUtils . java to
refactor JAWTRenderer class for improved readability to enhance maintainability and clarity of the code
camel - 14850 - camel - aws2 - * : enable autowire for the lambda endpoint - aws2 - lambda :
server : ensure that a valid mac address can be generate for a network in the network
removed authorization check from ProxyServlet . java to simplify authorization handling logic
rename method from ` submit ` to ` execute ` in ` TraceableExecutorService ` to improve clarity and consistency in method naming
added ` getDetails ( ) ` methods to ` AbstractAuthenticationToken ` , ` UsernamePasswordAuthenticationToken ` , and ` AuthenticationProcessingFilter `
updated the initialization of ` randUsePoints ` from ` nextBoolean ( ) ` to ` nextInt ( 5 ) ` and added a 80%
replaced calls to ` appendDot ( ) ` with ` endSentence ( ) ` across multiple classes to improve clarity and consistency in termin
updated TimeFormat methods to include Locale parameter for consistency across multiple classes to ensure consistent formatting across different locales
replaced specific imports with a wildcard import and added sorting logic for named arguments in GroovyParserVisitor . java to improve code readability and ensure
added bounds checking for top , bottom , left , and right inset dimensions in Border . java to ensure that inset dimensions do not exceed
replaced direct instantiation of GestureState with a constant DEFAULT _ STATE in TouchInteractionService . java to improve code readability and maintainability
replaced Joda ' s DateTime with Java ' s Instant for version formatting to improve compatibility with Java ' s date formatting standards
refactor openblas and openblas _ nolapack files for consistency to improve code maintainability and readability
replaced IOUtils . closeQuietly with java . io . IOException in TorrentsStorage . java to improve error handling by ensuring proper resource closure
added synchronized keyword to initTxnMgr method to ensure thread safety during transaction manager initialization
increased the timeout duration from 120 seconds to 480 seconds in AbstractDistribZkTestBase . java and set the SO _
added a new class ` SearchResults ` to handle search results using Lucene ' s ` SearchResultFactory ` to facilitate the retrieval
refactor thread CPU refresh handling in CPUSamplerSupport . java to improve clarity and structure to enhance code readability and maintainability by
refactor the initialization of the primitives array in BytecodeNode . java to ensure that the primitive array is properly initialized when it is not already
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " and " 8.
updated the feature flag " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified the text
added a method to retrieve tenant pools for the current instance in InstanceResource . java to provide access to tenant pools for the current instance
added methods to check if a sort can early terminate based on document ID and prefix in TopFieldCollector . java to improve code clarity and
added a check for ` isToString ( ) ` in ` InlineBytecodeGenerator . java ` and updated tests in ` InlineByteBuddy
added logging statements to CxxCompileStep and CxxPreprocessStep to improve error handling and debugging capabilities during compilation and preprocessing
fix stringutil . removecharacter ( string , char ) for empty string
[ 3.0 ] fix issue with metadata service port and protocol ( # 4569 )
[ drools - 3852 ] add datatransformer interface for kie - api - runtime
changed the type of ' values ' and ' objval ' from Collection < ? > to Collection < Number [ ] > and Number [ ]
removed unnecessary conditional check in FormatStringChecker . java to simplify the condition for better readability and maintainability
removed unnecessary whitespace in the initialization of SolrCore variable to improve code readability and maintain consistency
refactor ITestDbTxnManager for improved transaction management to enhance code readability and maintainability
refactor database connection handling to use a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added a new method ` remoteCodeFirstPojo _ testMapModel ` to ` CodeFirstPojoClient ` and modified ` CodeFirst
pdfbox - 4892 : avoid npe , a suggest by valerybokov
modified the item listener logic in ScaleDialog . java to improve the selection state of scaleOffsets to ensure that the listener triggers the selection state of
fix nullpointer exception in itemtravelbelt . tick ( ) .
pdfbox - 4892 : continue if there be no appearance stream , a suggest by valerybokov
changed the type of the ` keys ` variable from ` SortedSet ` to ` LinkedHashSet ` to ensure the order of elements in the ` keys `
updated the TIME _ BETWEEN _ TOUCH _ AND _ DRAG constant from 1500 to 1000 and added an overridden method in PagePreview
updated the preload version from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java
added a conditional check before setting all constructors to public in MainMockTransformer and created new test classes for mocking static methods with private constructors to
pdfbox - 4892 : avoid unnecessary object creation , a suggest by valerybokov
add support for custom window title on jdk 11 ( issue # 269 )
updated depth assignment logic based on pixel size in XRSurfaceData . java to ensure proper transparency handling based on the color model ' s pixel
added error handling for reading response body in OkHttpDataSource to improve robustness by throwing an exception when reading the response body fails
added a static method ` exit ` in ` TopLogging ` and updated ` TopThreadGroup ` to use this new ` exit ` method to
modified the logic for determining the starting index in NativeRegExp . java to ensure correct handling of non - global regex patterns
planner - 468 ignore test when upgrade optaplanner to 6.3 . 1
updated the variable name from lowAllocation to highAllocation in DefaultAllocator . java to correct the reference to the correct allocation
added methods to clean entries without feeds in DatabaseCleaner and FeedEntryDAO to improve data management by allowing deletion of entries without feeds
changed the return type of the appendToLabel method from void to AtomicCounter to enable method chaining for better usability
[ java ] make lowlatencymediadriver no - op idle strategy .
added handling for ` HttpStatus . NOT _ MODIFIED ` in ` CacheControlHeadersWriter ` and corresponding tests in ` CacheControlServerHttpHeaders
updated test methods to use ` ToolEvalNodeFactory ` instead of ` SpliceInstrumentListener ` and ` SplicedNode ` to enhance
refactor paintTabArea method implementation in SynthTabbedPaneUI . java to improve code readability and maintainability
updated the ` getKrakenDepth ` and ` getKrakenTrades ` methods to accept an additional ` args ` parameter instead of using
camel - 14284 : camel - core - optimize file path normalization by use file . separatorchar and file . isAbsolute ( )
added a new method ` build ` in ` JavaProvenance ` for building JavaProvenance objects based on classpath and memory mapping to enhance the
added trace logging for registered Hive functions , UDFs , and non - deterministic UDFs in HiveFunctionRegistry . java to improve debugging capabilities and
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage for cloud state updates
do n ' t send hint for deleted columnfoundexception if it ca n ' t be deserialize
added a check to ensure the output file is still writable in NativeErrors . java to prevent tests from running as root when the output file is
added package info retrieval and error handling in LauncherModel . java to ensure that components are only processed when application information is enabled
cloudstack - 410 : do n ' t delete offering service map when database upgrade fails
updated exception handling in AbstractFaultTolerantChunkOrientedTasklet and added a new test in FaultTolerantChunkOrient
replaced ` startsWith ( ) ` with ` regionMatches ( ) ` for string validation in ` LineReaderImpl . java ` to ensure case
added imports for SourcesFileErrors , SourcesFileResults , and modified the data table return logic to include global data tables to enhance functionality by allowing
added import for Overview and invoked dismissAllTasks method in TaplTestsTaskbar . java to ensure that all tasks are removed from
server : add dbupgradesystemvmtemplate interface to facilitate systemvm template upgrade
removed redundant null checks for the LdapClient connection to simplify code and improve readability by eliminating unnecessary null checks
refactor index handling in SequenceAction . java to use a local variable for better readability to improve code clarity and maintainability
add set _ keyspace ( ) method to allow set a keyspace
added a check to skip synthetic fields in ReflectUtils . java to improve performance by avoiding unnecessary processing of synthetic fields
added a new LoggerProvider class and integrated it into the Configuration and ApplicationController classes to facilitate logging functionality in the application
updated the ` ServerStatusCommand ` to use ` ImmutableMap < String , Object > ` instead of ` ImmutableMap < String , String > ` and
add a warning if there be more than one glue class that configure the spring context .
added a deepStart method to the Startables class to facilitate deep starting of multiple startables
removed the deprecated ` reservePrimitiveExtensionArray ( ) ` method from ` Shape ` and ` ShapeImpl ` classes to indicate that the method is
make laser target block implement ilasertargetblock , close # 3550
simplified the condition for object name validation in AbstractJdbcDatabase . java to improve readability and maintainability of the code
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
set the expiration message period to zero in MemoryLimitTest . java to ensure that the test does not consume more memory than expected
removed unnecessary null checks and simplified conditional checks in RequestHandlers . java to improve code readability and maintainability
replace ' - ' with ' . ' in getServletName ( ) method to ensure consistent logging format for servlet names
updated the handling of the PYTHONPATH environment variable in ProjectBuildFileParser . java to ensure only non - empty keys are added to the
updated audio format validation and memory limit handling in DirectAudioDevice . java and Toolkit . java to ensure proper frame size handling and improve error
add null check for enums in ElasticSearchStringLookupService to improve robustness by avoiding potential NullPointerExceptions
updated error message format in CommitLogReader . java to include the segment ' s start time to improve clarity of error reporting for better debugging
added assignment of the WebSocket policy from the container scope to ensure proper handling of WebSocket session policies
removed the boolean flag ` hasStaticFieldsOfCurrentType ` and simplified the condition for initializing static fields in ` Java2TypeScriptTranslator `
updated the context creation to use the webroot argument instead of UI _ DIR to ensure the correct webroot is used for the UI context
( chore ) camel - spring : migrate test to junit 5 ( # 4358 )
[ netbeans - 4892 ] remove reflection - based access to monitoredvmutil . isattachable
updated method names from ` printHeaderObject ` to ` createHeader ` across multiple formatter and text formatting helper classes to improve clarity and consistency
replaced multiple specific imports with a wildcard import and added a placeholder method for placing stop orders to streamline import statements and provide a placeholder
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure buffer state is reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to prevent potential NullPointerExceptions when mOriginalForeground and mOriginalBackground are
updated comparison logic in FloatingDecimal . java and added a new class ToString . java with a main method to ensure correct validation of decimal exponent
updated the property type check in ` PropertyDescriptor . java ` and added a new test class ` Test7189112 . java ` to ensure
removed the maxVersion parameter from the getVersions method in RealTimeGetComponent . java to simplify version retrieval by directly using the latest updates
updated the origin setting logic in NettyRequestFactory to differentiate between secure and HTTP URIs to ensure correct origin is used based on URI security
updated animation behavior in RecentsView and TaskView for task overlay animations to improve user experience by providing visual feedback during modal transitions
added field information to checkState messages in ORCRecordReader . java to improve clarity of error messages for better debugging and debugging
added new sample links for Tears of Steel and Basic 4x3 in DemoUtil . java to facilitate the
removed HIBERNATE52 _ ENTITY _ MANAGER _ INTERFACE and HIBERNATE _ JPA _ METAMOD
updated log references from ExecRPCInvoker and HBaseRPC to " org . apache . hadoop . ipc . RPCEngine " to align logging with
added diagnostic logging and a new test for handling union types with multiple fields in TestSpecificCompiler . java to enhance diagnostic reporting for generated code generation
modified the WebSocket session creation logic in WebSocketEndpoint . java and added a new test for session closure in WebSocketIT . java to ensure proper handling
increased delay duration from 1 second to 10 seconds and updated listener methods in DaoStateMonitoringService and DaoStateNetworkService to
replaced OpenSymphony group mappings with Apache Struts mappings in XmlConfigurationProvider . java to ensure compatibility with the latest Apache Struts version
modified the stop logic in WebCamInputPanel to conditionally call stream . stop or stream . getVideoTracks ( ) [ 0 ]
changed the type of ` chartData ` from ` List ` to ` ArrayList ` and added a new enum ` BittrexChartDataPeriod
[ geot - 5892 ] fix checkstyle violation in geotools example
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` g ( li , s - > s .
hhh - 10956 - improve exception message when no part of a composite identifier be null
rename ` ` download ' ' to ` ` download ' ' for ` ` search ' ' ( # 4396 )
refactor URI registration logic in URIRegisterExecutorSubscriber and remove the registerURIDefault method from ShenyuClientRegisterDefaultService
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code clarity and maintainability
added a check for non - blank OSDB hash before retrieving API information from OSDB to improve robustness by handling cases where the OSDB
added a method to transfer tokens based on call token values and validation in the RuntimeImpl and MUtil classes to enhance token transfer functionality and ensure valid
camel - 14284 : camel - ftp - allow to delete a file in stepwise mode . thanks to benjamin
updated the default value for searchBindPassword from ' searchBindDN ' to ' searchBindPassword ' to ensure the correct password is used for
added assertions and modified hash table join logic in MapJoinOperator and HybridHashTableContainer classes to ensure proper handling of match join results and
modified the constructor of HTTPSPDYAsyncEndPoint to accept an additional AsyncEndPoint parameter and added methods to retrieve local and remote addresses to enhance
added ` intent . putExtra ( " id " , tweetId ) ` to multiple adapter classes to store the tweet ID in the intent for
refactor disconnect logic in HttpURLConnection to use a separate disconnectWeb method to improve clarity and maintainability of the disconnect logic
replaced ` int ` with ` AtomicInteger ` for ` _ numChildren ` and modified the return statement in ` TraceContext ` to improve thread
removed unused JWT and RESPONSE constants from multiple Java files to clean up the code and improve readability
added the enabled = false annotation to the @ Test annotation in ValueTypeTests . java to disable the test until the functionality is implemented
implement kieresources interface instead of resourcefactoryservice interface ( # 2595 )
updated predicates to use ` PredicateType . NOT _ IN ` instead of ` PredicateType . IN ` across multiple classes to ensure correct handling of
updated exception handling in FileActivity , Preferences , and ReceiveExternalFilesActivity to use Exception instead of AccountUtils . AccountNotFoundException to improve error handling
added null check for witnessService before validating permission to avoid potential NullPointerException when witnessService is not initialized
updated the method of constructing the taggedCol string to use getExprString ( ) instead of get ( ) to improve clarity and consistency in
added a check to ensure the item ' s Javadoc is not empty before setting it to avoid potential null pointer exceptions when the Javadoc is absent
renamed ` holderMethod ` to ` holderMetadata ` and updated related methods in ` CompiledICHolder . java ` , and added a
removed unnecessary revalidate calls and revalidated tabs container with animation safety to simplify the code and improve performance by reducing unnecessary revalidations
[ hotfix ] [ kafka ] remove unsupported metricgroup unsupported in bulkformat
updated the calculation of the y variable in the Polygon class to use the old variable ' x ' instead of ' x ' to ensure the correct
updated the ` createCache ` method to accept a ` Configuration < Object , Object > ` parameter to ensure type safety by explicitly casting the cache
add a check for non - empty string constant in InheritanceUnsafeGetResource . java and create a new bug2974855 . java
refactor ShadowCookieManager to improve code readability to enhance maintainability and facilitate future updates
added a configuration option to control storage - based authorization checks before dropping external tables to ensure backward compatibility with external table management and maintain backward compatibility
added a closing brace to the conditional statement in Stage . java and modified the drawing position in ProgressBar . java to improve code readability and ensure
[ gr - 23254 ] make platform capability . getbyteorder ( ) return native byte order .
updated the property name from " namedpipesocketprovider . timeout " to " windowsprovider . timeout " in WindowsClientProviderStrategy . java
updated the ` initWebViewLogin ` method to accept a ` baseURL ` parameter and modified the login URL loading logic to enhance flexibility in
corrected a typo in the exception message from " Paramter " to " Parameter " in CallableStatementHandler . java to improve clarity
updated the ` @ RequestParam ` annotation and modified the ` @ DateTimeFormat ` annotation in ` AuditEventsMvcEndpoint ` , and added a new test
renamed ExponentialTimer to PreciseThroughputTimer and updated related classes to improve clarity and consistency in naming conventions
added functionality to remove and delete soft bodies from the dynamics world in SoftBodyTest . java to ensure soft bodies are properly managed and cleaned
changed interface visibility from package - private to public in multiple provider classes to allow access to these interfaces from other packages
[ zeppelin - 3550 ] fix log message in zeppelinhubclient and zeppelin
add a test to ensure that the jingle element do n ' t contain redundant namespace .
add a null check for the redplasma in the stat crafting , and fix a npe in the stat crafting
added support for HTTP / 2 headers in BareResponseImpl and modified HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler
updated conditional checks for member removal and denied status in Remove . java to ensure correct handling of trusted and member memberships in the plot
updated string concatenation and formatting in SimpleReport . java to improve readability and maintain consistency in formatting
removed the option ` - XDignore . symbol . file ` from ` JavapTask ` and added a new class ` T68
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and removed the ` TickerDemo ` class to streamline the codebase by
removed unnecessary try - catch blocks and added null checks for contract and contract address in the transaction processing to improve error handling and provide clearer error
make app3d work with applet without input3d
added an @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests during development
change scripttagpayloadreader to return false instead of throw an exception
renamed the method ` getRepositoryFactoryClassName ` to ` getRepositoryFactoryBeanClassName ` in ` JpaRepositoryConfigExtension ` to improve clarity
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to improve flex
replaced instances of ' this ' with ' IOSGLES20 . x ' , ' IOSGLES20 . y ' , and '
deleted UploadPathActivity . java and updated UploadPathActivity . java to handle instant upload paths to streamline the upload process by eliminating
modify return statements in SimpleTextFieldsReader to handle both totalTermFreq and sumTotalTermFreq based on indexOptions to ensure correct handling of
fix : add implicit constructor to parentexiter ( # 2329 )
added a database parameter to multiple methods in ColumnSnapshotGenerator to ensure compatibility with OracleDatabase instances
refactor Database class to improve code readability to enhance maintainability and facilitate future updates
refactor SpringApplicationBuilder for improved clarity to enhance maintainability and readability of the code
updated iterator assignment in PointInSetQuery to use ' this . sortedPackedPoints . iterator ( ) ' instead of ' indexOptions '
removed the substring operation from the rawName string to streamline the code by eliminating unnecessary substring operations
added a switch statement to handle specific collection types in AbstractCollectionAssert . java to improve type safety and clarity in collection assertions
changed the access modifier of the Option enum from static to instance to allow subclasses to access the Option enum without needing an instance variable
added a twitlonger dialog conditionally based on character remaining text in Compose . java and ComposeActivity . java to enhance user
replaced the method ` toggleKeepInSync ( ) ` with a call to ` getFileOperationsHelper ( ) ` in ` FileDetailFragment
replaced ` DatatypeConverter . parseBase64Binary ` with ` Base64 . getMimeDecoder ( ) . decode ` in ` ImageUtil
added new classes ` ControllerCounter ` and ` DBCallback ` to manage database operations to facilitate tracking and database operations in the analytics
changed the parameter type of the deleteTicket method from String to final String to enforce immutability of the ticketId parameter
added a new file FlywayMigrationRunner . java to implement a flyway migration application to facilitate the migration of Fly
replaced ` isEmpty ( ) ` method calls with ` size = 0 ` in ` HashMap ` and added a new class ` NotEmptyHashMap
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest release
added nullability annotations to the modify method in CompressionCodec and related classes to enhance code robustness by preventing potential NullPointerExceptions
added null check for mainValue and improved resource management in LauncherHelper , Arrrghs , and TestHelper classes to enhance robustness
rename test classes from ` BasicErrorControllerIntegrationTest ` and ` ByteArrayRandomAccessDataTest ` to ` SampleDataGemFireApplicationTest
change method name from setCompiledGraphSize to setCompiledIRSize and update related methods accordingly to improve clarity and consistency in naming conventions
pdfbox - 4892 : remove unnecessary cloneable implementation , a suggest by valerybokov
added a method ` resetIconLoadResult ( ) ` to ` FloatingIconView ` for resetting the ` sIconLoadResult ` to
replace formFieldValues ( ) with formFieldValuesToCaps ( f . getRawValueCharSequences ( ) ) to ensure correct handling of character
updated icon positioning logic in IconRecentsView . java to handle landscape orientation and clear all item view bottom margin to ensure proper layout
deleted the AddAdapter . java file to the functionality is no longer needed in the project
added a check for empty constructorCodeList before accessing its elements in NonStaticLifter . java to prevent potential NullPointerExceptions when constructorCodeList
refactor the ` processSortCols ` parameter and its logic in ` OpTraitsRulesProcFactory . java ` to improve clarity and functionality
log4j2 - 1343 make sure logwatcher . getlastevent ( ) return - 1 when a new watcher get register
added a print statement to the Java2TypeScriptTranslator class to enhance type translation functionality for better debugging
updated the SDK version from 4799589 to 4913185 in SdkConfig . java to reflect the latest features and improvements in
removed conditional check for SPRING _ AOP _ PROXY _ TARGET _ CLASS in TraceEnvironmentPostProcessor . java to simplify the code by
removed the singletonLock variable and its usage in TypeCachingBytecodeGenerator to simplify the lock handling logic for improved clarity
renamed methods ` responseClassCallback ` and ` forwardClassCallback ` to ` responseClassCallbackWithClass ` and ` forwardClassCallbackWith
refactor file writing methods to include an optional append parameter to enhance flexibility in file operations by allowing file operations to append to the output directory
modified the handling of Maven settings in ` MavenExecutionContextView ` and refactored repository mapping logic in ` MavenRepositoryMirror ` to ensure
added a ` name ` parameter to ` BuildRuleSourcePath ` and ` PathSourcePath ` classes and updated constructors to include it to enhance
updated the redirect URI matching logic in OAuth20CallbackAuthorizeEndpointController and added a new test case in OAuth20CallbackAuthorizeEndpointControllerTests to
replaced calls to ` annotations . values ( ) . toArray ( EMPTY _ ANNOTATIONS _ ARRAY ) ` with ` AnnotationParser . toArray (
replaced instances of ` getBadgedDrawableForUser ` and ` getBadgedLabelForUser ` with direct calls to ` getBadgedIcon
updated the default value for the " line . separator " property from " OS default " to " Line separator ( LF or CRLF ) for output
fix a bug where configurationmanagerutils . isimplementinginterface would return false for derived class
sanitize the input in the model so that it do n ' t contain special character
chore : update java and python dependency ( # 7 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to include an IOException declaration to improve error handling and ensure correct file contents are
refactor CountersReader class for improved readability to enhance maintainability and clarity of the code
removed the ` getContainerType ` method and updated container type assignments in ` AllAppsRecyclerView ` , ` UserEventDispatcher ` , and `
hbase - 25836 deprecate ipc . server . allocator . max . buffer . count and ipc . server . allocator .
fix native join and window query in native test
added a method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types in ` Executable . java ` to improve the accuracy of
refactor TestFSTs class for improved readability to enhance maintainability and clarity of the code
refactor methods in ` CanvasDrawable ` , ` DrawInputBox ` , and ` LaTeXTextRenderer ` to use ` getLabelTop
hbase - 15811 increase regionsplitpolicy initial flush size to 2 * tableregioncount ( addendum )
removed loading state resetting and starting of the model loader in LauncherClings . java to streamline loading process by eliminating unnecessary state
updated ManagedSelector to initialize keys and updates lists with null values and changed the initialization of updatesAt to use ISO _ OFFSET _ DATE _ TIME
added a configurable set of excluded datasource names in SpringDataSourceBeanPostProcessor to enhance flexibility in handling Spring datasource exclusions
added a call to storeUndoInfo ( ) in TableValuesView and removed unnecessary null check in TableValuesPanel to streamline the code and
camel - 14850 - camel - aws : improve error handling for aws client creation
refactor channel handling in VelbusSensorHandler to use a loop for multiple channels to improve code readability and maintainability by reducing
disable cache selection due to unfavorable benchmarks in LocalCacheSelectorCode . java and update BoundedLocalCache . java and Bounded
added a test for illegal database names in IoTDBSessionSimpleIT and implemented a check for empty nodes in PartialPath to ensure proper error handling
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure new files are reset before garbage collection
replaced ` desiredWorkspaceLeftRightMarginPx ` with ` desiredWorkspaceHorizontalMarginPx ` and introduced a new method ` getHorizontalMarginPx
reformatted code for better readability and consistency in CharTokenizer . java to enhance maintainability and clarity of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
api : fix typo find by codespell on fossies . org
updated libGDX version and libGDX nightly version from " 1.5 . 6 - SNAPSHOT " to " 1.
removed the private Set < String > metricNames and its getter method from SolrCore . java to streamline the code by eliminating unused
replaced ` URI ` with ` Path ` for managing file paths in ` MavenManifestFactory . java ` to improve code readability and le
replaced the direct OS name detection with a static final boolean variable to improve code readability and maintainability
refactor JdbcAggregationRepository to improve code structure to enhance maintainability and readability of the code
added functionality to clear the slotList and add items from another Frame to ensure the slotList is updated with the updated values from another Frame
initialize m _ predCount to - 1 in PredicatedNodeTest . java to ensure m _ predCount is properly initialized before use
added a mergeProperties method to the ConfigurationSpringInitializer class that retrieves configuration properties to ensure that all configuration keys are merged into a single property
updated the logger parameter type from ` Logger ` to ` org . slf4j . Logger ` in ` setupLogging ` method and simplified
replaced HashMap with LinkedHashMap in multiple files to maintain insertion order
added logic to retrieve the JDBC handler map based on the superclass of the type to ensure proper handling of JDBC types in the TypeHandlerRegistry
added debug logging statements to multiple item writer classes to facilitate troubleshooting by providing insights into item writing operations
replaced the replacement of ' ; ' with a well - formed string in LocaleUtils . java to ensure proper parsing of language ranges based on
modified the handler context execution in ` Http2ServerResponseImpl . java ` and added context initialization in ` Http2Test . java ` to
cache xssftable in basexssfevaluationworkbook . gettable ( string ) to improve performance
updated SchemaTextDetailType checks and simplified symbol assignment logic in BaseSchemaTextFormatter . java to enhance clarity and maintainability of the code
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to ensure compatibility with
replaced HashSet with LinkedHashSet for roots and leaves in SparkWork . java to maintain insertion order while maintaining insertion order
added a check to return null if the operator tree is not properly cloned to ensure that the operator tree is properly cloned before proceeding
added a null check for the client ID in DynamicRegistrationClientConfigurationService and refactored JsonFileRegisteredClientService to return the knownClient
added a clear ( ) method call to AchievementList . field _ 187981 _ e in the StatList . java patch to
initialize userName , productName , and productVersion to an empty string in MutableDatabaseInfo . java and MutableJdbcDriverInfo . java to ensure
updated permission strings from link _ share _ read _ only to link _ share _ view _ only in QuickSharingPermissionsBottomSheetDialog . java
added a LongBuffer implementation to handle long data reading in ByteBuffersDataInput . java to improve performance by optimizing long data reading operations
updated file time handling in UnixFileAttributes to use separate sec and nsec variables to improve clarity and consistency in time representation
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection with a specific reference holder to
added visibility management for the search bar in AllAppsContainerView based on user preferences to improve user experience by controlling search bar visibility based on
changed the method call from ` router ( ) ` to ` routes ( ) ` in ` EnvRouterFeature . java ` to ensure the correct
added a null check for ' cur ' and ' next ' in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new action ` ReloadPageAction ` to manage reloading the current page to enhance user experience by allowing users to reload the current page
changed log level from info to warn for missing plot entries in SQLManager . java to provide more informative logging for missing plot entries
updated the minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to reflect the latest release
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that a configuration type does not have a selected version to
[ geos - 8470 ] use serviceloader . load ( ) instead of factoryregistry . lookupproviders ( )
added a finalize method to close the table in HiveHBaseTableInputFormat to ensure proper resource management and prevent memory leaks
added methods to stop the statement executor in JdbcConnector and HiveViewImpl to ensure proper resource management and logging during settings updates
updated XML document feature settings to disallow doctype declaration and load external DTD to ensure proper handling of external DTDs during XML parsing
replaced ` JdbCommand . waitForPrompt ( ) ` with ` jdb . contToExit ( 1 ) ` and updated the output
added a ` getType ` method to ` ShadowContentResolver ` and corresponding tests in ` ContentResolverTest ` to enable retrieval of type information from
updated the removal logic in ExpressionThreadPoolManager to use a local variable for future and entry to improve code readability and maintainability by reducing
updated the property key from " port " to " vertx . httpPort " in HttpTestBase . java to align with the new property
replaced ` addCaptureListener ` with ` addListener ` in ` Dialog . java ` to improve listener management for button table interactions
increased the default batch size from 10 to Runtime . getRuntime ( ) . availableProcessors ( ) * 3 to optimize memory usage for better
added error handling when establishing Resource Manager connection in TaskExecutor to improve stability by logging exceptions during connection establishment
refactor exception handling and return logic in LambdaRewriter . java to improve clarity and maintainability of the code
updated error message to include minimum and maximum values in the IllegalArgumentException to improve clarity of error messages for better debugging
updated the onMessage method to include the owner parameter across multiple classes to enhance message handling by associating the telegram with the associated entity
added a new interface ` Cursor ` and ` Database ` and a ` Row ` class with methods for managing database operations to provide a structured way
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the codebase
# 113 - enh : add setbeanid ( ) method to ebeanserver and defaultserver interface ( # 113 )
updated the xsl file path for the add - to - site - descriptor transformer from " tools / xslt / add - menu - to - site
added a private List < RequestMatcher > matchers to the HttpSecurity class to improve the handling of request matchers in addition to existing ones
added hashCode ( ) and equals ( ) methods to ContactResource class to ensure proper hashing and comparison of ContactResource instances
initialize request and response to null in AbstractProcessor and remove unnecessary import in AbstractAjpProcessor and AbstractHttp11Processor to improve code clarity
updated logging messages and improved error handling in FileManager . java to enhance clarity of log messages and ensure accurate error reporting during saving
reset mockControl and teardown methods in TestJdbcDataSource and TestIndexSearcher classes to ensure proper resource management and cleanup after tests
added import statement for LambdasWithInterfaces and refactored assertions in SyntaxTests . java to improve code clarity and maintain consistency in
refactor ConnectionModel and ModeledConnection classes to improve code organization and maintainability
tika - 2333 -- remove fallback parser from tika - parserdecorator because it be not support in tika 1.5
fix fmlsecuritymanager . getclasscontext ( ) return null when there be no fml security manager
removed redundant declarations from AccountUtils , IndexedForest , and CustomPopup classes to improve code readability and maintainability
updated method call from " swap " to " rename " in TestCoreAdminApis . java and modified CoreApiMapping . java to use
added a new test method ` testJsxComment ` in ` JsLexerJsxTest . java ` and modified the ` Parser ` class
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for widget tests
added tests for handling missing Buck configuration in BuildEndToEndTest and updated failure assertions in CxxEndToEndTest to improve test
added physical memory validation in TestStringBufferAndBuilderGrowth . java to ensure that the machine has sufficient resources to run the test
deprecated the ` ConversionService ` class and added a constructor to the ` MapToLocalDateConverter ` class to streamline the conversion process by
added a success flag to HiveMetaStoreClient to indicate successful execution of operations
updated string comparison from ` = = ` to ` . equals ( ` ` * ' ' ) ` in ` ResourceReferenceInfo . java `
added support for " amp . twimg . com / v / " in tweet text checks in TimeLineCursorAdapter and TweetActivity to
added a @ Deprecated annotation to AreaReference . java to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes for improved readability to enhance maintainability and clarity of the codebase
added assertions and modified reference kind handling in MemberName . java to improve code clarity and ensure correct method invocation behavior
changed the default value of the SUBMIT _ KEY _ UPDATES system property from " false " to " true " and synchronized the runChange
added an else clause to the mouse event check in EditNodeTextField . java to ensure proper handling of mouse events in the text field
camel - 14850 : fixed beanexpression . lookupbyname to correctly resolve the bean type if it start with ' type : '
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor mockAgent ' s doWork method to use a lambda expression for exception handling to improve code readability and maintainability by reducing
added multiple ` getDescription ( ) ` methods to multiple classes for better clarity and consistency to improve user understanding of the functionality of the Maven
refactor face addition logic in ObjLoader . java to use a separate ArrayList for activeGroup ' s faces list to improve code readability and
refactor ProcessEngine class for improved readability to enhance maintainability and clarity of the code
rename ` reentrantLock ` to ` lock ` across multiple files to improve code clarity by using a more descriptive variable name
updated the ` getBomReference ` method to include a ` mavenPackaging ` parameter and adjusted related calls to enhance the bom reference generation to
updated back method to use evt . getComponent ( ) instead of the current component to ensure the back method operates on the correct component context
simplified the conditional logic for certificate verification in SASLAuthentication . java to improve code readability and maintainability
updated generic type parameters in ObjectArraySubject and related classes to improve type safety and clarity in method signatures
replaced ` NutchConf . get ( ) ` with ` getConf ( ) ` for configuration retrieval in multiple Java files to ensure consistency
bugfix : do n ' t remove boards pane when select a sheet stub
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the ` sessionId ` variable in the
added null checks before setting time intervals in ImportContainerImpl . java and updated test assertions in ImporterGEXF2Test . java to
removed the " - logLevel INFO - serverPort " flag from the command in MockServerContainer . java to simplify the command by eliminating
updated error logging to include the exception message instead of just the exception to improve error reporting by providing more context in error messages
updated the ` DispositionProcessor ` to use ` CrawlMetadata ` instead of ` RobotsHonoringPolicy ` to improve flexibility
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
( chore ) camel - jbang - test : use file . separator for path comparison
added a method ` alternativePath ( ) ` to ` ExpectNewDemo . java ` that initializes ` DataInputStream ` with an empty byte array to
updated input initialization to use getFirstFilter ( ) instead of input . init ( ) to ensure the first filter is initialized correctly for the test
added protectionDomain parameter to BufferAlignmentAgent constructor to enhance buffer alignment functionality by allowing protection domains
added dispose method to WaterRipples class to ensure proper resource management and prevent memory leaks
added configuration for disabling unsafe external table operations in Hive configuration to ensure that data changes are not affected by external applications that may have negative effects
updated the description of the Authorization header in TokenKeyEndpointDocs . java to clarify that no authorization is required for requesting public keys
updated wallpaper offset from - 30 to 0 in Workspace . java to improve the visual appearance of the wallpaper in the user interface
updated SybaseASADatabase to return true instead of false and added conditional checks for SybaseASADatabase to enhance functionality to support Sy
nifi - 2323 : fix putsql to always commit / rollback when autocommit be set to false
added a check to ensure the parent directory exists before creating a sub directory in SnapPuller . java to prevent potential errors when creating sub
updated the AppTarget ID from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure the correct launcher
updated framer methods to include an output buffer parameter across multiple classes to improve frame handling by associating the output buffer with the framed message
refactor constructor parameters in multiple classes for consistency to improve code readability and maintainability
pdfbox - 4892 : improve documentation , a suggest by valerybokov
updated PlainFormatter to truncate Instant . now ( ) to milliseconds to ensure accurate formatting of timestamps in milliseconds
updated the timeout duration from 1000ms to RETRY _ CLOSE _ TIMEOUT _ MS and added a retry mechanism in the close method to improve resource
hhh - 14850 - use reflection for private lookup in classloadingstrategyhelper instead of reflection
refactor Mockito class to improve code readability to enhance maintainability and facilitate future development
updated log message from " Closing proto event file " to " New proto event file " in HiveProtoLoggingHook . java to clar
added JUnit @ Ignore annotation to SamplingNamingTest . java to mark the test as ignored due to insufficient sample results
corrected a typo in the IllegalArgumentException message in GridLayout . java to improve clarity and accuracy of error reporting
refactor DecisionNode and WagonCART classes to improve formatting and error handling to enhance readability and maintainability of the code
added support for sorting and ordering of BoundSheetRecords in the XLS2CSVmra and BoundSheetRecord classes to enhance data retrieval and sorting
refactorImpulse calculations for better clarity and consistency in ThrustCurveMotor . java to improve code readability and maintainability
updated InputSystemJme initialization to use inputManager instead of a default instance to improve flexibility by allowing custom input managers
refactor hash code field offset assignment logic in UniverseBuilder . java to ensure offset is non - negative to improve code robustness and prevent
remove deprecate block . getmesh ( ) since it be no longer use
[ hotfix ] [ yarn ] fix typo in yarntaskmanagerrunner
added EMPTY _ WORD _ OPTIONS option to control empty word matching behavior to enhance flexibility in matching words based on user - defined options
update pushViewReplicaUpdates method to include writeCommitLog parameter to ensure correct pushing of view replica updates based on commit log status
added auto - opening preferences and updated button handling in CaptureActivity and URIResultHandler to enhance user experience by allowing web access to the result handler
added a new test method ` testBatching ` to ` JoinedTableTest . java ` to verify batching behavior for Hibernate to
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate item persistence errors
removed the deprecated ` format ( ) ` method from ` CucumberOptions ` and updated the plugin reference in ` RuntimeOptions ` to stream
removed the save ( ) method call from PMS . java to streamline code by eliminating unnecessary method calls
simplified the key event handling in ExtendedEditText . java to improve code readability and maintainability
updated the calculation of ` newCapacity ` in ` AbstractStringBuilder . java ` and added a new ` Capacity . java ` class for testing capacity calculations
replaced ` goHome ( ) ` with ` onNoteSaved ( noteTmp ) ` in ` DetailFragment . java ` to handle note
added support for handling endnotes in XWPFDocument and related classes to enable proper handling of endnotes related to OpenXML formats
updated the event publication to include clientInfo in the CasAuthenticationTransactionSuccessfulEvent to provide more context about the authentication transaction successful event
added a test method to verify GDAL version information in BridjOGRDataStoreTest . java to ensure the functionality of GDALVersionInfo
added a new file ` Lifecycle . java ` that initializes UI components and handles network errors to facilitate the lifecycle of the UI components
added error handling for 404 URLs in DeviantartRipper . java to improve robustness by retrying download until a 404 is found
removed unused imports from BodyTubeShapes . java and RocketFigure . java to clean up the code and improve readability
added support for retina mode in PJOGL and adjusted viewport and scissor methods to improve rendering performance and ensure consistent pixel scaling
show the create project offline checkbox when the pub be unavailable ( # 2329 )
updated DiskDocValuesConsumer . java to use BlockPackedWriter and streamlined serialization logic to improve code efficiency and maintainability by reducing
updated DefaultStatusRoute and DefaultRouter classes to use SortedSet instead of ArrayList for routing by status to improve ordering of routes based on their originating
removed unnecessary data handling and stream data management in GoAwayTest . java to simplify the code and improve readability by eliminating unnecessary
added property handling for maps in ReflectionUtils and created a new FluentSetterBean class to enhance flexibility in bean creation with fluent setter functionality
replaced ByteStreams with CharStreams and introduced a new HttpResponse class for handling HTTP responses to improve code readability and maintainability by using a
updated test cases in FileSortByExpressionTest and FileSortByIgnoreCaseExpressionTest to use a configurable folder parameter to enhance flexibility in sorting
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to ensure accurate representation of the last
pdfbox - 4892 : add writeimagescalinginformation option , a suggest by valerybokov
added conditional logic to display aggregate function name based on the SQL parameter to improve the accuracy of column representation based on the execution context
replaced ` LuceneTestCase ` with ` WithNestedTests . AbstractNestedTest ` in multiple files to utilize the new ` With
added functionality to select XCap enable and server URI in PresencePanel to enhance user experience by allowing dynamic configuration of XCap server settings
ww - 4382 add a config option to turn on / off exception handling
added stopTextEditing method to CodenameOneImplementation , Display , TextArea , and AndroidImplementation classes to enable proper handling of text editing
nifi - 1187 : fix npe in controlrate when no group attribute be set on a flowfile
updated the showDialog method to include an additional boolean parameter for new components and added a preset selection checkbox to enhance functionality by allowing users to choose
added error handling and logging for websocket messages in ChatAnnotation . java to improve error logging and ensure thread safety during message sending
added a check to skip the HTMLDataFlavorTest if the operating system is not Windows to ensure that the test is only executed on Windows
added SQL _ SERVER _ SNAPSHOT constant to TransactionIsolationLevel . java to support SQL server snapshot functionality
asyncwriteengine : wait for recid to be put into recids map to avoid deadlock
use java . util . zip . zipfile instead of org . apache . tomcat . util . compat . jrecompat
added a check to ensure the command class is not null before creating a regexRegisteredService instance to improve robustness by ensuring the command class is
update disk _ failure _ policy from best _ effort to ignore and add disk _ failure _ policy to config .
removed the ` public ` access modifier from several methods in ` RipperInterface ` and ` RipStatusHandler ` classes to enforce encaps
do n ' t allow 127.0 . 0.1 to be a valid ipv4 address . fix # 1188 .
removed the setJobIdentifierFactory method from SimpleCommandLineJobRunner to streamline the code by eliminating unused functionality
added ClusterDataCache to computePartitionAssignment method in PinotSegmentRebalancer . java to enable caching of cluster data for partition assignment computation
simonstewart : remove the ` ` delete ' ' method from the ` ` dockerprotocol ' ' , it do n ' t
refactor DefaultSeleneseCommand to improve parsing logic and error handling to enhance code clarity and ensure proper parsing of command strings
added a MultipleAttemptsRule to the CreateGlossaryTests class to manage multiple attempts during tests for improved reliability
updated schema reference references to use constants from Components class to improve code readability and maintainability by using defined constants
refactor EntityDeletedEvent to use JsonUtils for serialization and deserialization to improve code readability and maintainability by utilizing standard JSON utilities
added a check for the " gop " value in FormatConfiguration and updated related media handling in LibMediaInfoParser to ensure proper handling of G
added a new file TestProfileReturnTypePrinting . java containing methods for testing return type printing to facilitate testing of return type printing
refactor config refresh logic to use a ReentrantLock for thread safety to ensure thread safety during config refresh operations
added logic to acquire and release the columns segment operator in MinMaxValueBasedSelectionOrderByCombineOperator . java to ensure proper resource management and prevent
simonstewart : disable the firefox profile test until we can fix it .
updated method signatures and return types in HasAndroidDeviceDetails . java to improve type safety and clarify return values for system bar properties
do n ' t add dead bug to project stats if they already exist
disable GTK import panel for GTK release and feel to improve user experience by providing a clearer error message
removed multiple duplicate @ Override annotations in CacheControlImpl . java to streamline code by eliminating redundancy
added a check to return a date in the future if no by days are specified in the Recurrence to ensure that the scheduled action returns a
replaced the upload button with an action menu item for upload functionality to enhance user experience by allowing users to selectively enable or disable the upload
refactor multiple classes related to message expression handling to improve code organization and maintainability
added InputStream loading functionality to MeXBTExchange and RippleExchange classes to enable loading exchange metadata from an external input stream
added Jackson serialization for Writable objects in CrawlDbReader to enable proper serialization and deserialization of Writable objects in the JSON output
removed unused import statements and refactored the TesterRequest class in TestJaspicBasicAuthenticator . java to improve code clarity and
added configurationPid to the MDNSDiscoveryService component to enable dynamic configuration for the MDNS discovery service
added null check for messageItem before scrolling to position to avoid potential NullPointerException when messageItem is null
updated ForkJoinPool initialization to use a custom ForkJoinWorkerThread to improve thread safety and control over the execution of the ForkJoinPool
updated assertions in RoleCommandOrderTest to check for both DATANODE and NAMENODE roles to ensure that dependencies do not contain blocker roles
[ flink - 23298 ] [ table - planner - blink ] [ table - planner - blink ] [ table - planner
reformatted conditional statements in JvmUtils , LikeCondition , and AbstractOperationGenerator to improve code readability and maintain consistency
added a transformation matrix to the logo sprite in BitmapFontTest . java to ensure the logo sprites are rotated correctly during rendering
added a check for built - in aggregate calls in StreamPhysicalPythonGroupWindowAggregateRule . java to ensure that only non - Python aggregate calls
do n ' t send node up / down event when there be no pending echo
add getunreachabletokenowners ( ) method to gossiper , and fix typo in storageproxy .
mondrian : fix ` ` isvariable ( ) ' ' bug in ` ` ( x ) = x ^ 2 ' '
updated content type handling in FormAuthenticator and added getter and setter methods in SavedRequest to ensure correct content type is set based on the saved
refactor ` _ display ` to ` display ` and initialize it to ` 0 ` in ` XToolkit . java ` to improve cl
refactor RecommenderJob and AbstractJob classes for improved code organization to enhance maintainability and readability of the codebase
replaced ` metaLock ` with ` ReentrantReadWriteLock ` and refactored synchronization to use ` ReentrantReadWrite
added a test method for reading an identity provider in a specific zone using a Zones token to ensure that the identity provider functionality works correctly for
replaced ` job ` with ` new ExpireJob ( ) ` in ` ObjectTypeNode . java ` and added null check in ` Point
removed unused import of Service in SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 3640 ] send heartbeat to all broker when rebalance be change ( # 3641 )
added support for a detached mkdir mode in multiple configuration classes to enhance flexibility in managing directory creation behavior
[ java ] add a test for aslow follower to make it stable when there be a slow follower .
updated default label pattern in JabRefPreferences from " [ authors3 ] [ year ] " to " [ auth ] [ year ] "
refactor CxxPlatform handling in DBinaryDescription and DLibraryDescription to utilize CxxPlatforms for parsing time dependencies to improve code
refactor GoogleCloudAPI to streamline OAuth service initialization and improve resource management to enhance code readability and maintainability by reducing redundancy
camel - 14850 : fixed dynamic done file handling in genericfileoncompletion . thanks to jesus camacho rodr
added a new configuration option ` reopenReaders ` in ` SolrConfig ` and modified the condition in ` SolrCore ` to enable reopening readers
[ freeplane ] add dialect attribute to mapwriter
added methods ` currentDate ` and ` currentTimestamp ` to the ` Update ` class and corresponding tests in ` UpdateTests ` to enhance functionality
added a duplicate method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor ` WidgetSearchCondition ` to use an interface and simplify its implementation to improve code readability and maintainability by reducing boiler
replaced TermQuery with ConstantScoreQuery and updated score calculation in TestFacetsCollector . java to improve search performance by using a more efficient
removed multiple unused import statements from ConcurrentClassLoadingTest . java to clean up the code and improve maintainability
renamed the method ` providesUploadController ` to ` providesDirectNearbyUploadPreferences ` and added a method to retrieve shared preferences to improve
added support for handling " SYSDUMMY1 " as a dummy database mode in the compatibility test cases to ensure compatibility with different database modes
updated logging statements in TraceGatewayEnvironmentPostProcessor . java and added sampler configuration in SamplerAutoConfiguration . java and SamplerAutoConfigurationTests
added a lastPid tracking mechanism in POIXMLProperties and implemented a test for adding properties in TestPOIXMLProperties to improve property management
[ geotiff ] do n ' t read negative infinity for float32 tiff file ( # 2329 )
updated CliDriver . java and SessionState . java to improve handling of command and file processes to enhance error handling and ensure proper resource management during
replaced ` Executor ` with ` Scheduler ` and updated the ` httpExecutor ` variable to use ` Schedulers ` instead of ` Executor
ruleconditionmapper : add a default implementation of selectbyruleidset ( ) that partition the list of rule id sets into a single list
added a method ` addExitDescription ` to ` ExitStatus ` and updated exception handling in ` AbstractJob ` and ` AbstractStep ` to
fix multiblock render not render correctly when the player click the right click on the block .
renamed the ` columnFamily ` variable to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to improve clarity by explicitly indicating the
removed unnecessary import statement and simplified range length calculation in PlotConfiguration . java to improve code readability and maintainability
refactor DefaultIOSInput to use UIAlertController instead of UIAlertView and improve text input handling to enhance user experience by providing customizable
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` to ensure the correct
renamed the parameter from ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity by using a more
removed the assertion for null message assertion in AdvServiceTest . java to simplify the test by eliminating unnecessary assertion
updated key handling in MappingMongoConverter to ensure proper escaping of map keys to improve key consistency and prevent potential issues with custom write targets
updated the formatting of Timber logs in NearbyMapFragment . java to improve readability of log messages for better clarity
( chore ) camel - core - spring - boot - dsl : use deprecated instead of javaType
refactor FuzzyLikeThisQuery to improve term retrieval and add a test for non - existing fields in FuzzyLikeThisQueryTest to
modified the ` writeApplicationsLinks ` method to accept a ` tabularList ` parameter and modified its logic to display a table element based on its
( chore ) camel - dspace : use dspace . identifier . factory instead of dspace . utils
updated the method call to use ` bw . getLength ( ) ` instead of ` bytes . length ` to ensure the correct length is used for
changed the return type of the getDisplayScript method from an abstract method to a default method returning null to allow the method to be overridden by subclasses
replaced ` keyToPress ` and ` keyToRelease ` with a ` sequence ` variable in ` RemoteWebDriver . java ` and
pdfbox - 4892 : avoid arraylist allocation , a suggest by valerybokov
added synchronization and null check for dbusConn in NetworkConfigurationWatcher . java and NetworkManagerListenerImpl . java to ensure thread safety when accessing active
added a method to retrieve all embedded objects from a HSSFWorkbook and updated related tests to enhance functionality by allowing retrieval of nested objects from
added import statement for Shdr in ShaderNodeLoaderDelegate . java to utilize Shdr functionality in the shader loading process
ambari - 15836 . ambari should use host / role instead of host / role when create ambari cluster ( rlevas
added a condition to check if the base font starts with " Symbol " in PDSimpleFont . java to ensure proper handling of symbol fonts
replaced ` GlStateManager . popAttrib ( ) ` with ` GL11 . glPopAttrib ( ) ` in ` ModelHourg
updated LiveTvGuideActivity and ProgramListAdapter to use Calendar instead of Activity for start and end dates to improve clarity and accuracy in
updated method invocation in MockGateway to use Whitebox ' s getMethod method and added new test classes for PowerMock to improve method accessibility and
added calls to ` dlopen ( findInLdLibPath ( " libfreetype . so " ) ) ` and ` dlopen
refactor variable replacement logic and introduce a new method for handling multi - variable functions to improve code clarity and maintainability by encapsulating
loop safepoint elimination : add support for unsigned range guard in loop begin .
do n ' t throw dataflowanalysisexception in typeframemodelingvisitor . visitinstancemethod ( ) if the method do n '
added a new LocalizedString class and refactored method arguments handling in multiple classes to improve code clarity and maintainability by centralizing
added a ` disableClasspathSearch ` boolean property and its getter / setter in ` ServerConfig ` , and modified the condition in ` DefaultContainer
replaced direct array copying with Arrays . copyOf for audio format management to improve performance and readability by avoiding unnecessary array copying operations
increased the default value of retries from 0 to 2 in Reference . java and updated related tests in AnnotationPropertyValuesAdapterTest . java
added JSON parsing and processing for Settings in TexturePacker . java to enable dynamic configuration of texture packing based on user input
added text views for uploaded images and used images in AchievementsFragment to improve user experience by displaying relevant images instead of progress bars
added mock and logger annotations and their processing round settings in TranslatingJavacPhaseTracerTest . java to enhance tracing capabilities and ensure proper
added a new ` CategoryInfo ` class and updated the ` MwQueryPage ` to include it to provide access to the ` categoryinfo
updated assertion messages for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error handling
added accessibility support for taskbar visibility in TaskbarStashController to enhance user experience by allowing immediate visibility of the taskbar
added a check for the ' ^ ' character in the signature parsing logic and threw an exception if it is already thrown to ensure proper handling of
updated access flags in ClassVisitorDriverFromElement and added new test cases for generic interface signatures and enum stubs in StubJarTest to ensure
added null checks in IntervalFilter and LowpassIntervalsSource classes to ensure input parameters are non - null to prevent potential NullPointerExceptions
added unit tests for the EntrySet iterator ' s last hash next method in MapInterfaceTest . java to ensure proper functionality of the EntrySet
added a serialVersionUID field to the TreeMap class to ensure proper serialization compatibility for the TreeMap class
change image creation timestamp from milliseconds to seconds to ensure accurate timestamp representation for images created in milliseconds
updated SINGULAR _ LIB _ GROBCOVCx to SINGULAR _ LIB _ GROBCOVs and added a
added EncryptionUtils import and called deleteKeyForAccount method to delete private and public keys for an account to ensure that private and public keys are
refactor keep - alive header value retrieval in JDKAsyncHttpProvider and NettyAsyncHttpProvider to use a dedicated method to improve code maintain
added check for empty interceptor list in PostJoinMapOperation . java and a corresponding test in PostJoinMapOperationTest . java to ensure proper
hhh - 14850 - remove unneeded inlining processor in standarddialect
[ hotfix ] remove unused spillenabled parameter from longhybridhashtable
refactor EnvironmentVariableHelper to use processEnvironment for environment variable retrieval to improve flexibility and maintainability of environment variable management
ww - 4071 fix checkstyle violation in defaultactionmapper
added import statement for SerializableMode in Mockito . java and corrected a syntax error in PluginSwitch . java to ensure compatibility with SerializableMode in
added instrumentation for annotation metadata and modified error handling in AbstractBeanDefinition to ensure proper handling of nullable fields and improve error reporting for nullable fields
added isolation level support for SQL statements in the select statement to enhance compatibility with different database modes
replaced HiveConf . ConfVars references with static final constants for HTTP path and transport mode to improve code readability and maintainability by redu
added a method ` isCacheable ( LeafReaderContext ctx ) ` to ` GlobalOrdinalsWithScoreQuery ` that returns false to
added a new file TestStrangeControl . java that implements a thread that demonstrates the StrangeControl functionality to facilit
updated generated file names from " . json " to " . jsfile " and " . jslib " in JsFile and JsLibrary classes
added methods to set and get selection start and end in ShadowEditText . java to enhance functionality for managing text selection in the user interface
[ java ] close grpc server in graceful shutdown to prevent resource leak .
added a ` use ` method to ` Jooby ` and updated routing logic in ` Router ` and ` JoobyTest
added a null check for the fst variable in FreeTextSuggester . java to ensure that Lookup is not supported at this time to avoid
updated string replacement logic in ` T4975569 . java ` and improved URL verification in ` T6729471 . java `
added ABI writer class loading logic in JavacInMemoryStep . java to ensure proper initialization of processors based on the ABI writer
added a suppression warning for BooleanMethodIsAlwaysInverted in PubRoot . java to suppress warnings related to BooleanMethodIsAlwaysInverted
added a check to ensure the PullMessageServiceScheduledThread is not stopped before scheduling tasks to avoid potential issues with the pull request execution when the
refactor EnergyEndpointer class to improve code organization to enhance maintainability and readability of the code
refactor presets handling in ComponentPresetChooserDialog to use a list of displayed columns instead of an array to improve code clarity and maintainability
removed unnecessary import statements from BazaarRepository , CVSRepository , and IndexDatabase to streamline code by eliminating unnecessary dependencies
camel - 14284 : fixed switch / cases indentation see camel - 14284
added a default method ` getExportedHeaderStyle ( ) ` in ` CxxLibraryDescription ` and updated references in ` CxxLibraryMetadata
deleted the file Constants . java and DistanceUtils . java to remove unused components to streamline the codebase
replaced the disk delimiter splitting logic with a direct substring extraction from the key to simplify the code and improve readability by eliminating unnecessary
fails build - time initialization if fallback linker be miss .
added a new test method ` testCreateInline ` and refactored the ` create ` method in ` RoleBindingOperationsImpl ` to improve
added logging statements to configure session cookie settings in UaaSessionCookieConfig . java to improve debugging capabilities for session cookie configuration
updated the calculation of the file name in HotseatFileLog to use the calendar ' s day of the year to ensure accurate file
rename variable o to v in ObservableBlockingSubscribe . java to improve clarity and consistency in variable naming
added error handling for invalid option usage in JavapTask . java and created a new class T8033711 . java to improve
replaced calls to ` collect ( toList ( ) ) ` with ` toList ( ) ` across multiple files to simplify code and improve readability
updated logging level from error to warn and modified error handling logic in TaskDriver . java to improve error logging clarity and ensure proper handling of
[ hotfix ] [ network ] add tiered storage support to inputgatespecutils
replaced the constant ` SUCCESS _ CODE ` with a new method ` isNotSuccessStatus ` in multiple services to improve code readability and maintain
set useGL20 configuration to true in Cuboc . java and modify LwjglApplication instantiation in CubocDesktop . java
removed unnecessary check for VoidType in JimpleBody . java to simplify the code for better readability and maintainability
replaced ` DefaultSourcePathResolver ` with ` SourcePathResolver ` and updated imports and method signatures in ` OutputMacroExpander . java
do n ' t wait for job to finish in logexceptionsqltest ( # 11943 )
added a condition to check if the input file path does not contain the " \ \ build \ " character to ensure that duplicate words do not
update instructorfeedbackresponsecomment # getresponsecomments method to return a map < string , list < feedbackresponsecomment > >
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java containing a class TestEscapeThroughInvoke with methods for escaping objects to facilitate testing
replaced direct stream reading with IOUtils ' s skip and read methods in FilePreviewService . java to improve code readability and maintainability by
added interceptor handling to the ConnectionPool and JdbcInterceptor classes to ensure proper management of connection pool start events and improve error logging
changed catch block from Exception to Throwable in CoreContainer . java to improve error handling by catching a broader range of exceptions
lrublockcache : fix getcurrentsize ( ) and getoverhead ( ) to return 0 for miss entry
removed unnecessary check for zero task count in RecentsView . java to simplify the code by eliminating unnecessary checks
updated sleep duration from 1000ms to 5000ms in HelixBrokerStarter and HelixServerStarter to improve responsiveness during broker
added ` CoinmateStatic ` and ` CoinmateMetadataServiceRaw ` interfaces and updated ` CoinmateExchange ` to utilize
make systempath validation more robust to dependence of project . basedir
pdfbox - 4892 : avoid npe , a suggest by valerybokov
add displaydata support to ptransform . setdisplaydata ( list < itemspec < ? > > displaydata )
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat
added a disabled algorithm property for MD2 and RSA key size in ClientJSSEServerJSSE . java to enhance security by restricting certificate
added checks for sub - command and sub - command - group types in OptionData . java to ensure compatibility with subcommands and command groups in the
updated module - info . java files for mmm and ppp modules to improve module documentation clarity and maintainability
added error handling and improved connection ensurement in IOSImplementation . java to ensure proper error handling and provide clearer feedback on connection failures
modified the initialization of ` sCheckingEvents ` and ` mFinished ` in ` LogEventChecker . java ` to ensure proper resource management and
refactor error handling and resource management in FileSinkOperator . java to improve error handling and ensure proper closure of writers and record writers to enhance
added diagnostic logging to the SchemaGenerator class to improve debugging by including diagnostics during the task execution
replace ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using a more
refactor DataSourceMonitorTests to improve test structure to enhance maintainability and readability of the test code
added a caching mechanism for loading resource paths in ClasspathMethodScanner . java to improve performance by avoiding repeated scanning of resource paths
refactor test instance retrieval to check for null before logging errors to improve error handling by avoiding null pointer exceptions during service initialization
added null check for the object before processing in RoutingInBoundHandler . java to ensure proper handling of null values and prevent potential NullPointerExceptions
[ ekey ] add natip option to ekey - udp ( # 10399 )
fix ( netty ) : use arrow - memory - netty for buffer allocation
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added a check for null header and body buffers in HttpConnection . java and implemented a new test case in RFC2616BaseTest . java
refactor MultiTimeout . java to improve subscription handling and state management to enhance clarity and maintainability of the subscription management process
make sure we do n ' t have too many compaction candidate for the same sstable
added a test annotation to the TestOrcTimezone1 class to ensure the test method correctly executes and verifies the functionality
[ hotfix ] [ runtime ] allow metric and timer system property to be specify with substring
refactor JSON handling in ` PinotSegmentRestletResource ` and ` TraceContext ` to use ` put ` instead of ` set `
modified JTable to handle null columnClass gracefully and added a new test class Test6888156 to improve robustness and ensure proper rendering
added a check for the existence of the SHELL file before adding arguments based on its existence to ensure that arguments are only added when the SH
updated the parameter passed to deleteWithoutSubscriptions from 10 to 1 to adjust the deletion process to accommodate changes in subscription deletion behavior
replaced List with Set for testInstances in MockitoExtension and added a new ClassWithDependency class in JunitJupiterTest to
refactor FieldMonitor class to improve code readability to enhance maintainability and facilitate future updates
added transactionDisable ( ) and fileMmapEnableIfSupported ( ) methods to BTreeMapTest . java to ensure proper transaction management during
added a return statement to the iterator initialization in SortedIntList . java and created a new Iterator constructor in SortedIntListTest . java to
added unregistering of object name from JMXHelper in DefaultRemoteProxy . java and modified exception handling in JMXHelper . java to improve resource management
[ hotfix ] [ rocksdb ] increase rocksdb default writebuffer size to 64mb
removed the second parameter from the constructor call in the Style class to simplify the constructor signature by eliminating unnecessary parameters
replaced the method ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of message encoding in
[ beam - 10625 ] remove json graph from amza runner ( # 10625 )
* set position to false for ocean gun and ocean sound
refactor LoopRotateBadNodeBudget class for improved clarity to enhance maintainability and readability of the code
added type information parameter to the convertToMongoType methods across multiple classes to enhance type conversion functionality to support additional type information
do n ' t display complex unit as i in input box
danielwagnerhall : fix sendkeys to active element with empty key .
added a method ` getScaledInstance ` to create a scaled instance of an ` BufferedImage ` with specified dimensions and transparency to enhance image scaling functionality
removed methods extendArgumentCheck and extendWrapStore from DBMaker . java to streamline code by eliminating unnecessary complexity
add a call to updateshiftstatenow ( ) in anysoftkeyboard . java to ensure the keyboard state reflects the current shift state
removed the detection activity from the location and replaced it with an empty string in CSVFileLogger . java , but kept it for backward compatibility to
updated import statements and package names from ` extensions ` to ` protocol ` across multiple WebSocket - related classes to align with the new package structure for
removed unused import of Buildable from AaptPackageResources . java to clean up the code and improve readability
added comments to indicate unused variables in multiple Java files to improve code clarity and prevent potential runtime errors
updated exception message to include response status code in IllegalStateException to provide clearer error information for invalid upgrade protocol
corrected spacing in the assignment of blockMode in P11Cipher . java to improve code readability and maintain consistency
refactor Mockito class to improve code readability to enhance maintainability and facilitate future development
reordered conditional checks for owner ownership in Merge . java to improve code readability and maintainability
removed deprecated getConversationID ( ) methods from multiple classes to streamline code by eliminating outdated functionality
replaced ` com . sun . speech . freetts . PhoneSet ` with ` de . dfki . lt . mary .
refactor stripQuotes method to use PlanUtils for better encapsulation to improve code clarity and maintainability by centralizing quote stripping logic
refactor rendering handling in DLNAResource and Request classes to improve clarity and maintainability of rendering context management
added new repositories to the DefaultPluginManager to include remote artifact repositories to enhance the repository management by including remote artifacts in resolution groups
( chore ) camel - cxf : fix resource leak in test
refactor PhysicsClient class to improve code readability to enhance maintainability and facilitate future updates
added JUnit @ Ignore annotation to SessionTest . java to mark the test as ignored due to frequent failures
added a new File instance to the ZipFile class to facilitate file handling by creating a new File instance
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used and
make channel . uid non - nullable by default .
added StackTraceUtils class and updated imports in GenericDAOImpl , ReflectionUtils , and ForumServiceImpl to utilize it to improve stack trace logging
removed the @ Test annotation from FormLoginIntegrationTests . java to clean up the test code and improve readability
refactor unparseList calls to conditionally unparse lists based on the length of arguments to improve flexibility in handling different argument types
updated the GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ ONCE _ QUERY to use a multimap
replaced ` supressWarnings ` with ` suppressWarnings ` and added support for ` jdk . internal . misc . Innocuous
refactor JsonTreeReader to improve error handling and add new test cases for nextJsonElement and nextJsonElement in JsonElementReaderTest to enhance
added functionality to handle unexpected arguments after the " -- " option in TestCommand and implemented a test for external runner arguments to ensure proper error handling
added methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to facilitate the
[ flink - 20625 ] [ table - planner - blink ] support specify planner in streamsqlexample
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is reset before each test execution
updated render percentage handling and added disposal logic in Progress . java and RSSReader . java to improve progress management and ensure proper disposal of
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added methods to write documents and close them to improve resource management and prevent potential memory leaks
updated output formatting in JavaBuild . java to include newline characters to improve readability of output for better readability
replaced ` Box _ root ` with ` BlockBox _ root ` and added getter methods for ` _ root ` and ` _ dotsPer
added support for generic user search in the CustomQueryFilterFactory and updated test cases in TestLdapAtnProviderWithMiniDS to enhance
added default port support to NettyHttpServer , DefaultRouteBuilder , Router , and FilteredRouter classes to enhance routing flexibility by allowing
updated SnmpTargetHandler to update status based on handler initialization and refactored test assertions to improve status management and ensure proper cleanup of mock
update instructorfeedbackeditpageaction to include only instructors with submit privilege in the list
added @ Incubating annotation and @ Deprecated annotation to AvailableSettings . java to indicate that the class is outdated and should no longer be used
refactor path handling logic in FileResolverImpl . java and add WarFileResolverTest . java to improve code clarity and ensure correct
updated log message to include include docstores to improve clarity of log output for better debugging
fix dirt . func _ 149739 _ a ( ) and dirt . getunlocalizedname ( ) in examplemod .
updated whitespace stripping settings from ` stripWhitespaceX ` and ` stripWhitespaceY ` to ` stripWhitespaceX ` and ` stripWhitespaceY
increased the lock duration from a fixed value to a multiplier of 1000 in FeedRefreshUpdater . java to improve resource management by allowing more
updated the ` MetadataIndexNode ` deserialization parameters in ` TsFileSequenceReader ` and added a test in ` MeasurementChunkMetadataListMapIterator
removed the ` dateFormat ` parameter from the ` makeResultFromDelimitedString ` method and its usage in the ` CSVSaveService ` class
added preferred size calculation for the pane in NavigationShareTab . java to ensure the pane displays correctly within the specified dimensions
replaced OffsetAttribute with State and updated related attributes in BeiderMorseFilter . java and TestBeiderMorseFilter . java to
updated multiple Java files related to Upnp audio handling to improve code organization and maintainability
fix lenswarp not collide correctly ( # 3550 )
added a new ` toJson ` method to the ` JsonTest ` class and updated imports in ` JsonTest . java ` to enhance JSON serialization
refactor MutableContextDataSupplier class for improved readability to enhance maintainability and clarity of the code
changed the catch block from Exception to Throwable and added a warning log for missing LogWatcher to improve error handling and provide more informative logging for
added a parameter to the KubernetesMockServer constructor to enable HTTPS support in the server configuration
defaultjavaloweringprovider : generate stamp for unary operation in foreign call
updated response headers in DefaultServlet and DefaultServletTest to allow both GET and HEAD and POST requests to enhance functionality by allowing both GET and HEAD
tika - 2696 -- use locale . us for decimalformat in tika tiff extractor
updated exception handling in ShowFileRequestHandler to return NOT _ FOUND instead of BAD _ REQUEST and added a corresponding test in ShowFileRequestHandlerTest
added handling for ` Throwable ` and ` InvocationTargetException ` in ` ReflectorClassWriter ` and created a new ` TryCatch ` class to improve
added a new method ` clamp ( float min , float max ) ` to ` Vector ` and implemented it in ` Vector2 ` to enhance
added imports and modified access token creation logic in ChainedTokenGranter . java to improve OAuth2 authentication handling and ensure requested scopes are
refactor BC _ instanceof class for improved readability to enhance maintainability and clarity of the codebase
added a logger instance and modified save flags setting in EditorBottomSheetBehavior . java to improve logging capabilities and ensure proper save behavior behavior
updated UaaUrlUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and facilitate
hhh - 14850 - fix nativescalar return type to be generic
added caching mechanism for font AAT status in SunLayoutEngine . java to improve performance by reducing redundant checks for font AAT status
use fastarraylist . instancesize ( ) instead of bigarray . instancesize ( )
danielwagnerhall : use sessionid instead of sessioid for test
refactor BrokerRequestUtils to improve code readability to enhance maintainability and facilitate future updates
refactor instance management in InjectorBuilderImpl to use a map instead of a single instance to improve the handling of instances that are not yet created
updated RawTargetNodeFactory and BuildTargetToRawTargetNodeTransformer to use getBasePath ( ) instead of getAbsolutePathToBuildFile ( ) to
added null check for the value before parsing in EchoMessage . java to ensure proper handling of null values and avoid potential NullPointerExceptions
add keepalivemanager to jabber connection so that keepalivemanager can be manage .
updated the DEFAULT _ LOAD _ FACTOR constant value from 0.67F to 0.67 to correct the default load factor for improved
added a method to retrieve all DataTypePhysicalVariation in VectorizationContext and updated related classes to utilize this new method to improve data type management
move htmlassettranslator and stringsresourcetranslator from com . google . zxing to com . google . zxing . client . j
updated the condition for handling vertical bar layout in OverviewState . java to improve the responsiveness of the overview button based on device profile
added import for javax . persistence . Entity and annotated BaseActivityEventEntity with @ Entity to enable entity management in the BaseActivityEventEntity class
added tracing functionality to NavBarSwipeInteractionHandler , TouchInteractionService , and TraceHelper to facilitate debugging and monitoring of
added a new file InvalidOptions . java to implement testing for invalid javap options to ensure proper error handling and validation of Java compilation options
added a check to log an error if the number of displays differs from the supported bounds to ensure that the number of displays does not exceed the
refactor OAuth20UsernamePasswordAuthenticator and OAuth20Utils to use a unified method for retrieving client ID and client secret to improve code maintainability
changed the default value of ` _ unwrapServletException ` from false to true in multiple error handler classes to enable the unwrapping of servlet exceptions
added logic to set the status of ShortcutInfo to DEFAULT when the condition is met to ensure that the ShortcutInfo is set correctly when
camel - 14850 : fix camel - seda to not use unbounded queue when there be no size parameter
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to Kernel . java and App . java to enable batch processing for improved
added HttpClient configuration to ThirdEyeApplication . java to enable HTTP client integration in the application
added a sort parameter to JobInstanceFetchRequest and updated getBatchSize ( ) and getSort ( ) methods in JpaJobPersistenceImpl to enable
updated the CryptoFacilitiesTradeService to retrieve and adapt the cancellation of crypto facilities orders to improve code clarity and ensure proper order cancellation
ggb - 1186 hide keyboard when click on algebra view
refactor LLVMMemMove and LLVMHeap classes to use a native function handle for memcpy operations to improve performance by reducing
reformatted code for consistency and clarity in BindLdapAuthenticationHandler . java to enhance maintainability and readability of the code
add blocktoolTip property and its getter / setter in ToolTipManagerW . java and set it to true in ModeToggleMenu . java
updated DefaultDateTypeAdapter to use DateFormat . getDateTimeInstance instead of DateFormat . DEFAULT and added timeStyle support in GsonBuilder to enhance date formatting
updated playerSet string format from " < UID : " to " ( " to ensure proper formatting of playerSet for better readability
added a check to return the current instance if the list is empty to improve performance by avoiding unnecessary object creation
added handling for InvocationTargetException in ParametricCallable . java to improve error handling for command execution
updated the ` getLikeExpression ` method to include a boolean parameter for handling regex expressions to enhance functionality by allowing differentiation between regex and string
added start ( ) and stop ( ) methods to StreamSupplierComponent and NativeStreamSupplierComponentImpl to enable proper lifecycle management for the StreamSupplier
updated locale handling in LuceneTestCase to ensure consistent default locale settings based on available locales
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
refactor context handler initialization to use a dedicated initContextHandler method to improve code readability and maintainability by encapsulating context handling logic
camel - 9560 : camel - osgi - blueprint - add unit test for routebuilder ref
nifi - 2338 : fix test failure cause by change substring to contains
refactor return type substitutability methods in Types . java for improved clarity and consistency to enhance code readability and maintainability by
added a throttle type enum and modified throttle processing logic in TestExecutor . java to improve throttling behavior based on the throttle type specified in the configuration
modified the assignment of color . argb in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to
refactor Annotation and AnnotatedElement classes for improved clarity to enhance code maintainability and readability
added a new interface Model in the org . apache . poi . hssf . model package and modified Sheet and Workbook classes to implement
( chore ) camel - http - bridge : use constant instead of hardcoded string
added a ` clearEntityManager ` option to ` JpaItemWriter ` and ` JpaItemWriterBuilder ` classes to control the behavior of
added null checks for ShortcutInfo in InstallShortcutReceiver and related classes to improve robustness by preventing null pointer exceptions during shortcut installation
updated the instantiation of TwoDimensionalCollectionValuedMap to include a boolean parameter to enable flexible configuration of collection valued maps
updated the host and exchange name from " BTC - e " to " Wex " in WexExchange . java to reflect the correct
added null checks for columnReaders and reader in OrcEncodedDataConsumer and EncodedTreeReaderFactory to prevent potential NullPointerExceptions during processing
added null check for files in SegmentInfos . java and implemented a test for opening IndexReader after deleting a file to ensure robust error handling and
updated date range in HSearchSortHelperImpl and modified FhirResourceDaoR4SearchWithElasticSearchIT to use lower case to
updated the calculation of the percentage value in DeviceHandler . java to handle negative and non - negative values correctly to ensure that the percentage value is
modified the condition for limit from 1 to 0 in RangeInputStream . java and RangeReader . java to ensure that limit is always non - negative
camel - 15836 : camel - core - optimize rout configurers to reduce log
refactor calculations in HlsChunkSource and HlsPlaylistTracker for clarity to improve code readability and maintainability by reducing redundant calculations
updated package and class names from ` com . apache . lucene . xmlparser . builders ` to ` org . apache . lucene .
[ hotfix ] [ runtime ] set nextinput in statefuloperator in outputhandler
removed unnecessary null check before setting bitmap shaders in Area . java and Line . java to streamline code by eliminating unnecessary null
refactor blockchain initialization to use LevelDbDataSourceImpl for database existence checks to improve code clarity and maintainability by centralizing database existence checks
trim whitespace from the group returned by the matcher from SQLPlusSupport . java to ensure consistent formatting by removing leading and trailing spaces
set the socket ' s async flag to true in Http11AprProtocol . java to ensure that asynchronous operations are performed on the socket
adjusted the divider location calculation in DockSplitPaneW . java to improve layout responsiveness for better user experience
added health check metrics for controller health checks in ControllerMeter and PinotControllerHealthCheck classes to enhance monitoring capabilities for controller health checks
added visibility control for shared avatars in LocalFileListAdapter to improve user experience by hiding the shared avatars view
move mebis scss from clientbundle to web - resources - mebis
updated argument length checks from ' > = ' to ' < = ' in BurstSendReceiveUdpPing , ReceiveSendUdpP
added a check to ensure logging is enabled before executing commands to improve performance by avoiding unnecessary execution when logging is not enabled
replaced ` awaitLatch ` with ` assertWaitUntil ` in ` EventBusTracingTestBase . java ` to improve clarity and ensure
replaced the initialization of the locale variable with a default value of Locale . getDefault ( ) and added getter / setter methods for locale in Query
refactor : use linkedhashset instead of hashset in entrycustomizationdialog and fieldsetcomponent
jbrules - 1188 : fix bug in the builder and add a test case
added a new class ` OcspUnauthorized ` and updated ` OCSPResponse ` to include a new case for ` UNAUTHORIZED ` to enhance
refactor server state management in SSL . java to improve server failure handling and ensure proper server state management
added a new constant for the open connection count in SourceCounter and integrated it into SourceCounterMBean to track and manage the number of open connections
made the ` execute ` method public in ` ExecutionStrategy ` , ` ExecutorServiceExecutionStrategy ` , and ` GraphQLInterfaceType ` classes to
modified the ` createDefaultJavaPackageFinder ` method to return a ` Set < String > ` instead of a ` Set < String > ` to
replaced OutputWriter with PrintWriter in ScriptExecutable . java to enhance output formatting for better readability
[ hotfix ] [ test ] use random uuid for temporary file in filesourcetextlinesitcase
added support for DataTable in JRubyStepDefinition to enable Ruby arguments for DataTable instances in the step definition
updated visibility settings and replaced imageNodes with authorNodes in SearchImagesRenderer . java and ApacheHttpClientMediaWikiApi . java to improve user interface
refactor ReadSentimentDataset to improve code readability to enhance maintainability and facilitate future updates
improve error message for parse error near char in formula
added bind address getter and setter methods in WebSocketClient . java and modified WebSocket connection handling in WebSocketClient . java to enhance socket binding capabilities and
[ java ] clean up archive and aeron directory when close clustered medium driver .
refactor width and height setting logic in WidgetGroup . java to streamline code for better readability and maintainability
replaced direct comparison with Boolean . valueOf for sessionFixationAttribute to ensure proper conversion of sessionFixationAttribute to Boolean
refactor switch statement in LALogicLinesFragment . java to use edgeOption instead of params to improve code clarity and maintainability
added linear backoff methods and adjusted sleep duration in ChromeBinary . java to improve backoff mechanism for improved reliability in testing
added HttpMethod and HTTPRoute parameters to ClientResponseWrapper and updated related methods in TraceExchangeFilterFunction and related tests to enhance response handling by associating
modified the logic for obtaining the ColumnFamily compacted in PrecompactedRow . java to simplify the logic for removing deleted columns based on
updated rendering intent return logic in ICC _ Profile and ColorConvertOp classes , and added a new test class for invalid rendering intent to ensure
add isNotSureAllowed functionality to FeedbackContributionQuestionDetails and implement it in FeedbackQuestionEditForm to enhance user experience by allowing
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
replaced Serializable interface with direct instantiation in KafkaRecord class to simplify the class and improve error handling
added PGConnection import and modified connection proxy instantiation in PooledConnectionImpl . java and BaseDataSourceTest . java to enhance connection handling and ensure
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info for missing token encryption secret to provide clearer guidance on how to use the token encryption secret for service
marked the Hazelcast class as deprecated to indicate that the class is outdated and should no longer be used
updated AmbariManagementControllerImpl and FinalizeKerberosServerAction to utilize TopologyHolder for managing topology updates to improve the handling of topology
added support for iterator and end tag in NamedListCodec to enhance the functionality of NamedListCodec to support additional data types such as Map ,
fix npe if assigncompletelylostpartitions be call without exception
added schema inclusion rule to ApiExample . java to enable public access for API documentation
updated the expected value in the assertion from 3.0 to 7.0 in StreamExpressionTest . java to correct the expected value for mean
added coordinate sequence validation for the linear ring creation in SDO . java and corresponding tests in SDOCreateTest . java to ensure that the
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to the ` ConstantPool ` class to retrieve base and dimension names
added a method to set debug evaluation output for next evaluation in HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator to
test : migrate testmodule and refactoringtest to junit 5 ( # 4396 )
removed the second parameter from the ExoPlayerProfile constructor and updated the condition for live TV in PlaybackController to simplify the player profile
added a return statement to the DynamicStyleBar class to ensure proper execution flow control during method execution
added logging statements for setting and resetting database properties in Utils . java to enhance visibility into replication dump state for better debugging and monitoring
refactor ReactiveAuthorizationManager to improve code readability to enhance maintainability and facilitate future updates
added a check for boolean types in the TypeEmitter class to ensure proper handling of boolean types in string promotion logic
sulong : rename llvmbackframenuller to llvmbackframenuller . llvmbackframe .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
add unit test to verify transaction aware cache manager proxy
added a method ` calculateBoundingBox ( ) ` to calculate the bounding box of the mesh to enhance collision detection functionality by providing a bounding box for
added a new option ` -- target - hash - function ` to determine the hash function to use for computing target hashes to provide flexibility in
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of the code
added high light color and alpha settings to ListViewMultiChartActivity and modified highlight paint behavior in BarChart to enhance visual appearance and improve
removed duplicate entry for tmpPg in sgPathPlanMap to streamline the code by eliminating redundancy
[ hotfix ] [ test ] fix typo in infinispanremoteproducerit
added a check to ensure the local repository directory exists before fetching artifacts in MavenArtifactFetcher . java and introduced a lock mechanism in MavenDependencyResolver
added conditional compilation for fragment shader in SpriteBatch . java to ensure compatibility with OpenGL ES for improved performance
changed the type of ` servers ` from ` SortedSet ` to ` Set ` in ` RSGroupInfo ` and related tests to allow for more
added a try - catch block to load the WebXmlConfiguration class and changed the log level from warn to debug in TagLibConfiguration . java
added a version aware filter to CustomAnalyzer and updated tests accordingly to enhance version handling and improve test coverage for custom analyzers
added a test method to retrieve package archive information from setPackageArchiveInfo in ShadowPackageManagerTest . java to ensure that the getApplicationInfo method
replaced direct method invocation with MethodUtil . invoke for consistency across multiple classes to improve code readability and maintainability by utilizing MethodUtil
added imports for ProjectConfigurationStartEvent and TaskStartEvent , and introduced a method to update progress types in Main . java to enhance event handling
removed synchronization block from AndroidWebDriver . java to improve performance by eliminating unnecessary synchronization
fix ( hikariproducer ) : make hikariproducer ' s initializationfailtimeout configurable
removed the ` timeOut ` parameter from the ` getResult ` method and added an error method in the ` Net ` class to simplify the method
changed the ` isNative ` field to be transient and updated the ` addEntry ` method to use a default value of ` false ` to
updated error message formatting for clarity in CEntryPointCallStubMethod . java to improve readability of error messages for better debugging
rename ` ` ruleenablehandler ' ' to ` ` ruleenablementactionhandler ' ' ( # 2321 )
added private fields for parent and values in TagSupport . java while removing them from JspContext . java to streamline the code by elimin
updated debug logging messages in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity in authentication requests to enhance debugging capabilities by providing clear
updated variable names for source and sink options in KafkaDynamicTableFactoryTest and UpsertKafkaDynamicTableFactoryTest to improve clarity and consistency
added error handling for repository retrieval in UsersPanel . java to improve robustness by handling cases where the registrant repository is not found
added support for " . otf " and " . OTF " files in the Font and SunFontManager classes to enhance font processing capabilities
refactor AnnotationMatcher to use a more descriptive variable name for the argument type to improve code readability and maintainability
change log level from " OFF " to " SEVERE " in Grep . java to improve error reporting for better debugging
added a check for debug logging before logging messages in FaultTolerantChunkProcessor . java to avoid unnecessary string concatenation when logging is not enabled
replaced the initialization of includes and excludes with a size check for empty lists to simplify the handling of empty includes and excludes lists
added logic to check if the default screen should move to the default screen when the home intent is triggered to improve user experience by ensuring the default
updated maximum bitrate from 110 to 30 in PMS . java to allow for more flexible bitrate settings
removed the ` getOptions ( ) ` method from the ` CommandLineParser ` class and updated its implementation to streamline the code by eliminating
trim whitespace from the return statement in MutableDatabaseProperty . java to ensure proper formatting of the returned description
updated the output filename variable from filePath to " JDK8022548 . out " to simplify the file path construction for better readability
removed pid logging from error message in ProcessBesuNodeRunner . java to simplify error logging by removing unnecessary information
added getLoadedMusic and getLoadedSound methods to MusicLoader and SoundLoader classes to provide access to loaded music and sound data
removed unnecessary imports and simplified type casting in OnBeanCondition . java to improve code clarity and maintainability
added ScreenRecord annotations to RequestPinItemTest . java to enable screen recording functionality for testing purposes
disable lr pause button in CPUFeature and MemoryFeature to improve user experience by preventing unintended state changes
replaced the ` accountsPrefCategory ` variable with a local variable ` mAccountsPrefCategory ` and refactored account creation methods to improve
do n ' t send available status to the client if it ' s not available .
updated StringBuilder initialization to conditionally allocate a capacity based on utflen to ensure StringBuilder is initialized with a defined initial capacity when utflen is not
disable spring metrics export for web endpoint test
refactor InterruptedException handling in the codebase to improve code readability and maintainability
refactor ServiceTicket class for improved clarity to enhance maintainability and readability of the code
refactor connection handling logic in ConnectionCheckOperation . java to streamline SSL and HTTP connection checks to improve code readability and maintainability by
modified the conversion logic in ArgumentArrayMessageMapper to handle both String and Map types to ensure proper conversion logic based on the target type of the
added a check for ` IndexableDSpaceObject ` before retrieving its parent object in ` SolrServiceCommunityCollectionItemFilterPlugin . java
added FLAG _ ACTIVITY _ REORDER _ TO _ FRONT to the intent in PasscodeManager . java to ensure the activity is
refactor ( patternparameterconfigurator ) : remove deprecate annotation ( # 1309 )
changed the return type of ` beginDraggingWidget ` from ` void ` to ` boolean ` and added a null check for the drawable to
added JUnit Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added null check for root and collected components in DynamicStyle . java to prevent potential NullPointerExceptions during component collection
add a method to update the confusion matrix in testclassifier and testsentence to make it easy to use
fix a bug where last _ sample _ ok should be set to true when an error occur
added unit tests for retrieving connected devices and connection state in ShadowBluetoothHeadsetTest . java to ensure correct behavior of Bluetooth headset
corrected the spelling of " # autowire " to " # autowired " in PropertyBindingSupportTest . java to ensure
added " clone " method to objectMethods and modified conditional logic for loading properties to enhance object method handling and ensure proper lazy loading behavior
added null checks for counters object in IntegrationTestBigLinkedList . java to ensure verification is performed only when counters are not null , enhan
added handling for replying objects in DebuggerConnection and updated JDWP to use this new constant to improve code clarity and maintainability by
updated the filter logic in SamlIdPServicesManagerRegisteredServiceLocator to include serviceId as a parameter to ensure that the filter only applies to
added null check for getActivity before invoking runOnUiThread in PhotoFragment . java to prevent potential NullPointerException when getActivity is not initialized
[ hotfix ] fix checkstyle violation in axonserver
added methods to set and get string type in DatabaseAdaptor and JDBCSessionDataStore classes to allow customizable string types for database interactions
updated assertions in UIMAUpdateRequestProcessorTest to use " suggested _ category : * " instead of " language : english " to ensure
updated thread name handling in CliDriver and HiveSessionImpl to utilize a new method for updating and resetting thread names to improve code clarity
refactor TaskletAdapter class to improve code readability to enhance maintainability and facilitate future updates
added a new test method ` testDROOLS2200 ` to ` DMNRuntimeTest ` and modified ` DecisionTableImpl `
added glFlush ( ) method and modified defaultEnabled condition in TextureMap . java and SplashProgress . java to ensure texture map creation finishes before
added a tooltip text to the showCGCP checkbox in RocketPanel . java to improve user interface clarity by providing a more descriptive
replaced ` getTypes ( ) . add ( e ) ` with ` addType ( e ) ` in ` EnumFactory ` and ` InterfaceFactory
add a mnemonic to the text of the action ( # 3649 )
bugfix : use getlabel ( stringtemplate . defaulttemplate ) instead of getlabelsimple ( )
change BRIGHTNESS _ FACTOR to use BRIGHTNESS _ MAX / PercentType . HUNDRED . doubleValue ( ) instead
update sscm history parser to handle context and revision separately
added an ` isAdmin ` parameter to the ` createUser ` method and implemented ` listUsers ` and ` userIsAdmin ` methods to enhance user
added null checks for ` indexedWriteMethod ` and ` writeMethod ` in ` IndexedPropertyDescriptor ` , ` Introspector ` , and
( chore ) camel - dynatrace : remove unnecessary ' % s ' placeholder
updated method signatures in Context . java and Response . java for consistency and clarity to improve code readability and maintainability
added a method to set capabilities from NBTTagCompound in MixinItemStack to enable serialization and deserialization of the capability data from the NB
updated the assertion in LifecycleUtilsTest to compare the execution ID with the binding ' s execution ID to ensure that the test verifies the correct execution
added checks for ContractType and improved contract creation logic in Wallet . java and GetContractServlet . java to ensure proper handling of smart contracts
added new package - info . java files for Image . java , com . ibm . dtfj . java , and com . ibm .
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a loop for updating the tail and sequence number to improve
added a HashSet to track duplicate JavaFileObject objects and modified the runTest method to include additional arguments to ensure only unique JavaFileObject instances are processed
changed the default value of STRIP _ IPV6 from " true " to " false " in HostPort . java to disable IPv6
added support for adding new user parameters in the LoginServerTokenEndpointFilter to enhance the authentication process by allowing users to add new users based on
added a new constant ` C _ KEY ` and modified language checks in ` LanguageFactory ` and ` CPPParserTokenManager ` to support
replaced the direct instantiation of ` ThreadPoolExecutor ` with a new method ` newSingleThreadExecutor ` in ` MoreExecutors ` to improve
added cache control and expiration headers to the response in the FormAuthenticator and ConstraintTest classes to ensure proper handling of caching and expiration dates in the
added exception message to the error logging in VoiceManager . java to improve error reporting by providing more context in error messages
updated HSSFTests and TestEmptyDocument to use specific test classes instead of AllHSSFUtilTests to enhance test coverage and improve
rename FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase files to improve clarity and consistency in naming conventions
added null check for the output file before retrieving the class directory to avoid potential NullPointerExceptions when the output file is not available
added access control priorities for before and after resolving URIs in Java2DRenderer to ensure proper handling of resource selection during rendering
added exception handling for drawing in TestTriggerCoverage . java to ensure that JDK fails on some fonts on Windows machines to avoid build failures due to
modified the visibility of the ` mbean ` variable and refactored CPU time validation logic in ` GetInternalThreads . java ` to enhance code
added checks for empty comments in TabsAndIndentsVisitor . java to ensure proper handling of space comments when parent is null
updated assertions in SimDistribStateManager and TestTriggerIntegration to decrease collection rate from 5.0 to 100.0 to improve test reli
changed equality checks from ` equals ` to ` equalsIgnoreCase ` for changeSet paths and IDs in multiple classes to ensure consistent case - insensitive comparison for changeSet
removed the ` getString ` method from ` ShadowBundle ` to streamline the codebase by eliminating unused functionality
refactor time formatting logic in TweetActivity to use a consistent date and time format based on locale settings to improve code readability and maintain
added a check to return an empty list if no connections are available to improve error handling by returning an empty list instead of null
updated keyboard behavior and refactored focus request logic in DetailFragment . java to improve user experience by ensuring focus is requestable in touch mode
updated extra class path handling in App . java to ensure proper formatting of file paths to avoid potential issues with file paths containing spaces
make sure we do n ' t create a new array every time the solve method be call
added import statement for org . springframework . integration . core . Message in GenericMessage . java to utilize the Message class for integration testing
refactor SQL query to use a new join method for task attempt fields to improve code readability and maintainability by centralizing join logic
updated the file filter selection logic in AquaFileChooserUI . java to ensure only valid file filters are set to improve user experience by
refactor synchronization in P2PTransportManager . java for improved readability to enhance code clarity and maintainability by ensuring consistent synchronization
replaced the ` toString ( ) ` method in ` ArrayPtg ` to return a string representation of the Boolean value to improve clarity
updated import statements in PGtokenizerTest . java to use specific assertions instead of wildcard imports to improve code readability and maintainability by using
refactor variable handling in Java2TypeScriptTranslator to improve clarity and correctness to ensure final variables are only added from methods and anonymous
added support for creating a sequence and altering columns in PostgreSQL to ensure proper handling of auto - increment columns during database operations
updated byte reading logic in DataInput . java to handle negative values correctly to ensure proper handling of negative byte values and prevent potential errors
removed redundant assertions for Dimension VerticalPhysicalPixelSpacing and Dimension HorizontalPhysicalPixelSpacing in ImageParserTest . java to streamline test assertions for better
updated the method call to obtain the parent component ' s parent to ensure proper access to the parent component for better component management
reformatted import statements for consistency across multiple Java files to improve code readability and maintainability
replaced ` ENGINE _ finish ( ) ` and ` ENGINE _ free ( ) ` methods with ` ENGINE _ free ( ) ` and added
added iteration methods to the InterleaveControl , RandomController , UserParameters , RandomTimer , ConstantTimer , and IterationListener classes to improve event
release httpcontent and fileupload in formdatahttpcontentprocessor and nettystreamingfileupload
added a call to deleteLogs ( ) in TestRecovery . java to ensure logs are properly deleted during recovery
modified the URL handling in BrowserActivity to include a check for " twitter : / / " before loading it to ensure that the activity launches
added a HeliosClient instance and awaited host status in DeploymentGroupTest . java to ensure that the test host is up and ready
changed logResult parameter from false to true in VisibilityController . java to enable logging of list labels functionality
increased the maximum number of auto - retries from 0 to 25 in RestTemplateRetryTests . java to improve test reliability by allowing
removed System . out . println statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to stream
added support for fraction resources in the ResourceLoader and Converter classes to enhance resource loading capabilities for fractional values in the application
remove file confirmation check from BasicFrame . java to simplify the code by eliminating unnecessary confirmation logic
added assertions to ensure tagGroupId and tagArtifactId are not null before calling findNewerDependencyVersion to prevent potential NullPointerExceptions during dependency version
hbase - 26969 throw quotaexceeddexception instead of donotretryioexception when table be exceed quota in namespace ( #
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor TestFuzzPreLoop class to improve code readability to enhance maintainability and facilitate future development
added a check to ensure f0 is non - negative to prevent potential negative values in HTSVocoder
updated logging message from " Retried catalogs " to " Retrieved catalogs " and added null checks for pkColumn and fkColumn to improve
refactor encoders to use a synchronizedstack instead of a synchronized hashmap to improve thread safety and performance of the encoder management
added SharedPreferences functionality to check if empty pages are allowed in Workspace . java to enhance user experience by allowing empty pages only when necessary
added a warning log for the deprecated Cucumber needle to inform users that the deprecated Cucumber needle is outdated and will be removed in
refactor theme handling in ShadowThemeTest and ShadowArscAssetManager to improve theme styling and object retrieval to enhance code clarity and
updated error messages in VerifyFast . java to use Arrays . toString for expected and actual arrays to improve clarity and consistency in error reporting
no effective change - remove pre - alter annotation
added functions for retrieving and setting prototypes and their checks in the ScriptObject class to enhance functionality by allowing retrieval and setting prototypes
added a random seed to the shuffle method in TestFilterDirectoryReader . java to ensure consistent randomness in the shuffle process
updated the display name retrieval logic in UsersAndGroupsSearchProvider to differentiate between remote and known users to improve clarity of the user '
added a default value for the path parameter in CookieRetrievingCookieGenerator . java to ensure a non - blank path is appended to the builder
updated closing braces in AttachModel . java and JvmJvmstatModel . java files to improve code readability and maintain consistent formatting
updated backup count check from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java `
updated the comparison logic in ValidationResult to check for non - zero values instead of zero to ensure that the correct page number is validated before comparison
added a null and equality check for the focused widget in UIDropdown . java to ensure that highlighted items are only processed when the focused widget
corrected formatting of method parameters in SoundUtil . java for consistency to improve code readability and maintainability
refactor ApplePackageDescription to remove the appleCxxPlatformFlavorDomain parameter and streamline platform flavors retrieval to improve code
add test case for ` ` show ololo FROM ololoed FORMAT tabseparablewithnamesandtypes ; ' ' ( # 118
renamed ` onConnect ` method to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` classes to
refactor EnglishPTBTreebankCorrector class for improved clarity to enhance maintainability and readability of the code
added a new file TestGetLoggerNPE . java to test the behavior of the " getLogger " method based on permissions to ensure proper handling
added a ConcurrentHashMap for data management in PathSharingContext and replaced sharedMap initialization in ScriptedProcessor and ScriptedDecideRule to improve
use castexact for getunsafefield and getunsafefield in espressorootnode .
added support for the " NEXT VALUE FOR " expression in the NextValExpression class to enhance functionality by allowing users to specify the next value for
improve error message when resource bundle be not pre - cached .
added threshold check for write buffer size in BoundedLocalCache . java and implemented clear method in BoundedLocalCacheTest . java to ensure
added Leverage _ Level parameter to QuoineExchange and introduced a new order direction property in QuoineNewMarginOrderRequest to enhance
added a method ` boundInitialization ( Class < ? > beanClass ) ` to ` PropertyDescriptor . java ` and created a new ` Test719
replaced ` failsafeWidth ` and ` failsafeHeight ` with a ` SetDisplayModeCallback ` interface in ` Lwjgl
added a null check for parent ' s buttonsAwatingRelease before resetting them to null to prevent potential NullPointerExceptions when the parent form is not
update wrap width calculation in LineCell and implement computePrefHeight method in StyledTextAreaSkin to ensure proper spacing based on empty or
updated error message formatting in XSLTErrorResources _ it . java to improve readability of error messages for better clarity
replaced HashMap with LinkedHashMap in CustomChangeWrapper and CustomPreconditionWrapper to maintain insertion order for parameter values
simplified string concatenation in multiple classes to use String . format to improve readability and maintainability of the code
replaced ` getNamespaceURI ( ) ` with ` getNamespace ( ) ` in ` StaxXmlPullParser . java ` to simplify namespace retrieval
added support for nested joins in multiple test classes to enhance test coverage for nested joins in the application
server : allow query to be run from root admin only
added a check for ` JavacFileManager ` and modified the constructor of ` CompletionTaskProcesor ` to accept a cursor parameter
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
updated import statements in KuduIOIT . java and XmlIOTest . java to use Hamcrest ' s assertThat
use util . createhandler instead of new handler for metadatarenderer and textrenderer
changed the calculation of offsetMemSize in SymbolMapReaderImpl and added a new test for symbol file mapping in LineTcpConnectionContextTest to
removed debug print statements from TermFilterTest . java to clean up the test output and improve readability
removed the ` Reflection ` class and its references from ` jooby . internal . guice ` and ` jooby .
refactor ThreadlessExecutor to encapsulate state management and improve thread management to enhance code clarity and maintainability by encapsulating state management in
removed exception handling for IndexOutOfBoundsException in DateTimeFormatter and added a test for null return behavior in TestDateTimeParsing to improve error handling and ensure proper exception handling
rename ` CHUNK _ LENGTH ` to ` CHUNK _ LENGTH _ KB ` and introduce a new method ` chunkLengthInKB ` to improve
added a case for WILDCARD in mmm Types . java and created a new class T7034495 . java with generic interfaces to
simplified the loop structure in LotsOfEvents . java to improve code readability and maintainability
refactor conditional checks in TransclusionDecideRule . java for better readability to improve code clarity and maintainability
remove ` ` micronaut ' ' version print from ` ` micronaut . java ' '
added unit tests for the Area3DPtg class in TestBugs . java to ensure correct handling of formula names and their definitions in the
updated MindIcon creation to include a description if the name starts with a slash to improve the clarity of the MindIcon ' s
updated the ` onHomeIntent ` method to accept an ` internalStateHandled ` parameter to enhance the functionality by allowing the home intent to reflect
replaced the direct call to ` getPreferDependencyTree ( ) . orElse ( false ) ` with a local variable ` preferDependencyTree `
added ` showDetails ` method to ` FileDisplayActivity ` , ` FileDetailFragment ` , ` FolderPickerActivity ` , and ` O
updated function names from " $ apply " to " apply " across multiple files to standardize function naming conventions for consistency
added capacity checks and randomization logic in MinimalEncoder . java and updated size assertions in HighLevelEncodeTestCase . java to ensure proper
updated string formatting in SourceBuilder . java to include required and since properties to enhance clarity and consistency in output formatting
added a call to notifyDataSetChanged ( ) in FolderSyncActivity to ensure the adapter updates the data source after data changes
removed the method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to streamline the connection handling by eliminating unused
updated type checks in RemoveJavaDependenciesAdapter and added assertions in Collections to enhance type safety and ensure correct handling of collection values
camel - aws2 - aws : remove unused method from defaults3crtasyncclient
updated error messages in doDudPasswordTest for corrupted stream out of bounds length checks to improve clarity in error reporting for better debugging
improve error message when the collection ' s size do not match expected size
replace bailout handling with exception handling in GraalCompiler . java and update condition addition logic in GraphBuilderPhase . java to improve error handling
ggb - 1186 pen image size should be set to 200x200 , not 300x300
refactor SQLXML class to improve code readability to enhance maintainability and facilitate future updates
added a limit parameter to the getOrderBook method in YoBit classes and updated related methods in YoBitMarketDataService and Y
replaced ` GotWrongOOMEException ` with ` HeapOOMEException ` in multiple files to align exception handling with the new heap structure
nifi - 1776 : set maxstringlength to integer . max _ value in standarddatabaselike . fix # 2
updated the way engines are retrieved in PmsConfiguration . java to ensure a default value is used when no engines are specified
renamed ` FullIterator ` to ` WheelIterator ` and updated its implementation in ` TimerWheel . java ` to improve clarity
improve error message when generate a custom description of a bug
increased the timeout duration for chunk readiness checks from 3 seconds to 10 seconds to improve test reliability by allowing more time for chunk
changed the visibility of the ` menu _ uncomplete _ checklists ` menu item from ` true ` to ` false ` to ensure the menu
refactor DefaultResultSetHandler to improve handling of nested result maps and introduce a new Contract class to enhance code clarity and facilit
added null checks for defaultHome and mUpdateRegisteredPackage in OverviewComponentObserver . java to ensure proper handling of null values and prevent potential
removed the import and annotation for VertxGen in PumpImpl . java to streamline the code by eliminating unnecessary annotations
removed unnecessary cast to FileDisplayActivity in FileDetailFragment and OCFileListFragment to simplify code and improve readability by eliminating unnecessary
trim whitespace from tokens in ConfigAttributeEditor and add a test for strips leading and trailing spaces in ConfigAttributeEditorTests to ensure consistent formatting
refactor ClassUsingAnotherAuxiliary , ClassUsingAuxiliary , and SelfClassWithAux classes to improve code organization and maintainability
svm : add getunnamedmodule ( ) to dynamichub . singlemodulreference .
added a check for " pg _ " prefix in DatabaseMetaData . java to set relKind to " SYSTEM TABLE " based on the first byte
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated RQST _ FIELD _ DESC initialization and case handling in ThriftHiveMetastore . java and HiveMetaStore . java to
added a new module - info . java file for the core module to provide module - level exports and requirements for the core module
added logic to handle idle and filled states in SslConnection to ensure proper flushing and fill state management during SSL connections
updated Log4j2LogDelegateFactory to check if LogManager has a logger before creating a LogDelegate to ensure proper handling of logger creation
refactor VM launching logic to differentiate between client and server VM scenarios to improve code clarity and ensure tests reliably reliably on
refactor multiple operation classes to improve code organization to enhance maintainability and readability of the codebase
replaced null with " org . postgresql . ssl . LibPQFactory " in PGProperty . java to ensure compatibility with the latest PostgreSQL
disabled the @ Test annotation in TestInterProcessSemaphoreEdges . java to indicate that the test is currently disabled for now
added sorting functionality for resource keys in EditableResources . java to ensure consistent ordering of resource keys based on case insensitivity
added a new file ` OSvTerminal . java ` and integrated it into ` TerminalFactory . java ` to support the operating system ' s
added support for additional file extensions " . gr " and " . grs " in the ClassType class to enhance compatibility with additional file formats
updated ` combinedVectors ` from ` HashMap ` to ` TreeMap ` in ` DrillTestWrapper . java ` to ensure consistent ordering of combined
added a condition to check for the size of names and values in XPathEntityProcessor . java to ensure that the loop does not exceed the expected
updated WebSocketPolicy class to improve WebSocket connection handling to enhance performance and reliability of WebSocket connections
refactor readPhoneStatePermissionGranted and accessWifiStatePermission to instance variables in ShadowTelephonyManager and ShadowWifiManager to
log4j2 - 1343 add default - based resolution to standardmessagerepositoryresolver
refactor AsmUtil to use generics for ClassVisitor and MethodVisitor constructors to enhance type safety and reduce casting overhead
added a new file LoggingAuditService . java to implement user authentication and logging functionality to facilitate easier debugging and monitoring of user authentication
added nullability annotations and improved temperature handling in TadoZoneStateAdapter and AirConditioningZoneSettingsBuilder to enhance robustness by
no effective change - code cleanup - no functional change
camel - 16400 : camel - http - allow to configure the proxy host and port for the http client . thanks to dav
update MAX _ ENCODING _ VERSION from " 1.1 " to " 1.2 " to ensure compatibility with the latest template encoding
added a call to jdkSerialFilter ( ) in System . java to ensure compatibility with the JDK serialization framework
( chore ) camel - core : add capacities to log message
replaced calls to ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple animation classes to simplify the method
updated the ` ensureRealtimeClusterIsSetUp ` method to use ` rawRealtimeTableConfig ` instead of ` realtimeTableConfig `
added ` isError ( ) ` and ` error ( ) ` methods to ` ValidationReport ` and updated validation status handling in ` DisallowValidator
updated InvariantDeviceProfile to use closestProfile . inlineQsb instead of defaultDisplayOption . inlineQsb and added new inline QSB
added URL decoding functionality to the createClassPath method in SortedArrayStringMapTest . java to ensure proper handling of special characters in class paths
updated test expectations in TransformSteps . java from ' 10 ' to ' ( . * ) ' to improve accuracy in validating method parameters
fix npe in pgraphicsjava2d . fillrect ( ) when image be null
replaced hardcoded timeout values with a configurable timeout variable in the waitUntil method to improve flexibility and maintainability of the wait logic
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to enable dynamic configuration of the Docker image for the environments
added multiple calls to System . gc ( ) in KnowledgeAgentTest . java to ensure proper garbage collection behavior during tests
refactor AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code organization and maintainability
replaced ` createHardLink ( ) ` with ` copyFile ( ) ` in ` SnapshotTaker . java ` and added error handling for
refactor methods in AsyncOperationDocProvider , OperationDocProvider , and SyncOperationDocProvider to replace ` appendToDescription ( ) ` with `
make sure all the NDArrays be in the same device to avoid illegalargumentexception
added a conditional check for ` Xml . Document ` before visiting ` FindIndentXmlVisitor ` and ` FindLineFormatJavaVisitor ` to
replaced ` InstrumentationTestCase ` with ` AndroidJUnit4 ` in multiple test classes to ensure compatibility with JUnit4 testing framework
added GasLimitRule and ParentGasLimitRule to CommonConfig . java to ensure proper handling of gas limits and parent gas limits based on the
changed the visibility of the setupData ( ) method from public to private in BaseAssumptionsRunnerTest . java to restrict access to setup
renamed the variable ` autocommit ` to ` runInTransaction ` and updated related logic accordingly to clarify the purpose of the variable
[ java ] do n ' t close deframer if the stream be not end .
updated JobManagerOptions and RestartStrategyOptions to use { . Site . BaseURL } instead of . / ops / state / task _ failure _
added a new test method ` testIssue154 ` to ` SelectTest . java ` to validate SQL parsing and deparsing of discount data to
refactor Common class to improve code readability to enhance maintainability and facilitate future updates
refactor Launchable to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ table - common ] fix typo in streamexecdeduplicate javadoc
added a warning log statement to indicate an error when sending Kafka messages to a specified topic to improve error handling and debugging by providing clearer diagnostics
added ` setPersistentPropertyAccessorFactory ` method to ` SimpleElasticsearchPersistentEntity ` and overridden ` isImmutable ` method in ` SimpleElasticsearchPersistent
changed the return type of the setCoord method from void to boolean and modified its logic in GeoCoordSys1D and GeoSegment3D
added velocity calculations and logging for scroll events in AskGestureEventsListener . java to enhance user experience by allowing dynamic scrolling behavior based on gesture
added comparison logic for key comparison in NGramEstimator . java to ensure consistent ordering of key elements during comparison
updated import statements from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple Java files to
updated the method to retrieve folder icon state and label information in StatsLogCompatManager . java to ensure accurate representation of folder icon properties in the
updated method call from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
added a new Java file ` TestSkeletonPredicates . java ` to implement test cases for skeleton predicates to ensure proper functionality and functionality of the IR
modified the ` equals ` and ` hashCode ` methods in ` SelectionHighlighter ` and added a setter method in ` ViewModelInfo ` to
added a new ` StringResultConverter ` class and refactored the ` stringValue ` method in ` AsmRuntime ` and ` Asm
camel - 19751 : disable test that do n ' t run reliably on apache ci
updated the condition for waiting for a single object in JansiWinSysTerminal . java to ensure correct behavior when waiting for a single object
added null checks for the buffer before setting its capacity in the setInBuffer method and adjusted the buffer limit in the loadMethod method to ensure
updated the expected data directory path from " data / " to " data " File . separator to ensure consistent file path formatting across different operating systems
updated OS condition checks in AutoUpdaterServerProperties . java to handle different operating systems to ensure compatibility with Windows and MacOS versions prior to 10
replaced ` lockFile ` with ` lockName ` in ` FSDirectory ` and updated related constructors in ` Lock ` to improve clarity
replaced the method ` waitForLauncherObjectByClass ` with ` waitForLauncherObject ` for retrieving the " apps _ view " launcher object to improve
replaced instances of ` this ` with ` ClientDatagramEndPoint . this ` for consistency and clarity to improve code readability and maintain
updated the SQL query in GET _ STEP _ EXECUTIONS from " oreder by STEP _ EXECUTION _ ID " to " order
modified button handling in LwjglInput . java to return - 1 instead of Buttons . LEFT and added validation for unknown buttons to
added authorization checks for submitting approval and rejecting tasks in TaskRestRepositoriesIT . java to ensure that actions are only allowed to claim tasks
refactor logger usage in OpenIdServiceResponseBuilder and GoogleAccountsServiceResponseBuilder to use a static final logger instead of a transient one to improve logging
removed the 15 minute expiration time from the SsoAccessTokenProvider and updated test methods accordingly to simplify the expiration logic and improve test clarity
[ geos - 8470 ] fix test failure on macos - github
add miss mock for alarm suppression monitoring ( # 2329 )
reordered conditional checks for defaultCloseOperation in JFrame . java to improve code readability and maintainability
added a null check for the MediaDatabase connection before executing the ANALYZE SAMPLE _ SIZE command to avoid potential NullPointerException when retrieving the database connection
replaced instances of ` metricsContext ` with ` solrMetricsContext ` in ` SuggestComponent . java ` to improve consistency and clarity
updated file and folder footer handling logic in OCFileListFragment . java to ensure correct display of footer strings based on file and folder counts
changed the default value for HashKnownHosts from " yes " to " no " and modified key loading methods in FileKeyPairProvider and ResourceHelper
refactor SourceVersion class to improve code readability to enhance maintainability and facilitate future updates
added a new test class ` ThreadFactoryTest ` to validate thread creation and exception handling to ensure that the ` MyThreadFactory ` class handles
added a method to retrieve the lock period based on dynamic properties and updated expiration time calculation based on support to improve lock period handling based on dynamic
added a new instance of TicketModel in EditTicketPage . java to initialize the ticket object for better data handling
updated the feature flag " ENABLE _ PREDICTION _ DISMISS " from false to true to allow dimiss apps from predicted list
updated constructors in multiple assertion classes to include a self - type parameter for better type safety to ensure compatibility with subclasses requiring a specific self - type
added a new menu item for quote functionality in TweetActivity to enhance user experience by allowing users to quote tweet content
make sure current interrupt be finish , prevent another starting yet
rename ` codecPassthroughFormat ` to ` decryptOnlyCodecFormat ` and update related method names for clarity to improve code readability
added a conditional check for the result before offering failures in ServerHTTP2StreamEndPoint . java to ensure that failures are only sent when the
updated error message from " Stiller Modus " to " Silent - Modus " in XSLTErrorResources _ de . java and XSLT
added ThreadSafe annotation to CheckpointsCleaner class to ensure thread safety during concurrent operations
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapter ` , and ` RestAdapterTest ` to
removed unnecessary else statement for creating the components . yml file in ComponentPresetManager . java to streamline the code for better readability and maintain
added a new configuration option for unique column names in Hive and updated related tests in TestJdbcDriver and TestJdbcDriver2 to enhance result set
removed the ` bFirstTime ` variable and added item listener for ` cbDefaultVoice ` in ` MaryGUIClient . java `
added validation for session validity in Session . java and updated test cases in SessionHandlerTest . java to ensure proper exception handling for invalid sessions and
deleted the ExceptionHelper . java file which contained a method to retrieve the root cause of an error to streamline the codebase by eliminating
updated the key key generator initialization from 256 to 255 in JceX25519Domain . java to optimize the key generation for improved performance
added a codec setting for Lucene41 in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene ' s postings format
[ hotfix ] [ checkpoint ] add log for empty checkpoint range header
added support for RSA / ECB / OAEPPadding algorithm in OperatorHelper to enhance security by allowing OAEP algorithm to be used
updated the DARWIN _ AARCH64 class references from DARWIN _ AARCH64 to MACOS _ AARCH64 across multiple
updated exception handling to include SecurityException in DebugSourcesResolver . java to improve error handling for security issues during source resolution
simplified the conditional check for UNIX OS in AbstractTest . java to improve code readability and maintainability
updated error handling in FileUploadUtils and ControllerConf to include exception details and modified file handling logic in UploadRefreshDeleteIntegrationTest to improve error
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added ` BufferUtils . freeMemory ( byteBuffer ) ` to improve
changed the USE _ PIPELINE _ DOWNLOADER flag from false to true in FastSyncChainDownloader . java to enable the use of
removed ZONE _ OFFSET setting from SimpleDateFormat and added a new test class Bug7130335 for testing Calendar formatting to simplify the code and
refactor code to use a local variable for iconCount instead of accessing mRollo . mState directly to improve code readability and maintain
server : do n ' t return router if there be no default hypervisor
refactor StringBuffer class to improve readability to enhance maintainability and facilitate future updates
added assignment for rule UID in RuleResource . java to ensure that the rule ' s UID is correctly associated with the resource
added a null check for the listener before unsubscribing the registry to avoid potential NullPointerExceptions when the listener is not initialized
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class to enable pretty print formatting for the output
make access _ table public so that it can be use in other package .
updated error messages in DataSourceInitializer and its tests to clarify that no resources were found at the specified location to improve clarity and accuracy
improve error handling of xmpptransport ' s run ( ) method .
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added parameters for ` effectiveClusterVersion ` and ` isUpgradeSuspended ` in ` AmbariManagementControllerImpl . java ` to enhance
removed Google copyright notice from FindsByCssSelector . java to clean up the code and improve maintainability
removed the declaration of ` wfields ` in ` Resolver . java ` to streamline code by eliminating unused variable
updated EncryptionJwtCryptoProperties and OAuthProperties to set default encryption and signing key sizes to ensure default values are set for secure encryption and signing algorithms
hbase - 26969 htabledescriptor . getcolumnfamilies ( ) . length = = 0 should be getcolumnfamilies (
replaced the import of AllowedResourceAliasChecker with a lambda expression for adding an alias check to simplify the code and improve readability
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and Serializable classes to improve code organization and maintainability
[ java ] make cluster interface extend idlestrategy and add reset method to clusteredserviceagent .
updated the incrementing of currentChunkID in ChunkedWriter . java to ensure the correct chunk ID is used for the writer instantiation
added a new abstract class AbstractJobExecutor that implements JobExecutor to provide a base class for job execution handling
updated replay logic in RecoveryStrategy . java to use replayFuture instead of return to improve clarity and maintainability of the replay process
corrected the spelling of " hugeStaticBase " to " staticBase " in HugeResourceTest . java to improve code read
added a method to retrieve service IDs based on the discovery configuration to ensure that service IDs are only returned when the discovery feature is enabled
replaced ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` SecureRandom ( ) . nextInt (
improve error message when runtime compilation fail
removed redundant calculations for currentStart and baselineStart in TimeOnTimeComparisonHandler . java to streamline time comparison logic by eliminating unnecessary
added abstract method handling and corresponding tests in CallsRealMethods and CreatingMocksWithConstructorTest classes to enhance mocking functionality to support abstract methods
refactor package access access checks in NashornScriptEngine and Context classes to improve clarity and encapsulation to enhance code readability and
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup methods to enhance test structure and ensure proper
refactor ContributionListPanel to use a more descriptive variable name and improve font handling to enhance code readability and maintainability by using
added REQUEST _ HAS _ TIS handling in QuickstepTestInformationHandler , TestInformationHandler , LauncherInstrumentation , and TestProtocol to
replaced SwingUtilities . invokeAndWait with a Mutex . EVENT . writeAccess in ConnectAction . java to improve code readability and ensure
updated method parameters from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` and related classes to improve clarity and consistency
added new internal classes , ArrayHelper , Asserts , Comparables , and NativeRegExp , and Objects to the javaemul package to provide
added support for handling home and end commands in the Less . java file to enhance user experience by allowing additional commands to be processed
simplified the iteration over connected plots by removing the synchronized block to improve performance by eliminating unnecessary synchronization
replaced the share intent check with a chooser intent creation in Utilities . java to streamline the process of starting activities based on package availability
changed the access modifier of the Roster constructor from public to package - private to restrict access to the constructor for better encapsulation
added basic constraints to the certificate generation to ensure proper validation of certificate integrity
added a new test method ` testFixedNestedTransform ` to the ` TextVisualRegressionTest ` class to address failing tests due to using
removed unnecessary calls to ` field . multiValued ( ) ` in ` TrieDateField . java ` and ` TrieField . java ` to
deleted the TaskbarStateHandler class and updated its usage in BaseQuickstepLauncher to streamline the codebase by eliminating unused components
added a new file ` ArrayLength . java ` to test the behavior of ` getField ` and ` getDeclaredField ` for an array type to ensure
wait for process to be destroy before shut down hzstartit
replaced the ` @ Singleton ` annotation with ` @ PostConstruct ` and refactored the ` save ` method to ` @ ApplicationScoped
updated assertions in Safepoint . java to ensure value is non - negative and adjusted newValue logic accordingly
updated thread name field type from char array to string in OopUtilities . java to ensure compatibility with Java ' s String type handling
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder and Hns
add font support to pgraphicsjava2d so that it can be use with stroke ( )
refactor expression expansion logic into a separate method ` expandDynamicStar ` to improve code readability and maintainability by reducing duplication
added a private method ` findInterestingChildren ( ) ` to the ` Comment2000 ` class to initialize ` _ header ` and ` _
added a status warning icon for the PMS frame in HTTPServer . java to enhance user experience by providing a clearer error message
refactor input event handling in PSurfaceAWT and PSurfaceJOGL classes to use getModifiersEx ( ) instead of getModifiers ( ) and
amd64countleadingzerosnode and amd64counttrailingzerosnode should use nodecycles . CYCLES _ 3 instead of CY
( chore ) camel - as2 : fix npe when content type be null
refactor Locale class to improve code readability to enhance maintainability and facilitate future updates
added ` clearLog ` method and ` clearLog ` methods to ` ErrorConsoleController ` , ` ErrorConsoleViewModel ` , and `
removed unnecessary whitespace in RecentsView . java to improve code readability and maintain consistency
updated Debug . java and CaptionMap . java to use LocaleHolder instead of ConsolePlayer to enhance localization handling and improve message sending functionality
updated connection pooling settings and modified data source retrieval logic in multiple test classes to improve resource management and ensure proper resource management in tests
alexeibarantsev : add opera blink support to defaultdriversessions
replaced specific exception handling with a custom Exception catch in ManageJournalsPanel . java to improve error handling clarity and provide user feedback
added multiple Lifx product entries to the LifxProduct . java file to support additional LIFX product options in the application
added asynchronous support for replica creation in OverseerCollectionProcessor and CollectionsHandler to enhance asynchronous handling capabilities for collection operations
refactor PostgreSQL primary key initialization and test assertions in PostgresDatabase and PostgresDatabaseTest classes to improve code readability and maintainability by
updated LogPanel initialization to use objectId instead of null to ensure LogPanel uses the correct repository head when objectId is not provided
changed the unit unit of parentTail from UNIT _ Y to UNIT _ XYZ in SkeletonInterBoneWire . java to ensure correct parent
added a new method ` browserDestroy ` to the ` AndroidImplementation ` class and modified the deinitialization method in ` AndroidImplementation . java
added a wait for active collection " readApiTestViolations " in the AutoScalingHandlerTest class to improve test reliability by ensuring tests are
refactor the loop to iterate through the array directly instead of using a for - each loop to improve readability and maintainability of the code
updated the method to check for controller state in SoftResetAction . java to improve accuracy of controller state checks
disable on - disc stream cache to speed up texture pack reloading .
added parentFolder assignment logic in Request and RequestV2 classes to ensure correct resource retrieval based on media renderer requirements
server : fix npe in networkofferingvo . getofferingbyid ( ) ( # 4569 )
modified FileOutputStream to use a custom close method that deletes the temporary file to ensure proper resource management and prevent potential memory leaks
added error handling for ` RestClientException ` in ` StandardGitHubRepository ` to handle 403 responses to improve robustness by preventing application crashes
log4j2 - 1343 add getoriginal ( ) method to messagefactory2adapter and fix test
added @ SuppressWarnings ( " BanSerializableRead " ) annotations in DataSizeTest , DurationTest , and SizeTest classes to suppress serialization warnings
updated regex pattern from " ( [ 0 - 9 ] { 1 , 2 } ) " to " ( [ 0 - 9 ] { 1
added delay settings for ToolTipManager initial and dismiss delay in ExtractionModelFrame . java to improve user experience by allowing more time for tooltip
refactor ProjectCommand to utilize a passed - in targets set instead of options for target creation to improve code clarity and maintainability by
added timezone setting and assertion for Time object in TimeTest . java to ensure correct formatting of Time objects in UTC
refactor MediaSessionConnector to improve code readability to enhance maintainability and facilitate future updates
use endpoint . gethandler ( ) . getSslimplementation ( ) instead of new jssefactory ( ) in http11nioprocessor
updated the calculation of altitude in GpsLoggingService to use the accuracy value instead of the altitude value to ensure accurate accuracy display based on location
added a method to check if futures are enabled in BinanceExchange and updated related services accordingly to ensure future exchange settings are only applied when futures
update adminaccountmanagementhelper to use instructorcoursestable and instructoraccountstable instead of accountdata
added a call to setAcceptQueueSize with maxWorkerThreads to configure the accept queue size for the connector
updated the way the watch service is enabled by introducing a constant for the property name to improve code readability and maintainability by using a
camel - 14284 : camel - jms - allow to configure ssl by default . thanks to andreas for the patch .
replaced ` UserException . parseError ` with ` UserException . validationError ` in ` DrillSqlWorker . java ` and updated
updated the calculation of the duration variable in GCInspector . java to ensure that the duration may be zero for a really fast collection
fix getcomment on method with line comment return empty optional
replaced the ` reserveMemory ` method with a ` readReservedMemory ` method in ` ReserveMemory . java ` and updated OS
added calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of
changed the access modifier of ` procId ` from private to protected and modified string concatenation in ` HBaseAdmin . java ` to enhance encapsulation
camel - 14284 : camel - cxf - allow to configure the service class for the cxf endpoint .
refactor YamlChangeLogSerializer to dump databaseChangeLog as a map instead of a string to improve clarity and maintainability of the output
updated print statements in SchemaPrinter . java to include a newline character to improve output formatting for better readability
removed unnecessary code and improved message sending in DebugRoadRegen . java and SchematicHandler . java to enhance code clarity
updated references to ` getContext ( ) ` in ` HomeFragment . java ` to use ` getActivity ( ) ` instead of ` getContext ( )
added Hibernate ' s @ GenericGenerator annotation to multiple classes and updated GeneratedValue annotations to use " native " strategy to enhance code clarity
removed the country parameter from the getSystemTimeZoneID method signature to simplify the method signature by eliminating unnecessary parameters
bzip2codec : fix bytebuffer . put ( byte [ ] ) in testbzip2codec
move startlogger ( ) from appw and appwapplet to geogebralogger so it can be use by other apps
added a constant VALUE _ TYPE _ EMPTY in Type . java and modified the Value . create method in Value . java to ensure a default empty
replaced ` = = ` with ` . equals ( ) ` for string comparison in ` GroupManager . java ` to improve code readability
refactor Liquibase and LiquibaseDropAll classes to improve code readability and maintainability
refactor SimplexNoise class for improved readability to enhance maintainability and clarity of the code
added a new method ` newInstanceExact ` to ` TargetGraphFactory ` for creating instances of ` TargetNode ` to facilitate the
rename getminrowcompactedsize ( ) and getmaxrowcompactedsize ( ) to getminrowsize ( ) and getmax
added a new Gson type adapter for ArtifactVersion in MetadataCollection . java and made several fields transient in ModMetadata . java to ensure proper serialization
updated the handling of the last element in the NativeArray to ensure proper deletion of elements based on the presence of a previous element
updated file handling in FileUploader to set the parent file ID to ensure the correct parent file is set for the current upload process
added a new file UTF8ReaderBug . java to test XML parsing with supplementary characters to ensure proper handling of supplementary characters in XML
add unit test base on user forum issue : http : / / issues . apache . org / activemq / browse / camel - 14
updated subscription stream assertions in BinanceIntegration and BinanceUsIntegration to include " ethbtc @ depth20 " suffix to ensure accurate representation
added a resetAllocation method to the Wrapper class and invoked it in SimpleParallelizer to reset the initial and maximum allocation values for better resource management
removed unused import of AssertTree from AmbariManagementControllerTest . java to clean up the code and improve readability
refactor property handling in Agent . java to synchronize access to System properties to ensure thread safety when accessing system properties
refactor ModelUtils class to improve code readability to enhance maintainability and facilitate future updates
refactor AbstractDoubleArrayAssert class for improved readability to enhance maintainability and clarity of the code
adjusted width and height calculations for labels in Legend . java to ensure proper spacing based on the last element of the array
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` , and
replaced ` get ` method with ` getValues ` for retrieving values in ` MoreLikeThis . java ` to improve data retrieval efficiency by using
replaced the use of CxxLink with BuildTargetSourcePath in Omnibus . java to streamline the code by utilizing
disable botania . versioning . disabled by default
changed the type of ` filePaths ` from ` Collection ` to ` List ` and added ` numberOfFiles ` variable in ` MediaFolder `
removed the " - b " argument from the AidlStep and GenAidlTest classes to simplify command line arguments for clarity
do n ' t delete obligation on edge from comparison if they be the same
added a TODO to test this in FakeHttpLayer . java to address the TODO issue associated with the test
[ hotfix ] [ coordination ] revoke leadership on error in embeddedleaderservice
refactor CompositeDiscoveryClient to use Reactive ' s Single for reducing instances to improve code readability and maintainability by using Reactive ' s
rename ` applySystemConfiguration ` to ` applyQualifiers ` across multiple files to improve clarity and consistency in naming conventions
[ hotfix ] [ doc ] update documentation of jobmanager . recoversfromtaskfailure option
replaced ` updateNoWidgetsView ` and ` updateNoSearchResultsView ` methods with ` updateRecyclerViewVisibility ` for better clarity
added error handling for WstxOutputFactory and WstxInputFactory in XmlUtil . java and WstxOutputFactory2 .
added a ` @ Before ` method to the ` AuditAliasCommandIntegrationTest ` class and modified the ` testBuckAliasList ` method
removed unnecessary logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to streamline code by eliminating
( chore ) camel - cxf : disable test that be not applicable in this scenario
added a try - catch block around the update ( ) method call to handle potential exceptions during periodic refresh
refactor ` ChainingAuditPrincipalIdProvider ` and ` CasCoreAuditConfiguration ` to use ` @ RequiredArgsConstructor ` and ` ArrayList
added default background fill checks in HSSFCellStyle . java and refactored color retrieval in HSSFPalette . java to improve
refactor ZonedDateTimeFormatterBenchmark to improve code readability to enhance maintainability and facilitate future updates
added a new method ` shouldBufferUpdate ` to ` DistributedUpdateProcessor ` and created a corresponding test class in ` DistributedUpdateProcessorTest `
added a null check for motor and stage in SimulationListHandler . java to ensure proper handling of cases where the motor or stage is not
update / editreplace and / editscript commands to include a ToReplaceID parameter and modify the getItem method to include a allowAll parameter to
refactor ExtendedMasterSecretExtension class for improved clarity to enhance maintainability and readability of the code
changed the declaration of the InputProcessor variable to be final to ensure immutability of the processor variable
added an onWriteFailed event to the processedTask to notify listeners when the end of the stream is reached
added " CUBE " to the MySQLDatabase class to support CUBE database operations
added a try - catch block around the rm operation in TestReplicationHandler . java to handle potential IOException during the rm operation
replaced ` ExperimentalRobolectricTestRunner ` with ` MultiApiRobolectricTestRunner ` and updated related methods to
replaced reflection - based field retrieval with direct method calls in DefaultOkHttpClientFactoryTest to simplify code and improve readability by eliminating
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
added a null check for the ` os ` variable in ` RawMessageContentRedirectInterceptor . java ` to prevent potential NullPointerExceptions when ` os `
ggb - 1888 fix for corner case when there be no parent splitpane
added a boolean parameter to the jailerMain method and modified the jailerMain method to include a check for the fromCli flag
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future updates
added a shared preference for pull unread status in TalonPullNotificationService to enhance notification visibility for unread pulls
added a check for the parent ' s object kind before retrieving the object stamp in IsNullNode . java to ensure proper handling of object types and
modified Box2DTest , Pong , and OrthographicCamera classes to improve memory management and world positioning to enhance performance and ensure
refactor layout manager initialization and padding logic in ViewPostDetailFragment . java to improve code readability and ensure proper handling of null values
changed log level from trace to warn in CLIService . java to provide more informative logging for background operations
added a print statement to display method instance names and flags in JimpleBodyBuilder . java to improve visibility checking for abstract methods in the code
ggb - 1341 run pointerup callback only on ie10 , not on ie11
updated the ` getNotificationUsers ` method to include a ` deviceId ` parameter and modified its implementation to filter users based on their device ID to
updated the base URL from " Droppr . org / srtm / v4.1 / 6 _ 5x5 _ TIF
removed property change listeners in MotifFileChooserUI . java and added a new test class bug6520101 . java to improve user
change return type of handle method from void to boolean in multiple UI classes to enable the method to decide whether to handle or not based on the
refactor BuildRuleResolver methods to improve optional handling and exception handling to enhance clarity and maintainability of rule resolution logic
added visibility control for transportSpinner in HostListActivity to improve user experience by hiding the spinner when makingShortcut is true
added null check for attributes _ field in mmm Attr . java and created new classes T7043371 . java and T707
refactor backPressed method to return a boolean indicating success or failure to improve control flow by avoiding unnecessary calls to backButtonClicked in multiple
added LONG _ VIEW _ INDEX _ ENABLED _ ATTRIB and DEFAULT _ LONG _ VIEW _ INDEX _ ENABLED constants to QueryServices and MetaDataClient
corrected the capitalization of " V " in the SDRTrunk string to ensure consistent output formatting for better readability
updated the path handling in PrivateKeyParserTests to use StringUtils ' s cleanPath method to ensure consistent file path formatting across tests
removed the columnPosition parameter from the diffDropColumn method to simplify the method signature by eliminating unnecessary parameters
updated IndexWriter instantiation to use TEST _ VERSION _ CURRENT instead of Version . LUCENE _ 40 to ensure compatibility with the latest version
hbase - 25703 add option to disable column family check ( # 2695 )
[ java ] : use archive . extendrecording instead of archive . startrecording and archive . stoprecording .
replaced calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " ) ` and
added a condition to return early if the JSON node contains an " i " node to optimize performance by avoiding unnecessary processing when there is only
refactor Procedure class to improve code readability to enhance maintainability and facilitate future updates
added Locale . getDefault ( ) and ClassLoader . getSystemClassLoader ( ) to applyResourceBundle calls in Toolkit . java and Window . java to ensure
[ j2kt ] add normalization pass for kotlin normalization of array creation .
lucene - 8287 : do n ' t increment the position if there be no count on the term enum
fix possible npe in modmetadata . getauthorlist ( ) . close # 1193
added a new test class ` OSGiTest ` to validate dependencies of ` com . google . gson ` annotations and ` sun . misc
nifi - 1741 : fix concurrency issue with enabling referencing services graph
hbase - 15836 htable . flush ( ) should set autoflush to false instead of clearbufferonfail
fix ( annotation ) : add compliance level ( 8 ) to annotation test
added a method ` hasUserData ( ) ` to ` SimpleFeatureImpl ` and a corresponding test in ` SimpleFeatureImplTest ` to provide
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` classes to simplify method signatures and improve
refactor RelyingPartyRegistration class for improved clarity to enhance maintainability and readability of the code
removed the ` enableLogging ( ) ` method from ` JavaCompiler . java ` to streamline logging configuration by eliminating unused code
added a new class ` InJavaSourceSet ` to handle Java source set markers to facilitate the handling of Java source sets in
updated resource loading in TestGDALParser to use a dynamic file path to improve flexibility and ensure compatibility with external GDAL parsing
added a new method ` createGetter ` to the ` ReflectionHelper ` class to facilitate the creation of a getter based on an
removed the condition for using external storage in the SDK version check to simplify the conditional logic for better readability and maintainability
added a new constant ` INDEXER _ NO _ COMMIT ` to control the commit behavior in IndexerMapReduce and IndexerOutputFormat
server : allow both diskofferingid and snapshotid to be pass when create volume
updated content assignment and assertion logic in ToHtml . java and BaseTestCellComment . java to ensure content is never null and improve clarity
added null checks for amountToAdd , amountToSubtract , and period types in LocalDate , LocalDateTime , and ZonedDateTime classes to ensure proper handling of Period
added a new file ` Issue382 . java ` that handles specific error types in Jooby to ensure proper handling of specific error
replaced the private static method ` signum ` with a static import ` signum ` and simplified the return statement in ` PositionUtils . java `
set text visibility to GONE in AttachmentAdapter to improve user interface responsiveness by hiding the holder
fix ( import ) : fix nullpointerexception in jdt import ( # 2321 )
simonstewart : do n ' t need to cast to firefoxoptions to get profile
updated the LiquidBlock class to extend BucketPickup and added new fields for FlowingFluid and List of FluidState to
http : / / issues . apache . org / jira / browse / amq - 2902 - do n ' t swallow exception
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate
rename ` existingObservation ` to ` distinctObservation ` for clarity to improve code readability and maintainability by using a more d
updated test properties to include annotations for Nightly , Weekly , Monster , and BadApple in LuceneTestCase . java
renamed the method ` createLogger ` to ` getOrCreateLogger ` and updated logger initialization logic to improve clarity and ensure logger is only created
added denyAccess for Class , Method , and Proxy classes in GraalContext . java to enhance security by restricting access to specific classes
improve performance of pgraphics2 . getimage ( x , y ) and pgraphics2 . setimage ( x , y ,
updated the method call from ` table . getSd ( ) ` to ` partition . getSd ( ) ` in ` HiveAbstractReader .
updated the overlay scroll logic in Workspace . java to improve the handling of zero overlay scenarios based on the last sroll time
hhh - 14850 - introduce immutablebatchbuilderimpl and immutablebatchbuilderinitiator for jdbc batch
improve error message when analysis should n ' t reach here
added a test for spying on a class retains the state in MockWithStaticStateDemo and created a new class MockWithStaticState
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure SQL parsing and deparsing works
refactor security handling by introducing a null check for ugi before executing the action to improve robustness by handling exceptions when ugi is
added error code retrieval for audio buffers in OpenALMusic . java to improve error reporting for better debugging
camel - 14850 : camel - quartz - add support for reference and parameter in the endpointhelper . thanks to david
refactor precision and scale handling in RexNodeConverter to ensure correct SQL type creation based on precision and scale values
replaced direct calls to ` getVendorProperties ( ) ` and ` getDeviceProperties ( ) ` with ` Optional . ofNullable ( ) ` for
updated the account update assertion to use the current time instead of a hardcoded value to ensure the account is updated accurately based on the time
replaced ` AxialStage ` with ` RocketComponent ` and updated selection logic in ` BasicFrame ` and ` DesignPanel ` to
added a new parameter ` -- long - running - time ` to the ` Args ` class and updated the initialization of ` longRunningTime `
updated reference comparison priority from AT _ MOST _ MEDIUM to AT _ MOST _ LOW and added a new class Ideas _ 2012
updated imports and method signatures in HttpServerProvider , ScriptEngineManager , and FtpClientProvider to use java . util . ServiceLoader instead of
mondrian : fix xssdecimalbinding . tostring ( ) to return plain string instead of string
simplified assertion statements in TestRestClientRequestImpl . java to improve readability and maintainability of the test code
added a condition to check if the reference database is the same as the comparison database in the MissingUniqueConstraintChangeGenerator to ensure unique constraints are
removed the ` addAndroidConstants ` method and simplified asset path handling in ` IjProjectTemplateDataPreparer . java ` to streamline
replaced ` assertEquals ( 0 , s1122 . getRequests ( ) ) ` with ` await ( ) . atMost ( 5
added user _ args and is _ daemon fields to the ImmutableMap in ChromeTraceBuildListener and ChromeTraceBuildListenerTest to enhance traceability by
[ gr - 23254 ] use modulesupport . getresourcebundle ( ) instead of resourcebundle . getbundle ( ) .
corrected the log message from " match limit " to " match order " in HepPlanner . java to ensure clarity in logging
added a new file TheRockMetaDataDemo . java to demonstrate the retrieval of exchange metadata to facilitate the retrieval
changed class declarations from ` class ` to ` strictfp class ` in ` FloatingDecimal . java ` and ` FormattedFloatingDecimal .
removed the unparseIdentifier call from columnNamesBuilder in ColumnStatsSemanticAnalyzer . java to simplify the code by directly appending the column name
added a test method to replace variable declarations in JavaTemplateContextFreeTest . java and updated method signatures in BlockStatementTemplateGenerator . java to
added a condition to check if the class is not synthetic in InstantiateStaticClass . java and implemented a test case in Bug1282 . java
replace projectFilesystem . getPathForRelativePath with basePath in WorkspaceAndProjectGenerator . java to simplify path resolution logic for better readability
added handling for pending rescue management in IkStepDefinition . java to improve handling of control flow Rescue exceptions during Ioke operations
removed the ` final ` modifier from the ` equals ` and ` hashCode ` methods in multiple type classes and added corresponding implementations in multiple classes to
added a method to retrieve the SyncLevel from a string or a default SyncLevel in UpdateLog . java to enhance functionality by allowing users to
test : increase redis client pause timeout to 2 second
added a condition to check if the slice state is not CONSTRUCTION and not RECOVERY in RecoveryStrategy . java to ensure that recovery
removed unnecessary whitespace in the create method call to improve code readability and maintain consistency
added ` sdkPath ` to ` AppleBundle ` and ` SwiftStdlibStep ` classes and modified ` makeProcessExecutorParams ` to
[ hotfix ] [ runtime ] make transientblobcleanuptask thread - safe
server : fix warning message for 1 - 1 static nat
refactor PasswordEncoder and StandardPasswordEncoder classes to improve code readability and maintainability
added conversion for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct data type
refactor BetterBlockPos class for improved clarity to enhance maintainability and readability of the code
updated the method to retrieve the proxy using the class loader to ensure the proxy is accessible from the application context class loader
updated version handling in MainWindow and ConnectionSettingsPanel to use Version . isNightlyBuild ( ) instead of MainWindow . VERSION . contains
added OracleDatabase support and modified statement processing logic in LoggingExecutor and JdbcExecutor to ensure proper handling of trailing and duplicated lines in database statements
added a new constant ` UNKNOWN _ VALUES _ ARE _ NSP ` to the ` IsNullValueAnalysisFeatures ` class to provide a configuration
[ hawtio - 12345 ] fix test failure on jolokia server
updated BLOB _ SIZE values , PLAY _ MARGIN , SLIDER _ MARGIN , and modified slider length calculations to
added a method to add a Multifactor Authentication Provider bypass to the DuoSecurityMultifactorProviderBypassConfiguration to enhance security
corrected spacing in method parameters in MaxRectsPacker . java to improve code readability and maintain consistency
( chore ) camel - kies : fix checkstyle violation
added methods to set and get the help page in PMS and updated HelpTab to use this new help page to improve user experience by allowing
added new files GeocodeProviderFactory . java and Constants . java and defined their implementations in Constants . java to facilitate the creation
updated import statements from ` org . apache . lucene . analysis . util . CharArraySet ` to ` org . apache . lucene
[ hotfix ] [ test ] use fail ( ) instead of expectexception
updated GATEWAY _ SERVER _ ID to use Protocol . GATEWAY _ SERVER _ ID and added checks for object IDs in MemoryCommand
updated conditions in SegmentsInfoRequestHandler and modified collection creation in CollectionsAPISolrJTest to improve clarity and functionality of document handling in the
updated the calculation of numPredictiveAppCols to account for phone devices to ensure accurate application column count based on device type
added a new method ` hasScalarSubqueryInput ` to ` JoinUtils ` for checking scalar subquery inputs across multiple classes to streamline the
fix buildcraft not be able to remove it ' s item from the inventory
updated layout gravity and height settings in DeviceProfile . java to improve layout consistency and ensure proper positioning of the drag target bar layout
updated method call from ` run ( ) ` to ` start ( ) ` in ` YahooSession . java ` to ensure proper execution
reset HiveMetaStore and HiveMetaStoreClient to null and modify error handling for local metastore client shutdown to ensure proper resource management and
updated Locale . getDisplayScript to use Category . DISPLAY instead of getDefault ( ) and added a test for display script honoring default locale to
replaced static imports from ` BASE _ URL _ PROP ` to ` ZkStateReader . BASE _ URL _ PROP ` and ` CO
replaced ThreadLocalRandom with a custom Random instance in StoreDirectTest . java to improve performance and reduce dependency on ThreadLocalRandom
added a condition to check if the launcher is ready before processing backups to ensure that backups are only performed when the launcher is ready for processing
pdfbox - 4892 : improve exception message , a suggest by valerybokov
added unit test base on user forum issue
rename ` setBodySpace ` to ` setBarSpace ` across multiple classes to improve clarity and consistency in naming conventions
refactor ShadowProcess class to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - core - filemessagetest : use hamcrest assertion instead of junit
added debug logging statements to multiple Logger instances in Grasscutter . java to facilitate easier debugging and troubleshoot
changed ` highlightCnstScrRngQuery ` from instance variable to static and updated related methods to allow for more flexible highlighting
updated state checks in Launcher and added a new getState method in Workspace to ensure proper handling of workspace states and improve state management
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
added a conditional check for args . cacheable before notifying new templates to ensure templates are only updated when cacheable is enabled
added SCOPE _ SOLR _ CORE and refactored scope handling in multiple classes to improve core scope management and enhance code clarity
added primary key constraint to the measurement table in DatabaseMetaDataTest . java to ensure the measurement table has a primary key associated with it
rename ` ` permissions - config - path ' ' to ` ` permissions - config - file ' ' for clarity
refactor session creation logic in HttpSessionContextIntegrationFilter to simplify session creation logic and improve readability to enhance clarity and maintainability of session
added a new file TestIfWithDeadRegion . java that implements a utility class for testing string retrieval with a Supplier to facilitate
corrected the spelling of " English UD " to " English USD " in multiple test files to ensure consistency and accuracy in model
replaced the use of ` testConcurrentAccess ( ) ` with a try - finally block for enabling and disabling HighResolutionTimer to
added a static UI feature to AppSettings and modified MainFragment to conditionally hide the toast bar based on settings to enhance user experience by allowing
refactor the drop method in WindowsSecurity . java to use a lambda expression to improve code readability and ensure proper resource management
replaced ` setParameter ` with ` setParameterIfAbsent ` and added a null check for ` clientId ` in ` SamlRedirectLogoutHandler . java
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to use localized strings instead of hardcoded strings to improve user experience
tika - 2696 -- add mime type for poi and ooxml file ( tika - 2698 )
updated logging statements and improved type safety in multiple classes to enhance code readability and maintainability by standardizing log messages
( chore ) camel - eip - documentation - enricher : improve documentation formatting
add - dc . skip _ schema _ check = true to skip version check
added debug logging for stored audio notify and playback devices in DeviceConfiguration . java to improve traceability of audio device configurations for better debugging
added WebsocketConfig class and updated WebSocket client configuration in ShenyuConfig . java and ReactorNettyWebSocketClient . java to
refactor CacheValidationListener to implement ISuiteListener and add result queue management to improve performance and resource management during test execution
updated content length handling in MoreIndexingFilter to trim whitespace before adding to the document to ensure content length is only added if it is not empty
do n ' t synchronize solvingterminated ( ) method in defaultsolversolverjob # terminate
added error handling for creating non - exist time series in MManager . java to ensure robustness by ignoring PathAlreadyExistException when concurrent inserts
added a new method ` check ` to the ` Authz ` class to provide a way to check if the authentication result is valid
changed access modifiers of several methods from public to protected in multiple classes to restrict access to these methods for better encapsulation
server : fix the case where ip address be in reserve state and project id be n ' t set
modified the assignment of ` _ valueString ` in ` HttpParser . java ` and renamed test methods in ` HttpParserTest . java ` to
refactor thread initialization logic in J9VMInternals . java and remove completeInitialization method in Thread . java to improve code clarity and
added methods to create and retrieve external storage directories in ShadowEnvironment and created corresponding tests in EnvironmentTest to facilitate testing of external storage
[ drools - 2270 ] fix type coercion for mvel 2.1 . 0 . drools9
refactor logging configuration to use diamond operator for better readability to improve code clarity and maintainability
added exception message to the log message in ActionNode . java to provide more context about the exception during the construct process
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5883 :
modified visibility logic for shared file icon in FileListListAdapter to ensure correct visibility based on file type and grid mode
removed deprecated configuration for HIVEOPTSORTDYNAMICPARTITION in HiveConf . java and set it in TestTxnCommands3 . java to
refactor configuration overlay handling in ExecuteStatementOperation and Operation classes to improve clarity and maintainability of session ID logging in the execution process
replaced instances of ` Lists . newArrayList ( ) ` with ` Arrays . asList ( ) ` and ` HashSet . newHashSet ( ) `
fix unit test to use getTypeName ( ) instead of getName ( )
removed the ` onErrorInStep ` method from ` StepListenerSupport ` to streamline error handling by eliminating unused functionality
refactor Wallet class to improve code readability to enhance maintainability and facilitate future updates
camel - 14850 : camel - netty - http - add charset support for content type . thanks to benjamin
replaced System . out . println statements with logging statements in TestNonBlockingAPI . java to enhance logging capabilities and improve code readability
added a validation check for the row index in DbConnectionDialog . java to ensure that the row does not exceed the connection list size
[ bugfix ] methodwithsamenameasenclosingclass report violation for method with the same name
added a new class ` ExtendedPlatformComponent ` and refactored the MBean proxy retrieval logic in ` ManagementFactory . java ` and ` Extended
added single quotes to SQL strings in BasicQueryTest . java to ensure proper SQL formatting for single quotes
updated Bleutrade DTO retrieval paths to include " org / knowm / xchange / bleutrade / dto " to ensure
refactor TextEscapeUtils class to improve code readability to enhance maintainability and facilitate future updates
added a filter parameter to the FilteredQuery instantiation and modified the return statement in AbstractSpatialFieldType . java to enable filtering based on local parameters
added automatic email sending functionality to GpsLoggingService and posted it to AutoEmailHelper to enhance user experience by allowing users to send results
changed ` inlinks ` from ` ArrayList ` to ` HashSet ` and modified iterator methods in ` LinkDb ` and ` LinkDbReader `
added synchronization to the stopScan method in TradfriDiscoveryService to ensure thread safety when stopping the service
updated the ` testFilterForPartition ` method to accept a boolean parameter for filtering behavior to enhance flexibility in testing filtering behavior based on server
added ` Abandoned ` status to multiple workflow statuses and updated related logic in ` TicketModel ` , ` TicketBasePage ` , and `
set ` columnAliasPrefix ` to ` null ` in multiple platform classes to ensure consistent initialization of ` columnAliasPrefix ` across different platforms
replaced ` Text ` with ` BytesWritable ` in ` LlapRowRecordReader ` and ` LlapRowInputFormat ` to use
added a new class NonNativeJVMDetector to detect if the JVM is non - native and warn users when running on a 32 - bit
refactor conditional checks in PdfCopy . java for better readability to improve code clarity and maintainability
added a new option for daemon mode and integrated PendantUI in TerminalClient to enhance the application by providing a web pendant UI for
added a new file ` FlushIndexTask . java ` that implements a PerfTask that flushes the index writer to facilitate
updated the ` createFlushWriter ` and ` createFlushWriter ` methods to include an ` estimatedSize ` parameter across multiple classes to enhance the
added support for SEASONS output in MediaLibraryFolder . java to enhance functionality by allowing additional output formats
added a new file LocalSocketAddress . java to test IPv6 availability of a DatagramSocket to ensure that the local address is bound to the
updated grid size points from 2 , 3 , 4 , 5 , 6 to 3 , 4 , 5 , 6 in GridSizeMigrationTask .
updated method calls to use ` classInfo . name ` instead of ` getName ( ) ` in ` SerializerPojo . java ` to improve consistency
added read - only support and improved transaction handling in the Context class to ensure proper transaction management and prevent operations in read - only contexts
refactor LookAndFeelCommand class to improve code readability to enhance maintainability and facilitate future updates
updated logic in BlockBoxing . java to use ceiling for lastRunStart instead of floor to improve accuracy in determining if the last run
added imports for EOFException and EofException in GracefulStopTest . java to ensure proper exception handling in the GracefulStop functionality
replaced ReentrantLock with direct method calls for put and remove in NetJavaImpl . java to simplify lock management and improve code read
refactor NetworkParameters class to improve code readability to enhance maintainability and facilitate future updates
removed conditional logic for setting allowAccountAssetOptimization in DynamicPropertiesStore . java to streamline asset optimization configuration based on configuration settings
added a new constant J9 _ GC _ POLICY _ NOGC in VM . java to manage garbage collection policies effectively
added validation for contract proto validation in TransactionCapsule . java to ensure proper handling of invalid protocol buffer exceptions
pmd : remove strictexception . java because it be no longer use
updated resource retrieval to use " en / " for language fallback to English to ensure fallback to English when no localization is available for the specified file
added a new file ` ProcessorInfo . java ` with methods to determine available CPU cores to facilitate the retrieval of available CPU cores
added a stylesheet option to PrintingBugReporter for HTML output generation to enable customizable stylesheet for bug reporting
deprecate logbackloggingsystem . logbackxmllocation ( deprecate in favor of logbacklogger . xml . location )
refactor HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve data handling for service component recovery events to enhance code clarity and maintainability
updated SleuthTagPropagationAutoConfiguration and SleuthTagPropagationAutoConfigurationTests to ensure proper handling of TagPropagationFinishedSpanHandler based
refactor rustDepType assignment to use a switch statement for better readability to improve code clarity and maintainability by encapsulating conditional
updated oauth2LoginLinks method to accept MultiValueMap as a parameter and added error handling in the login process to enhance functionality by allowing additional parameters
hbase - 15936 halfstorefilereader . getfirstkey ( ) should return the first key when seek to the first kv (
hhh - 6270 - deprecate generationtiming . always in 6.2
added a new test method for layer normalization with nan values in Nd4j to ensure correct handling of nan values in layer normalization operations
refactor ` showShareFile ` method calls to use ` getFileOperationsHelper ( ) ` for better encapsulation to improve code maintainability and
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of ` LiquibaseUpdate `
convert the proxy type to uppercase before setting it to ensure consistent formatting of the proxy type
added a new file mod _ MinecraftForge . java that extends BaseMod and initializes MinecraftForge ' s dunge
refactor JdbcDatabaseSnapshot to use separate keys for byTableKey and allTablesKey for caching to improve code clarity and maintainability by
added a Container and label to the CSSBorder configuration in CSSBorderTest . java to enhance the visual appearance of labels in the UI
added ` RetryAutoConfiguration ` and ` RetryInterceptorAutoConfiguration ` classes , and introduced ` RetryableStatusCodeException ` for handling status codes to
updated superclass parameters from FILL _ PARENT to MATCH _ PARENT in CellLayout . java to improve layout handling by using a more appropriate parent
updated the construction of ` parentTaskName ` to use ` currentTimeMillis ( ) ` instead of ` nanoTime ( ) ` to improve accuracy of task
added error handling for ` AddServiceRequest ` parsing in ` ServiceResourceProvider . java ` to improve robustness by catching ` UncheckedIOException
replaced the boolean variable ` res ` with a direct return of ` true ` in the ` IndexDatabase ` class to simplify the logic for
ggbround ( x ) : = = when ( type ( x ) = = DOM _ LIST && length ( x ) = 2
refactor AnonCipherWithWantClientAuth class for improved clarity to enhance maintainability and readability of the code
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that these classes are outdated and should not be used in new code
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
use asserttrueallthetime instead of sleepatofseconds in evictiontest
updated password encoding method and variable names in Md5PasswordEncoder . java to improve clarity and consistency in password management
removed redundant local variable ` viewTreeObserver ` in ` IconRecentsView . java ` to streamline code by eliminating unnecessary variable
refactor Response class to improve code readability to enhance maintainability and facilitate future updates
change sstablemetadata . getmaxtimestamp to use long . max _ value instead of long . min _ value
set the preferred size of the security panel to 200x60 to improve the visual appearance of the security panel
added null and empty checks for replies in TweetActivity , TimeLineCursorAdapter , and TweetView classes to ensure that replies are only
updated ` HitbtcBalance ` class to implement ` toString ( ) ` , ` equals ( ) ` , and ` hashCode ( )
fix ( sql ) : fix order by clause with in ( )
updated the return statement in RetriesExhaustedWithDetailsException to use addrs . toString ( ) instead of s to improve clarity and
replaced direct calls to ` closeOpenFile ( ) ` with a call to ` OpenCookie . open ( ) ` in ` EditG
updated imports in JsonToGrpcApplicationTests from Apache HTTP to Apache hc client 5 to ensure compatibility with the latest hc client features and improve
updated energy handling logic in PipePowerWood . java to correctly calculate energy subtracted from requested energy to ensure accurate energy adjustment based on the
added a check to delete the temporary output file before deleting it to ensure the temporary output file is deleted only if it exists
updated the parameter name from " tid " to " id " in the BitstampWebSocketTransaction constructor and added a new test for retrieving trades
[ hotfix ] [ runtime ] fix the peekstatetimeandsizevalueexpired logic in replayprocessor and replaysubject
reformatted the expectedCitation string in CitationStyleGeneratorTest . java to improve code readability and maintain consistency
added constants and SQL statements for inserting columns in MediaTableFiles . java to improve code readability and maintainability by centralizing column insertion logic
g3d - 335 : show definition for equation - in - exam for g3d - 335 and g3d - 3
added a null check for the component in SIPCommTextFieldUI . java to prevent potential NullPointerExceptions when accessing the component
added caching configuration for meta scan when startrow is null and scanRoot is not to optimize performance during meta scan operations
updated the init script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes for improved readability to enhance maintainability and clarity of the codebase
added a new debug flag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to enable the use of a debug flag for transient
refactor AccessExecution , AccessExecutionVertex , and ArchivedExecution classes to improve code organization and maintainability
added a conditional check for scale and density in IOSGraphics . java to ensure density defaults to 3f when scale is 3
rename ` optional ` to ` vararg ` in ` Parameter . java ` to improve clarity and consistency in naming conventions
hbase - 15811 addendum add exception to regionstatestore ' s info log
refactor assertion in TestClusterUpgradeUtils to use a lambda expression instead of an anonymous class to improve code readability and reduce boilerplate
updated warning messages and refactored AsyncContextTest and SelectChannelAsyncContextTest to improve clarity and consistency to enhance code readability and
added a boolean parameter ` showArrow ` to the ` SearchUiManager ` constructor to enable the functionality of the ` showArrow ` functionality in
added a break statement in Database . java and removed a testSetMode method in TestRowLocks . java to ensure proper handling of read commit
truffle / llvm : skip non - linux amd64 big endian test
added type checks for Integer , StringValue , and IntValue in Scalars . java to ensure proper handling of Integer and IntValue input types
updated error handling for missing and multiple primary keys in CreateTableStatement . java to improve clarity in error messages for better debugging and understanding
added conditional logic to set drawable resources based on LMP status in CellLayout , Hotseat , and Launcher classes to improve UI
throw a runtime exception if there ' s no isolate to query for flutter views . ( # 3649 )
refactor HeadersConfigurer to streamline header writing methods to improve code readability and maintainability by reducing redundancy
refactor ObjectEnumerableAssert class for improved readability to enhance maintainability and clarity of the codebase
danielwagnerhall : rename smoketest to distributablecdptest to avoid confusion .
added a type attribute to the @ AggregateRoot annotation in EventSourcingRepositoryTest . java to specify the type of the aggregating root
added support for packaging prebuilt libraries in the Python binary to enhance the flexibility and functionality of the Python in - place binary management
added client authentication handling in NetServerOptionsConverter and updated related classes to ensure proper client authentication configuration and improve code clarity
updated repl directory paths in HiveConf and MetastoreConf to use user . name instead of " / user / hive / repl " to
refactor task visibility handling in RecentsView to use primary and secondary task views instead of individual views to improve code clarity and maintain
( chore ) camel - aws2 - amq : add timeout to amqftest
removed the clearAll ( ) method from DataTableTopComponent . java to streamline the code by eliminating unnecessary complexity
renamed variables and methods related to TemplateFlowController to improve clarity to enhance code readability and maintainability by using more descriptive names
[ hotfix ] [ table - planner - blink ] fix the usage of exchange num in operator tree generator
added use of io . github . classgraph . ClassLoaderHandler in module - info . java to enable the use of the ClassLoaderHandler in the
refactor solution business methods to accept a solution object instead of a working solution to improve flexibility in setting the planning problem on the solver
added JsonIgnore annotation to ApplicationSettings . java to temporarily disable JSON serialization for improved performance
changed the condition from checking if throwable is null to checking if throwable is not null to ensure that throwable is not null before proceeding
refactor queryInfo retrieval to use a local variable for clarity to improve code readability and maintainability
fix auto workbench not work with empty stack
added a check for the parser ' s hasNext ( ) method in Gl200TextProtocolDecoder . java to ensure the decoder does not attempt to
replaced ` timeColumnName ` and ` timeFieldSpec ` with ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` to improve cl
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
added support for an interface ` Initializable ` in the ` ContainerBuilder ` and created it in a new file ` Initializable . java ` to
refactor TimerObservationHandler to use a single LongTaskTimer sample and improve error tag creation to enhance code readability and maintainability by
changed the data type of SYNC _ DELTA _ RATE from float to double and modified time calculations in AdaptiveFetchSchedule .
[ thymeleaf ] deprecate unwrapped fragment expression in thymeleaf tag processor ( # 2329 )
changed the type of _ attributes from HashMap to ConcurrentHashMap in SessionData . java to ensure thread safety during object deserialization
http : / / issues . apache . org / activemq / browse / amq - 4892 - copy the message to a
added constants for main and light color in ColorExtractionAlgorithm and updated extractInto method to handle fallback values to improve color extraction accuracy and ensure fallback
added functionality to check if the data folder is accessible before adding its full path to srcFolderPathList to ensure that the source path is only included
updated OmniNotes and NotesHelper to include a boolean parameter for title inclusion to enhance functionality by allowing content to be appended based on specific
removed the instantiation of SessionRegistryImpl in ConcurrentSessionControllerImpl . java to simplify the sessionRegistry initialization process
added logging for reconnection complete and reconnection failure in NettyStreamingService to improve error handling and debugging for connection failures
updated ProxyFactory usage to use JavassistProxyFactory instead of CglibProxyFactory to improve compatibility with internal Javassist
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` in ` QueuedThreadPool . java ` to improve thread management efficiency by using a
refactor socket exception handling to use String . join for improved readability to enhance code clarity and maintainability by eliminating unnecessary
added a check to ensure the view path is under the repository before proceeding to prevent errors when the view path is under the repository
added drag and drop functionality to the tabpane in JabRefFrame . java to enhance user experience by allowing file selection in the tab pane
added " - XX : + UseCompressedOops " and " - XX : + UseCompressedClassPointers " options to multiple test
removed error log statement for non - active and replaying state in PeerSync . java to streamline error handling by eliminating unnecessary logging
deleted the ConnectionHook . java file to the functionality is no longer needed in the project
solr - 12313 : remove unused testinjection . waitforreplicasinsync and replace with testinjection . waitforreplicasinsync
( chore ) camel - aws2 - dsl - dsl : fix type assertion in rest dsl test
updated version handling in ApexLanguageModule to use external version instead of a hardcoded 45 string to ensure compatibility with the latest version and improve
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor AggregateEngine to use IoTDBThreadPoolFactory for thread pool creation and shutdown to improve thread management and ensure proper shutdown of aggregate threads
updated WebSocketAsyncConnection constructor to accept ByteBufferPool instead of StandardByteBufferPool to enhance buffer management by utilizing a customizable buffer pool
added scroll position adjustment for thumbnails in UploadActivity to improve user interface responsiveness by ensuring the correct thumbnail is displayed
fix ( sql ) : fix sample by on timestamp override by other column alias
added an override annotation and refactored animation handling in LauncherAnimUtils and LauncherStateTransitionAnimation to improve code readability and maintain
added a check to disable the default user agent in the HttpClient configuration to enhance security by preventing unintended user agent changes
added dependency injection and conditional check for pubsubhubbub in FeedRefreshUpdater to ensure proper handling of pubsub hub connections based on application settings
changed the visibility of the finalize method from public to protected to restrict access to the finalize method for subclasses
added a check for ACC _ SYNTHETIC in the isAnonymousOrLocalOrSynthetic method to ensure proper handling of synthetic classes
add a new dspacewebapp class to facilitate the rest of the web application
added a null check for leftTableAlias in CalcitePlanner and implemented a method to retrieve the table alias containing the specified column to ensure that
added a " Trigger " prefix to the TriggerKey constructor in JobGenerator . java to improve clarity by providing a more descriptive identifier for
updated logging levels and error messages in Wallet . java for better clarity and consistency to improve error handling and provide more informative logs for transaction
updated import statements in BasicMapTest . java to use specific Java classes instead of wildcard imports to improve code readability and maintainability by using
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` and `
added a new enum ` TlsClientCertPolicy ` and updated related logic in ` GitBlitServer ` to utilize it to improve
added a debug log statement to indicate that the CHALLENGE has been saved to improve debugging by indicating the state of the CHALLENG
added HTTP headers to the ProxyWebSocketHandler and modified the WebSocket execution logic to include subprotocols to enhance WebSocket communication by allowing customizable WebSocket protocols
added a debug log statement to the HiveQueryResultsFetchReq class to facilitate debugging by providing context about the fetch request
updated string formatting for dimensions in HolidayEventFormatter . java to improve readability of dimensions string representation
refactor inner class handling in FinalizePrivateFieldsTest and add a new method to ignore inner classes to improve clarity and functionality of inner class
refactor UnexpectedJobExecutionException class for improved error handling to enhance job execution reliability and maintainability
deleted the file AquaLookAndFeel . java . extra and updated buttonShouldBeOpaque initialization in AquaUtils .
updated maxFreq and maxCost handling in DrillSidewaysQuery and DrillSidewaysScorer to use DocsEnum instead of int
added classRegsitry . put ( GeoDegeneratePath . class , 36 ) to StandardObjects . java to facilitate
removed the ` preFill ` parameter from several constructors in ` ParticleEffectPool ` , ` FlushablePool ` , and ` Pool `
updated taskbar state management in TaskbarLauncherStateController and added FLAG _ STASHED _ IN _ APP _ SYSUI in Task
added a null check for the default style before comparing it to avoid potential NullPointerExceptions during style removal
refactor GuiUtil methods to use setSize and setMaxWidth methods for better size management to improve code clarity and maintainability by centralizing
refactor icon retrieval logic in FileTreeViewHolder . java to use TreeFileExtension for better file extension handling to improve code clarity and
replaced ` isEqualTo ` with ` contains ` for assertions in ` ParallelUniverseTest . java ` to improve clarity and accuracy of
refactor XMLReporter to use a synchronized map for accessing suite results to ensure thread safety when accessing test contexts
add test for native probability function query
added a call to deregister the ShutdownThread from the ClientContainer to ensure proper resource management and prevent memory leaks
hhh - 14850 - add a method to drop temporary table after use in sybase dialect
danielwagnerhall : remove color . fromstring ( ) . asrgba ( ) from htmlunitwebelement ,
refactor SolrCore , XMLWriter , DocIterator , and QueryParsing classes to improve code organization and maintainability
refactor LinksIndexingFilter to improve code readability to enhance maintainability and facilitate future updates
updated hex string formatting in VirtualAllocCommitUncommitRecommit . java to improve clarity of log output for reserved memory addresses
fix checkstyle issue in adsmediasource and adtagloader
updated the equality check in MultimapSubject to use a boolean variable for clarity to improve code readability and maintainability by suppressing the
updated frequency text resource from deg _ text to unit _ hz in WaveGeneratorActivity to ensure accurate representation of frequency in the user interface
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the method of creating a TreeMap with a constructor that accepts includedLabelSets to simplify the code and improve readability
added a new constant NORMAL _ 4F and refactored vertex format handling in VertexLighterFlat . java to improve code readability and
added tracing tags for grpc . message _ sent and grpc . message _ received in multiple classes to ensure accurate tracking of message visibility during client and
replaced ` ZoneId . of ( string ) ` with ` TimeZone . getTimeZone ( string ) ` in ` ScheduledTrigger . java ` to
added AsyncBucket and InMemoryExtension classes and modified related methods in Bucket4j and related classes to enable asynchronous and custom time measurement support in
updated class directory validation logic in resexhausted003 . java to improve clarity of error messages when the classpath directory is not found
reformatted code for consistency and clarity in AbstractConnector . java to improve code readability and maintainability
refactor OngoingStubbing class for improved clarity to enhance maintainability and readability of the code
refactor web server creation and port reuse logic in Main . java to improve flexibility in managing web servers based on configuration changes
renamed the variable ` productConstructor ` to ` constructor ` in ` HttpClientUtil . java ` and added a static block in ` SolrTest
added a check to ensure the thread allowlist is not empty before clearing it to prevent illegal state exceptions when clearing the allowlist
replaced ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity and consistency in
[ drools - 5892 ] fix the issue that dmn analysis do n ' t work if the hit policy be set to collect
add a new test for sliding window combining in CombineTest . java to ensure proper functionality of Combine . globally with sliding windows
added a conditional check for ` allAppsDirty ` before binding all apps and improved logging messages in ` LauncherModel . java ` to
removed the check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to streamline the test by eliminating unnecessary assertions
reformatted the main method for better readability and structure to enhance maintainability and clarity of the code
replaced deprecated method for retrieving the " useScreenMenuBar " property with a direct call to AccessController . doPrivileged to simplify code and improve compatibility
setrawlocation do n ' t take into account fall distance
refactor query handling in SimpleJpaRepository to improve clarity and functionality to enhance query performance and maintainability by using a more efficient query
added timestamp , parent hash , nonce , and number fields to the builder in BlockUtil . java to enhance the transaction input handling by associating
use safepointinsertionphase instead of loopsafepointinsertionphase for simplicity
hbase - 15836 fix npe in rsgroupinfosmanagermanagerimpl and zkprocedurememberrpcs ( #
changed access modifiers of ArtifactResolver , getArtifactDependecies , getPomDirectDependencies , and getAllDependecies methods from package -
added thread . stop ( ) calls and dispose ( ) method calls in ClientConnectionHandler , BulletPhysics , ChunkProcessingPipeline ,
added a validation check for maxBufferedDocs in IndexWriter . java to ensure maxBufferedDocs is at least 1 to prevent runtime errors
added a boolean flag to track if the login is currently in progress and updated its state handling in LoginActivity to improve user experience by controlling
added null checks for the elements and values in Pump . java and implemented a new test for UUID sorting in PumpTest . java to
modified access modifiers and refactored load balancer creation methods in HttpShardHandlerFactory and LBHttpSolrServer classes to enhance encapsulation and
updated order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added unit tests for DefaultAuthenticationServiceSelectionStrategy
added Jetty server handler imports and modified handler handlers in TestJNDI . java to enhance server functionality and improve handler management
updated formatting and added assertions for better readability in SortedDynPartitionOptimizer . java to enhance code clarity and ensure proper validation of child operators
changed the return value from checking if the loop is an instance of NioEventLoop to true to ensure that the method always returns true for
updated the calculation of ` newNumNulls ` in ` StatsUtils . java ` to ensure that ` newNumNulls ` does not exceed `
camel - 14850 : camel - jbang - export - camel - kamelet to camel - jbang - export - camel - jb
replaced OkHttpOAuthConsumer with AuthState and AuthorizationException handling in OSMJob . java to enhance authorization checks and improve error handling for
remove debug code that be n ' t need
added clientAuth functionality to IoTDBRestServiceConfig and updated related classes to enable client authentication based on configuration settings
refactor injection logic in PropertyAndSetterInjection and add a new test class ChildWithSameParentFieldInjectionTest to improve code clarity and
replaced BloomFilter32bitSplit with BloomFilter64bit and updated BloomUriUniqFilter to use InitializingBean to
changed the ` getCursorAdapter ( false ) ` to ` true ` and set the ` refresh _ me ` preference in ` TweetPager
updated the intermediate header height ratio from 1f to 75f to improve the visual appearance of the profile header
replaced ` RuntimeEvent ` with ` RecompilationEvent ` in multiple files and added a new class for handling recompilation events to
added HOST _ SYS _ PREPPED configuration to manage host - sys preparation status to enhance flexibility in configuration management by allowing users to
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method in ` DatabaseChangeLog . java ` and created a
added a loop to delete trailing slashes from the location string to ensure proper handling of trailing slashes in URLs
added properties for entities and scores in StaticPipeline . java to support dynamic configuration of entities and scores in the pipeline
updated source path handling in Frame . java and modified WhoopsModule . java to conditionally initialize Whoops instance based on configuration to
[ geos - 8470 ] catalogrepository . getdatastorebylocalname should return null if the datastore can not be find
refactor Assert class methods for improved readability to enhance maintainability and clarity of the code
renamed ` MultiLineTests ` to ` MultiLineGridlikeTextTests ` and added new test classes ` MultiLineJaggedText
( chore ) camel - two - consumer : fix test failure on same topic
replaced the initialization of ` writeMeasurementScheams ` with ` measurementSchemas ` in multiple files to simplify the code by elimin
updated memory usage calculation in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to ensure accurate expected memory usage for
updated logging library path from " slf4j - log4j12 - . * . jar " to " slf4j -
( chore ) camel - osgi : fix checkstyle violation in huebridgehandlerosgitest
updated package structure of multiple activity classes from ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities
[ drools - 1276 ] add @ ignore to kiecontainersolversolverfactorytest ( # 1276 )
added a constructor to PullRequestMergedEventsStream that initializes the service , avroSchema , topicName , and GitHubAPICaller to facilitate the
refactor AbstractExpressionPart class for improved readability to enhance maintainability and clarity of the code
[ hotfix ] fix checkstyle violation in taskslot
replaced ` ChannelFutureListener . FIRE _ EXCEPTION _ ON _ FAILURE ` with ` ChannelFutureListener . CLOSE ` in ` Netty
added error handling for releasing locks in MoveTask . java to ensure proper resource management and avoid potential LockException during lock release
replaced Properties loading with ResourceBundle loading for GEM _ PATH and RUBY _ VERSION to improve flexibility and maintainability of the code
replaced the constant ZERO _ ADDRESS with ByteUtil . EMPTY _ BYTE _ ARRAY in the Transaction class to simplify the code and improve read
refactor initialization of classInfo in ClassGraphClassLoader . java to improve code readability and maintainability
[ hotfix ] [ test ] use temporary directory for blob storage test
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a Bundle extras to the builder in FileDisplayActivity . java to enable dynamic configuration of the bundle for better user experience
changed the loop condition from break to continue in ParticleEmitter . java to improve control flow by skipping particles that are null
updated expect cluster name values in AmbariManagementControllerImplTest from 2 to 3 to increase test coverage for cluster renaming functionality
removed nullable attribute from the @ Column annotation in TransientSessionTicketImpl . java and added NoResultException handling in JpaTicketRegistry . java
refactor Bug4823811 . java for improved readability to enhance maintainability and clarity of the codebase
replaced direct argument addition with a pathRelativizer for pattern deletion to improve flexibility by utilizing a custom path transformation function
[ deconz ] make deconz bridge request full state more aggressive
added an attribute attribute to the ShibbolethCompatiblePersistentIdGenerator class and updated related methods to support dynamic attribute handling in the ID generation
updated injection annotations in RequestValidationService . java to improve code clarity and maintainability
added logging functionality to the hide keyboard message in UiThreadHelper . java to enhance debugging capabilities by tracking keyboard visibility
removed redundant lines in FileNodeProcessor . java and modified MManager initialization in MManagerBasicTest . java and MTreeTest . java to
refactor NavigableMap and NavigableSet classes to improve code organization and maintainability
added a testSlurpFile method to IOUtilsTest . java to validate the functionality of slurpFile and slurpFileNo
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
refactor span retrieval in TraceWebFluxTests to use a new method spanWithName to improve code readability and maintainability by reducing
added support for DateWritable in the Hive schema converter to enable date handling in Parquet data processing
replaced hardcoded comma separator with a constant from Patterns to improve maintainability and readability of the code
ggb - 2321 allow positive double value to be pass to inputdialogtableview . setvalidatedatetodouble ( )
refactor column count validation logic in SemanticAnalyzer . java to improve clarity and maintainability of column count validation logic
refactor WANDScorer to improve loop structure and assertion checks to enhance code readability and maintainability while ensuring robustness
refactor Correspondence class to improve code readability to enhance maintainability and facilitate future updates
updated import statements in PaintSetEnabledDeadlock . java to include specific classes instead of wildcard imports to improve code clarity and maintainability by
updated the initialization of ` curPixVal ` in ` XRSolidSrcPict . java ` and added a new ` WhiteTextColorTest
replaced the method ` listSubTypes ` with ` listSupertypes ` and updated related logic in ` BiomeDictionary . java `
rename ` withinTolerance ` to ` exceedsTolerance ` for clarity to improve code readability by using a more descriptive variable name
updated test stability annotations in TaplTestsLauncher3 . java to include specific TestStabilityRule flavors to enhance test stability
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure logFileSuffix is not empty before proceeding to prevent potential errors when logFileSuffix is empty
refactor PythonBuckConfig class for improved readability to enhance maintainability and clarity of the codebase
added unit tests for adding and clearing system shared library names in ShadowPackageManagerTest and ShadowApplicationPackageManager to ensure correct functionality of system shared
fix meiligao protocol decoder ( fix # 103 )
fix npe in powerdiode when there ' s no power tile
added a new ` TrimCache ` class and modified cache deletion logic in ` PrefFragment . java ` to improve cache management and provide user feedback
fix : update gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0 ( #
updated error handling in BasicAuthAccessControlFactory , ZkBasicAuthAccessControlFactory , and BasicAuthBatchIntegrationTest to throw NotAuthorizedException instead of returning
added @ SuppressWarnings ( " unused " ) parameters to several method signatures in Scheduler . java to improve code clarity and suppress warnings related to unused
replace ` refreshListOfFilesFragment ( false ) ` with ` onItemClicked ( operation . getRemotePath ( ) ) ` in ` File
added a conditional check for multiple streams and improved error handling in StreamUtil . java to ensure proper resource management and provide clearer error messages
refactor methods in SessionHiveMetaStoreClient to use CreateTableRequest instead of EnvironmentContext to simplify table creation process by eliminating
added a ` aborted ` flag and modified ` start ( ) ` and ` abort ( ) ` methods in ` FixedRateFragInsStateTracker
updated indentation handling in multiple parser classes to ensure consistent indentation behavior across different parser implementations
added ` NetworkWifiStatusReceiver ` and ` ChangeWifiStatusEvent ` classes to handle network and Wi - Fi status changes
simplified the control frame validation logic in FrameGenerator . java to improve code readability and maintainability
added visibility setting for the collapse handle view in WidgetsBottomSheet to improve user interface responsiveness by hiding the collapse handle
added new file ` Issue475 . java ` and ` XSS . java ` for handling HTML and JavaScript parameters to implement functionality for handling
added a check to return early if no units are to scroll to optimize performance by avoiding unnecessary processing when no units are to scroll
updated the condition to check if the contract list size is not 1 instead of > 1 to ensure that the condition verifies that the contract list is
added methods ` add ` and ` put ` to ` JsonArray ` and ` JsonObject ` classes for adding and putting enums to enhance the flexibility
added a ` hashCode ( ) ` method to ` IPPPrintService ` and created a new ` TestRaceCond ` class to ensure
refactor database version handling in DB2iDialect and DB2zDialect classes to use a consistent superclass method to improve code clarity and
added a check to ensure that the transaction ' s platform fee is greater than zero before verifying connection status to enhance security by preventing payment
refactor BatchUpdateException , PreparedStatement , and Statement classes to improve code organization and maintainability
clear data first sub - sample by adaptive reconfiguration
removed the ' public ' access modifier from several class declarations in AsynchronousAntn , BulkheadAntn , and FallbackAntn classes to
added import statement for Retrofit in Part . java and PartMap . java to facilitate the use of Retrofit functionality
refactor JsonBuildHelper and ParamsBuildHelper to improve parameter handling and structure to enhance code clarity and maintainability by separating concer
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of allowed floating view types in AbstractFloatingView . java to enhance user interface
chore : update gapic - generator - java with mock service generation fix
updated animation logic to handle recents in ClipAnimationHelper and added hasRecents flag in RemoteAnimationTargetSet to improve animation respons
removed the ` true ` parameter from the ` createRenderScript ` method in ` AllAppsView . java ` to simplify the method signature by
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor system bundle handling by introducing a new method ` isSystemBundle ` in ` PluginManagerActivator ` to improve code readability
hbase - 13836 integrationtestsparkbulkload . java fail to compile due to miss import of org . apache . spark .
replaced hardcoded value of 0.001 with a constant LOW _ FALSE _ POSITIVE _ RATE in KeyChainGroupTest .
refactor configuration handling in Overview . java to improve clarity and maintainability to enhance code readability and maintainability by using a more
modified the return statement to assign the result of findAttache to a variable before checking its value to improve code readability and maintainability by
added a null check before processing the value in DefaultRecordStore to avoid potential NullPointerExceptions when the value is null
kvm : improve error message for cloudstack agent setup failure
improve error message when there be no name or value attribute in < param > element
updated constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept an Object parameter instead of InvocationContainerImpl
added a method to strip method parameters from the method parameters in LocationOpener . java to improve parameter handling by removing unnecessary parameters from method parameters
updated VERSION _ NAME and VERSION _ CODE from " 15578 " to " GreatVoyage - v4.2 . 1
do n ' t use a list in outputfilter , use a set instead
[ geot - 5890 ] label - cacheitem - add option to symbolmblayer to set label - cache - item . label
do n ' t resize popup when overlap feature
updated error messages from " Function : " to " Function - " in ValidationSuite . java to standardize terminology and improve clarity in
refactor QuickstepTransitionManager to use a StartingWindowListener for task launching to improve flexibility and maintainability of the transition management
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve documentation clarity and maintainability
updated exception messages in CheckPackageAccess . java to include " com . sun . corba . se . impl . " and added package definition
increased the awaitTermination time from 30 seconds to 90 seconds and added an assertion to verify the executor service termination status to improve test reli
changed loggingEnabled from a boolean to a Boolean and added a null check for loggingEnabled in XRLog . java to ensure loggingEnabled is
added @ JsonIgnore ( true ) annotation to Schema . java to temporarily disable JSON serialization for improved performance
increased test timeout from 5000ms to 10000ms in TestNonTxIndexBuilder . java to allow more time for tests to complete successfully
replaced instances of ` calculateLikelihood ` and ` calculateLogLikelihood ` with ` calculateLogPrior ` and ` calculateLogLikelihood
renamed CheckHelperModule to CheckHelperControllerModule and CheckHelperAuditModule and added audit logging functionality to improve clarity and functionality of the
updated mmm Prototype . java and ppp Prototype . java files to improve code clarity and maintainability
added a check to retrieve the value of tableIsTransactional if it is null to ensure that the table ' s isTransactional property is
[ java ] remove unused writefragment method and use onblock in recordingwriter .
return empty cue list instead of null if timeus < 0
[ kairos ] add alias to datastoremetricqueryimpl so that it work with kairos
updated currency pairs from BTC _ CAD and BTC _ USD to USD in VaultOfSatoshiBaseService . java
hhh - 14850 - fix service registry leak in test
updated import statements in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to use the correct KafkaSender class to ensure compatibility with the
added GwtBinaryIntegrationTest and A . java files to implement integration tests for Gwt binary building to ensure CI times out on heav
added a condition to hide loadingCauseLabel when the query builder dialog is null in BrowserContentPane . java and refactored ResultSet initialization in
updated randomizer retrieval and test values in EnhancedRandomImpl and EnhancedRandomImplTest classes to ensure consistency and correctness in random value
replaced direct instantiation of XMLSecurityPropertyManager with a static final variable for XML _ SECURITY _ PROPERTY _ MANAGER in multiple configuration classes to
added new files InterfaceWithDefaultMethod0 . java and InterfaceWithDefaultMethod1 . java with default method methods to implement and test default method behavior in
replace LIKE and ESCAPE characters with GLOB and ESCAPE in SqliteFieldPredicateView . java to improve query accuracy and support for additional character types
change access modifier of getDMNProfiles method from private to protected to allow subclasses to access and override the method
fixed - redissonscript . loadscript ( ) method hang indefinitely . # 3550
remove setwordfieldvolatile in favor of getwordfieldvolatile
updated debug log messages to use size ( ) instead of string concatenation to improve clarity and consistency in logging output
[ java ] release the packet payload before send the proxy to the target .
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS and modified the thread pool configuration in WebServer . java to allow
refactor shortcut management by removing duplicate entries and adding empty checks for updatedShortcutInfos to improve efficiency and prevent unnecessary updates when no shortcuts are available
removed unnecessary type check before converting to String in DefaultHttpClientBinderRegistry to streamline the conversion process by eliminating unnecessary type checks
removed the case for the home case in DetailFragment . java to simplify the code by eliminating unnecessary navigation logic
added a condition to check if the Android market exists before processing play services to ensure that play services are only processed if the Android market is present
refactor TableBlockParser to improve cell parsing logic and add a new test for pipes on outside whitespace after headers to enhance code clarity and
added support for bridging headers in NewNativeTargetProjectMutator and related classes to enable customizable source paths for Bundles in the project
refactor PotentiallyDeadCode . java to improve the handling of unused and used JavaType methods to enhance code clarity and maintainability by
added support for diamond finder in attribute processing and created new classes for redundant type arguments to enhance type safety and warn users when redundant types
replace invocation . getInvocationStageTrace ( ) . startSend ( ) with invocation . onStartSendRequest ( ) in HighwayClientFilter
removed the import of Utils and added a debug log statement for registering cachemetrics to streamline the code by eliminating unnecessary dependencies and
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error handling for authentication issues
updated the comparison logic in Test6796786 . java to use - ( d1 - d2 ) instead of d1 to ensure
added a local file for logback . dev . xml in JoobyMojo . java and updated Main . java to include it
added a new file JaasEventCheck . java to handle JaasAuthenticationFailedEvent and JaasAuthenticationSuccessEvent events to facilit
refactor QuickstepTransitionManager to use a list for managing visible views instead of a single view to improve code readability and maintainability by
updated the comparison logic in ` ConjunctionSolrSpellChecker ` and added a new test class ` ConjunctionSolrSpellCheckerTest `
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to improve type
[ hotfix ] [ runtime ] remove unused constant in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : add agent . script . timeout property to control the execution time of the modify storage pool command .
updated JDBC _ TABLE and JDBC _ SCHEMA parameters in AbstractJDBCConnectorProvider . java to ensure the correct JDBC schema is used for table parameters
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " in multiple files to ensure consistency and accuracy in SQL update
replaced synchronized map with synchronized map for schemaTypeCache to improve performance by reducing unnecessary synchronization
refactor header handling logic in StaticServerHttpHeadersWriter to improve clarity and correctness to ensure headers are not written with different casing
latticedemo : ignore test that relies on file available only from within cmu
added a call to mkdirs ( ) in TestCollector . java to ensure the storage directory exists for the test data storage
added a method to set chunked streaming mode in StarTreeJobUtils to optimize data processing for improved performance
add basicsyntaxchecker , multiplesyntaxcheckertest , and singlesyntaxchecker to test case
hbase - 2649 fix checkstyle violation in hbase - protobuf
added a new test method ` beansWithRecursiveStructureMustNotCauseStackOverflowException ` in ` BeanPopulatorTest . java ` and created
added IOException to the getRemoteName method signature to handle potential IOException during remote name retrieval
updated exception handling to include IllegalArgumentException in UserAccountManagerImpl and added HttpClient creation in ClientFactory and ClientFactoryImpl to improve error handling and provide
updated WebSocketConnection and ExplicitDemandTest classes to improve connection handling and test reliability
added support for AspectJ mode with protect - pointcut definitions in GlobalMethodSecurityBeanDefinitionParser to enhance security interceptor flexibility by allowing aspect
updated import statements and added hostname verification functionality in mmm Connection . java and ppp Connection . java to enhance security by enabling hostname verification
added a ` remove ` method to the ` OHLCSeries ` class and a corresponding test in ` OHLCSeriesTests ` to enhance functionality
replaced invocation . invoke ( ) . joinInternal ( ) with invocation . invokeUrgent ( ) . joinInternal ( ) in Client
destroy all joints in the world when they ' re not need .
fix nullpointerexception in searchfilter when filterstring be null
[ hotfix ] [ connector / testutils ] move sourcereadertestbase to sourceutils
refactor error handling for file not found exceptions in DocumentsStorageProvider . java to improve clarity and maintainability of error reporting
added new interfaces ` HookDefinition ` and ` JavaHookDefinition ` and corresponding unit tests in ` cucumber . runtime ` to provide a
refactored the ` flushIfDeadlockRisk ` method into a new ` flushIfDeadlockRisk ` method to improve code
updated the ` setExoOptions ` method to include a ` allowTs ` parameter to enhance flexibility in setting video video options based on
removed user identifiers from the identifier collection in DMRDecoderState . java to ensure proper handling of user identifiers during decoding
added a new static Color INVISIBLE and modified the toString method to include braces for better readability to enhance code clarity and maintainability by
updated null handling logic in CountAggregationFunction and added a new test for total count with null handling query option in NullHandlingIntegrationTest to ensure
initialized the deep variable to - 1 in InternalTransaction . java to reset the deep state for better transaction management
replaced the method ` getName ( ) ` with ` StringUtils . escapeForXML ( getName ( ) ) ` in ` StreamInitiation .
updated the initialization of ` workDir ` to use ` config . get ( " work . dir " , " work " ) ` instead of
added functionality to mark a rule as deprecated based on attribute " deprecated " to enhance rule management by allowing users to mark a rule as deprecated
make amd64directcallop use codebuffer . position ( ) instead of dummy label
added constants for minStamp and maxStamp in TimeRange class to improve code readability and maintainability by avoiding magic numbers
refactor BitDocIdSet class for improved readability to enhance maintainability and clarity of the code
refactor connection handling in AbstractTimelineMetricsSink to use a dedicated method for emitting JSON metrics to improve code readability and maintainability by
updated formatting of MIME type checks in DetailFragment and GalleryActivity to improve code readability and maintainability
only fill tank liquid if they ' re not a remote player
added checks for LegacyBuildRuleView in CsharpLibrary . java to handle cases where the rule is an instance of RuleAnalysisLegacyBuild
of - 2699 : add support for get iq type to the pep service .
added a null check for runtime in the IntrinsificationPhase condition to ensure that the IntrinsificationPhase only executes when runtime is not null
updated condition in MetricTrackingWindmillServerStub to check if active is not empty before refreshing active work to ensure that the work
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a constructor to LwjglAppletApplication that initializes the canvas with a new Canvas instance to enable customization of the application ' s
updated the stringRepresentation method to handle null DockerClientConfig gracefully to improve robustness by preventing potential NullPointerExceptions when config is null
refactor LdapAuthenticationHandler to streamline password policy handling and account state handling to improve code readability and maintainability by encapsulating password policy
refactor Int2ObjectCache class implementation to improve performance and maintainability of the code
added a private field ` resolveFromAttribute ` to ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to set the resolver ' s
refactor Readable class to improve readability to enhance code maintainability and readability
pdfbox - 551 : use testsupport . with _ font instead of builder - > { }
updated the icon for the share menu item in CaptureActivity from ` share _ menu _ item ` to ` ic _ menu _ share ` to
updated Java version checks in Constants . java to use constants from the Java specification to improve code clarity and maintainability by centralizing JVM version
added exception handling for ` AbstractMethodError ` and ` NoSuchMethodError ` in ` PoolUtilities . java ` to ensure proper detection of JDBC
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for storing filtered classes in Enclosed . java to improve performance and clarity by using a more efficient data structure
added multiple @ Override annotations in CentralAuthenticationServiceImpl , ImmutableAuthentication , AbstractCasProtocolValidationSpecification , and AbstractCasView classes
updated import statements in ChartProvider . java for consistency to improve code readability and maintainability
change the working directory to the parent of the bibtex db file , not the current directory
simplified the return statement in JavacParser . java and added a new class ExtraSemiTest . java to improve code cl
added support for ' after ' and ' before ' keywords in User and UserRepository classes to enhance user search functionality by allowing users to find users
refactor Test15FloatJNIArgs class for improved readability to enhance maintainability and ease of future updates
updated URL formatting and import statements in mmm plugin . java and ppp plugin . java to improve readability and maintainability of the code
corrected substring index calculation in MockProcessContext . java and added a test for encryption and decryption in TestMockProcessContext . java to ensure
[ java ] do n ' t allow reentrant call during callback in aeronarchive .
added a null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerExceptions during dependency merging
added a timeout parameter to the @ Test annotation in SslBytesServerTest . java to allow for more time for tests to complete successfully
refactor Peer class to improve code readability to enhance maintainability and facilitate future updates
added methods to RealtimeIndexingCoordinator , RealtimeSegment , and StreamProvider classes , and modified the StreamProviderConfig class to an interface to
added a null check before calling writeTo on the ExportedData object to avoid potential NullPointerException when accessing the viewCaptureDataSupplier
refactor popup positioning and radius calculations in RecyclerViewFastScroller . java to improve clarity and maintainability of popup positioning logic
updated command handling in BuckWSServerPortUtils and added a method to check if the tool window is instantiated in BuckEventsConsumer
added a conditional check for Windows before creating a JCheckBox in GeneralTab . java to ensure the JCheckBox is only added when the platform is
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java `
updated window dimensions handling in QuickstepAppTransitionManagerImpl to handle vertical bar layout to ensure proper scaling of the window based on layout characteristics
added functionality to manage the full - screen exclusive mode state in XWindow and XWindowPeer classes to enhance user experience by allowing full - screen
fix stringutils . playeddurationstr ( string , string ) to handle time zone
added credential handling methods for MapWork and ReduceWork in DagUtils . java to enable proper management of URI credentials for MapWork and Reduce
( chore ) camel - core - maven - plugin : use entrySet ( ) instead of keyset ( )
trim whitespace from thread name in SessionState . java to ensure consistent formatting of thread names
corrected a typo in the MsgBox message from " Not yet " to " You can ' t add a description until the next point
refactor Job class to improve code structure to enhance maintainability and readability of the code
added a new ` Unused ` class and a method to check its type in the ` Main ` class to ensure that the ` Unused
ambari - 20936 . hbase _ master _ host should be hbase _ master _ hosts in the component to cluster info map
deleted EventReaderDeserializer . java and EventWriterSerializer . java files to remove unused interfaces to streamline the codebase
updated performJoin method to return a list of GenericRecord instead of a single outputRecord to enhance functionality by allowing multiple output records to be returned
updated MAX _ DELEGATE _ LOCK _ PERIOD validation to allow greater than or equal to 10512000 and adjusted related logic to ensure
fix nullpointerexception when network rate be 0
camel - 14850 - camel - cmc : remove unused constructor and method from cmcexchange
updated configuration handling in GossipLocalNode . java to use a list of IP addresses instead of a single IP address to improve flexibility in address
set client tpc config to false by default
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple application files to ensure compatibility with the
modified the division logic in MutableBigInteger and added a new ModInvTime class for computing the modular inverse to improve performance by avoiding unnecessary
refactor key assignment logic in NamedObjectList . java to improve clarity and structure to enhance readability and maintainability of the code
replaced instances of ` cleanupEmptyDir ` with ` cleanupEmptyTableDir ` across multiple files to improve clarity and consistency in directory cleanup
refactor AsyncCache and Cache classes to improve code readability and maintainability
added import for RCFileInputFormat and registered it as a Kryo serializer in SerializationUtilities . java to enable support for RCFileInputFormat
added methods to retrieve Java types and categories for a given column in TypeMapperComponent to enhance type mapping functionality for better data handling
added error handling for invalid host headers in Request . java and implemented a corresponding test in RequestTest . java to ensure proper error handling and validation
updated ShadowTimeZoneFinderTest and ShadowTimeZoneFinder to use ReflectionHelpers for time zone lookup to improve compatibility with newer SDK versions and enhance test coverage
refactor addOutgoingValues and forEachOutgoingValue methods to improve clarity and functionality to enhance code maintainability and ensure proper handling of outgoing values
refactor SegmentCoreReaders and SegmentReader to use direct access instead of instance variables to improve code readability and maintainability by reducing unnecessary
added ` hasMainThreadProfile ` method to ` AggregateDao ` and ` AggregateRepository ` classes to check for main thread profile existence in a
added a check to ensure annotation definitions are not allowed in a Buck rule with required _ for _ source _ abi = True to improve error
changed the constant name from " greekLowerCase " to " greekLowercase " and " irishLowercase " in multiple
refactor HSSFSheet and Sheet classes for improved readability to enhance maintainability and clarity of the codebase
discover search request processor in advancedsearchservlet and opensearchservlet since dspace 4.0
added a list of time zone codes to the BasicDateTime class to remove specific countries from the time zone representation
updated SurfaceSyncGroup initialization to use a specific identifier to improve clarity and consistency in group naming
updated GridFsTemplate and GridFsIntegrationTests to remove BsonObjectId casting and improve code clarity to enhance code readability and maintainability by
added unit tests for retrieving total size and bytesSoFar in ShadowDownloadManagerTest and updated ShadowDownloadManager to store and retrieve total size and bytes
refactor character handling in TextField to use a boolean variable for clarity to improve readability and maintainability of the code
added a condition to return early if the target is equal to the current instance to optimize performance by avoiding unnecessary operations
modified the afterSetStatements method in Lower . java and BlockLexicalContext . java to streamline statement handling and improve code clarity
added hashCode method to IntervalXYDelegate and modified equality checks in XYSeriesCollection and its tests to improve hash code generation and ensure proper equality checks
fix clientqueuedisruptiontest so it do n ' t fail on slow machine
updated method names and parameters in CloudWatchAppender . java , RegisteredServiceScriptedAttributeFilterTests . java , and CasPersonDirectoryConfiguration . java
updated the serialization method from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` in ` Gson . java
added calls to ` HttpMethed . waitToProduceOneBlock ` and ` PublicMethed . waitProduceNextBlock ` in
added checks to ensure ` buf ` is not empty before canonicalizing language tags and improved language tag handling logic to enhance code robustness and
add kvm . ssh . to . agent configuration to control whether or not the management server can ssh into kvm Agents
removed public access modifier from several constructors in SchedulerWhen and ScheduledAction classes to enforce encapsulation and improve code clarity
updated import statement for PagerSlidingTabStrip in EmojiKeyboard . java to align with the new package structure for better organization
added a condition to check if the string does not contain a hyphen to ensure that only valid identifiers are processed in the filter
updated sort columns label text from " natural order " to " Natural column order " in BrowserContentPane . java and refactored
removed unnecessary Arrays . copyOf call from Utils . java to streamline code and improve performance
updated the write method to use htmlEncodeButNotSpace for remote address to ensure proper HTML encoding for remote addresses
update itemstatetriggerhandler to use smarthome / items instead of /
removed unnecessary synchronized blocks in FastHttpDateFormat . java to improve code readability and maintainability
added a thread pool for moving files in Hive to improve resource management and error handling during file move operations
added a new method ` trigger ` to the ` WrapTimer ` class that schedules a timer task based on a specified period to enhance functionality by
added support for LOCAL _ DATE , LOCAL _ TIME , and LOCAL _ DATE in TypeStringUtils to enhance type handling for SQL date , time ,
updated error logging method to include a verbose option to enhance error reporting flexibility based on user - defined verbosity settings
added menu toggle functionality to the ClickStartHandler initialization in Header . java and ItemControls . java to ensure the menu is toggled only
server : do n ' t allow vpn connection to be esitablished between same account ' s vpn gateway and customer gateway ( # 4
updated error handling in CursorReadingTask and added a new test for error notifications in CursorReadingTaskUnitTests to improve error handling consistency and ensure
pdfbox2d , pdffilter : do n ' t try to extract text if the pdf be encrypted
[ 3.0 ] fix curator zk client get children error ( # 4569 )
updated AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve code organization and maintainability
updated the ` deleteItem ` method to use ` id ` instead of ` getSelectedItemId ( ) ` and added a call to ` getContentResolver
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
updated the method signature of ` replaceOrderBulk ` to return a list of ` BitmexPrivateOrder ` instead of a single ` Bit
modified the enterDefault method to enterIdentNode and added an override for enterFunctionNode in FindScopeDepths . java to improve clarity
added a new class J9ConstantHelper for accessing static final fields and extended runtime flags to facilitate the retrieval of long values from
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to validate concurrent invocation behavior to ensure that concurrent modification exceptions are
added method to notify roster offline and removed all resource from transport .
hive - 14850 : mapoperator should return overlay table property for partition ( sergey shelukhin , review by
reformatted the loadHandle method call in FunctionObjectCreator . java to improve code readability and maintain consistency
added a null check for ` extTypeCustomDesers ` before initializing it in ` MessagePackFactory ` and updated the ` copy ` method
set the log level to WARN in the Main . java file to improve logging granularity for better troubleshooting
removed the @ Test annotation from AbstractRegistryFactoryTest . java to clean up the test code and improve readability
removed JettySolrRunner implementation from AbstractSolrMorphlineZkTestBase . java to simplify the code by eliminating unnecessary Jetty
replaced scoreMap with termScoreMap and updated related methods in TestGrouping . java to improve clarity and functionality by associating score and
updated comparison logic in U64 . java to use < 0 instead of & 0x8000000000000000L to ensure proper handling of negative values
removed headline style from MainViewModel to simplify headline styling for better readability
added a check for mSupportsDarkText before notifying changes in WallpaperColorInfo . java to ensure that changes are only notified
[ hotfix ] [ checkpoint ] fix non - forced enqueue on too many pending
updated pool size constants and time units for idle threads in Parallel . java to improve thread management and clarify idle timeout settings
updated the filtering method from ` count ( ) > 0 ` to ` anyMatch ( ) ` in ` AuthenticationAttributeMultifactorAuthenticationPolicy
added TestRequirements . notWindows ( ) and TestRequirements . notArm ( ) to OpenCVImageFactoryTest . java to ensure compatibility with
fix for http : / / issues . apache . org / activemq / browse / amq - 4892 - add support for
refactor getreturnvalue ( ) to throw throwable instead of throw an exception . patch by jbellis ; review by jbellis
added a new annotation ` Issues ` in ` Issue . java ` and defined it as a source annotation in ` Issue . java ` to
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and updated test
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5883 :
[ hotfix ] fix checkstyle violation in slotstatus
removed the import of ClassUtils from ReflectionUtils . java to eliminate unused dependencies and improve code clarity
replaced instances of HashSet with LinkedHashSet for excludeProtocols , excludeCipherSuites , and selected _ protocols in SslContextFactory to ensure insertion order is maint
added a static reference to the system resource in Resources . java to improve resource management by avoiding duplicate resource lookups
added a constant for the plaintext segment extra size in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel to improve code
added a test for circuit breaker fallback handling in ServerMvcIntegrationTests to ensure that an IllegalArgumentException is thrown when the fallback URI is invalid
added SSLConnectionSocketFactory to the CloseableHttpClient configuration to enhance security by enabling hostname verification for HTTPS connections
set the size limit of the input stream to 0x7FFFFFFF and remove the resetBytesReadCounter method to ensure proper handling of input
added a ` preferAES ` boolean field and its getter / setter in ` ProtectionPolicy ` and removed it from ` StandardProtectionPolicy `
( chore ) camel - opentelemetry : use logger instead of system . out
elb : add integration test for instance health check
corrected the spelling of " setRingtone " in the method name from " setAlarm " to " setRingtone "
added error handling for file creation in DiacriticTest . java to ensure robustness by preventing file creation when the locale or file
hhh - 14850 - add support for ojdbc6 timeout in followonlockingtest
updated file handling and exception handling in TextureUnpacker . java to improve error handling and provide clearer error messages for file not found issues
refactor AmbariManagementControllerImpl to use a write lock for service updates to improve thread safety and ensure thread safety during service updates
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test method to verify that the ResultSet does not close the HiveStatement to ensure proper resource management and prevent potential resource leaks
refactor input stream handling in InputStreamBodyGenerator and ChunkingTest classes to improve code clarity and ensure proper handling of input streams
added logic to remove pre - deleted databases from the schema response in ClusterSchemaManager . java to ensure that all database schemas are removed from the
replaced ` writeAndFlush ` with ` write ` in ` Http1xUpgradeToH2CHandler . java ` to improve performance
updated item deletion logic in EnhancedBrowseFragment and FullDetailsFragment to use getBaseItem ( ) instead of getItemId to ensure correct item ID
refactor RuleFinder to implement RuleBank and update related classes to streamline rule management and improve code organization
added a try - catch block around the initialization and final method call in JcaTlsCrypto . java to improve error handling and provide a fatal
added a new file ` TestMonomorphicObjectCall . java ` and ` Object . java ` to implement test cases for Monomorphic
replaced the ` removeMetaDataSource ( session ) ` method with ` toFront ( ) ` in ` DataBrowser . java ` and `
hbase - 15936 fix npe in defaultmemstore . shouldseek ( ) when there be no time range for a scan
[ hotfix ] [ runtime ] rename local _ state _ sub _ directory _ root to state _ directories in taskmanagermanagerconfiguration
change the default value of ` isAlterView ` from ` false ` to ` true ` in ` AlterTimeSeriesStatement ` to ensure that
fix : condition . matchtext ( string , string ) do n ' t accept whitespace
added error handling when retrieving the routing table builder in HelixBrokerStarter . java to improve robustness by handling potential exceptions during routing table
replaced ` putAll ` method with ` putIfAbsent ` for ` body ` in ` HttpClientIntroductionAdvice . java ` to ensure
( chore ) camel - jms : use char [ ] instead of string for password
bug 10364 : do n ' t invalidate the session if the operation be fail due to an exception
simplified the equals and isUniformDistribution methods in Counters . java to improve code readability and maintainability
updated the ` initialize ` method to accept a ` SimulationStatus ` object instead of a ` SimulationStatus ` to ensure that warnings are
sulong : fix getcurrenttimemillis ( ) in llvmamd64syscallclockgettimenode .
refactor variable handling in PrettyPrinter to use a variable reference to improve code clarity and maintainability by reducing redundancy
added a null check for the current size before creating a new Node instance to prevent potential NullPointerExceptions when accessing indexToNode
refactor DatagramSocket and DatagramChannelImpl to improve filtering logic and improve readability to enhance the robustness of the filtering process and
testquerydns : migrate testquerydns to junit 5 ( # 4396 )
added a new class NutchServerInfo with getter and setter methods for start date , configuration , jobs , and running jobs to provide data
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter to simplify attribute management and improve code clarity
added timestamp handling in CqlInserter and ThriftInserter classes and updated timestamp handling in SettingsColumn to ensure columns are written with
refactor DSAParameterGenerator to simplify conditional checks and improve readability to enhance code clarity and maintainability by reducing redundancy
[ typedarrays ] fix float32array / float64array / numberutils . tofloat ( double ) and numberutils . todoubleto
updated the masking logic in InetAddressSet and added new test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for
added checks for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to improve error handling for constraint violations in database operations
[ issue # 3640 ] fix the offsetstore rewrite bug ( # 3641 )
added methods to create and insert tabs in Tabs . java and refactored related tab creation methods in Tabs . java to improve tab
replaced array size parameters with zero - length arrays in multiple classes to simplify code and improve performance by avoiding unnecessary array creation
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironment and mockenvironmentbuilder
refactor return statements in MavenVisitor . java to use if statements for clarity to improve readability and maintainability of the code
updated mock names from " MOCK _ SECRET2 " and " MOCK _ NAME2 " to " MOCK _ NAME _ UPDATE
added a new file FormatCheckingTest . java to test Java class format errors to ensure proper handling and error reporting for illegal class names in the
updated line number handling in CodeGenerator . java to improve clarity and consistency in line number assignment
added a try - catch block around the retrieval of service property in ConfigHelper . java to handle potential exceptions during configuration retrieval
added methods to create radio buttons with toggle functionality in RadioButton . java to enhance user interaction by allowing toggling of radio buttons in the
updated cache initialization in LRUCache and modified CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl to adjust cache size
changed the access modifier of DEFAULT _ CAPACITY from private to public and updated related method calls in ChannelParser and MessageBusParser to allow access
fix npe in osgionmanagemanagementnamestrategy when the symbolic name be null
add support for load mode from a resource file in modecontribution . load ( base , new File ( ) )
[ hotfix ] [ yarn ] fix the flakiness of yarnsessionfifobitcase
replaced ` projectRoot ` with ` androidManifestPath ` in ` RobolectricTestRunner ` and related methods to standardize the path
added null and empty checks for notPropagatedHeaders in AbstractMessageProducingHandler and created a test for it in AbstractReplyProducingMessage
refactor CompareMode class to improve code readability to enhance maintainability and facilitate future updates
added HasTests interface implementation to Arg class and its methods in RustBinaryDescription and RustLibraryDescription to enable retrieval of test targets for
updated drawable resource references for placeholder and error in FileMessageVH . java to improve clarity by using a more descriptive resource name
refactor OnExitTest class to improve test structure to enhance maintainability and readability of the code
added a method ` onUserPreferenceChanged ( ) ` to ` TaskbarManager ` to handle user preference changes to ensure the taskbar is
updated HeapDump . java to handle heap dumping based on the VM type to improve compatibility with different VM implementations for heap dumping
added try - finally blocks around session commit and close operations in MyBatisProducer . java to ensure proper resource management and prevent potential memory
replaced FIREFOX driver with IE and added methods wdSwitchToWindow and wdQuit in ExportedWebDriverFunctions and InternetExplorer
updated TriggerPatterns and variable declarations in IteratorToFor . java to improve type safety and clarity to enhance code readability and maintainability by
set the application state to UNAVAILABLE in JmxApplicationProvider . java to ensure that the application is stopped when it is unavailable
updated position and limit calculations in ByteBuffer , Heap , and StringCharBuffer classes to ensure correct handling of buffer position and limit limits
removed unnecessary ` toUri ( ) ` call in ` moveStrSplits ` initialization to simplify the code by eliminating unnecessary method calls
updated array deletion logic in NativeArray and added setEmpty methods in ArrayData , ArrayFilter , and DeletedArrayFilter , and ObjectArrayData
changed enum members from non - public to public in VirtualAuthenticatorOptions . java to allow access to these enums from other classes
replaced ` doc4 ` with ` doc6 ` and updated related document additions in ` TestMultiPhraseQuery . java ` to ensure the
do n ' t assign online reservation if the payment method be not offline
added a thread - safe check for the onTimeout listener in HttpChannelState . java to ensure that the listener is only invoked once per thread
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to improve logging clarity and
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the read method to use a conditional check for consistency level to ensure correct consistency behavior based on the local serialization level
added support for " Home " model in HeosDiscoveryParticipant and added serial number handling in HeosPlayerHandler to enhance functionality to support Home
added a new ` Wait ` class and its associated methods in ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest `
refactor Neo4j to use AttributeController for setting node and edge attributes to improve code clarity and maintainability by centralizing attribute
added a null check for ' from ' in SessionManager . java to ensure that ' serverName ' is not null before comparison to avoid potential NullPointerException
nifi - 1774 : move rocksdb metronome to nifi - controller - repository so it can be use by nifi
updated the method for reading the " IS _ GRANTABLE " field from a readBoolean call to a readBoolean call to improve code read
updated the conditional check in JavascriptContext . java to include a check for " javascript : " to ensure that the URL does not start with "
( chore ) camel - cxf - mtom : skip test on macos
added logic to handle new column creation and modification based on whether the column descriptor is null to ensure proper handling of the column descriptor when the table
added Disposable interface to the Texture class to enable disposal of texture objects for improved resource management
updated WebappRegistrationCustomizerImpl , FragmentActivator , OSGiAppProvider , and DefaultJettyAtJettyHomeHelper to
add check for goquorum genesis file when goquorum compatibility mode be enable
replace IOException with Throwable in HttpInput . java to improve error handling by providing more specific suppressed exceptions
added a condition to check if the country is not " JP " in the LocaleTest . java file to ensure that changes in era are
updated @ ApiOperation annotations to use HostResponse . HostResponseWrapper instead of Wrapper to ensure consistency in API response representation across services
added a condition to compare the boost in the FilteredQuery class to ensure that query equality and hash code accurately reflects the boost value
reformatted the constructor parameters in FileMenuFilter . java to improve code readability and maintainability
make texteditadvancedpanel a verticalpanel instead of a listbox to improve user interface
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
added a check for non - empty entities before creating a new ItemTossEvent instance to avoid potential NullPointerExceptions when the entity list is empty
renamed ` KeyMappingPreparedStatementSetter ` to ` ItemPreparedStatementSetter ` across multiple classes to improve clarity and consistency in naming conventions
replaced the usage of Range with AbstractBounds for data range scanning in CompactionsTest . java to improve code clarity and maintainability by
added null check for the " type " attribute in the MiniAapt class and created a test for it in MiniAaptTest to ensure
added support for the SPEL operator in the OperatorEnum and created a new SpELJudge class in the OperatorJudgeFactory to
[ hotfix ] fix checkstyle violation in localexecutionplanner
bugfix # 269 , use java . awt . eventqueue instead of swingutilities
updated import statements in ConscryptCertBlacklist , Java8EngineSocket , Java8FileDescriptorSocket , and ConscryptTest classes to
added warning logging for attribute lookup failures in AttributeResolution9 . java and adjusted variable initialization in ShadowArscAssetManager9 . java to improve
updated the version of the source and target options in SetupHid . java from " 1.5 " to " 6 " to reflect the
[ calcite - 2396 ] pushprojectintotablesourcescanrule should not modify the project list when metadata be not support
added null and softReference imports and modified the way localized names are retrieved in AboutActivity to improve code clarity and ensure consistent sorting of
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming before posting a delayed Runnable to ensure the shared preference is updated based on the DrawerActivity settings
added an exception parameter to the MappingException thrown in AuditConfiguration . java to improve error handling by providing more context during the creation of the AuditStrategy
( chore ) camel - file - consumer : use awaitility for test
updated ` AbstractType ` and ` CompositeType ` and ` DynamicCompositeType ` to use ` AbstractType < ? > ` instead of `
added support for transport support in GitClientApplication and refactored repository URL handling in RepositoryUrlPanel to enhance the application ' s capability to
added delegator name retrieval for various input consumer classes to provide clearer context for input consumers regarding gesture interactions
add null check for mavenMetadata before retrieving available versions to avoid potential NullPointerException when mavenMetadata is null
added a check for " Disabled " in TestLargePageUseForHeap . java and modified logging statements in TestLargePageSupportForHeap .
cloud _ usage db migration : skip event migration if db do n ' t exist
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test failure on window
added a new file ` TestObjectStreamClass . java ` with methods for serialization and deserialization of ` ObjectStreamClass ` to facilit
simplified null checks in ZoneAwareDiscoveryFilter . java to improve readability and maintainability of the code
changed log level from error to warn in OpenTracingTracer . java from error to warn in OpenTracingTracer . java to provide more detailed logging
added a toString ( ) method to the Generator class to provide a readable string representation of the generators collection
refactor URI handling to initialize ` doquote ` and initialize ` dontquote ` to an empty string to improve clarity and correctness of
added a null and empty check for resources in ClusterControllerImpl . java and implemented a test for resource retrieval in ClusterControllerImplTest . java
refactor API response handling in AccepttoApiUtils . java to improve error logging and return a new HashMap to enhance error handling and provide clear
removed conditional initialization for byteBuffer and isDirect in VertexBufferObject . java to streamline code for better compatibility with newer Android versions
refactor SybaseASADatabase class to improve code organization to enhance maintainability and readability of the code
added a forceProjection parameter to the HashJoinInfo constructor and modified related methods accordingly to support backward compatibility with the HashJoinInfo class and ensure
added a new method ` getStringDistance ( ) ` to the ` SpellChecker ` class to provide access to the ` StringDistance ` instance
added FLAG _ ONE _ SHOT and FLAG _ MUTABLE constants and refactored PendingIntent creation logic in AndroidImplementation . java to
added a method to append read column IDs to the configuration in HiveFileFormatUtils and updated its usage in HiveInputFormat to improve readability
replaced ` getUPNPAddress ( ) ` with ` getIPv4MulticastAddress ( ) ` in ` UPNPHelper . java
added a method to display a temporary toast message in SavedExperiments . java to enhance user experience by providing feedback during temporary operations
added version handling in ServiceModule and a corresponding test in ServiceModuleTest to ensure proper versioning of service modules based on parent services
added a new test class ` RawSerializationTest ` for Gson functional tests to ensure correct JSON serialization behavior for various collection and object types
simonstewart : implement the sslcertificategenerator interface for the seleniumserver
updated the loop to iterate through the replies directly instead of using a for - loop to improve readability and maintainability of the code
increased the timeout duration for resource access exceptions in ExpiringUrlCacheTests from 3 seconds to 60 seconds to improve test reliability by
added a new test method ` testNGramFilterPayload ` to ` TestNGramFilters . java ` to validate the NGram payload
refactor AclImpl class for improved readability to enhance maintainability and clarity of the code
added a new test method ` differentArraysShouldBeRandomizedWithDifferentSizes ` to ` EasyRandomTest . java ` to ensure that random
cloudstack - 5339 : fix npe in citrixresourcebase . stop ( ) when vm fail to stop
added a ThreadLocal to manage concurrent access to the tryWriteAgain flag to improve thread safety when attempting to write to the SslConnection
refactor actor visibility checks to use ancestorsVisible method to improve code clarity and maintainability by encapsulating visibility checks
added logging of deployment group name and error message in RollingUpdateOpFactory . java to improve visibility into deployment group deployment failures during rolling updates
[ hotfix ] [ table - planner - blink ] fix checkstyle violation in flink - table - planner
added handling for username not found exceptions in DaoAuthenticationProvider and created a new AuthenticationFailureUsernameNotFoundEvent class to improve error handling and provide
refactor AtMostXVerificationTest class to improve test coverage to enhance reliability and reliability of verification logic
updated default query type from OldLuceneQParserPlugin to QParserPlugin . DEFAULT _ QTYPE and modified default QTYPE assignment in QParser
updated SimpleDateFormat instantiation to include Locale . US to ensure consistent date formatting across different locales
added an overridden method ` isInitialized ( ) ` to ` JavaLanguageServer ` and created a new test class ` LocalsCompletionTest _ template
updated the ` ClientAPITokenIntegrationTest ` to use a ` shouldHaveIdToken ` boolean instead of a ` idToken ` boolean to
added beginTransaction , setTransactionSuccessful , and endTransaction methods to DatabaseAdapter and refactored account management logic in GncXmlHandler to improve
refactor byte array handling in MimeType . java to use ByteArrayOutputStream instead of byte array to improve performance and readability of the code
added multiple @ Override annotations and simplified exception message initialization in MessagingTemplate . java to improve code readability and maintainability by reducing redundancy
added an ` isAcceptable ` method to ` AutoFormatVisitor ` to check if a ` SourceFile ` is an ` J . Compilation
added maximum buffered documents and RAM buffer size settings to TestIndexWriterMergePolicy to optimize memory usage during indexing operations
added tests for updating witnesses in Manager and NodeDelegateImpl classes to ensure correctness of witness management in the Manager and NodeDelegate implementations
added exception handling for NoSuchElementException in CopyOnWriteMap . java to ensure proper handling of NoSuchElementException during iteration
flume : remove log4j dependency , use log4j . info instead
added basic authentication settings and updated metrics assertions in BasicAuthIntegrationTest and DaemonStream classes to enhance security and improve test coverage for authentication metrics
replaced HashMap with LinkedHashMap in DependencyUtil . java to maintain insertion order for graph nodes
add jersey 500 error response to jersey module
refactor response header validation logic into a separate method ` validateHeader ` to improve code readability and maintainability by centralizing header validation logic
added a switch statement to handle specific system property keys in System . java to improve flexibility in handling different Java versions
changed method parameters from String to CharSequence in StringSubject . java and added corresponding unit tests in StringTest . java to enhance type safety and ensure
added methods to investigate JVM counter time , class ID , and event writer in CheckGraalIntrinsics . java to enhance the
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the connection factory to use a new datasource instance if forCompactor is true to ensure the correct datasource is used when using compaction
refactor DeploymentOptions class for improved clarity to enhance maintainability and readability of the code
updated the parameter type of ` updateTextButtonWithDrawable ` from ` Drawable . ConstantState ` to ` Drawable ` and adjusted drawable bounds for
refactor code to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added support for the COALESCE operator in RexNodeConverter and registered it in SqlFunctionConverter to enable support for coalesc
( chore ) camel - hl7 : fix typo in test method name
updated JavassistProxyFactoryFactory to set the current thread ' s context class loader and modified exception handling to ensure proper resource management and
updated DefaultDateTypeAdapter constructor to use ' final ' keyword for consistency and clarity to improve code readability and ensure immutability of
reformatted method signatures in DocumentUtil . java for consistency to improve code readability and maintainability
refactor HttpClientRequestBase to simplify URI handling and query setting to improve code readability and maintainability by reducing complexity
removed the filterOldEntries ( ) method and added a limit on the size of entries in FeedRefreshUpdater . java to optimize the processing of
changed log level from fatal to warn in FSHLog . java from fatal to warn in FSHLog . java to improve logging clarity
replaced the implementation of ` getValues ( ) ` with a new ` NodeMapIterable ` class and added a ` remove ( ) ` method
updated imports and refactored predicate definition in DiscoveryClientRouteDefinitionLocator . java to improve clarity and maintain consistency in naming conventions
added a check for non - empty fields before adding aggregations in MongoRecordReader and modified return logic in RexToMongoTranslator to ensure operations
added a default admin to the list if it ' s empty to ensure that the admin list is populated with the correct domain information
replaced ` MultiFields . getFields ( searcher . getIndexReader ( ) ) ` with ` SolrIndexSearcher . getSlowAtomicReader (
replace bean . toString ( ) with ObjectHelper . className ( bean ) and ObjectHelper . getIdentityHashCode ( bean ) to improve clarity and
removed unnecessary line number check and simplified the return statement in GroovyParserVisitor . java to improve code readability and maintainability by reducing unnecessary
[ gr - 23233 ] remove hashcode ( ) from frameinforesultset and java _ lang _ substitution .
increased offerTimeout values from 100 to 200 in SedaBlockWhenFullTest . java to improve test reliability by allowing more
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to
updated the calculation of readLen in MessageUnpacker . java to ensure readLen does not exceed the buffer size when position is outside the buffer
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core
updated SQL query to include user identifier in IconDB to ensure proper retrieval of user icons based on their serial number
( chore ) camel - defaultmq : fix typo in semaphore initialization
added a boolean parameter ` isClassfileOnly ` to the ` addWhitelistedResource ` method across multiple classes to control the inclusion of whitelisted resources
added a method to fix foreign keys for external dhcp and pxe devices in the Upgrade410to420 class to ensure proper foreign key
removed the interface ` IJava2DRenderer ` from the ` Java2DRenderer ` class and removed the ` Java2DRenderer `
added onTearDown method to DefaultAudioSink to call onOffloadBufferEmptying if listener is not null and playing to ensure proper
refactor UpstreamCacheManager to use a scheduled executor for scheduling upstream tasks to improve task scheduling efficiency and control over scheduled execution
refactor StreamType class for improved readability to enhance maintainability and ease of future updates
updated assertion to include a message in the assertion failure to provide clearer context for the assertion failure
added admin role check in FilestorePage and RootPage classes to enhance security by ensuring only admins can access filestore pages
( chore ) camel - elasticsearch : ignore flaky test
refactor the accept method to use a variable for the declaring class to improve code readability and maintainability
updated button text references from " leftButtonAltcoin " and " rightButtonFiat " to " buyAltcoin " and
camel - 14850 : camel - restlet - improve error handling for invalid restlet url
refactor createNextBlock and createNextBlockWithCoinbase methods to remove blockHeight parameter and update method signatures accordingly to enhance method clarity
removed ` Serializable ` interface from ` BTreeMapJava ` and updated ` ConcurrentSkipListMapTest ` to handle ` NotSerializableException `
do n ' t log stack trace on startup rule failure
reformatted conditional statement for clarity in Main . java to improve code readability and maintainability
replaced ` mFilesAll . indexOf ( file ) ` with ` mFiles . indexOf ( file ) ` in ` LocalFileListAdapter .
deleted the PlainVerifier . java file to remove unused JWS verifier implementation to streamline the codebase
added a condition to close the system windows when the alt tab is triggered to ensure proper handling of system windows when the alt tab is triggered
updated dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to improve dialog visibility and state management to enhance user experience by ensuring proper
updated MimeUtil . parseCharset calls to include " UTF - 8 " as a charset parameter to ensure consistent character encoding handling for MIME types
added a call to the superclass deinitialize method in TextField to ensure proper resource management and prevent memory leaks
updated import statements and simplified the testSerialization method in LogFormatTest . java to improve code readability and maintainability by using TestUtilities for
updated the previous clause to use ` previousUntilLastClause ` and modified the ` PreviousFill ` initialization in ` GroupByFillDataSet ` to
updated array size validation logic in JAXWSExceptionBase . java to throw a NegativeArraySizeException to ensure proper handling of negative array sizes and
test ( refactor ) : migrate ctunresolvedimporttest to junit 5 ( # 4358 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to improve the responsiveness of the
[ hotfix ] [ test ] increase default network memory for pipelinedregionschedulingstrategy
added title property and its getter / setter methods to ShadowActivity , and updated @ Implementation annotations in ShadowAlertDialog , ShadowTextView , and
replaced ` Log ` with ` POILogFactory ` and ` POILogger ` in ` POIFSFileSystem . java ` to
refactor alarm handling in InstarHandler to use regex replacements for object and alarm codes to improve code readability and maintainability by reducing
increment localmapstats . getremoveoperationcount ( ) when map . delete ( ) be call
refactor status check in Option . java and Response . java to use a switch statement to improve readability and maintainability of the code
added a method to find the JavaFileManager . Location to retrieve the Java file ' s main class path to improve the robustness of the
add the project name to the flutter createadditionalsettings command ( # 1181 )
added a new test class ` DeprecatedStubbingTest ` to verify deprecated stubbing behavior to ensure proper functionality and functionality of the mocking methods
updated import statements in ITBraveServletFilter . java to use javax . servlet instead of org . eclipse . jetty . server
englishgrammaticalstructure : add support for nml and np - adv ( dt a ) ( NN - ADV
add property org . bouncycastle . jsse . fips . allowRSAKeyExchange to enable RSA key exchange by default
fix resource leak in perforce history parser and repository
refactored OAuth service creation and access token handling in PubSubAPI and SDMAPI classes to improve code clarity and maintainability by central
updated animation interpolator from AGGRESSIVE _ EASE to EMPHASIZED in TaskbarEduView . java to
added support for updating region location in ConfigPhysicalPlan and updated logging level in ProcedureManager and RegionMigrateProcedure to enhance region migration functionality and improve
added a new file FileDialogLeakTest . java to test the behavior of FileDialog with a CountDownLatch to ensure that the File
hbase - 26969 move testopentableincoprocessor to hbase - coprocessor ( addendum )
fix uninterruptible implementation method in trufflefeature .
[ hotfix ] [ table - common ] remove unused code in protobuf format
updated the condition to check if ` disi ` is not null in ` DrillSidewaysScorer . java ` to ensure that the
modified timeline handling in ExoPlayerTest , DynamicConcatenatingMediaSourceTest , and FakeMediaSource classes to improve thread safety and ensure proper
added JVM version checks and constants to determine if the Java version is below the minimum Java 9 version to ensure compatibility with Java 9 features and improve
updated FileReporter constructor to cast null to String and File to ensure proper type handling for null values
changed the condition from checking end - to - end encryption keys to checking end - to - end encryption keys existence to ensure that encryption keys are
added menu item handling for the home button in DirectMessageConversation to enhance user experience by allowing navigation to the home button
added GET _ USER functionality to RpcServlet and updated protocol version from 5 to 6 and added user retrieval logic in RpcUtils to enhance user management
added a @ EnabledIfSystemProperty annotation to the TestJdbcPluginWithMSSQL class to enable the test based on the operating system architecture
replaced the use of ` startClass ` with a local variable ` originalStartClass ` in ` WhiteboxImpl . java ` to ensure
updated exception message and added local creation for parameter register numbers in DexBody . java to improve clarity of error messages and ensure proper local
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
[ drools - 4892 ] fix the nimbus look and feel for the example
updated regex pattern for version replacement in AppPage . java to ensure proper formatting of version numbers in the application page
refactor animation listeners in LauncherAppTransitionManagerImpl to use local variables for alpha and translation to improve code readability and maintainability by
updated error message to include version instead of base58 to improve clarity of error reporting for better debugging
updated the parameter name from offerPayload to newOfferPayload in EditOfferDataModel . java to clarify the purpose of the extra data map
refactor milestoneParameters initialization to conditionally use new parameters based on whether the milestone is open to improve flexibility in specifying repository and open tickets
updated the battery size from 640 , 640 , 0 to 80 in PipeItemsWood . java to improve the battery '
updated the ` getStateMachineClusterInstance ` method to include a ` getClusterKey ` method for better clarity to improve code readability and maintain
ambari - 14825 . ambari upgrade pack should not be allow to downgrade . ( dlysnichenko )
replaced ` fEntityScanner . scanQName ( ) ` with ` fEntityScanner . scanName ( NameType . ATTRIBUTENAME
added a new configuration option to emulate system load library and modified library loading logic to enhance flexibility in loading libraries based on system properties
replaced instances of ` APP _ NAME _ COMPARATOR ` with a new ` getAppNameComparator ( ) ` method in ` LauncherModel
added closing of entries in DefaultPlatformManager and improved file output stream creation in FatJarStarter to ensure proper resource management and prevent
reformatted the doTest method parameters in TestSecretKeyCredentialHandler . java for improved readability to enhance code clarity and maintainability by
( chore ) camel - jbang - optimize route builder finder
[ hotfix ] [ doc ] fix typo in metricoptions
hbase - 15836 testfulllogreconstruction . java fail on slow ci server
added ` reuseAddress ` and ` reuseAddress ` properties and overridden methods in ` DatagramSocketOptions ` to provide a consistent default behavior for
change server shutdown message to use getshutdownmessage ( )
danielwagnerhall : remove deprecate locatable interface . no longer need .
updated error messages for version fields in VersionInfo . java to clarify that fields must be searchable or have docValues and not retrievable
renamed ` equalityPredicateColumns ` to ` predicateColumns ` and updated related logic in ` StarTreeIndexOperator . java ` to improve
removed unnecessary whitespace in HandshakeHandler . java to improve code readability and maintainability
reformatted code for better readability in Navigator . java to improve code clarity and maintainability
updated visibility of constants and registered a default ParquetRecordReaderConfig class in RecordReaderFactory . java and created RecordReaderFactoryTest . java
added query creation logic for ` GREATER _ THAN _ EQUAL ` and ` LESS _ THAN _ EQUAL ` criteria in ` MongoQueryCreator
refactor group expression validation logic into a separate method for clarity to improve code readability and maintainability by reducing duplication
refactor MappedByteBuffer and FileChannelLinesSpliterator to utilize AtomicInteger for buffer reference counting to improve resource management and prevent memory leaks during
refactor validator retrieval to use a local variable for clarity to improve code readability and maintainability by reducing redundancy
added a schedule method to CircuitBreakerImpl and modified CircuitBreakerTest to use this new schedule method to improve thread safety and simplify circuit breaker
removed the bitwise OR condition from the intent flags for FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS to simplify the intent
corrected the property name from " webui . submit . upload . ajax " to " webui . submit . upload . progressbar " in
updated the test annotation from " Retrieve view column privileges " to " Retrieve column privileges " and added a disabled annotation to clarify the reason
made the ` addExportedCount ` and ` getExportedCount ` methods synchronized to ensure thread safety during concurrent access to the methods
replaced ` IntRangeUtil1 . requireNonNegative ` with ` IntRangeUtil . requireNonNegative ` in ` MetricsImpl . java
updated HttpParser to handle special characters and added a new test for encoded headers in HttpParserTest to improve error handling and ensure proper handling of
updated the content view from ` trends _ activity ` to ` configuration _ activity ` in ` ConfigurePagerActivity . java ` to align
updated print statement to include position information in SLWTTextListing . java to improve clarity of log output for better debugging
updated ForceLeaderTest to conditionally use Tlog replicas and added a new ForceLeaderWithTlogReplicasTest class to improve test reliability
refactor Thread class to improve thread management to enhance performance and maintainability of the code
updated template file suffix constants and added a forceTemplateMode flag in AbstractConfigurableTemplateResolver . java to enhance flexibility in template file naming and
camel - 14850 : camel - cxf - allow to specify namespace in soap message . thanks to benjamin for
removed unnecessary whitespace in YamlRepresenter . java to improve code readability and maintain consistency
updated date formatting in ToChar . java and added new test cases in TestFunctions . java to improve clarity of date representation and ensure correct
added imports for ValidTxnList and ValidTxnWriteIdList in GenericUDTFGetSplits . java to enable configuration of valid transactions and write
refactor JsonSerDe to use isEmpty ( ) instead of length ( ) checks for columnNameProperty and columnTypeProperty to improve code readability and
added a check to ensure the book path is not null before opening the file , and added a method to check if there is no initial image
added a check for the next SID in the SSTDeserializer constructor and modified the manufactureStrings method to handle cases where the input stream
replaced hardcoded value of 4.0 f with a constant DEFAULT _ GRID _ COLUMN in AppPreferencesImpl . java and updated scaling
updated the error message for the " diff " field in Platform . java and ComparisonFailureWithFieldsTest . java to clarify that line
added a boolean flag ` waitingForKeys ` in ` DecoderInputBuffer ` and updated related conditions in ` ClippingMediaPeriod ` and
updated API path annotations in OkexV3 . java from " / api / margin / v3 / accounts " to " / margin /
simplified conditional checks in LineUtilitiesTests for better readability to improve code clarity and maintainability
added error handling for varargs and old array syntax in JavacParser . java and created new classes T6569633 . java to
added playbackLooper verification in DefaultDrmSession and DefaultDrmSessionManager classes to ensure playback thread is on the correct thread to prevent
added METHOD support to VariableContext and corresponding tests in TestVariableContext to enhance functionality to support method calls in variable context parsing
added unit tests for invalid JSON parsing in ExperimentParserTest . java and removed asNullableBoolean method from ExperimentJSONParser . java to ensure proper
updated buffer limit logic in Piece . java and modified buffer limit calculation in SharingPeer . java to ensure correct buffer position handling and improve
added a ` responseTimeout ` property to the ` NettyRoutingFilter ` and related classes to allow customizable response timeouts for HTTP requests
refactor CxxLibraryFactory and related classes to use NativeLinkTarget directly instead of NativeLinkTargetGroup and NativeLinkTargetInput to improve
added unit test base on user forum issue
added support for RexFieldAccess in ASTConverter and updated RexNodeConverter to convert ExprNodeFieldDesc to RexNode to enhance
replaced direct calls to QueryLogEntry . values ( ) with a constant QUERY _ LOG _ ENTRY _ VALUES to improve code readability and maintain
improve webclientrequestbuilder # relativizenoproxy ( uri , proxy ) logic ( # 2329 )
refactor certificate handling in PKCS12KeyStore and StoreSecretKeyTest to improve clarity and structure to enhance code readability and maintainability by simplify
added reflection access checks in ` NativeObject ` and ` ReflectionCheckLinker ` classes to enhance security by ensuring proper access control for reflection classes
removed the ' public ' access modifier from the CollisionMap constructor from the CollisionMap class to allow instantiation of the CollisionMap class
mark the ` getRawInputFromTransactionInput ` method as deprecated and add a null check for the ` input ` parameter to indicate that the method
refactor log level handling to use a switch statement instead of if - else statements to improve readability and maintainability of the code
server : remove region _ id from account and user insert statement in configurationserverimpl
added support for handling EncryptedDocumentException in OldExcelExtractor to ensure compatibility with old Excel files that do not support encryption
[ gr - 20625 ] add -- add - exports = all - unnamed for micronaut benchmark .
removed an unnecessary else statement in TimeLineCursorAdapter . java to streamline the code for better readability and maintainability
increased timeout duration in BatchingStateChangeUploadSchedulerTest from 10 to 50 seconds to improve test reliability by avoiding all attempts timing
refactor the creation of ` EXTERNAL _ FILES _ DIR ` to use a dynamic ` File ` creation based on the type parameter to
replaced custom exception factory implementation with dynamic class loading for AssertionFailedError and JUnit framework exceptions to improve flexibility and maintainability of exception
increased WAIT _ TIME _ MS from 10000 ms to 60000 ms in LauncherInstrumentation . java to allow for longer wait time
added support for the " aud " extension in ConnectOAuth2RequestFactory and updated JWTClaimsSet initialization in ConnectTokenEnhancer to enhance
camel - 14284 : camel - kafka - allow to turn off break - on - first - error by default
added a new constant selectableItemBackground with a value of 0x10a13 to enhance the visual appearance of selectable items
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
updated event type assignment in TxnSetOperation . java to ensure correct event type assignment when the record is null
added a new class ` ResumableRandomAccessFileListener ` and updated ` ResumingExternalDownload ` to use it instead of ` Resum
replaced " AccessLogValve $ 3 " with " AbstractAccessLogValve $ 3 " in SecurityClassLoad . java to ensure
added a loop to update the formats list and refactored the HSSFDataFormat to utilize the cell ' s data format to
[ hotfix ] [ kafka ] deprecate method in flinkkafkaproducer
updated the condition to check if the checksum length does not exceed the maximum compressed length to ensure that the checksum length does not exceed the maximum allowed
camel - 13671 : camel - redis - add idempotent processor for string - to - string mapping
fix vanilla not use metadata in container repair . close # 217
added conditional logic to handle real local repositories in LegacyLocalRepositoryManager to ensure correct retrieval of artifacts based on the layout type
added task manager initialization check and improved error handling in LocalInstanceManager and JobManager classes to ensure that the TaskManager is properly initialized and
add help to abstractartifactresolutionexception when you need to deploy a file
replaced direct calls to ` getTemporalPath ( ) ` with a new method ` getInternalTemporalPath ( ) ` in ` FileStorageUtils
added a method to find FeedEntryStatus by entries and modified import statements in FeedEntryStatusDAO . java to enhance functionality by allowing retrieval of
added thread execution management in ContextImpl and a new test for blocking execution in BlockedThreadCheckerTest to improve thread management and ensure proper execution
updated the ` instantiate ` method to accept a ` String ` for the formatter string and added a null check for the ` convert ` method to
updated file reading logic in LoadContactsTask based on SDK version to ensure compatibility with newer Android versions and improve file handling
replaced instances of ` setRemoteAddress ` and ` setRemoteHostname ` with ` this . remoteAddress ` and ` this . remoteHostname `
added a null check for the realClass variable and throws an IllegalArgumentException if it is not annotated with @ Implements to ensure that the shadowClass is
added a check for tlsMutualAuthenticationRequired in NettySslContextFactory and ExampleNettySslContextFactory to ensure that mutual authentication is only
added a test method to verify that requesting a plain HTTP endpoint over HTTPS throws SSLException to ensure that the server correctly handles ConnectException and SSL
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance accessibility for subclasses
rearranged conditional statements in PageChangeListener . java and added import statements in FrameRenderer . java to improve code readability and maintainability
corrected the warning message from " Could not send email to [ { } ] " to " Could not send SMS to [ { } ]
# 174 - enh : optimize draft query ( # 174 )
added error handling for IO exceptions in MultipartBody . java to improve robustness by retrying operations on resource temporarily unavailable errors
doc ( regen ) : fix checkstyle violation in java / lang / class / executablefactory / zipfolder
updated multiple Java files related to EndpointConfiguration , SpEL , MainSupport , MainSupport , and SSLContextParameters to improve code organization and maintainability
fix the attach file action to use the working directory when create a new file
added LoadOptionsBuilder and SchemaInfoLevelBuilder to AccessTest . java to enable dynamic schema info level configuration in the SchemaCrawler options
updated package name from org . openj9 . test . loadLibrary to j9vm . test . loadLibrary and added a new test
replace throwing an exception with returning null in TestReader . java to simplify error handling by returning a null value instead of throwing an exception
added setter methods for name , enabled , and expanded properties in ProjectProperty . java to enhance property management by associating properties with their respective properties
refactor transaction handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and prevent potential memory leaks
[ hotfix ] [ doc ] fix typo in datastreamjob
updated the try - with - resources statement in TestContentProvider . java to use try - with - resources for FileOutputStream to improve resource management and
camel - 14284 : camel - cxf should use classhelper to get the name of the service class to avoid reflection .
added a conditional check for " h2 - 14 " protocol in HTTP2ServerConnectionFactory . java to ensure proper handling of H2 - 14
refactor LambdaToMethod and ClassFileVisitor to improve parameter handling and condition checks to enhance code clarity and ensure correct handling of lambda method
tregexpattern . compile ( " SBARQ < ( WHNP = what < WP ) $ ( SQ = sq < ( /
increased the timeout parameter in FileUtils . copyURLToFile from 5000 to 60000 to allow for more time for file copying to complete
added a method to set the phrase Slop in the QueryParser class to enhance query parsing functionality by allowing customization of phrase separation
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test responsiveness by allowing more
updated the metric server port from 8188 to 6188 in FlumeTimelineMetricsSink and HadoopTimelineMetricsSink to align metrics server
replaced direct calls to ` GameScheduler . parallel ( ) . schedule ( ) ` with a new method ` scheduleParallel ( String , Runnable
updated visibility condition in EditShareFragment to check if edit options are available before displaying the compound view to ensure that the compound view is only visible
added a minimum progress value of 1.1 f to the DepthController class to ensure progress is within a valid range for processing
removed the packetReceived method from ClientSession and ComponentSession classes to streamline the code by eliminating unnecessary packet handling
added debug logging in DefaultCasDelegatingWebflowEventResolver and refactored authentication handling in DelegatedAuthenticationGenerateClientsAction to improve
added null checks for service in ` SamlIdPEntityIdAuthenticationServiceSelectionStrategy ` and ` SamlIdPMetadataUIAction `
added an ` hidden ` attribute to the ` PantheonCommand ` class and updated the ` arity ` and ` permissionsEnabled ` commands to
added doNotInstrumentClass ( " androidx . room . CoroutinesRoom $ Companion " ) to AndroidConfigurer to exclude
modified the ` isSupported ` method to be synchronized and removed the ` isSupportedImpl ` method from ` NegotiateAuthentication . java ` to improve
removed the setInitScript method from InitializingDataSourceFactoryBean to simplify the initialization process by eliminating unnecessary method
camel - 15836 : camel - core - add thread name to persistent and temporary queue reply manager .
refactor AuthenticationProvider and TargetObject classes to improve code organization and maintainability
added functionality to open and close MC blocks for tagged images in PdfDocument . java to ensure proper handling of tagged images during rendering
log4j2 - 1343 add unit test for patternlayout . formatevent ( ) .
simonstewart : do n ' t throw exception for unsupportedoperationexception when run test in hta mode .
renamed ` MwPostResponse ` to ` MwThankPostResponse ` and added a new class ` MwThankPost
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` to implement it to enhance socket handling capabilities in the application
updated revokingStore initialization and adjusted max size calculation in Manager . java to ensure proper handling of the revoking store ' s maximum
added unit tests for implicit joins in HQLTest . java to ensure correct retrieval of call history and timestamps from a collection
added normalization for expected and actual lines in NonVisualRegressionTest to ensure consistent line endings across different platforms
replaced references to ` toCommit ` with ` filesToCommit ` and updated references in ` IndexWriter ` , ` SegmentInfos ` ,
changed method modifiers from final to public for several methods in BaseError . java to improve encapsulation and enforce immutability of method parameters
added validation for the consumption user resource percentage in ConsumeUserResourcePercentActuator . java to ensure that the percent value is within valid range for
added a condition to check if the legacy login display is enabled to ensure that the legacy login display only occurs when the flag is set to true
rename the test class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to clarify the purpose of the test class
removed the conditional statement for setting the response page in EditTeamPage . java to simplify the page assignment logic for better readability
updated debug log message to include the exception details to improve error reporting for better debugging
refactor shutdown logic in ConnectionManager to ensure proper resource management and logging to improve code clarity and maintainability while ensuring proper shutdown behavior
refactor Rocket class to improve code readability to enhance maintainability and facilitate future updates
refactor dynamic partition spec creation logic into a separate method ` createDynPartSpec ` to improve code readability and maintainability by encapsulating
simplified rounding logic by introducing a new method for calculating rounded half - up factors to improve code readability and maintainability by redu
added a method to visit directories in JarDirectoryStep and implemented a test for directory entries in JarDirectoryStepTest to enhance directory traversal functionality and
added a new file ` JWKSetEditor . java ` that implements a property editor for JWK sets to provide a way to set JWK sets as
replaced the ` finish ` method in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` with direct calls to `
truffle : fix illegalstateexception when try to access non - static method .
changed the default value of ` fetcher . threads . per . host . by . ip ` from ` true ` to ` false ` to disable
updated the condition for handling queryTimeout in StatementUtil . java to improve clarity and correctness of timeout validation logic
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to enable hashing of
refactor ReplicaPosition class to improve code readability to enhance maintainability and facilitate future updates
bug 10625 : fix network usage stats update task to run immediately if initial delay be negative .
updated animation interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use final _ frame instead of allAppsFade to improve
adjusted the height calculation for the nav bar ' s visible bounds by adjusting the swipe length to improve the responsiveness of the nav
added a new module - info . java file for the Jetty HTTP3 server module and updated the QuicConnection , QuicSession ,
fix npe in jsontype . settextvalue ( ) when value be null
removed unnecessary parentheses around the InitialContext initialization in ResourceResolverBean . java to improve code readability and maintain consistency in context initialization
[ hotfix ] fix npe in checkpointconfig and executioncheckpointingoptions
refactor InnerClassesTable to use Element instead of TypeElement for reporting inner class references to improve type safety and clarity in handling package annotations
updated the command string to include a space before " " for VM options to ensure proper command formatting for better readability and maintainability
replaced ` FluentIterable ` with ` MoreCollectors ` for stream processing in ` ChromeTraceBuildListenerTest . java ` to improve code
[ 3.0 ] fix dubbo service register by default ( # 3649 )
added onSettingsChanged method to handle security otr mode changes in SettingsManager and implemented endAllSessions in OTRManager to improve handling of
added new properties for node label outline size and transparency in PreviewProperty . java and updated renderProcessing method in NodeLabelRenderer . java to enhance
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated the boolean parameter from false to true in Win32FontManager . java to enable font management functionality in the application
added null check and cursor setting in TreeVisitor to ensure proper handling of null values before visiting the tree
refactor error handling policy in JDTBatchCompiler to differentiate between no classpath and non - classpath scenarios to improve error handling behavior based on
added contentAlignmentPoint and textAnchor properties to LabelBlock and updated draw method to use RectangleAnchor to enhance text rendering capabilities by allowing customizable
refactor Class and Parameter classes for improved readability to enhance maintainability and clarity of the codebase
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
changed the type of ` isLoopback ` from ` boolean ` to ` Boolean ` and added null checks for ` networkInterface ` to improve
added a Locale parameter to the fromRfc1123DateString method in DateUtils and Rfc1123DateDeserializer classes to ensure consistent date formatting across
updated the file download test to include an extension parameter to ensure the test correctly handles missing PDF files
nifi - 2696 : add a new property ` ` el - rest - output - no - hits ' ' to control output of
server : remove aggregation ratio from quota usage update ( # 4358 )
[ java ] add try - with - resources around switch statement in election . java .
do n ' t wait for file to be process in readfilesp and streamfilesp ( # 11855 )
refactor the widget skipping logic in PageChangeListener . java to simplify the condition for better readability and maintainability to improve code clarity and
added isWriteProtected method to Workbook , FileSharingRecord , and HSSFWorkbook classes , and updated username handling in FileSharingRecord
added error handling when unregistering invalidated sessions in PluginMonitoringFilter to improve robustness by logging exceptions during session checks
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the codebase
updated the status message in HueLightHandler from " Bridge reports light as reachable = false " to " Bridge reports light as not reachable "
add a loading flag to fmlclienthandler and implement it in the gamesettings .
add unit . millions and unit . thousands to ui and blockinventoryfragment
refactor MessagePackParser to use a switch statement for type handling and add a new BinKeyPojo class to improve code clarity and
added parameterized tests and a method to query with reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to enhance
added unit tests for serialization and deserialization of maps in MapTest . java to ensure correct handling and deserialization of nested maps in JSON
added bounds checking for x2 and y2 in GeometryUtils . java to ensure coordinates do not exceed the specified offset
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to utilize SortingOrderDialogFragment to improve code clarity and
do n ' t crash if the testplan can not be find
updated method names from " dbmsName " , " schemaName " , and " dbmsOperationHandler " to " getDbmsName " ,
refactor argIdent assignment logic to handle both strict and non - strict identifications to improve robustness by ensuring argIdent is only added when
updated the default protocol setting in JettyHttpComponent9 from " SSL - HTTP / 1.1 " to using the configured protocol from the
set default value of displayVolume to true in VolumeVO . java to enable displayVolume functionality by default for better user experience
modified the JavahTask . java version method to accept a full parameter and modified the version message retrieval logic to enhance clarity in versioning
refactor change log parameter retrieval logic to improve clarity and correctness to ensure correct retrieval of change log parameters based on global state
change log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for uncaught exceptions during CMT environment
hhh - 14850 skip test that cause exception during sql string formatting
updated socket timeout handling in mmm Connection . java and ppp Connection . java to ensure proper handshake and socket timeout settings are applied
updated action bar size calculations to account for popups in HomeFragment , DMFragment , ListFragment , MentionsFragment , and MentionsFragment
set the CHA option to true in EspressoOptions . java and update class inheritance in DefaultClassHierarchyOracle and NoOpClassHierarchy
http : / / issues . apache . org / activemq / browse / amq - 4892 - set the context class loader
updated JodaTimeRangeRandomizersTest to use wildcard imports and refactored test methods for clarity to improve code readability and maintain
updated WebDescriptor to redirect XML resources based on the SERVLET _ MAJOR _ VERSION condition to ensure compatibility with newer Jetty E
fix : add support for readiness . isready ( ) for node .
replaced the loop variable ` liveEndpoints ` with ` handler . endpoints ` in ` StorageProxy . java ` to ensure the correct endpoint list
added a null or empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions when processing creation statements
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to update RPC version from 1 to 2
added a security check before calling Reflection . getCallerClass ( ) and ReflectUtil . checkPackageAccess ( ) in ObjectStreamClass and Object
removed unused imports and changed visibility of UGSCommandCount to private in XLCDCommunicator . java to improve code clarity and
replaced the use of ImmutableMap with Collections . unmodifiableMap for tags in DefaultMetricsTagProvider . java to improve immutability and encapsulation
removed unnecessary whitespace in the addTestSuite method call to improve code readability and maintain consistency
changed the default logging level from OFF to ERROR in the Launcher class to improve error handling by using a more appropriate log level
changed variable declarations to be final in IconNormalizer . java to ensure immutability and improve code readability
added a boolean flag ` firstCallPrepareDo ` and modified the prefix invocation logic to allow toggling of the first call preparation behavior based
refactor workspace visibility and overview mode handling in Launcher . java and AppsCustomizePagedView . java to improve clarity and
replaced ` asEagerSingleton ( ) ` method calls with ` singleton ( ) ` method in ` AuthWithStoreFeature . java `
updated incomingAssociations method to accept a boolean parameter for ignoring invisible associations to enhance flexibility in handling incoming associations based on user preferences
cloudstack - 5892 : remove private ip from the capacity list when delete a pod
added a link to the Async Profiler Home Page in ProfileServlet . java to provide users with instructions on how to access the Profiler Home Page for
added a new class ` RequiredRefFieldModel ` and modified ` ModelResolver ` to apply required flags to ref fields to improve the handling of
renamed ` CasCoreConfigurationWatchConfiguration ` and ` CasCoreConfigurationWatchConfiguration ` classes to ` CasCoreConfigurationWatchAutoConfiguration ` and
refactor FeatureFlags class to improve code readability to enhance maintainability and facilitate future updates
updated UUID generation and added a new test for unique ID generation in ConfigStore . java and CommonSetup . java to improve UUID generation and ensure
added picture handling in TimeLineCursorAdapter and TimelineArrayAdapter to ensure proper image handling in the adapter
updated the description of compaction configuration in HiveConf . java to clarify that compactions on insert - only tables will always run via queries
added a null check for the storage path before proceeding to ensure that the process only proceeds when the storage path is not null
updated resize threshold checks across multiple classes to use a dedicated method for resize checks to improve code readability and maintainability by centralizing resize logic
refactor LDAPConnectionService to improve code readability to enhance maintainability and facilitate future updates
marked the AggregateDefinition class as deprecated to indicate that the class is outdated and should no longer be used
removed debug trace logs from TouchInteractionService , RecentsAnimationDeviceState , and TestProtocol classes to clean up the code and improve maintain
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoft
updated assertions from ` hits ` to ` hits2 ` and ` hits3 ` in ` TestMultiSearcher . java ` to ensure the
added a new file ` LucenePackage . java ` with a private constructor and a static getter method for the Lucene package to provide a
adjusted the decrement operation for the sizeInBytes in RAMDirectory . java to correct the logic for updating the sizeInBytes value
updated calculations in StatsRulesProcFactory , GenericUDAFBloomFilter , GenericUDAFEvaluator , and BloomKFilter classes to improve
added a null check for getDrawerToggle ( ) before adding an animation listener in MainActivity . java to avoid potential NullPointerExceptions when the
added @ SuppressWarnings ( " unused " ) annotation to the convertToAuthentication method to suppress warnings related to the subject parameter
added logic to determine if modules should be scanned based on overridden classpath or class loaders to ensure that modules are only scanned when overridden classpath or class
fix msbibexportformattestfiles corporate author field in bibentry ( # 4396 )
added a method to cancel core recovery in the CoreContainer class to ensure proper management of core states during shutdown
refactor timing calculations in bug5070081 . java to use a new utility method to improve code readability and maintainability by centralizing
removed debug print statements and simplified the condition for selecting auth control options in RepoEditView . java to improve code readability and maintainability by
chore ( core ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added trust resolver , role hierarchy , and default role prefix configurations to SecurityEvaluationContextExtension to ensure proper configuration of security expression root objects when additional
added a check to set exponentSize to primeSize - 1 if it is zero to ensure that exponentSize is always set to primeSize -
replaced instances of ` FileStorageUtils . getSavePath ( ) ` with ` FileStorageUtils . getUsableSpace ( mAccount .
modified the combine method in DistinctSqlAggregation to utilize accumulate for each value instead of delegate to improve performance by reducing the overhead of
added a test method to verify post - login activities for a user authentication success to ensure that post - login activities are executed correctly for successful authentication
refactor ExtractorFramesRare to use a dynamic argument for dictionary path and improve the initialization of ExtractorSpanishStrippedVerb
refactor CharArraySet to simplify code and improve object contains checks to enhance code readability and maintainability by reducing redundancy
corrected the spelling of " track count " to " track count " and updated the check for unsupported track formats to improve clarity and
updated ` JsBundleGenrule ` and ` JsBundleGenruleDescriptionTest ` to use ` AndroidPackageable ` instead of ` JsBundle
added UTF - 8 character encoding to the request handling in StringDictionary and updated related methods in DictionariesTest to ensure proper handling of UTF -
updated case name from " Logical Analyzer " to " Logic Analyzer " and updated drawable resources in InstrumentsFragment . java to improve cl
added static instance variables for vector class names and modified instantiation logic to ensure instances are only created once to avoid multiple instances of the same class
remove syncmetaleader ( ) since it do n ' t do anything
[ fix # 768 ] instructor : show perceived contribution in feedback question ( # 768 )
added TestLoggingExtension to DiagramRendererTest to enhance test logging capabilities for better debugging and monitoring
updated the ` findProperty ` method signatures to include a ` mapUnderscoreToCamelCase ` parameter across multiple classes to enhance flexibility in property name
added VIOMI _ WATERHEATER _ E1 device to MiIoDevices to support the VIOMI Internet electric water
replaced calls to ` getSslSessionData ( ) ` with a local variable ` sslSessionData ` to improve code readability and maintain
add a new file CreateNewSpreadsheet . java to implement and test the creation of a new spreadsheet to demonstrate the use of
replaced ` ttl ` with ` timeToLive ` and updated related methods in ` CacheProperties ` and ` RedisCacheConfiguration ` to improve cl
replaced ` CONTENT _ URI ` with ` CONTENT _ URI _ NO _ NOTIFICATION ` in multiple files to ensure that no notifications are sent
update testCompile group version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the
updated synchronized blocks in SunFontManager to use ' this ' instead of ' lucidaFontName ' to ensure thread safety during font
added a condition to check if the character is an ' < ' character in DocClassUtil . java to ensure proper handling of special characters in
removed String . format call from the return statement in Workspace . java to simplify the code by eliminating unnecessary string formatting
added import statement for Liquibase Scope and sent a message indicating no validation errors were found to improve user feedback by informing users of
updated ` IntegrationTestContextLoader ` to configure web resources using ` DefaultResourceLoader ` and ` FileSystemResourceLoader ` to improve resource loading flex
updated scroll handling logic in Component , Container , and JavaSEPort classes to improve responsiveness and prevent unwanted wheel movements to enhance user
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new class ` ClientStat ` and updated methods in ` StatsService ` and ` DefaultStatsService ` to use ` String ` client
updated the expression replacement logic in CellContentConverter . java to include newline characters to ensure proper formatting of regex patterns in the expression
alexeibarantsev : fix test failure on window
mondrian : fix typo find by codespell on fossies . org
added stack trace printing functionality to ProcessTools . java and modified launcher path handling in CustomLauncherTest . java to improve debugging capabilities and ensure correct
removed the embedded image test method from TumblrRipperTest . java to streamline the test suite by eliminating unnecessary
added a check to ensure the store type has a slot before converting it to ensure the conversion only occurs when the store type is valid
refactor loading logic in ContainerMediaChunk and InitializationChunk for improved clarity to enhance code readability and maintainability by encapsulating initialization
updated import statements and modified IndexWriter initialization in BaseLockFactoryTestCase . java to enhance character encoding handling and improve code clarity
add support for dynamic load option in tika - config ( # 1193 )
added package - info compatibility checks and updated imports in DocLint . java and DocLintTester . java to improve error handling and ensure proper
added a new constant ` IMPORT _ CMD ` and modified conditional checks in ` DataImportHandler ` and ` DataImporter ` to support additional command
added a new test method ` doesNotModifyInnerClassesIfIgnoreDefinitionTrue ` to ` ChangeTypeTest . java ` to ensure that inner
removed unused import of android . util . Log from JettyService . java to clean up the code and improve readability
modified the ` checkItemPlacement ` method to include a ` ArrayList < Long > workspaceScreens ` parameter and adjusted related calculations to enhance
kristianrosenvold : add / quitquitquit to the jetty7 app
refactor the handling of transformed rows in LLRealtimeSegmentDataManager to improve clarity and efficiency to enhance code readability and maintainability
added a check for Windows OS in Tests . java to skip processing for Windows - specific display names to ensure compatibility with Teredo devices
added a check to ensure the protocol provider is registered before adding a contact to avoid potential errors when the protocol provider is unavailable
replaced registerBeanDefinition with registerBeanComponent for user details service factory to improve code clarity and maintainability by using a dedicated bean component
updated the drawBitmap method call to use null for the left and top dimensions to ensure the drawBitmap method correctly handles null dimensions
fix meitrack and totem protocol decoder ( fix # 388 )
changed access modifiers of ` getFontPath ` and ` getPlatformFontPath ` methods in ` SunFontManager ` and ` X11FontManager `
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods are outdated and should no longer be used
[ hotfix ] [ test ] fix clientmapstoretest fail on slow ci server
added a ` keepEmptySentences ` feature to the ` DocumentPreprocessor ` and ` MaxentTagger ` classes to control the behavior
added error handling for artifact subdirectory creation and validation in MavenArtifactFetcher . java to improve robustness and provide clearer error messages when issues occur
removed the ` IDELazyTreeLoader ` class and modified the initialization of ` systemProvider ` in ` ReusableCompiler . java ` ,
add null check for answer in directagentattache to avoid npe
refactor sendEmail method to throw MessagingException instead of logging it to improve error handling and provide clearer logging for email sending failures
added a new API annotation and a null check for contained and stack in PipeItemsObsidian . java to ensure proper handling of null values
updated DateMathParser methods to accept a Locale parameter and adjusted related calls to ensure consistent handling of date formatting based on the specified locale
added a boolean field ` includeDecals ` and associated getter and setter methods in ` StorageOptions ` , and created a ` JCheckBox `
updated the ` generateDocumentation ` method to include a null parameter and added a suppression warning in ` LiquibaseTest . java `
updated HiveProtoLoggingHook and TestHiveProtoLoggingHook to improve performance logging by adding queue configuration and improving performance logging functionality
updated log message from " Begining " to " Beginning " in SolrIndexConfig . java and DocExpirationUpdateProcessorFactory . java to
updated the version check in ignoreRecordAttribute to use a constant for better readability to improve maintainability and clarity of the error message
added a new test class ` LdapPasswordAuthenticationTest ` to validate LDAP authentication to ensure correct handling of user credentials in LDAP contexts
updated the conditional check in TaskCompiler to use BasicStatsNoJobTask instead of OrcInputFormat to enhance performance by restricting footer scan
fix a nullpointerexception when save all . ( # 3649 )
refactor VisibleAdvance class implementation to improve code readability and maintainability
fix # 1305 : make reflector reconnectable ( # 1308 )
added a check for dynamic number columns in EdgeDataTable and NodeDataTable to ensure proper handling of dynamic number columns in Sparklines
added null checks for groupId , artifactId , and version in RawPom . java to ensure required parameters are not null to prevent potential NullPointerExceptions
updated the API assignment logic to handle null APIInfo to ensure proper handling of APIInfo when it is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve code readability and maintainability
added lighting functionality and debug logging in PhotoPanel and FlameRenderer classes to enhance visual feedback during textures and shaders during rendering
updated scene position and added context menu functionality in InsnListEditor and InsnProxyListEditor to enhance user experience by allowing local variable management
updated character validation logic in CSSParser . java to handle cases where the first character is less than or equal to the end of the string to
added functionality to set default look and feel decoration based on application properties to enhance user experience by allowing dynamic decoration settings based on application properties
removed unnecessary ` this . ` keyword from method calls in ` HostRoleCommandDAO . java ` to streamline code by eliminating unnecessary
updated test names in LJ1200Message to include " TOWER TEST " and " F5 _ TRANSPONDER _ TEST _
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance swipe handling logic based on swipe
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to utilize the new ` ColorStorage `
refactor String class methods for improved readability to enhance maintainability and clarity of the code
removed unused Logger imports and constants from multiple Java files to improve code cleanliness and reduce unnecessary dependencies
added a method ` getGlobals ( ) ` to the ` MapGlobalResolver ` class to provide a way to retrieve global entries from the
added multiple assertions to verify the sendcoin method behavior in MultiSign34 . java to ensure that the sendcoin method behaves as expected when
test : migrate cudfiltertest to junit 5 ( # 4358 )
replaced hardcoded path separator with a constant to improve code readability and maintainability
changed the access modifier of the augmentSuccessViewModelObjects method from static to package - private to restrict access to the method for better encapsulation
added assertions to verify presence of properties ' id ' and ' name ' in the Metamodel to ensure that properties ' id ' and ' name
removed the ' conf ' parameter from Outlink instantiation in multiple parser classes to simplify the code by eliminating unnecessary configuration parameters
removed the ` LexicalContext ` parameter from several methods in ` Lower . java ` and ` RuntimeCallSite . java ` to simplify method
added import statements and modified the return statement in UseLambdaForFunctionalInterface . java to include unused imports and ensure proper handling of unused imports
testnganttask : remove unnecessary appendclassselector ( ) call
removed unsupported root input checks for Aggregate in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unsupported
fix miss mapping for registry that do n ' t exist in the registry pool .
reordered assignments of x3 and y3 in the Intersector class to improve code readability and maintainability
added default implementations for ` sbeDecodedLength ` and ` sbeLimit ` methods in ` MessageDecoderFlyweight . java ` to
[ hotfix ] [ test ] use the current elasticsearch version in the test
replaced direct byte array copying with ByteBuffer wrapping in WorkingReceiver . java to improve performance by avoiding unnecessary byte array copying
added version ID handling and updated cluster name and version management in ClusterDefinition . java and GSInstallerClusterProvider . java to enhance cluster management
camel - 14263 : camel - ftp - allow to configure endpoint without need to cast the configuration
[ zeppelin - 3351 ] fix load dependency error ( # 3352 )
modified local variable assignment logic in mmm Gen . java and added NoLocalsMustBeReservedForDCEedVarsTest . java to
added a check to return early if basic constraints are - 2 in ForwardBuilder . java and created a new class BuildEEBasicConstraints . java
added initialization logic for PostgreSQL values with the same time in JdbcPostgresqlDAO to ensure compatibility with PostgreSQL versions prior to 9.5
updated WebSocket configuration and added validation for the input buffer size in AbstractWebSocketConnection to ensure that the buffer size is within a valid range and prevent
removed the ` undeleteAll ` and ` rollbackUndeleteAll ` boolean variables and updated the deletion logic in ` SegmentReader ` to simplify
added null check for scope in ClientRegistration and updated test cases in ClientRegistrationTests to ensure proper handling of null scopes and enhance test coverage for
added null checks before adding parameters and explanations in CartesianProductStream . java to prevent potential NullPointerExceptions when orderBy is not initialized
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t show back - up snapshot when vm be in kvm mode
added a debug log statement to initialize HiveLog4j in HiveServer2 . java to improve visibility into log initialization for better debugging
added a check for tasks size before calling firstElement ( ) in AssetManager . java to avoid potential NullPointerExceptions when tasks are empty
change the return type of deleteNode method from void to boolean in PubSubManager and OpenPgpPubSubUtil to improve error handling by indicating success
fix findbyid ( ) and findallbyfromid ( ) to handle null value
added checks for empty barcode in Code128Reader and Code39Reader , and implemented exception handling in FalsePositivesBlackBoxTestCase to ensure
replaced TreeSet with LinkedHashSet for suites in SSLContextImpl . java to ensure the order of cipher suites is maintained
updated control character validation logic in Escaper . java and modified the expected string in InternationalizationTest . java to improve character handling and
updated the ` ProviderSqlSource ` and ` SqlProviderTest ` classes to use ` StringBuilder ` instead of ` String ` for SQL queries to
added null checks for aliasChildren and improved return logic in InternalMNode . java to enhance robustness by preventing potential NullPointerExceptions during
added a method to calculate layout transition offset for a specific page in PagedView . java and updated scrollDelta calculation in Workspace . java to
corrected the spelling of " synthetic " to " pruned " in JavaTemplate . java to improve code readability and maintain consistency in variable
added a call to setAccessible ( true ) on the method in WidgetInterceptor . java to ensure the method is accessible for access control
added a check to ensure the " database . server . id " field is not set when it equals " database . server . id " to
updated the Mozilla version in AbstractRipper from Macintosh and Intel Mac OS X 10.7 to AppleWebKit
added a new menu item to browse the server ' s IP address in BasicSystemUtils . java to enhance user experience by providing access to the
refactor handling of value and innerThen statements in HandleGetter . java to improve clarity and structure to enhance code readability and maintainability
added error handling for ` Record . buildRecordAtOffset ` in ` EncryptedSlideShow . java ` to improve robustness by handling potential Array
[ hotfix ] [ runtime ] add more logging in queue and filecheckpointio
replaced the call to ` loadBattlePassManager ( ) ` with a call to ` loadBattlePassManager ( )
updated Docker image version from 1.0 . 0 to 1.1 . 0 and modified SSH configuration options in PortForwardingContainer . java to
added a bigObject variable and a call to System . gc ( ) in ThresholdTest . java to force an initial full - gc to ensure
added conditions to check if the log name starts with the name before and after in StdErrLog and updated logger settings in StdErrLogTest
fixed - rremoteserviceloader . getremoteserviceloader ( string ) method throw npe . # 3550
added methods to check if an emblem is selected and set its selected state in MultiButton . java to enhance functionality by allowing toggling
updated the import statement for UpNextActivity to NextUpActivity in CustomPlaybackOverlayFragment . java to reflect the correct activity being used for playback
( chore ) camel - broker : fix checkstyle issue
close reactivereactiveconnections on health check failure
replaced direct background color retrieval with a method to retrieve the theme color using a resource ID to improve code clarity and maintainability by central
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added multiple type adapter registration for various components in ToolingApiLauncher to enhance the flexibility and usability of the ToolingApiLauncher
removed duplicate entries in TestPayloadCheckQuery . java to improve code clarity and maintainability
refactor ConsoleReader to improve character printing logic and add a new test for reading lines with masks to enhance code clarity and ensure correct behavior
added user information to the exit message in BaseCommand . java to improve debugging by providing context about the command execution flow
[ fix ] move test class to api package
[ hotfix ] remove unused constructor in slotsharinggroup
added a condition to check for the " one . util . streamex . emulateJava8 " flag in the StreamExInternals class
updated texture paths in DecalTest and MusicTest to use " data / sys . png " instead of " data / wheel . png
added unregistering of the close system dialogs receiver in Launcher . java to ensure proper resource management and prevent potential memory leaks
updated import statement for Cluster in HostsRemovedEvent . java to ensure proper usage of the correct Cluster class
updated ` reuseRefreshToken ` to true and added ` allowIntrospection ` property in ` ClientDetailsEntity ` , added ` allowIntrospection `
replaced direct calls to ` write ` with ` htmlEncode ` for session attributes in ` HtmlSessionInformationsReport . java ` to ensure
added PhrasePrefixQuery and SpanQuery links to the Query class to enhance query functionality by allowing prefix matching in Phrase queries
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` in ` CommentsInserter . java ` and ` Comments
refactor NoValueOfOnStringType to simplify string concatenation checks to improve code readability and maintainability by reducing redundancy
updated method signatures in AbstractAssert , Assert , DateAssert , and Descriptable classes to use Object instead of A to enhance type safety and
updated the ` ThrowingFunction ` interface to use ` ThrowingFunction < T > ` instead of ` Object ` to improve type safety and
refactor uploaderBehaviour methods to use instance methods instead of static methods to improve code readability and maintainability by centralizing preference management
fix ( prettyprinter ) : do n ' t print final field in constructor
updated BitmapDrawable initialization to use Robolectric ' s newInstanceOf method to improve compatibility with Robolectric ' s Bitmap implementation
corrected the method name from ` isValidSEnding ` to ` isValidEnEnding ` in ` DutchStemmer . java ` to
updated the PageMarkerResources drawable resource from " add " to " current " to accurately reflect the current page indicator state
added a volatile int reinvocations variable and updated logging statements in BasicInvocation . java to track the number of reinvocations for better debugging
updated the calculation of ` topPadding ` in ` DefaultLookAndFeel . java ` to use ` getInnerHeight ( ) ` instead of
added a break statement in the Recognize . java file to terminate the loop when a specific condition is met
added preference management and haptic feedback functionality in multiple classes to enhance user experience by allowing quick feedback on home screen visibility
updated conditional logic for handling formula results in ExcelBatchReader . java and added a new test for text formula functionality in TestExcelFormat . java
immutablefield : fix assignment in anonymous inner class method
added a user agent field to CommaFeedConfiguration and updated HttpGetter to retrieve it from the application settings to ensure the user agent is correctly
added @ XmlAttribute ( required = true ) annotation to AvroDataFormat and BarcodeDataFormat classes to ensure that XML attributes are required for
changed log level from info to debug for file not found messages to reduce log verbosity for better troubleshooting
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated version check logic in BukkitMain . java to use getUniqueID method instead of checking server version to ensure compatibility with newer server versions
updated DefaultRoutesCollector to check for empty includes and include pattern before processing resources to improve robustness by avoiding unnecessary detection of routes based on
added a vertexColor property and modified OpenGL color handling in PShape3D . java to allow dynamic configuration of vertex color settings based on
updated SchemaDotFormatter and DiagramRendererOptionsTest to use a new parameter for primary key column filtering to enhance functionality by allowing filtering of primary
removed the import of Shadow and directly accessed the matrix ' s values in ShadowMotionEvent . java to simplify the code by eliminating unnecessary
changed the package declaration of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck
refactor class handling logic in GroovyEngine . java to streamline class definition handling and improve clarity to enhance code readability and maintainability
add plugin context listener to hawtio - branding - web ( # 1187 )
removed unnecessary print statement from NativeCodeGenerator . java to streamline output for better readability and maintainability
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` to improve
added a new test method ` should _ fail _ if _ actual _ and _ expected _ cause _ have _ different _ types ` to `
removed redundant variables ` flatten ` and ` pack ` from ` AutomaticDependencies . java ` to streamline code and improve readability
updated variable name from requestedScopes to allowedScopes for clarity to improve code readability and maintainability by using more descriptive variable names
simonstewart : add a test to verify that the firefox driver can set the profile in the firefox options and capabilities
added a method to retrieve the route ' s description and updated related classes to utilize this new method for managing route descriptions to enhance the functionality
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a line to set the weight of an edge in ImporterCSV . java to ensure that the edge ' s weight is correctly set for
quota : get cost per month per month in current month ( # 4569 )
updated SQL query to include adsrc and adnum fields in DatabaseMetaData . java to enhance database metadata retrieval by including additional attributes
added a null check for binarized in SentimentAnnotator . java to ensure that binarized sentences are not built by the parser
updated the User class to include additional information about the user ' s state to improve debugging by providing more context in the user ' s representation
replaced the method ` extractBodyAsString ` with a new method ` getBody ` to retrieve the message ' s body to improve code clarity
[ hotfix ] [ runtime ] rename fromexecutionvertex to fromexecution
improve roster access to be able to see if a node be a member of a group
added a reference to " maven . test . classpath " in AbstractJRubyMojo . java and removed unnecessary suppression in Cuc
updated assertions in MethodHandleImpl . java and added a new test method in MethodHandlesTest . java to ensure correct handling of user class signatures
added imports for StopFilterFactory , NamedSPILoader , and HTMLStripCharFilterFactory in CommonGramsQueryFilterFactory , AnalysisSPILoader
updated width and height comparisons in URLImage . java from greater than or equal to equal to ensure image dimensions do not differ from placeholder images
added a condition to check if the name does not start with " META - INF / " before processing to ensure that the class name does not
added background task scheduling for edt support in ImageDownloadService to enhance user experience by allowing background tasks to be executed on the UI thread
updated the expected number of values in StackWalkerTest . java to use VersionCheck . major ( ) > = 22 to ensure compatibility with newer
changed the access modifier of the ` addViewportJob ` method from protected to public to allow access to the method from other classes
removed the ` partitions ` parameter from the ` buildFlow ` method and related methods across multiple files to simplify the flow building process by elimin
removed server restart and exit settings from TestDatabase . java to simplify server state management and improve code clarity
added null and empty checks for block in NodePathsConvertOperator and SchemaQueryMergeOperator to improve robustness by preventing null pointer exceptions and
added functionality to retrieve the total harvesting time in CallInfoFrame and updated related methods in IceUdpTransportManager and TransportManager
updated font drawing parameters in ParticleEditor . java for improved visual consistency to enhance readability and maintainability of the code
added configuration handling for " keyserver _ port " in UpgradeCatalog240 . java and updated related tests in UpgradeCatalog240Test . java to
added a transparent color to the SvgViewerFactory to enhance the visual appearance of the SVG viewer
removed the minSdk attribute from the @ Config annotation in ShadowKeyguardManagerTest and ShadowKeyguardManager to simplify the annotation configuration for better
updated the implementation of the ` containsExactly ` method in ` IterableSubject ` and added a new test in ` IterableTest ` to improve
updated the Bandwidth builder to include refillGreedy capacity and added validation for the key in Bucket4jFilterFunctions . java to
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to improve code clarity and maintainability
added postExecHooks to the transformations in QueryProperties and improved Generator initialization in Optimizer and SemanticAnalyzer to enable post - execution hooks for
added handling for NoClassDefFoundError in REngine . java to ensure proper handling of unsupported features by setting supported to Boolean . FALSE
refactor span handling in TraceFilter and TraceWebFilter to use a new SpanAndScope class to improve span management and ensure proper resource management
updated exception handling to check for null cause before retrieving the message to improve error handling robustness by avoiding potential null pointer exceptions
updated exception handling in CommonsHttpSolrServer to include the base URL to improve error reporting by providing more context about the error
modified landscape setting logic in HSSFPrintSetup . java to ensure print setup record is not set to non - landscape
updated null check in JavaVoidObjectInspector to ensure proper handling of null values to avoid potential NullPointerExceptions
added a validation check for argument names in ArgDesc . java to ensure that invalid argument names do not throw an IllegalArgumentException
added inMemoryBackgroundLocationListener to manage background location updates in AndroidLocationPlayServiceManager to ensure location updates are only requested when the activity is
updated the condition from " primitiveType ! = GL10 . GL _ POINTS " to " primitiveType = = GL10 . GL
trufflestring : do n ' t compare byte [ ] with 0 length
added a method to set the command list in ComboBox to ensure the ComboBox displays the correct command list based on its state
nifi - 3353 : fix nifi - toolkit to correctly escape filename in alias .
updated command string construction in ZkCLI . java to use localhost instead of hardcoded strings to improve flexibility and maintainability of the command
[ wemo ] fix wrong equality check for firmware update progress
added a conditional check for remoteGrpcStatus before posting severe events to ensure that severe events are only sent when the remote build fails
updated method signatures across multiple Java files for consistency and clarity to improve code readability and maintainability
add a new entity id to the entity list in the tick to ensure that the entity is properly associated with the tick
added a new method ` getErrorString ` to handle specific error codes in ` GLSurfaceViewAPI18 . java ` to improve error
added a method to retrieve supported locales in FeatureRegistry and updated InfoRequestHandler to handle unsupported locales to improve error handling and provide clearer feedback on
updated server URI handling in RFC2616BaseTest . java to improve clarity and consistency in URI formatting
added a call to addToHelperList ( ce ) in the construction process to enhance the handling of helper lists in the construction process
pdfbox - 4892 : return - 2 instead of - 1 , a suggest by valerybokov
added security permissions and refactored context class loader handling in Transport and TCPTransport classes to enhance security by ensuring proper access control during class loading
refactor file path handling in ReceiveExternalFilesActivity to ensure proper folder synchronization and directory list population to improve robustness and prevent null pointer exceptions
added a null check for m _ serviceLoaderClassLoader before loading ITestNGListener to avoid potential NullPointerException when m _ serviceLoaderClassLoader is not
removed debug logging statements and simplified the calculation of deltap in TubeCalc . java to improve code clarity and reduce unnecessary logging
added type checking for ` obj ` and modified column addition logic in ` TimelineControllerImpl . java ` to ensure proper handling of ` Node
http : / / issues . apache . org / jira / browse / amq - 4892 - register brokeradminapplication extra component
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` to verify the behavior of SQL
replace ArrayList with LinkedList for peer candidates and adjust peer version checks to improve performance and ensure only valid peers are retrieved
add cycle limit to abstractbuilder so that it do n ' t go into infinite loop
updated ConfigNodeConfig and related classes to utilize a Supplier for RatisConfig and updated retry policy configurations to enhance configuration flexibility and
refactor multiple Java classes for consistency and clarity to improve maintainability and readability of the codebase
added a check for ManagedService before unregistering JMXHelper to ensure JMXHelper is only registered when the class is annotated with ManagedService
tika - 2321 -- fix for hamcrest parser to detect non - unicode entry name .
add a new file TestSplitThruPhiDivMod . java containing modular and division tests to demonstrate the use of mod
added methods to lookup interface types and superclass templates for parameterized types in TemplateRegistry . java to improve type handling and facilitate template registration
updated the constructor parameter from 512 to 1028 in ByteArrayOutputStream . java to optimize memory usage for better performance
added comments to the ` languagesExcluded ` array to clarify symbols that are not yet available for the current locale
increased the size of the byte array in TransferCompletionHandler from a fixed value to 8192 bytes to optimize memory usage by accommodating
replaced instances of ` WindowFocusListener ` with ` WindowAdapter ` in ` SIPCommMenu ` and ` SIPCommPopupMenu
refactor error handling in SemanticAnalyzer to check for null source before throwing SemanticException to improve robustness by preventing potential null pointer exceptions
added scaling functionality to the AABB in SkeletonRenderer . java to ensure proper positioning of the AABB based on the scale
added a method to retrieve the Solr home path in DistributedClusteringComponentTest and overridden the getSolrHome method in BaseDistributedSearchTest
added ComponentScan annotation to SpringWebConfig . java to facilitate component scanning within the application configuration
removed the getAccount ( ) method from UserListItem . java to streamline the code by eliminating unused account handling
added unit tests for the installPackage method in ShadowPackageManagerTest and modified package information handling in ShadowApplicationPackageManager to ensure correct handling of
refactor AvailableSettings class for improved readability to enhance maintainability and clarity of the codebase
added imports and constructors for TransactionCapsule and ReceiptCapsule in TransactionTrace . java to facilitate the initialization and execution of Transaction
add client . shuffle . member . list property to control whether to shuffle member list .
replaced Text with CrawlDatum in SegmentReader . java to utilize CrawlDatum for data processing
refactor JsonDeserializer to improve code readability to enhance maintainability and facilitate future updates
updated TsfileDBConfig and QueryProcessExecutor to use ThreadLocal for fetchSize management to improve thread safety and resource management during query processing
corrected a typo in the error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java
removed unused import of ExecutionContext in TaskletStep . java to clean up the code and improve readability
initialize the title variable to an empty string in Lwjgl3WindowConfiguration . java to ensure that the title is initialized to an empty
added handling for empty response body in AsyncHttpClientCall and a corresponding test in AsyncHttpClientCallTest to ensure that a null response body does not
deprecate ` embeddedserverinstance ` in favor of ` discovery . serverinstance `
move macadapter . registermacevents ( jabrefframe ) from jabrefframe to osx . macadapter . macadapter
rename ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and update its usage to improve clarity
reformatted the conditional statement for better readability in HandlerLibrary . java to improve code clarity and maintainability
changed the visibility of the hideUnprivilegedObjects variable from private to private final to ensure immutability of the hideUnprivilegedObjects
improve logging of threadedacousticscorer and audiodatasourcestest to be fine
added support for saving Giphy Android 11 video files in IOUtils . java to enable compatibility with Android Q and improve video processing
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 556 : serialize
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor logger retrieval logic to use ` computeIfAbsent ` instead of ` putIfAbsent ` to simplify the code and improve readability
deleted the DataOutputOutputStream class and updated import statements in HbaseObjectWritableFor96Migration . java to streamline the codebase by elimin
removed the " hive . stats . column . autogather " configuration from the test cases in TestAcidOnTez . java to ensure
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity for successfully enhanced classes
added a method to retrieve the default provider name and updated JSSE provider names accordingly to ensure compatibility with different provider implementations for different Android versions
added Captor annotation processing for instance fields in MockitoBeforeTestNGMethod . java to enhance testing capabilities by processing Captor annotations
added checks for non - empty class names and non - empty test method names in TestSuiteBuilder . java to ensure that disabled class and method
refactor GroovyAutoComplete and GroovyLanguage classes to improve prefix computation and prefix validation to enhance code clarity and ensure proper handling of Java identifiers
import osm from osm instead of graphhopper in import . java
danielwagnerhall : add retry option to the http client for session handling .
changed the visibility of ` mHideSysUiScrim ` from final to non - final and added preference management for showing top shadow to
refactor ` enqueue ` and ` execute ` methods in ` Call ` and ` OkHttpCall ` classes to improve clarity and functionality of
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and maintainability to enhance swipe handling logic based on swipe
updated the RequestMatcher interface to extend from org . springframework . security . web . util . matcher . RequestMatcher to ensure compatibility with the
added an IF keyword to the DeferredAttr class and created a new abstract class ImplicitLambdaConsideredForApplicabilityTest to enhance conditional
[ j2kt ] fix boxed and boxed primitive equality test for j2kt
added tests for applying qualifier and default density in DeviceConfigTest and modified DeviceConfig to set dimensions based on display metrics to ensure accurate display metrics
replaced IOException with RuntimeException and removed unnecessary reflection in ExternalViewReaderTest , PinotDataTypeTest , and PluginClassLoader to simplify exception handling and
updated the icon resource in the RootCursor from a logo to a mipmap for the launcher to improve the visual appearance of the launcher
added content text to errorBuilder in FileUploader . java to enhance error reporting by displaying the content
refactor ConcurrentHashMap class implementation to improve performance and maintainability of the code
added methods to adapt user trades and fill data in the AbucoinsAdapters and AbucoinsTradeService classes to enhance trading functionality
removed event handling and updated plot claiming logic in multiple classes to streamline plot claimation process and improve player interaction handling
danielwagnerhall : add proxy support to htmlunitdriver for firefox and internet explorer
added support for handling the " varbinary " database data type in BlobType . java to ensure proper handling of VARBINARY data types in the
refactor cookie version handling logic in SetCookieSupport . java to improve clarity and correctness to ensure proper handling of cookie values based on
added synchronization to the ` language ` object to ensure thread safety when accessing ` language . simpleTypeMap ` and ` language . cachedEnvType `
updated InboundBuffer to use ContextInternal and VertxThread for context validation to ensure operations are only called from the Vert . x thread ,
updated timeout handling in LdapTimeoutTest and added deadServerNoTimeout method in Connection and LdapTimeoutTest classes to improve reliability of LDAP connection
corrected the spelling of " UniocdeData " to " UnicodeData " in the Usage message to ensure accurate usage of the
camel - 14284 : camel - cxf - allow to set the operation name of the in - out message header . thanks to
refactor multiple UI classes for consistency and clarity to improve maintainability and readability of the codebase
added support for BoosterSet in ComponentAssemblySaver and modified return value in BoosterSet to ensure proper handling of BoosterSet instances
added proxy authentication support to jabref ( # 4396 )
corrected the spelling of " BLOCKCHAIN __ FORK _ COUNT " to " BLOCKCHAIN _ FORK _ COUNT " and
replaced InternalError with a return value of false in Class . java to indicate that the stub is not invoked for JEP 359 support
replaced the import of Log and Log4JLogger with a static final Log instance in TestIPCUtil . java to improve logging consistency
removed the chunkedTransfer handling from the request processing in NettyRoutingFilter . java to simplify the request processing by directly using HttpClientResponse
added a call to clearAttributes ( ) in PatternTokenizer . java to ensure all attributes are cleared before processing new patterns
modified the VerificationAfterDelayImpl class to include a polling period and modified the verification logic to improve error handling during verification based on the polling period
added compaction functionality to the SemanticAnalyzer and SessionState classes to ensure proper handling of table masks during compaction operations
[ zeppelin - 3550 ] copy interpreter . jar from all zeppelin . jar to interpreter . lib
hbase - 15836 fix checkstyle issue in hbaseadmin / testthriftserver . java ( addendum )
added an @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to timing issues
updated calcXBounds method implementations in BarLineChartBase , CombinedChartRenderer , Renderer , and BarLineScatterCandleBubble
added a try - finally block to release XMLReader in SimpleSAX . java to ensure proper resource management and prevent potential memory leaks
release the headerBuffer from the ByteBufferPool in HttpSenderOverHTTP . java to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` and modified ` Java17TypeSignatureBuilderTest ` to use it
added null and check for closed result sets before closing them to prevent potential NullPointerExceptions and ensure proper resource management
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 in DerbyDatabase . java to ensure compatibility with the latest driver
fixed usestringbufferlength to return false for empty literal .
removed logging of error messages in RemoteSparkJobMonitor . java to streamline error handling by eliminating unnecessary logging
refactor database creation to return a Connection instance to ensure proper resource management and prevent potential memory leaks
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
hbase - 15936 add config for hbase . hstore . compaction . max . size . offpeak to control max compaction size
added handling for the " address " field in BitstampDepositAddress and created a new DepositAddressJSONTest class to improve the
replace IllegalStateException with IllegalArgumentException in BufferingResponseListener to ensure proper error handling when buffer capacity exceeds
updated the method to use ` toAbsolutePath ( ) ` for path conversion in ` linkInDeletedDirectories ` to ensure that the linkPath
updated InvocationFinishedEvent to implement MetricsEvent and renamed operationType to invocationType to improve clarity and consistency in event handling
modified the network interface retrieval logic to check for multicast support to improve robustness by ensuring only supported multicast interfaces are returned
simplified the check for validCheckSum by iterating through validCheckSums before returning true to improve code readability and maintainability
added a clone method to the BufferedChecksumIndexInput class to throw an UnsupportedOperationException to ensure proper cloning of the IndexInput instance
replaced the calculation of ` Math . sqrt ( x * x + y * y ) < = 0 ` with ` x * x *
added a conditional check before setting the frequency band in P25Channel . java and modified the return statement in P25ExplicitChannel . java to
renamed ` tapSquareSize ` and ` inTapSquare ` variables to ` tapRectangleWidth ` and ` tapRectangleHeight ` and updated
changed the default replicate behavior of CFMetaData from true to false to disable replicate operations during write operations
added a lastFillTime parameter to the getCryptoFacilitiesFills method in CryptoFacilitiesAuthenticated and CryptoFacilitiesTradeServiceRaw classes to
added a getDelegate ( ) method to TraceCallable and TraceRunnable classes and corresponding tests in TraceCallableTests and TraceRunnableTests to provide a
updated error response handling and synchronization events in FileActivity and FileDisplayActivity to improve user feedback during folder synchronization processes
added a method to write data to a stream in the ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to
added a boolean parameter to the JavaScriptContext constructor to enable the initialization of the JavaScript context
updated TableCell constructor parameters in BaseTextFormattingHelper and TableCell to remove alignment parameters to simplify TableCell creation and improve code clarity
added a new configuration class TracingAutoConfiguration for Brave tracing to facilitate auto - configuration of tracing configurations for Brave
updated the way a Para is added in the Submissions class to improve clarity and functionality of the Para addition process
refactor ` getPrunedQueryableSegments ` method to accept a list of ` IndexSegment ` objects and adjust segment retrieval logic to improve
[ hotfix ] [ test ] fix typo in vertxbuffertest
refactor MessageSubmissionChunk to improve date parsing logic and add a new TestMessageSubmissionChunk class to enhance code readability and facilit
changed the visibility of the mContext variable from private to protected to allow subclasses to access the mContext variable
removed unnecessary imports from ShowTablesOperation and ShowViewsOperation to streamline code by eliminating unnecessary dependencies
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use it for data integrity checks to improve error handling
[ hotfix ] [ coordination ] fix npe in jobcoordinationservice
updated the method ` bitsToHumanReadable ` to ` bytesToHumanReadable ` and added a new ` mimeType2HUmanReadable `
replaced ` newMergePolicy ( random ( ) ) ` with ` newTieredMergePolicy ( ) ` in ` TestUpgradeIndexMerge
added a conditional check to return early if overview state is disabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
updated error message for CPU binaries in CpuNDArrayFactory . java to clarify the link to the documentation for CPU support issues
modified the ` loadSettingModels ` method to accept an ` InputStream referencePropertiesInputStream ` parameter to enhance flexibility by allowing dynamic loading of reference
added null checks for incoming fields , Terms , DocsEnum , DocsAndPositionsEnum , and LeafReader in FilterTermsEnum to ensure
added key size validation and verification in JceCRMFEncryptorBuilder and AllTests classes to ensure proper key size configuration and improve test coverage
updated exception handling in NetSocketReader and removed unused constructors in SoftEndOfStreamException to streamline error reporting and improve code clarity
removed unnecessary ` @ Inject ` annotations from multiple Java classes to streamline the code by eliminating unnecessary dependencies
updated the expected size in BundledDistributionTest from 9 to 10 and added database user assertions in PostgreSQLTest to ensure the test verifies the correct
[ hotfix ] [ stream ] add pipeline . name option to streamexecutionenvironment
updated the calculation of scale based on the device profile ' s cell layout height and width to ensure correct scaling behavior based on the device ' s
updated IcePlainsBiome to extend SnowyBiome and modified population values for temperature and rainfall to improve the biome
removed timezone parameter from getMinTime and getMaxTime methods in DataUpdateManager and StorageUtils classes to simplify time calculations and improve code clarity
[ j2kt ] add isqualified to thisreference to be able to determine if the type be a qualified type
updated regex pattern in XhamsterRipper . java to allow letters and hyphens in URLs to enhance security by restricting URLs to
fix glowworld . getall ( ) for entity that do n ' t exist
hhh - 14850 - oracledialect . gettablename ( ) should return the schema name if it be null or empty
fix a bug in the flutterconsolefilter ( # 3649 )
added support for selecting and deselecting all files in the FileMenuFilter class to enhance user experience by allowing users to select all available files
[ java ] : use termlengthmask instead of termwindowlength in networkpublication .
fix a typo in the javadoc of guildupdateownerevent .
update inPortalTicks logic in Player and Entity classes to ensure that inPortalTicks increments correctly based on creative type and minimum value
added compression functionality to the ClusterMonitorTileSkin and updated chart pane spacing and text fill settings to enhance visual representation of chart items based on compressed
refactor multiple codec templates to improve code organization to enhance maintainability and readability of the codebase
change variable types from int to long for length calculations in Base64 . java to ensure proper handling of large data sizes and prevent potential overflow issues
removed unnecessary null check for header in RendererConfiguration . java to simplify the condition for better readability and maintainability
cloudstack - 5339 : do n ' t allow volume to be create with the same disk offering on vm with custom service offer
updated import statements in Order . java and HitbtcAdapters . java to use specific Java classes instead of wildcard imports to improve code cl
[ iotdb - 4892 ] fix the problem that llsegmentservice . getidlecount ( ) return wrong value ( #
updated the description URI for the JRuby Scripting service from " jruby " to " jrubyscripting " to clarify the
updated variable name from ` name ` to ` displayName ` in ` ConfigCategory . java ` to improve clarity by using a more descriptive
updated the condition in ParticipateAssetIssueActuator to include a check for negative exchangeAmount to ensure accurate exchange amounts are validated correctly
added a loop to limit the number of iterations in FeedUtils . java to optimize performance by avoiding unnecessary iterations
added a new test method ` testHDF4 ` in ` HDFParserTest . java ` to ensure compatibility with Java 1.5 and
added a new constant ` CALCITE _ 6092 _ FIXED ` and updated test cases in ` SqlOperatorTest . java ` to
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added a method ` quietCloseAll ` to close multiple ` AutoCloseable ` instances to improve resource management by ensuring all closeables are properly
updated the confirmation button string in RemoveFileDialogFragment to use a common yes string to enhance user experience by providing a clearer confirmation message
added a null check for srcWidth and srcHeight before calling drawImage in Pixmap . java to avoid potential NullPointerExceptions when image dimensions are
replaced ` ReflectionHelpers . callInstanceMethod ` with ` Unsafe . class . getMethod ` for defining class in ` UnsafeAccess . java `
updated the regex pattern format in GUIUtil . java and added new test cases in GUIUtilTest . java to improve accuracy of regex validation and
replace boolean conflicts with long conflicts in CachedRowSetWriter . java to simplify code and improve error reporting for row conflict detection
update the version check to use pubspec . yaml instead of version . yaml
added a conditional check before assigning memory in ReferenceMemory . java to avoid potential null pointer exceptions during memory assignment
added functionality to handle seed files in the Injector class to improve robustness by ensuring only valid seed files are processed
added a condition to check if hideOriginal is true before setting the original view ' s visibility to ensure originalView is only shown when hideOriginal
[ unroll ] do n ' t unroll more than the maximum number of node
added logging for texture coordinate type support in CombinedTexture . java and updated UVCoordinatesGenerator . java to check for supported texture coordinates types to
added error handling for file deletion in ` EncodeActivity ` and improved validation in ` DecodedBitStreamParser ` and ` MatrixUtil `
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality by allowing seek and close operations on the delegate
updated SQL update statement to use the oldPrefixLength variable instead of a substring to improve clarity and accuracy in substring processing
replaced ` addAll ` method with ` addAll ` for the ` convertedValsList ` variable to simplify the code and improve readability
added a deprecated constructor to the AbstractTimer class to indicate that the constructor is outdated and should no longer be used
added a warning dialog for nightly builds in MainWindow . java to inform users that the Universal Gcode Sender is a nightly
added a check to return a user _ nobody _ text when there ' s a question in the feedback session
updated the return message in UnnecessaryThrows . java to clarify the removal of unnecessary ` throws ` declarations to improve code readability
deleted CacheApplication . java and updated CommonsApplication . java and ShareActivity . java to replace CacheController with CommonsApplication . cacheData
replaced calls to ` realObject . getApplicationContext ( ) . startService ` and ` realObject . getApplicationContext ( ) . startActivity
refactor StatisticsServlet to improve code readability to enhance maintainability and facilitate future updates
updated RuntimeEnvironment to conditionally update configuration based on SDK version to ensure compatibility with devices running Android KitKat and above
added a new constant for stack repository link existence and a corresponding test in the StackManagerTest to ensure that the correct URI is set when the
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
added a null check for oldIndexName in CFMetaData . java to avoid potential NullPointerExceptions during processing
added " com . sun . org . apache . xml . internal . resolver . helpers . " and " com . sun . org . apache
renamed methods ` save ` to ` add ` and ` persistExecutionContext ` to ` updateExecutionContext ` across multiple classes to improve cl
simplified the handling of loop exit nodes in GraphUtil . java to improve readability and maintainability of the code
replaced RecyclerView with WidgetsRecyclerView in SearchAndRecommendationsScrollController . java and updated related calculations to improve layout consistency and
added a conditional check for terminal support in ConsoleReader . java to ensure that only valid input is processed when the terminal is supported
updated time allowed values from long to int and added timeout checks in LBHttpSolrClient to improve type safety and ensure proper handling of time
added a session validity check in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure the session is valid before flushing on response commit
added null check for columnNames before processing differences in ChangedIndexChangeGenerator . java to avoid potential NullPointerException when columnNames is null
replaced ` java . util . Vector ` with ` ArrayList < RadioButton > ` for managing buttons in ` ButtonGroup . java ` to
updated UserManagerCompat and UserManagerCompatVL to extend UserManagerCompatVM and added a new UserManagerCompatVM class for user creation
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to ` MockDatabase ` , ` AbstractDatabase ` ,
refactor ActionGraphCache to use MapDifference for mismatched rules and improve error messages to enhance clarity of mismatch rules and provide clearer
added LockDatabaseDesc and UnlockDatabaseDesc classes to manage database locking and unlocking functionality to enhance database management capabilities in the application
refactor RankingTopComponent , RankingUIModel , RankingTopComponent , and RankingToolbar to use setter
added handling for DisconnectMessage in HandshakeHandler and updated logging in NodeImpl to enhance the handling of disconnected remote nodes and improve logging clarity
added a test method to set and delete a storage group in IoTDBAuthorizationIT . java to ensure proper functionality of storage group management in the
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added type validation for variable declarations and improved error handling for missing types to enhance type validation accuracy and provide clearer error messages for missing types
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to enable execution of test
[ java ] update countermanager to use utf - 8 instead of utf - 16 .
updated logging statements in MultiSteps and SendEmail classes to use placeholders instead of concatenation to improve readability and maintainability of log messages
added null check and cloning of joinKeys in JoinDesc . java to ensure joinKeys is properly initialized and initialized before use
added a PrincipalResolver to the WebAuthnConfiguration to enhance authentication handling by associating authentication handlers with a specific PrincipalResolver
updated the ` addSettingsFromFile ` method to accept an ` ImmutableList < Path > searchPaths ` parameter and modified the ` XcconfigParser
added ' final ' modifier to several variables in Oracle . java to enforce immutability and ensure immutability of variables
[ hotfix ] [ runtime ] disable unaligned checkpointing until rescaling of unaligned checkpoint be complete
[ calcite - 2321 ] throw unsupportedoperationexception instead of unsupportedoperationexception for invalid query
make compiletheworld test log a little less verbose
added a check to throw a CannotDelambaException for non - LocalVariable instances to ensure proper exception handling for invalid local variable types
added support for MySQL in CreateTableGenerator to handle NULL values for timestamp columns to ensure proper handling of timestamp values in MySQL databases
added context class loader management in EnvConfiguration . java to ensure proper resource management and avoid potential memory leaks
added a condition to set the Ejection Delay in the SimulationListHandler if stageNr is zero to ensure that the Ejection Delay is
renamed ` FunctionalRunnerConfig ` to ` BeanDefinitionOrderRunnerConfig ` and updated related method names to improve clarity and consistency in
refactor TransactionUtil2 class to improve code readability to enhance maintainability and facilitate future updates
refactor ` BaseTokenSigningAndEncryptionService ` to accept an ` Optional < OAuthRegisteredService > ` parameter for better service resolution to enhance
added null check for the DocCollection reference before returning its string representation to avoid potential NullPointerExceptions when coll is null
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` in `
added methods to retrieve foreign database and schema names in ForeignKeyColumn and related classes to enhance flexibility in handling foreign database and schema names in the
[ java ] throw a clusterexception when a new leader fail to join live log .
replaced static import of ` Shadows . shadowOf ` with a direct method call in ` ShadowActivity ` and ` ShadowBluetoothDevice
refactor selection root handling in FileSelection . java and add a new test case in TestBugFixes . java to improve error handling and
deprecated the ` onInventoryTick ` method in ` IForgeItem ` and ` IForgeItemStack ` classes , and added a
refactor export to use a zip output stream instead of a file output stream .
added a null check before calling invalidateOptionsMenu ( ) in SingleUploadFragment . java to avoid potential NullPointerException when getSherlockActivity ( )
updated options handling in AppsCustomizePagedView and Launcher classes to utilize a new bindOptions variable to improve flexibility in
added new capability constants and constants for air pressure , quality , and co2 PPM in EcobeeSensorThingHandler . java to enhance
refactor code formatting and improve readability in OperationSetServerStoredContactInfoFacebookImpl . java to enhance code clarity and maintainability by
added environment variables " AAPT " and " AAPT2 " to the environment variables in Genrule . java and GenruleTest . java
truffle : add condition to dump access table only when truffleinstrumentbranches be enable .
added a null check before disposing the message to avoid potential NullPointerException when disposing the message
updated access modifiers and initialization methods in TronStoreWithRevoking , TxCacheDB , and TransactionCache classes to improve encapsulation and
updated warning messages in CoreContainer . java to clarify that LogWatcher is not yet implemented for log4j and will be disabled to
replaced printStackTrace ( ) calls with fail ( ) and return statements for cloning failures in CategoryPlotTests . java to improve error handling and
replaced ByteArrayOutputStream with SmallByteArrayOutputStream in IOSImplementation . java and added a new SmallByteArrayOutputStream class for handling byte arrays to
* shader . getattribute ( vertexbuffer . type ) now use intmap instead of hashmap for attribute
updated JDBC connection configuration from " jdbc : derby : ; close = true ; territory = en _ US " to " jdbc : der
updated handling of " FirstExchangeCompletedTimestamp " and " LastExchangeCompletedTimestamp " to check for null values before casting to Date to improve robust
updated javadoc method parameters and added new output checks in TestUseOption . java and TestHtmlTag . java to enhance clarity and functionality of
updated the condition to check if the result is incomplete and the size of items exceeds 10 to ensure that the completion process only processes items that are
updated command - line argument handling for time column name in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and functionality of the
updated output format handling to specify the file extension based on the output type to ensure compatibility with different file extensions for different output formats
updated condition to check for QSB visibility in DeviceProfile . java to ensure proper handling of QSB behavior based on device settings
added ` equals ` and ` hashCode ` methods to ` AnimationList ` and updated equality checks in ` SceneKey ` , ` Gltf
added a date buffer and a setter method for it in AbstractGenerator , and updated HttpGenerator to set it in HttpGenerator to improve date handling
replaced Adler32 with CRC32 in Store . java to improve performance by using a more efficient CRC32 implementation
fix xen . heartbeat . interval config value for self - fencing
added a new warning constant for zero area FIN and updated geometry warning handling in FinSetCalc . java to improve clarity and functionality of geometry
replaced Jackson annotations and added a new ` DocumentMetadataSerializer ` class to handle serialization of ` DocumentMetadata ` to streamline JSON serialization
hhh - 14625 add trunc ( ) and datetrunc ( ) function to h2dialect and oracledialect
added error handling for memory pool not found errors in MetricUtils to improve robustness by providing clearer error messages related to memory pool issues
added a boolean parameter ` useJavaScript ` to the ` UserContext . ensureSignedUp ` method and improved exception handling in ` UserContext
updated error messages in ValidationTask . java to use classNameWithEnclosingNames ( ) instead of ConfiguredBy and PrototypedBy to improve
[ te ] fix anomalies endpoint to be replay
replaced instances of DataWord ( ) . getData ( ) with DataWord ( 1 ) . getData ( ) and added a new proposal ID
refactor app update logic to use getChildAt instead of getAdapterItems and applyBadgeState for BubbleTextView to improve code clarity
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated context start logic in ResourceHandlerTest . java and ServletContextHandler . java to correct the behavior after ContextHandlerCollection is started to ensure proper
removed conditional check for workspace identifier in Cling . java to simplify code logic for better readability and maintainability
truffle : remove assert that lookupmodule be not null .
added an @ Ignore annotation to the shadowInvocationWhenChildIsInstrmentedButUnshadowed method in ClassicSuperHandlingTest . java
updated import statements to use the correct package structure for ItBit classes to ensure compatibility with the latest ItBit library structure
ww - 4352 fix nullpointerexception in profilingactivationinterceptor and scopeinterceptor
added private constructors to Utils , ApplicationUtils , AsyncSocketFactory , and Whois classes to enforce immutability and prevent instantiation issues
server : fix npe in regionsapiutil . getuserbyaccountid ( ) when the inputstream can not be read
updated serialization methods to use " java . util . Vector " and " java . util . Hashtable " instead of their class names to improve cl
added table name with type to warn log for invalid retention time to provide more context for debugging and troubleshooting
added trim ( ) calls to fragmentList . get ( 0 ) . length ( ) in QueryExecutorImpl . java to ensure that only valid
fix resourcepackfilenotfoundexception when modfile do n ' t have a resource pack file
refactor TransformerBuilder handling to improve clarity and structure to enhance code readability and maintainability by using a more descriptive variable name
modified conditional logic for scrolling in RecentsView . java to ensure proper handling of task views when displaying as grid
updated the ` calculate ` method to return a ` BMIViewObject ` instead of a ` Map < String , String > ` to enhance
removed the use of ` Comparator . comparing ` for the ` thenComparing ` method in ` QueryCommand . java ` to simplify the code
fix hay bale not be able to damage their damage . close # 259
updated environment variable handling and logic in WindowsProcessAddressSpace , J9DDRImageProcess , NewElfDump , and NewElf
added support for customizable plugin properties in OptionsParser to enhance flexibility in configuring form properties based on user - defined arguments
hive - 14836 : hashjoinbatch . gethashtables ( ) should return empty list instead of null ( gopal v ,
updated timestamp validation logic in ` Timestamp . java ` and refactored test methods in ` TimestampTest . java ` to improve accuracy of timestamp
[ java ] do n ' t reuse archive context in cluster service agent .
added a condition to check if the compiled flag is false before processing the COMPILE _ THRESHOLD condition to ensure that compilation conditions are
added test methods for image2 and image2Joined in multiple online test classes to enhance testing capabilities for image processing and join functionality
refactor TogglableFlag to use a constant for the launcher namespace and update related methods to improve code readability and maintainability by
updated log messages in DockerClientFactory to include placeholder placeholders to improve clarity of log messages for better debugging and debugging
added a check to return early if the current device is Android to optimize performance by avoiding unnecessary processing on Android devices
updated assertions in RoutesTest to use assertThat instead of assertEquals for improved readability to enhance code clarity and maintainability by using
added new interfaces BytePredicate , FloatPredicate , and ShortPredicate , and FloatToLongFunction to the package com . speedment . common . function
updated methods in PmsConfiguration , FFMpegVideo , MEncoderVideo , and VLCVideo to return a String instead of an int
added a conditional check before deregistering the invocation registry to ensure the invocation registry is only deregistered when the future completes successfully
replaced the creation of ControlFrameBytes with a direct call to output in AbstractWebSocketConnection . java to simplify the code and improve readability
added a check for the " redirected " flag in the intent before starting the WelcomeActivity to ensure that the WelcomeActivity is only started
added ShadowCheckedTextView to manage checked state in Robolectric tests to enable testing of checked state functionality in the Robolectric
added Serializable interface to ParserState and made GETTER _ CACHE transient in AccessorProperty and Property classes to ensure proper serialization of ParserState and
added a new certificate entry for " identrustdstx3 [ jdk ] " in VerifyCACerts . java to enhance security
removed redundant setting of TEMPDIR _ CONFIGURED and TEMPDIR in WebInfConfiguration . java to streamline code by eliminating red
added nick parsing functionality in Occupant . java and updated test case in MultiUserChatTest . java to ensure correct nick is used
updated QuicConnection , QuicSession , QuicSession , QuicConnection , QuicSession , QuicConnectionId , and Qu
updated MergeScheduler and merge policy settings in CreateIndexTask . java to use LogMergePolicy to ensure proper handling of merge policies in the writer
refactor character type handling in ICU4JImpl and TextPosition classes to improve readability and maintainability to enhance code clarity and ensure
added handling for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange . java and AbstractDatabase . java to improve default value handling
refactor NbtScoreboardIoService class for improved readability to enhance maintainability and clarity of the codebase
refactor SAML2 metadata handling to simplify resource validation and improve error logging to enhance code clarity and ensure metadata is only stored if the resource
changed the visibility of the ` printer ` variable from private to protected and refactored the ` createPrinter ` method in ` GraphPrinterDump
added calculation for average price in HuobiAdapters . java to ensure accurate order price representation based on field amount
updated projection handling in ProjectionOperation and TypeBasedAggregationOperationContext to use the target field instead of the name to improve clarity and consistency in
modified the addViewer0 method to return false if the player is not in the viewers list to ensure that the player is not added to
added constant state management to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to improve drawable state management and ensure proper layout handling
refactor SPDYClient to improve connection handling and session creation to enhance code clarity and maintainability by consolidating connection creation logic
[ 3.0 ] fix protostuffobjectoutput . writeobject ( null ) throw npe
pdfbox - 4892 : fix formatting , a suggest by valerybokov
refactor BarrowmanCalculator class implementation to improve code readability and maintainability
added a conditional check to return early if axes are not visible in the view to improve performance by avoiding unnecessary rendering when axes are not shown
replaced calls to ` setFilter ` and ` setWrap ` with unsafe methods ` unsafeSetFilter ` and ` unsafeSetWrap ` to improve
[ ds - 3852 ] fix checkstyle issue in xmlworkflowserviceimpl . java
added SSL support for HTTPS connections in CustomUrlJob . java and created a new class CustomUrlTrustEverything . java to enhance security by
updated clock rate handling in EncodingConfigurationTableModel and added getRealUsedClockRateString method in MediaStreamStatsImpl and MediaFormat classes to improve
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
updated the method to return the module name instead of the product name in ProjectGenerator and added a method to set the module name in Apple
added locking and releasing functionality to the registry in TestSlot . java to ensure thread safety during release operations
# 113 - add support for type . id _ list in sqltreebuilder ( # 113 )
updated WebSocket response header handling and streamlined reading logic in WebSocketServletRFCTest . java to improve clarity and maintainability of the response
[ wasm ] do n ' t clear the reference stack when yield an expression .
[ type : fix ] add ttl option to clickhouselogcollect client
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD in CustomChangeWrapper and added new serialization methods in CustomPreconditionWrapper
replaced the usage of ` QueuedThreadPool ` with ` Server ` and ` HandlerCollection ` in ` DeploymentExceptionTest . java ` to
added error handling for Fresco initialization and VectorDrawableCompat creation in CommonsApplication and NearbyController to improve robustness by handling
modified the return statement to check for non - null and non - empty objects before trimming the objectName to improve robustness by avoiding potential
updated exception message from " could not find file " to " could not open file " in Command . java and TestPrint . java to improve
[ hotfix ] [ table - planner - blink ] change plannerclass and executorclass to static final string
updated variable names and subject assignment logic in KeyTool . java and added null checks in Resources . java to improve code clarity and ensure robust
added a deprecation annotation to RuntimeOptions . java to indicate that the class is outdated and should no longer be used
replaced manual byte array encoding with direct string conversion using UTF - 8 encoding to simplify code and improve performance by eliminating unnecessary byte array
added a new interface ` PermissionEvaluator ` for permission evaluation to provide a mechanism for determining if a user has permissions based on authentication
added a new option ` ERASE _ LINE _ ON _ FINISH ` in ` LineReader ` and implemented cleanup logic in ` LineReader
change the condition from checking if the server is online to checking if it is not already online to ensure that the server is only considered online when
replaced error types from SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED with BLOCK _ SIGN _ ERROR and
refactor ExpandWar . java to use URLConnection for JarFile and improve resource management to enhance reliability and maintainability of the code by
catch throwable in defaulthttpclient . decoderesponse ( ) and log error in fullnettyclientresponse . decoderesponse ( )
updated the container centering method in Picker . java from centering to centering absolute to improve layout consistency by aligning the container with
[ hotfix ] [ network ] fix memory leak in networkbufferpool
refactor MBeanServer initialization and release it in TestJmxIntegration . java to ensure proper resource management and prevent potential memory leaks
replaced JUnit runner annotations with RetryTestRule in AbstractIT . java to improve test reliability by integrating RetryTestRule for better
refactor QueryStateMachine to remove the autoCommit parameter and streamline transaction commit logic to improve clarity and maintainability of the transaction management
updated import statements for ` Primitive ` , ` CsvFieldType ` , ` CsvTable ` , ` CsvTableScan ` , and ` CsvTest
added support for " javax . microedition . khronos . opengles . GL " in the DistinguishedNameParser
[ hotfix ] [ runtime ] remove unused processingtimecallback from streamtasktimertest
refactor request URI handling and add tests for CONNECT requests in Request . java and RequestTest . java to improve URL construction logic and ensure correct
updated references to KEY _ LAST _ SEEN _ VERSION _ CODE to WhatsNewActivity . KEY _ LAST _ SEEN _ VERSION _
added methods ` sessionAvailable ` and ` sessionUnavailable ` to ` SessionManager ` for managing available and unavailable sessions to improve session management functionality by
added a package to scan for " liquibase . pro " in the ServiceLocator to facilitate the installation of Liquib
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider ` to streamline the deletion
updated the ` loadWithNewGlobal ` method to include an additional argument array to enhance functionality by allowing dynamic argument handling in the global loading process
updated method calls to use ` startIdx ` instead of ` startIdx ` in ` FastPathResolver . java ` to ensure correct handling of relative path
updated the method calls from ` length ( ) ` to ` getRetainedSize ( ) ` in ` HiveClientModule . java ` to
updated method names from ` hasRandomizedType ` to ` hasAlreadyRandomizedType ` across multiple classes to improve clarity and consistency in naming con
drill - 3596 : throw unsupportedoperationexception when use lead / lag function with offset literal
added a call to clear the proxy request headers in AbstractProxyServlet . java to ensure the proxy request headers are reset before processing new requests
added a check to skip processing if SA attach is not expected to work in CompressedClassSpaceSizeInJmapHeap . java to ensure
added null checks for ` bgColor ` in ` GraphicsDevice . java ` and created a new ` TranslucentWindow . java ` class
added error handling for null user information in UserInfoActivity to improve user experience by providing clear error messages when no user information is available
added custom serialization and deserialization for precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers can be used on different machine
[ flink - 20625 ] [ table - planner - blink ] support update - mode in append mode in kafka connector
added a new test class MultipleOutputsIntegrationTest for testing multiple output groups to ensure proper functionality and functionality of named output groups in the project workspace
updated regex pattern and content formatting in FileSettings . java to improve readability and maintainability of the code
nifi - 1885 : fix bug in statelesscontrollerserviceinitializationcontext that cause a nullpointerexception
replaced instances of ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY ` in ` BinaryCipherExecutorTests
added @ TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode for testing purposes
added new device status entries for " leaving - dock " , " energy - save - mode " , and " energy - save - mode "
improve error message when item model can not be load
added JUnit Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
pdfbox - 4892 : return 1 on 2x , a suggest by valerybokov
refactor RussianLowerCaseFilter class implementation to improve code readability and maintainability
removed server and client properties from CsvBulkLoadToolIT and updated setUpTestDriver to use EMPTY _ PROPS instead of server properties to simplify
added replacement for file separator characters in displayName to ensure consistent formatting of display names across different operating systems
* wavloader now implement seekablestream for wav file
added a new boolean parameter ` repeatFirstLineIndent ` to the ` setIndent ` method and modified indentation logic accordingly to allow for flexible
cast the oid comparison to Object type before comparing it to ensure proper type handling for equality checks
removed duplicate code for setting metric tracker and registry in HikariPool . java to improve code readability and maintainability by reducing red
use anchored controlflow instead of anchor node for loop .
added a call to setFocusPainted ( false ) for buttons [ i ] in WindowsPlacesBar . java to ensure focus is not painted
added support for ` UniqueConstraint ` and ` PrimaryKey ` in ` DatabaseSnapshot ` to ensure proper handling of the ` backingIndex ` field
deprecated the ` getAccountLedgersWithParams ` method in ` KucoinAccountServiceRaw ` and added a new endpoint in ` AccountAPI `
[ ds - 3892 ] allow empty dc . title mdv in community admin group creation
added a check for non - negative words before returning the HypothesisUtterance in GapInsertionDetector . java to ensure
added unit test base on user forum issue
updated thread setting from background threads to database update threads in FeedRefreshUpdater . java and added database update thread getter and setter methods in ApplicationSettings
increased the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 milliseconds in RecyclerViewFastScroller . java to improve
updated the initialization of SystemClassName to use " Ljava / lang / System ; " instead of MetaUtil . toInternalName to ensure correct
hhh - 13644 add getresultstream ( ) method to procedurecallimpl interface and add unit test
added a null check for the API properties before retrieving it to avoid potential NullPointerExceptions when accessing the API properties
added BinaryFrameGenerator and TextFrameGenerator classes for WebSocket frame generation to enable handling of binary and text data in WebSocket communications
danielwagnerhall : use seleniumwait instead of localdriver . findelement ( by . id ( ) ) .
simplified the calculation of lat and lon in RandomGeo3dShapeGenerator . java to improve clarity and maintainability of the random
added a keepAlive method to the ClassLoader class to prevent memory leaks during resource loading
changed the return value from false to true in SQLiteDatabase . java to reflect the correct functionality of the method
updated bug reporting logic to distinguish between " Ljava / util / concurrent / " and " Ljava / util / concurrent / CopyOnWrite
added MkdirStep functionality to AndroidAar , AppleBundle , and ApplePackage classes to ensure necessary directories are created for output files
updated coordinate comparison logic in MeshLeveler . java to use ' y ' and ' x ' instead of ' y1 ' and ' x
[ drools - 4892 ] skip kie - pmml parsing and compilation if jpmml library be available on classpath ( #
updated the condition for locationMode from locationMode to thermalStatus in ShadowPowerManager . java to ensure accurate validation of the thermal status
added a conditional check for the operating system before creating temporary directories in MountableFile . java to ensure temporary directories are only created on macOS
added a condition to check for memory mapped buffers in the PrjFileReader and CatalogManager classes to ensure compatibility with Windows OS when using memory
added a null check for the organization in the PluginManager class to ensure that Plugis are required to have an organization in the pom .
removed contributor license agreements from SepPostingsWriterImpl . java to improve clarity and maintainability of the code
deleted the TerminateWebSessionListener . java file to the functionality is no longer needed in the codebase
updated the method to use the Java class path from the system property instead of an empty string to ensure the process execution uses the correct Java class
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for ` cryptKeyInit ` , ` crypt
added a new test method ` dontChangeJavadoc ` to ` AddLicenseHeaderTest . java ` to address issues related to Javadoc change in the
changed the default value of LAUNCHER3 _ PHYSICS from false to true to enable the LAUNCHER3 _
added a new div class ` noPrint ` to the ` HtmlThreadInformationsReport ` class in ` HtmlThreadInformationsReport . java
updated the main version of Lucene from 3.1 to 4.0 and updated version constants in Version . java to reflect the new version
added private fields for symbolicator and task in BsdDebuggerLocal . java and modified OS condition in PlatformInfo . java to enable proper handling
added WeakReference to NetHandlerPlayClient and updated related references in FMLClientHandler and FMLIndexedMessageToMessageCodec to improve memory
do n ' t log networkdispatcher exception when connection reset by peer
[ java ] use default conductor byte buffers if no context be available .
added a break statement in TouchImageView . java to terminate the loop when a specific condition is met
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
removed SSL handshake listener from FeedableBodyGenerator . java to simplify the code by eliminating unnecessary SSL filter handling
added type checks for " java . lang . Object " and " java . lang . GenericTypeVariable . Variance . CONTRAVARIANT
replace NonBlockingHashSet with ConcurrentSkipListSet in memtablesPendingFlush to optimize performance by avoiding blocking operations
added null check for tree . errs before calling memberEnter in MemberEnter . java , and modified error counting logic in JavaCompiler . java to
change the background color of the browser from NO _ BACKGROUND to NONE to improve the visual appearance of the browser
updated the button method from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure
fix integerstamp . ops . getdiv ( ) to handle negative value
added a private method ` readStream ` to read an input stream into a byte array to improve code readability and maintainability by centralizing
added methods to define and undefine variables in the SwitchCompiler and ExprGenerator classes , and modified CaseStmtToken to extend StmtToken to enhance
added error handling for initialization of the cipher provider in RSAClientKeyExchange . java to improve robustness by preventing application crashes due to
added " psapi . lib " to the AdditionalDependencies list in WinGammaPlatformVC10 . java to include additional library dependencies for improved
updated string comment handling and test assertions in StringUtils and StringUtilsTest classes to improve clarity and consistency in handling line separators
added incompatible improvements and default encoding settings in TemplateEngineFreemarker and updated malicious javascript string formatting in ApplicationController to
replaced ByteArrayInputStream with a direct byte array conversion in CRDGeneratorTest . java to improve performance by avoiding unnecessary byte array creation
make field final for samplesenderfactory . holdsamples and type final
added a check for the " testngEmailableReporter " property before adding it to the Reporter to ensure that the EmailableReporter is only
added handling for quoted characters in CommandLineBuilder and updated test assertions in CommandLineBuilderTest to ensure correct quoting behavior and improve test coverage for quoted characters
removed the ` public ` access modifier from several interfaces in ` Clock ` , ` DelegatingGauge ` , ` MetricProducer ` , and `
added job . setNumReduceTasks ( numFetchers ) to FreeGenerator . java to configure the number of reduce tasks for the job
update schemageneratorhelper to use getfielddefinition ( ) instead of getobjectfield ( )
updated the FILEVERSION value from " 505365 " to " 532077 " to reflect the new version of the application
added support for " OES _ texture _ float " and " GL _ ARB _ texture _ float " extensions in FloatTextureData .
add fileserver . write ( ) and fileserver . closefile ( ) to be thread - safe
added a null check for outputDirectory and jarStream before setting its output directory to avoid potential NullPointerExceptions when outputDirectory is not set
added PerfStatsCollector import and modified the return statement in ShadowSQLiteConnection . java to include performance measurement for SQLite execution
updated JDK tool references from getCurrentJDKTool to getTestJDKTool in JMapHProfLargeHeapTest and JDKToolLauncher to ensure
[ geos - 8470 ] add a new enum for resource error handling .
added a conditional check for buffer position in RAMInputStream and implemented a test for EOFException in TestRAMDirectory to ensure correct buffer position handling and
updated error handling to include additional context for missing resources in DefaultServlet and JspServlet to improve error reporting by providing clearer context for missing resources
modified ForkJoinPool and ForkJoinWorkerThread constructors to include an innocuous parameter and added a new AccessControlContext class to enhance security
updated CHECK _ EVERY _ N constant and modified memory check logic in Caches . java to improve performance by reducing unnecessary checks and logging
hbase - 26958 remove redundant call to hregion . openhregion ( ) in testsplittransaction
added null check for currentSelectionArea before enabling selection in CompatibilityEngine . java to prevent potential NullPointerException when currentSelectionArea is not
added a parameterized test for Jaas demo in DemoModulesTests . java to verify the functionality of Jaas integration in the DemoModules
added conditions to check spanX and spanY before creating a folder in CellLayout . java to ensure that folder creation only occurs when spanX
refactor CacheOffHeap class implementation to improve performance and maintainability of the code
improve error message when create a table depend on another table with a higher id
added a conditional check for ` currLayerHeight ` before parsing XML gid values and logging a warning if extra XML gid values are ignored to improve
made the setWorkingSet method synchronize to ensure thread safety when modifying the setWorkingSet method
added a new Java class to calculate the final number of steps based on input to implement a solution for determining the final number of steps based on
feat ( tracker ) : add address checker to detect bad torrent ip
fix multilayermodel rendering for translucent rendering
remove the default tag from the config element comment if it ' s present in the tool tip .
changed the data type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType ` and updated references in `
added null check for recieptents before mailing to avoid potential NullPointerException when recieptents is null
refactor issingle logic into a separate method to improve code readability and maintainability
added a new method ` client ( boolean failFast ) ` to ` DockerClientFactory ` and updated logging in ` RemoteDockerImage ` to
added a ` resourcesMode ` parameter to the ` AndroidMetadata ` constructor and its usage in ` RobolectricTestRunner ` to allow
hive - 14836 : historicprocessinstancequeryimpl should use calendar . getcurrentdate ( ) instead of dateutils . truncate (
replaced ` gradleImporter . importProject ( projectFile ) ` with ` gradleImporter . importProjectCore ( projectFile ) `
added handling for CommandFailedException in LiquibaseCommandLine to improve error reporting for command failures
refactor TreeMap class implementation to improve code readability and maintainability
added methods to enable or disable asynchronous stack traces in the Display class and implemented exception handling in DebugRunnable to enhance asynchronous stack trace functionality and improve
added a method to set the Glow color in BubbleTextView and set it in Folder to allow customization of the Glow color
added style classes for link and desc in LinkedFilesEditor to ensure proper styling of link and desc elements
added a test for class matching in ResultSetMetaDataTest and modified AbstractJdbc2ResultSetMetaData to include a new test for class matching to ensure correct
removed unnecessary file deletion logic in Lucene40LiveDocsFormat and SimpleTextLiveDocsFormat to streamline file writing process by eliminating
added null check for _ info before checking its status in HttpConnection . java to avoid potential NullPointerException when _ info is null
added a constructor to ShadowLocation that accepts a provider string to enable customization of the provider for the ShadowLocation class
added a condition to check if deviceRam is less than or equal to 2048 in the 32 - bit device condition to ensure that the maximum
add empty _ local _ map _ stats when map do not have data
added logging functionality to FileProfileActivator to enhance debugging capabilities by providing detailed file existence and missing checks
update the error message in addToBody from " noname1234 " to " invalid _ " in PdfWriter . java to improve clarity and
changed the type of the ' roles ' key from List to Set in GuildImpl . java to ensure the ' roles ' key is consistently
updated the return value in ExpandableUploadListAdapter from - 1 to 1 and changed the array size limit from 30 to MAX _ NUM _
added assertions to verify the deletion of records in DashboardUserMapperTest to ensure that the deletion logic correctly verifies the expected behavior of the delete method
update instructorfeedbackresultspagedata to use primaryparticipantidentifier instead of recipientidentifier
refactor address handling in LLVMDerefHandleGetReceiverNode , LLVMPointerStoreNode , and LLVMStoreNodeCommon
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for external use
updated the ` @ CommandLine . Command ` annotation to include ` usageHelpAutoWidth = true ` and modified the ` @ Option ` description to
updated switch statement formatting in DrawerActivity . java to improve code readability and maintainability
refactor CommandLineParserTest to improve test coverage to enhance reliability of command line parsing functionality
added animation effects for ALL _ APPS and SCRIM states in QuickstepAtomicAnimationFactory and changed visibility of constants in Portrait
updated the method to use ` javaNameFromExternal ` instead of ` javaName ` to improve clarity and consistency in naming conventions
removed native methods for setting and frame parameters in CWrapper . java to streamline the code by eliminating unused native code
added constant reference validation in mmm Checker . java and created a new ValueTest . java class for testing to ensure proper handling of references and
updated test classes for MontgomeryMultiplyTest , TestMulAdd , and TestSquareToLen to improve consistency and clarity in
removed null check for constructors in PojoUtils . java to simplify code by eliminating unnecessary null checks
refactor JiraConfiguration class for improved clarity to enhance maintainability and readability of the code
updated string representation from " [ FAILED ] " to " ( FAILED ) " and " ( COVERAGE ) " in UploadBuild . java
updated bounds calculations in DeviceProfile . java to use getSearchBarTopOffset ( ) instead of 0 to ensure proper positioning of the search bar
fix pulseaudiosimpleprotocolstream . disconnect ( ) to not schedule next disconnect if idletimeout be 0 .
refactor overview command logic to run on the UI thread to ensure UI updates occur on the main thread for better responsiveness
removed redundant ` getSourceGroupOptional ( ) ` and ` getSourceGroup ( ) ` methods from ` AppleSource ` class to streamline code
increased sleep duration from 220000ms to 320000ms and increased timeout from 60000ms to 90000ms in TestSimTrigger
updated variable names from outputPositionCount to positionCount in FloatSelectiveStreamReader . java to improve clarity and consistency in variable usage
added null checks for ` startNode ` and ` bestSoFar ` before returning an ` Optional ` to improve robustness by avoiding null pointer exceptions
added a condition to skip processing for specific UI components in ResourceEditorView . java to improve performance by avoiding unnecessary processing for specific UI components
replaced ` UiThreadHelper ` with ` LauncherModel ` in ` DragView . java ` and ` FloatingIconView . java
added a null check for commitPoint in ReplicationHandler . java to ensure commitPoint is initialized to the latest commit when it is null
added tests for IMEI and MEID retrieval in ShadowTelephonyManagerTest and implemented corresponding methods in ShadowTelephonyManager to
simplified the debug method in SimpleHostRoutingFilter by removing unnecessary request debug statements to improve code readability and maintainability by reducing
added ` destory ( ) ` methods to ` OfflineResourceDataManager ` , ` IndexSegment ` , and ` BitmapInvertedIndex `
[ rip - 10 ] fix the test failure of normalmessagemessagesendandrecvit
replaced ` Charset ` with ` StandardCharsets ` for UTF - 8 encoding in ` StatVisualizer . java ` to improve code readability and
hbase - 25713 bulkloadhfiles should throw ioexception instead of multipleioexception when check if bulk load be ok
added a nullable ` commission ` field to ` DefaultWithdrawFundsParams ` and updated related constructors in ` RippleWithdrawF
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and improve readability
refactor exception handling in LoadSolrBuilder and SolrLocator to include both IOException and SolrServerException to improve error handling clarity and maintainability by
added a check for abstract methods in Java2TypeScriptTranslator and improved error handling in OverloadTests to ensure that abstract methods do not
added logging functionality to the FileSessionDataStore ' s sweepDisk method in TestFileSessions . java to improve traceability and traceability of the
added Serializable interface and modified access modifiers for XML , HTML32 , and HTML40 fields in SqlDataType and Entities classes to enhance serialization support and
rename SubExactLConstantTest and SubExactLNonConstantTest files to improve clarity and consistency in naming conventions
added a null check for claimRequestString before parsing it to avoid parsing errors when the claimRequestString is null
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility and maintainability of the code by util
updated type hint handling in UpdateMapper and added tests for null values in UpdateMapperUnitTests to improve type safety and ensure correct mapping of null
replaced CoreAdminResponse with CoreStatus in CollectionsAPIDistributedZkTest . java and added a method to retrieve core status to
initialize transformers and locators to an empty list instead of null to ensure that transformers and locators are properly initialized
updated string concatenation syntax in AbstractQuerydslProcessor . java to improve readability of error messages for better clarity
improve debug output of pegraphdecoder . getcallstack ( ) .
replaced instances of ` setOf ( ) ` with ` copiedSetOf ( ) ` in ` RestTemplateBuilder . java ` to improve
camel - 14850 : camel - core - mailmessage should print the identity of the instance rather than the mailmessage itself .
http : / / issues . apache . org / activemq / browse / amq - 4892 - fix npe in prefetch
updated getIdentifierName ( ) method to include setIsPropertyName ( ) method to ensure identifier name is set as a property name for better clarity
fix crash when click on ` ` come soon ' ' message in pslab
added null check for the m variable and improved logging behavior in KeyedProperties . java and SheetOverlaysManager . java to ensure robust
added unit tests for logging and executing pods in PodIT . java to ensure proper functionality of the Shell functionality in the Kubernetes client
added a test method ` testNoWriter ` to ` TestReplicationHandler . java ` to detect a no index and create a new one to
[ fix ] graalkerneltester . dispatchmethodkernelokra should call super . dispatchmethodkernelokra ( range , args )
added sorting functionality to DefaultDnsClient and DefaultMxRecord classes to ensure records are processed in a consistent order based on priority
refactor thread creation to use a privileged action for improved clarity to enhance code readability and maintainability by encapsulating privileged
added validation in SelectBox and set the selected platform in UITest to ensure compatibility with Linux 6 and improve user experience
replaced IllegalStateException with Collector . printStackTrace in JobGlobalListener . java to improve error reporting by including stack trace information
added a parentSplit parameter to the createState method and modified related logic in FlowBuilder and SplitState classes to enhance state management by associating
change connectionState to be volatile in SSLSocketImpl . java to ensure thread safety when accessing connectionState
increased the default polling period from 10 to 1000 in AbstractPollingEndpoint . java and updated the endpoint ID in EnableIntegrationTests . java
replaced malloc calls with nmalloc calls for memory allocation in MemoryStack . java and MemoryUtil . java to improve memory management efficiency and
added handling for IOException and DocletAbortException in HtmlDoclet , AbstractDoclet , and AbstractBuilder classes to improve error handling and provide
[ java ] unusedmodifier : fix issue with enum declaration
refactor lambda expressions to use method references in multiple Java files to improve code readability and maintainability
added SSL parameter with name " ssl = { 0 } " to AbstractHttpClientServerTest to enhance test flexibility by allowing SSL connections
improve error message when illegalformatexception be throw
updated permission handling in ActiveConnectionRESTService to use activeConnectionPermissions instead of userPermissions to improve clarity and consistency in permission management
replaced direct equality check with EqualsBuilder in Point . java to improve readability and maintainability of the code
added a null check for the outputRoot parameter in the process method to prevent potential NullPointerException when outputRoot is not provided
pdfbox - 4892 : provide a way to filter out pdfbox annotation , a suggest by valerybokov
refactor StackTraceCleaner class to improve code readability to enhance maintainability and facilitate future updates
added content type handling for CSS and JavaScript files in PluginServlet . java to ensure correct content type is set based on file extension
hhh - 14815 skip test for oracle8i
updated the ` upgrade ` method to use ` slotSize ` instead of ` slot ` and modified the stats handling logic to improve clarity and
added ` getStats ( ) ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , ` ContextImpl ` , and ` Doc
[ scb - 2270 ] add long polling option to kie client ( # 2271 )
added accessibility support and refactored scrolling methods in multiple classes to improve user experience by ensuring proper scrolling behavior and improving gesture handling
replaced the initialization of UnlocksDialog with a new instance and added a button for displaying unlocks in the PausedDialog to improve user
added a call to clear the drop list in PlayerEventListener to ensure the drop list is reset before processing new events
added a constant for the default parameter name in StreamResult . java to provide a clearer identifier for the default parameter used in the code
changed the exception type from MalformedURLException to IOException in the test method signature to ensure proper exception handling for better error management
updated the output format in TsFileSketchTool to include the chunk type and modified the print statement in LocalTsFileInput to enhance clarity
added a filter to exclude specific headers from the UmbrellaHeader class to ensure only relevant headers are included in the Umbrella
renamed the method ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java `
added a call to ` encode ( ) ` in ` RequestPlugin . java ` to ensure proper encoding of request data for improved performance
added DB2 dialect support in RolapNativeSql and RolapNativeTopCount classes to ensure proper expression representation for DB2 queries
added null or blank password validation in LdapAuthenticationProviderImpl . java and created TestLdapAuthenticationProviderImpl . java for testing LDAP authentication to ensure
pdfbox - 4892 : remove unnecessary boxing , a suggest by valerybokov
added a condition to clear the complexWriters in ProjectRecordBatch . java to ensure that the complexWriters are properly cleared when the condition is met
added @ SuppressWarnings ( " serial " ) annotations across multiple cache - related classes to suppress warnings related to serialization issues
changed the access modifier of ClassGraphClassLoader from public to package - private and modified the null check condition in ClassGraphClassLoader . java to enhance
added a condition to handle the " _ errors " name in ErrorResponseException and modified the return statement to handle empty location cases to improve error reporting
added a constructor to EventSourcingRepository that initializes EventStore and SnapshotTriggerDefinition to enable the instantiation of the EventSourcingRepository
removed unnecessary variable ` newBinaryNode ` and simplified method calls in ` Attr . java ` to improve code readability and maintainability
updated search text handling in SearchedPeopleCursorAdapter and modified QustomDialogBuilder to handle empty search text to improve search accuracy by prevent
updated constant names and command handling in NuvoConnector and NuvoHandler to improve clarity and functionality to enhance code readability and maintainability
change the default planar configuration from PLANARCONFIG _ PLANAR to PLANARCONFIG _ CHUNKY to ensure compatibility with the
added a call to close the input stream in ItemListTag . java to ensure proper resource management and prevent potential memory leaks
move averageutil to core so it can be reuse by lasertablebase
added two new classes SigInt and SigIntBarrier to manage signal handling in the concurrent environment to provide a mechanism for managing signal interru
refactor ExporterGEXF to support hierarchical graph handling and improve edge creation logic to enhance functionality to support both hierarchical and non - hierarchical
refactor TCTLSeparatedProtocol to use Text instead of byte arrays for null buffer handling to improve handling of character encoding issues and
[ # 7038 ] fix index out of bound exception in response detail ( # 7039 )
replaced DB2Database import with a direct comparison of schema and catalog case to simplify code and improve readability
simonstewart : make the browsermobproxy test more robust
updated the formatting of criticalErrors to use Integer . toString for diagnostic lines and columns to ensure proper formatting of diagnostic messages for better readability and
removed redundant reset calls in InPlaceEditView . java to streamline the code by eliminating redundancy
rename InternalByteArray and TruffleString classes to improve clarity and consistency in naming conventions
[ hotfix ] [ graph ] fix generic in foreachedge and iterateoutedges
refactor assertions and test classes for consistency in naming conventions to improve code readability and maintainability
deleted the file ` ClassA \ 314 \ 201 . java ` and created a new file ` DiacriticTest . java `
replaced CountDownLatch with CyclicBarrier in ClusterMembershipTest . java and added a method to assert execution status to improve concurrency handling
added exception handling for WorkspaceReader in DefaultMaven . java and modified workspaceReaders initialization in DefaultGraphBuilder . java to improve robustness by
updated the SSL condition in ServiceRegistryConfig to use ` equals ` instead of ` startsWith ` for URI scheme comparison to improve code readability and
refactor Mockito class to improve code readability to enhance maintainability and facilitate future development
reformatted the constructor parameters in Jdbc3Connection . java to improve code readability and maintain consistency
added a synchronized method ` ensureInstance ( ) ` to the ` ServletHolder ` class to improve thread safety when accessing the servlet instance
added logging and expiration logic to calculate delta server time in BinanceExchange and BinanceBaseService to improve traceability of server time calculations and
added support for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " binding in Tomcat
added a null check for the component form before deregistering its animated animation to avoid potential NullPointerExceptions when accessing the component form
updated ` decodeResource ` and ` decodeByteArray ` methods to accept an ` BitmapFactory . Options ` parameter and added new drawBitmap methods to
[ java ] replace executor . execute ( ( ) - > aeron . run ( ) ) with aeron . run ( )
added functionality to prevent next clicks in the TimelineArrayAdapter to improve user experience by allowing users to click on tweets
added " text " to unmodifiableDataTypes in PostgresDatabase and modified conditional checks in NumberType and ColumnSnapshotGenerator to ensure proper handling of
fix entryprocessorbouncingnodestest . testentryprocessorwhile2nodesarebouncing ( ) ( # 3683 )
updated state checks and error messages in AmbariManagementControllerImpl . java and AmbariManagementControllerTest . java to improve clarity
added a null check for thingRegistry before adding the result to the inbox in CreateBridgeServlet . java and updated test cases in CreateBridgeServlet
refactor robots expiration checks and improve synchronization in CrawlServer and PreconditionEnforcer classes to enhance code clarity and ensure thread safety during robots
added null check for display name before checking for " Teredo " in multiple Java files to improve robustness by avoiding potential NullPointerExceptions
added a default shader program parameter to the SpriteBatch constructor and modified the SpriteBatch constructor to accept a default shader program if none is
added synchronous commit option setting in TestUtil . java to enable synchronous commit functionality in the application
added type coercion functionality to ` SortedSetTypeCoercer ` and refactored ` fill ` method in ` TypeCoercer
refactor confirmation logic in RemoveFileDialogFragment and RemoveFilesDialogFragment to streamline button confirmation logic to improve code readability and maintainability
added a condition to check if the character is less than 256 before processing to ensure that only valid characters are processed to avoid potential errors
updated the fragment storage registration to use a dynamic port instead of a hardcoded value to improve flexibility and maintainability of the fragment storage registration
ambari - 20936 . hostresourceprovidertest . testhostresourceproviderfailswithnoclusters ( ) should return an empty map
[ hotfix ] remove unused logger from yarnentrypointutils
refactor SIPCommFrame to encapsulate image initialization and color initialization methods to improve code readability and maintainability by encapsulating color initialization
removed the ShadowHtml class and updated test assertions in HtmlTest to streamline the codebase by eliminating unnecessary shadowing functionality
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements ` StarTreeRecordStoreFactory ` to
updated JettyLogger initialization to use H3 and Quic logging instead of Jetty to enhance logging capabilities for HTTP / 3 requests
changed the access modifier of the ` addListeners ` method from private to public and added a new test for listener validation to enhance encapsulation and
[ hotfix ] [ runtime ] fix typo in statehandlestore javadoc
replaced the import of ` org . eclipse . jetty . util . security . Constraint ` with ` org . eclipse . j
[ # 7018 ] instructor : enrolment : add section info to student page ( # 7019 )
( chore ) camel - jmeter : use try - with - resources for file input stream
( chore ) camel - 1145 : use availableportfinder to obtain the available port
added ` libraryTarget ` and ` getAbiJarParameters ` methods to ` JarBuildStepsFactory ` and ` AndroidBuildConfigJavaLibrary `
http : / / issues . apache . org / jira / browse / amq - 4892 - fix typo
api : remove getpagesizeval ( ) method from listcapacity api
added handling for the CLOSED case in IteratingCallback . java to ensure proper termination of the iteration when the callback is closed
added a new boolean field ` isAuthorized ` and updated related methods in ` AccessControlContext ` , ` AccessController ` , and ` ProtectionDomain
refactor OSGiDeployer to improve handling of OSGiApp deployment events and error handling to enhance code clarity and ensure proper
added handling for " tiff " codec and container in DLNAMediaInfo . java to ensure proper MIME type handling for TIFF
refactor argument type and assumption handling in OptimizedCallTarget . java to improve clarity and efficiency to enhance code readability and maintainability
added a new class ` CubocDesktop ` and modified ` Map ` and ` MapRenderer ` to use ` ImmediateModeRenderer20
updated file paths in PolicyMonitorTest to use target directories instead of test resources to ensure tests run in the correct directory structure for testing purposes
added a call to removeAllFiles ( ) in TrashbinActivity . java to ensure that all trashbin files are removed from the trashbin
replaced org . eclipse . jdi . Bootstrap . allConnectors ( ) with com . sun . jdi . Bootstrap . all
add specialization for llvmcheckglobalvariablestoragenode . execute ( ) and add checkglobalnode . docheck ( ) .
updated the ` createLauncherEvent ` method to include an ` Intent ` parameter and added hash code for intent components to enhance event handling by associ
updated the maximum burn amount calculation to use a constant MAX _ BURN _ TARGET _ LOWER _ FLOOR instead of a hardcoded value
refactor UniqueConstraintSnapshotGeneratorSnowflake to use H2Database and improve column metadata handling to enhance code clarity and maintainability by
[ dml ] fix npe when there be no insert statement
updated PGT URL parameter from " http " to " https " in ServiceValidateControllerTests . java to ensure compatibility with secure PGT URLs
added a boolean parameter ` isStatement ` to the ` getDefaultValidFunctionName ` method and introduced a ` hideDefaultName ( ) ` method to
refactor JarLauncher to improve code structure to enhance maintainability and readability of the code
updated generic types in multiple classes for better type safety and clarity to enhance code readability and maintainability by explicitly defining generic types
added Dimension ( 320 , 200 ) to CallGTalkImpl and implemented sendHolePunchPacket method in TransportManagerGTalkImpl to
added a test method for updating a PGobject in ResultSetTest . java to ensure correct handling of PGobject objects in database operations
modified the password reset endpoint to return an UNPROCESSABLE _ ENTITY when no matching email is found to improve error handling by returning a BAD _
replaced the retrieval of propertiesElement from getChildNodes ( ) to getDocumentElement ( ) to ensure the propertiesElement is properly retrieved from the document
refactor Cache class implementation to improve performance and maintainability of cache management
rename timeInSec and prevTimeInSec to timeMillis and prevTimeMillis in Isochrone and SPTResource classes to improve cl
fix the light relay not be able to bind itself to itself . close # 1181
added a new ` Chainer ` class and modified the ` contains ` method in ` CollectionSubject ` to utilize it for chaining items to
refactor Model class to improve code readability to enhance maintainability and facilitate future updates
updated the calculation of recordedTime in Locations . java to include a fixed value of 619315200000L to ensure accurate tracking of
added a condition to resize the status when the terminal type is Windows to ensure consistent status display across different terminal types
updated log message and added state check for host versions in UpdateDesiredStackAction . java and CURRENT ( 0 ) in RepositoryVersionState . java
updated test cases to use constants instead of hardcoded paths to improve maintainability and readability of the test configuration
replaced HashSet with LinkedHashSet for artifacts and resolvedArtifacts , and modified set initialization in multiple classes to ensure insertion order is maintained while maintaining
removed unnecessary try - catch block in OperationServiceImpl . java to simplify the code by directly declaring the variable as final
[ hotfix ] [ knative ] fix checkstyle violation in knativeenvironment
corrected the thread pool executor name from " commitlog _ archiver " to " CommitLogArchiver " to ensure consistency in naming con
added a test for CloudSolrClient uploads in TestCloudSolrClientConnections . java and implemented a connection method in CloudSolrClient . java to
added synchronized keyword to allBindings additions and removals in Breakpoint and DebuggerSession classes to ensure thread safety when accessing shared resources
added methods to clear files and cache in ShadowContext and refactored file handling in RobolectricTestRunner to improve file management and
added import statements for LinkedHashSet and TreeMap in SecureXStream . java and implemented styles management in XStreamPersisterTest . java to enhance performance by
[ drools - 4892 ] allow to set the kiemodulemodel in the kiebuilder and the kiehelper ( #
updated the handling of Farmland data in BlockEventListener to use instanceof for better type safety to ensure that Farmland objects are
added a default implementation of the ` getLocalIp ( ) ` method in ` FinishedSpan ` to provide a default implementation that returns ` null `
updated serialization method in JdbcStepExecutionDao and modified test cases in AbstractStepExecutionDaoTests and StatefulRetryStepFactoryBeanTests to improve
updated code comments for clarity in AbstractDictionary , BigramDictionary , and HHMMSegmenter classes to improve code readability and clar
added " libs " and " python37 " resources to the resource list in Python . java and tensorflow . java to support additional Python libraries and
added a refresh action to the JTable and modified the plugins list handling in PluginTab . java to improve user experience by allowing plugins to be
changed log level from info to warn for reloading , saving , and trimming history files to reduce log verbosity and improve error handling during history
server : fix npe in vmwarestoragestat processor when vm be n ' t find
camel - 14284 : camel - aws2 - ssh : fix sftp test failure
refactor ExperimentalMockitoJUnitRunner class for improved clarity to enhance maintainability and readability of the code
updated ` GpsSettingsActivity ` and ` Session ` to use ` Utilities . GetBuildSerial ( ) ` instead of ` Build . SER
refactor SwapGBuffers class implementation to improve code readability and maintainability
added null check for spatial and skeletonControl before removing it to ensure skeletonControl is only removed when spatial is not null and not null
added a method to set smart replies in ShadowRankingTest and updated ShadowRanking to use RankingReflector to improve flexibility
[ java ] do n ' t try to list all segment file in the archive if they do n ' t already exist .
updated the initialization parameters for carrot2ResourcesDir in CarrotClusteringEngine . java to improve clarity and maintainability of the code
added null check for testRect in WindowsTreeUI . java and created a new test class bug8004298 . java to ensure robust
updated ASM _ API _ VERSION from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to reflect the
replaced null return statements with exceptions in RecommenderMapper . java and added null check in Retriever . java to improve error handling and provide
added clientInfo to SurrogateAuthenticationEventListenerTests for testing to ensure proper client context is used during test execution
added a isUserView variable initialized to false in CardPresenter . java to reset the user view state for better user experience
remove graphvizjavaexecutorutility # canmap ( ) and diagramoutputformat # isgraphvizjavaavailable ( ) from graphvizutil
[ java ] store constructbatch and synclogtimeperrequest histogram in a separate variable to improve code readability and maintainability
added a new module - info . java file for the SQLite connector module to define module dependencies and dependencies for the SQLite connector
added a sleep delay of 500 milliseconds in StreamResetTest . java to ensure proper timing during stream reset operations
removed conditional check for " new " web type in PermissionsManager initialization to simplify permission management logic for better readability
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a depth method to SpringLoadedState class that returns a value of 0.5 to provide a default depth for better state management
replaced ` System . arraycopy ` with ` Arrays . copyOfRange ` in ` BinaryDecoder . java ` to improve performance by avoiding unnecessary
[ hotfix ] fix checkstyle violation in executiongraph
added notification removal functionality to ` NotificationActivity ` and removed unnecessary layout interactions in ` NotificationRenderer ` to streamline notification management by eliminating
updated exception handling in DefaultExceptionConverter to handle null invocation and updated test assertions in ExceptionsTest and EndpointTest to ensure robust exception handling and improve
glowcontainer . setlock ( ) should set a default value if it ' s not set
replaced ` MethodHandle ` with ` java . lang . reflect . Method ` for setting the setter in ` ProxyMaker . java ` to
updated the method for retrieving integer values from ` uniqueResult ( ) ` to ` intValue ( ) ` in ` MathTest . java ` to
replaced StringUtils . join ( ( Collection < String > ) templateData . get ( " metrics " ) , " , " ) with string concatenation
added functionality to manage and display a simple panel in the LayoutPanel to enhance user interface by providing a simple panel for better layout management
added a null check for the location parameter in the server wait condition to prevent potential NullPointerException when location is null
refactor BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and maintainability
added a check to ensure the previous public key parameters are not null before generating a usable key to prevent errors caused by missing key parameters during key
refactor MediaTypeRequestMatcher to use a dedicated method for ignoring specific media types to improve code readability and maintainability by encapsulating logic
updated task number handling in LlapBaseInputFormat to use taskAttemptId instead of taskAttemptID to improve clarity and consistency in logging
added properties to the SpringBootTest configuration to allow bean definition overriding in the test environment
added a null check before closing the indexReader to avoid potential NullPointerException when closing the indexReader
updated package declarations and class definitions for BTCMarkets classes to improve organization and clarity of the codebase
added a new test method ` issue151 ` to the ` FencedCodeBlockParserTest ` class to verify rendering errors related to B
added a new file CompatibilityTest . java to demonstrate property loading and verification to demonstrate the use of XML
added PushUtils and SecurityUtils classes with utility methods for push - related functionality to enhance the application ' s functionality by providing utility methods for push
updated replicas calculation to use a loop for each instance state map instead of multiple values to improve readability and maintainability of the code
update version to 2.7 . 0 and release note to 2.6 . 1
log4j2 - 1343 fix test failure on window
added socket timeout handling in AjpAprProcessor . java to improve robustness by throwing a SocketTimeoutException when reading times out
initialize friction , restitution , density , and isSensor fields to 0 to initialize friction , restitution , density
[ te ] rename fetchsaclingfactors ( ) to fetchscalingfactors ( ) for clarity
added error handling for broadcast idle command execution in LauncherInstrumentation . java to ensure robustness by gracefully handling potential IO exceptions during broadcast idle
added unit tests for font and link tag attributes in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure correct
move stats component to src _ base / common instead of src _ work / minecraft / net / minecraft / src /
added support for phone call functionality in the Launcher class to enhance user experience by ensuring appropriate permissions are granted for phone calls
updated the return value in SimulationPanel and modified method signatures in PlotDialog , BasicEventSimulationEngine , and Startup classes to enhance simulation
refactor GeoEncodingUtils to make BUF _ SIZE _ LONG private and simplify byte conversion logic to improve code readability and maintainability by
added a synchronized method ` isDockerAvailable ( ) ` to check if Docker is available to ensure thread safety when accessing the Docker client
added a new constant VPX in CodecTypes . java to support the Vpx format in the application
added a coordinatorAddress option to DistBuildRunCommand and updated its usage in AbstractDistBuildExecutorArgs to allow configuration of the coordinator thrift server
added a static method ` match ` in ` FsUtils ` and refactored timer management in ` WrapTimer ` to improve path matching functionality
added a conditional check for non - negative values before adding label values in TestTaxonomyFacetSumValueSource . java to ensure that label values are
do n ' t display ` ` PossiblyGenericallyTrue ' ' if ` ` result ' ' be null
removed the @ Test annotation from TestPerfBenchMarkDriver . java to clean up the test code and improve readability
added functionality to set the creation metadata materialization time in ObjectStore and created a test for it in TestObjectStore to ensure that the material
added error handling for UnsatisfiedLinkError in VoskSTTService to improve robustness by logging warnings when native dependencies are missing
remove the ` is _ one _ay ` property from ` JMSSamplerGui ` and modify string concatenation in ` JMSSampler
modify break weight logic in GlyphView . java to handle cases where the breakpoint is equal to the start position to improve the accuracy of break weight
refactor checksum verification logic in RCFile . java to use a buffer for improved efficiency to enhance performance by reducing the number of byte
added an @ AwaitsFix annotation to AutoAddReplicasPlanActionTest . java to indicate that the test is waiting for a specific bug
replaced direct calls to ` getSortedByCounts ( ) ` with a ` LinkedList < String > ` to store unwound steps and processors
removed the flavorsForFormats parameter from the setToSortedDataFlavorArray method and modified the comparison logic in DataTransferer to simplify the
hbase - 15836 add - infoport to testthriftservercmdline . testthriftservercmdlineargs ( )
added a condition to check if the end of the RegExpScanner is reached to ensure proper handling of the end of the RegExpScanner
refactor metric and timer handling in Debug . java to use a static set of enabled metrics and timers to improve code readability and maintainability
add a null check for the nickname before comparing it to avoid potential NullPointerExceptions
add null and empty check for filename in papplet . getfilename ( ) to avoid npe
refactor refresh token creation logic into a separate method ` createRefreshToken ` to improve code readability and maintainability by encapsulating refresh token creation
updated error message formatting in BuckConfig . java to improve clarity of error messages for better debugging
[ hotfix ] remove dead code in yarnapplicationmasterrunner
added a synchronized method ` nativeGetHardwareBuffer ` to ` ShadowNativeImageReaderSurfaceImage ` to provide a way to retrieve the hardware
updated BTCChinaExchange to set SSL URI using " https : / / data . btcchina . com " to ensure proper access
pmd : fix cpdtask to work on window
added OauthController and its corresponding test class Oauth2PluginTest to facilitate the handling of OAuth2 requests in the application
refactor SemgrexPattern class for improved readability to enhance maintainability and clarity of the codebase
added flatMap and flatCollection methods to AbstractStreamEx and removed them from EntryStream and StreamEx classes to streamline code by eliminating
( chore ) camel - rest - dsl : fix error message in exceptiontoproducerresponseconverter
updated the condition in RobolectricClassLoader to include " org . specs2 and scala . allows for android projects with mixed scala
modified the condition to check for non - transmittable audio encodings in MediaControl . java to ensure that only valid transmittable audio encoders are
updated CreateTableGenerator to use DatabaseFunction instead of SequenceNextValueFunction and added a new test for default values in AbstractDb2Database to
[ geot - 5769 ] normalizedmultivaluestatetest : add test for station 3.3 and 3.32
added a volatile boolean field ` wasInvoked ` and updated related handler variables in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest `
added a check to ensure the processor is configured before expanding regex mapping and improved return types in RowProcessor and ColumnarDataSource classes to enhance
refactor CustomSeekProvider to use a constant SEEK _ LENGTH instead of a hardcoded value to improve code readability and maintainability by redu
added XLCDCommunicator and XLCDController classes , and modified FirmwareUtils to handle different Firmware types to improve the
[ drools - 5892 ] use kie - api / kmodule . xsd instead of http : / / www . w3
added checks to ensure ` blockMessage ` and ` transactionMessage ` are not empty before retrying attempts in multiple classes to improve reliability by prevent
refactor WorkerProcessPoolTest to use a constant for thread timeout and simplify thread state assertions to improve code readability and maintainability by redu
refactor ` DelegatingMethod ` to implement ` equals ` and ` hashCode ` methods in ` DelegatingMethod . java ` and introduce
increased the values of FREEZE _ V2 , UNFREEZE _ V2 , WITHDRAW _ EXPIRE _ UN
removed redundant calls to ` PMS . getConfiguration ( ) . save ( ) ` and ` PMS . getConfiguration ( ) . reload ( )
deleted the SpringTransactionHooks class and updated related test cases to use AbstractSpringTransactionHooks instead to simplify the codebase by eliminating unused
refactor AbstractClassAssert class for improved clarity to enhance maintainability and readability of the code
added a new file GetUninitializedStringValueTarg . java that implements a test for the uninitialized String in a JDI context to ensure
added support for resolving provided dependencies in AndroidLibraryDescription and updated GraphEnhancementQueryEnvironment to include a new query parameter to enhance dependency management
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of keyboard open
replaced the system anomaly message retrieval with a boolean flag to track bugreport status to simplify the logic and improve performance by avoiding unnecessary
added a constant for " cinepack " format in FormatConfiguration . java and updated format handling in LibMediaInfoParser . java to support
added hand movement animation offset and poke functionality based on camera bobbing settings to enhance user experience by allowing dynamic adjustment of hand movement behavior
updated the method from ` data . describe ( ) ` to ` digest . toString ( ) ` in ` GrpcCasBlobUploader .
deleted the HSQLDBServerFilesFilter class and refactored file listing logic in TestUtility . java to streamline code by elimin
walletappkit : fix npe when restorefromseed and restorefromkey be null .
updated API version from APIUtils . getApiDataVideoVersion ( ) to APIUtils . getApiDataSeriesVersion ( ) and added a trace log
added a method to check if a method invocation already exists in the HasTypes class to ensure that duplicate method invocations are not processed by the same
replaced the hardcoded array size from 6 * 3 to a constant NUM _ VALUES in AmbientCubemap . java to improve
bugfix # 26969 , show default profile mode when session be not in progress .
added checks for zero values in GenericUDFMask , GenericUDFMaskFirstN , GenericUDFMaskLastN , and GenericU
boundedoverheadblockstoretest : use temporaryfolder instead of hardcoded db _ name
added a new method ` isItemStackDamageable ` and ` getHasSubtypes ` to the ` ItemStack ` class to
fix # 167447 - fix renderstate ' s alpha / line _ width .
simonstewart : set the startup page preference to 0 in firefoxdrivertest .
added conditions to handle HTTP connection methods in Http1xClientConnection . java to ensure proper handling of HTTP connection upgrade scenarios
updated the task type from " compile " to " process - classes " in JoobyMojo . java to accurately reflect the
replaced ` shutdown ( ) ` method with ` closeIdleConnections ( ) ` in ` HTTPHC4Impl . java ` to improve resource
added a conditional check for aggregate function suffixes before creating new metrics to ensure metrics are only created if they do not already exist
added a method to set fullscreen parameters in TaskOverlayFactory and updated TaskThumbnailView to utilize this new method to improve flexibility in
added a new Java class to calculate the frequency of a given number from a specified input to provide a solution for counting frequency calculations
initialize SocketChannel to null in ClusteredAgentManagerImpl . java to ensure proper initialization of the socket channel variable
refactor MutisignOperationerGodicTest class for improved clarity to enhance maintainability and readability of the code
added error handling for NoSuchElementException in StaxEventItemReader and implemented a test for restarting at the end of a file to improve robustness
replaced specific imports with a wildcard import and modified the return statement in ShadowTextView . java to simplify import statements and improve code clarity
updated import statements in ClaimConversionServiceTests and ClaimTypeConverterTests from com . nimbusds . jose . shaded to net
added support for AIX OS and updated family handling in OS . java and PKCS11Test . java to enhance compatibility with AIX systems and
server : fix router access detail to use router control ip instead of private ip
added a method ` invokeWithoutBlockingWithResultSync ` to ` Display ` that calls ` Display . INSTANCE . invokeWithoutBlockingWithResultSync
remove xmpp . ignore test since it ' s not use
replaced int casts with Math . round for left and bottom calculations in PortraitPagedViewHandler . java to improve consistency and
updated formatting of multiple lines in TestClusterDumper . java for consistency to improve code readability and maintainability
update ClassSize . align calculations in KeyValue . java for improved size alignment to enhance readability and maintainability of the code
camel - 14850 : camel - jbang - add type converter to defaultcamelcontext so it can be use by other component .
added support for dispatching conditional tasks in SparkCrossProductCheck to enhance task execution capabilities for Spark queries
added ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED actions to Launcher and Launch
added a conditional check for ` jsonResponse ` in ` LoginInfoEndpoint ` and created tests for passcode prompts in ` LoginInfoEndpointTests
added a ` toDescriptiveString ( ) ` method to the ` AssignmentManager ` class to provide detailed information about the region ' s state
renamed ` message ` to ` msg ` and added ` result ` to the ` HuobiAccountInfo ` class to improve clarity
added a new reserved word " PERIOD " to MariaDBDatabase and a corresponding test in AddColumnGeneratorTest to support the addition of
[ beam - 10625 ] add documentation for the default environment of portable worker
added Android 7.1 - specific version changelog entries to VersionChangeLogs . java to clarify that these changes are relevant for Android 7
changed the visibility of NUM _ MILLIS _ IN _ DAY from private to public in IndexExpressionIT and TestUtil classes to allow access to
removed a print statement from ImageResourceLoader . java to streamline output for better readability
[ java ] ensure that aeron client must use conductor agent invoker .
added validation for implicit lambda parameters in ` mmm Attr . java ` and created a new class ` NoWarnOnImplicitParams . java `
refactor menu item visibility and enablement methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by encapsulating
updated BTC _ deposit and BTC _ withdrawal types in BTCETransHistoryResult . java and BTCETrans
replace List with Set for series and exceptions in RetryFilterFunctions . java to allow multiple series and exceptions to be modified concurrently
added a @ Deprecated annotation to the PluginLoader class to indicate that the class is outdated and should no longer be used
added a condition to check if the end time is greater than the sequence time in LastQueryExecutor . java and implemented a new test case in
updated the formatting of the reqStr string in HttpResponse . java to improve readability of the request string
added a static block to set the HTTP wire logging property to ERROR in BuildImageMojo . java to ensure that the HTTP wire logging is
added a call to setSafeArea on the titleBar to ensure the title bar is displayed in a safe area
reversed the iteration order of TimeSeriesChunkMetaDataList in OverflowSeriesImpl . java to ensure correct retrieval of TimeSeriesChunkMetaData from the end
added a SQL statement to rename a column to a specified column in AlterTest . java to ensure the SQL syntax is correctly parsed and de
changed the access modifier of the copyState method from package - private to public to allow access to the method from other packages
fixed - redissonexecutorservice . executecallable ( ) method return a completablefuture . # 3550
h2 console : add . part suffix to file system split
[ hotfix ] [ doc ] fix checkstyle violation in org . apache . flink . table . orc
refactored null check for valueArg and nameArg in CompareFunctionsProcessor . java to improve code clarity and ensure proper handling of null
updated the ` reduceScopeForLimitedSpace ` method to accept a ` expectedSize ` parameter and modified the ` checkAvailableDiskSpace `
removed unnecessary ` toString ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to stream
added checks for invalidated state in AbsSwipeUpHandler and unregistration of task stack listener in TaskAnimationManager to ensure proper handling of invalid
added methods for retrieving and setting lock timestamps in AppPreferences and PreferenceManager to streamline preference management and improve code clarity
updated the artist retrieval logic in MediaInfoParser . java to use a dedicated method for retrieving the audio track artist to improve code readability and
added null check for remoteMessage before accessing its data to avoid potential NullPointerException when remoteMessage is null
nifi - 1187 : fix npe in splittext when there be no header file
added handling for Windows key store type in HttpsConnectorFactory to ensure compatibility with Windows key store configurations
increased the default CHECK _ TIMEOUT from 400 to 1 _ 000 in RestTemplateSenderTest and WebClientSenderTests to improve test reli
added a condition to check if the result code is not FILE _ NOT _ FOUND before continuing to handle cases where the remote folder does not
added animation functionality to the Slider class to enhance user experience by allowing customizable animation duration and time
updated assertions in LineSeparatorProcessorTest to use ` lineSeparator ` instead of ` eol ` to ensure consistency in test assertions for line separator detection
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to optimize texture packing size for better performance
added a new test method ` UnnecessaryParenthesesTest . java ` to verify that negated ternary expressions are not unwrapped to ensure proper
camel - 16400 : camel - hazelcast should not throw npe if poll timeout be set
added a new ` TextFeedbackTest ` class and modified ` AllTests ` to include it to enhance test coverage for ` TextFeedbackTest `
replaced Math . round with Float . compare for score comparison to improve accuracy of score comparison logic
updated DENSITY cases in AddAndScaleMultiImage . java and ResourceEditorApp . java to use try - with - resources for file
added a method ` arrayClassElementOffset ( ) ` to ` HotSpotReplacementsUtil ` and updated ` ArrayCopySnippets ` to
log4j2 - 1343 : do n ' t log line when there be no stage to process
added support for remote SCM systems in Configuration and RuntimeEnvironment classes to enable flexible control over remote SCM systems in the application
[ mielecappliance ] add state _ end and state _ rainse _ hold to mielecappliance handler ( #
replaced instances of ` StatsLogCompat ` with ` SysUiStatsLog ` in ` StatsLogCompatManager . java ` to standardize
corrected the variable name from ` log ` to ` LOG ` in ` LocalZookeeper . java ` to ensure consistency and clarity in
added unit tests for ProjectGenerationEvent ' s finished and started states in EventSerializationTest . java to ensure correct handling of ProjectGenerationFinished and
ggb - 1346 add support for selection of special point ( in selectionmanager )
refactor JavaCompiler class to improve code structure to enhance maintainability and readability of the code
hbase - 15826 integrationtesttimeboundedrequestswithregionreplicas should throw an illegalargumentexception if the remaining time be negative
updated multiple Java files for consistency and clarity to improve code maintainability and readability across the project
added additional gc - sections and nocopyreloc options to the NdkCxxPlatform class to enhance memory management by allowing gc sections and
updated the fallback URI handling in SpringCloudCircuitBreakerFilterFactory and added unit tests in SpringCloudCircuitBreakerTestConfig and HttpBinCompatibleController
updated multiple test classes for consistency and clarity to improve maintainability and readability of the test suite
added a check to return early if the URI matches the NS _ SPREADSHEETML in ReadOnlySharedStringsTable . java to
added a new method ` getAccountNet ` to ` HttpMethed ` for retrieving account networks using HTTP requests to enable testing of account network
added a check for ` availTextWidth ` in ` SwingUtilities2 . java ` and modified ` Test6635110 . java `
replaced the initialization of ` flatteningIterator ` with a direct instantiation of ` FlatteningIterator ` and updated related logic to streamline the
remove html escape characters from title and body in NotificationUtils . java to ensure proper HTML formatting for title and body in notifications
doc : generate sample code in the java microgenerator ( # 49 )
added a test method to reload and delete any existing question in InstructorFeedbackEditQuestionsUiTest . java to ensure that the edit question
fix bug in hssfsheet . getfirstrownum ( ) and hssfsheet . getlastrownum ( ) , which
added permission checks for launcher activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being processed
[ java ] send cluster session event when a cluster session be open .
added hashCode ( ) method implementations in AbstractParquetMapInspector and refactored equality checks in StandardParquetHiveMapInspector to improve
added a condition to flush the Quic session if the connection is remotely closed to ensure proper resource management and prevent potential memory leaks
added an AutoCloseable interface to the SplitReader interface to allow the SplitReader to extend AutoCloseable for resource management
removed the deepCopy ( ) method from GsonBuilder to streamline the code by eliminating unnecessary dependencies
replace null return statements with a constant NOT _ FOUND in LLScanner . java to improve code readability and maintainability by using a named
refactor file opening and closing logic in RestClientRequestImpl . java to improve code readability and streamline asynchronous file operations
reformatted the dispatchStatusString method call in GrblController . java to improve code readability and maintain consistency
updated ClassLoader usage in MockFactory and added SearchingClassLoader class to improve class loading flexibility and maintainability
add a test to verify that the refresh flag work correctly .
added support for LEFT _ SEMI _ JOIN in the condition checks in ConstantPropagateProcFactory . java to ensure proper handling of left -
replaced the variable ` completed ` with ` ! responseComplete ( null ) ` in ` HttpReceiver . java ` and ` HttpSender .
updated array length offset references to arrayOopDescLengthOffset across multiple classes to improve clarity and consistency in array length handling
http : / / issues . apache . org / jira / browse / amq - 4892 - add default policy to the broker
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
added a check to avoid stopping the app context if it is not running to improve performance by avoiding unnecessary operations when the app context is not
changed the return type of the drawItem method from void to GlyphLayout to provide a more appropriate return type for font rendering
refactor metrics retrieval in SpringmvcClient to use MetricsPublisher instead of JsonUtils to streamline JSON processing and improve error handling
updated the return type of accountAgeWitnessMap to an Optional < AccountAgeWitness > instead of an Optional < AccountAgeWitness > to simplify
refactor code formatting and improve readability in ` StructureHeader . java ` and ` StructureReader . java ` to enhance code readability and
added ResourceUrlProviderExposingInterceptor to CasWebflowContextConfiguration and updated related tests to support it to enhance resource URL handling capabilities in the
add dex return inliner to handle goto , return , and dead assignment
add automation support for enriched rule ( # 2321 )
removed NOFOLLOW _ LINKS option from the directory check in PathResource . java and added new arguments in AliasCheckerSymlinkTest . java to
[ hotfix ] [ table - planner - blink ] remove sqldialect property from executionentry
replaced ` ImmutableSet < String > rDotJavaPackages ` with a ` Supplier < ImmutableSet < String > > rDotJavaPackages `
[ java ] astpackagedeclaration - add unit test for package name
added a configuration property for minimum cross compaction unseq file level in IoTDBDescriptor . java to enable dynamic configuration of the minimum unseq file
[ hotfix ] move activeresourcemanagertest and yarnresourcemanager to resourcemanager . active
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
replaced CLASSPATH _ SCHEME _ PREFIX with CLASSPATH _ SCHEME and added error handling for URI creation in ZipResource . java to
updated syntax and formatting in ExpandableUploadListAdapter . java to improve code readability and maintain consistency in formatting
refactor configuration merging logic in RobolectricTestRunner to improve class hierarchy handling to enhance clarity and maintainability of the configuration merging
replaced Lists . newArrayList with Iterables . filter for block and item registry retrieval to ensure that only valid blocks and items are retrieved from the registry
removed the abstract keyword from several methods in AbstractDataChangedListener and updated WebSocket connection handling in WebsocketCollector and WebsocketDataChangedListener to
updated JSONPojoConvertor to handle enums and added color handling in tests to enhance type safety and ensure proper color management in JSON output
added a deprecation warning for the ` -- view ` option in IjProjectCommandHelper to indicate that the option is deprecated and will be removed
changed the data type of originalPayload from String to byte [ ] and refactored input stream handling in GWTRequestWrapper . java to improve
added orientation correction functionality to GyroControl to enhance device responsiveness based on device orientation
updated BIOME _ LIST _ SIZE from 256 to BiomeGenBase . getBiomeGenArray ( ) . length to ensure correct
changed print statements from ` println ` to ` print ` in GetInterfaceTest . java to ensure consistency in output formatting for better readability
replaced the assignment of ` env ` with a direct assignment in ` FileCompilerConfig . java ` to streamline the code by elimin
added a new interface ` ByteToLongCollector ` in the ` com . speedment . common . function . collector ` package to provide a mechanism
added a preload parameter to MMapDirectoryFactory to control the loading behavior of the map directory based on user - defined settings
added custom metrics for enabled component metrics in BukkitPlatform . java to enhance monitoring capabilities for enabled components
refactor QuickConnectREST class for improved readability to enhance maintainability and clarity of the codebase
added aspect ratio and default card image retrieval in CardPresenter . java to enhance image presentation flexibility for better user experience
( scott phillips ) fix npe in authenticationcountselector and loginredirect
added null checks for longValues , doubleValues , decimalValues , and byteValues arrays in VectorHashKeyWrapper . java to ensure safe cloning
added unit tests for System . nanoTime ( ) in TimeChangeTest . java to ensure that the system ' s nanoTime ( ) method behaves
added null and trailing whitespace trimming in MultiPartFilter . java and a print statement in MultipartFilterTest . java to ensure proper handling of
add experience drop event to entitylivingbase and implement it in forgeeventfactory
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler for clarity and consistency to improve user understanding of configuration errors and enhance
[ sql planner ] remove unsupportedoperatorsvisitor since it be not use
added support for RdepsFunction in GraphEnhancementQueryEnvironment and updated related methods to enhance dependency management and improve code clarity
refactor Character class to improve code readability to enhance maintainability and facilitate future updates
added a flag to scale entire rocket and updated the selection option accordingly to ensure that only relevant rocket components are selected in the scale dialog
simplified assertions in UpdateableResultTest by removing unnecessary Arrays . toString calls to improve code readability and maintainability
refactor time boundary attaching logic for offline and realtime tables in BaseBrokerRequestHandler . java to improve code clarity and maintainability by
refactor AjpAprProcessor and Http11AprProcessor to simplify the poller addition logic to improve code readability and maintainability by
updated regex pattern and improved title extraction logic in EightmusesRipper . java to enhance the accuracy of album titles and enhance
replaced instances of ` mDevice . wait ( ) ` with ` TestHelpers . wait ( ) ` across multiple files to standardize the
added a condition to check if the profile is a phone and not landscape in QuickstepLauncher . java to ensure proper layout behavior for phone
updated assertions in PartTreeJpaQueryIntegrationTests to use ` unwrap ( QueryImpl . class ) ` instead of ` getValue ( ) `
replaced the method ` Files . readAllLines ` with a new method ` readMatchingLines ` in ` SubSystem . java ` to improve
added dynamic check for the " getResultStream " method in JpaQueryExecution . java to ensure correct method invocation for JPA queries
added null check for entity in PhysicsProcess . java to ensure proper handling of null entities
add test to verify that entryprocessor clear map when value attribute be indexed
added request listener functionality to OperationSetJitsiMeetToolsJabberImpl and created a new OperationSetJitsiMeet
updated color calculation in Utils . java and modified HTML message in UtilsTest . java to ensure correct color representation and improve test readability
fix disabling of menu item when empty ( # 4569 )
updated the scratch path format in Aapt2Link . java to include a recursive step to ensure the link tree path is relative to the build
replaced instances of ` new Capture < > ( ) ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest .
ggb - 1343 do n ' t update selection when clear geos , do n ' t
added handling for ` MarkedYAMLException ` and ` EmptyStackException ` in ` YsldValidator . java ` to improve error handling
added ` isCanceled ( ) ` method implementations across multiple classes to provide a consistent way to check if a call has been canceled
removed the ` isAnnotationPresent ( Class < ? extends Annotation > annotationClass ) ` method from multiple classes and added a default implementation in ` AnnotatedElement `
added a default implementation of the removeAllWidgets method in UILayout . java to indicate that the method is not implemented yet
[ hotfix ] [ yarn ] fix flink - yarn - flink test flakiness
update return statement to use Math . max for output size calculation to ensure output size does not exceed available space for final input length
added conditional logic to handle transcoding of high - res content based on video width to enhance user experience by allowing high - res content transcoding
[ beam - 10399 ] fix the bug of readsourcetranslatorbatch and readsourcesourcetranslatormockbatch ( # 10399 )
updated GpsLoggingService to use a list of listeners based on preference settings instead of a preference to enhance flexibility in managing GPS logging listeners
changed the data type of ` fullwidths ` from ` boolean [ ] ` to ` byte [ ] ` and modified the ` putString ` method
added support for BaseItemDragListener in FolderIcon to enhance drag - and - drop functionality for ShortcutInfo
added a new method ` createEmptyArtifact ` to ` RepositoryConnector ` and modified value handling in ` AbstractRepositoryConnector ` and ` FileSystemConnector
removed unnecessary comments from RabbitMQPublisherImpl . java to improve code readability and maintainability
removed the check for afterAug1 in the video link check to simplify the video link detection logic for improved readability
camel - 14284 : camel - sftp should use fileutil . compactpath to make it work on window .
( chore ) camel - weather : fix flaky test in baseweatherconsumertest
renamed variable ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability by using a more d
fix double plant underspecies not be able to be cast to livingentity in blocktype .
replaced ` setFocusable ( false ) ` with ` setRequestFocusEnabled ( false ) ` in ` TranscodingTab . java ` to enable
fix npe in vmmanagerimpl . getvirtualmachine ( ) when there be an error .
updated license handling in DB2TestSystem and modified import statements in DockerDatabaseWrapper and TableIsEmptyGenerator to ensure proper handling of DB2
made the ` units ` field and its setter method in ` DoubleModel ` , added a setter method in ` GeneralOptimizationDialog `
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support trading functionality for BTC and Z
added logic to set the number of samples based on settings in TestPBRLighting . java to ensure that the number of samples is correctly
updated the parameter name in assertTasklet calls from " job . step1 " to " step1 " in StepWithSimpleTaskJobParser
changed variable declarations from non - final to final in CentralAuthenticationServiceImplTests . java to ensure immutability of variables and improve code
updated string concatenation syntax in ExpressionNode . java to improve code readability and maintain consistency in formatting
added multiple ` addServiceOutput ( ) ` calls in ` DDLSemanticAnalyzer . java ` and refactored the ` addService
[ zeppelin - 4892 ] fix bigdecimal coercion in drlx
added " org . eclipse . jdt . " to hide jdt used by jetty to enhance security by preventing jdt from
modified the return value from ` super . useAuthCache ( ) ` to ` false ` in ` NegotiateAuthentication . java ` to
updated the namespace assignment to capitalize the first character to ensure consistent namespace naming conventions across different operating systems
camel - 14850 : camel - direct - throw directconsumernotavailableexception instead of camelexchangeexception when no consumer be available
added a null check for the ZooKeeper object before setting it to null to avoid potential NullPointerException when zooKeeper is not initialized
updated progress bar step message formatting in Loader . java to improve readability of the progress bar message
replaced direct calls to mVibrator . vibrate ( ) and mVibrator . cancel ( ) with a
added a call to updateLastRemoteStreamId in HTTP2Session . java to ensure the last remote stream ID is updated correctly
added rendering hint setting for Graphics2D in EditorHeader and EditorToolbar classes to enhance text rendering quality by enabling text antialiasing
[ java ] remove termwindowsize and use currentwindowsize instead .
refactor : remove static import of enums in ctannotationimpl . java ( # 3649 )
refactor ExoPlayer class to improve code readability to enhance maintainability and facilitate future updates
replaced the native method ` getRGBPixelImpl ` with a call to ` getRGBPixels ` in ` WRobotPeer . java
added a new method ` newPrintStream ` to create a custom ` PrintStream ` based on user - defined encoding settings to enhance flexibility in
updated the vibration rate from 1 to 25 in TouchableMovementMethod . java to improve responsiveness during movement
updated import statements in AppEngineSqlCloudSession . java , FlybushDataClearer . java , and TestEnvironment . java to
removed unnecessary whitespace in WebSocketClient constructor to improve code readability and maintain consistency
simonstewart : make sure the i18n test do n ' t fail on the ci server
refactor error handling in BytecodeParser and SharedGraphBuilderPhase to use handleLoadConstantException instead of handleIllegalArgumentException to improve clarity and
[ hotfix ] [ test ] restore auth system state in xmlworkflowserviceit
added a new ` LowercaseComparator ` class to handle null values in features to improve robustness by preventing null pointer exceptions during comparison
refactor JavadocTool to encapsulate parsing logic into a separate parse method to improve code readability and maintainability by reducing duplication checks
danielwagnerhall : add test for toggling an option in a multi select
removed validation for the length of keys in HighestKvno . java to ensure that the keys array is of the expected length before proceed
added error handling for retrieving attributes in HDF5BatchReader to improve robustness by logging warnings when unable to retrieve attributes
[ beam - 10670 ] fix bigqueryio to return writeresult instead of pdone
fix : rename ` ` copysnippetrequestentity ' ' to ` ` createtemplaterequestentity ' ' and add ` ` template ' ' parameter
added a new file TestMultiANewArray . java to implement a Java process that writes a class file using a multi - dimensional array to
cloudstack - 5338 : remove secondary . storage . vm config option from management server ( # 5339 )
refactor synchronization logic in SyncBlockChainMsgHandler to handle head block IDs more effectively to ensure correct addition of IDs based on the number of
set the theme of the preview tab view based on user preferences to ensure the preview tab displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential memory leak
added a new test method ` testHttpIdleTime ` to ` ConnectorTimeoutTest . java ` to validate the idle timeout behavior of the HTTP
make dictionary . dictlist , dcoref . dictpmi , and dcoref . signatures configurable via property
replaced ` readIdentifier ( ) ` with ` readTagName ( ) ` and added a new method ` readTagName ( ) ` to improve
removed unnecessary type casting and simplified parameter values in JpaPagingItemReaderIntegrationTests and JobLaunchingGatewayParserTests to improve code read
updated log level from warn to debug in DistributedQueue . java to reduce log verbosity for child nodes
refactor hotseat palette update logic to utilize a new method getHotseatPallete ( ) to improve code readability
added methods to set default table entry and cell transformers in TypeRegistry to enhance flexibility by allowing custom transformation of table entries and cells
added an assertion to ensure that newAvailableShared is less than or equal to initShared to prevent potential errors during shared operations
chore ( regen ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.
removed the ` projectGenerated ` field and its getter and setter from ` ProjectGenerator ` and ` WorkspaceAndProjectGenerator ` classes to streamline
[ hotfix ] [ runtime ] fix checkstyle violation in driverutils
added contact form functionality to the ApplicationController and created a new Contact class for handling contact data to enhance the application ' s ability to display contact
guacamole - 285 : replace connectiongrouppermission with objectpermission in simpleuser .
updated the release version from 20 to 21 in IconCache . java to reflect the latest features and improvements
[ drools - 4892 ] fix typo in traitfactory . setmode ( ) method signature
updated method names from ` findWhereNameLikeAndActive ` to ` findWhereNameOrAliasLikeAndActive ` across multiple classes to improve
replaced manual closing of perdocconsumers with IOUtils . closeSafely to ensure proper resource management and prevent potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
added a click listener to the overflow button in ExpansionViewHelper to ensure the menu is displayed when the overflow button is clicked
updated error messages for null and non - null references in Subject and OptionalSubject classes to improve clarity and accuracy of null checks in tests
ggb - 1888 fix line height of help button in algebra view
move protobufferutilstest to core . util package and add unit test
fix divider position and side pane width calculation in jabrefframe
add support for cross - reference entry in aux file ( # 3555 )
make geoserverfeaturesource . metadata serializable to avoid serialization issue
rename variable ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of the variable
avatars be now update on metacontactavatarsupdate ( ) instead of metacontactavatarschanged ( ) .
replaced the import statement for Command from ' org . apache . sshd . server . Command ' to ' org . apache . sshd
added a test for cleaning up the audit log table by position in AuditLogTest . java to ensure that the audit log table is cleaned up
added a suppression warning and modified the return type of the inject method in ComponentContext . java to improve type safety and prevent unchecked cast warnings
added regex patterns for parsing empty and comment lines in ACLFileParser . java to improve parsing accuracy by ensuring only valid and valid comment lines are
updated MapRDBFormatMatcher and MapRDBSubScan to include FileSystemPlugin parameters and modified the isReadable method to return a DrillTable
added support for tracking ancestor dimension values in StarTreeImpl and StarTreeNodeImpl classes to improve data tracking and logging for split nodes
added a check for user unlock status before dumping plugins and refactored view closing logic in multiple classes to ensure proper handling of user unlock
updated condition from widthStr to positionStr in Photo . java to ensure correct handling of null width values
refactor PKIXValidator logic to simplify certificate validation logic to improve readability and maintainability of the validation process
[ hotfix ] [ test ] add archunit test for test code
updated package names from ` org . apache . shenyu . integratedtest ` to ` org . apache . shenyu .
vpc : remove skipprojectnetworks from listnetworks api call ( vpc vpc api do n ' t need it )
updated the way the label JSON element is retrieved in RuntimeTypeAdapterFactoryFunctionalTest . java to ensure the correct shape type is retrieved from
added methods to manage and store undo information for properties to enable better management of undo information during application properties
replaced direct access to the " sun . java2d . xrgradcache " system property with a privileged action to enhance security by
[ hotfix ] [ test ] use awaitility in streamclostest
removed the ` doAfterFlush ( ) ` method from multiple classes and initialized ` perFields ` to null in ` TermVectorsConsumer ` to
enable case insensitivity mapper and filter out non - deprecated properties to ensure compatibility with Spring Boot ' s configuration metadata generation
[ java ] : remove redundant capacity field and use array length directly .
updated the default value of HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and adjusted file renaming logic to
improve trace logging of parallelniosender . send ( ) . close ( ) and selector . selectnow ( ) .
added a null check for the context before creating a new SchemeAndroidIDE instance to prevent potential NullPointerExceptions when the context is not initialized
svm : remove native - image - system - classloader from native - image - build server
changed the return type of ` modifyGrantedAuthorities ` from ` void ` to ` List ` in ` SwitchUserAuthorityChanger ` and
renamed ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and introduced new test classes ` JaxrsSpringIntegrationTest
refactor query timeout handling in HikariPool and PoolUtilities to improve error handling and support for JDBC 4 compatibility
added test data providers for GeneralTestsData and SupplementaryCharactersTestData to enhance testing capabilities for xsl substring functionality
replaced ` eventWriter . close ( ) ` with ` delegateEventWriter . close ( ) ` in ` StaxEventItemWriter `
added support for MariaDB sequences in MariaDBDatabase and modified sequence generation logic in CreateSequenceGenerator to ensure compatibility with MariaDB
reformatted string concatenation in multiple Java files for consistency to improve code readability and maintainability
added TableDataManagerProvider import and set server metrics in multiple test files to enhance server metrics tracking for better test reliability
added support for " jsse . enableMFLNExtension " and " jsse . enableMFLExtension " in SSLExtension . java
removed generic type parameter from ObjectHashSet and ObjectIterator constructors to simplify iterator initialization and improve code clarity
added exception handling and adjusted character remaining text calculations in Compose and TweetFragment classes to improve error handling and ensure accurate character count for shorten
added a new constant DATAPOINT _ TTL and updated related methods in CassandraDatastore and WriteBuffer classes to enhance data handling capabilities by allowing
updated checkForAndKillXcodeIfRunning method to accept a boolean parameter for enabling prompt and improved error handling to enhance user experience by
added a method ` getTerrainAtCell ` to retrieve a terrain at a specified cell coordinate to enhance functionality by allowing retrieval of ter
added default value handling in ` Pretty . java ` and created a new ` T6665791 . java ` file with Java compiler functionality
added error handling for missing QuestEncryptionKeys . json in ResourceLoader . java to improve robustness by logging errors when the JSON file is
added a condition to check if the push transport is not supported to ensure that push operations are only performed when not in push mode
refactor PointValue class to improve code structure to enhance maintainability and readability of the code
removed the sign method call from BlockUtil . java to streamline the code by eliminating unnecessary sign functionality
modified the return statement in FileSystemView . java to handle empty roots and added security checks in Win32ShellFolder2 . java and Win32
updated methods in ` PdfPRow ` and ` ColumnText ` to use ` copyLastRow ` instead of ` copyContent ` to improve
added a SparseArray for managing undo notes in ListFragment to improve user experience by ensuring only selected notes are removed from the adapter
[ # 7370 ] upload backup data for new feedback question ( # 7371 )
added null check for transfer data in bug8024061 . java to ensure proper exception handling when data is null
remove standardpstmtdelegate from ebeaninternal . server . jdbc since it be no longer use
replaced ` Padding ` with ` Rect ` for widget padding retrieval in ` AppWidgetResizeFrame ` and ` Launcher ` classes to
refactor static MethodHandle initialization to use a static block for static variables to improve code readability and maintainability by reducing boilerplate
refactor ClassGraph and ScanResult classes for improved code organization to enhance maintainability and readability of the codebase
rename ` CountDownLatch ` to ` goAwayLatch ` and update its await logic to improve clarity and accuracy of the latch '
replaced calls to ` getFailure ( ) . getMessage ( ) ` with ` getFailure ( ) . hasMessageThat ( ) ` in
replaced ThreadLocal with null for the Workbook ' s currentBook variable across multiple files to simplify book management by eliminating unnecessary object
added a method ` supports ( Class clazz ) ` to the ` ContactSecurityVoter ` class and modified the ` vote ` method to validate
removed unused import statements from DataLoader . java to clean up the code and improve readability
added an ` rowsAffected ` variable and updated the ` postUpdateLog ` method to accept it to enable tracking of the number of rows affected
ggb - 1888 fix margin issue in euclidian dockpanel
set default foregroundFPS and backgroundFPS to 60 in JglfwApplicationConfiguration to allow dynamic adjustment of frame rates
added ObjectReleaseTracker assertions to HdfsTransactionLog and TransactionLog classes to ensure proper tracking and releasing of objects in HdfsTransactionLog
replaced the direct usage of DefaultWebSocketFrame with a listener for closing the WebSocket frame to improve code clarity and ensure the WebSocket frame is
renamed ` TestApplicationEventListener ` to ` TestApplicationEventListener1 ` and introduced a new ` TestApplicationEventListener2 ` class to enhance cl
replaced the intent creation of SettingsActivity with a method to set the list background to improve code readability and ensure the list background is set
updated import statements to use OpenHAB ' s StringUtils instead of Apache Commons ' s StringUtils and added null check for the line parameter to
added a new method ` accumulate ` to the ` JavaUserDefinedAggFunctions ` class to handle accumulation of weighted averages based on string
[ hotfix ] fix checkstyle violation in put and replicationsink
replaced Set with Map for regex caching in RegExpFactory . java to improve performance and reduce memory usage during regex compilation
added a reset method to GameThread class to reset the gameThread instance to ensure proper resource management and prevent memory leaks
added a realm check in the login method of DigestAuthenticator to ensure that the authentication process uses the correct realm context
refactor parameter handling in SavedRequestAwareWrapper to improve efficiency and maintainability to enhance parameter management by combining existing and wrapped parameters
updated InfoStatus messages in BasicConfigurator , LoggerContext , and ContextInitializer to improve clarity and consistency in logging output to enhance readability and
replaced ` waitPoint . countDown ( ) ` with ` this . wakeup ( ) ` in ` CommitLog . java ` and
added a condition to check if the Android version is greater than N _ MR1 or equal to " O " in PhotoViewerActivity .
updated the schema info level from minimum ( ) to basic ( ) in SchemaCrawlerOptions to improve schema crawling accuracy
pdfbox - 4892 : use bufferedoutputstream instead of zipout , a suggest by valerybokov
replaced ` random . nextBytes ( data ) ` with ` _ TestUtil . randomFixedByteLengthUnicodeString ( random , data .
fix for mc - 103516 : fix world . isattended ( ) to return false
added new container adapters " Tomcat10ContainerAdapter " and " Tomcat101ContainerAdapter " to the list to support additional container
[ drools - 5892 ] fix protobuf marshalling of multi - accumulate type ( # 5893 )
reformatted switch statements in NowSearchTerm . java and SearchTermBuilder . java for consistency to improve code readability and maintainability
pdfbox - 4892 : remove public access modifier , a suggest by valerybokov
refactor RemoteEndpointServiceAccessStrategy to use SpringExpressionLanguageValueResolver for HTTP method and headers to improve code clarity and maintainability by
added a new method ` newResponseBuilder ` to encapsulate response building logic to improve code readability and maintainability by centralizing response creation
added notification for command start in AsyncBackgroundTaskManagerTest to enhance test reliability by notifying the task manager when the command starts
refactor preview drawing parameters handling in FolderIcon and PreviewItemManager classes to improve code readability and maintainability by encapsulating preview drawing parameters
replaced TokenFilterFactory with CharFilterFactory in LukeRequestHandler . java to streamline the processing of character filter configurations for improved
replaced null argument checks with ParamChecks . nullNotPermitted in AbstractCategoryItemRenderer . java to improve code readability and maintainability by
updated the ` createSubContext ` method to include an ` Optional < Verbosity > verbosityOverride ` parameter to control verbosity behavior based on the
added schema handling for Oracle in DbSqlSession to ensure consistent schema casing based on database type
fix asyncloggerallthreadcontextimplementationsstest failure cause by logmanager . getcontext ( false ) . getClass ( ) . getSimpleName (
added a new file TestShrinkToOneRegion . java that includes a main method that calls System . gc ( ) to facilitate testing
replaced string splitting with Splitter for better readability to improve code clarity and maintainability
removed unnecessary ` utf8ToString ( ) ` calls in ` AnalyzingInfixSuggester . java ` and added a new test
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5883 : pushsa
[ zeppelin - 4892 ] fix print provenance hash in stripprovenance command
pdfbox - 4892 : remove unnecessary null check , a suggest by valerybokov
changed the FORMATTER function from ' final static ' to ' static final ' in multiple test classes to enforce immutability of the FORMATTER
hive - 14801 : round ( double ) should use bigdecimal . round ( ) instead of native math . round ( ) (
updated configuration handling in GraalJSScriptEngineFactory to use ConfigParser for injectionEnabled and useIncludedLibrary to improve code readability and maintain
changed class declarations from package - private to public in Test1 and Test2 classes to allow access to these classes from other packages
updated player permission handling to use " deny . no _ enter " instead of " permission . no _ permission _ event " for better clarity
updated the ` getAdditional ` method in ` ConditionAndOr ` and ` ConditionInConstantSet ` to include a ` Session ` parameter to enhance
replaced occurrences of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues ` to
added random body and circle creation in Box2DCharacterControllerTest . java and reset friction in PlayerSensorFixture . java to enhance
added tests for flight reorder options in TestBadOptionValues . java and implemented a new test case in TestMemoryOptions . java to ensure
removed redundant assertions in ObjectAlignment and Options classes to streamline code for better readability and maintainability
added ` getTargetPackage ( ) ` method to ` AbstractAndroidInstrumentationTestJVMArgs ` , ` AndroidInstrumentationTest ` , and
refactor DocHelper class to improve code readability to enhance maintainability and facilitate future updates
updated acceptableThrowawayItems initialization to use an ArrayList instead of an empty list to improve flexibility in handling acceptable throwaway items settings
replaced multiple instances of ` invokeExact ( x ) ` with direct calls to ` ( boolean ) mh1 . invokeExact ( x )
removed unnecessary whitespace in MessageHandler . java to improve code readability and maintainability
[ hotfix ] fix typo in inflection javadoc
added methods to retrieve and set the locale in the EvaluationContext class to enable localization support for the evaluation context
removed unused import of Plugin from SummaryPrinter . java to clean up the code and improve readability
added a break statement in DrawerActivity . java to ensure the loop terminates when the condition is met
updated import statements and modified query logging in MongoQueryCreator . java to improve code clarity and ensure correct query object retrieval
added system property ` ` xwork . loggerfactory ' ' to use loggerfactory from system property ` ` xwork . loggerfactory ' '
rename adminaddpeerwithp2pdisabledacceptancetest to adminaddpeerhasnoeffectwhenp2pdisabledontargetnode
updated bean names from " livenessStateProbeIndicator " and " readinessStateProbeIndicator " to " livenessStateHealthIndicator " and
added a ConcurrentMap for storing PStore instances in LocalPStoreProvider to improve thread safety when accessing PStore configurations concurrently
changed the access modifier of the deleteFiles method from public to private to restrict access to the method for better encapsulation
replaced ` Provider ` with ` ServiceProvider ` and updated related methods in ` ServiceLoaderSpliterator ` and ` TypeUtil ` to improve
throw runtimeexception instead of unsupportedmessagemessageexception in javainteropreflect . setfield .
added checks for toolchain creation in AbstractCell and corresponding methods in ToolchainProvider and DefaultToolchainProvider to ensure correct behavior when Android SDK
added a boolean flag to track if the context was added to the engine before removing it to ensure that the context is removed only once to avoid
updated string checks for " { { version } } " and " { { fails } } " to use contains method instead of indexOf to improve
updated the ` setLinkerFlags ` method to ` setExportedLinkerFlags ` and modified related test cases to ensure exported linker flags are
updated method names and logic in AbsSwipeUpHandler and RecentsView for updating recents rotation to improve code readability and maintain
added generic type parameters to listener instances in multiple classes to enhance type safety and reduce potential runtime errors
updated the way the new block hash is retrieved in AbstractBlockChain . java to ensure the correct hash is used for the new block header
defaultmessagestore : use getstorepathphysic ( ) instead of getcommitlogpathphysic ( )
removed the try - with - resources statement for JvmGcMetrics and JvmHeapPressureMetrics in MicrometerMetricManager . java to
add get message transferred msg count and total message count in compaction log to track how many message have be transferred and how many message have
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should not be used in new code
added a method to check if a system UI object exists and executed a shell command for " keyguard _ status _ view " to enhance user
changed logger from static final to final in SessionRegistryImpl . java to ensure immutability of the logger variable and improve code clarity
added a check to return false if the cookie jar is empty in InMemoryCookieStore . java and a test for removeAll in NullUriCookie
added toString ( ) method to BonsaiValue and improved logging in BonsaiWorldStateArchive and BonsaiWorldStateUpdater
changed the parameter type of ` getText ` method from ` String ` to ` CharSequence ` in multiple repository classes to improve flexibility by allowing text
[ java ] mark a test as not yet implemented for marionette
added connection return logic in SocketConnector . java to ensure proper resource management and error handling during connection closure
rename ` CMD _ ESCAPER ` to ` CREATE _ PROCESS _ ESCAPER ` and update related references across multiple files to
added synchronization to the heartbeatExecutorService initialization to ensure thread safety during concurrent access to the heartbeatExecutorService
refactor ` transformBuildResultIfNotPresent ` to ` transformBuildResultAsyncIfNotPresent ` and introduce ` wrapWithTracingAndCancellation
fix for drag - selecting text out of the text area ' s bounds
added configuration paths for temporary and staging directories in TestInformationSchemaWithPrivilege . java to ensure proper directory management for temporary files during testing
refactor graphics configuration retrieval logic in Component . java to improve clarity and efficiency to enhance code readability and maintainability by simplifying the
tika - 2333 -- fix oom test in legacy mode
camel - 14850 : camel - core - optimize pipeline . doprocess ( ) so it do n ' t duplicate code .
refactor PrintTagList . java to handle command - line arguments for model loading and print basic tags to improve flexibility and clarity in
replaced ` getFullyQualifiedName ( ) ` with ` toString ( ) ` in ` InsertDeParser . java ` and added a new test
http : / / issues . apache . org / jira / browse / amq - 4892 - fix test case for eofexception
[ java ] fix flakiness in startfromtruncatedrecordinglogtest by wait for cluster ready .
updated the calculation of arc and outer dimensions in LineBorder . java to improve accuracy of rounded rectangle representation
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter . java to ensure that the method handles cases where galleryImages is
updated deployment ID handling in StandardChangeLogHistoryService and removed unnecessary null constraint in CreateDatabaseChangeLogTableGenerator to streamline database change log
pdfbox - 2576 : update usage link to interactive form instead of fdf
removed the boolean parameter ` moreColumnOk ` from several methods in ` AlterTableAddConstraint . java ` to simplify method signatures and improve
camel - 14284 : camel - quickfixj - make it possible to start multiple quickfixj engine at once . thanks to
added displayZoomControls field and updated setMixedContentMode method to return the mixedContentMode value to enhance flexibility in managing zoom control settings
added corporea block , brick , and slim block to the mod , and updated the registry .
refactor ConnectionFactory class to improve code readability to enhance maintainability and facilitate future updates
added a method to enable disabling menu items based on user settings to improve user experience by providing appropriate icons based on user settings
updated the empty list message resource from " file _ list _ empty _ headline _ server _ search " to " file _ list _ empty
hhh - 14850 - fix unit test failure in entitytests
updated MotorMountConfigurationPanel to set autoResizeMode and setAutoCreateColumnsFromModel to false and changed the constructor parameter of Mot
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner .
added getter and setter methods for creator , subject , and document properties in POIXMLProperties . java and updated test cases in TestPOI
reformatted the call to ` super . doStop ( ) ` in ` HandlerWrapper . java ` to improve code readability and maintain consistency
[ java ] check if cnc file be empty before try to read it .
renamed ` NonMarkedFoo ` to ` FooCommand ` and updated type constraints in ` UnsatisfiedTypeBounds . java ` to
added support for handling JMod files in ClassFileSourceImpl . java to enable proper class loading for JMod files in the application
removed the ` PostEnterCanonicalizer ` parameter from the ` TreeBackedElement ` and ` TreeBackedEnter ` classes to simplify the
updated tokenRequest initialization in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest to enhance token
updated array index from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure correct retrieval
added sync method calls to ZooKeeperAssign and ZooKeeperWatcher classes to ensure data consistency during ZK operations
added checks to ensure that the current context is not set to EGL _ NO _ CONTEXT in GlUtil . java to improve error handling by
[ drools - 5861 ] do n ' t remove activation from ruleflowgroup if it ' s active
added a return statement to HystrixDashboardConfiguration . java to indicate a successful execution of the method
removed the exception handling for PipeNotExistException in DropPipeProcedure . java and added error handling in IoTDBPipeIT . java to simplify the
fix clientqueuedisruptiontest so it do n ' t fail on slow machine
refactor : replace signatureprinter with defaultjavaprettyprinter in ctreferenceimpl # tostring ( )
changed the visibility of the ` validateInstance ` method from public to protected to restrict access to the method for better encapsulation
lucene - 6930 : deprecates geopointfield from numerictype by use a custom geotokenstream and termenum designed for
added a new class FakeBuildable and updated OnDiskBuildInfoTest to use it to facilitate mocking of Buildable '
use itemstack . isempty ( ) instead of itemstack . getitem ( ) to avoid npe
replaced ` FOLLOW _ path _ in _ createIndexStatement2308 ` with ` FOLLOW _ timeseries _ in _ createIndexStatement2308 ` and
added a threshold check before retrieving the velocity in TubeCalc . java to prevent potential errors when the velocity value is less than EPSILON
replaced calls to ` getBucket ( gcsUri ) . create ` and ` getBucket ( segmentUri ) . create ` with ` _ storage .
removed the call to VertxUtils . blockCloseVertxByName ( " transport " ) in the finally block to ensure proper resource management and
added methods to create and replace history views in DbTriggerBasedHistoryDdl and PostgresHistoryDdl to enhance functionality for view management in
updated the expected cluster engine version from 2 to 3 in CarrotClusteringEngineTest . java to reflect the correct functionality of the clustering engine
added JUnit Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored because the test needs to be rewritten
added a new class ` ParserStateObjectInputStream ` and integrated it into ` ParserCacheCommand ` to support deserialization of ` RemoteDaemonicParser
added null checks and initialization for objectQuotingStrategy in ChangeSet and DatabaseChangeLog classes to ensure proper handling of object quoting strategy based on the
replaced ` MetainfoParser . parse ` with ` MetainfoParser . fromXmlStream ` in ` SliderAppsViewControllerImpl .
deleted the CsrfControllerAdvice . java file to remove unused code to streamline the project
refactor endorsed argument handling to use a new method ` quotePathList ` to improve path quoting for better readability and maintainability
added a screen - off animation to the drag layer background in the Launcher class and defined a drawable alpha property in LauncherAnimUtils to
updated the comparison in TypeInferenceUtils from ` 2 < < 24 ` to ` 1 < < 24 ` and added new test cases in Type
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added support for handling long and UNC path types in WindowsPathParser and corresponding tests in PathOps and WindowsPathParser to ensure correct handling
replaced the instantiation of ` InetSocketAddress ` with ` new MulticastSocket ( ) ` in ` Promiscuous . java ` to simplify
removed redundant closing of the writer in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
return nBits . clone ( ) instead of returning nBits directly to ensure that the returned value is not modified after creation
changed the visibility of the deriveCollectorName method in ProfilerCollector from private to protected and added a test for custom collector names in TestProfilerCollector
datamongo - 2043 - omits type hint when writing simple types in MappingMongoConverter to ensure proper handling of type hints when writing
added performance measurement to the ` createProxyFactory ` method in ` ProxyMaker . java ` to enhance performance tracking during proxy factory creation
added @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings during compilation
updated exception handling in TCPConnection . java to include the original exception as the cause to improve error reporting for better debugging and debugging
replaced the ` reinflateWidgetsIfNecessary ( ) ` method with a call to ` getWorkspace ( ) . reinflateWidgets
added a new file ` DeleteInsideFileDialogTest . java ` to test the deletion of files within a file dialog to ensure that the file
* lwjglabstractdisplay : do n ' t call update ( ) if the display be n ' t renderable
update instructorstudentlistpageuitest to verify that the profile picture be update correctly
added environment variable handling for methods and only runs in TestIgnorance . java to enhance flexibility in filtering tests based on specific environment
removed the ' pointer ' parameter from the fling method signature to simplify the method signature by eliminating unnecessary parameters
added a null pageable check in QueryDslJpaRepository and a corresponding test in QueryDslJpaRepositoryTests to ensure that
added a new method ` computeMemorySize ` to compute the memory size based on a fraction to ensure memory size calculations do not exceed acceptable limits
increased timeout duration from 2000000ms to 20000ms in JMSPublisherConsumerTest and PublishJMSTest to
refactor SnowballAnalyzer to improve code readability to enhance maintainability and facilitate future updates
updated the handling of the previous InternalBatch in StreamingAggTemplate . java to ensure proper batch management by resetting previousIndex and resetting its state
improve error message when plugin need to null check receiver .
added a default implementation of the stream method in StreamSupplierComponent to enable parallel execution of stream operations in the application
updated logging messages to reflect " Moved " instead of " Moved " and added retry logic for file renaming to improve clarity of log
refactor InjectorProxy and StandardInjectorProxy to use newInstance method instead of setAccessable and update access modifiers to enhance flexibility in creating instances
[ hotfix ] [ stream ] remove redundant close ( ) call in flinkstreamingcreatefunction
added unit tests for unsupported SQL statements in ShowStatementTest , UnsupportedStatementTest , and CreateTableTest to ensure proper parsing and deparsing of
change return value from null to an empty list in AppleTest . java to ensure that the method returns an immutable list instead of null
updated test cases in NamedSetTest . java to include Quality Distribution and Inc . to enhance test coverage for CruiseControl functionality
updated WebSocket connection handling and improved connection state management in DeconzBridgeHandler and WebSocketConnection classes to enhance code clarity and maintainability
replaced setAttribute with removeAttribute for authentication and target URL attributes in AbstractProcessingFilter to ensure proper session management by removing unnecessary attributes
hbase - 15836 testregionreplicacelastreplicationendpoint . testreplicacelastreplicacelast
added initialization and configuration for PMS in FormatRecognitionTest . java to ensure proper configuration for the PMS instance
cloudstack - 2329 : add event to create / delete ova data disk template
updated JUnit4 test annotations and imports in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to ensure compatibility with JUnit4 testing framework
added multiple @ Override annotations in CentralAuthenticationServiceImpl , RemoteCentralAuthenticationService , and NoOpLockingStrategy classes to ensure proper method
updated table and column names from " metricVal " to " metricVal1 " in AppendOnlySchemaIT . java to improve clarity and
added a check to ensure deleted documents count matches the segment document count to prevent indexing errors due to document count mismatches
add getloggername ( ) and logtrace ( ) method to siplogger so they can be use by sip communicator .
updated the length of the FilamentFactory from 1.0 to 0.9 to accommodate staves w / no starting bar
changed the default value of ` handleFileUploads ` from ` true ` to ` false ` in ` VertxPlatformHttpServerConfiguration ` and
added a new test method ` doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive ` to ` CsrfFilterTests . java
refactor static fields in HotSpotObjectConstantImpl to use a single HotSpotResolvedJavaField variable to improve code readability and
replaced ` add ` method with ` addFrequency ` in multiple classes to improve clarity and consistency in method naming to enhance code readability
updated the instantiation of FileIO to use a new timestamp variable to ensure that the element ' s watermark is set to the current time
mondrian : make sqmctestatement . ctedefinition a non - final field and update registercopy to return the copy
added import statement for ResultSetMetaData in QueryCompilerTest . java to utilize ResultSetMetaData for improved data retrieval functionality
updated the library command to use the root directory instead of the output directory to ensure the library uses the correct directory structure for better resource management
updated slider position from - 180 to - Math . PI in RailButtonConfig . java to improve the visual appearance of the Rail
updated the position of the encloser from 8f to y - 9f and modified the execution mechanism in Saves . java to improve
ambari - 15836 . kerberos : enable kerberos expression language support by default . ( swagle )
removed null checks for remoteMountPointComponent before setting translate and rotateDegrees in the setRemotePlayersHeldItemMountPointScale method to
updated the ` setupViews ` method to include ` ScrimView ` as a parameter and updated related animations to enhance animation responsiveness
[ hotfix ] [ changelog ] enable periodic materialization by default
added a value field with getter and setter methods in ProtocolParameter , and updated related classes to manage the value associated with the protocol parameter
add a test for chunking with head in testhttpservlet . testchunkingwithhead ( ) .
add a boolean flag to checkrouteranswer to indicate whether the router be pinned or not .
added Content - Type header to SwitchToPostInterceptor and updated SearchRequestUnitTest to include Content - Type to ensure proper content type handling for
refactor EmbeddedClientConnector to improve code readability to enhance maintainability and facilitate future updates
added logging for ignoring setFetchSize ( " rows " ) in PhoenixResultSet . java to improve error handling and provide clearer
added initialization of ` net ` to ` AndroidDaydream . java ` to ensure proper initialization of the ` AndroidNet ` instance
removed redundant parameters from the LLRealtimeSegmentDataManager class to streamline the code for better readability and maintainability
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 14850 remove hbase - prefix - tree from tablemapreduceutil ( addendum )
added a boolean flag ` inflationFailed ` and a call to ` super . onBackPressed ( ) ` in ` DesignerActivity .
refactor PushbackInputStream to improve code readability to enhance maintainability and facilitate future updates
loweringphase : make loweringtoolbase abstract and add schedulephase
updated the error message in ErrorMessageAdapter from download _ folder _ failed _ content to sync _ folder _ failed _ content to accurately reflect the
added support for new line characters in Makefiles and updated test cases in MakefilesTest to enhance compatibility with new line characters and improve test coverage
replaced direct calls to getDeletedDocs ( ) with MultiFields . getDeletedDocs ( reader ) and added null check for delDocs to
updated refresh flag handling in SimpleBatchNode to include RF _ TRANSFORM and setBoundRefresh to ensure correct refresh behavior based on refresh flags
[ gr - 23276 ] avoid safepoints for non - guava method in c .
added framebuffer size callback handling in LwjglWindow . java to ensure proper handling of window size changes based on framebuffer dimensions
updated animation variables for centerTaskParallaxToRight and otherAdjacentTaskParallaxToRight in LauncherAppTransitionManagerImpl
replaced NodeLiteralNode with NullLiteralNode and updated related methods to improve clarity and consistency in handling null values in literal nodes
added file length calculation and set length methods to CompoundFileWriter , FSDirectory , and IndexOutput classes to ensure accurate file length calculations and enforce
updated AndroidNdkScriptGenerator , AntScriptGenerator , LwjglDebugStarter , and GdxTest to use Mpg123
camel - 14263 - camel - aws2 - s3 : use source / destination / source key instead of copysource / destination /
added handling for " * " role in RuleBasedAuthorizationPlugin . java and updated test cases in TestRuleBasedAuthorizationPlugin . java to enhance
updated ZookeeperClientServerRegisterRepository to use EventType for registrations and improved null and length checks to enhance code clarity and ensure proper handling
replaced ` makeDeepMock ` and ` recordDeepStubMock ` methods with ` deepStub ` and ` recordDeepStubAnswer ` methods
added a check to ensure the call value is not empty before converting it to a byte representation to avoid potential ArrayIndexOutOfBoundsException when the call value is
fix debug log message to be more descriptive
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and modified the algorithm string in ` PBETest ` to
pdfbox - 4892 : improve error message , a suggest by valerybokov
added validation for job parameters in CommandLineJobRunner to ensure that invalid parameters are provided to prevent runtime errors caused by invalid job parameters
updated expected output in SmtpTests and MailTests from " foo \ r \ n " to " foo " in SmtpTests and Mail
refactor case statements in ExtendedConnectionDataSourceProxy . java for clarity to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for atomic operations to improve thread safety and maintainability of sequence ID management
added a new file Test . java that implements a method to calculate the sum of two integers to facilitate the computation of the sum
updated minSdk and maxSdk configurations in ShadowWifiManagerTest and modified access modifiers in WifiUsabilityStatsEntryBuilder to ensure compatibility
added a new Java file containing a solution for validating and sorting queries based on random integers to provide a solution for validating and sorting queries based on
replaced Map with ConcurrentMap for column family store management in Table . java and Gossiper . java to improve concurrency handling and ensure
refactor taskbar recreation logic in TaskbarManager . java to improve clarity and maintainability to ensure taskbar recreation only occurs
refactor SyncFutureCache class implementation to improve performance and maintainability of the code
update the default databo protocol version from 2.0 . 1 to 2.0 . 2 and document the new version for response attachment
[ java ] usesstringvalueof : do n ' t check for non - string literal .
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to validate the behavior
added a target max type shard size parameter to HollowProducer and HollowWriteStateEngine classes to control the maximum size of type shards for
added new version identifiers " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to TestBack
refactor CompilationTask class to improve code structure to enhance maintainability and readability of the code
updated assertions in TestSemanticAnalysis . java and modified database parameter handling in DDLTask . java to ensure location is not shown in test mode
added a call to ` ClearDatabaseChangeLogTableStatement ` to clear the database change log table to ensure that the database change log table is
added version handling and improved path handling in RestClient and CallPath classes to enhance service URL construction and ensure proper versioning for calls
updated exception message and added a closed flag in PhoenixDriver . java to improve clarity of exception messages and ensure proper resource management
simonstewart : throw unsupportedoperationexception instead of return null in touchapp . getlanguage ( ) .
added a ` after ` method to ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT `
[ gr - 23254 ] fix miss deoptimization in devmode .
added a check to return the original string if the length is less than two and implemented a test for removing leading and ending quotes in StringHelperTest
updated type handling in JpaQueryCreator and added a new method in UserRepository to improve type validation and enhance test coverage for unsupported keywords
do n ' t try to push branch if it ' s too long
added a call to ` dispatch ( new P25Message ( mMessage . copy ( ) , duid , mAliasList ) ) `
added null handler checks before calling checkClosed ( ) in WebSocketImpl . java and created a new test in WebsocketTest . java to ensure
[ ds - 3892 ] fix authorization system bug in discoveryit and indexeventconsumer
refactor widget padding calculations in AppWidgetResizeFrame and Launcher classes to use internal padding resources to improve consistency and maintainability of widget padding
added methods to hide all apps in the Taskbar UI controllers and updated the closeOverlay method in BaseActivityInterface to improve user experience by allowing
changed the launch method from synchronized to non - synchronized and replaced a sleep delay with a join method to improve thread safety and ensure the launcher is
updated the calculation of the zoom point in JavaSEPort . java to correctly account for the canvas ' s position to ensure accurate positioning of
replaced notificationManager . notify ( ) with startForeground ( ) and added a condition to stopForeground ( ) based on upload count to improve
pmd : fix excessivepubliccounttest and add static final
hbase - 15836 addendum set retries to 3 for testthrifthbaseservicehandler
change log level from info to debug in TransactionalMessageServiceImpl . java to reduce log verbosity for better debugging
added exception handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve error handling
added a new class ` BittrexTickersResponse ` and modified ` BittrexMarketDataServiceRaw ` to utilize it
hhh - 14850 fix unchecked cast warning in entityentry
updated registerSession and unregisterSession methods to accept an instance of the endpoint class instead of an endpoint to enhance flexibility by allowing session registration to
replace Unicode escape sequences with Unicode escape sequences in FileUtils . java to enhance compatibility with various Unicode standards
added methods to set and get the stylesheet in ResourceService and updated ResourceHandler to utilize ResourceHttpContent for stylesheet handling to improve flexibility
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before further operations
updated the method call from ObjectParameterStrategy to PointerParameterStrategy in X86MethodGenerator . java to reflect the correct parameter strategy being used for
updated condition to check for CockroachDatabase instead of PostgresDatabase to ensure compatibility with Cockroach database operations
removed the condition for checking if the name equals " java . lang . String " in ObjectStreamClass . java to simplify the condition for better
replaced UnsatisfiedLinkError with SymbolNotFoundError in Library . java and added a new SymbolNotFoundError class to improve error handling by providing a
added logic to handle both pseudo and non - pseudo fields in BinaryResponseWriter to improve handling of document retrieval based on return fields
added handling for PING and PONG events in WebSocketImplBase . java and created a test for WebSocket pause behavior in WebSocketTest . java
updated NON _ IDENT _ ESCAPES string to include a hyphen to ensure proper identification of identifiers in regular expressions
add cache option to dnsresolverprovider and fix hostname resolution test
added @ ConditionalOnClass annotation to TraceMessagingAutoConfiguration . java to ensure messaging tracing is conditional on the MessagingTracing class
refactor SQL dialect handling to simplify quoting logic and improve readability to enhance code clarity and maintainability by eliminating conditional checks
updated import statements in multiple Java files for consistency and clarity to improve code readability and maintainability by standardizing import statements
added a condition to set status to VERIFY _ CLOSE _ TAG based on the character ' / ' in XMLLightweightParser . java to
set the visibility of TouchCharInput to GONE to improve user interface responsiveness
added a null check for the current user before comparing IDs to avoid potential NullPointerExceptions when the current user is not initialized
refactor slot setting logic in JSObjectLinker . java to improve clarity and handling of slot indices to enhance code readability and ensure
updated DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to use DefaultRandomStringGenerator and DefaultRandomStringGenerator as default values
added a @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
added @ Deprecated annotations to multiple Java classes to indicate that these classes are outdated and should not be used in future development
deleted the JoglDebugAdaptor . java file and updated its usage in RocketFigure3d . java to streamline the debug
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` , ` AWSPropagation ` , and ` TraceContextOrSamplingFlags ` classes
added PendingIntent initialization in FileDownloader . java and FileUploader . java to enable notification updates for the current activity
refactor nextOrd method to introduce a set method and update its implementation to improve code readability and maintainability by encapsulating the logic
refactor DateTimeFormatter class to improve readability to enhance maintainability and ease of understanding for future developers
removed the try - catch block for loading the Win32ShellFolderManager2 class in desktopProperties to simplify the code by eliminating unnecessary
added null and empty checks for ` administratorCredentials ` in ` setAdministratorCredentials ` method to ensure that ` administratorCredentials ` cannot be null
added a constant MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN and updated width calculation for tablet and two - panel
added render begin and end methods for sketch window color in PSurfaceJOGL . java to enhance rendering capabilities for sketch windowing
refactor Hashing class to improve code readability to enhance maintainability and facilitate future updates
updated the accept method to use folderPath and fileName instead of file and string inputs to improve clarity and consistency in file handling logic
updated the ` addToListIfNeeded ` method to include a content description resource in ` UserInfoActivity . java ` to enhance user information display by providing
removed unnecessary initialization of ` newType ` in ` J . java ` to streamline code by eliminating unnecessary null checks
increased the ACTIVITY _ START _ DELAY from 500 milliseconds to 800 milliseconds to allow for more time for the launcher to
added a constant for the WEBAPP _ HOME in SolrJettyTestBase and updated the path assignment in JettyWebappTest to improve
replaced diameter assignment with selectedMotorSet and cleared selection in ThrustCurveMotorSelectionPanel . java to streamline motor selection
added import for BufferUtil and called clearToFill method in ByteBufferPool . java to ensure buffer is cleared before use
fix notification rule processing to use originator ' s entity id
updated configuration keys from " authorization " to " authentication " in mmm Configuration . java and ppp Configuration . java to align configuration with the
added calls to delete exchange " x " and queueDelete " q " in DurableOnTransient . java to ensure proper handling of exchange deletion
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
refactor connection handling in ServerInfoService to improve error handling and clarity to enhance connection reliability and provide more informative error messages
refactor CompositeHandlerAdapter to improve code readability to enhance maintainability and facilitate future updates
refactor Quartz2Adapter class for improved readability to enhance maintainability and clarity of the code
do n ' t swallow illegalstateexception in sulonglibrary . lookup ( )
updated Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improv
refactor ConfigMappedNameResolverFactory to use NameResolver . Args instead of Helper in newNameResolver and update DiscoveryClientNameResolver to use Synchron
added a check for non - empty annotations and modified position handling in JavacParser . java and created a new TestAnnotatedAnonClass
added " com . sun . naming . internal . " to CheckPackageAccess . java to enhance package access validation for internal packages
changed the strict variable from false to true in StaxEventItemReader . java to enable strict mode for event processing
added an ` isExhausted ` boolean to the ` OfflineSorter ` class and modified the ` readPartition ` method to handle it to
refactor ActionResetingPool class for improved resource management to enhance performance and maintainability of the code
added a condition to check if the light state is in XY mode before converting it to HSB type to ensure correct handling of XY light states
refactor CellLayout to use a target cell array for folder and folder creation radius calculations to improve code clarity and maintainability by centralizing
replaced direct calls to ` showLoadingDialog ( ) ` with a call to ` FileDisplayActivity . showLoadingDialog ( ) ` in
added a null check for ` uigestureFile ` before loading logs and improved null handling for ` xmlLogs ` to enhance robustness
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for case - insensitive comparisons to ensure consistent behavior across different locales in test cases
added a method to set listener settings in XmlSuite . java to enhance the functionality of listener management in the suite
added a new method ` loadWithNewGlobal ` to the ` Global ` class and updated related methods to support loading functions with a new global
added methods ` fromJsonString ` and ` toJsonString ` to ` StarTreeIndexSpec ` and updated tests in ` TableConfigTest `
updated imports in HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , and ServerHttpSecurity classes
replaced single quotes with double quotes for file paths in AndroidFileHandle , GwtFileHandle , and FileHandle classes to improve consistency and
[ drools - 1770 ] fix npe in inoperator when in ( null , null )
added commit ( ) and purgeFieldCache ( FieldCache . DEFAULT ) in TestDistributedSearch . java to ensure FC insanity during
added unit test for boundary message event on subprocess and inside process multi - instance
updated method signatures in ` ProgramManager ` and ` PointerAnalysisImpl ` to use ` target ` instead of ` method ` and added ` resolve
http : / / issues . apache . org / jira / browse / amq - 4892 - add messagegrouphashbucketcount
added constants for network , private key , and fips slot IDs in Secmod . java to improve code readability and maintainability by using
added alignment support to the Layout class and modified the startRenderering method to return a boolean indicating success to enhance layout functionality by allowing flexible
[ hotfix ] [ test ] ignore unalignedcheckpointitcase for now
added imports and a check for class types in JDK13Services . java to ensure only valid Java classes are processed to avoid runtime errors
added a check to ensure the keyword is not duplicated before adding it to the keywordToReference map to avoid duplicate entries and improve code clarity
added a check for a Collection before retrieving the size of the MulticastProcessor to ensure size is set correctly when pairs are of type Collection
removed unused methods from SegGraph , SegToken , and WordDictionary classes to improve code clarity and reduce unnecessary complexity
escape telegraf character ( # 644 )
add udp port to the member serialization so that it can be use by the client .
rename ` OperatorMulticast ` to ` OperationMulticast ` across multiple files to improve clarity and consistency in naming conventions
increased the send timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow for more time for message delivery to
added a try - finally block around the latch counting in VertxTestBase . java to ensure proper resource management and prevent potential memory leaks
added synchronization to the destroy method in SessionFactoryServiceRegistryImpl to ensure proper resource management and prevent memory leaks
danielwagnerhall : do n ' t open login page if local storage be not available
[ pytorch ] add test for tuple and map of tensor in ivalueutils
added a TaskStackChangeListener to manage task stack visibility in RecentsView and removed the onEnterAnimationComplete method from BaseActivity to stream
pdfbox - 4892 : fix date pattern optimization , a suggest by valerybokov
camel - 14284 : camel - cxf - add property to the factory bean if it ' s null .
refactor pending animation handling into a separate method ` endPendingAnimation ` to improve code readability and maintainability by reducing duplication
added debug logging for play time calculation in LauncherAnimationRunner to improve visibility into animation duration during debugging
added a conditional statement to return a CiBailout message based on the BailoutOnException option to improve error handling by providing a
replaced hardcoded signup and passwd values with null values in Links . java and updated assertions in IdentityZoneConfigurationBootstrapTests . java to
[ hotfix ] [ runtime ] rename previousallocationslotselectionstrategy to reserveallocation
rename ` onlyFormat ` to ` format ` and introduce a new method ` getOnlyFormat ` to improve clarity and encapsulation of
added NoDataContainer support to GeoTiffReader and corresponding tests in GeoTiffReaderTest to enhance image processing capabilities by utilizing a
sulong : fix npe in llvmwritenode when there be no source section
replaced ` toString ( ) ` with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao ` and `
replaced ` client . blockUntilConnected ( ) ` with ` client . getConnectionStateListenable ( ) ` and added a ` startedLatch
added null checks for ResultSet and ResultSet parameters in ArrayTypeHandler . java to improve robustness by preventing potential NullPointerExceptions during array retrieval
replaced ` RegexpTunnel ` with ` REProgram ` and added reflection - based prefix retrieval in ` JakartaRegexpCapabilities . java
updated the application picking method to use Application . class instead of null to ensure proper type resolution for the application configuration
[ drools - 2270 ] fix npe on mutable global ( # 2271 )
added validation checks for asset name , URL , and description in AssetIssueActuator and TransactionUtil classes to ensure that asset names and descriptions are
do n ' t copy paste textfield for textfield that do n ' t have a parent
updated action labels and descriptions in LGWebOS and UpnpDiscoveryParticipant classes and updated status messages in LGWebOSHandler to improve
replaced ` setSeedNodes ` and ` setActiveNodes ` methods with ` addAll ` methods for node configuration to improve code clarity and ensure
improve error message when analysis thread fail
log4j2 - 1343 fix calendar . addinterval ( int ) in timebasedtriggeringpolicy
added methods to perform item click and find item containing text in ShadowAdapterView and ShadowListView to enhance functionality by allowing text selection based on
pdfbox - 4892 : avoid a classcastexception , a suggest by valerybokov
added a null check for loopScope and implemented the afterMethodScope method in GraphDecoder and PEGraphDecoder classes to ensure proper handling of method
refactor HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and enhance session attribute retrieval to improve code clarity and maintainability
added a test method to change the service name in Zipkin to the manually provided one in HttpZipkinSpanReporterTest . java to ensure
added logging statements to JavaInMemoryFileManager and JavacToJarStepFactory for better traceability to enhance debugging capabilities by providing ins
renamed ` SeparatedProjectGenerator ` to ` SeparatedProjectsGenerator ` across multiple files to clarify the purpose of the
increased the timeout duration for the tryLock method from 4 seconds to 10 seconds to allow for more time for the lock to be acquired
updated ConfluentSchemaRegistryDeserializerProvider to include a cache capacity parameter and updated method signatures accordingly to enhance flexibility in handling schema registry cache
renamed the JCheckBox ' remind ' to ' checkAtStartup ' and updated its tooltip to clarify the purpose of the checkbox
added method signatures for strongKeys , weakKeys , strongValues , softValues , expireAfterAccess , expireAfterWrite , and maximumSize ,
hhh - 14850 - fix checkstyle violation in cascadingactions . java
added methods for retrieving and setting proto properties in ScriptObject . java to enhance extensibility checks and improve code clarity
updated the default read mode from " heap " to " mmap " in CommonConstants . java and added logging in ImmutableSegmentLoader . java to
added support for ByteArrayTemplate in ArrayTemplateBuilder to enhance template flexibility for byte arrays
added Hipchat component to the SamlServiceProviderProperties and created a new CasSamlSPHipchatConfiguration class to enhance SAML service provider
replaced List < URL > with Set < URL > for commandRegistryUrls and updated resource retrieval logic to improve the management of command registry URLs
updated warning message to include the current context and added debug logging for uncovered HTTP methods to improve logging clarity and provide more context during
removed the checkLoggedIn ( ) method from the login method in SvnRepositoryConnector . java and set the loggedIn flag in SftpRepository
http : / / issues . apache . org / activemq / browse / amq - 4892 - allow jms session to be
server : fix checkstyle issue in vmwareresource
refactor Timers class to improve code readability to enhance maintainability and facilitate future updates
replaced ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to
removed deprecated constants for various token types and constructors in UAX29URLEmailTokenizer . java to clean up the code and improve maintainability
removed the ` Map < Object , Object > ` parameter from the ` ScriptObject ` class and its associated assertions in ` ContextTest ` to
refactor EventBusMetrics class for improved clarity to enhance maintainability and readability of the code
[ ds - 3892 ] fix npe in i18nutil . getsupportedlocale ( ) when there be no eperson
updated JaversTransactionalDecorator to implement InitializingBean and modified the afterPropertiesSet method to ensure schema is properly initialized after properties are set
removed null check for pgTypeName before adding to _ pgNameToSQLType to simplify the code by eliminating unnecessary null checks
added multiple server setups for handler0 , handler1 , handler2 , and handlerC in ScopedHandlerTest . java to ensure consistent
handle calltimeoutexception during wait - notify phase ( # 11943 )
updated the condition to check if the password is empty in RestLoginProcessingFilter . java to ensure that the authentication process only proceeds when the
updated permissionNode comparison from ` Objects . equals ( permissionNode , " " ) ` to ` equals ( permissionNode , " * " )
rename ` encoding ` to ` sourceCharset ` and update related methods in ` AbstractCompiler ` and ` ICompiler ` classes to improve clarity
changed the data type of ` postLogin ` from ` byte [ ] ` to ` String ` in multiple classes to allow for more flexible
updated import statements and simplified simulation handling in GeneralOptimizationDialog . java to improve code readability and maintainability by reducing redundancy
camel - 14850 : camel - core - add option to turn on / off context reload
updated logging configuration parameters in CommonTestUtils . java for improved clarity and consistency to enhance readability and maintainability of the logging configuration
refactor PrologSizeSanityCheck class to improve code readability to enhance maintainability and reduce complexity
refactor NearbyListFragment to improve code readability to enhance maintainability and facilitate future updates
added a check for input stream content type in RequestBody . java and created a corresponding test in RequestBodyTest . java to ensure that non
added a check for ` embeddedSettings . isEnabled ( ) ` before checking TCP port availability in ` EmbeddedNeo4jServer . java `
restore character movement and health default values in movementdebugcommands
[ type : fix ] fix randomloadbalancer . random ( ) to account for half total weight .
refactor GsonParser and MetricsResourceTest to simplify cache string handling and improve timestamp validation logic to enhance code readability and maintainability by redu
updated the parameter descriptions for " gcmsort " and " gcmdir " in ApacheHttpClientMediaWikiApi . java to clarify
replace checktransactionsynchstatus ( ) with pulsetransactioncoordinator ( ) in sessionimpl and abstractsharedsessioncontract .
pipe : fix deadlock in pipetaskcoordinator
updated the dependency jar generation logic to conditionally use " android - all - instrumented " based on the system property to enhance flexibility in
simplified the conditional check for silent mode in ExecDriver . java to improve readability and maintainability of the code
added validation to ensure default and required fields are not null in IndexSchema to prevent runtime errors for unsupported attributes on dynamic fields
removed the conditional check for randomly reading repair in StorageProxy . java to streamline the repair process by eliminating unnecessary randomness checks
replaced ImmutableSortedSet with Iterables for adding system include roots and added a new test for inclusion directories in PrebuiltCxxLibrary to improve
added checks for subject key identifier and serial number in AdaptableX509CertSelector . java and updated basic constraints in ForwardBuilder . java to
log4j2 - 1343 use abstractappender . parseint instead of try - catch for numberformatexception
added a deprecation annotation to GuiScreenEvent . java to indicate that the class is outdated and may be removed in future versions
removed methods ` addToCategories ` and ` removeFromCategories ` from ` CategoryEditSearchRecyclerViewAdapter ` to streamline category management by elimin
# 232 - enh : add servercachetype parameter to servercachefactory . createcache ( string , servercachetype )
updated the way RocketComponent properties are set in RocketComponent . java to ensure consistent handling of massOverriddenBy and CGOidden
[ netbeans - 4892 ] javacollectortask . post ( ) should close compiler on compilation cancellation .
refactor Task implementation to use a Supplier for improved flexibility to enhance code readability and maintainability by allowing a nullable work supplier
refactor WanReplicationServiceImpl to use a mutex for thread safety to improve thread safety and ensure proper executor management
added null checks for partition and table locations in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to improve robustness
refactor code to use lambda expressions instead of anonymous classes in LocalServiceRegistryClientImpl and RemoteServiceRegistry to improve code readability and maintain
added a new test class ` FilesTest ` and a static method ` delete ` in ` Files ` class to verify file deletion functionality to ensure
removed exception handling around the socket closure in ServerSocketAdaptor and SocketAdaptor to simplify the code by eliminating unnecessary exception handling
updated the class name check in SSLLogger from " java . lang . System " to " Logger . class . getName ( ) " to ensure
replaced ` currentWorkingDirectoryList . clear ( ) ` with ` addWorkingDir ( f . toString ( ) ) ` and updated the
added a null check for ` cn ` in ` ItemInfo . java ` and set ` mInsets ` in ` Workspace . java `
changed the access modifier of the ` GeneratedEntityDecorator ` class from public to private to restrict access to the class for better encapsulation
removed http : / / localhost : 8983 / solr / update / csv - Durl and java - Dtype URLs from SimplePostTool
[ geot - 5769 ] do n ' t return false for min / max command in symbolic differs
removed unnecessary registration of the ShutdownThread in JavaxWebSocketClientContainerProvider and added shutdown handling in JavaxWebSocketClientContainer to stream
simplified the null check for type in Linux . java to improve readability and maintainability of the code
destroy the web application context after each test to prevent memory leaks
added functionality to search for resources based on query parameters in RemoteBrowseHandler . java to enhance user experience by allowing users to select specific resources based
removed the visibility of the neutral button in SetupEncryptionDialogFragment to ensure the button is visible for better user experience
refactor itemdao . countitems ( ) and itemdaoimpl . countnotarchived ( ) , countnotarchived (
updated SQL statement construction to use double quotes for table names and column descriptions to ensure proper formatting of SQL statements for consistency and clarity
added exception handling functionality to CheckTokenEndpoint to improve error logging and response translation for OAuth2 exceptions
updated multiple Java classes to implement a new method ` lookupSeriesPaint ( ) ` in the ` AbstractRenderer ` class to enhance functionality for series
updated assertions and response handling in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests to improve clarity and functionality of identity zone management
increased dismiss delay duration from 20000ms to 10000ms in multiple Java files to improve user experience by allowing more time for dismissal
added support for running single test methods with Surefire 2.22 . 0 or JUnit 5 in ActionProviderImpl . java to ensure
replaced ` HumanReadableException ` with ` RuntimeException ` in ` WorkerShellStep . java ` to improve error handling by providing a more
[ hotfix ] [ stream api ] replace @ publicevolving with @ experimental
refactor StreamCepstrumSource class to improve code readability to enhance maintainability and facilitate future updates
added a check to ensure index is within the bounds of the items array to prevent index out of bound errors when accessing items
updated assertions in CloneHelperTest to use Parenthesis instead of OrExpression to ensure correct type checking for Parenthesis expressions
added confirmation and requiredType attributes to the DebugPaste command class to enhance user experience by providing additional options for debugging
replaced ` get ( ) ` with ` orElseThrow ( ) ` in multiple configuration classes to improve error handling by providing clear error messages when
updated focus logic in DrawEquationWeb and added preventDefault handling in NewRadioButtonTreeItem and RadioButtonTreeItem to improve user experience by
replaced ` Arg ` with ` AbstractGoBinaryDescriptionArg ` and updated related imports and methods to improve clarity and consistency in handling Go
added a check for the existence of the " application . env " configuration in the Jooby . java file to ensure that the application
replaced ` RetryListenerSupport ` with ` RetryListener ` in multiple test files to simplify the code and improve clarity by using a more
[ micrometer - 498 ] fix counter serialization with decimal ( # 498 )
changed email and author fields from non - null to final in the Contribution class to enforce immutability and prevent accidental modification of the
refactor the loop structure in JUnitFormatter to use a do - while loop for appending a period to improve performance by avoiding unnecessary string
modified the way the ' elements ' variable is initialized in Subject . java to ensure that the ' elements ' variable is only assigned when the '
enhanced error messages in StaxEventItemReader to include the resource URL and modified exception handling in tests to improve clarity of error messages
* testmultiregionrendertarget do n ' t change the order of light , so add a simpleupdate ( ) method to choose
added null check for currentProfile before retrieving client result to avoid potential NullPointerException when currentProfile is null
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure proper handling of namespace declarations
added BigInteger instances for various parameters in KeyStoreManager . java to enhance security by integrating additional parameters for cryptographic operations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
set the engine version of the process definition in BpmnDeployer and BpmnDeployerTest to ensure the correct engine version is used for
updated property names in VelocityEngine from " class . resource . loader " and " class . resource . loader " to " resource . loaders "
updated thread verification logic in CEntryPointSnippets and VMThreads classes to enhance thread verification logic and improve clarity in thread management
added null check for the map before adding values in GenericUDFMapValues . java and created a new TestGenericUDFMapValues .
corrected the spelling of " interceptors " to " handlerInterceptors " in EndpointWebMvcAutoConfigurationTests . java to ensure consistency in naming
added oil well generation rate and enable oil spouts configuration in BCEnergyConfig . java and updated OilGenerator . java to
added functionality to create a new file for the " . clean - me " directory in the ImportContext and updated directory checks in JobQueue to
updated exception handling to retrieve the string from the cache instead of a hardcoded string to improve flexibility and maintainability of the exception handling
removed redundant import statements in CRLDistributionPointRevocationCheckerTests . java to streamline code and improve readability
added import statements for ZipConstants and ZipConstants64 for better organization to improve code clarity and maintainability by organizing imports
refactor the ` newFileSystem ` method to improve error handling and file existence checks to enhance robustness by ensuring only valid regular files are created
replaced ` createHorizontalStrut ` with ` createHorizontalGlue ` in the condition panel addition to improve layout consistency by using a more
refactor connection initialization in FailoverUpdateURIsTest . java to improve code readability and maintainability
added Gson @ SerializedName annotations to ServiceOsSpecific . java to enable serialization of additional properties for better data handling
added a ` deleteBook ` method to ` DatabaseAdapter ` and updated related references to use it to improve book deletion functionality and ensure proper database
refactor multiple Java files to improve code organization to enhance maintainability and readability of the codebase
updated the calculation of responseMsgPos in AbstractAjpProcessor . java to correct the response message position by subtracting the response message position
do n ' t start the admin console server if it ' s already start .
refactor unregisterHandlers method to use instance variables for binaryConsumer , textConsumer , and closeHandler to improve code readability and maintainability by
added properties for device ID transformation method , enable ID table , and log file in IoTDBDescriptor . java to enhance configuration management for device ID
updated NUM _ DOCS _ PER _ TYPE from 2000 to 100 and modified XML file names and assertions in ExitableDirectoryReaderTest . java
updated the condition to check for the presence of a access error in the mockTsp variable to correct the logic for verifying access errors
refactor script handling in Transaction and TransactionTest classes to streamline code and improve clarity to enhance code readability and maintainability by removing
updated the expression in IndexSchema to include both " / schema / types / fieldType " and " / schema / types / fieldtype " to
added a check for NullCompleter in the Completers class and created a new OptionCompleterTest class to ensure that OptionCompleter
reformatted the code for listing objects in S3Utils . java to improve readability and maintainability of the code
changed the type of ` sourcePeerId ` from ` String ` to ` int ` across multiple classes to accommodate larger source peer IDs
refactor file upload logic into a separate method for clarity to improve code readability and maintainability by encapsulating file upload logic
updated the reply button ' s alpha value from 5.5 f to 1.0 f to improve the visual appearance of the reply button
updated the expected string format in AccessLogSupportTest to include a timestamp in the expected string to ensure accurate formatting of expected output based on the
updated the temporary file path for the maryCacheFile in MaryCacheTest . java to ensure the maryCacheFile is written to a temporary
simplified null checks for subscribers in SettingImpl . java to improve code readability and performance by eliminating unnecessary null checks
added a null check for the marshaller in AbstractSamlObjectBuilder and updated exception handling in AbstractSaml10ResponseView to improve error handling and provide
replaced printStackTrace ( ) with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of stack
added a check to ensure the static directory class path exists in dev mode before rendering assets to prevent errors when the static directory class path is not
[ hotfix ] [ runtime ] add writeoptions to rocksdbkeyedstatebackend . db . put ( )
updated the default format string in CoreLabel . java from " value - tag - index " to " value - index " to standardize the
refactor hint handling in MainActivity to use request ' s getHints ( ) method to improve code readability and maintainability by reducing
change default value of native secp256k1 and native altbn128 to true
rename DuclsSandboxTest class to SandboxTest and update related references to improve clarity and consistency in naming conventions
camel - 14850 : camel - cxf - should use exchange . setexception instead of logger . log
changed the access modifier of the forwardPropagateTree method from package - private to public to allow access to the method from other classes
updated the SQL query to include additional columns in the group by clause to enhance the accuracy of the result set by providing more granular data
added a check for the " $ { project . basedir } " path in the DefaultModelValidator to inform users about unsupported project expressions during profile
refactor Style class to improve code readability to enhance maintainability and facilitate future updates
added zoom functionality to ShareActivity to handle back key events to enhance user experience by allowing navigation to the out - of - favorite screen
added a check for readDeprecated and ignoreDeprecated fields in Json . java to ensure deprecated fields are ignored when reading and ignored
added animations for showing and hiding the send layout in LauncherFragment . java to enhance user experience by allowing users to slide in and out
[ hotfix ] [ yarn ] fix checkstyle violation in yarn module
added Progressable parameter to createSequenceWriter methods across multiple classes to enhance progress control during sequence writing operations
[ hotfix ] fix checkstyle violation in sourcecoordinatorprovider
added functionality to remove a contribution from the panelByContribution list and update panel ordering and color updates to improve user interface responsiveness and
renamed the class ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and corrected a typo in the conditional statement to
added a check to initialize dPath to the user ' s directory if it is empty to ensure dPath defaults to the user ' s directory
updated the calculation of maximum supported channel count in DefaultAudioSink . java to ensure correct sample rate is used for passthrough handling
log4j2 - 1343 refactored mapfilter so that it do n ' t call getdata ( )
refactor VerificationInOrderWithCallsTest class for improved readability to enhance maintainability and clarity of test cases
updated the method call from ` axis . z ` to ` axis . x ` in ` Quaternion . java ` to correct the axis '
corrected the constant name for COLLECTION _ DELIM from " colelction . delim " to " collection . delim " to ensure consistency
add a new test case for the connection state listener in TestFrameworkBackground . java to ensure that the listener correctly reflects the initial connection state
bugfix #GH5355 - fix completion documentation for union and union type
refactor one - handed mode support logic in RecentsAnimationDeviceState . java to improve readability and maintainability of the code
added onDetachedFromWindow ( ) method to cancel all running tasks in AppsCustomizePagedView to ensure proper resource management by
added a dictionary resource parameter and updated MorfologikFilter and MorfologikAnalyzer to accept it to enhance functionality by allowing
replaced the count variable and exception handling logic in ResultSetTest . java to improve clarity and functionality of exception handling logic
updated the message parameter from " debug " to an empty string in GradleBuildService . java to provide a clearer default message for
replaced ` AtomicReference < Boolean > ` with ` AtomicBoolean ` for ` preventedByLocking ` and ` preventedByMVCC
refactor tooltip text handling in ComponentTreeRenderer to improve code readability and maintainability to enhance code clarity and maintainability by reducing
increased the timeout duration in the await statement from 5 seconds to 10 seconds in ZipkinStreamTests . java to allow for more time
add agegate _ state to deviantart cookie if no username or password be provide
refactor Google package signing keys to constants in PackageUtils . java to improve code readability and maintainability by reducing duplication
updated the initialization of ` SolutionBusiness ` to use ` createSolutionBusiness ( ) ` instead of ` commonApp . solutionBusiness ` to ensure
added a method to notify window state changes in WWindowPeer . java to improve event handling for window state changes in the application
added email description to template data in EntityGroupKeyContentFormatter and set description in TestEntityGroupKeyEmailContentFormatter to enhance user experience by
replaced ` remove ( sel ) ` with ` data . remove ( sel ) ` in ` UserData . java ` to ensure proper data removal
modified the language retrieval logic in Locale . java and added error handling in LocaleTest . java to ensure correct handling of language strings and improve error
refactor Liquibase change log validation and update visitor creation to use a dedicated method to improve code readability and maintainability by central
added a check to return early if the screen is pinning to optimize performance by avoiding unnecessary processing when pinning is active
added functionality to display a description of " No chart data available . " in the Chart class to enhance user experience by providing clearer context on
added synchronization to check for the presence of a response head in Http1xServerResponse and Http2ServerResponseImpl classes to ensure thread safety
refactor chunk handling logic in NettyResponse . java to utilize a separate chunkHandler method to improve code readability and maintainability by
added a new " : scheme " header to the Http2TestBase and updated related test cases to ensure proper handling of HTTP / 2 headers
fixed - rlocalcachedmap . keySet ( ) and value ( ) method should return cachedkeyset ( ) and cachedvalueset ( )
camel - 14850 : camel - jpa - allow to configure entitymanagerfactory and transactionmanager in start method of jpaendpoint
updated jumpSpeed assignment from fallSpeed to jumpSpeed in PhysicsCharacter . java to align the jumpSpeed assignment with the intended functionality
added a condition to check if reparsedFunction is null before processing syntax extensions to ensure that syntax extensions are only processed when reparsedFunction is
updated logger variable names and refactored order book handling in BitstampPusherService . java to improve code readability and maintainability by
deprecated the ` getOldUploadSegmentHttpURI ` and ` getOldUploadSegmentHttpsURI ` methods in ` FileUploadDownloadClient . java
updated the method call to use a filter parameter in MongoDbTailTrackingManager to enhance filtering capabilities for tracking objects
fix juel test that fail on juel .
added a range check for the alpha value in RecentsView . java to ensure the alpha value is within the valid range of 0 to
updated the formatting of the " Import - Package " string in ManifestReversion . java to ensure proper formatting of the import package version string
refactor DataSyncConfiguration class for improved clarity to enhance maintainability and readability of the code
added import for JavaSnippetRepository and initialized it in JavaLanguageServer . java to facilitate the initialization of JavaSnippetRepository for better
added a loop to update sums for each time bucket in StarTreeRecordStoreCircularBufferImpl . java to ensure that sums are only updated
updated URLs in ChromeDriverService and ChromeOptionsFunctionalTest from " http : / / code . google . com / p / chromed
( chore ) camel - pg : use prepared statement for postgres event consumer and producer
replaced imports from ` com . sun . syndication . feed . synd ` to ` com . rometools . rome
added Content - Length header handling in TransferCompletionHandler and updated NettyTransferAdapter initialization in NettyAsyncHttpProvider to ensure accurate transfer total
refactor Dialog class to improve code structure to enhance maintainability and readability of the dialog functionality
removed the protected constructor from EnhancedRuntimeException to simplify the instantiation of the RuntimeException class
added CountDownLatch and modified exception handling in SocketAppenderTest . java to improve synchronization and debugging capabilities during event processing
( chore ) camel - event - admin : remove unused import
updated exception handling and method parameters in ByteArray . java for consistency and clarity to improve error handling and enhance code readability
added a method to disable input proxy and modified touch event handling in RecentsAnimationWrapper . java to ensure proper handling of touch events and
camel - 6770 : disable restletdomainservicetest due to camel - 6770 issue
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify method signature by eliminating unnecessary parameters
rename ` com . hazelcast . tests ` to ` com . hazelcast . test . modulepath ` in ` module - info . java
added a method to retrieve source directories in JavaLanguageServer and improved logging messages in JavaServerConfiguration to enhance clarity and maintainability of
updated the menu item ID from menu _ open _ web to menu _ mute _ hashtags in TweetPager . java to enhance
updated method names and logic in AncestorDescendantTests and HasParentNode classes for clarity to improve readability and maintainability of the test
fix worldeditplayer . getblocky ( ) return - 1 when y = 0 .
added PathNotExistException handling to the selfCheckDataTypes method and refined measurement validation logic to improve error handling for partial insert operations and ensure
updated closing brace formatting in JavaCompiler . java to improve code readability and maintain consistency
[ hotfix ] [ operator ] make mailboxexecutor non - nullable in operatorfactory
hbase - 25711 add authorization check for settablestateinmeta and fixmeta
updated method calls in GatewayMetricFilterTests to use method references instead of lambda expressions to improve code readability and maintainability
updated the constructor of BlockJUnit4ClassRunner to use the getJavaClass ( ) method instead of the TestClass to ensure compatibility with the
[ drools - 5861 ] fix delete of kie data ( # 5862 )
adjusted the calculation of allAppsCellWidthPx by adding 2 * allAppsCellPaddingPx to improve layout responsiveness by accounting
[ hotfix ] [ core ] fix checkstyle violation in coreoptions
replaced calls to ` doc ( ) ` with ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to ` writer . forceMerge ( 1 ) ` in ` TestMultiPhraseEnum . java ` to ensure that the multi -
hhh - 14850 - make session . close ( ) return void instead of connection
refactor GetLocations class implementation to improve code readability and maintainability
replaced exception . printStackTrace ( ) with a null check for the exception variable to simplify exception handling and improve code readability
modified the exception handling in Contents . java to ignore IOException instead of throwing UncheckedIOException to improve error handling by explicitly ignoring potential IOExceptions
updated GeneratePubkeyActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android versions
ruby flavor : use stringbuilder instead of switch - case statement
updated logging level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
remove usecaches from nio2endpoint , no longer need
refactor CasGeoLocationConfiguration to use Resource for database reading instead of MaxmindProperties to improve code clarity and reduce dependency on Max
updated test cases in InstructorFeedbackResultsPageUiTest to use more descriptive variable names to improve readability and maintainability of the test
updated the ` useEncodedQualifierListOptimization ` method to accept a ` Scan ` parameter to enhance functionality by allowing qualifier list optimization based on
removed the ` public ` access modifier from several methods in ` ApprovalStore ` and ` ApprovalsControllerService ` classes to enhance
added a delayed task to cancel notifications when a download is started to improve user experience by preventing unnecessary notifications when a download is in progress
replaced ` getOpenView ` with ` getAnyView ` in ` TaskbarDragLayerController ` and added a new method ` getView `
updated the project version from 1.0 . 11 to 1.0 . 13 in JFreeChartResources . java to reflect the latest features
replaced ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper execution of the
refactor GsonBuilder class to improve code readability to enhance maintainability and facilitate future updates
add null check for centerGeo and circleCenters in ProverBotanasMethod . java to avoid potential NullPointerExceptions when adding fixed points
remove espressohome option and replace with graalvm home finder
doc ( javadoc ) : fix typo in javadoc ( # 1193 )
modified the DeleteSessionAction class to be final and modified session management logic to enhance immutability and simplify session management logic
corrected the spelling of " InvalidDocumentStoreApiUageException " to " InvalidDocumentStoreApiUsageException " to ensure consistency and
updated JoinQParserPlugin and SolrIndexSearcher to initialize size to 0 and modified result initialization logic to ensure proper handling of empty results and
added a file parameter to the triggerMediaScan method in FileDownloader . java to enhance media scanning functionality by associating the media scan with
removed conditional logic for posting test results in TestRunning . java to simplify test results handling by directly calling postTestResults
added custom G - code settings to MainWindow . java to enable custom G - code functionality for improved user experience
camel - 14284 : camel - jbang - use a bufferedwriter instead of a PrintWriter to improve performance .
refactor JsonElement class to improve code readability to enhance maintainability and facilitate future updates
added imports for SolrTestCaseJ4 and modified exception handling in TestBadConfig . java to enhance test setup and ensure proper exception handling during
added a method to remove fragments and hide the action bar in GpsMainActivity to improve user experience by ensuring the action bar is properly hidden
updated spanish tokens and tokens in TokenizerAnnotatorITest . java from " = LRB = " to " ( " , ES "
replaced instances of ` Range . asByteRange ( ) ` with ` Range . Byte range ` and added a check for ` len `
updated G - code file path and modified bounds handling in VisualizerCanvas . java and GcodeViewParse . java to improve test coverage and
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwards
reformatted the method call in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java for improved readability to enhance
added a condition to close the exchangeClient if the query is complete and the output stage is null to ensure proper resource management and prevent potential memory
remove duplicate file directory check in integrity check ( # 4569 )
removed the import of SolrClient and its associated list from the ChaosMonkey class to streamline the code by eliminating unused
added null check for ` fas ` before accessing its private persistent file to avoid potential NullPointerException when ` fas ` is null
refactored the formatting of the add method in NestedRepositoryTreePanel . java to improve code readability and maintainability
made the constructor of ` ExtensionTypeHeader ` public and added a validation check for the ` type ` and ` length ` parameters to enhance
pdfbox - 4892 : throw ioexception instead of swallow exception , a suggest by valerybokov
changed the default value of ` deleteOnShutdown ` and ` pushOnShutdown ` from ` false ` to ` true ` and added getter and
added a trigger callback to the ReactiveStateMachineExecutor and updated the handleEvent method to include it to improve error handling and context management during state
add a new test method ` whenMultiplePythonExecutablesOnPathFirstIsUsed ` to ` BuckConfigTest . java ` to
added a default button to the root pane in InitialAccountRegistrationFrame to enhance user interface functionality by allowing sign - in functionality
added a new configuration option for dynamic semi - join reduction in map - joins to improve performance by using a semi - join branch for map -
updated error logging messages in RegistrationRestRepository to include the exception details to improve debugging by providing more context in error messages for better debugging
move utility class to util package to avoid circular dependency
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created corresponding tests in ` Oidc
removed the ' center ' variable from multiple Circle , Ellipse , Polygon , and Rectangle classes to streamline the code by eliminating unnecessary
[ beam - 10660 ] fix npe in registerandprocessbundleoperation when pcollection be not equal to grpcreadtransformoutputp
refactor SslContextFactory to improve SSL context management to enhance security and reliability of SSL connections
updated maxExpectations and maxLogEntries assertions to use default values instead of a fixed value to ensure consistent handling of maximum expectations and log entries
updated the return value from " access _ confirmation " to " access _ confirmation _ error " to provide a clearer error message for access confirmation
[ 3.0 ] fix classloading issue in referenceconfig ( # 4569 )
added a new method ` shiftRows ` to handle height copying and resetting of original row heights in ` HSSFSheet . java ` to
updated method names from setRolloverIcon to setRolloverPressedIcon in FontImage . java to clarify the purpose of the rol
updated grid translation handling in TaskViewUtils and TaskViewSimulator to use setGridTranslationY instead of getGridTranslationSecondary to improve cl
refactor Assertions class to improve code readability to enhance maintainability and facilitate easier debugging
added null check for currentDateTimeFunction in multiple database classes to ensure consistent retrieval of currentDateTimeFunction across database instances
added an anonymousPath method to IOUtils and updated Log4jUtils to use it to improve path handling and ensure proper logging of configuration files
updated the ` call ` method to include a content description and modified related logic in ` DigitalWellBeingToast . java `
increased the wait duration for metaAvailable from 0 to 50 milliseconds to allow for more time for the metaLocation retrieval to complete before returning
refactor LineNumberTagAggregator and TestDominance classes to improve code readability and maintainability
make genericitem . getstate ( ) return stateconverterutil . defaultconversion ( state , typeClass ) instead of null
added additional properties and a new test method for fetching posts and details in BidirectionalOneToOneNPlusOneTest . java to enhance the
added a method to remove extra empty screen and updated startSearchPageIndex initialization to ensure proper handling of empty workspace screens and improve search
updated HashMap initialization and HashSet initialization in MarkBasePointersPhase and added null check in IndexedValueMap to improve memory efficiency and prevent potential NullPointerExceptions
updated string formatting in GoogleLineChart and GooglePieChart classes to use single quotes instead of double quotes to ensure consistency in string formatting across
refactor batch waiting logic in SendingAccountor . java to improve clarity and error handling to enhance code readability and maintainability while
added a position property and its setter in WALPrettyPrinter . java to enable seeking to a specific file in the log
updated the port number from 1 to 0 in the NettyTransceiver initialization to ensure the server connects to a specific port without failing
refactor event handling in SimpleReport to sort events before generating a report to ensure that events are processed in the same order as their start time
add a new test method ` getCsvLine _ DescriptionContainsDoubleQuote _ ReturnsCSVLineWithEscapedQuote ` to ` CSVFileLoggerTest
updated command - line arguments in DcorefChineseBenchmarkSlowITest . java and modified method signatures in AbstractSequenceClassifier . java to
of - 2699 : do n ' t send iq message to remote server if the recipient be the same .
removed the @ JniImpl annotation from VM . java to streamline the code by eliminating unnecessary functionality
updated configuration settings for blocking and robots checks in Fetcher2 . java to improve clarity and consistency in configuration management
added a condition to check if the video HDR format is " dolbyvision " before processing the SID to ensure that the S
fix a bug in asttests that cause some test to fail
add integration test for worldborder . setworldbordersize ( ) and worldborder . resizeworldborder ( )
hbase - 15936 hmaster . getwalgroupsreplicationstatus ( ) should return empty map if master can not host user region
do n ' t show the login dialog if the login event be successful
updated the ` markDataResourceOnline ` method to accept a list of instance configurations instead of an empty list to enhance flexibility in marking data
changed the FieldAttributes class from final to public to allow access to the FieldAttributes class from other packages
add unit test for read erroneous maven project contain reference
removed redundant null checks for oldProto and protoGetSwitches in PropertyMap . java to simplify the condition for better readability and maintainability
refactor ` getControllerId ` and related methods to accept a ` configId ` parameter across multiple classes to enhance flexibility by allowing retrieval of
replaced ` sessionFactory . close ( ) ` with ` session . close ( ) ` in ` SessionRequest . java ` to ensure proper
removed the condition for generating refresh token in OidcConsentApprovalViewResolver . java to simplify the consent prompt handling logic
removed a print statement from the Http2SolrClient class to streamline the code by eliminating unnecessary output
replaced the extractor method with a NoopGetter in BaggagePropagation . java to provide a default implementation that returns null to simplify the
refactor conditional - on - enabled resource chain implementation to improve code readability and maintainability
added a condition to check if the tree root has children greater than zero in BarrowmanCalculator . java to ensure that the tree root only
updated the method call from ` getFilteredStream ( ) ` to ` getUnfilteredStream ( ) ` in ` JBIG2Filter . java
updated log messages in FacebookImpl . java to use " CN1 " instead of " CN1 " and added intent result listener functionality to enhance
updated return statements in ShadowICU . java and added a new test for getBestDateTimePattern in ShadowICUTest . java to ensure proper
removed the dependency on KeyguardManager in TouchInteractionService . java to simplify the code by eliminating unnecessary dependency on KeyguardManager
server : fix npe in updatevolume ( volume ) when the default disk offering be not set
replaced ` FileChannel ` with ` AsynchronousFileChannel ` and added a position variable in ` UtowBodyHandler . java ` to improve
removed unnecessary whitespace in SigInt and SigIntTest classes to improve code readability and maintainability
ggb - 1186 fix : text be not update when text size change
change return value from - 1 to 0 in Asset . java to reflect the correct behavior of the method
refactor ComputeBenchmark to use static final variables for mapping and value loading functions to improve code readability and maintainability by reducing repetitive
added setOnRefreshListener to UploadListFragment to notifyDataSetChanged when data changes are detected to improve user experience by notifying the adapter when data
refactor file handling from File to Path in BibDatabaseContext and related classes to improve clarity and consistency in handling file paths
simplified array creation and retrieval in ParticleEffect . java for better readability to enhance code clarity and maintainability by reducing
refactor Tomcat . java to improve handling of services and engines to enhance code clarity and ensure correct service and engine retrieval
updated error messages to include periods in BuildRuleFactoryParams and Console classes to improve clarity and consistency in error reporting
added a check to return early if the playback state is not playing to optimize performance by avoiding unnecessary processing when not in playing state
replaced ` findByPK ` method with ` findById ( 0L ) ` in ` DeleteServiceTest . java ` to simplify the code by
refactor inner class detection logic in Java2TypeScriptTranslator and add a new InnerClassFieldClash class to improve code clarity and
added logging and follow redirect filter configurations to DockerClientFactory and DockerClientProfile to enable configurable logging and follow redirect filtering based on client profile settings
replaced direct calls to displayChanged ( ) with awtUnlock ( ) and awtLock ( ) in XToolkit . java to ensure thread
hhh - 10183 fix test for sqlserver2008
added a call to ` revert ( ) ` in ` OPCPackage . java ` and refactored the verification logic in ` ZipHelper
changed the access modifier of the storeClassFile method from private to public to allow access to the method from other classes
replaced the assertion for NO _ MORE _ ORDS in SingletonSortedSetDocValues with a new test class TestSortedSetDocValues
updated error messages in CGIHandler and added JavaVM ' s start method in JavaVM . java to improve clarity of error messages and
added additional conditions to check for line endings in LineReaderImpl . java to enhance functionality to handle additional line endings
updated the ` multiFetchSourceFiles ` method to accept a ` Set < String > ` instead of a ` List < String > ` to
added a check to return early if the mesh vertex count is zero to improve performance by avoiding unnecessary processing when no vertices are available
updated test methods and added verification error handling in IncorectBindingPuzzleFixedTest and DescriptiveMessagesOnVerificationInOrderErrorsTest to
replaced ` FileUtil . createData ( root , menuPath ) . delete ( ) ` with ` FileUtil . createFolder ( root
remove unused import of node in type system .
refactor JsonObject class to improve code readability to enhance maintainability and facilitate future updates
updated conditions in SelectChannelEndPoint . java and modified HttpConnection . java to return the correct max idle time based on low resources to ensure proper
fix farmlandblock . cansustainplant not be call with an invalid plant ( # 3649 )
added a new table ` SALTEDTABLE123 ` and updated the database metadata query to include multi - tenant support to enhance metadata retrieval capabilities
updated SimpleDateFormat instantiation to use Locale . US in HttpCookie . java and added a new class B6791927 . java to ensure consistent
removed multiple redundant closing statements in DbHelper . java to improve code readability and maintainability by eliminating redundancy
increased the timeout duration for polling in BatchMessageListenerContainerIntegrationTests from 1 second to 5 seconds to improve test reliability by allowing
initialize economyallocationstage with tracera option if tracera be enable
add save _ database and save _ all keybindings to the source tab
refactor ObjectMapper initialization to use a static block for setting the line separator to ensure consistent line endings across the application
replaced backslashes with forward slashes in the name in NativeEnvironmentRepository . java to ensure consistent path formatting across different operating systems
refactor application management in multiple test classes to use a static Application instance to improve resource management and ensure proper cleanup of the application during tests
[ java ] remove redundant code for validate existing record in recordinglog .
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
make testfluzzoptimizations more stable on travis
added a private boolean field ` reverseImage ` and updated its assignment in ` CameraManager . java ` to streamline the initialization of ` reverse
updated string comparisons for entry names in ResourceUtils , LoaderZipEntries , Repackager , and RestDocsWebTestClientBuilderCustomizer to
added a new ` EXCLUDE _ IDS _ META _ AND _ EMPTY ` predicate and refactored the ` replaceFields ` method to
updated test classes to use JUnit 5 annotations and changed method visibility from public to package - private to improve test structure and facilitate
replaced the usage of New . arrayList with a dynamic COUNT variable and updated the TYPES initialization to improve performance and reduce memory usage when
refactor TypeUtil class to improve code readability to enhance maintainability and facilitate future updates
updated trigger time format to use LocalDateTime for better timezone handling to ensure accurate date representation for alert notifications
added a method to create an AbstractMethodError thrower for a specific method in MethodHandleResolver . java to improve error handling for abstract method
camel - 14850 : camel - core - ognl should not throw illegalsyntaxexception when try to parse $ { body . o
removed the check for empty ` toExplore ` in ` AbstractParser . java ` to streamline the code by eliminating unnecessary
camel - 14284 : camel - jclouds - add copy method to copy input stream to output stream
( chore ) camel - consul : remove osgi bundle not release yet
added a check for the ACC _ STRICT access flag on default methods in the Check . java file and created a new CheckACC _
[ java ] increase driver timeout for channel validation test .
added a new file ` FileExtensions . java ` with constants for CLANG source and headers to provide a centralized set of file extensions for
replaced the ThreadLocalDateFormat class with a direct ThreadLocal instance for better encapsulation to simplify the code and improve performance by eliminating
removed deprecated options for FastTLABRefill , DeferPollingPageLoopCount , SafepointSpinBeforeYield , and De
added display name property to Pac4jBaseClientProperties and updated related classes to utilize it to enhance client configuration flexibility by allowing
replaced RuntimeException with EarlyTerminationException in multiple operator classes to improve error handling by throwing a more general EarlyTerminationException
[ hotfix ] [ test ] fix checkstyle violation in tracefunctionaroundwrapper
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5888 .
[ 1.19 . x ] fix npe in capabilitydispatcher when parent be null .
removed KeyCrypterException from the catch block in WalletTool . java to simplify error handling for better clarity
mark the SubmitOrderedCompletionService class as deprecated to indicate that the class is outdated and should no longer be used
modify the length calculation in HyphenationTree . java to ensure correct handling of the original length after modifying the length
http : / / issues . apache . org / activemq / browse / amq - 4892 - add a delay to the
add an import for javax . swing . * and move the resource management service to the javax . swing . * package to improve code organization and
updated the description of PARAMETER _ NEEDS _ TO _ BE _ NAMED in ParameterBinder . java to clarify that Java 8
added a boolean flag ` providersChanged ` to the ` ConfigurationManager ` class to track provider changes effectively
added a method ` quoteIdentifierTokens ` to handle quoted identifiers in ` TokenRewriteStream ` to ensure proper handling of identifiers based on configuration settings
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated the type of ` loader ` and ` clazz ` in ` SolrResourceLoader . java ` to improve type safety and eliminate unchecked warnings
modified the condition for hitting cells in the Window class to ensure proper handling of hit cells within the window ' s boundaries
added null check for appManifest before retrieving targetSdkVersion to avoid potential NullPointerException when appManifest is null
updated the ` ConfigurationMetadataGenerator ` and ` CasConfigurationMetadataCatalog ` classes to use ` MAPPER ` instead of ` DefaultPrettyPrinter `
added userName field and its getter / setter methods to Driver and related classes to allow customization of the user name for the driver
camel - 14284 : camel - xslt - allow to customize the transformation of the xslt file , url , and input stream
added HadoopShim dependency and updated related classes to utilize it to enhance Hadoop shim management and improve code maintainability
removed redundant variable declarations in ShadowAssetManagerTest , ShadowContentObserverTest , and ShadowDownloadManagerTest to streamline code by eliminating
added null check for request mapping data before logging access access to avoid potential NullPointerException when context is not initialized
updated the ThroughputLogger to return early if startTime is zero and modified the message formatting in ThroughputLoggerTest to improve performance by
8014187 : [ testbug ] skip the rest of the test on debug build
[ scb - 2605 ] fix log publish of metric statistic ( # 2605 )
replaced System . err . println with a conditional check for logback property resolution to improve code readability and ensure logback configuration is correctly
added @ NotNull annotations to methods in multiple classes to enforce non - null parameters to improve code robustness by preventing potential NullPointerExceptions
updated Escaper constants to use SHELL _ ESCAPER instead of BASH _ ESCAPER and added platform - specific
added try - with - resources for container initialization in AbstractWaitStrategyTest and HttpWaitStrategyTest to ensure proper resource management and avoid potential memory
renamed the class TestLucene50FieldInfoFormat from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to reflect the new
removed unnecessary whitespace in RelativeDateFormatTests . java to improve code readability and maintain consistency
added a method to generate a shield address in RpcApiService to enable the retrieval of shield addresses from the wallet
changed the return type of ` readConsoleInput ( ) ` methods from ` byte [ ] ` to ` String ` across multiple classes to improve
updated regex patterns in TestStabilityRule . java and changed the platform flavor variable from PRESUBMIT to PLATFORM _ PO
added a condition to decrement mvToMatch based on the score of the best text fragment to limit fragments ( for multi - valued fields ) , not
modified the ` tryToLogin ` method to accept a ` Uri ` with username and password as parameters to enhance authentication handling by allowing users to
updated entity handling logic in HandlerSceneEntityDrownReq . java and PacketSceneEntityDrownRsp . java to improve entity management and
( chore ) camel - jms : fix checkstyle violation
removed the wrapping of collections in the update method call to simplify the method signature for better readability and maintainability
added logging for currency handling and improved import statements in BTCEAdapters . java to enhance error handling and provide clearer logging for unknown
[ java ] do n ' t set subscription name if it be the same a the candidate subscription name .
pdfbox - 4892 : fix typo , a suggest by valerybokov
added a parameter to the startController method and implemented tenant creation methods in ClusterTest and HybridClusterIntegrationTest to enhance control over tenant isolation
change return type of HasSettings . java from ImmutableMap . builder ( ) to Map < String , Object > to improve code clarity and eliminate
added a check to ensure attrs size is greater than zero before validating its size to avoid potential errors when attrs size is zero
added methods to retrieve JDK names , types , and language levels from IjProjectBuckConfig and updated related classes to utilize these
updated the Experimenal description to Experimental in HiveSessionProperties . java to clarify the purpose of the optimization feature
added tests for handling string and user details in GrantedAuthorityEffectiveAclsResolverTests to ensure correct behavior of the GrantedAuthorityEffectiveA
fix : use solvedjavaparser object for method resolution in javaparser adapter
added functionality to determine the number of buttons in XToolkit based on a maximum limit to ensure that the application does not exceed defined limits for
replaced ` jdk . testlibrary . Asserts . assertEquals ` with ` com . oracle . java . testlibrary . Asserts
added a new ` MessagePackFactory ` class and refactored the ` newUnpacker ` methods in ` MessagePack . java ` to
add is _ caver and is _ desert and is _ caver to tag , close # 259
rename ` present ` method to ` draw ` across multiple screen classes to improve clarity and consistency in method naming
added a condition to check if the component is horizontal before setting the layout to ensure proper UIID updates based on the horizontal state of the component
replaced ` DOI _ URL _ PATTERN . matcher ( identifier ) . matches ( ) ` with ` matcher . matches ( ) ` in
replaced instances of ` AndroidMultiTouchHandler instanceof AndroidMultiTouchHandler ` with ` hasMultitouch ` in ` AndroidInput . java
[ java ] do n ' t throw agentterminationexception if the commitposition be close .
added UserSite and UserSiteId classes for managing user and site identifiers to facilitate the creation and retrieval of user sites in the
added URL parsing and error handling for address extraction in HttpConverterRegistrar . java to improve robustness by ensuring the address can be a valid URL
api : listcapacity - ignore storage _ allocated / storage _ allocated and storage _ pool in listcapacity api response
replaced ` openInput ( ) . close ( ) ` with ` fileLength ( ) ` in ` NRTCachingDirectory . java `
modified the JavascriptCompiler class to be final and refactored exception handling in the generateClass method to enhance code clarity and maintainability by
added synchronized keyword to UISettings class to ensure thread safety when accessing UISettings instances
added a check for native text input and changed the access modifier of the fireDataChanged method from private to public to allow external access to the
[ flink - 23298 ] [ table - planner - blink ] add emulator support for schema change error in spannerio
fix checkstyle issue in test / java / lang / class / compilertest . java and test / java / util / testutil . java
updated array type handling from double to short in ObjectInputStream . java and added a new class CloneArray . java to ensure proper cloning of short
refactor nonce retrieval and error logging in OIDCAuthenticationFilter . java to improve clarity and consistency in handling ID token nonce claims
added a condition to check if a field is a relationship field to ensure proper handling of relationships in DCInputSet
added support for server slogan capability in the FileDataStorageManager and updated related classes to enhance user experience by enabling server slog
modified the conditional logic for tinting menu items in DrawerActivity . java to correct the logic for tinting menu items based on
replace fail ( ) with system . out . println ( ) and add assumption for exception handling in SolrRequestParserTest . java to improve test
added a check to return early if no missing symbol events are present to improve performance by avoiding unnecessary processing when no missing symbols are present
added a new table cell " Data 5 - 4 " to the StringHelperTest . java file to enhance the test coverage for string manipulation functionality
added a warning log for cases where the data provider returns an empty array or iterator to improve error handling and provide clearer feedback when the data
( chore ) camel - jbang : replace usage of collections . empty _ set with collections . emptylist ( )
fix selection style for freeplane 1.9 . 8
updated the parameter name from ' mass ' to ' restitution ' in the setRestitution method call to improve clarity and consistency
added a new file AutoFtpActivity . java to implement FTP test functionality to facilitate automated FTP communication testing in the application
refactor table and column token handling in BaseSemanticAnalyzer to improve readability and maintainability of the code
added methods to retrieve and set component state in multiple classes to enhance component state management and improve code clarity
added a new class ` RemoteExecutionEnabled ` and implemented serialization and deserialization for ` RemoteExecutionConditional ` to enable or disable remote execution based on
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced FileReader with InputStreamReader in ImportCsv . java and added @ SuppressWarnings ( " squid : S1135 " ) annotations in PublicBA
added a method to assert shadow variables are not stale in AbstractScoreDirector to ensure that shadow variables are not stale during score calculations
updated the configuration key for semijoin conversion from " hive . enable . semijoin . conversion " to " hive . optimize . semijoin .
added logging for unhandled message content in multiple classes to improve error handling and debugging clarity when processing message content
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated related logic in ` FileDisplay
added assertions to validate the presence and retrieval of the transaction hash in PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly validated
added a deprecated annotation to ISchemaRegion and renamed test methods in SchemaRegionBasicTest to clarify the reason for deprecating the
added a null check for sampleMimeType in MediaCodecRenderer to ensure that a valid format is provided to avoid runtime exceptions
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in ` QueryExecutorImpl . java ` and ` AbstractJdbc
added @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) to the AllArgsConstructor annotation to enable JSON serialization for properties in the
added SQLFeatureNotSupportedException for unsupported view types in MetaDataClient to indicate that creating an index on a view is not supported yet and will be soon
added a new ` Website ` class and refactored ` PopulatorImplTest ` to utilize it to enhance the functionality of the
added a setup method to set the default locale in BSFormatterTest to ensure consistent locale settings for tests
improve error message if a badly download jar file be find .
updated assertion in MultiPartParsingTest from containsString to Matchers . equalToIgnoringCase for expected value to ensure case - insensitive matching of
added a check for single parameters before adding them to the passed local list in SimpleExprGenerator . java to ensure that only single parameters are processed
added a volatile boolean flag ` createdVertx ` and modified the conditional check for ` vertx ` to ensure ` vertx ` is only
updated the ` writeAttributes ` method calls to use ` node ` instead of ` null ` for ` style ` and ` size ` to ensure
updated log messages in SynchronizeFolderOperation and FileDisplayActivity to use " Synchronized " instead of " Synchroned " to improve clarity
added a new boolean field ` ignoredReadStatus ` and updated related REST classes to manage unread status to ensure all entries are returned regardless of their
replaced ` MavenTestingUtils . getTargetDir ( ) . toURI ( ) ` with ` MavenPaths . targetDir ( ) . resolve ( )
[ type : refactor ] fix nullpointerexception in registerserverconsumerexecutor
modified the logic for determining if a sound is playing in GwtMusic . java to ensure that the sound is only played when not
added a new permission for ADMIN _ SUDO _ AREA in MainCommand . java and updated Captions . java to include it to enhance
updated query options handling in ServerRequestPlanVisitor and modified test cases in QueryRunnerTest and QueryRunnerTestBase to enhance query performance and ensure
updated filename checks in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject to use
updated assertions in ResourcesTest to use a variable for pure and mixed emoji strings to improve readability and maintainability of the test assertions
replaced the native method NMTWaitForDataMerge with NMTOverflowHashBucket and NMTMallocWithPseudoStack in White
[ flink - 20613 ] [ serializer ] deprecate eitherserializer . snapshotconfiguration ( ) and introduce javaeitherserializersnapshot
refactor AddressResolverOptions to use constants from AddressResolver for default ndots and rotate options to improve code readability and maintainability by central
added a call to the superclass ' s __ associate method in RequestRockerTemplate and a corresponding test in RequestRockerTemplateTest to ensure
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated path references from " liquibase / parser / core / xml / " to " www . liquibase . org /
move commonmimetypelocator to test package to avoid conflict with other package .
updated repository state from INIT to NOT _ REQUIRED in multiple classes to accurately reflect the state of repositories that are not required
updated the comparison logic in GenerateChangeLogTask . java to include schema comparison and diff types to enhance the comparison logic to accurately reflect the
[ hotfix ] [ test ] fix checkstyle violation in testbackwardanoamlyfunctionutils
added a new file ProgressiveJPEGTest . java to implement a test for the ProgressiveJPEG rendering functionality to ensure that the ProgressiveJPEG
updated MaterialLoader to use mat . setFloat ( " AlphaDiscardThreshold " , 0.01 f ) instead of setAlphaTest and set
improve error message when native - image build on window be not support .
added a null and length check before setting the size in the Label class to avoid potential NullPointerExceptions when text is null or empty
modify readVarInt ( ) to include a modulus operation to ensure correct variable integer representation in data processing
added a private constructor to the PushUtils class and made it final in ThumbnailsCacheManager to ensure immutability of the PushUtils class
replaced the calculation of the length variable with a method call to get the length from the configuration to simplify the code and improve readability by
removed unnecessary casting of MockDirectoryWrapper to setEnableVirusScanner to simplify code and improve readability
updated the filename pattern in the componentPresetDao load method to allow for optional parameters to enhance flexibility in loading presets from CSV files
added a conditional check for duration before announcing accessibility in TaskbarStashController to ensure accessibility is only announced when the
updated the instantiation of the homeNode to use RefreshTask instead of Args to improve code clarity and maintainability by using a more descriptive
pmdtask : add a test to make sure that only one jdk be target
use mockito ' s built - in constructor instead of powermock ' s ( # 4358 )
added static PrintStream for error and output streams in TestSchemaToolCatalogOps . java to improve resource management by setting standard output and error streams
added DFSClient to the FanOutOneBlockAsyncDFSOutputSaslHelper constructor and updated the SaslNegotiateHandler to
updated MongoQueryMethod to accept RepositoryMetadata instead of EntityInformationCreator to enhance query method flexibility by allowing additional repository metadata
refactor entity resolution to support both EntityResolver and EntityResolver2 to enhance flexibility in handling XML properties in the Digester class
updated import statements in MetaDataEndpointImpl . java to remove redundant imports to streamline code and improve readability by eliminating redundancy
updated ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry interval in TxnHandler . java to
replaced variable ` xl ` with ` xAxis ` for consistency in ` BarChartActivity . java ` to improve code readability and maintainability
added support for Windows - specific character handling in FsUtils . java to enhance compatibility with various operating systems and improve character validation
simonstewart : rename ` ` in ' ' to ` ` using ' ' in ` seleniumrunner . java `
add processpluginconfiguration to defaultprojectbuildingrequest so it can be override by plugins
fix division by zero in proxy and server traffic counter . patch by jbellis
test : make it system test work with google cloud vision
updated return values in ModeledConnectionRecord , ActiveConnectionRecord , and AuthenticatedUser classes to return null instead of " STUB " to
add admin button to community list if user be an admin
added a counter for long and short compaction threads in CompactSplit . java to track thread counts for better monitoring and monitoring of compaction processes
replaced getApplication ( ) . getPackageName ( ) with resources . getResourcePackageName ( R . array . wallpapers ) in Wallpaper
added a method to retrieve visible plot players in the Near class to improve player visibility handling for better plot presentation
updated multiple Java files related to AndroidManifest , ResName , and ShadowMediaPlayer to improve code organization and maintainability
updated MlibOpsTest . java file to improve test coverage for library operations
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _ IMPL
updated attribute key from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test case in SchemeGenerator
removed null checks for the encryption key and initialization vector in UploadFileOperation . java to simplify the code by directly assigning the encryption key and initialization
added @ Stability ( flavors = LOCAL | PLATFORM _ POSTSUBMIT ) annotation to WorkProfileTest . java to enable testing
added a check to skip processing if the bucketing version is not set to optimize performance by avoiding unnecessary processing when the bucketing version is
changed the method call from ` setCursorPosition ( x , y ) ` to ` input . setCursorPosition ( x , y ) `
added ` LockFreeBucketContendedTimeMeter ` and ` LockFreeBucket _ FinalFields _ CacheLinePadding ` classes , and created a
add tpstats command to print thread pool stats . patch by jbellis
updated maxBitrate assignment to use userPreferences instead of direct calls to Utils . getMaxBitrate to ensure compatibility with user preferences for bitrate
added checks for both trace ID and span ID in ZipkinHttpSpanExtractor . java and created a new test method in TraceFilterTests .
remove unnecessary hashset creation in mutableofferdatamodel
use the right - aligned type icon for the dartservercompletioncontributor ' s lookup element ( # 3649 )
added a call to set the project in LauncherUtils to ensure the application uses the correct project context
updated JsBundle and JsBundleBuilder to include ProjectFilesystem as a parameter across multiple classes to enhance build configuration flexibility by allowing the filesystem to
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
refactor MetricsDSLContext to improve code readability to enhance maintainability and facilitate future updates
removed the ` VersionConfig ` interface and updated the ` VersionBuckConfig ` class to use ` ImmutableMap . builderWithExpectedSize ` to
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException to improve error handling by catching potential
changed the access modifier of the validateTypes method from static to public to allow access to the validateTypes method from other classes
chore : update gapic - generator - java with mock service generation fix ( # 7 )
added SLF4J logging functionality to SimulationStatus . java to facilitate debugging and monitoring of simulation status updates
updated VERSION _ POSITION _ Y and VERSION _ FONT from 138 to 150 and 14 to reflect the new version of the Splash application
added a runLater ( ) method to the notifications list in UserInterfaceComponentImpl . java to ensure notifications are processed on the main thread
added a mock for the ReturnsElementsOf method in AdditionalAnswers . java and updated its implementation in ReturnsElementsOf . java to enhance functionality by
updated the error message for dropping partitions for non - string partition columns to clarify that partitions are only allowed using non - equality
added a new test method ` testLineFileDocs ` to ` BaseStoredFieldsFormatTestCase ` for testing LineFileDocs functionality to ensure
added a method to retrieve the version code in MainApp and updated references in FeatureList and WhatsNewActivity to utilize MainApp '
camel - 16400 : beaninfo . requestBody ( ) should check if the body be an instance of the inputstream type to avoid ambiguous
replaced instances of ` getContentDispositionFilename ` with ` getSubmittedFileName ` in ` MultiPartInputStreamTest . java ` to ensure consistency in
added buffer ownership checks and constructors to IndexBufferObject and VertexBufferObjectWithVAO classes to ensure proper buffer management and memory management during object
added a transition to the " forgotPassword " action in the PasswordManagementWebflowConfigurer to enhance user experience by allowing password confirmation confirmation
refactor JerseyClientConfiguration class for improved clarity to enhance maintainability and readability of the code
int - 1186 change the package name of characterstreamreadingmessagesource and characterstreamwritingmessagehandler to characterstreamreadingmessagesource
updated print statements in InstanceOfPatternMatchTest and modified return types in RemoveRedundantTypeCastTest and TypeUtils to improve code clarity
added methods to manage column and row counts in StringDict and Table classes to ensure proper handling of empty arrays and improve code clarity
added deprecated annotations and implemented AutoCloseable interface in GenericContainer and GenericContainerRuleTest classes to improve code clarity and ensure proper resource management
changed logging level from info to error in MediaInfo . java and modified test methods in RendererConfigurationTest . java to improve error handling and ensure
added support for a schemapattern option in BundledDriverDatabaseConnector and PropertiesDataSourceDatabaseConnector to enhance database connection configuration flexibility
added null check for tlsSession in ProvSSLSessionImpl . java to ensure that the method returns an empty byte array when id is null
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve clarity and maintainability of bitmap scaling logic
refactor Base64 class to improve code readability to enhance maintainability and facilitate future updates
refactor fallback handling in LLVMGlobalContainer to improve clarity and functionality to enhance the handling of single context assumptions during LLVM execution
danielwagnerhall : ignore test that fail on iphone
refactor FlowBuilder and FlowJobBuilderTests files to improve code organization and maintainability
replaced ` ResName resName ` with ` resId ` in ` AttributeResource ` and related classes to improve clarity and consistency in
resolve docker context tls file in defaultdockerclientconfig ( # 1341 )
replaced ` @ After ` with ` @ Before ` and modified the ` tearDown ` method in ` SimpleReactiveElasticsearchRepositoryTests
modified type variable handling in mmm Attr . java and added a new class T6450290 . java with generic types to improve type
added logging level configuration to the LoggingFlags and LoggingOptions classes to allow users to configure the logging level based on configuration values
added logging statements to LauncherModel , SecondaryDropTarget , and ItemInfo classes , and modified the deleteItemsFromDatabase method to accept a
added ` allFilesOption ( ) ` methods to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` to
deprecated the ` forEachOperation ` and ` hasMatching ` methods in ` MutationOperationGroup . java ` to indicate that these methods are outdated and
updated the calculation of numPredictiveAppCols to account for phone devices to ensure accurate application column count based on device type
updated the initialization of the value variable to use UTF - 8 encoding to ensure proper handling of UTF - 8 characters in the string representation
added new classes ` RequestMatchers ` and ` RequestMatchersTests ` for testing request matchers functionality to facilitate testing of request matchers in
ggb - 1883 fix for temporary mode and text field ( ggb - 1883 )
updated calculations for height and width in ProgressBar . java to include bgBottomHeight and bgRightWidth to ensure proper positioning of the knob
[ native ] use resource file for external _ functions . json
changed ` extra _ L0 ` and ` extra _ L1 ` to be final and added a native method ` permuteArgs ` to
added a condition to check if the state handler is invalidated in the gesture state check to ensure that gesture handling does not proceed when the state handler
updated cell layout conditions and metrics calculations in DynamicGrid and Workspace classes to improve layout accuracy for landscape and portrait layouts
added a condition to check if the file is " / robots . txt " when verifying the redir URL to ensure that the redir
[ netbeans - 4892 ] add static resource for warning . png and call . png in callhierarchytopcomponent .
updated button subscriptions from " continue " and " close " to " createWorld " and " return " in AdvancedGameSetupScreen . java to
updated UDFOPDivide to include a check for zero values in null checks and added a new TestUDFOPDivide class
updated formatting in AbstractJob and FlowJob classes for consistency and clarity to improve code readability and maintainability
replaced ` filterProcessesUrl ` with ` requiresAuthenticationRequestMatcher ` in ` FormLoginBeanDefinitionParser ` and ` LogoutBeanDefinitionParser
added onDestroy methods to unbind the upload service connection in ShareActivity and ContributionsActivity to ensure proper resource management and prevent memory leaks
updated variable name from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to improve clarity by
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a call to set the request timeout in RaftServerConfigKeys . Rpc to ensure proper handling of request timeouts during RPC operations
updated logging level and modified exception handling in TsFileResourceManager . java and ResourceManagerTest . java to improve clarity of error messages and
added system properties setting to the model source in MavenModuleLoader . java to ensure that system properties are properly set for the model source
added READINESS _ CHECK _ OK _ CALLS and READINESS _ CHECK _ BAD _ CALLS metrics to ServerMeter
added a model registration for the animatedtorch block in the BlockAnimatedTorch class to enable customization of the animatedtorch item
added null check before closing the writer in FileHistoryCache . java to prevent potential NullPointerException when writer is not initialized
refactor HiveConf initialization to use a new method for loading configurations from a specified directory to improve code clarity and maintainability by centralizing
added a link to the Muting Users page in FeaturesActivity to provide users with access to the Muting Users feature
added initialization of " jdk . reflect . useDirectMethodHandle " with a value of " false " to disable direct method handle usage in
hbase - 26946 splitonleadingvarcharcolumnspolicy should extend steppingsplitpolicy instead of constantsizeregionsplitpolicy
[ hotfix ] [ yarn ] remove unused method in abstractyarnclusterdescriptor
updated method calls in BuildTranscriptHMM and TrainerDictionary to use getWord ( ) instead of getPronunciations ( )
removed newline characters from JSON output in JsonUtilsTest . java to simplify output formatting for improved readability
added " id " extra to TimeLineCursorAdapter , TimelineArrayAdapter , and Compose classes to store the tweet ID in the compose
added a warning log for terminating a message listener on a reliable topic to inform users that underlying ring buffer data related to reliable topic is
improve error message when no class be find to analyze
replaced the import of java . security . Key with java . security . PublicKey in KeyFetcher . java to ensure compatibility with the latest security
added a boolean variable ` isIncompatible ` to track compatibility status to ensure proper handling of incompatible resources in the application
updated the method signature from ` createAccount ` to ` createAccountCreateContract ` to align with the new contract structure for account creation
pdfbox - 4892 : avoid npe , a suggest by valerybokov
http : / / issues . apache . org / activemq / browse / amq - 4892 - fix for amq -
enable off - heap format and update default star tree format version from " v1 " to " OFF _ HEAP " in multiple files to ensure
modified the title handling in FeedUpdateService to truncate the title to a maximum of 2048 characters to ensure the title does not exceed the maximum length
updated previewPanel initialization in JColorChooser and BasicColorChooserUI to use ColorChooserComponentFactory to improve flexibility and maintainability of the
change log level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity for extension checks
added a null check for the reusable bitmap before retrieving it to avoid potential null pointer exceptions when decoding bitmaps
added a method to retrieve the layout parameters in FakeView . java to provide access to the layout parameters for external use
added a check to throw an IllegalStateException when a Cursor is already closed in DefaultCursor . java and a corresponding test in CursorSimpleTest . java
pdfbox - 4892 : avoid npe , a suggest by valerybokov
( chore ) camel - jms : do not run test in ci
added a private String field named ' ts ' with getter and setter methods to manage the timestamp associated with the message
[ opengrok ] add log for exception while process request
changed the visibility of the AbstractExecutor class from package - private to public to allow access to the AbstractExecutor class from other packages
make routeresource # removelegacyparameters public and add test for legacy parameter
removed the ` public ` access modifier from several test classes and added a nested annotation in ` JavaRecipeLifecycleTest ` to enhance encapsulation
refactor CSRF handling in PluginServlet to use a dedicated method to improve code readability and maintainability
updated EclipseLoaderPatcherTransplants . java to handle bootstrapping conditions for shadowLoader and shadowClassLoaderClass to improve clarity and
jbrules - 1748 : add support for numericdisabled property in rule sheet
changed log level from info to debug for default value logging in HiveConf . java to improve logging granularity for better debugging
added null checks for axes and buttons in Lwjgl3Controller and modified controller management in Lwjgl3ControllerManager to improve
updated import statements for ObjectFactory from cucumber . api . java to io . cucumber . core . backend . ObjectFactory to
added a null check for the host before saving the port forward in PortForwardListActivity to ensure that the savePortForward method is only called
added a new property ` SHOULD _ SNAPSHOT _ DATA ` to manage whether Liquibase snapshot data by default to control the behavior
added a null check for the file name before scheduling a job in SyncedFolderObserver . java to improve robustness by avoiding potential null
refactor LocationMarshaller to improve code readability to enhance maintainability and facilitate future updates
simplified conditions for touch handling in StatusBarTouchController and related components to improve code readability and maintainability by reducing redundancy
changed the package and class structure of VectorReader and VectorReaderImpl across multiple files to improve organization and clarity of the codebase
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test files to improve clarity and consistency in usage of Mockito matchers
replaced the ` getRelativePathName ( ) ` method with ` getRelativePath ( ) ` across multiple files to simplify path handling and improve code clarity
updated the ` completeMapAndTransformRow ` method to accept ` RecordReaderFileConfig ` instead of ` RecordReader ` to enhance flexibility
added a null check for extractor in ControllerMethodInvoker and updated the annotation annotation annotation annotation annotation annotation annotation annotation annotation annotation annotation annotation annotation annotation
cloudstack - 5339 : fix max secondary storage limit for volume with unlimited storage .
fix inventoryeffectrenderer not render correctly when press shift
added a deprecated constant for the COLD _ READS _ TO _ OMIT _ KEY in SizeTieredCompactionStrategyOptions . java to
added a call to leech . stop ( ) in ClientTest . java to ensure proper resource management and prevent memory leaks
[ issue # 3640 ] fix the bug of pop message processor ( # 3641 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests that are not ready for execution
renamed ` EventLoopGroupMongoClientSettingsBuilderCustomizer ` to ` NettyDriverMongoClientSettingsBuilderCustomizer ` and updated related
added UpgradeRequest and UpgradeResponse handling to the JettyTrackingSocket and ClientConnectTest classes to enable websocket upgrade requests and responses for improved
added timeout support and setter methods in AndroidImplementation to allow customizable connection timeouts for improved user experience
updated getUserAccessPermissions and getTeamAccessPermissions methods to return user and team permissions directly instead of using RpcUtils to streamline permission retrieval process
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to ensure SQL queries with quoted cast expressions can be
updated assertions in Misc . java to differentiate between writable and executable files based on the operating system ' s operating system to ensure correct functionality
added logging for executor groups and thread counts in FixedThreadExecutor . java and refactored executor retrieval logic in FixedThreadExecutor . java to
added null check for field before checking for " catalogname " in AbstractChangeGenerator . java to avoid potential NullPointerException when field is null
updated method signatures to use ` InitializingBean ` instead of ` CasEventListener ` across multiple configuration classes to improve clarity and consistency in event
refactor animation end handling into a separate method ` endAnimation ( ) ` to improve code readability and maintainability
added an overridden close method to the DeflaterOutputStream class to ensure proper resource management and prevent potential memory leaks
added a new file ` gsp001 . java ` to test JVMTI ' s system property retrieval to ensure that JVMT
refactor BeanDefinitionInjectProcessor to use AnnotationMetadata for better clarity and consistency to improve code readability and maintainability by reducing red
[ jme3 ] export cameracontrol to jme3 . export . cameranode and jme3 . export . cameracontrol
refactor PopupNotificationPanel to use SwingUtilities for getting the parent window instead of JWindow to improve code readability and maintainability by
replaced NoInstanceException and InvalidInstanceException with InferenceException in the Infer . java file to simplify exception handling and improve clarity
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the ` featureValue ` variable
changed the parameter type of the ` after ` method from ` int ` to ` long ` to allow for more precise verification duration handling
added JSON properties for OnBuild and executionDriver in ContainerConfig and Info classes to enable dynamic configuration of on - build and execution driver in the
added conditional logic to set the icon based on RTL mode in Toolbar and FlowLayout classes to improve the visual appearance of commands based
added a boolean field ` enablePositionIncrements ` and modified the return statement in ` StopFilterFactory ` to enable position increments configuration to enhance
added an ` InternetAddress ` instance to ` EmailsTest ` and ` SystemErrorEmailReportTest ` classes to provide a specific email address
added a new boolean variable mTryShareAgain with a value of false to control the share behavior of the activity
added support for using TTY name based on Maven ' s version in JansiNativePty . java to improve compatibility with different Java
refactor bandwidth processing to use ` bytesSize ` instead of ` bytes ` for better clarity to improve code readability and maintainability by
replaced ` Awaitility . await ( ) ` with ` Awaitility . await ( ) ` in ` Issue410Tests .
updated API URL constants in EaseeBindingConstants . java to use a private API base URL to improve accessibility and maintainability of API
increased the sleep duration in KafkaIOIT from a fixed value to a fixed value and added a startup attempt in KafkaContainer to improve
replaced ` Matchers . anyOf ( ) ` with ` hasJsonPath ( " $ . uuid " , is ( itemName ) )
added SSL support to OkHttp . java to enhance security by enabling client and server trusted certificates
refactor button long click handling in NavbarButtonsViewController and TaskbarNavButtonController to improve clarity and maintainability of the
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` and ` byte
added null checks for stdout and stderr in ShellStep . java to ensure workingDirectory is not null before use to prevent potential NullPointerExceptions
increased the TIMEOUT _ MILLIS from 1000 milliseconds to 2000 milliseconds in AsyncAppenderTest . java to accommodate more time for asynchronous
refactor database object escaping methods in AbstractDatabase . java to improve clarity and consistency to enhance code readability and maintainability by consolidating
added a boolean variable ` inputChanged ` and modified the condition for title validation in ` MaterialRenameDialog . java ` to improve input validation logic
added a test for managing display state changes in ShadowDisplayTest . java and implemented setState method in ShadowDisplay . java to ensure correct display state
[ geos - 8470 ] add directinvocationservice interface to enable direct invocation of operation
added support for ` KEY _ X ` and ` KEY _ Y ` keycodes in ` GlobalKeyDispatcherW . java ` to enhance functionality
updated SQL query construction to conditionally include pg _ catalog . pg _ depend dep based on server version to ensure compatibility with PostgreSQL versions prior to
added @ Nullable annotation to the message variable in QueueChannel . java to improve code clarity by indicating that the message cannot be null
modified the method signature of ` getPathsFromResource ` to replace ` String jarPath ` with ` URI pathUri ` to improve clarity
added support for monitoring Jenkins nodes in the CollectorServer to enhance monitoring capabilities for the application
refactor attribute resolution in HeadersBeanDefinitionParser to use a dedicated method for resolving placeholders to improve code readability and maintainability by reducing
hbase - 14836 fix eofexception when first byte be negative at offset
shutdown the nacos naming service on registry destruction to ensure proper resource management and prevent memory leaks
camel - mybatis fixed switch / cases indentation see camel - 14540
refactor GoAwayGenerator and GoAwayBodyParser to use a new method for writing status code to improve code clarity and maintain
updated formatting in AuditEvent and AuditEventTests for improved readability to enhance code clarity and maintainability
updated the cbrt method to return 0 instead of a value to ensure proper handling of floating - point errors and avoid potential division by zero
fix path separator in default . xml ( # 3560 )
refactor code to store the absolute path of getDxExecutable ( ) in a variable before adding it to the builder to improve code readability
added assertions to compare PointRangeQuery instances in TestPointQueries . java to ensure correct equality and comparison of PointRangeQuery instances
hbase - 15936 testhfilecleaner . java fail on window due to change in archivedhfiledir
updated file label setting logic in ReceiveFileConversationComponent . java to conditionally display the file name based on file transfer request to improve user experience
[ hotfix ] [ jedis ] remove unused throw statement from jedisclustercommand
[ hotfix ] [ table - common ] set chainingstrategy to always for rowtimeminibatchassgineroperator
updated FilterInvocationDefinitionSourceEditor to use PathBasedFilterInvocationDefinitionMap instead of RegExpBasedFilterInvocationMap to enhance URL parsing flexibility by
updated QMap benchmarks to use HashMap with dynamic size and load factor parameters to improve performance and flexibility of map operations
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B
added null and empty check for fields in GroovyEngine . java and refactored regex matching in GroovyEngine . java to improve robustness of
set drawable to false for number that be not drawable to ensure that the number is not displayed to the user
added server socket timeout and TCP keepalive configuration in HiveConf and HiveServer classes to improve server responsiveness by controlling socket timeout and TCP
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` in ` FileRenameAction . java ` to improve cl
no effective change - code cleanup - remove unused import
refactor RealtimeSegmentRelocator to use TimeUtils for thread creation and period parsing to improve code readability and maintainability by redu
vpc : do n ' t set success variable in createvpccmdbyadmin
updated windowAlpha calculation and condition checks in WindowTransformSwipeHandler . java and FloatingIconView . java to improve accuracy of progress handling
updated error message from Spring Security 3.2 to Spring Security 4.0 in SecurityNamespaceHandler . java to clarify that Spring Security
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
made fields in DisruptorProviderManage , QueueConsumer , and QueueConsumerFactory final in multiple classes to enforce immutability and prevent
added a new test class ` TestConfigureUDF ` and modified ` ExprNodeGenericFuncEvaluator ` to utilize it for configuration testing to
updated regex pattern matching in LogMessageWaitStrategy and added parameterized test cases in LogMessageWaitStrategyTest to enhance flexibility in matching log messages
removed unnecessary ' final ' keyword from logger declarations in LOG . java to improve code readability and maintain consistency in logger usage
replaced ` updatePurgedShardNodes ` and ` updatePurgedShards ` methods with ` deletePurgedShards ` and ` deletePur
added support for the " 17 - preview " language handler in JavaLanguageModule to ensure compatibility with the latest language features
added a timeout mechanism to wait for compression jobs in TimeBasedRollingPolicy and updated lossiness factor in FileAppenderResilienceTest to improve
make volatilereadnode . hasonlyusagesOfType ( Memory ) more robust to avoid assert .
added a method ` getSteps ( ) ` to the ` SimpleJob ` class and modified formatting in the ` getStep ` method to improve code
removed redundant fields from ` fromBase58 ` and ` toBase58 ` in ` JsonRpcApiUtil ` and ` TronJsonRpc
refactor currency pair creation to use a variable for clarity to improve code readability and maintainability
update measurement to use base time unit in LongTaskTimer and add assertions for active tasks and durations in MeterRegistryCompatibilityKit to ensure accurate measurement
[ euphoria - flink ] do n ' t use shaded iterables in reducebykeytranslator for hashpartitioner
replaced String with CharSequence for value retrieval and updated type handling in HostEditorActivity . java to improve type safety and enhance code clarity
renamed ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and refactored related methods for clarity to improve code readability
added a maximum number of tweets in the verification loop to ensure that the number of replies does not exceed the defined maximum threshold for tweets
increased the refresh interval from 1 to 2000 milliseconds in AbstractCachedLDAPAuthorizationMapLegacyTest . java to allow for more time for LDAP
[ hotfix ] [ queue ] fix npe in getpersistedbytesize method of deleted queue
change getimplementationtitle to use glowserver . class instead of getclass ( )
added a method ` grow ( long n ) ` to the ` DataIO ` class and refactored the buffer growing logic to improve
removed unused import of DataOutputStream in GdxSetup . java to clean up the code and improve readability
added a method ` getSubmittedFileName ( ) ` to retrieve the submitted file name from the ` part ` to provide access to the submitted file
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure the fragment is marked as read for loading during loading
added ClassNotFoundException to the main method signatures and modified the instrumentJar method to handle NegativeArraySizeException to improve error handling by providing clearer feedback
added a method to check for spill protection in HashAggTemplate . java to ensure proper handling of AGGR partitions during flushing
replaced direct calls to ` getDocStoreSegment ( ) ` with a local variable ` dsName ` for consistency to improve code readability and
added a default name ID format to the supported name formats list in SamlProfileSamlNameIdBuilder to ensure compatibility with the latest SAML name
added error handling for password change abortation in ChangePasswordPage . java to improve user feedback during password change operations
added a semicolon to the end of a block in Deadlock2 . java to ensure proper syntax and prevent potential syntax errors
added a method ` getMaxIdleTime ( ) ` to the ` NioReceiverMBean ` class to provide access to the maximum idle time for
deleted the FontScalingTest . java file to the functionality is no longer needed in the project
added checks for ` filterBeginDate ` and ` filterEndDate ` before accessing their respective methods in ` RRD4jPersistenceService ` to
added a check to return early if ` numVectors ` is zero to avoid unnecessary processing when ` numVectors ` is zero
test : migrate executablerefsetest to junit 5 ( # 4358 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java
camel - 16400 : added support for wire tap in route builder . thanks to daniel dai for the patch .
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
added a new option validator for top - n in PlannerSettings and implemented a matching method in PushLimitToTopN to enable configuration of
[ java ] remove redundant aeronDirectoryName assignment in ArchiveLoggingAgentTest , ClusterLoggingAgentTest , and DriverLoggingAgentTest to
fixed - redisconnection . ping ( ) and redisconnection . setqueued ( ) method do n ' t set queued flag correctly . # 3
replaced the ` getConfVarInputStream ` method with a ` getConfVarURL ` method and introduced a temporary file for the configuration file to improve
updated the model creation to use the criteria device instead of the default device to ensure the model is created on the correct device based on the criteria
updated onCreateOptionsMenu and onMenuItemSelected methods in SimulationViewer . java to ensure proper menu inflation and item selection handling
refactor CertificateValidator class to improve code readability to enhance maintainability and facilitate future updates
fix for hawtio - 2272 : use ` ` hawtio . dirname ' ' instead of ` ` user .
added a check for empty comments and whitespace before returning a single space to ensure proper handling of whitespace when comments are empty and improve code clarity
changed mNativeDict to be volatile in multiple dictionary classes to ensure immutability of mActualDictionary and mNativeDict across multiple threads
removed stack trace printing in ContextHandler . java to streamline error handling by eliminating unnecessary stack trace information
made CustomItemDropTest a regression test class and modified imports in CustomItemDropTest . java to improve test coverage and ensure compatibility with
added a check for partition existence and modified related methods in DDLTask , DDLSemanticAnalyzer , and AddPartitionDesc classes to enhance partition
added byte buffer handling and refactored input reading in NfsSecondaryStorageResource . java to improve data handling efficiency and ensure proper reading of
[ java ] remove unused assignment of controlrequeststreamid in cluster service node .
added support for spatial operators in CapabilitiesTransformer and corresponding tests in GetCapabilitiesTest and WFSTestSupport to enhance functionality to support spatial operations
added import for LuceneTestCase and annotated the BasicDistributedZkTest class with AwaitsFix to address issue SOLR -
modified the condition for preface matching in Http11InputBuffer . java to ensure proper handling of client preface matches based on the position and
[ java ] disable aeroncluster . isIngressExclusive by default .
hbase - 2696 hbase . bucketcache . ioengine and hfile . block . cache . size should not be set in
added methods to retrieve the current record number and update the running record count to improve record tracking and ensure accurate tracking of running records
added filtering for out years in mergedItems to ensure only valid year formats are processed
updated drawing color values in CacheableTextView , CellLayout , and HolographicOutlineHelper to use 0 instead of 0x00000000
added OpenGL 2.0 support to the render method check in Mesh . java to ensure compatibility with OpenGL ES 2.0 for rendering
added ActionContext import and reset context in BackgroundProcess . java to ensure proper context management and prevent potential memory leaks
updated methods in BaseSemanticAnalyzer , QBParseInfo , and SemanticAnalyzer to handle database names and table names more accurately to improve
added connection timeout configuration in TestConnections . java and made the count variable final in StubConnection . java to improve connection management and ensure the count
added tests for ` approx _ percentile ` and ` clerk ` aggregation queries in ` TestHiveAggregationQueries . java ` to ensure
updated the default idle and idleWrite timeout values in WebSocketConstants and modified WebSocketChannel to use default timeouts instead of zero to improve clarity and
updated the way shares are retrieved in FileDetailSharingFragment to use the user ' s platform account instead of the account ' s name to ensure
refactor InetAddress and NetworkInterface enumeration to use generics for better type safety to enhance type safety and clarity in address handling
refactor PlaybackControlView to simplify button enable / disable logic and improve variable naming to enhance code readability and maintainability by using more
updated session presence checks and method parameters in Session . java and Token . java to improve clarity and consistency in session handling
replaced ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java `
change the default value of useexceptionprobability from true to ___ _ in graaloptions . java
updated the color calculation for predicted app icons in PredictedAppIcon . java to ensure correct color is used based on the icon ' s
guacamole - 284 : mysqluser . touserwithblobs ( ) now accept username , password , and permission set .
added " centre " alias to the " center " alias in the Middle class to support additional centering options in the application
added import and method injection for DirectUpload in CommonsApplicationComponent and made DirectUpload class public to facilitate integration with the Direct
added space space settings for left and right axes in BarChartActivity and adjusted spacing calculations in BarLineChartBase to improve chart layout respons
added new flavors for HasJavaAbi and HasJavaAbi . VERIFIED _ SOURCE _ ABI _ FLAVOR in
added operationEventStatusType parameter to requestParams in OnlineHubService and changed the services list from final to non - final in CompositeLogService
added debug print statements and a check for annotation presence in the DexAnnotation class to improve debugging capabilities and ensure that only relevant annotations are added
( chore ) camel - jms : use setup / teardown instead of startbundle / finishbundle
refactor the creation of the ProcessBuilder to use a classpath variable for clarity to improve readability and maintainability of the code
updated the documentLoader load method to use " res " separator for resource paths to ensure correct resource path formatting for Android packages
[ hotfix ] [ table - common ] remove redundant ' this ' keyword in DataSet class
added JUnit @ Ignore annotation to WorkProfileTest . java to temporarily disable the test due to issue b / 243855320
updated error message formatting in ShouldHaveMessage . java and added a new test method in ShouldHaveMessage _ create _ Test . java to improve
fixed - jcache . close ( ) call cachemanager . getcachemanager ( ) . geturi ( ) which throw npe . #
reduce log level to info when activititaskalreadyclaimedexception be throw
added a closing brace to the ALPNClientConnectionFactory declaration in HTTP2Client . java to ensure proper resource management and avoid potential memory leaks
fix entitypropertypacket to use basevalue instead of value .
sonosaudiosink : do n ' t play notification sound if thing be not initialize
increased timeout duration from 500 milliseconds to 5 seconds in multiple test classes to improve test reliability by allowing more time for the latch to
change log level from info to debug in LightThingHandler . java to provide more detailed information about the effect light type issue
cloudstack - 4892 : add db . cloud . maxactive to control the number of thread pool for asyncjobmanager
updated import statements and method signatures in Reporter . java and ReturnsSmartNulls . java to include the object parameter to enhance clarity and consistency in
changed the parameter type of the ` generate ` method from ` Frame ` to ` DataFrame ` to align the method signature with the new data frame
updated module - info . java and package - info . java files for consistency and clarity to improve code readability and maintainability by standard
added a check for non - empty physical column names before matching against DEFAULT _ HIVE _ COLUMN _ NAME _ PATTERN in OrcPageSource
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine . java ` file to enhance playback
refactor JComponent and SynthTextPaneUI classes to improve code organization and maintainability
updated calculations in FinderPatternFinder and modified test indices in QRCodeBlackBox1TestCase and QRCodeBlackBox2TestCase to ensure
simplified the condition for checking presence of leadingIncludePaths in PreprocessorDelegate . java to improve readability and maintainability of the code
renamed the test method from ` testMatrixVectorMultiplicationShouldUseBrackets ` to ` matrixVectorMultiplicationShouldUseBrackets ` and re
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 541 : add
updated the calculation of maximum supported channel count in DefaultAudioSink . java to ensure correct sample rate is used for passthrough handling
added methods to retrieve and set formula in the XSSFName class , and modified reference handling in the XSSFName class to enhance
increased the target value from 60000 * scaleFactor to 90000 * scaleFactor in HighDimensionsTest . java to adjust the target
[ geot - 5769 ] fix parsing of patternfacet / states . xml with empty schema
added a new test class ` ClassPathXmlJobRegistryContextTests ` to validate job retrieval and retrieval in the ` ClassPathXmlJobRegistry
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in ` MotionPauseDetector . java ` to
camel - 12320 fixed the restlet endpoint label for advanced endpoint
camel - 14284 : camel - log4j2 - remove showout from logendpointbuilder since it be no longer use
refactor the event submitting logic into a separate method ` writeChromeTraceMetadataEvent ` to improve code readability and maintainability by encaps
added checks to ensure only non - canceled , non - filled , and non - rejected limit orders are added to the limitOrders list to avoid
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to ensure correct image layout handling and improve image processing accuracy
updated timestamp handling in Event . java and JrubyEventExtLibrary . java to improve clarity and consistency in Ruby timestamp handling
added a check to return the resource if the path ends with a slash in ContextHandler . java and a corresponding test in WebAppContextTest .
updated the error handler name from TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _ GETTER to
refactor variable names and logic for setting scroll values in JEditTextArea to improve code readability and maintainability by using more descriptive
added a null check for callerLoopScope before setting guardsStage and stageFlags in GraphDecoder . java to ensure that only valid guards
test : migrate sniperjavaprettyprinterjavaxtest to junit 5 ( # 4358 )
replaced direct instantiation of ` URLOutputStream ` with a try - with - resources statement to ensure proper resource management and avoid potential memory leaks
added multiple @ Entity annotations to Mail class to enhance entity management and improve code clarity
updated default values for " includeTablespace " from false to true and added a command parameter to enable included tablespaces to improve flexibility in
added getter methods for ` metaDataBuffer ` and ` valuesBuffer ` in ` CountersReader ` to provide access to the underlying buffer for better
added a flag to prevent reading empty files in ScanBatch and implemented a test for JSON directory with an empty file to ensure proper resource management and
added a conditional check for internalCustomName before failing comparison in StringSubject . java and updated test assertions in StringTest . java to improve error
added a static final Pattern for matching library names and modified the conditional logic in LibUtils . java to improve code readability and maintainability by
updated exception handling from NoClassDefFoundError to Exception and Error in JrtJavaBasePackages . java and PackageHelper . java to improve
added methods to check and wait for DFS safe mode in MasterFileSystem and implemented a check in FSUtils to ensure file systems are in safe mode
updated error message formatting in TranslatingJavacPhaseTracer . java to improve clarity of error messages for better debugging
added caching functionality for PluginDescriptor objects in DefaultPluginCache . java to improve performance by reducing unnecessary object cloning operations
do n ' t fire presence status change event if the jabber connection be n ' t connect .
removed unused imports and refactored the withResourceAndParams method in ServletRequestDetails and ResourceMethodTest to streamline code and improve readability
added a new integration test class for fetching account information to ensure that the PollingAccountService correctly retrieves account information from the BTCE exchange
added a new method ` mouseWheel ` to ` vt320 ` for handling mouse wheel events in ` VDUInput ` and ` Terminal
updated library path handling in Natives . java to use a variable for the library path to improve code readability and maintainability by reducing
remove deprecate columnhstore annotation and update deploy create property to use deploybeanproperty
add player _ skin _ flags ( 10 , BYTE , humanentity . class ) to allow player to set skin flag .
replaced ` RequestFieldMatcher ` with ` SLF4J Logger ` and refactored service creation logic in ` LoadBalancerWithServiceTests
refactored code to improve readability and maintainability by adding braces to enhance code clarity and maintainability
replaced System . getProperty with AccessController . doPrivileged for retrieving the OS version to enhance security by using a privileged action for accessing the OS version
added a new constant FREEMARKER _ CONFIGURATION _ FILE _ SUFFIX and modified the fileSuffix initialization in TemplateEngineFreem
fix ( core ) : fix a bug in selectmessagelubricants by hash
added animation callback to the toolbar panel ' s animate method to enable proper handling of animation completion in the dock panel
replaced ` EasyBind . bindConditionally ` with ` EasyBind . when ` in ` StyledTextAreaVisual . java `
added CxxBuckConfig parameter and updated platform flavor handling in multiple description classes to improve platform management by utilizing declared platforms from configuration
replaced SimpleParameterAccessor with ParameterAccessor across multiple files to standardize the usage of ParameterAccessor across the codebase
added a null check before setting the password attribute in LdapAuthenticationProviderConfigurer to avoid potential NullPointerExceptions when passwordAttribute is null
added a check for an array type in DataUtilities and implemented a test for default values in DataUtilitiesTest to ensure proper handling of array types
updated SSL engine creation logic to handle null address and client authentication to ensure correct host name verification based on client authentication settings
updated assertions in TestFSTableDescriptors to use assertTrue instead of assertEquals for cachehits to improve clarity and accuracy of cache hit
danielwagnerhall : use deletecookienamed ( ) instead of getcurrenturl ( )
added a new boolean variable ` mHasEndedLauncherTransition ` and modified gesture handling logic in ` AbsSwipeUpHandler ` and ` Re
added < meta charset = ' ' utf - 8 ' ' / > tags to the HTML list and writer classes to ensure proper handling of character
refactor IndexReader class to improve code readability to enhance maintainability and facilitate future updates
updated the maximum length of HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored method calls
added a new class ` bug6337518 ` and modified the ` comboBox ` addition in ` BasicComboBoxUI . java ` to
rename TestRandomAccessBuffer . java file to improve clarity and consistency in naming conventions
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future updates
added notifyChange calls for HomeContentProvider in multiple service classes to ensure proper handling of content URI changes in the application
added a ` mStayPressed ` flag and refactored background invalidation logic in ` BubbleTextView ` and ` Launcher `
added an ` error ` parameter to the ` getFallbackResponse ` method across multiple classes to provide more detailed error information during fallback responses
removed conditional check for ` env . _ compile _ only ` in ` DumpBytecode . java ` to simplify the condition for better readability
added null check for tags before accessing its length in ChannelUri . java to avoid potential NullPointerException when tags is null
updated JAVA _ REGEX _ SPECIALS string and added SQL pattern assertions in RegexpUtil . java and TestSqlPatterns . java to improve SQL pattern
added functionality to update the action bar title in FileActivity and FileDisplayActivity to ensure the action bar title reflects the current state of the
updated the method from ` getOnlyElement ` to ` getLast ` in ` PythonDslProjectBuildFileParser . java ` and added a
removed the " minute " parameter from the @ Schedule annotation in CleaningService . java to simplify the schedule configuration for better clarity
added methods to retrieve table partitions and paths based on table type in TransactionalValidationListener . java to improve table structure validation logic for distributed tables
[ hotfix ] [ doc ] fix checkstyle violation in replicationhandler and snappuller
changed the data type of ` generatedKey ` from ` int ` to ` long ` and modified the prepared statement to return generated keys to ensure
updated variable name from ' proxy ' to ' _ rc ' in SimpleReferenceCache . java to improve clarity and consistency in variable naming
updated error messages in multiple test files to include " failed to inline " instead of " inlineable " to improve clarity in error reporting for
increase default keep - alive timeout from 60 to 10 second .
deleted the HttpTestAccount001 . java file to remove unused test classes to streamline the codebase
changed exception handling from ` Exception ` to ` Throwable ` in ` Dispatcher . java ` and modified test assertions in ` DispatcherTest . java `
camel - 14284 : camel - cxf - add support for cxf message data format . thanks to benjamin
added a new case for ' ~ ' in ClientUtils . java to handle the ' ~ ' character in the client configuration
camel - slack : fix camel - slack to use java time . duration instead of long
add fireblockharvesting event to blockutil . getdropped ( ) , which fire a blockharvesting event for each
updated the padding value from 4 to 5 in the FormLayout and adjusted the JCheckBox formatting in TranscodingTab . java to improve the layout
added a new Java file ` bug8057791 . java ` implementing a Nimbus Look and Feel with a JList to
updated flags logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and functionality of static
refactor subscription management in RunnerBuilder and add a new test for Ethereum API registration in RunnerBuilderTest to improve code clarity and
replaced the length check for ' to ' with a null check for ' to ' to ensure that ' to ' is not null before proceed
refactor ParquetFixedWidthDictionaryReaders to handle dictionary reading more effectively to improve readability and maintainability of the data reading process
refactor calculations for divider bar and task height in PortraitPagedViewHandler . java to improve layout handling for different screen orientations
added new annotation classes ` Log ` and ` LogInterceptor ` in the ` org . apache . shenyu . examples . springcloud
updated the string representation of thread states in QueuedThreadPool to include a trace length check to improve clarity of thread state information when trace is
added an ` Optional < Implementation > ` parameter and updated related methods in ` CacheGenerator ` and ` CacheProvider ` to enhance functionality by allowing
added totalFrameSize ( ) to the createReferenceMap method call to ensure the correct frame size is used for reference map creation
refactor TypesafeConfigurator to improve code readability to enhance maintainability and facilitate future updates
( chore ) camel - itest - karaf : add karaf unit test for camel - graphql
added two new test methods , bug1 , bug2 , and bug3 in RFE2891944 . java to demonstr
replaced URLEncoder . encode with direct concatenation for keys and values in HttpClientIntroductionAdvice . java to simplify the code and
refactor ` unsupportedPlatformTool ` method to a private class ` UnsupportedPlatformTool ` to improve code organization and encapsulation of unsupported platform tool
replaced double loopCount with int loopCount and added a calculation for startingRecoveryDelayMilliSeconds to improve clarity and accuracy of recovery delay
added the ` size ( ) ` method to ` FlightConfiguration ` and its implementation in ` FlightConfigurationImpl ` to provide a way
[ drools - 5892 ] fix addressmanager test fail on slow ci server
updated column specifications and row specifications in VLCVideo . java for improved layout consistency to enhance user interface responsiveness and maintain consistency in
updated URLs in Overlay . java and AboutView . java from " https : / / bisq / bisq " to " https :
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker
updated user configuration directory and modified user XML parsing logic in MBoot . java and MCli . java to ensure proper directory structure and improve user
added binding of the GL _ ARRAY _ BUFFER to the bufferHandle in VertexBufferObjectWithVAO . java to ensure the bufferHandle is
refactor ServerHttpSecurity class to improve code readability to enhance maintainability and facilitate future updates
added JUnit ' s Disabled annotation to PostgresStoredProcedureIntegrationTests to temporarily disable tests that are not ready for execution
added default headers handling in HttpClientProperties and CasCoreHttpConfiguration to enhance HTTP client configuration flexibility
[ thingsboard ] add credential vulnerability response for user password not valid exception
deleted the NoOpConfigPathGetter . java file to the class was deemed unnecessary for the project
replaced ` Codec . base16Decode ( keyHex ) ` with ` Bytes . fromHexString ( keyHex ) . toArray ( ) `
replaced CascadedStyle with a constant CSSName and added validation for float properties in FloatUtil . java to improve code readability and
planner - 1348 planningfactproperty and planningfactcollectionproperty should be deprecate in favor of planningfactproperty
refactor ` getDefaultHeaders ` method to return a ` MultiMap ` instead of a ` Map < String , String > ` to improve header
replaced ` String encoding ` with ` Charset charset ` in ` ProxyServer ` and ` Realm ` classes to standardize character encoding handling
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to retrieve the job
replaced ` Long . compareTo ` with ` Long . compare ` in ` ExpandableUploadListAdapter ` and ` FileStorageUtils ` to
replace error logging with debug logging for HTTP responses in DefaultJdkHttpClient and JdkBlockingHttpClient to improve performance by reducing log verbosity
updated import statements in LegacyAuthenticationHandlerAdapter . java to include NamedAuthenticationHandler and UsernamePasswordCredentials to ensure compatibility with Jasig ' s
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
added a check to ensure the filter is our own before removing it from the network to enhance security by preventing invalid filters from being removed from
added a static wrap method to BCPGInputStream and refactored its usage across multiple classes to improve code clarity and maintainability by
replaced DataOutputStream with BufferedOutputStream and added try - finally blocks for flushing and synchronization to ensure proper resource management and prevent potential memory leaks
added a new test method ` testSelectAllFromView ` and modified column qualifier handling in ` HiveBaseResultSet ` to improve test coverage and
updated FocusTransitionTest . java file to improve focus transition testing functionality
changed import statement from org . gwtproject . core . client . GWT to com . google . gwt . core . client . GWT
added a check for MapRedTask instance before retrieving job counters and improved error handling in CounterStatsAggregator . java to enhance type safety and
removed unnecessary whitespace in HttpInput . java to improve code readability and maintain consistency
refactor color handling in AppearancePanel to use a ChangeListener for color selection to improve responsiveness and maintainability of the color selection
updated the TaskHelper constructor to include hidden parameter to enhance flexibility in task processing by allowing hidden options
http : / / issues . apache . org / activemq / browse / amq - 4892 - disable exponential backoff for failover
pdfbox - 4892 : fix resource leak , a suggest by valerybokov
added import statement for DefaultParameterHandler in LanguageDriver . java to utilize the DefaultParameterHandler for scripting functionality
adjust loop depth check in LinearScanWalker . java to ensure spill state is set correctly based on spill definition and stack depth
[ minor ] add micronaut - ast . transform . test to facilitate the compilation of test script
added a method ` closeInternally ( ) ` to ` PgResultSet ` and modified its usage in ` PgStatement ` to ensure proper resource
changed the initialization of the serviceAdvisorType variable from null to ServiceAdvisorType . PYTHON to ensure the serviceAdvisorType defaults to PYTHON
replaced the ` resolver ` variable with a ` ThreadLocal < ResolvingDecoder > ` instance and added thread resolution handling to improve thread safety
refactor methods in Path , PdfContentStreamProcessor , PdfCleanUpContentOperator , and PdfCleanUpContext to use Deque instead of
replaced ` new byte [ 512 ] ` with ` memo ` and updated related assertions in ` SendCoinShieldTest . java ` to
added a ` setPersonalisation ` method to the ` SkeinParameterSpec ` class for writing personalisation data to enhance functionality by
removed redundant conditional checks in CodeGenerator . java to streamline code logic for better readability and maintainability
removed the ` 1 ` parameter from the ` scroll ` method and its usage in multiple classes to simplify the scrolling behavior by removing unnecessary parameters
changed the access modifier of the pointer variable from private to public and added reset methods to FlatRecordReader to allow external access to the pointer and
rename ` ContentDigestHistory ` to ` BdbContentDigestHistory ` across multiple files to improve clarity and consistency in naming conventions
refactor casting logic in CastExpression . java to use a wildcard import and improve type checking to enhance code clarity and ensure correct handling of
replaced ArrayList with a boolean flag for handling accepted media types to improve clarity and control over the handling of media accepts
added a new boolean parameter ` false ` to the ` TaskView ` class to disable the functionality for improved user experience
added isAutoIncrement method to LiquibaseDataType and implemented its implementation in multiple type classes to ensure proper handling of auto - increment data types
initialize errorText with a default value of " Command failed due to Internal Server Error " to provide a clearer error message for better debugging
updated import statements in LocalManagementTest . java and added VmOptions in args to enhance performance testing capabilities by utilizing VMT options
replaced ` add ` method with ` push ` method for currentStatus and boosterStatus in ` BasicEventSimulationEngine . java ` to
added support for AJP connector binding and port configuration in GitBlitServer . java to enable Gitblit to run with root permissions for
added type coercion logic in TransTypes . java and created a new Intersection03 class for testing to ensure correct type coercion
renamed the class from EmbeddingTest to EmbeddingITest to clarify the purpose of the test class
added a native method to start a toolkit thread and modified thread creation logic to ensure that the toolkit thread is only started once to avoid
bundlecontentsubstitutedlocalizationsupport : add option to compress the bundle in parallel
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 588 : set
updated the temporary directory path in AbstractRecordExtractorTest to use the class name instead of a hardcoded string to ensure the correct temporary directory is
added support for enabling fullNode and solidityNode HTTP services based on configuration to enhance flexibility in enabling fullNode and solidity
added a service property to GoogleCloudFirestoreTicketDocument and updated the GoogleCloudFirestoreTicketRegistry to count tickets associated with a specific service
updated method implementations in Generate . java to improve performance and maintainability of the code
updated JsonFunctions to remove nullableParameters from the ScalarFunction annotation and added corresponding tests to ensure proper handling of null arguments in JSON format
added a new constant ` DOTS _ ONLY ` and updated related conditions in ` BadgeRenderer ` , ` ShadowGenerator ` , and `
removed the ' final ' modifier from the method ' getConfiguration ' in FreemarkerManager . java to enforce immutability of the
added a test for invalid excluded package name patterns in OgnlUtilTest to ensure that ConfigurationException is thrown when setExcludedPackageNamePatterns returns an
updated AppleTest and IdbRunTestsStep to conditionally set deviceUdid based on the platform name to ensure compatibility with macOS
updated DefaultHttpClientFilter to log warnings and modified test cases in TestDefaultHttpClientFilter to improve error handling and enhance test coverage for forbidden responses
added null check for mScript and modified execution logic in AllAppsView . java to ensure proper initialization and execution when mScript is not null
added a new boolean flag ` TEXT _ BURN ` and modified conditional logic in ` Utilities . java ` to control shadow layer behavior based on
added teardown methods for table and view cleanup in TestColumnAccess and TestReadEntityDirect to ensure proper resource management and cleanup after tests
added a line to retrieve the parser from the parsers map to ensure the parser is properly initialized before use
added a new ` fastpath ` method in ` BoundedLocalCache ` and a corresponding test in ` BoundedLocalCacheTest ` to enhance
refactor ` RawConnection ` to extend ` WebSocketConnection ` and implement ` complete ` and ` flush ` methods in ` WebSocketAsyncConnection `
added multiple test methods for asserting multiple assertions in SoftAssertionsPerfTest . java to enhance test coverage for various assertion scenarios
added a new constant TEST _ FAILURES _ EXIT _ CODE and modified the execute method in PythonRunTestsStep to handle failure scenarios to ensure
modified the handling of ` xAdvances ` in ` GlyphLayout . java ` to ensure markup is enabled before processing subsequent runs to improve code
refactor score comparison logic in TestBooleanRewrites . java to use streams for better readability and efficiency to improve code clarity and maintain
updated the method to retrieve the superclass of the anonymous class instead of the enclosing class to ensure the correct superclass is used for anonymous classes
do n ' t flush socket connection if it ' s not a player socket connection
added a check to avoid redundant calls to removeOnDrawListener in Launcher and LauncherAnimUtils to improve performance by avoiding redundant calls
refactor CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder classes to improve code organization and maintainability
updated import statements and modified condition in ReplicaAssigner . java to include a wildcard import and ensure matchStatus is not NOT _ APPLICABLE
changed the default value of MEDIAPARSERV2 from false to true in RendererConfiguration . java to enable the MEDIAPARSERV
no effective change - add support for around method in beandefinitioninjectprocessor
added assertions and verification for table permissions in FolderPermissionBase . java to ensure proper permissions are enforced for partition operations
do n ' t log in when provider be in wrong state
updated the color calculation in PastelColor . java to use a configurable color base value to improve flexibility and maintainability of the color
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
updated image handling in HolographicViewHelper to use original and outline bitmaps instead of direct drawable elements to improve visual clarity and
refactor request method handling to use a utility method for better readability to improve code clarity and maintainability by reducing duplication
add a new method to get the tag of a phrase containing a phrase in MultiWordPreprocessor . java to enhance tagging functionality by allowing
[ hotfix ] [ test ] fix checkstyle violation in iochannelutilstest
added logic to determine the output format class based on the Hive Pass - through output format to enhance flexibility in determining the output format based on
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added a check for negative length in the DOMBuilder class to ensure that the length parameter is validated before proceeding with further operations
updated clustering Coefficient , EigenvectorCentrality , DiameterUI , GraphDensityUI , and HitsUI to improve cl
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` TestClass . java ` implementing ` InterfaceWithStaticAndDefaultMethods ` and implemented ` default _ method ` in `
camel - 15836 : defaultkeyselector should use camelcontext to resolve property placeholder .
simplified exception handling by removing unnecessary checks for ThreadDeath in LogResolverBean . java to improve code readability and maintainability by
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
updated JGit version from " JGit 1.0 . 0 " to " JGit 1.1 . 0 " and added sorting and
refactor client key retrieval logic in HttpClientIntroductionAdvice . java to improve clarity and maintainability of the code
int - 1187 add support for methodinvokingtransformer in spring integration
updated BACK _ FACTOR to REWIND _ TIME and introduced a new constant REWIND _ FACTOR with a value of 0.92 to
added a method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and ` JavaSEPort ` classes to
updated usage string formatting and modified command usage logic in ` DocumentationPrinter . java ` to improve clarity of command usage messages and ensure proper formatting
update request attribute name from " collection . map " to " collections . map " in CommunityListServlet . java to ensure consistency in naming
removed setter methods for seqFiles , unseqFiles , and mergedFiles in CrossSpaceCompactionResource and RewriteCrossSpaceCompactionSelector to
removed duplicate @ Override annotations in Observation . java to improve code clarity and maintainability
refactor rule synchronization logic and improve clarity in ProjectPropertiesModelImpl . java to enhance readability and maintainability of the code
fix thread safety issue in abstractsootfieldref
refactor ElasticMeterRegistry to use a new ElasticNamingConvention class and update method calls accordingly to improve clarity and maintainability of the Elastic
added methods for listener and command creation in IController and updated BackendAPI to use IController instead of AbstractController to improve code modularity and
added a new test method ` hugeHorizontalRule ` to the ` PathologicalTest ` class to verify rendering behavior for huge horizontal elements
replace System . out . print statements with TTY . print statements in TypeSystemTest . java and PartialEscapeAnalysisPhase . java to improve
updated multiple Java files for consistency and clarity to improve code readability and maintainability
change the condition from ` frameLength = = 0 ` to ` frameLength < = 0 ` in ` LogInspector . java ` to ensure
added return statements for float and int values in IntFloatMap and IntIntMap classes to ensure default values are returned instead of returning zeroValue
refactor image handling in ImageDownloadService to use a Runnable for setting the icon to improve responsiveness and ensure icon updates occur on the
added null check for registered in HandlerRegistration . java to improve robustness by preventing potential NullPointerExceptions
removed the ` hasNextSibling ( ) ` method from ` AttributeNode ` , ` DocumentNode ` , ` ElementNode ` , and ` Html
fixed - npe in redisdistributedmapcacheclientservice . getdistributedmapcacheclient ( ) if redis server be n '
added logging statements to indicate MobFileCache is enabled and disabled to improve visibility into cache settings for better debugging and monitoring
rename ColConvCCMTest . java file to improve clarity and consistency in naming conventions
replaced instances of ` Source . instance ( context ) ` with local variables ` allowCovariantReturns ` and ` syntheticNameChar ` to
pdfbox - 4892 : use diamond operator , a suggest by valerybokov
updated JSON handling in ` mmm Json . java ` to use ` asString ( ) ` instead of ` asFloat ( ) ` and added
added a return statement in GenericFileConsumer . java to ensure that the method does not exit prematurely
added a Runnable invocation using EventQueue . invokeLater in bug6638195 . java to ensure that tasks are executed on the Event Dispatch
updated the calculation of ` maxSize ` to use ` getMaxBinaryMessageSize ( ) ` instead of ` getMaxTextMessageBufferSize ( ) ` to
updated steeringValue calculations in TestAttachDriver , TestFancyCar , and TestPhysicsCar files to correct the logic for
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
updated JdbcSerDe to use LocalDate and LocalDateTime for date and timestamp handling to improve accuracy of date and timestamp representation in JdbcSerDe
updated version number from 2 to 3 and refactored metadata reading logic in ParseData . java to ensure compatibility with versions prior to 3 and
added FlywayInitializerJpaDependencyConfiguration to FlywayAutoConfiguration and created a new CustomFlywayWithJpaConfiguration class
added sorted ( ) method call to ClassesImpl . java to ensure the classes are processed in the correct order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and modified the launcher state comparison logic in ` AbstractLauncher
refactor SharedInformer class implementation to improve code readability and maintainability
refactor memory scope handling in TestCloseScope0 . java to differentiate between different Java versions to ensure compatibility with different Java versions and improve
increased the timeout value in the test from 500ms to 5000ms to allow more time for the test to complete before timing out
updated CaptchaChannelProcessorTests . java to improve test coverage to enhance reliability of the CaptchaChannelProcessor functionality
added collection ownership handling in MetadataImport . java to ensure items are updated correctly based on collection ownership
added a retry mechanism for saving registry cache properties in AbstractRegistry . java to limit the number of successful save properties attempts to accommodate a
updated the constructor of TrackingDirectoryWrapper to use ' directory ' instead of ' mergeDirectory ' to ensure the correct directory is used for tracking
[ core ] unusedimports : fix bug with for loop and generic
added validation for file sink descriptions in HiveIcebergStorageHandler and implemented bucketed table validation in IcebergTableUtil to ensure insert
updated assertions in BootstrapTests to reflect the correct number of SAML keys and added a check for legacy keys in the default identity zone configuration to ensure
updated method names from ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` and added a check for non - static classes
modified the variable name from ` theAddressie ` to ` addressees ` for clarity to improve code readability and maintainability by
removed WAITING _ FOR _ LINE _ COMMENT , WAITING _ FOR _ BLOCK _ COMMENT , WAITING _ TO _ LEAVE _ BLOCK
added IOException handling to the release method in IndexWriter and implemented LockReleaseFailedException in NativeFSLockFactory to improve error handling and provide clearer
changed the package of DataSourceInitializer from test . jdbc . datasource to org . springframework . batch . test to align with the new package structure
added a conditional check for unary operators before transforming the right value in SpelExpressionTransformer . java and updated related methods in LiteralNode . java
updated ByteBuddy initialization to use TypeValidation . DISABLED to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` and updated related methods in ` JavacRoundEnvironment . java ` to improve type
added exception handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest . java and modified MySQL table
refactor setSystemProperties method to remove the logFile parameter and streamline system property handling to improve code clarity and maintainability by consolidating
added a method to check for HTTP redirects and updated connection handling in the request method to improve handling of HTTP redirects and ensure proper connection management
added new constants for service mapping and application mapping in ServiceCombConstants and updated MicroserviceFactory to use these constants to improve code clarity and
updated the method to retrieve the bean name from ` getName ( ) ` to ` getBeanName ( ) ` to ensure the correct bean name is
updated DB path regex and added DB _ PREFIX constants in BaseAndroidTestCase . java and GeocodeHelperTest . java to ensure database paths
updated the method to return the unread count for the current account to ensure accurate tracking of unread accounts in the application
renamed the test method ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool `
added a limit parameter to the getAllOrder method in MarketOrderIdListCapsule and modified Wallet to utilize it to limit the number of
added null check for the user before retrieving user settings in HomePage . java to prevent potential NullPointerException when accessing user settings
updated the method of retrieving the absolute file path in LocalFileSystem and added a new test for relative wildcard paths in LocalFileSystemTest to ensure correct
added maximum width and height limits to the bounds object in ComponentBuilders . java to ensure that the instance bounds do not exceed defined limits
added SLF4J logging and deprecate the request method in CommonsHttpSolrServer . java to enhance logging capabilities and deprecate the
removed exception handling for document creation in PrintController . java to streamline error handling for better clarity and maintainability
refactor CrateType and RustBinaryIntegrationTest to use lambda expressions for filename formatting to improve code readability and maintainability by redu
added checks for empty and non - numeric words in SpellChecker . java and created a corresponding test in SpellCheckerTest . java to
removed unnecessary whitespace in the MESSAGE constant declaration to improve code readability and maintain consistency
added a method to retrieve the OCFileListFragment from a file and implemented file action handling in FileDisplayActivity to improve code organization and enhance
hbase - 13827 disable daemon mode for snap puller ( # 13827 )
updated the parameters of the update method in StoreCachedTest . java to ensure consistency in parameter order
updated the constructor parameter name from ' materials ' to ' theMaterials ' and added a loop to remove RocksimComponentFileColumnParser
updated string arrays in DependencyBank . java for consistency and clarity to enhance readability and maintainability of the code
added methods to set maximum recycled views based on device profile and icon size in AppsContainerRecyclerView to ensure proper view management based
added a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest . java ` to ensure that building
fix the examplebaritonecontrol example baritonecontrol do n ' t accept waypoints with no location
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to utilize Liquibase ' s
added null handling functionality to FilterOperatorUtils and implemented a new test for range filtering in NullHandlingEnabledQueriesTest to enhance query performance and ensure
updated parameter validation for bootstrap method signatures in JDynamicInvokeExpr . java to ensure correct argument types are validated for bootstrap method signatures
increase port to avoid test failure on slow ci server
clear formatter settings in CucumberInstrumentation . java to ensure consistent formatting behavior during runtime
changed the type of ` contacts ` from ` List < RegisteredServiceContact > ` to ` List < DefaultRegisteredServiceContact > ` and modified
added a conditional check for workspace cell padding in DeviceProfile . java to ensure workspace labels are only hidden when necessary based on icon size and padding
updated assertions in ReplicationFactorTest . java for improved clarity and consistency to enhance readability and maintainability of the test assertions
add pre - initialization support to llvmcontext . patchcontext ( ) .
added JUnit Ignore annotations to ChaosMonkeyNothingIsSafeTest and ChaosMonkeySafeLeaderTest classes to temporarily disable
replace RuntimeException with JsonIOException in error handling to improve error handling by providing a more specific exception type
replaced ` Integer . valueOf ` with ` Integer . parseInt ` for value parsing in ` VisualScoreTagTest . java ` to improve performance
updated error messages and modified directory handling in Copy . java to improve clarity of error messages and ensure proper directory resolution
refactor HLCSegmentName , LLCSegmentName , and SegmentName classes to introduce a new method for checking low - level consumer
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to ensure
replaced ` DateTime . now ( ) ` with ` clockReader . getCurrentTime ( ) ` in ` DueDateBusinessCalendar . java
updated the return value in TargetCpuType . java to include specific CPU architecture options to enhance flexibility in managing CPU types in the application
added a method ` deleteAllFiles ( ) ` to ` FileDataStorageManager ` and implemented it in ` ManageAccountsActivity ` to enable file
updated the help message from " - ? % n " to " - h % n " in SchemaCrawlerCommandLine . java to correct the help
added a static method ` createSuiteDescription ` to create a ` Description ` instance with a unique ID and validation to enhance functionality by allowing unique
replaced the decoding mechanism in SnapshotThread with a direct call to decodeBarcode to simplify the code and improve readability by eliminating
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and its usage across multiple classes to simplify the constructor
added unit tests for range calculations in GWCZoomContextFinderTest to ensure correct handling of zoom context ranges past the start and end
added support for dependency tracking in JRubyScriptEngineConfiguration and updated JRubyScriptEngineFactory to conditionally activate dependency tracker based on configuration to
updated request URI check from ` getRequestURI ( ) ` to ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure correct
do n ' t try to create a new table if it already exist
refactor WelcomeWindow to improve image handling and cache management to enhance performance and maintainability of the image rendering process
updated tuner configuration handling and error logging in multiple classes to improve clarity of tuner configurations and ensure proper handling of buffer transfers
added HasTests interface to AbstractShBinaryDescriptionArg and created a new test method in ShBinaryRuleIntegrationTest to enable testing capabilities for sh
added conditional logic to set includeString to " db : hsqldb " in TestFilter . java to ensure compatibility with HSQLDB database
removed unnecessary whitespace in the if statement to improve code readability and maintain consistency
truffle : do n ' t materialize host name if stack trace be empty .
export jvmci service in graalservices . load ( ) if java8orearlier = true
added test for duplicate command handler resolution in aggregateannotationcommandhandlertest
[ flink - 20865 ] [ stream ] add fine - grained - shuffle - mode . all - blocking option to batch job
fix fish hook not work correctly . close # 466
camel - 14850 - camel - aws2 - * : improve documentation for file and ftp endpoint builder
rename ` getCommandRunner ( ) ` to ` getStepRunner ( ) ` across multiple classes to improve clarity and consistency in naming conventions
rename ` useShortNames ` to ` compressPackageNames ` in ` GangliaReporter ` and related methods to improve clarity by
added a check for empty items in AppsContainerRecyclerView to avoid unnecessary processing when no items are available
added a conditional bean annotation for REPORTER _ BEAN _ NAME in ZipkinAutoConfiguration . java to ensure that the REP
replaced StringBuffer with StringBuilder and added properties property handling in XMLLayout . java to improve performance and flexibility in managing XML properties
added an ` OMIT _ HEADER ` parameter to multiple classes and implemented the ` remove ` method in ` NamedList ` to manage response headers
fix property name retrieval in EscherProperty . java and add unit tests in TestEscherProperty . java to ensure correct retrieval of property names
replaced direct call to getBuildRuleType with a call to Description . getBuildRuleType to improve code readability and maintainability by using a
modified the way the method numberer is removed and added a call to modify the hierarchy in SootClass . java to ensure the method number
refactor disputesPerTradeId and disputesPerDepositTxId to use local variables for clarity to improve code readability
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified ` retrieveColumns ( ) `
set the transaction confidence type to NOT _ SEEN _ IN _ CHAIN in the Wallet and WalletTest classes to ensure transactions are not marked
refactor body argument handling in HttpClientIntroductionAdvice to improve clarity and handling of header names to enhance code readability and
craftinghelper : skip json file that start with ` ` _ ' ' that start with ` ` _ ' '
hbase - 15811 region . close ( ) should log warn if open region fail
refactor length comparison logic in Credential . java to use Math . min for improved readability to enhance code clarity and maintainability by
[ java ] do n ' t check for image in subscription that do n ' t have it .
[ hotfix ] [ test ] fix testjvmprocess . destroy ( ) to wait for process to be destroy .
added support for Oracle in the SQL test condition to ensure compatibility with Oracle database scenarios
camel - 14284 : camel - mail - consumer should check if the mail store be available before try to connect to it .
added cancellation check for tokens in the query to ensure that there are no more tokens in the query that have not been consumed
camel - aws2 - translate : list all the available language in the enum - start with ` ` ka ' ' and ` ` gu '
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the model initialization logic in ` Voice . java ` to
added emailDomain property and its getter / setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration of email domain for LDAP identity
added new configuration constants for request timeouts and methods to retrieve them to improve configuration flexibility and provide default values for read and connect timeouts
do n ' t run processdeferredconcepts if there be no concept to save later
added RedisCategory annotation to RedisServiceRegistryTests to categorize tests related to Redis functionality
updated ` FindDeprecatedMethodsTest ` to use ` ParameterizedTest ` and modified the ` noNPEWhenUsedFromDeprecatedUses ` method to
added a call to the superclass ' s paintComponent method in OverlayPanel and updated mImageHeight in WaterfallPanel to ensure proper rendering
removed unused imports from multiple Java files to improve code clarity and maintainability
updated event signature handling in ContractEventTriggerCapsule and added eventSignatureFull getter and setter methods in LogEventWrapper to improve clarity and
updated filter condition to check if the file name ends with an underscore to ensure proper identification of session IDs in file names
replaced ` g . clearRect ( ) ` with ` g . fillRect ( ) ` and set the background color using ` g .
refactor invoker compilation logic in PackageBuilder . java to improve clarity and structure to enhance code readability and maintainability by separating con
removed debug print statements from multiple Java files to clean up the code and improve readability
added a conditional check to check for NaN score values before asserting equality in TestFieldCacheSort . java to ensure tests only validate score values
replaced the oldKeys assignment to use a copy of the entity keys set to ensure that the oldKeys set remains unmodified after modification
added logic to handle zero time strings in ColumnSnapshotGenerator and created a test for default date values in MySQLIntegrationTest to ensure proper handling of
rename ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` to ` offererBtcPubKey ` and ` taker
added generic type parameters to the FunctionAllGroupHeadsCollector , FunctionAllGroupsCollector , FunctionFirstPassGroupingCollector , and FunctionSecondPass
[ drools - 5892 ] fix session configuration cache miss in kiecontainerimpl
updated HiveMetaStoreClient instantiation to use ' this . conf ' instead of ' conf ' to ensure consistency in accessing the configuration object
added a conditional check to return early if modalness matches mModalness to optimize performance by avoiding unnecessary processing
added a test for creating CodecCapabilities from the profile level and implemented a native method in ShadowMediaCodecList to ensure the correct codec capabilities are
fix issue # 5460 ( when enter key use , focus be wrong )
added validation for width and height in SunVolatileImage and enhanced error handling in XRSurfaceDataProxy and XRPMBlitLoops
updated thousands separator from " . " to " \ u00a0 " in FormatData _ uk . java to ensure correct formatting of
refactor loops and threads in AsyncStressTest and StressTest classes to use AtomicInteger instead of an int array to improve thread management and
added beta flavor support in AchievementsFragment and LeaderboardFragment to enhance user experience by providing feedback when achievements are unavailable
added access , name , and description fields to the SearchMethodVisitor class to include context information for better search functionality
added multiple sleep calls in IoTDBInsertWithoutTimeIT . java to ensure proper handling of interrupted exceptions during database operations
removed unnecessary whitespace in DLNAResource . java to improve code readability and maintainability
[ java ] remove the ` @ xmlrootelement ( name = ` ` batch - config ' ' and ` ` stream - config ' '
refactor transaction handling methods in TableReader to improve transaction management and error handling to enhance code clarity and ensure proper resource management during transactions
flume - 1309 : remove keymanager - type and trustmanager - type from thrift source and rpc client .
refactor ` getSingleSourceApplicableTest ` method to use ` TreeVisitor < ? , ExecutionContext > ` instead of ` JavaIsoVisitor `
added exit ( ) method in Blockmania . java and condition in Keyboard . KEY _ TAB in Blockmania . java to ensure proper
replaced ` AccessSpecifier . PACKAGE _ PRIVATE ` with ` AccessSpecifier . NONE ` across multiple files to standardize access specifier usage across the
renamed the method ` unHandled ` to ` unhandled ` and updated related error logging in ` Check . java ` to improve clarity and
updated stripes and stripeStats assignments in OrcInputFormat . java to ensure consistent retrieval of stripes and stripe statistics based on the or
added a null check for the exception in JCache . java to prevent potential NullPointerExceptions during execution
update myhentaicomics ripper to use https instead of http
added a command - line option to show the current version and exit if it is provided to enhance user experience by providing a clearer and more
replaced ` split ` method with ` splitTokens ` in ` Sketch . java ` to improve code clarity by using a more d
updated rotation handling in ConsoleActivity and TerminalView to improve keyboard navigation behavior to enhance user experience by allowing customizable rotation settings for keyboard navigation
changed the type of ` hq ` from ` HitQueue < ? > ` to ` PriorityQueue < ScoreDoc > ` and added
fix nullpointerexception in clientsmartlistenerservice when ownerconnectionaddress be null .
camel - 14850 : camel - jbang - allow to configure the headersmapfactory class name of the headersmapfactory
added a space in a closing brace in JavaCompiler . java and updated Diagnostic . java to include it to improve code readability and maintain consistency
int - 1187 , int - 1188 , int - 1188 , int - 1188 , int - 118
updated the index parameter in the expecting condition from i + 1 to i2 in ArrayFunctions . java to correct the condition to reflect the correct
refactor script engine module classloader creation and improve error handling in AbstractScriptProcessor and InvokeScriptedProcessor to enhance code clarity and ensure proper
added support for ` org . postgresql . PGStatement ` in the ` Proxy . newProxyInstance ` method in ` PooledConnectionImpl
do n ' t refresh size estimation when test fail
changed log level from error to warn in AtomicRemainder . java from error to warn for no more memory fragment limit to improve logging clarity
remove unnecessary sorting and minTimestamp calculation in CompactionController and add a new test for aggressivefullyexpired in TTLExpiryTest to improve
fixed - rblockingdeque . shortpoll ( ) and rblockingqueue . shortpoll ( ) method do n ' t handle negative timeout
removed unnecessary format strings from printMap calls in JobInspectCommand . java to simplify the output format for better readability and maintainability
refactor Engine class to improve code readability to enhance maintainability and facilitate future updates
refactor the sorting logic in ChildHolder to use entrySet ( ) and map ( ) instead of Stream . of to improve performance and readability
[ issue # 2696 ] fix test failure in acl client ( # 2697 )
updated condition from numIndexDims to numDataDims in BKDWriter . java to correct the logic for handling data dimensions
[ hotfix ] [ notebook ] do n ' t print stack trace in notebookserver
updated the variable used in the addListElement method from funN to lt in ExpressionNodeEvaluator . java to ensure the correct variable is used
removed the ` public ` access modifier from ` verifyIdsAreStable ` and ` getNodeId ` methods in ` NodeIdAccessor . java `
server : fix npe when create snapshot policy for a volume that do n ' t have a valid storage pool
changed method visibility from public to package - private in ItemWriter . java to restrict access to these methods for better encapsulation
updated the parameter of the ThingImpl constructor from an empty string to " test " to provide a more descriptive identifier for the test thing
added ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest `
replace FSDirectory with RAMDirectory in TestNorms . java to improve performance by using a more efficient memory directory
added a check to ensure mLineHeight is always greater than or equal to mDrawTextRectBuffer . height ( ) to prevent potential errors
refactor WalletAppKit class for improved readability to enhance maintainability and clarity of the codebase
[ netbeans - 4892 ] remove hat . js from oqlengineimpl . getinitstream ( ) , since it
remove the menu item from the button group when remove the transport menu item to ensure that the menu item is properly removed from the button group
added ` resolve ` and ` replaceTokens ` methods to ` AbstractDataImportHandlerTest ` , ` Context ` , and ` ContextImpl `
updated BsqBlockChainExplorer handling to use Optional for better null safety to ensure proper handling of null values and avoid potential NullPointerExceptions
added attributes management methods to StandardSession and Session classes to enhance session management capabilities by allowing attribute - based access to session attributes
added assertions to validate the presence and absence of a plain bean in the found object to ensure that the correctness of the plain bean is
updated the array size from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to optimize memory usage by using the correct initial
refactor BatchCommandLineLauncher to improve code structure to enhance maintainability and readability of the code
added data source and transaction manager beans to BatchMetricsApplication to enable HSQL database integration in the application
changed the implementation of GlowrootLogHttpService from UnauthenticatedHttpService to HttpService to align with the intended HTTP service interface
pdfbox - 4892 : set non - stroke composite , a suggest by valerybokov
removed synchronized keyword from notifyAll ( ) and close ( ) methods in DocumentsWriter and added synchronization in DocumentsWriterPerThread to improve
added methods to retrieve multiple choice options and validation constraints in UiBinding . java to enhance the flexibility and functionality of property management in the UI
updated method calls to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` and ` SourcePaths . build ( ) `
bugfix : only update the stored copy of the tree for a full save
updated the ` setCondition ` method to accept a ` Pattern ` object instead of a ` String ` to enhance flexibility in handling regex patterns
updated ArrayList initialization to use diamond operator for consistency to improve code readability and maintainability
removed import of CharTermAttribute and its usage in DefaultIndexingChain . java to streamline code by eliminating unused dependencies
refactor NBJavacTrees class implementation to improve code readability and maintainability
removed unsupported data encoding check from VectorizedPrimitiveColumnReader to streamline code by eliminating unnecessary checks for unsupported data encoding
added MarkerFactory import and improved logging condition in HttpSolrCall . java to enhance logging capabilities and ensure compatibility with gradlew checks
added a call to destroy the metadata service proxy in ServiceInstancesChangedListener . java to ensure proper resource management and prevent memory leaks
fix infinite recursion when max level be set to 10
added a null check for the changelog ID before initializing the message in HubChangeExecListener . java to improve error handling by providing clearer messages
added functionality to check if the barcode decoding succeeds in AbstractBlackBoxTestCase to ensure that normal mode fails only when the expected text matches the
changed the return type of ` executeCompilation ` from ` int ` to ` ProcessExecutor . Result ` in ` CxxPreprocessAndCompile
removed the condition for incrementing the number of events in the query to simplify the loop and improve readability by eliminating unnecessary complexity
simplified the support check for Validated annotations in ValidatedLocalValidatorFactoryBean . java to improve code readability and maintainability by
fix race condition in entityawareworldprovider . removetemporaryblockentities
intrinsifyarraycopyphase : remove unnecessary check for exact type
do n ' t set all log level in testcoyoteadapter ( it ' s a no - op )
removed the ` WantedAnywhereAfterFollowingInteraction ` class and updated the ` Reporter ` and ` HasStackTrace ` classes to stream
added validation checks for owner and key addresses in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure that owner and key addresses are
refactor scriptlauncher to use sortedmap instead of comparator
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced ` addProperty ` methods with ` setProperty ` for metadata properties in ` BaseSingleTreeBuilder . java ` to improve clarity and consistency in
updated AsmLibraryLoader to use the interface class ' s class loader instead of the parent class loader to ensure correct class loading by using the
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated the export statement in Java2TypeScriptTranslator to use a conditional statement based on definition scope to improve clarity and correctness of the
replace ` EmptyServerHandler ` with ` AbstractHandler ` and copy input stream to nullOutputStream in ` HttpClientTest . java ` to ensure proper
updated input listener parameters in HelloInput . java to use string literals instead of arrays to improve code readability and maintainability by reducing unnecessary
added a null check for the lhs variable in AbstractSqmPath . java to avoid potential NullPointerExceptions when the lhs variable is not initialized
updated package structure for multiple test classes to improve code organization and readability
refactor BufferedImage creation and handling for grayscale and invert filters in AwtCanvas . java to improve image processing logic and ensure proper handling of
[ gr - 23233 ] fix jvmciversion qualifier for native image .
[ hotfix ] [ test ] remove unsupported usage of timers in pardo test
replace ` remove ( ) ` with ` poll ( ) ` in ` MockPhishingProtectionServiceV1Beta1Impl . java
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure proper serialization compatibility for subclasses
refactor CallStack class to improve code readability to enhance maintainability and facilitate future updates
log warn when per - node max size configuration do not allow any data in map
updated return statements in multiple Java files to use " LST " instead of " AST " to ensure consistency in terminology across the codebase
updated calculations for scoreablesPerThread and refactored ScoreableJob instantiation in ThreadedAcousticScorer . java to improve
replaced an AssertionError with a null return statement in NetHooks . java to improve error handling by returning a null instead of throwing an AssertionError
updated method calls in ApplicationControllerFluentLeniumTest to use window ( ) instead of getServerAddress ( ) to improve code clarity and
added default makeString methods to ParallelIterable , RichIterable , AbstractSynchronizedRichIterable , AbstractMultiReaderMutableCollection , and AbstractMulti
updated the order setting in OidcServicesManagerRegisteredServiceLocator from HIGHEST _ PRECEDENCE to DEFAULT _ ORDER to ensure consistent
modified ` WeakAssociationsAnalyzer ` to accept a ` Predicate < ProposedWeakAssociation > ` for weak association validation to enhance flexibility in
refactor Deflater class to improve compression handling to enhance performance and maintainability of the compression process
added error handling for IOException in Font . java to ensure proper resource management and prevent potential runtime exceptions
added a null or empty content check in VersionTypeBinding . java to ensure a default version is returned when no content is provided
replaced the local variable ` places ` with a direct return statement in ` NearbyListFragment . java ` to simplify the method '
convert content type to lowercase before check for " text " in MailConverters . java to ensure consistent content type handling across different locales
change the access modifier of AUTH _ MAGIC from private to public in OpenSSHPrivateKeyUtil and update the format calculation in OpenSSHPrivateKeySpec
modified the ` updateItemLocationsInDatabaseBatch ` method to accept a boolean parameter for binding folder names to enhance flexibility in folder name retrieval
updated import statements and modified Hibernate annotations in InheritanceCacheTest . java to improve code clarity and ensure proper access control for Hibernate
updated import statements in ConnectOAuth2RequestFactory . java and added a method to retrieve user approval request in TofuUserApprovalHandler .
updated InfluxNamingConvention to use delegate ' s tagKey method and added a new test for naming conventions to ensure correct naming conventions
replaced print statement with a dump method in multiple classes to improve code readability and maintainability
updated the key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure the correct cookie key is used for processing requests
added a static method ` classMetadataUnsupported ( ) ` in ` Platform . java ` and refactored its usage in ` Subject . java `
added functionality to toggle the clear all functionality in OverviewActionsView based on user preferences to enhance user experience by allowing toggling of clear
modified the ` desiredRepoVersion ` variable to be final and modified the timeout duration in ` ClusterStackVersionResourceProvider . java ` , and
deleted the MemoryLeakTest . java file to remove obsolete memory leak tests to streamline the codebase
updated the return statement to include local host information in the URL to ensure accurate URL formatting for local environments
enable mvdwplaceholderapi by default if plot squared be not enable
wait for cluster size before start node in abstractpartitionassignmentscorrectstest
added a SingletonHolder class to manage FFIProvider instances to enable lazy initialization of FFIProvider instances based on JNA configuration
tika - 2696 -- add test for hierarchical w file list ( # 2698 )
added null checks for ` mongoPersistentEntity ` and updated ` idProperty ` assignment logic in ` MongoTemplate ` to improve robustness by prevent
updated the condition for creating Position instances to use NODE _ LIST when directInputCount and directSuccessorCount are greater than or equal to direct
added a new private BigDecimal field ` accTradeValue ` and its getter method in ` BithumbTicker ` , and updated related classes to
updated log messages in RealtimeSegmentDataManager to include segment name instead of concatenating strings to improve clarity and consistency in logging output
replaced the ` maxParallelThreads ` variable with a constant ` MAX _ PARALLEL _ TASKS ` and updated its usage to
replace ArrayList with CopyOnWriteArrayList for readers in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex to improve thread
refactor multiple dict implementation classes to improve code organization to enhance maintainability and readability of the codebase
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions when destBuffer is not initialized
( chore ) camel - msv : fix flaky test
updated the condition to check if ` beginCycle ` is greater than ` currentCycle ` in ` DelegationService . java ` to ensure proper
updated random number generation from 6 to 10 in JdbcExpiringCodeStore and updated assertions in CodeStoreEndpointsTests and AutologinIT to
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure correct matching of unique constraints in the database
updated MediaDetailFragment . java to improve handling of language codes and descriptions to enhance code readability and maintainability by utilizing a HashSet for
added handling for ArrayIndexOutOfBoundsException and ClassCastException in FindBugs2 . java to improve error reporting for recoverable exceptions during class loading
feat : add withreferencefilter ( ) and withfilter ( ) method to listimagerecords api
http : / / issues . apache . org / activemq / browse / amq - 4892 - exclude bridgeerrorhandler property
added a check to break if lines contain " # ifndef " or " # endif " in OpExclusionUtils . java to handle
added a return statement to indicate a failure in the DatabaseCommand method to ensure proper error handling during database operations
updated the HonestPoliticianExample to use multiple Politician objects instead of hardcoded strings to enhance clarity and
[ zeppelin - 4892 ] fix npe in beanshellinterpreter when initfile be empty
camel - 14284 : camel - restlet - make it possible to configure the restlet port for camel - restlet
removed specific block imports and added a new case for WALL _ SIGN in SchematicFormat . java to streamline code by elimin
added a system property for " hive . query . max . length " in QTestUtil . java and updated overridden configurations in SessionState .
changed access modifiers of userName and securityMgr from public to private and refactored HTTP configuration initialization to enhance encapsulation and improve code clarity
updated sink names from " writeHdfs " and " writeKafka " to " hdfsSink " and " kafkaSink " across multiple sink
updated HiveConf to check for the presence of " spark . app . name " and improved application name handling in HiveSparkClientFactory
fix a typo in managedclassfactory # getexcludedproperties ( ) ( # 2329 )
danielwagnerhall : remove the restore ( ) and maximize ( ) from the window . restore ( ) method .
refactor filesystem resolution methods to use getMainCellRoot and getMainCellBuckOutPaths instead of getEmbeddedCellsBuckOutBaseDir to
removed assertion for exception message in TestXMLEntityExpansion . java to streamline error handling for entity expansion tests
modify table offset and length calculations to use bitwise operations to ensure correct data representation for TrueTypeFont
added an assertion to verify that the customized field is not null in DirectMethodHandle . java to ensure that the form ' s customized state is
updated the calculation of mLineBuffer to use a variable for the number of floats and improved coordinate checks to enhance code readability and maintain
refactor flavor handling and error handling in AndroidBinaryDescription . java to improve clarity and maintainability of flavor validation logic
updated buffer assignment from ` offset ` to ` i ` in ` LwjglGL11 . java ` to ensure correct positioning of
added new classes Property , PropertySuper , and TestClassResolutionFail to test class resolution to ensure proper handling of NoClassDefFoundError and
only remove shutdown hook if shutdown hook be enable
updated the class name from FilterChainProxy to FilterChjainProxy and removed the URL parameter from VirtualFilterChain constructor to simplify the class
replaced Collections . sort ( intermediateResult ) with Arrays . sort ( intermediateResult , 0 , size ) and modified return statements in Percentile
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and modified MDTable initialization in QueryTypeAnalyser to ensure that
set baseType to null and initialize literalPrefix , literalSuffix , and localizedTypeName in DatabaseInfoRetriever . java and MutableColumnDataType . java to
replaced inline HTML links with link tags in multiple Java files to improve code readability and maintainability by standardizing link usage
replaced static instances of ` ObjectEqualEvaluator ` , ` ObjectNotEqualEvaluator ` , and ` BooleanEqualEvaluator ` with final static instances
updated target architecture references from " osx _ x86 - 64 " to " osx _ config " in multiple test files to ensure consistency
added sound effect management methods in AllAppsView . java to enable or disable sound playback based on user preferences
changed the exception type from Exception to IOException in the main method signature to improve error handling by providing a more specific exception type
added leftAxis granularity enablement in BarChartActivitySinus . java to enable right - axis granularity for better data visualization
refactor version comparison logic in GdxSetup . java to use a new method ` compareVersions ` to improve code readability and maintainability
updated ContextHandlerGetResourceTest to use MavenTestingUtils for directory checks and added OS support verification to improve test reliability and ensure compatibility with
added close methods to various classes to ensure proper resource management and prevent resource leaks to improve resource management and prevent resource leaks
refactor event handling in SocketRemoteTest , MockAppender , SocketServerFunctionalTest , and SocketServerFunctionalTest to use BlockingQueue
[ beam - 4142 ] fix checkstyle issue in hadoopresourceid
removed multiple unused import statements from IsometricStaggeredTiledMapRenderer . java to clean up the code and improve readability by
removed redundant call to unbindHandle in ItemServiceImpl . java to streamline the code by eliminating unnecessary duplication
refactor Config and Attribute classes for improved clarity to enhance maintainability and readability of the code
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
updated NavbarButtonsViewController to use UI _ MODE _ NIGHT _ MASK for dark theme handling to improve button navigation behavior based on
replaced abort with throw in PolyBenchLauncher . java to improve error handling by throwing an exception instead of aborting
replaced ` bootstrapMethodIndex ` and ` nameAndTypeIndex ` with ` refKind ` and ` memberIndex ` in ` ClassWriter .
updated the ` findBox ` and ` findElementBox ` methods to include a ` BlockFormattingContext ` parameter and adjusted related logic to enhance
added error handling and standard error output formatting in WorkerProcess and WorkerShellStep to improve robustness of process launching and provide clearer error
added null checks and error handling in Collections and CheckedListReplaceAll classes to enhance robustness by throwing NullPointerExceptions when passed null operators
added conditional write handling in SslConnectionTest to control the behavior of fillInterested ( ) and set _ writeCallback to null to improve testing
refactor DeviceFlag and FeatureFlags classes to improve listener registration and removal to enhance code clarity and maintainability by ensuring proper initialization and listener
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests due to issue gh - 1114
removed unused import of MalformedURIException in StandardRequestHandler . java to clean up the code and improve readability
fix instructorfeedbackeditpage to focus the end of the input box
refactor trade subscription logic in KrakenStreamingTradeService . java to improve clarity and structure to enhance code readability and maintainability
replaced System . err . println with System . out . println in ChangeableUrls . java to standardize output output for better readability
added a boolean parameter ` randomAccessRows ` to the ` SparseRowMatrix ` constructor and updated related constructors accordingly to control the random access behavior
bug 10625 : do n ' t send delete volume usage event for non - pool volume
modified the way the input stream is created based on the Hive configuration to ensure the correct file path is used based on the job ' s configuration
[ beam - 10660 ] fix the import of guava . v26 _ 0 _ jre in udftestprovider
fix memorycctprovider registration in memorycallgraphbuilder .
fix npe in conferencechatmanager when there be no multi user chat operation set
added validation to ensure the update file can be written to ensure that the file is writable before proceeding with operations
added folder synchronization functionality to the DrawerActivity and created FolderSyncActivity to enhance user experience by allowing folder synchronization functionality in the application
[ hotfix ] [ test ] refactor sequentialchannelstatereaderimpltest to use try - with - resources
fix spanishtreenormalizer to handle % a a delimiter
replaced ` reader . pointValue ( ) ` with ` heapPointWriter . getPackedValueSlice ( i ) ` in ` SimpleText
added a new ` LocaleRandomizer ` class and its corresponding test class in ` InternalRandomizerRegistry ` and ` LocaleRandomizerTest `
added unit tests for mime type assertions in TestMimeTypes . java to ensure correct handling of application / x - font - printer - metric and
[ netbeans - 4892 ] bump java version to 10.0 in installer and autowire
refactor code to use a privileged action for setting the thread name in TCPTransport . java to improve security by ensuring the thread name is
modified the read timeout parameter in Http2AsyncParser to be conditional on 0 to ensure that the socket read timeout is set to a default value
increased the initial delay value from 120 to 600 in TimelineMetricConfiguration . java to improve the responsiveness of the application by
updated the error message in the SelectStatement class to include the primary key column name to improve clarity of the error message for better debugging
added Joda - Time imports and modified date handling logic in ThirdEyeJiraClient . java to improve date formatting functionality for better
added a ` PriorityGenerator ` instance and refactored priority generation methods in ` HeadersGenerator ` and ` PriorityGenerator ` classes to improve code
added a maximum scalar replace code size constant and modified the condition for scalarReplace to ensure scalarReplace is only evaluated when the entire class has sufficient
added a new field ` Media . DATE _ TAKEN ` to the ` projectionTest ` array and modified the folder and file sorting logic
updated rectangle drawing calculations in TexturePacker2 . java to correct image positioning to ensure correct rendering of images by subtracting the amount from
added ServletContextHandler and modified WebSocket upgrade filter handling in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to improve WebSocket filter management and
added shutdown calls for validateSignService and trxHandlePool in Manager , TransactionsMsgHandler , and NodePersistService classes to ensure proper resource
added RawJsonRequestBody annotation handling and a corresponding processor in JaxrsSwaggerGeneratorContext , Echo , and TestJaxrs to enable support
added a new method ` newTarget ` to ` LoggerUtils ` for creating a new ` Target ` instance based on target type and extension to
updated BeanContainer to return an ArrayList instead of a new ListBeanContainer and added BeanContainerTests class to enhance functionality and ensure correct functionality of
hbase - 15836 fix typo in testmetricsregionserver # testmetricsregionserver
camel - 16400 : fixed memory leak in cachedoutputstream when exchange be complete . thanks to daniel dai for the
added a line to set the device ID in TeltonikaProtocolDecoder . java to ensure the device ID is correctly set for the position
replaced ` Files . readFirstLine ( ) ` with ` Files . asCharSource ( ) . readFirstLine ( ) ` for
added a null check for the operator in the visitAssignop method and created a new Test class with a test case to ensure proper handling of
added a boolean flag ` enableAccountHandling ` to control account handling behavior in ` FirstRunActivity ` and ` BaseActivity ` to enable account
fix isochroneresource . getmaxpolygon ( ) to return the main connected polygon instead of throw an exception .
modified DrillViewTable to accept a list of paths instead of a single view and modified WorkspaceSchemaFactory to include a path parameter to enhance
added default configuration parameters for PooledByteBufAllocator in PooledByteBufAllocatorL . java to enhance flexibility and control over the allocator
updated array type handling from double to short in ObjectInputStream . java and added a new class CloneArray . java to ensure proper cloning of short
added LLAP _ IO _ THREADPOOL _ SIZE configuration to configure the number of threads to use for low - level IO thread pool to
added Java version checks and rerun initialization for SSL debugging and SSL logger in SecurityServicesFeature . java to ensure compatibility with Java version 11 and
updated latLonGrid range validation and added a new test method for growing polygons in TestLatLonGrid . java to improve accuracy of polygon
danielwagnerhall : implement ` ` invisibilityofelementwithtext ( ) ' ' and ` ` refreshed (
added an ` isInsertOverwrite ` parameter to the ` replaceFiles ` method and modified its access levels accordingly to enhance file management functionality by allowing
added a new test method ` reflector _ getOuterClass ` to ` ReflectorTest . java ` to verify the behavior of the outer class
updated the configuration key from " disable _ r _ java _ idea _ generator " to " auto _ generate _ android _ facet _ sources "
updated HubChangeExecListener to include a message variable for better clarity and logging to enhance the user experience by providing more informative messages during
added properties property handling in Link class and corresponding tests in QuickLinksConfigurationModuleTest to ensure proper handling of properties in links configuration
replaced ` @ EqualsAndHashCode ` and ` @ ToString ` annotations with ` toString ( ) ` method in ` YamlConfigFileDTO ` to
updated generic type parameters in SimpleForwardingServerCall and SimpleForwardingClientCall in AwaitableServerClientCallConfiguration . java to improve type safety
modified the ` forName ` method to include a ` callerClassLoader ` parameter and modified its implementation to enhance class loading accuracy by dynamically retrieving the caller
replaced ` isEmptyOrNullString ` with ` isEmptyString ` and updated authentication token handling in ` RequestItemRepositoryIT . java ` to improve
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to improve code clarity and maintainability by
changed the visibility of the setSecurityContextAccessor method from package - private to public to allow access to the method from other packages
updated TimeStepdefs . java and Transform . java to replace HumanTimeConverter with Calendar for laundry date validation to streamline the
remove spark _ isolated and spark _ recessive from the list of patterns in the ModBanners . java file to streamline the list
updated RestInvocationHandler to use the exchangeSpecification ' s URI instead of the ExchangeSpecification ' s URI in multiple services to ensure compatibility with the
removed redundant print statements in RecordGenerator . java to streamline output for better readability and maintainability
( chore ) camel - kafka : do n ' t auto - commit offset when auto - commit be enable
removed lockService . releaseLock ( ) from Liquibase . java and added outputStatement ( sql ) in LoggingExecutor . java to
added @ SuppressWarnings ( { " unchecked " , " rawtypes " } ) annotations to AbstractAuthorizeTag and AuthorizeTagCustomGrantedAuthorityTests to
refactor database methods to remove unnecessary ' synchronized ' keyword to improve code readability and maintainability
refactor property resolution logic in SpringBootAutoConfigurationMojo to use ResolvedProperty for better clarity to improve code readability and maintainability
updated the method call from ` getVirtExTicker ( baseSymbol ) ` to ` getVirtExTicker ( counterSymbol ) ` to ensure
( chore ) camel - core : fix checkstyle violation in camel - core
replace UUID . randomUUID ( ) with System . getProperty ( " testId " ) in HoneycombJdbcInterceptor . java to ensure
added synchronization to date and number format parsing in DefaultJobParametersConverter to ensure thread safety when accessing shared resources
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the height scale setting in FractalHeightMapGrid from a fixed value of 256 to a dynamic value to improve flexibility by allowing
replaced ` equals ` method with ` isNotSame ` in ` SecurityConfig ` and updated assertions in ` SecurityConfigTests ` to ensure that
set default value of dumpPartitionId to false to ensure default behavior is consistent with other configurations
added tests for UTXO functionality in UTXOSetTest . java to ensure correct handling of TXOutput and TXOutputs in the transaction
[ java9 ] do n ' t ignore java 9 unused variable
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a test for new job parameters overriding previous restart parameters in JsrJobOperator to ensure proper handling of job restart properties during job execution
added a protected boolean field ` disallowBatchOnCascade ` and a getter method ` isDisallowBatchOnCascade ` in ` Database
removed duplicate assignment of ` principal ` in ` JaasAuthenticationHandler . java ` to streamline code by eliminating redundancy
refactor core closing logic to use a custom executor service for better resource management to improve resource management and resource management in the core shutdown process
added visibility logic for mActionsView when fullscreenProgress is zero to ensure that the actions view is visible when fullscreenProgress is zero
refactor JobParameters initialization to use a local variable for clarity to improve code readability and maintainability by reducing redundancy
refactor BasicEntity and TestUtil classes for improved code organization to enhance maintainability and readability of the codebase
added tests for retrieving matched devices in SchemaRegionBasicTest . java to ensure correctness of device matching logic in the schema region
[ 3.0 ] add tryinvoke ( ) method to metricseventbus to handle metric event error
added a new class ` EigenvectorCentralityBuilder ` and modified ` EigenvectorCentrality . java ` to
updated multiple Java files to use a random port instead of a hardcoded registry port to improve flexibility and maintainability of the code
refactor GeometryGenerator to use new buffer creation methods for geometry data and vertex colors to improve code readability and maintainability by reducing red
set the amplifier to 0 in BlockEntityBeacon . java to disable the amplifier for non - beacon entities
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable http client health check by default
updated the group list type from ` List < Class > ` to ` List < Class < ? > > ` and added validation for group interfaces
added ` @ key headful ` and ` @ run main / timeout = 500 ` annotations to the ` bug8057791 ` class
make the scheduler daemon to allow speedment application to exit via main method completion
update version parsing logic in ItemLexicon . java to simplify version parsing to improve readability and maintainability of the code
added a call to ` ReflectionCheckLinker . checkReflectionAccess ( type ) ` in ` JavaAdapterFactory . java ` to ensure proper
( chore ) camel - mina : add lazysessioncreation = true to test method name
updated the ` initIOContext ` method in ` CombineHiveRecordReader ` and ` RCFileRecordReader ` classes to include a `
deleted ` ClassLoaderHolder ` and ` LoaderManager ` classes , and refactored ` VerticleManager ` to directly use ` getCurrentClassLoader (
added a new method ` configurationChanged ` to ` FileStore ` and modified root removal logic in ` JavaLanguageServer ` and ` ScanClassPath
added error handling around session callback registration and unregistering in PackageInstallerCompatVL . java to improve stability by preventing application crashes
updated index paths in TestBackwardsCompatibility . java from " src / test / org / apache / lucene / index / index . c
refactor AkkaRpcServiceUtils to use a factory method for creating AkkaRpcService to improve code readability and maintainability
added retry logic to set the maximum number of attempts in TestExportSnapshot to allow for more robust failure scenarios during mapreduce operations
pdfbox - 4892 : use metrics . getencodingscheme ( ) . equals ( " FontSpecific " ) instead of afmStandard
added a new test class ` SslConnectionTest ` to validate SSL connection behavior to ensure that the SSL connection is properly closed before fill in the
added validation for address and family types in InetAddress and NetworkInterface classes to ensure that only valid IPv4 and IPv6 addresses are processed , improving
added a test for JSON serialization in a collection of dates in DefaultTypeAdaptersTest . java to ensure correct JSON representation of dates in different locales
refactor Message class to improve code readability to enhance maintainability and facilitate future updates
added debug logging and modified condition for handling SQL generation in PutDatabaseRecord . java to improve debugging clarity and ensure proper handling of SQL generation
updated loop condition from ` ( maxWidth + 2 ) ` to ` maxWidth - runningWidth ` in ` TableOutput . java ` to correct the
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a priority setting for format string parameters based on used values in FormatStringChecker . java to ensure correct formatting priority based on used values and
[ java ] ignore non - final loop variable in a for - each statement .
added PDF writer version and full compression settings in PDFExporter . java and updated test file path in PDFExporterTest . java to ensure compatibility with
added unit tests for the LdapUserDetailsMapper class to ensure correct mapping of role attributes to granted authorities
add ldap . read . timeout config to configure ldap connection timeout
refactor TestDescription class to improve code structure to enhance maintainability and readability of the test code
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
replaced the ` shouldCacheIterator ` boolean with ` shouldAvoidAllocation ` across multiple classes to simplify the code and improve clarity by
added a condition to check if the state handler is invalidated in the gesture state check to ensure that gesture handling does not proceed when the state handler
updated the calculation of mMaxDistanceForFolderCreation and mOverScrollPageIndex from 0.6 f to 0.55 f to improve
updated property handling in OciConfigConfigSource to use ConfigProviderResolver instead of ConfigProvider to improve clarity and maintainability of property resolution
refactor Testjsig class to improve code structure to enhance maintainability and readability of the test code
fix the mana tablet and ring mana not use stack . getcount ( ) .
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added @ SuppressWarnings ( " serial " ) annotation to P11TlsPrfGenerator . java to suppress warnings related to serialization issues
refactor validation logic for TsFile validation and improve error handling in DataRegion . java to enhance clarity and maintainability of the validation logic
added two new classes ` Switch21 ` and ` Switch19 ` to handle switch statements with matching , null , and guard patterns to enhance functionality
updated error message formatting in ComparableSubjectTest . java for clarity to improve readability of error messages for better debugging
fix ( openxml4j ) : set standalone flag for xml content in streamhelper
updated array size validation and improved error message formatting in Int2ObjectCache . java to enhance robustness and clarity in error reporting
removed sorting of security filter chains and webSecurityCustomizers in WebSecurityConfiguration . java and added tests in WebSecurityConfigurationTests . java to
removed the ` TimeInForce . GTC ` parameter from the ` OrderType ` parameter in ` BinanceTradeService . java ` to
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer instead of LongRangeRandomizer and update its implementation to improve code clarity and
updated KEY _ SEP character from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure proper
( chore ) camel - jms : add support for get component documentation and parameter json schema
added error handling for bound retrieval in SourceUtils and created corresponding test cases in TestGetBound to improve robustness of bound retrieval and ensure correct
refactor the creation of FilterPredicateLeafBuilder to use a dedicated method for handling Parquet types to improve code readability and maintainability by
refactor artifact name handling in BatchPropertyBeanPostProcessor and add setup and teardown methods in JobContextFactoryBeanTests and StepContextFactoryBeanTests to
added a loop to read the certificate and log the serial number in the server key to improve certificate processing and facilitate debugging
refactor DNS fallback logic in mmm Config . java and add a new DnsFallback . java file for testing to improve handling of DNS fallback
ww - 4071 throw the exception when unable to write a tag
changed the type of the ` success ` field from ` boolean ` to ` String ` and updated related JSON properties in ` DepositAddress
refactor the drop method in WindowsSecurity . java to use a lambda expression to improve code readability and ensure proper resource management
removed " address " from the scopes in CommonOAuth2Provider and related tests to simplify the OAuth2 provider configuration by removing unnecessary scopes
refactor the submit method to use a Start class for managing the started state to improve code readability and ensure proper synchronization during selector updates
added big decimal constants for hue and saturation in WLedHandler and updated request handling in WLedBindingConstants and WLedHandler to improve precision
replaced the method ` isValidCaller ` with a static final set of valid caller names to improve code readability and maintainability by using a
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to provide a way to handle JSR instructions in the
added a TransactionManager parameter to the SubscriptionActivatingSubscriber constructor and modified its handling in a transaction - based manner to improve transaction management and ensure
refactor DBMSProcessor to use prepared statements for updating and inserting data to improve data management and error handling during database operations
removed elevation setting for the contact view based on the Android SDK version to ensure consistent elevation behavior across different Android versions
rename ` typeInformation ` to ` identifier ` in the ` Identifier ` class to improve clarity by using a more descriptive variable name
added security checks using AccessController for file reading and writing in SandboxFileManager . java to enhance security by ensuring privileged actions are performed on
updated GroovyParserVisitor , GroovyPrinter , G . java , GroovyParserVisitor , G . java , GroovyPrinter . java , GroovyPrinter .
updated warning message to include class name and message in MetaDataFetcher . java to improve clarity of warning messages for better debugging
updated character reading and compression logic in RecordInputStream , UnicodeString , and HSSFWorkbook classes to improve data handling accuracy and correctness in
added a new test method ` downloadsFileWithNorwayCharactersInName ` to validate the functionality of downloading files with Norway characters
replaced ` RuntimeException ` with ` CancellationException ` and added cancellation checks in ` AsyncResource ` and ` FingerprintScannerSample ` to improve
added null check for statistics before processing cache to avoid potential NullPointerException when statistics is not initialized
added a new test method for removing objects from an explicit collection in MongoTemplateTests . java to ensure proper functionality of the remove method in the
updated copyright year from 2015 to 2022 in multiple Java files to reflect the latest copyright and ensure consistency across the project
[ beam - 10670 ] fix line break in coder . tostring ( )
added functionality to manage the state of the Clear All button in RecentsView and refactored scrolling logic in PagedView to improve
refactor HiveIcebergMetaHook to use a unified COMMON _ HMS _ PROPERTIES map for parameter handling to improve code maintainability
refactor error handling to utilize a new method ` isAddressInUse ` for better clarity to improve code readability and maintainability by
added a command - line argument to set the test class path in TestNestmateAttr . java to ensure the test class path is
updated logging method to use verbose _ schema instead of verbose to improve clarity and consistency in logging output
remove unused import and add miss @ override
# 119 - enh : add support for nested use savepoint ( # 119 )
replaced ` fetchSize ` with a ` ThreadLocal < Integer > ` for thread - safe access in ` QueryProcessExecutor ` to improve
[ java ] use no - op idle strategy for embedded ping pong .
refactor call handling in HttpClientIntroductionAdvice to use a separate method for handling blocking calls to improve code readability and maintain
added HDP _ VERSION handling in SliderAppsViewControllerImpl . java to set the HDP _ VERSION system property based on configurations
added private fields for loaderClass , jusl , and loader , and modified close methods in JavacProcessingEnvironment . java to improve
added DeepCloner to facilitate deep cloning of parameters in ParameterizedRobolectricTestRunner and created a new DeepCl
added a bind for JETTY _ SHOW _ STACKTRACE to false in ResourceBase . java to disable stack trace display for debugging purposes
added type checking for the object in NativeObject . java to ensure proper handling of OBJECT type in the code
replaced instances of ` sun . jvm . hotspot . types . OopField ` with ` OopField ` and updated imports to
updated JwkKeyListView to register type adapters for RSAPublicKey and ECPublicKey and added Base64 encoding for public keys to enhance
[ gr - 23254 ] do n ' t spawn isolates if useonlywritablebootimageheap be true .
refactor MBeanServerMXBeanUnsupportedTest to improve test coverage to enhance reliability of MBeanServerMXBean functionality
removed unused import of OrderClassLoaders in MavenPluginCollector . java to clean up the code and improve readability
replaced the ` Validator ( ) ` method with ` getOwnerAddress ( ) ` in multiple actuator classes and added the ` getOwnerAddress (
http : / / issues . apache . org / jira / browse / amq - 61613 / amq - 616
updated ZCOUNT , ZRANGEBYSCORE , and ZREVRANGEBYSCORE methods to include minimum and maximum values for min and max to
added handling for empty indices in ProtobufAnnotationSerializer to ensure proper serialization of edges with empty indices
[ java ] remove the correlationId from the set before remove it from the asyncCommandIdSet in ClientConductor and DriverEventsAdapter to
added saveConflict calls in FileDataStorageManager , FileDownloader , and FileUploader to ensure file conflicts are only saved when the file is
added generic type parameters to the ` map ` and ` entrySet ` methods in ` ExecutionContext ` , ` AbstractMethodInvokingDelegator `
replaced ` StrUtils . splitFileNames ( ) ` with ` splitFileNames ( ) ` in multiple filter factory classes to streamline
added conditional checks for Oracle and MySQL driver in DatabaseFactory . java to enable remarks reporting and useInformationSchema based on the driver type
added a handler parameter to the MockMethodInterceptor constructor and suppressed the deprecation warning in PartialMockingWithConstructorUsingEasyMockTest to enhance
updated timing calculations in FileChangedExclusiveReadLockStrategy . java to use current time instead of creating a new Date object to improve accuracy of time
[ hotfix ] [ table ] use context . wrapclassloader ( ) instead of new environmentinstance ( )
added buffer change handling in TerminalTextViewOverlay to ensure terminal text view scrolls correctly based on new buffer dimensions
added a condition to check if the pid does not contain a dot before processing the configuration file to ensure that the configuration file name does not contain
refactor freeze operation handling to differentiate between v2 and v2 to improve clarity and maintainability of the freeze operation logic
added an ` INSECURE ` property and its getter / setter in ` TlsConfig ` , and modified ` TlsUtils ` to
refactor JavadocTool to use a local variable for the source path before searching sub packages to improve code readability and maintainability by reducing
updated the handling of nodeColumns and edgeColumns in ExporterGDF to use edgeColumns instead of nodeColumns and added a new edgeId
added cascade to the @ OneToOne annotation in DefaultUserInfo . java to ensure that all associations are persisted to the database
refactor ` equals ` and ` hashCode ` methods to use ` Arrays . equals ` instead of ` getMessageId ( ) . hashCode ` to
updated the test to use Unicode characters for ISO - 8859 - 1 in the response body to ensure proper handling of Unicode characters in the response
[ hotfix ] remove unused iskeyserializertypevariablesized method from rocksdbserializedcompositekeybuilder
added a method to check static permissions in ProtectionDomain and updated SubjectDomainCombiner to use it to improve flexibility in handling static permissions
added null check for recipe in RecipeHandlerBrewery , RecipeHandlerElvenTrade , and modified formatting in CachedFloatingFlow
refactor parsing logic in Parser . java to improve readability and maintainability to enhance code clarity and ensure proper parsing logic
added a ` showConnectionErrorPopup ` method to handle ` UnknownHostException ` in ` UploadMediaDetailFragment ` and ` UploadMediaDetailsContract ` to
added a new file ` Issue596 . java ` and modified ` Status . java ` and ` HttpHandlerImpl . java ` to check
updated bitwise operation in NodeBitMap . java to use long syntax to improve code readability and prevent potential overflow issues
refactor ImportLayoutStyle class to improve code readability to enhance maintainability and facilitate future updates
updated ConsoleUIService to utilize terminal profile and minimum tty configuration to enhance flexibility in handling input from stdin based on system console settings
replace mocking AccountManagerCallback with a TestAccountManagerCallback and simplify assertions in ShadowAccountManagerTest . java to improve test clarity and
fix analysistype . getenclosingtype ( ) to always return the correct enclosingtype
renamed methods from ` getEntry ` to ` entries ` and ` concatSeparator ` and ` concatSuffix ` in ` Pairs ` classes to
removed the timeout parameter from the set method call in PutAllCallable . java to simplify the method call by eliminating unnecessary timeout
[ issue # 2696 ] fix npe in mqclientinstance # registerconsumer ( # 2697 )
[ java ] do n ' t generate source identity if the source address be empty .
added a new file ` TopTabAction . java ` that implements a toolbar presenter for the top - tab to provide a toolbar for the top
camel - 14850 : dynamicrouter should use reactiveexecutor instead of servicehelper . startservice ( ) to start the dynamic router service
updated import statements and class inheritance in AggregateItemReaderTests . java to improve code clarity and maintainability by using JUnit 4 annotations
updated the generic type parameter in the Procedure constructor in AbstractObjectValueTypeMap . java to improve type safety and clarity in object initialization
added functionality to display the number of edits for a user in AchievementActivity and updated URLs in NetworkingModule and OkHttpJsonApi
added a validation check for the length parameter in OfflineSorter . java to ensure the length is within the valid range of Short . MAX _ VALUE
added a new ` absoluteValueAccumulator ` instance and updated conditions for handling bug accumulation to improve accuracy of bug reporting and ensure accurate tracking of
refactor multiple dataset classes to improve code organization to enhance maintainability and readability of the codebase
updated InvalidTopologyTemplateException to include acceptable credential types to improve error reporting for invalid credential types
updated random number generation for vector elements in TestVectorUtil . java to ensure consistent random value generation across different vectors
change return type of compareBy method from int to long and simplify date comparison logic to improve performance and clarity of date comparison logic
added SSL property retrieval and modified sendBufferSize initialization in TestUtil . java , and modified test assertions in PGPropertyTest . java to enable secure
danielwagnerhall : enable safebrowsing on window and mac , and add unit tests for file download functionality
added null checks before cloning oldFlightConfiguration in BaseMotorMount and RecoveryDevice classes to avoid potential NullPointerExceptions during configuration updates
added a condition to check if transcoding is disabled in DLNAResource . java to ensure proper handling of transcoding settings based on configuration
added a check for empty lists in DataTable and modified TableDiffer to handle empty lists to ensure proper handling of empty lists and improve error handling
added a custom ignore tag to the RobustJavaMethodParser to prevent parsing of native code that starts with the CustomIgnoreTag
camel - 16400 : camel - optimisticlocking - throw optimisticlockedexception instead of runtimeexception .
add a new class ` ParentConfigProperties ` and modify ` BeanDefinitionInjectProcessor ` to utilize it for configuration properties to enhance flexibility
updated PreferencesActivity to extend LimitlessIDEActivity instead of IDEActivity and added padding adjustments to improve UI responsiveness and ensure proper
deleted the ClusterNodeInfo class from the codebase to the functionality is no longer needed in the codebase
removed unnecessary whitespace in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output statements for ciphersuite selection in ServerHandshaker . java to improve debugging visibility for ciphersuites being used during handshake
refactor template handling in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle single templates more gracefully to improve user experience by ensuring
added a nodeLabelMap to handle duplicate node IDs and labels in ImportContainerImpl to improve error handling for node existence during import operations
added a new file R2303044ListSelection . java that implements a list selection functionality to demonstrate the use of List
[ java ] remove the registrationid from the publicationregistration since it be n ' t need .
added a null check for mWorkspace in Launcher . java to prevent potential NullPointerExceptions when mWorkspace is not initialized
added a new test method ` testCompoundPropertyTwice ` to the ` StepScopePlaceholderIntegrationTests ` class to ensure that compound properties are
hive - 15836 : statsrulesprocfactory . computenewrowcount should use the parent row count instead of the parent row count
added path URL formatting and updated parameter handling in SpringBootDocBuildTemplate . java to improve URL handling and ensure proper configuration parameters are set
replaced static logger initialization with static final logger in GuiActivator , NotificationManager , NotificationServiceImpl , and SystrayActivator
replaced ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and modified the ` createBuildEngineDelegate ` method to
updated RuntimeException message to include JSON parsing errors to improve error reporting for JSON parsing failures
added a DEBUG flag to the logging statement in WidgetsModel . java to control logging behavior for debugging purposes
refactor Console and Scanner classes for improved readability to enhance maintainability and clarity of the codebase
updated the calculation of ` numTerms ` in ` SimilarityBase ` and added a test for displacement overlaps in ` TestSimilarity
added checks for the " send " method in SimpleMailMessage and MimeMessage classes to ensure that the send method is only called when the expected
added new exit and quit methods to Global . java and removed it from ScriptingFunctions . java to streamline the code by eliminating
refactor application context initialization and closure in LoanBrokerSharkDetectorDemo . java to improve code readability and maintainability by using a
renamed methods from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method naming
fix the issue that vmwarecontext . getservicecookie ( ) can return null . patch by jbellis
updated assertions in ResinAcegiAuthenticatorTests . java to reflect the correct authority order to ensure correct assertions are executed for the correct role
updated ByteUtil . bigIntegerToBytes calls to include a parameter of 32 to ensure compatibility with larger key sizes
updated system property key from " fml . disabledMods " to " fml . modStates " to accurately reflect the mod state
refactor account selection handling and dialog handling in ReceiveExternalFilesActivity . java to improve clarity and maintainability of account selection state management
updated error message in CollectSink to include host IP and port to improve clarity of error reporting for better debugging
added a check for empty results in ValidatorContractController and implemented a test for it in ValidatorContractControllerTest to ensure that an exception is thrown
replaced direct JSON parsing with a root variable for better readability to improve code clarity and prevent potential null pointer exceptions
removed redundant null checks for datasource and datasourceJNDI in PooledConnection . java to streamline code by eliminating unnecessary checks
increased the target memory allocation and count calculations in TestRefprocSanity . java from 10 MB to 1 MB and increased the window
added null checks for currentConsole before writing bytes to avoid potential NullPointerExceptions when currentConsole is not initialized
added credential refresh delay setting in KinesisConfigUtil . java to improve resource management during Kinesis operations
replaced AlertDialog instances with a dedicated showInfoAlert method for better clarity to improve code readability and maintainability by centralizing alert
added a ` - pack ` argument to the ` test ` method in ` T4501661 . java ` to enable the test to
updated jetty version from 1.7 . 0 _ 60 to 1.8 . 0 _ 31 in ModulesTest . java and TestBad
updated import statements and added a check for dependency dependencies in PluginBundleManager . java to improve code clarity and ensure dependencies are only added when
added support for closing ZipFileInputStream instances in the releaseInflater method to ensure proper resource management and prevent memory leaks
corrected the spelling of " DATAMATRIX " to " DATA _ MATRIX " across multiple files to ensure consistency and accuracy
added methods to run active and idle states based on keyRanges in SequenceGeneratorSource . java to improve synchronization and control over the execution flow of
[ hotfix ] fix typo in blobserver . getcurrentactiveconnections ( )
replaced ` findAny ( ) ` and ` findAny ( ) ` with ` findFirst ( ) ` and ` getAnnotations ( Class < T
added support for " ppc64 " and " ppc64le " architectures in Bits . java and ByteArrayAccess . java to
updated the RuntimeException message in RoboMonitoringInstrumentation . java to include a link to the pull request to provide clearer context for activity resolution
replaced COMMIT _ TIMEOUT _ MINUTES with Long . MAX _ VALUE and ROLLBACK _ TIMEOUT _ MINUTES in waitWithDeadline
replaced instances of ` new Date ( ) ` and ` OffsetDateTime . now ( ) ` with ` Instant . now ( ) ` and
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a toast message to indicate that YouTube Player does not work on Lollipop yet to inform users that the YouTube Player is
added validation for SQL parsing positions in mmm Parser . java and mmm StatementTest . java to ensure proper parsing error handling for unterminated
added a null check for mVibrator before checking its vibration duration to avoid potential NullPointerException when mVibrator is not
updated table border and background color handling in DotRenderer . java and added arrow head and tail based on foreign key column type to improve visual consistency
added a method to check if a configuration variable is encoded in HiveConf . java to ensure proper decoding of encoded parameters in the Hive configuration
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
refactor X509Certificate class to improve code readability to enhance maintainability and facilitate future updates
fix default uri implementation ( # 3903 )
refactor ImageView and TimeLineCursorAdapter to utilize NetworkedCacheableImageView for loading images to improve image loading efficiency and performance
removed unnecessary parameters from LauncherAnimUtils . ofFloat calls across multiple classes to simplify the code and improve readability by eliminating unnecessary
updated the version string for controllers in DependencyBank . java and modified related controllers references in BuildScriptHelper . java and DependencyBank . java to
refactor LaunchedURLClassLoader to improve code readability to enhance maintainability and facilitate future updates
updated DataSourceHealthIndicator to use DataAccessUtils for query handling to ensure correct result set column count is used for the query
add cache - control and pragma header for no - cache in layouttag
updated warnMsg format to use Locale . ENGLISH to ensure consistent formatting across different locales
modified the constructor of SolrQueryParser to include an Analyzer parameter to enhance flexibility in query parsing by allowing custom analyzer configurations
updated copyright year from 2016 to 2017 in multiple Java files to reflect the latest copyright year for better clarity and maintainability
removed an unnecessary semicolon in MainTest . java to clean up the code and improve readability
refactor TypeContributions class to improve code structure to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper handling of VoidColumnVector instances in batch processing
[ iotdb - 4892 ] fix typo in statementgenerator . java ( # 4893 )
removed the isTypeMatch method from AbstractConfig . java to simplify the configuration addition process
[ java ] reset the timestamp and reset the message buffer when offer a message to the publication .
renamed methods ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll `
do n ' t generate bootstrap static block if there be no @ nobootstrap
hbase - 15836 tabledescriptorchecker . maxfilesize and tabledescriptorchecker . memstoreflushsize should use tabledescriptorbuilder . max
updated commit handling logic in BranchGraphServlet . java to use requestedCommits instead of maxCommits to improve clarity and correctness of commit count
updated method signatures in ` bug6794831 . java ` to include ` InvocationTargetException ` to improve error handling by ensuring proper invocation of runnable
added a new constant BUILD _ ID and refactored metadata handling in CachingBuildEngine to improve code clarity and maintainability by central
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed duplicate call to markAsDone in HttpProtocol . java to streamline code by eliminating redundancy
added import for TezConfiguration and defined a default configuration in TezConfigurationFactory . java to facilitate configuration management in the T
added a null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is not initialized
modified the conditional check for mIsVisible in CustomPlaybackOverlayFragment . java to ensure proper handling of visibility state in the fragment
added a null check for recentSounds and implemented a forget method to reset the most recent sound to null to improve stability by preventing
added position discontinuity handling in SimpleBasePlayer and created a test for it in SimpleBasePlayerTest to ensure proper handling of dis
added decimal formatting and number tick units to NumberAxis . java to improve precision and precision of number representation
refactor TargetGraphAndBuildTargets to use the builder pattern instead of creating a new instance to improve code readability and maintainability by redu
removed the IndexFileNameFilter class and updated conditions in IndexFileDeleter , IndexWriter , and SegmentInfo classes to simplify the code and improve
add hook to check the entire entity ' s collision bound box for ladders instead of just the block they are in .
added a compression level parameter to several methods in ApkBuilder and SignedJarBuilder classes to allow dynamic adjustment of the output compression level based on
added a new test method ` shouldIncludeStaticFields ` to the ` MirrorTest ` class to ensure that static fields are included in the
added support for BYTES data type in FieldSpec and MetricFieldSpec and implemented corresponding methods in Schema , SingleValueIterator , and SingleValueSet
updated string construction and error message formatting in multiple test files to improve readability and maintain consistency in error reporting
replaced direct calls to ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java `
added cache management tests and cache management in SpringDataJPAJoinFetchPaginationTest . java and ForumService . java to enhance cache management
updated PronunciationModel and MaryProperties to use locale - specific filenames and properties to ensure correct filename retrieval based on the current locale
added a null post body handling in SimpleHttp and created a test for it in TestHttpPlugin to ensure proper handling of empty POST requests and
added a dispatcher to the ClientSideSlb class and modified the shutdownNow method in ClientSideSlbTest to ensure proper shutdown of the
modified the calculation of the texture height based on the flip direction to ensure correct texture height is applied based on the flip direction
update defaultdiscoveryservice to throw invalidconfigurationexception instead of hazelcastexception
added a null check for contextPath in MetricsPublisher . java to ensure contextPath is initialized to " NA " to avoid potential NullPointerExceptions
[ drools - 5892 ] remove defined type from kie project class loader ( # 5893 )
added a new byte field ` B _ TREE _ MAP _ ROOT _ HEADER ` and validation in ` BTreeMap . java ` to
added support for ` prefix _ header ` and ` precompiled _ header ` arguments in the ` AbstractCxxSourceRuleFactory ` class to
replaced ` WeakReference ` with ` AccWeakReference ` and added security checks for image updates to enhance security by ensuring privileged actions
changed access modifier of ` findNextIndex ` method and modified the removal logic in ` OrderedMap ` and ` OrderedSet ` classes to enhance encaps
changed the initialization of isDirect from true to false in VertexBufferObject . java to ensure that the isDirect variable reflects the intended state
removed redundant return statement for retrieving audio effect help text to streamline code by eliminating unnecessary duplication
modified the return type of ` localToAscendantCoordinates ` and ` localToDescendantCoordinates ` methods from ` void ` to ` Vector
pdfbox - 5764 : use limit instead of capacity , a suggest by valerybokov
added a null check for the context before removing the close hook to avoid potential NullPointerExceptions when context is not initialized
updated border spacing calculations in CellLayout and DeviceProfile to use folderCellLayoutBorderSpacingPx instead of cellLayoutBorderSpacingPx to improve layout
replaced NumberFormat . getInstance ( Locale . US ) . parse ( ) with ValueNumeric . of ( Locale . US , String , Number )
added a check to return a deferred authentication if the response is not a deferred to ensure proper handling of deferred authentication scenarios in the login process
updated command - line argument checks from " -- module - startd - ini = " and " -- module - start - ini = " to
added a default partition value to the dynamic part values in DynamicPartitionFileRecordWriterContainer to ensure the correct partition value is used when no partition
[ hotfix ] [ runtime ] fix npe in streamnode and streamgraph
updated string concatenation in DefaultArtifact . java to use hasClassifier ( ) for better clarity to improve readability and maintainability of the code
( chore ) camel - kafka : add unit test for offset rebalance
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to provide clearer feedback when dependencies are missing
updated the configuration key from " GMAIL _ NOTIFICATIONS _ ENABLED " to " ENABLE _ GMAIL _ NOTIFICATIONS " to
doc : generate sample code in the proto file for cryptokey ( # 118 )
updated expected message count in LumberjackMultiThreadTest to use a configurable concurrency level to improve test flexibility by allowing more than 4
do n ' t try to get player display name if the player be dead
refactor Exchange class to improve code readability to enhance maintainability and facilitate future updates
apikey and secretkey parameter must be specify with apiKey , not with secretKey .
replaced switch - case statements with if - else statements in MfaProvider , JdbcMfaProviderProvisioning , and SamlServiceProviderConfiguratorTest
refactor AbstractMetaDataExportMojo to improve code organization to enhance maintainability and readability of metadata export functionality
added error handling for SQLIntegrityConstraintViolationException in Hive . java to ensure that tables are not used by materialized views before dropping them to
changed the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to align the property name with
added a new class ` RoboExecutorService ` in the ` org . robolectric . android . util . concurrent ` package to provide
added conditions to check if the group is a root group before adding subgroups in the menu to ensure that subgroups are only added when the
changed method name from ` buildServiceNameAndSpanName ` to ` buildServiceAndSpanName ` and modified the condition to check if the path
updated the process builder construction and exit value verification in TestDynamicNumberOfGCThreads . java to improve clarity and functionality of the process
replaced ` ImmutableFlavor ` with ` Flavor ` and updated related methods in ` CxxPlatforms ` and ` KnownBuildRule
refactor CreateTable and CreateTableDeParser to utilize PlainSelect for retrieving create and table options to improve code clarity and maintainability
added alpha setting for the background color drawable in ChatViewerFragment to enhance the visual appearance of the chat view
test : migrate ctiteratortest to junit 5 ( # 4358 )
added clear ( ) methods to CharTokenizer , KeywordTokenizer , Tokenizer , TokenStream , Tokenizer , and StandardTokenizer classes to ensure proper resource management
add test to make sure astinitializer do n ' t crash on block statement
updated type parameters in StateMachineConfiguration and StateMachineFactoryConfiguration classes to use specific type parameters and added validation for missing configurers to improve
danielwagnerhall : do n ' t try to find a locator that start with ` ` link = ' ' ,
updated StringConverter to set minimum and maximum fraction digits based on type for Double and Float values to ensure proper handling of floating - point values and
remove managedaggregates instance from aggregatelifecyclelistener . getcurrentscope ( ) since it be not need
updated touchable insets in TaskbarDragLayerController to use a region instead of content to improve layout responsiveness for better user experience
removed redundant check for ' ~ ' in FencedCodeBlockParser . java to streamline code by eliminating unnecessary checks
added support for a socket timeout property in multiple classes to allow configurable timeout values for socket operations
added a sleep duration of 500 milliseconds in ElementAttributeTest . java to ensure proper handling of interruptions during test execution
added UTF - 8 encoding to the InputStreamReader in HttpUtils . java to ensure proper handling of character encoding in the input stream
refactor List class implementation to improve code readability and maintainability
added constructors to AsyncFileImpl for URI paths and updated error handling in AsyncFileImplTest to improve error handling consistency and provide clearer context
add @ API ( status = API . Status . STABLE ) annotation to CucumberEngineExecutionContext and CucumberTestEngine to
fix npe in listvspdomaintemplates command when there be no vsp device on the physical network
renamed ` retryUploads ` method to ` retryFailedUploads ` and updated its logic to handle failed uploads more accurately to improve clarity
updated classFileVersionJava8 and classFileVersionJava9 to use classFileVersionJava9 instead of JAVA _ VERSION to ensure compatibility with the latest Java
refactor error and warning handling in the Compiler class to improve readability and maintainability of the code
add a new method ` removeAllHeaders ( ) ` to ` AsyncHttpClient ` that clears the ` clientHeaderMap ` to provide a way to
replaced Vector with ArrayList for storing file names and removed unnecessary type casting to simplify code and improve readability
changed the default grid column from 4.0 f to 3.0 f in AppPreferencesImpl . java to adjust the default grid column for
added a condition to check if the table is not defined in CalcitePlanner . java to ensure that the planner only processes table definitions when
updated datePattern construction and assertion logic in TestHS2HttpServer . java to improve clarity and correctness of date validation logic
added error handling when retrieving an object from the reflection to ensure robustness by preventing potential runtime exceptions during object conversion
danielwagnerhall : test should be able to access page with an insecure ssl certificate
replaced ` byteOffset + = BYTE _ BLOCK _ SIZE ` with ` Math . addExact ( byteOffset , BYTE _ BLOCK _ SIZE
do n ' t use static field for firstencoder and secondencoder in interactionvalueencoder
added error handling to the TcpTransport class to ensure proper termination of the stoppedLatch when an unexpected error occurs
added @ SuppressWarnings ( " serial " ) annotation to PApplet . java to suppress warnings related to serialization issues
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from ` OcamlDebug
show save and discard change prompt and return to main window
added response type validation and authorization checks in OAuth20DeviceCodeResponseTypeRequestValidator and improved error logging in OAuth20AccessTokenEndpointController to
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to ensure the index is valid before proceed
updated the ` initTableMapperJob ` method signatures to include an additional ` inputFormatClass ` parameter to enhance flexibility by allowing custom input
replaced the append method call for jrubyClasspath with a direct assignment to testClasspathElements to streamline the code by eliminating unnecessary
sulong : throw an exception if a language be not find or access to an internal language .
added deprecated functionality for configuring reserve commit duration in ReplicationHandler to ensure compatibility with Solr 7.1 and warn users when using master . reserve
renamed ` cacheVariableName ` to ` cacheForeignKey ` and updated related references in ` DIHCacheSupport . java ` to improve clarity
changed the data type of the ` generateECKeyPair ` method and related methods from ` long [ ] ` to ` Object [ ] ` to
[ hotfix ] [ runtime ] support suspend with job in cancellation state
replaced the static instance of ` RotationTouchHelper ` with a singleton instance of ` RotationTouchHelper ` to improve memory management and
refactor code to streamline port table and override handling in UniFiControllerCache . java to improve code readability and maintainability
updated method parameters from ' lwp _ id ' to ' unique _ thread _ id ' in BsdDebugger and BsdDebuggerLocal classes
remove old offer from the offer book if it have be add to the list
use constant instead of hardcoded string for tl 1.3
updated mock handling in MockitoMethodInvocationControl and SystemClassUserTest to use ` doReturn ( ) ` instead of ` when ( )
replaced instances of ` DatabaseObject ` with ` PartialDatabaseObject ` in multiple exception classes to improve clarity and consistency in exception handling
replaced the import of DisplayUtils with a direct call to putExtra for the file extra to streamline the code by eliminating unnecessary
added error handling and initialization methods in StoreDirect and StoreWAL classes to ensure proper resource management and avoid resource leaks during compaction failures
updated the task snapshot handling in AbsSwipeUpHandler . java and removed unnecessary calls to stopSwipePipToHome in SystemUiProxy
added a hidden property to the CommandArgumentDefinition class and updated LiquibaseCommandLine to utilize it to enhance command argument management by allowing
[ hotfix ] [ test ] fix port number in loggingkafkaproducertest
[ geos - 8470 ] use geoserver . sld instead of geoserverdatadirectory . parsedsld ( )
added permission checks for launcher activities and modified the completeAddShortcut method to include PendingRequestArgs for creating shortcuts to enhance security by preventing mal
added ` getId ( ) ` and ` setId ( ) ` methods to ` TiledMapTile ` , ` AnimatedTiledMapTile
refactor Manager class to improve code readability to enhance maintainability and facilitate future updates
updated JDBCExample . java and SessionExample . java to include version V _ 0 _ 13 in connection string to ensure compatibility with the latest JDBC
added schemas and includeSchema properties and modified diffOutputControl initialization in LiquibaseGenerateChangeLogMojo . java to enhance schema generation
replaced ` putIfAbsent ` with ` put ` for registry caching in ` JmxRegistry . java ` to improve performance by eliminating unnecessary
[ hotfix ] [ benchmark ] add singlebenchmarkrunnerexception to plannerbenchmarkrunner
changed the visibility of the ` doPutRecord ` method from protected to package - private to restrict access to the method for better encapsulation
remove physical width and height from fileselectorfragment , since they be not need anymore .
added unit tests for handling large response content in FastCGIProxyServletTest to improve reliability and reliability of request handling in the Fast
added a call to start the ReadInteractionsService in MarkReadService to enable the reading functionality in the service
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are only logged when the
added configuration for SMTP server port in Email . java to allow dynamic configuration of the SMTP server port for testing purposes
retry sslfactory reloading in case of failure ( # 3745 )
updated the date format in ObjectMapperProvider from " yyyy - MM - dd ' T ' HH : mm ' Z ' " to " yyyy -
updated the assertion message in SpyingOnRealObjectsTest to clarify that the error is due to mocking a private class to improve
added functionality to control line ending with NL in InlineBoxing and LineBox classes to ensure proper handling of line endings in InlineBoxing
updated filePathString initialization to handle null paths to improve robustness by preventing potential NullPointerExceptions
removed unused import of DocCollection from TopicStream . java to clean up the code and improve readability
refactor input stream initialization in NinjaServletContextTest to use a new method for creating a ServletInputStream to improve code readability and maintain
updated properties in AbstractCasEndpointTests to include " management . endpoints . web . exposure . include = * " to enhance flexibility in
added a check to ensure the current graph is a dynamic graph to prevent runtime exceptions when the current graph is not a dynamic graph
log a debug message when bean of type ` ` disabled ' ' be disable
added support for suppressExceptions property in JsonPathExpression and related classes to enhance error handling by allowing exceptions to be suppressed during JSON path operations
removed duplicate call to ControllerLeaderLocator . create ( _ helixManager ) in HelixServerStarter . java to streamline the code
updated usage message from " Usage : java CLHSDB " to " Usage : clhsdb " and " Usage : hsdb " to
refactor ` configureChunkProvider ` method implementation in ` FaultTolerantStepFactoryBean ` and ` SimpleStepFactoryBean ` classes to
remove deprecate write class in favor of io . write
refactor ShadowAccessibilityManagerTest to use a single AccessibilityManager instance and update related tests to improve code clarity and maintainability by
add a sticky bot notification to the list of group ( # 3649 )
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` across multiple files to simplify class hierarchy and eliminate dependency on
refactor PostgreSQLEnumDataTypeHelper to use a singleton pattern and introduce a new helper class to improve code readability and maintainability by central
updated the expected log path in LogFileTests to use File . separatorChar for consistency to ensure consistent file path formatting across different operating systems
replaced instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple files to standardize the method
added support for dropping index tables in HiveMetaStoreClient to improve error handling for unsupported table operations
added visibility check before updating disabled flags in RecentsView to ensure actions view is disabled when the view is not visible
added a condition to set a specific highlighter based on the operating system to ensure compatibility with non - Windows environments and improve code readability
add support for optional local variable in cross - site scripting
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
simplified the removal of the capture listener in SelectBox . java to improve code readability and maintainability
changed the ` _ metaDataComplete ` variable from ` true ` to ` false ` to indicate that the metadata is no longer complete
refactor removeTaskTarget method to return void and modify bitmap size logic in ThumbnailSearchResultView and WorkEduView to improve task removal
added " PLATFORM " and " RELEASE " fields to JsBundleGenrule and corresponding tests in JsBundleGenruleDescriptionTest to
updated type casting logic in mmm Lower . java and added a new class T6500701 . java with a test method to ensure
added tests to verify crlfNewLines functionality in comments and Javadoc to ensure proper formatting of new line characters in import statements
added functionality to set the Liquibase HubMode in AbstractLiquibaseChangeLogMojo and AbstractLiquibaseM
removed null check for processedItem in JsrChunkProcessor . java to simplify the condition for better readability and maintainability
added a check for existence of the linkDb before adding it to the input path in IndexerMapReduce . java to ensure that the link
replaced manual reflection lookup with a direct method lookup for " setIndexerThreadPool " in IndexWriterConfig to simplify code and improve readability by
removed the " : 5000 " prefix from the address string in GameCanvasImplementation . java to simplify the address format for better readability
refactor MapJobExecutionDao to utilize a copy method for storing JobExecution instances to improve code readability and maintainability by reducing redundancy
added a new file ` DownloadTest . java ` to implement a GUI test for downloading PNG images to facilitate the testing of PNG
updated language handling in multiple classes to ensure consistent language normalization to improve code clarity and maintainability by using consistent language normalization
updated error handling in GenericUDFRound to use UDFArgumentTypeException instead of UDFArgumentException to improve clarity and consistency in error reporting for round
add null check for selectedVersion in ManageDependencies . java to prevent potential NullPointerException when selectedVersion is null
added multiple AntPathRequestMatcher for specific URLs in SecurityConfig . java to enhance security by allowing specific URLs to be matched
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
added a conditional check before writing bean definitions and improved type resolution logic in BeanDefinitionInjectProcessor . java to ensure bean definitions are only created
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to timing issues
[ openwebnet ] change openwebnet handler to use schedulewithfixeddelay ( ) instead of scheduleatFixedRate ( )
removed conditional check for socket status and simplified execution logic in AprEndpoint . java to streamline socket execution logic and improve code readability
deleted the SunToolkitSubclass . java file to the functionality is no longer needed in the project
updated translation handling in DefaultRenderableSorter and added a method to check for rotation or scaling in Matrix4 to improve the accuracy of rendering by
added a new test method ` registerWrapperHandlerBeforePrimitive ` to the ` TypeHandlerRegistryTest ` class to address issue # 165 and
added functionality to convert alternate color space to RGB images in PDSeparation . java to enhance image processing capabilities for alternate colorspace
replaced hardcoded URLs with BuildConfig constants in CommonsApplication and PageTitle classes to improve maintainability and ensure consistent configuration across the application
camel - 16400 : camel - health - add health check for http consumer health check
added null check for the block position before retrieving the tile entity to avoid potential NullPointerExceptions when accessing block state
added a new test method ` testAlterTableWithIndexesExtendPk ` in ` AlterTableWithViewsIT . java ` to verify the
replaced the initialization of ` offset ` with a direct reference to ` readerContext . docBase ` in ` FileFloatSource . java `
added a line to remove the DrillMongoConstants . ID from the fields map to ensure that the ID field is no longer used in the
added disposal methods to YeelightHandlerBase , DeviceBase , and WifiConnection classes to ensure proper resource management and state management
added AUTO _ INCREMENT support in the Parser and created a new table TEST _ 5 with primary key constraint ENGINE = InnoDb to ensure
fix sharedindexinformerfactory . getexistingsharedindexinformers ( ) to return the list of existing shared index informers
server : fix npe in updatetemplate ( ) when template be delete
refactor image handling in ShadowBitmapFactory to utilize RobolectricBufferedImage for better image management to improve code clarity and maintain
removed deprecated constants and constants from LauncherSettings . java to clean up the code and improve maintainability
[ drools - 4892 ] move example from broker data to broker / data
added a new variable ` legendTop ` and updated its assignment in ` PieChart . java ` to improve legend positioning by associating
added a condition to return early if the world transformation is zero to optimize performance by avoiding unnecessary processing when the world transformation is zero
added a new file MaryScriptCreator . java to facilitate the creation of Mary scripts based on input and output formats
nifi - 1746 : add restlistener . remote . source . host attribute to the flowfile in listenhttpservlet
refactor compactionLogger initialization and delete the compaction log file in LevelCompactionTsFileManagement . java to ensure proper resource management and avoid potential
updated the attribute key from " xlink : href " to " href " in ComponentDescription . java to ensure compatibility with the new protocol and
camel - 14263 : camel - aws2 - s3 : use s3 _ streaming _ upload _ timeout _ checker executor instead of
hbase - 15836 addendum make isclustershutdown ( ) public in servermanager
added null check for span before logging messages in Slf4jSpanLogger and DefaultTracer classes to enhance robustness by preventing potential NullPointerException
trim whitespace from the active option added to the configuration to ensure consistent option handling by removing leading and trailing spaces
added wallpaper depth effect preference handling in DepthController . java to allow dynamic wallpaper zoom settings based on user preferences
added an assertion to verify the success count of an overseer action in OverseerTest . java to ensure that the overseer
simplified the kernel version checking logic in LinuxFileStore . java to streamline the code for better readability and maintainability
refactor ExecConstants class for improved clarity to enhance maintainability and readability of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality for testing purposes
added a method to set scan attributes for paging in ScanUtil and invoked it in TableSnapshotResultIterator to enhance scan processing capabilities by allowing paging
updated the condition for setting ` lowRange ` in ` Request . java ` and ` RequestV2 . java ` to ensure ` lowRange
made keySizeEstimator and valueSizeEstimator protected and added debugCacheSize method in AsyncWriteCache and WriteCache classes to enhance encapsulation and
server : fix zoneid from uuid to zone uuid for host join
[ zeppelin - 4352 ] fix content - type header for livy interpreter ( # 4352 )
updated the removal logic in ZipFileSystemProvider to include zfs as a parameter to ensure proper removal of filesystems based on the specified zfs
rename the variable ` obj ` to ` json ` and update its usage in ` HttpRequestBuilder . java ` to improve clarity and consistency in
increased hard commit wait duration from 2 milliseconds to 5 milliseconds in SoftAutoCommitTest . java to allow for more time for commit operations
catch exception when call listener . beforeevent ( ) and listener . afterevent ( ) in selenidelogger .
refactor multiple dial - related classes to improve code organization to enhance maintainability and readability of the dial - related components
updated error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest version
updated the method in BootClassLoaderHook from getBootstrapPaths ( ) to getAdditionalBootstrapPaths ( ) and added a new TestHook class for testing
[ core ] fix patchy jar path for fmlclientlaunchprovider
[ hotfix ] [ yarn ] remove yarnclient dependency from yarnitcase
add miss map stats to localmapstatsprovider when no data be include
deleted the AllTests . java file to the test suite is no longer needed in the project
added character constants for non - breaking hyphens and zero - width space in AbstractWordConverter to enhance compatibility with Unicode characters for better user experience
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations do not star
updated the method call from ` getResultMappings ( ) ` to ` getResultMappingsForRowKey ( nestedResultMap ) ` to improve clarity
added a boolean flag ` eventHandled ` to the ` UIText ` class to indicate that the event has been handled
deleted the ` Controller . java ` file and renamed the ` Weldby ` class to ` WeldModule . java ` to streamline
added a boolean flag to monitor capture groups in empty check in TRegexBacktrackingNFAExecutorNode . java and modified group enter conditions in
added a protected variable ` liquibaseProLicenseKey ` to the ` AbstractLiquibaseMojo ` class to allow access
refactor measures hierarchy member reader setup to use a dedicated method to improve code readability and maintainability by reducing duplication
[ gr - 23233 ] add option to generate debug information .
mondrian : fix typo find by codespell on fossies . org
added support for adding FriendPaths in Kotlin configuration and related classes to enhance functionality by allowing users to specify absolute FriendPaths in
added aliases for BATAK , BRAH , and MAND , and refactored the main method in CheckScript . java to
updated equality checks in ExecutionCommand and StageUtils to use ` equals ` instead of ` = = ` for consistency to improve code readability and
refactor Mockito class to improve code readability to enhance maintainability and facilitate future development
refactor OCFile class to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the object for easier debugging and logging
pdfbox - 4892 : handle percentage , a suggest by valerybokov
added unit tests for the LocalIndex functionality in LocalIndexIT . java and implemented a reverse scan query in LocalIndexReverseScanIT . java
updated imports and method names in BaseAndroidTestCase . java and BackupHelperTest . java for consistency and clarity to improve code readability
updated message formatting to use getString method for better readability to improve maintainability and clarity of string resource usage
updated conditions in RendererUtilities and added new test cases in RendererUtilitiesTests to improve boundary checks and ensure correct calculation of live item boundaries
refactor KrakenStreamingAdapters to use ArrayNode for ask and bid data types instead of iterators to improve type safety and clarity in
added a try - catch block around the SQL execution in FileContentProvider . java to handle potential SQLite exceptions when adding a column twice
removed an error print statement from AsyncServletIOTest . java to clean up the code and improve readability
added hash table load factor calculation and refactored data size calculations in ConvertJoinMapJoin . java to improve accuracy of memory usage based on
updated the ` buildView ` method to accept a ` Context ` parameter and set background resources for selectable items to enhance flexibility by allowing custom
added a ` withAuthentication ` method to ` SecurityMockMvcResultMatchers ` and corresponding tests in ` SecurityMockMvcResultMatchersTests ` to
vpc : set vpcid to null when create gateway network
[ flink - 10955 ] [ test ] disable flinksavepointtest on 1.11
changed the access modifier of several fields from private to private in multiple classes to enhance encapsulation and improve code clarity
modified the loop condition in Actor . java to check for actions size before processing to improve performance by avoiding unnecessary decrement of actions size
updated the ` BitmexStreamingExchange ` class to extend ` BitmexExchange ` instead of ` BaseExchange ` to ensure compatibility with
[ ds - 3352 ] add test case for virtual relationship ( # 3353 )
added null checks for spatial in LodControl . java to ensure robustness by preventing potential NullPointerExceptions
updated conditional token filtering logic and added new test cases in multiple files to enhance functionality and improve test coverage for conditional token processing
replace graph . unique with graph . add for unsafe store and store field node .
replaced ` super . putAddress ( base + offset , value ) ` with ` io . putAddress ( base + offset , value )
added an assertion to verify the presence of events in the CasAuthenticationEventListenerTests to ensure that the event repository is not empty before proceeding
removed unused parameters ` attributeTemplateName ` and ` attributeLine ` from ` AuthenticationAttrProcessor . java ` to clean up the code and improve read
added null check for the specified key in MacOSXPreferences . java and created a new class RemoveNullKeyCheck . java to ensure that
added a method to set the Typeface in CodenameOneTextPaint to throw an exception if the typeface cannot be set in runtime
implemented the ` open ` method in ` AzurePinotFS ` , ` LocalPinotFS ` , and ` HadoopPinotFS `
danielwagnerhall : remove deprecate webdriverrunner # fail ( string )
simplified the conditional statement in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to use a boolean field for constructor mappings and simplify related logic to improve code readability and maintainability by reducing
updated SQL constraint creation in CreateTableGeneratorTest . java to include quotes to ensure correct SQL syntax for foreign key references in the schema
modify vectorization logic to handle filter mode correctly to ensure correct handling of boolean values in the vectorized query
updated the type of moveSelectorConfig in ExhaustiveSearchPhaseConfig . java to improve type safety and clarity in config inheritance
replace ReorganizeTableStatement with modifyDataTypeStatement in ModifyDataTypeChange . java to simplify the code by directly using modifyDataTypeStatement
updated cluster name handling in SystemPropertiesUtils , ConfigNode , and DataNode to use constants instead of string literals to improve code readability and
refactor connection handling to improve error logging and exception handling to enhance clarity of connection attempts and enhance error reporting for better debugging
added logic to convert style strings from strings to style objects in Nano . java to enhance styling functionality based on user - defined styles
updated CompoundTag handling to use AdventureNBTConverter in multiple files to improve compatibility with binary data format for better data handling
updated the return message in NoToStringOnStringType . java to clarify the purpose of the method to provide clearer guidance on
updated JVM memory settings in TestThreadFailure . java from " - Xmx64m " to " - Xmx32m " to optimize
updated the return type of ` retryFailed ` method and added new classes ` DataProviderRetryAnalyzer ` and ` DataProviderRetryTest ` to
updated the return statement in BucketStateIEEE754 to use bandwidth instead of tokens [ 0 ] to ensure accurate access to the bandwidth token
danielwagnerhall : implement selectpopup , deselectpopup , and capturenetworktraffic method in webdriverbacked
removed the ` printWarning ` parameter from the ` doPrintEntry ` method and related logic in ` Main . java ` and ` Resources .
[ hotfix ] [ test ] fix checkstyle violation in taskasynccalltest
added validation checks for dialog opacity , background , shape , and undecorated properties in Dialog and Frame classes to ensure dialog components are valid and
changed the ` state ` field from non - final to final in ` DefaultProjectFilesystem . java ` to ensure immutability of the `
refactor Redis connection configuration to use RedisStandaloneConfiguration instead of LettuceConnectionFactory to improve flexibility in configuration for Redis standalone connections
add delay message to the jabber chat room ( # 4569 )
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to simplify
replaced the creation of share operations with a service implementation in FileOperationsHelper and OperationsService to improve sharing functionality and maintainability by centralizing
removed unnecessary check for isInjected in BeanDefinitionInjectProcessor . java and added @ Inject annotation in FieldPropertyInject . java to streamline the
replaced calls to ` getMinBuildHeight ( ) ` with a variable ` yStart ` for better readability to improve code clarity and
added a check for NullPointerException in the SmackIntegrationTestFramework class to ensure proper handling of NullPointerExceptions during integration tests
tmi - tiff : add support for interop sub - directories in exif . thanks to jesus camacho rodr
added support for ENABLED _ LS mode in VersionTargetGraphMode and updated VersionedTargetGraphCache to utilize DefaultDepsAwareExecutorWithLocalStack
added a condition to check if the child format is a video format before processing to ensure that only video formats are processed in the DLNA
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added a static load method to LwjglNativesLoader and modified LwjglApplet to set the library path to ensure the
added support for CSV escaping and improved encapsulator handling in CSVRequestHandler to enhance flexibility in CSV processing by allowing users to specify escape characters
updated grant type validation in ClientRegistrations and tests to support both implicit and OAuth2 grant types to ensure only the Authorization Code grant type is
updated exception handling in Throwable and SuppressedExceptions classes to include the original cause and suppressed exceptions to improve error reporting and provide clearer context for
added a SQL query and assertions in DerivedTableIT . java and modified the iterator initialization in ClientAggregatePlan . java to improve test coverage
added a method to retrieve the R square value in RegressionEvaluator and a corresponding test in StreamExpressionTest to ensure the correctness of
added handling for request header names in ThreadContextMDCServletFilter to ensure the correct context attributes are added based on request headers
replaced direct casting of ` MapWork ` with a local variable ` mapWork ` in ` SparkPlanGenerator . java ` to improve code
added methods to retrieve folder and country images in ` PdfJndiReport ` and ` PdfSessionInformationsReport ` classes to improve image handling
updated caching strategy in JwtIssuerReactiveAuthenticationManagerResolver and added a new test for trusted issuer handling in JwtIssuerAuthenticationManagerResolverTests to
updated resource existence check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for
modify interop type handling to include an ` isMethod ` parameter to enhance functionality by allowing method - level return values
replaced MILLISECONDS . sleep ( 500 ) with MILLISECONDS . sleep ( 500 ) in AbstractBasicMockingIntegrationTest . java to ensure proper timing
added a new file KernCrash . java to implement a KernCrash font with text rendering to facilitate the rendering
added a fail ( ) statement in LinkedHashTreeMapTest . java to ensure proper error handling during test execution
added a method to retrieve interface IP addresses based on a prefix in NetUtil . java to improve the functionality of retrieving network interface addresses based on
clean up housekeeper task in hikaripool after shutdown
updated the client address check from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java `
refactor Assert class methods for improved readability to enhance maintainability and clarity of the code
added a new test class ` Issue247Test ` for testing the ` TreeMap ` functionality to ensure that the ` TreeMap ` functionality
changed the type of ` results ` from ` Set < CategoryItem > ` to ` Set < String > ` and modified the ` doIn
added checks for leap years in the max age validation logic to ensure that the person ' s max age accurately reflects the current year and
added error handling for alarm and error codes in GrblController to improve error reporting for better user experience
modify the return statement to handle cases where no screens are available to improve user experience by providing a default home button label when no sc
removed the ` count ` parameter from the ` getBittrexTrades ` method across multiple classes to simplify the method signature by eliminating
updated cursor length calculation and added null check for the input string in ConsoleReader . java and adjusted index calculations in MemoryHistory . java to improve
removed the " . jdk " suffix from the jdkPath assignment in JavaBuild . java to simplify the path construction for better readability
updated method calls to use ` input . getType ( ) ` instead of ` description . getBuildRuleType ( ) ` across multiple files to improve
added a logger parameter to the JFCModel constructor and updated related methods to utilize it to enhance logging capabilities for better error tracking
added a validation check for the tolerance parameter in MaximumInscribedCircle . java to ensure that the tolerance is positive to prevent runtime errors
added methods to create and drop a view in TestUtil and implemented corresponding tests in DatabaseMetaDataTest to enhance functionality for creating and dropping views
updated NaNTest . java to conditionally expect stable float and double tests based on system architecture to ensure tests are only executed on supported platforms
added a new file ` DesktopTaskbarUIController . java ` and a check for PC system features in ` TaskbarManager . java
add progresskeeper task count listener to moditemadapter so that moditemadapter do n ' t show up on ui thread .
refactor methods in Files . java for improved readability to enhance maintainability and ease of understanding
replaced ` Set ` with ` Collection ` for interceptor management in ` AnnotationGrpcServiceDiscoverer ` and ` GrpcServerAutoConfiguration
changed the ` DomainAwareServicesManager ` interface to extend ` ServicesManager ` and modified the ` ChainingServicesManager ` class to extend `
fix resource pack loader to use modid instead of modfile / name
chore : update gapic - generator - java version to 2.1 . 0 ( # 49 )
added new methods ` grow ` , ` growX ` , and ` growY ` to the ` Cell ` class to enhance flexibility in
replaced the ` currentBindings ` map with a ` final private ` map for better type safety to simplify the code and improve readability by
http : / / issues . apache . org / activemq / browse / amq - 4892 - add try - catch to
replaced long array with byte array and added memory fail count check in MetricsMemoryTester . java to improve memory measurement handling and ensure memory
deleted the JobParametersPrototype . java file to the functionality is no longer needed in the project
added a securityEnabled parameter to the MappingsTable and updated related classes to enable or disable security checks based on security configuration
rename APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _ OBJ
changed the DUMP _ TO _ FILE flag from true to false in TestMSPowerPointParser . java to disable the dump functionality for
updated the codecNeedsEosPropagationWorkaround method to accept MediaCodecInfo instead of codecName to enhance compatibility with different codec configurations based on
[ java ] do n ' t set publisherlimit if we do n ' t have connection to the meta buffer .
added a condition to check if dbInfo is null and output options are NoInfo to ensure proper handling of output options when dbInfo is not
enable ssl by default for presto driver
added error output options to the buildDOMSubtree method in DOMConverter . java to enhance error handling by enabling XHTML output for latex elements
refactor Assert class methods for improved readability to enhance maintainability and clarity of the code
added a new parameter ` retain ` to the ` Publish ` and ` Session ` classes for topic management to enhance the functionality of the ` Event
added " testCaseName " to the JSON serialization output in EventSerializationTest . java to ensure proper serialization of test cases in JSON output
[ hotfix ] [ table - planner - blink ] fix tumble function name in std operator table
replaced ` fastparse . core . Parsed ` with ` fastparse . Parsed ` in ` LatexToUnicodeAdapter . java ` to
replaced final long sslCtxNativePointer with volatile long sslCtxNativePointer and introduced ReadWriteLock for SSL context management to improve thread safety and
updated string comparison from ` size ( ) = = 0 ` to ` isEmpty ( ) ` in ` AppModule . java ` and refact
replaced CalciteSqlDialect with AnsiSqlDialect in SqlNodeConvertContext . java to ensure compatibility with the latest SQL dialects
change log level from debug to trace in FirmwareUpdateService . java to provide more detailed logging for firmware update handler availability
added null date and timestamp tests in DateTest and GetObjectTest classes to ensure proper handling of null values in database operations
refactor string concatenation logic in StringSubject , Subject , and RelabeledSubjectsTest classes to improve readability and maintainability of the
added a new test method to verify repository permissions for multiple teams in UserModelTest . java to ensure correct permissions are returned for different repository teams
added a new Java file ` Test7088020 . java ` with method handles for testing method invocations to demonstrate and validate
refactor audience restriction validation in Saml2ResponseValidator to use a HashSet for clarity to improve readability and maintainability of the audience
refactor cache refresh logic in AbstractDataChangedListener and HttpLongPollingDataChangedListener to streamline cache refresh logic and improve code readability
updated the handling of ` _ stderr ` to check if it is null before using it to improve null safety and prevent potential NullPointerExceptions
added a new warning constant ` SEPARATION _ ORDER ` in ` Warning . java ` and modified ` BasicEventSimulationEngine . java `
updated the parameter passed to the optimize method from offlineTableConfig to realtimeTableConfig to ensure correct optimization behavior for real - time queries
refactor aggregation SQL generation to include split points in the CREATE _ METRICS _ AGGREGATE _ TABLE _ SQL statement to enhance
refactor SavepointV2 and FileStateHandle classes to improve code organization and maintainability
added tests for setting and getting the Bluetooth class in ShadowBluetoothDeviceTest and ShadowBluetoothDevice to ensure proper functionality of Bluetooth
corrected method name from ` contains ` to ` containsProfile ` in multiple classes to ensure consistency in method naming and improve code clarity
feat ( FEEL ) : fix sum function to handle empty list
replaced graphModel . getGraph ( ) . readUnlockAll ( ) with graph . readUnlockAll ( ) in DataBridge . java to
updated coreNodeName construction to use getCoreName ( ) instead of coreName to ensure the correct core name is used for node identification
chatactivity : add backpressure support for contact list update
updated TaggerParserPosTagCompatibilityITest . java file to improve test coverage for tagging functionality
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
modified the condition in ` elemtype ( t ) . tag < = lastBaseTag ` to include ` elemtype ( s ) . tag
updated ` DelaunayTriangulator ` and ` EarClippingTriangulatorTest ` to use ` Delaunay
added @ Override annotation to multiple classes in the project to ensure proper method overriding and improve code clarity
refactor JWTClaimsSet initialization to use the Builder pattern to improve code readability and maintainability by using the fluent builder pattern
refactor stack overflow handling in StackOverflowCheckImpl to improve clarity and maintainability of state management in the StackOverflowCheckImpl class
added shadow methods for SQLiteDatabase and ContentValues in Robolectric classes to enhance functionality by allowing retrieval of shadows for different database types
replaced ` initiateGLInstances ( ) ` with ` initiateGL ( ) ` in ` LwjglAWTCanvas . java `
replaced ` bytesPerDim ` with a ` ByteArrayComparator ` and updated the comparison logic in ` BKDWriter . java ` to improve
added script and country and variant parameters to the Locale class and updated default locale initialization to enhance locale management by allowing users to specify their script and
replaced ` mIconCurrentTextAlpha ` with ` mIconLastSetTextAlpha ` in ` PredictionRowView . java ` to
corrected the log warning message from " Confimap PropertySources " to " ConfigMap PropertySources " to ensure accurate logging of the correct number of
updated DefaultConfigurationTestSuite to use UaaJunitSuiteRunner ' s allSuiteClasses method and modified TokenRevocationEndpointTest to use a
trim whitespace from token tokens in GzipFilter and setInitParameter in GzipFilterDefaultTest to ensure consistent formatting and prevent potential issues with whitespace in
updated the assignment of the _ outputType variable in Response . java to ensure consistency in output type handling
updated the implementation property from JDK to JONI in RegExpFactory . java to ensure compatibility with the latest Nashorn version
replaced LooperExecutor with Executor and updated listener handling in ViewCapture . java to improve performance and clarity by using a more modern
added style retrieval and retrieval methods in MaryGenericFeatureProcessors , Voice , MaryRuntimeUtils , and MaryHttpServer classes to improve
added a check to ensure the parent directory exists before creating it to prevent potential errors when attempting to create a non - existent folder
updated the default node discovery bind IP from 0.0 . 0.0 to 127.0 . 0.1 to ensure compatibility with the
( chore ) camel - jbpm : fix typo in camelworkitemhandler
pdfbox - 4892 : remove unused static import , a suggest by valerybokov
removed the managed company label from the AllAppsGridAdapter and updated the WorkModeToggleContainer class to WorkFooterContainer to improve user experience by
refactor multiple Java files for consistency and clarity to improve maintainability and readability of the codebase
refactor : remove redundant code in defaultjavaprettyprinter . java ( # 4396 )
added a call to ` driverContext . freeMemory ( bytes ) ` in ` OperatorContext . java ` to ensure proper memory management by free
updated string formatting in QueryByExamplePredicateBuilder and modified replacement logic in StringQuery to improve readability and simplify query string replacement logic
replaced ` long evictionCounter ` with ` AtomicLong evictionCounter ` and introduced a new ` add ` method in ` ConcurrentLRUCache
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` in ` DefaultTaskExecutor ` and added a
networkaddressmanagerserviceimpl : do n ' t try to get the local host if the destination be a ipv4 address .
added environment configuration for database and source in MainFrame . java to ensure proper configuration for database and source in the application
added constructors to AdminClientBootstrapConfiguration and AdminServerBootstrapConfiguration to log the status of Solon Admin client and Solon Admin server
[ hotfix ] [ table - common ] fix typo in tableenvironment javadoc
removed the timeout setting from MapperBuilderAssistant and modified the build method in MappedStatement to simplify the timeout handling and improve code clarity
refactor methods in JSweetTranspiler and TypeScript2JavaScriptTranspiler to remove the hangingTscTimeout parameter to simplify
added SerializableClasses for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization of GeoLocationRequest and GeoLocation
updated Preconditions messages to reference " Build Artifact " instead of " Source Artifact " in ArtifactFilesystem . java and ArtifactFilesystemTest . java to ensure
tika - 2338 -- add test case for jxl document in excelparser
do n ' t trigger concurrent modification when modify conditionals
[ java ] wait for inputstream to be available before try to write to pipe .
added checks to ensure that ` actual ` and ` expected ` values are not true in ` GuavaOptionalSubject ` to improve error handling and
updated visibility checks in BackgroundAppState and ShelfScrimView to include VERTICAL _ SWIPE _ INDICATOR and adjusted
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerException when nav is not initialized
ggb - 1343 fix for image with absolute location
refactor error handling logic in ErrorOccuredInOnExceptionRoute . java to improve clarity and maintainability of error reporting
changed scheduleAtFixedRate to scheduleWithFixedDelay and changed logging level from info to debug in AstroDiscoveryService to improve performance by reducing
simplified the initialization of ` irrUnit ` and ` pemUnit ` in ` SinglePassAndImageBasedLightingLogic . java
( chore ) camel - jms : ignore test that hang
updated import statements in GuiceFactoryTest . java to use specific classes instead of wildcard imports to improve code clarity and maintainability by using
added a system feature list and methods to manage system features in RobolectricPackageManager to enhance functionality for managing system features in the application
refactor RCAFrameworkLoader to use a for - loop for handling properties and add a new test class RCAFrameworkLoaderTest to improve
removed logging of started cancellation watch dog in Task . java to streamline task execution by eliminating unnecessary logging
added null and empty check for enumerationValues in RADProperty . java to ensure proper handling of empty enumeration values and prevent potential NullPointerExceptions
renamed variable ` needInline ` to ` needStartText ` and ` needEndText ` and updated related logic in ` BoxBuilder .
[ java ] send telemetry data in a separate thread and retrieve the remote ip in the log message .
removed conditional logic for altering the UPGRADE _ ITEM _ TEXT column type in UpgradeCatalog260 . java to simplify the code by
updated error messages in BaseTableDataManager to include available space and write permissions for index and temp resources directories to improve clarity of error messages
refactor DatasetUtilities class for improved readability to enhance maintainability and clarity of the codebase
added selector ID to the key string in Matcher . java to improve clarity of selector identification in the matcher output
corrected formatting of debug log messages in GouraudShadingContext . java to improve code readability and maintain consistency in logging format
added support for taskbar visibility in StashedHandleViewController and updated related methods in TaskbarDragLayerController and TaskbarLauncherStateController
removed unnecessary whitespace in KeyExchange . java to improve code readability and maintainability
added a check for ` JdbcConnection ` before executing the ` version ( ) ` query in ` CockroachDatabase . java ` to
refactor index retrieval logic in ServerMainTest . java to use a variable for the file name to improve code readability and maintainability by
added ` getMediaRecorderingMimeType ( ) ` methods to ` CodenameOneImplementation ` , ` MediaManager ` , and ` ImageIO
changed access modifier of useShaders method from private to public in ShaderHelper and updated references in RenderTileEnchanter and Render
updated the BindableFilter condition in DruidAdapterIT . java and modified the return value in the DruidAdapterIT . java file to
reformatted the instantiation of ZkStateReader in CloudSolrServer . java to improve code readability and maintainability
simplified conditional statements in XMPMetaParser . java to enhance code readability and maintainability
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced a conditional check with a while loop in UrlHelper . java to improve readability and maintainability of the code
renamed ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and introduced a new test class ` VarargsAndWildcard
refactor border property checks to use a new method ` borderIsNotSetOrBlank ` for better readability to improve code clarity and maintain
changed log level from info to debug in WatchConnectionManager and WatchHTTPManager from info to debug in WatchConnectionManager and WatchHTTPManager to
replaced specific imports with a wildcard import and added HubRegisterResponse handling in InternalDropAllCommandStep . java to streamline import statements and
replaced bitwise operations with ` Byte . toUnsignedInt ` and ` Byte . toUnsignedInt ` for consistency to improve code readability and
( chore ) camel - opentracing : remove unnecessary parentheses
updated the default caching setting from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure the caching engine uses the correct cache
changed the rangePannable property from true to false in CategoryPlot . java to disable range panning functionality in the plot
updated main and work page handling in AllAppsContainerView . java to ensure proper view management based on the active page adapter
changed visibility of ` glCaps ` and ` renderer ` variables to private in ` Visualizer2TopComponent . java ` to enhance encapsulation
added handling for CancellationException in FunctionTest . java to improve stability by gracefully handling potential cancellation scenarios
changed constructor visibility of JarFileResource and JarResource from package - private to protected to allow subclassing of JarFileResource and JarResource classes
refactor DefaultTrackSelector class for improved clarity to enhance maintainability and readability of the code
added a loop to wait for unseq merging in LevelCompactionTsFileManagement . java to ensure proper handling of unsequence merging during compaction
updated the currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to correct the expected currency value for user tra
added a table annotation to the Post class and updated related tests in HibernateDTOProjectionTest and JPADTOProjectionTest to improve clarity
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
updated ` installAutoInstance ` method to include a ` Service ` parameter and introduced ` updateHiveLLAPSettingsIfRequired ` method to
http : / / issues . apache . org / activemq / browse / amq - 4892 - fix sendheadersfirstpublisher
camel - 14284 : camel - aws2 - * : use @ jsonpojobuilder instead of @ jsondeserializer and @ json
added support for BIG _ DECIMAL value type in RangePredicateEvaluatorFactory to improve error handling for unsupported value types in the range predicate evaluator
rename variable ` inner ` to ` javacProcessingEnvironment ` for consistency to improve code readability and maintainability by using a more descriptive
removed the import and loop for annotations in ParameterInfo . java to streamline the code by eliminating unnecessary code
added support for ac3 streaming and modified playback state handling in PlaybackController . java and VideoManager . java to enhance video playback functionality and
updated the return statement to include a map containing " value " as a null value and modified the HttpResponse ' s content to include JSON data to
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address the need for Commons DBCP and
added a new test method ` testSelectInto ` to ` IoTDBExtendTemplateIT . java ` to verify the functionality of executing SQL statements
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
updated package names from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
mmm Letters . java and ppp Letters . java use Math . round and added a new TestIssue358 . java file
added a name and configuration for the QueuedThreadPool and ScheduledExecutorScheduler in ClientConnector . java to improve clarity of thread pool and scheduler
refactor ViewResultsFullVisualizer to simplify JScrollPane and add error logging checkboxes to improve code readability and maintainability by reducing
added descriptions for phone numbers in ScimUserEndpointDocs . java to improve clarity and understanding of user ' s phone numbers
made ` DeleteFiles ` , ` IndexFiles ` , ` IndexHTML ` , and ` SearchFiles ` classes public to allow external access
added null checks for responseMap and property in JsonHttpPropertyRequest and URLStreamProvider to improve error handling for missing or forbidden HTTP responses
refactor SolrRequestHandler to improve code readability to enhance maintainability and facilitate future updates
added a check for DEFAULT _ PARALLEL in the XmlSuite class to ensure that the parallel parameter is only set when it is not
fix checkstyle issue in testvmwareutil . java and testvmware . java
added handling for SCARD _ E _ NO _ SMARTCARD in the error condition to improve error handling for smart card issues
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress warnings related to system output during tests
added a new parameter ` lists ` to the ` bind ` method in ` BindyKeyValuePairFactory ` and ` BindyKeyValuePairData
change default value of ` ` useowner ' ' and ` ` usetimestamp ' ' from ` ` true ' ' to ` ` false '
modified the ` runAndCheckException ` method to accept a ` ThrowingRunnable ` instead of a ` Runnable ` to improve error handling by ensuring
updated hash calculation to handle null values for ` via ` , ` viaContext ` , and ` pathFromSeed ` to improve robustness by
camel - 14850 - camel - aws2 - * : refactored SdbComponent to use context - based component creation to improve
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval methods in Liquib
increase proxy . cert . validity from 7 to 90
added smoothDelta and lastDeltaUpdate variables to ThreadHandler for improved timing management to enhance the responsiveness of the thread by tracking the
added a null check for the paginator in HttpBatchReader and improved URL parsing logic in HttpScanBatchCreator to ensure proper handling of pagination
added null check for CompactionInfo client in Worker . java and implemented a test for FindNextCompact throws a MetaException in TestWorker .
added onSaveInstanceState method call to ShadowFragmentActivity and corresponding test in FragmentActivityTest to ensure that onSaveInstanceState is called correctly for fragments
refactor code for improved readability and consistency in BatchResourceFactoryBean . java to enhance code clarity and maintainability
added a test method to validate color references in ColorResourceLoader to ensure proper parsing of color references in the ColorResourceLoader
added error handling for retrieving a single result in AbstractJPAQuery . java and created a test for unique results in AbstractStandardTest . java
rename the variable ` fromCache ` to ` owner ` and update its initialization logic to improve clarity and ensure the ownership of communities is
updated depth preference retrieval to use LawnchairApp instead of a local variable to ensure compatibility with the Lawnchair application ' s
removed unnecessary import of ProcessTools from LocalManagementTest . java to streamline the code by eliminating unnecessary dependencies
removed the ` now ` parameter from the ` updateTotalEnergyAverageUsage ` method in ` EnergyProcessor ` and related classes to
updated the ` ExtensionStack ` class to handle null cases for ` extensions ` and ` incoming ` and ` outgoing ` to improve robustness by
2 . x : fix flowableflatmap . cancel ( ) to properly handle inner error .
added connection timeout settings to MultiGetRequest , ControllerStarter , and ServerTableSizeReader classes to improve connection management and error handling for server
reformatted the initialization of AndroidPlatformTarget in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced NewModelTest with ModelTest in LwjglDebugStarter . java to align with the new model testing framework
added new event fetchers for SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java and modified image inlineing
added a new test method to verify output hash calculation when caching is not writable to ensure that output hashes are correctly calculated when caching is not writable
camel - 14284 : camel - netty - allow to configure whether to use bytebuffer . thanks to benjamin
updated the method to use Warehouse . getQualifiedName for altering partitions to ensure the correct table name is used for partition alterations
improve error message when prefernativetransport be set to false
fix : move enumtypehandlerserializertest to typehandling package and add unit test
refactor StreamEx class to improve code readability to enhance maintainability and facilitate future updates
removed hint settings for JAVAEE query and lock timeout in SessionImpl . java to streamline query handling by eliminating unnecessary hints
added a new file ` StaticLoggerBinder . java ` that implements ` LoggerFactoryBinder ` for creating instances of ` StaticLoggerBinder ` to
replaced multiple instances of ` familyMap . put ( family , list ) ` with ` familyMap . put ( family , set ) `
added orientation handling in TaskbarManager to ensure proper layout updates based on window orientation
unescape occupant ' s nickname in chat room ' s jabber ' s jabber ' s jabber message .
updated the method call syntax in StoreDirect . java and added a new test class Issue265Test . java to improve code readability and ensure
added @ SuppressWarnings ( " mutable " ) annotations to multiple Java files to suppress warnings related to mutable objects and improve code clarity
( chore ) camel - test - infra - broken - test : use brokentestholder instead of brokentest
refactor audio and subtitle track handling in multiple Java files to improve code readability and maintainability
added an unlimited flag to NBWriteServlet and updated TestWriteListener to accept a boolean parameter to control the behavior of the NBWriteServlet
updated total difficulty handling in BlockchainImpl and added a new test for invalid block difficulty in ImportLightTest to ensure accurate total diff
modified action assignment logic in DefaultPlaybackController . java to simplify the logic for determining the actions based on the seekable state
replace synchronized list with CopyOnWriteArrayList in NativeLibrarySupport . java and update related methods in SecurityServicesFeature . java to improve thread safety
added a uniform allocation for shaders in AllAppsView . java and updated bendDistance calculations in AllAppsView . java to improve
added a check for the presence of a colon in the key before processing to ensure that the key does not contain a colon when processing
added PrincipalResolver to CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration to enable customizable PrincipalResolver for multifactor authentication event execution
replaced ObjectMapper with Noggit JSONParser in DelegationTokenResponse . java to enhance JSON parsing capabilities and improve error handling
added a method to remove trailing slashes from a StringBuilder to ensure proper handling of special characters in string concatenation
added a new method ` matchesAny ` to ` PatternsMatcher ` and corresponding tests in ` PatternsMatcherTest ` to enhance functionality for
hbase - 26967 improve error message when loadincrementalhfiles fails
fix fire fire not be able to fire potion . close # 119
removed unnecessary whitespace in the beginOrAdjustReorderPreviewAnimations method call to improve code readability and maintain consistency
updated calculation of decreasePercent in ContractStateCapsule and adjusted formatting in ReceiptCapsule to improve code readability and maintain consistency in formatting
added handling for unready input in AsyncContentProducer and BlockingContentProducer , and implemented a test for it in AsyncIOServletTest to ensure
added a null check for the weightField parameter in DocumentDictionaryFactory to ensure that the weightField is mandatory to avoid illegal argument exceptions
added plist variable substitution functionality to AppleBundle . java and created a corresponding test in AppleTestIntegrationTest . java to enhance the functionality
fix turret and laser turret not be able to turn
change return type of adaptOrder method from OrderCreateApiRequest . OrderCreateApiRequestBuilder to Object to ensure type safety and prevent potential ClassCastException
added a new file ` PreParseGrammarTest . java ` to implement XML grammar preparsing to facilitate testing of XML schema grammar
added @ SuppressWarnings ( " doclint : missing " ) annotations across multiple Java files to suppress warnings related to the " doclint : missing "
added FontManager import and call overrideFont method in ExtendedEditText . java to ensure font overrides are applied correctly for the current context
added a null check for currentUser in AuthorizeTag . java and implemented a test for unauthorized access in AuthorizeTagTests . java to ensure that
camel - 14284 : camel - cxf - jaxrs should warn if the uri contain unsafe character .
mondrian : fix jdbcgeometrytestsetup to not call super . setupdata ( )
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] add check for closed backend closeable registry in backend restorer procedure
create rmi registry if rmi . create = true ( default )
updated string join method in CompactionManager to use StringUtils for consistency to improve code readability and maintainability by standardizing string concatenation
added display metrics configuration and updated test cases for default qualifiers to ensure accurate display metrics are set and improve test coverage for SDK 26
[ java ] add memberid to serviceheartbeat to track the cluster member .
added support for " TotalThreadAllocatedBytes " attribute in TestThreadMXBean based on version check to ensure compatibility with version 21 and above
modified the return statement to handle negative and positive infinity in the CustomExpression class to ensure proper handling of NaN values and improve hash code calculation
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5645 - improve log
added authentication routes for " / authenticate " and " / authorized " in Routes . java and created AuthenticityController . java to enhance authentication
added an assertion to ensure nextNode is alive in LoweringPhase . java and removed unnecessary whitespace in SnippetTemplate . java to improve code cl
updated the logger reference from ` ConnectionManager . class ` to ` HttpClientRequestImpl . class ` in ` HttpClientRequestImpl . java ` to
reordered comparison logic in DefaultTrackSelector . java for consistency to improve code readability and maintainability
[ hotfix ] [ runtime ] fix typo in runtimeserialization . java
ggb - 2322 fix for crop on the left and right of the screen .
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` and updated related references in ` DeviceProfile ` , ` WidgetPreviewLoader ` , and
tika - 3353 -- fix for tika - 3353 - add content - disposition - filename and content - type - name
updated the URI construction in ThumbnailsCacheManager to use fileId instead of remote path to ensure the thumbnail generation uses the correct file ID instead of
added functionality to set and reset the input stream in the Source class to ensure proper handling of input marking and resetting behavior
added @ Deprecated annotations to multiple AsyncProcessor , BehaviorProcessor , and BehaviorSubject classes to indicate that these classes are outdated and should not be used
ambari - 20836 . ambari server should not show stack on the error page ( dlysnichenko )
bug 10625 : cleanup account should delete template even if domain cleanup fail .
simplified foreign call handling by directly calling getLIRGen ( ) for fremCall and dremCall to streamline the code
[ drools - 5892 ] implement getRuleTemplateConfiguration method in DecisionTableConfigurationAdapter to indicate unsupported operation for legacy Drools 5.x
replaced direct calls to ` onRequestPurchaseResponse ` with a serially call in ` CodenameOneActivity . java ` to improve
increased the default timeout duration from 100ms to 1000ms in UnboundedSourceSystemTest . java to improve test reliability by allowing
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code clarity and ensure correct parent extraction
deleted files MrefStat . java . rej and MrefStat1 . java . rej to remove unused classes to streamline the
added StringUtils import and modified scope handling in DependencyInsight . java to ensure " compile " is returned when the scope is blank
added error handling for missing trades and bad status in BTCETradeServiceRaw . java to improve robustness by handling specific error scenarios
( chore ) camel - core : use hamcrest assertion instead of junit in test
added a method to retrieve payment request URLs in BitcoinURI and corresponding tests in BitcoinURITest to enhance the functionality of the BitcoinURI class
planner - 383 fix illegalargumentexception in abstractfrompropertyvaluerangedescriptor for parameterized collection
removed redundant line setting folder info in mOrganizer to streamline code by eliminating unnecessary duplication
added a condition to check if the lock owner is the current thread before releasing the lock in JfrBufferNodeLinkedList . java to
refactor null value handling in BasicAbstractTuple to use a for - loop for better readability to improve code clarity and maintainability by
refactor linter configuration loading to use InputResource and InputResourceUtility for improved error handling to enhance resource management and provide clearer error messages
replaced direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post ( Runnable ) to ensure backgrounds and
updated inventory tick handling in Inventory . java to increment the index correctly to ensure proper iteration of inventory tick events during inventory selection
added a case for OCELOT _ BABY in PlayerEvents . java to handle specific OCELOT _ BABY
[ hotfix ] [ runtime ] add miss @ publicevolving annotation to statettlconfig
added null checks for parameters in PreparedStatement and Array classes to ensure proper handling of null values in prepared statements
[ java ] add ` ` describe - all ' ' option to archive tool .
changed string concatenation from single quotes to double quotes in StringBuilder . java to improve consistency and readability of the code
added a new test method ` jsonSnapshot ` in ` SiteSnapshotVariationsTest . java ` to validate the serialization format of JSON snapshots to
added JUnit imports and modified the method to remove transaction and block caches in BroadTest . java to improve test structure and ensure proper invalidation
[ amcrest ] handle enable PRIVACY _ MODE command in amcrest and dahua
removed unnecessary ` throws NoSuchBuildTargetException ` declaration from method signatures in ` BuckConfig ` and ` BuildRuleFactoryParams ` to simplify method
updated constructors in ChangeLogIterator to accept a list of ChangeSetFilters instead of a single ChangeSetFilter to enhance flexibility by allowing multiple
added handling for guest exceptions in PolyglotLauncher . java to improve error handling for guest - related exceptions
use system property to opt _ out _ tracing by default
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure proper serialization compatibility during serialization
refactor spacing handling in SpacesVisitor to use a dropParentUntil method to improve readability and maintainability of the code
# 1649 - enh : add servercacheoptions . copy ( boolean nearcache ) method ( # 1649 )
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to ensure that the border is not visible on
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and
updated URI constants from LIVE _ URI to PROD _ URI and added logging for exception handling to improve clarity of URI references and enhance
updated string concatenation in SpringResourceAccessor . java for improved readability and consistency to enhance code clarity and maintainability by standardizing string
updated unit labels for MICROGRAM _ PER _ CUBICMETRE and MICROWATT _ PER _ SQUARE
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to ensure
deleted the Tls12SocketFactory . java file to the functionality is no longer needed in the project
refactor tex entry handling in TexBibEntriesResolver to use a unified apply method to improve code readability and maintainability by redu
added a method to check if Robolectric is in legacy mode before executing legacy resources to ensure compatibility with Robolectric ' s
added a check for FirebirdDatabase in DoubleType . java to return " DOUBLE PRECISION " for Firebird databases to ensure correct data type
added null checks for ` dataSource ` and ` transactionManager ` in ` DefaultBatchConfigurer ` to prevent potential NullPointerExceptions when ` dataSource `
add @ api annotation to package - info . java and import from gestalt . module . sandbox . API in unittest . stubs
updated command string and added timeout annotations in OutputStreamTest . java to improve test reliability and ensure proper timeout handling
( chore ) camel - ebean : use try - with - resources for transaction management
updated TermScorer to conditionally apply postings based on score mode to ensure correct scoring behavior based on score mode requirements
updated metric retrieval logic to use ` firstNonNull ` for better null safety to enhance robustness by ensuring metrics are always non - null
server : do n ' t limit the number of result for a user vm ( # 4796 )
refactor object inspectors in DynamicPartitionPruner to use a new method for finding the target ObjectInspector to improve code readability and maintain
added ` removeBuildArtifacts ` method to ` ArtifactFilesystem ` and corresponding tests in ` ActionExecutionStep ` and ` ActionExecutionStepTest `
added logic to set the row selection interval if the selected row is greater than zero to ensure that only valid rows are selected in the table
add a convenience method to assert throw arraystoreexception in j2cl integration test .
refactor PropertySource class to improve code readability to enhance maintainability and facilitate future updates
added support for customizable user agent in HttpClientBuilder and updated HttpClientConfiguration to include it to enhance flexibility in user agent configuration for improved
refactor session creation and restore logic into a separate method for clarity to improve code readability and maintainability by encapsulating session restoration
updated assertions in IssueTest and Reporter classes to include a detailed error message for expected 5 distinct test instances to improve clarity of test results and
updated ByteArrayDataSource initialization to handle null content type case to ensure proper content type is used when content type is not provided
send activationrequestdenied event when a character request an activation fails
simplified return statement and added @ SuppressWarnings ( " serial " ) annotations in GraphApplet . java to improve code readability and maintainability
added a method to update the snapshot radius of task views in RecentsView and TaskView classes to improve the responsiveness of task
added logging for Swagger generation in StaticMicroserviceVersions . java and updated revision assignment in StaticMicroserviceInstances . java to improve traceability and
changed the return type of the ` put ` method from ` void ` to ` int ` in ` ArrayMap . java ` to provide a
updated KafkaContainerCluster to configure startup timeout and streamlined brokers initialization to improve responsiveness and maintainability of Kafka container startup process
http : / / issues . apache . org / activemq / browse / amq - 4892 - retry send message back if
refactor header checking logic in StaticServerHttpHeadersWriter to improve clarity and correctness to ensure headers are not written with different casing
updated EventListenerList to check package access before adding listeners to enhance security by ensuring listeners are accessible from the correct package
added custom application list and image list adapter in ApplicationsFragment . java and created a new CustomAdapter class in ApplicationsFragment . java to
updated the ` applyIcon ` method signature and added null checks for ` iconView ` and ` task ` parameters to ensure proper handling of null
refactor DownloadStateCursor to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
mondrian : fix sonarqube syntax error in sqmtosqlastconverter
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests , HibernateCursorItemReaderStatefulIntegrationTests , and HibernateCursor
added a new ` Poller ` class and modified the reading logic in ` DataInputStreamWithTimeout . java ` to improve thread safety and streamline
added ENABLED _ TS ( 0 ) case to VersionTargetGraphMode and implemented ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to
refactor UpgradeCatalog150 class to improve code readability to enhance maintainability and facilitate future updates
rename networkparameters . testnet3 ( ) to oldtestnet ( ) for consistency .
ggb - 1343 remove unneeded updateifinselection call in propertiesviewd
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code clarity
replaced ` IOUtils ` with ` BufferedIndexOutput ` and refactored ` HdfsIndexOutput ` methods to use ` flushBuffer `
pdfbox - 4892 : avoid npe , a suggest by valerybokov
simplified the conditional logic for retrieving the local address in SocketChannelImpl . java to improve code readability and maintainability by reducing
refactor row handling in TemplateTransformer to utilize a new method ` addToRow ` to improve code readability and maintainability by encapsulating
added a method to check if the operating system is Windows and refactored renaming logic in Wallet . java to improve compatibility with Windows environments and
replaced ` ALPHABET ` with ` CHECK _ DIGIT _ STRING ` and updated related references in ` Code39Reader ` and ` Code
modified the logic for handling unexpected types in NodeGenFactory . java to improve handling of unexpected types and ensure correct casting behavior
removed unnecessary conditional check for ` fieldType . stored ( ) ` in ` IndexingChain . java ` to streamline code by eliminating
fix ( sql ) : fix timestamp with nanosecond in where clause
simplified the condition for adding runnable stack traces in LwjglCanvas . java to improve code readability and maintainability
updated the description of the storage URL configuration in AbstractGCSProcessor . java to improve clarity of the description for better understanding of the
replaced ` assertInitialized ` method with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve clarity and functionality of
updated method calls to use " single " instead of " null " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistency in
replaced the size parameter with a filterCount variable and updated data handling in FaultTolerantChunkProcessor . java to improve clarity and
updated the ` tabbedMethod ` method in ` FileWithTabs . java ` and modified the ` main ` method in ` T499
replaced if ( ! ( TerminalFactory . get ( ) instanceof WindowsTerminal ) ) with assumeTrue ( TerminalFactory . get ( ) instanceof
removed unnecessary check for isAdmin in GetFeedbackSessionsAction . java to streamline session retrieval logic
adjusted the calculation of newSelection and adjusted conditions for velocity and position in AllAppsView . java to improve the accuracy of velocity and position
bugfix # 169368 , remove unused threadinfo # initialize ( boolean ) method
added null checks and improved file handling in multiple dialog classes to enhance robustness and prevent potential NullPointerExceptions during file operations
replaced ` writeBufferSize ` with a static final variable ` WRITE _ BUFFER _ SIZE ` and updated its usage throughout the code to improve
replaced the segment size calculation method with a new SegmentInfo instance and updated its usage in DocumentsWriter . java to streamline segment size
added validation for mesh structure ' dvert ' in ArmatureModifier . java to ensure that ' dvert ' is not null before processing
refactor FileDisplayActivity to improve code structure to enhance maintainability and readability of the code
added a new UnsupportedOperationException class to avoid filling in stack traces to improve error handling by providing a null stack trace for unsupported operations
updated the method to return the average line height of each line instead of the label bounds height to improve accuracy of the returned height based on the
updated the constructor of RotationTouchHelper to accept a DisplayHolder parameter to improve flexibility by allowing custom display holders for rotation interactions
refactor the handling of quoted strings in AVA . java to improve readability and maintainability to enhance code clarity by introducing a
replaced Long . valueOf ( s , 16 ) with IdConversion . convertToLong ( s ) and updated its usage in ServletHandlerInterceptor .
added a new test method ` testSmall ( ) ` and ` testBig ( ) ` in ` ServerDatagramConnectorTest . java `
simplified the assertion statement in TestSqlEntityProcessorDelta . java to enhance readability and maintainability of the code
refactor Cache class implementation to improve performance and maintainability of cache management
updated variable names from " e " to " ev " and updated scope handling in ResourceSetRegistrationEndpoint . java to improve clarity and consistency
removed unnecessary IOException declaration and updated IndexSearcher initialization in TestUnifiedHighlighterTermVec . java to streamline code by eliminating
added a main method to the GcodeTable class that initializes and displays a JTable with a scroll pane to facilitate testing of
updated the connect timeout constant from WEBAPP _ CONNECT _ TIMEOUT to a dynamic value from the configuration to improve flexibility by allowing dynamic connection timeout
refactor multiple Java classes to improve code readability and maintainability to enhance code clarity and ensure proper encoding of query parameters
refactor TestMediaService class for improved clarity to enhance maintainability and readability of the code
removed the constant ` HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK ` from the ` Messages . java ` file
move market print tool to main ( ) for desktop
add hostname validation to endpointaddressinterceptor to ensure only valid hostname component be pass
added new methods ` registerSecurityKeyStart ` and ` registerSecurityKeyComplete ` to ` AccountProxy ` and ` HttpAccount ` classes to
refactor ServerSpanThreadBinder class for improved readability to enhance maintainability and clarity of the codebase
adjusted the user pointer retrieval from ` getUserPointer ( ) ` to ` userData ( ) ` in ` BulletPhysics . java
replaced " Location " with " the _ geom " and added " number " to the Csv2Shape builder to improve clarity and consistency
replaced callGasWord with gasCost in VM . java and removed unused imports in Program . java to streamline code and improve clarity
refactor parameters handling in mmm and ppp classes to improve code readability and maintainability
added a method to setIgnoreNullValues to the piePlot to prevent null values from being displayed in the plot
refactor bundle loading logic in ResourceBundle . java to streamline cache management to improve code readability and maintainability by simplifying bundle loading logic
pdfbox - 4892 : fix typo , a suggest by valerybokov
add allowduringediting to accelerateableaction , freeplaneaction , executescriptaction , accelerateableaction , freeplaneaction
added a new boolean variable userModified to the LoginSamlAuthenticationProvider class to track user modification status for improved security
added a new file TestSealedObjectNull . java to test the behavior of SealedObject with a null cipher to ensure that the Un
updated method names from ` onOpen ` to ` setResponse ` and ` succeeded ` in ` ConnectPromise ` and ` WebSocketClientConnection ` to
added support for SNOW material in 1.16 . 5 and replaced Tag . SNOW . isTagged with SNOW . contains in 1
added a lastTradeId tracking and modified trades handling in CryptsyAdapters and CryptsyPublicTrade classes to ensure trades are
added error handling when closing the synchronized MSC connection to ensure proper resource management and avoid potential memory leaks
use random seed when seedstring be not empty ( # 3550 )
updated device profile identifiers in DynamicGrid . java and added a new DeviceProfile for Nexus 5 in DynamicGrid . java to improve clarity
2 . x : fix flowable . resetif ( connectionobject ) to reset if connectionobject be null
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to
added support for whitespace _ around _ textual _ op token in FormatToken and TokenFormatter classes to enhance formatting functionality for textual operators
added checks to ensure the file exists and is non - empty before proceeding with saving and loading to improve error handling and ensure proper file deletion
added synchronized keyword to several methods in MLogWriter . java to ensure thread safety during operations
log4j2 - 1343 add support for mutable logevent in smtpmanager
updated the PADDING property builder from LengthLike to NonNegativeLengthLike to ensure proper handling of negative padding values
removed redundant calls to ` createContext ( getUser ( headers ) ) ` in multiple resource classes to streamline context creation process by eliminating
refactor trap handling to use a unified method for finding the real handler to improve code readability and maintainability by reducing duplication
updated log messages in JUnitRunner and AndroidPlatformTarget to include Android SDK manager information to improve clarity of error messages for better debugging and
updated cacheSize calculation from maxMemory / 16 to maxMemory / 8 to optimize memory usage for improved performance
added a condition to check if ` start ` is zero in ` InvocationStageTrace . java ` and modified the JSON structure in ` TestInvocation
added error handling for KeyStore loading in ProvKeyManagerFactorySpi to ensure robust fallback to BCFKS when loading fails
updated server socket port handling and assertions in UpstreamCheckUtilsTest . java to improve test reliability by dynamically retrieving the local port
ggb - 2321 fix for split pane overlap with other pane in dockmanagerw
added conditional checks for ARB shader extensions in GLRenderer . java to ensure appropriate storage limits are applied based on OpenGL extensions
refactor PopulatorContext class for improved readability to enhance maintainability and clarity of the codebase
do n ' t send save all notification for project that do n ' t have data ( # 4569 )
added file encoding handling and improved JSON serialization in ZQLJobManager to ensure consistent file encoding across different operating systems
added a length check for the last argument in the IkStepDefinition class to ensure that the last argument is a valid Table instance to avoid
replaced string literals with a constant for header names in FakeOSSOHeaderDecoder . java to improve code readability and maintainability by
added @ Deprecated annotations to several classes in GenerateJavaSources . java and JavaGeneratorMojo . java to indicate that these classes are outdated and
removed debug log statements related to Apache Derby driver class version checks to streamline error handling and improve debugging clarity
fix test which randomly fail on slow ci server
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by redu
updated condition checks and improved logging messages in HubUpdater . java to enhance clarity and ensure proper handling of Liquibase hub mode
added new constant COREINFO _ VERSION _ IBM _ SUCCESS _ KEYS and COREINFO _ VERSION _ FAILURE _ KEYS to the Constants
refactor font logging to differentiate between composite and non - composite fonts to improve clarity and accuracy of font addition requests
updated import statements in ALPNNegotiationTest . java and added a check for HTTP _ 1 _ 1 in NegotiatingServerConnectionFactory
added RateControl import and set no rate control in MaxConcurrentStreamsTest to ensure proper handling of rate control in HTTP / 2 requests
added a new file Test6741426 . java that implements a JComboBox with a JTextField and a NimbusLookAnd
updated error message assertion in CsrfAwareEntryPointAndDeniedHandlerTest to provide clearer context on the CSRF token verification failure
added null checks for dbMgdPath and dbExtPath in HMSHandler . java to ensure proper handling of managed and external directories based
move s3copyobjectrequest to core so it can be reuse by other service
removed the ` accentColor ` parameter from multiple setup methods in ` SettingsActivity . java ` to simplify method calls by using ` viewThemeUtils
updated the expect message in TemporaryFolderUsageTest to include the fileAtRoot parameter to improve clarity in error reporting for relative folder paths
updated TypeInformation references from MAP _ TYPE _ INFORMATION and COLLECTION _ TYPE _ INFORMATION to ClassTypeInformation . MAP and ClassTypeInformation
add check for empty or null address in clientnetworkconfig . addaddress ( string , string )
added " keynectisrootca [ jdk ] " to VerifyCACerts . java to enhance certificate verification capabilities
change return type of compute methods from void to int in CompiledPipeline . java and WorkerLoop . java to improve performance by returning the number of
added a conditional check before setting the menu mode in ModeToggleMenu . java to ensure the menu mode is only set when the popup is not
pdfbox - 2576 : avoid arrayindexoutofboundsexception , a suggest by valerybokov
added a new file ` FinalizerInfoTest . java ` to test the GC . finalizer _ info command to ensure that the finalizer
replaced ` map ` with ` doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to improve
refactor address retrieval logic in BurningManService to improve clarity and handling of custom compensation requests to enhance code readability and
refactor StringSubject class for improved readability to enhance maintainability and clarity of the codebase
updated the byte array size in BatchValidateSignContractTest from 1000000 to 1000 to accommodate larger data sets and temporarily disable tests
updated method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to improve clarity and consistency in method naming
updated query handling in RetweetActivity and Search classes to replace " @ " with " from : " to ensure correct identification of suggestions based on
removed the conditional check for rebalance in SimulatorDiscoverer . java to simplify the code by eliminating unnecessary complexity
added a new endpoint ` importAccount ` to the ` YubiKeyAccountRegistryEndpoint ` class and corresponding tests in ` YubiKeyAccount
removed multiple shader program additions and simplified asset retrieval in multiple classes to improve code readability and maintainability by reducing redundancy
added null check for ` cnt ` in ` paintOnTopLoop ` and updated padding logic in ` SideMenuBar ` and ` Toolbar
refactor AbiWriterProtocol to improve code structure to enhance maintainability and readability of the code
added a null check for subName before setting the caption in HierarchyBase . java to ensure that the caption is set only when subName
changed the data flag from DATA _ FLAG _ IMMOBILE to DATA _ FLAG _ GRAVITY in EntityItem . java to align
updated conditional checks in CustomExpression . java to include a null check for sim before accessing its properties to enhance robustness by preventing potential NullPointerException
remove requestblindvotelistfromnetwork and use sendrepublishrequest instead
added a new test method ` testCase4 ` to ` PostgresTest . java ` to validate the functionality of the ` Select * `
updated string literals in SubtitleUtils and RemoteUtil to use single quotes instead of double quotes to improve code readability and maintain consistency in string
replaced hardcoded line separator with a constant in DefaultJavaPrettyPrinter . java to improve code readability and maintainability by centralizing line
truffle : use atomicreferencefieldupdater instead of atomicreference for singleimplementor . currentsnapshot .
added null check for filters before adding queries in SimpleFacets . java to avoid potential NullPointerExceptions when filters are null
[ core ] fix thinghelper to merge bridge child
replace printHelp ( ) with error ( " A command must be provided " ) in Ktab . java to improve clarity of error messages
added a check for the existence of the output file before returning it to avoid overwriting the output file if it already exists
added date parsing logic for various date formats in DateConverter . java to ensure proper parsing of date strings and improve date formatting accuracy
added assertions to verify the existence of a post by its slug in SpringDataJPALockTest . java and implemented a query in PostRepository
changed the type of ` canAccessDbaRecycleBin ` from ` boolean ` to ` Boolean ` and modified its initialization logic to improve
added a static request factory using SimpleClientHttpRequestFactory in ClientRegistrations . java to configure HTTP request timeouts for improved connection handling
updated the file path handling in SourceTest . java to use a non - Cannonical variable and added assertions for file existence to improve test
remove system property alt _ graalvm _ version and use graalvm _ version directly
added validity checks for access token and refresh token in ClientAdminBootstrap to ensure proper handling of expiration dates for client connections
updated the logic for determining the Android API version to use the Options . v ( ) . android _ api _ version ( ) method to ensure
refactor references from ` this . placeholderPrefix ` to ` placeholderPrefix ` in ` PropertyPlaceholderHelper . java ` to improve code readability
updated the message in Resources . java from " Version : 10 " to " Version : 9 " to clarify the intended version information for
updated ZkSolrClientTest to use CountDownLatch for managing collection progress to improve test reliability by ensuring all collections are processed in parallel
added import for BigInteger and utilized it in MongoMappingContext . java to utilize BigInteger functionality for better data handling
added a condition to check if the button text matches the view in HomeFragment . java to ensure that the button text is only displayed when the
added a condition to check if MEncoder is not out of sync and disabled Mc0 and Noskip to ensure proper handling of M
increase io . netty . eventloopthreads from 10 to 15
changed access modifiers of several fields and methods in CountMin4 and AdaptiveWindowTinyLfuPolicy classes from abstract to protected to allow
added a method to retrieve the FileFloatSource for sorting fields in ExternalFileField . java and created a new test class ExternalFileFieldSort
updated the exception message from " Invalid URL " to " Connection Error " in DoiFetcher . java to provide a clearer error message for
added source attribute handling and updated event processing in OpenRocketSaver . java and FlightDataBranchHandler . java to enhance event tracking
changed the access modifier of the check method from private to protected final to restrict access to the method for better encapsulation
added handling for SynchronizeFileOperation in FileActivity to handle file synchronization errors to improve user experience by providing feedback on file conflicts during synchronization operations
updated the URI generation in ThumbnailsCacheManager . java to use a encoded file path and mode for resizing images to improve the accuracy of
added a check to return early if the container is not initialized and a client property for " cn1 $ infinite " is not set to avoid
updated the initialization of the total variable from 0 to 1 and modified the calculation for the value to ensure that the total value accurately reflects
added a conditional check for the lock status before updating the entry in FeedRefreshUpdater to ensure that the entry is only updated when the lock is
removed unnecessary null check for uid in SolarisAclFileAttributeView . java to streamline code logic for better readability and maintain
refactor the creation of edges to use an array instead of a list for shuffling to simplify the code and improve performance by redu
added a try - finally block to close the InputStream in ZkCLI . java to ensure proper resource management and prevent potential memory leaks
fix parse of bibtex comment with carriage return ( # 3396 )
added strict parameter handling in Main . java and corresponding tests in MainTest . java to ensure unknown parameters are ignored when strict mode is set to
add support for alwaysinvalidconstraint and customconstraintsvalidatorfactory to allow custom constraint validation .
camel - 14284 : camel - aws2 - http should use http4 instead of http
added a wait time for things to level out in TestCloudPivotFacet . java to improve the reliability of the test by ensuring that
simplified conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability
refactor ApplicationTest class to improve test structure to enhance maintainability and readability of the test code
replaced String details with StringBuffer for string concatenation to improve performance and readability of the details string
renamed ` Type ` to ` RoboType ` across multiple files to improve clarity and consistency in naming conventions
[ java ] return action . abort when dispatch be complete .
added support for ' cacheKey ' and ' cacheLookup ' attributes in EntityProcessorBase and updated related tests in TestCachedSqlEntityProcessor to enhance
added a new file PutfieldError . java with a main method that throws an IncompatibleClassChangeError to demonstrate the error
update address translation in ClientConnectionManagerImpl and use a HashMap for privateToPublic in AwsAddressTranslator to improve code clarity and maintainability
added logging for memtable flush conditions in ColumnFamilyStore and Memtable classes to improve traceability of memtable flush operations and throughput thresholds
replaced instances of ` Space . build ( ) ` with ` Space . SINGLE _ SPACE ` across multiple files to improve code readability and
removed the ` encodedLength ( ) ` method from the ` Flyweight ` class to streamline the code by eliminating unnecessary method
refactor TestMethodResultMapBuilder for improved clarity to enhance maintainability and readability of the code
added error handling for Integer methods in FindNullDeref . java to ensure proper handling of illegal argument exceptions and prevent runtime exceptions
[ hotfix ] [ runtime ] remove unused constructor from tasklocalstatestoreimpl
updated return statements in mmm Utils . java and ppp Utils . java to return milliseconds instead of milliseconds to ensure accurate representation of time strings
added support for DeepShortcutView in Utilities and FloatingIconView classes to enhance functionality for handling deep shortcuts in the drag layer
changed the type of the JwtClaimValidator from String to Object and modified the issuer validation logic to improve type safety and ensure proper validation of claims
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate
[ cloudfoundry ] make coverage controller conditional on project data
added a check to ensure the event bus is registered before registering sticky to improve performance by avoiding unnecessary registration of sticky events
added asciiOnly flag to normalization logic in NormalizerBase . java to ensure only ascii characters are processed in normalization results
[ hotfix ] [ runtime ] use partitionservice . aremigrationtasksallowed ( ) instead of partitionservice . ismigrationallowed ( )
added error handling to the SQL update statement in SpillableGroupByIT and NoOpStatsCollectorIT to ensure that the update statistic SQL fails
( chore ) camel - cometd : use camel - test - junit4 instead of contexttestsupport
updated method calls in HtmlTag . java to include OK attributes in 4.01 to ensure compatibility with 5 versions of HTML rendering
added a new line character to the HTML output in HtmlCoreReport . java to enhance the visual representation of report elements
updated RAM usage calculation in DocSlice . java to handle null scores to improve robustness by preventing potential NullPointerExceptions when scores are null
added a custom type adapter for collection elements in CustomTypeAdaptersTest . java to enable custom serialization and deserialization of collection elements in JSON
set extra data from mining parameters in MergeCoordinator and add a test for it in MergeCoordinatorTest to ensure proper handling of extra data from
added a static map to track the number of arguments for parsing and writing properties to improve flexibility in handling command - line arguments for dependency parsing
refactor PathParamServerEndpointConfig to improve code readability to enhance maintainability and facilitate future updates
renamed variable ` configedThreshold ` to ` configuredThreshold ` and modified its assignment in ` DefaultMigrationAddressComparator . java ` , and
renamed the parameter ` part ` to ` partOrList ` in the ` attach ` method across multiple classes to improve clarity and consistency
[ te ] move twitterbootstrap resource to / org / drools / planner / benchmark / core / statistic
simplified the basicCategory method implementation in SpanishTreebankLanguagePack . java to improve code readability and maintainability
hhh - 14850 - deprecate abstractentityloader . loadbyuniquekey ( ) and deprecate uniqueentityloader . load (
hbase - 15936 regionserverflushtableproceduremanager # cancelalltasks ( ) should wait for all task to complete ( #
fix npe in pgraphicsjava2d . setsize ( ) when the width or height be zero
fix checkstyle issue in hikaripool / hikaripool . java ( # 2696 )
removed the assureMatchVersion ( ) method and initialized luceneMatchVersion to Version . LATEST in multiple filter factory classes to ensure
fix aop proxy generation for interface method . fix # 2696
added a condition to check if the input is an COMMA before executing the match method to ensure that the match method handles the COMMA character correctly
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a validation check for payloadLength in WsFrameBase . java to ensure that the payload length is non - negative to prevent runtime errors
updated package structure and import statements for PublishSubscribeChannel and PublishSubscribeChannelParser to improve organization and clarity of the codebase
updated executionId handling to use Long instead of String to improve compatibility with different query execution configurations
added checks for width and height parameters in ImageProcessor . java to ensure image processing only processes dimensions greater than 24 , 16 , and 8 respectively
removed logging of the overlay version in SolrConfig . java and added import statements in SolrConfigHandler . java to streamline logging and improve code
updated delayUntil calculation in FileSyncAdapter . java to adjust synchronization delay based on the current time
updated variable declaration for ` afterConversionTime ` in ` SegmentV1V2ToV3FormatConverterTest . java ` to ensure consistency
refactor ` addPathToMTree ` method to use ` Path ` instead of ` String ` for path parameters to improve code clarity and
added URI handling and improved error logging in DefaultPackageScanClassResolver and DefaultPackageScanClassResolverTest to enhance URL processing robustness and
[ flink - 26012 ] [ table - planner - blink ] [ table - planner - blink ] add timestampextractorutils
added a new class SpringSecurityAuthenticationSource for LDAP authentication handling to facilitate the retrieval of LDAP principal and credentials based on the authentication
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code readability and maintainability
updated the minSdk annotation from LOLLIPOP to KITKAT in ShadowAlarmManager . java to align with the latest API requirements
replaced autoSuggestDialog with SimpleFormDialog in GenericViewFragment . java to improve user experience by utilizing a cached list for custom
added a new test method ` testNewput ` in ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure
updated the parameter of the stream method from ' collection . getName ( ) ' to ' collectionName ' in the ReadDbObjectCallback instantiation to ensure
refactor zoom calculation and adjust zoom settings in MapOverviewImageMouseHandler . java to improve zoom accuracy and ensure correct rounding of zoom values
added similarity support to KNearestNeighborClassifier and updated related test cases to enhance classification accuracy and improve test reliability
replaced SolrQueryParser with ConstantScoreRangeQuery in LukeRequestHandler to improve query performance by utilizing a more efficient constant score range
updated the method call from ` toString ( ) ` to ` getReason ( ) ` in ` LowResourceMonitor . java ` to improve clarity
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added MTU request handling functionality to ShadowBluetoothGattTest and ShadowBluetoothGatt to enable testing of MTU requests with callbacks
refactor the creation of ` ServletInputStream ` to use a dedicated method for creating ` ServletOutputStream ` to improve code readability and maintainability
added LibVosk logging and error handling for UnsatisfiedLinkError in VoskSTTService to improve error handling and provide
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread safety for concurrent access
updated the list of Japanese and French resources in the Resources _ ja . java file to enhance clarity and accuracy of the resource
updated size condition from 0 to 1 in JDBCTypeMapping . java and modified assertions in JDBCTypeMappingTest . java to ensure correct handling of
added synchronized methods to addPlayer and removePlayer methods in GenshinScene . java to ensure thread safety during player addition and removal
added accessibility state testing and improved control code matching logic in TerminalView . java to enhance accessibility functionality and ensure proper handling of control
added support for ` COMMAND _ BEHAVIOR _ SIDE _ NAVIGATION ` command behavior in ` MenuBar . java `
removed the import of Disposable and updated the subscribe method in PoloniexManualExample . java and WampStreamingService . java to
added a validation check for energy limit in UpdateSettingForEnergyLimitContractActuator . java and updated error messages in UpdateSettingForEn
updated variable names from ` url1 ` to ` javaUrl ` and added protocol handling in ` UrlBean ` to improve code clarity and
added getter and setter methods for namespacePrefixRef in SoapJaxbDataFormat . java to enable external access and modification of the namespacePrefix
updated assertions in TestRange . java to use a new method for checking if two dates are same day to improve code clarity and maintainability
added functionality to check for server restarts in BasicAuthIntegrationTest and set security properties in ZkStateReader to enhance security checks and ensure
added a PriceFeed parameter to the TradesChartsViewModel constructor and updated currency code handling based on user preferences to enhance price feed functionality
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve clarity and
replaced the variable ` from ` with ` end ` and updated related logic in ` NativeString . java ` to improve clarity and ensure
added initialization and saving of a file in FileDownloader . java to enable file download functionality in the application
refactor file handling in MappedRawLog to set the length of the random access file to improve clarity and functionality of file handling
added a method to check if the registry is running and a retry method to delete a file if it exists to improve reliability of file deletion
updated import statements in EditTest , Quick3dMain , and TextureTest to call componentPresetDao . startLoading ( ) to ensure proper
added @ SuppressWarnings ( " rawtypes " ) and @ SuppressWarnings ( " unchecked " ) annotations across multiple Java files to improve code clarity and
added a null check for instances in TraceFeignContext . java to prevent potential NullPointerExceptions when instances are not initialized
added a new transaction isolation level constant and updated transaction handling logic in various classes to ensure transactions are only set to TRANSACTION _ READ _ COMMIT
added transaction attribute handling in AbstractStepFactoryBean and modified ItemOrientedStep to include transaction rollback logic to enhance error handling and ensure proper
replaced ` CasClient ` with ` DirectCasClient ` and refactored ` CasManagementSecurityInterceptor ` to extend ` SecurityInterceptor
removed the visibility of the menu item ` menu _ add _ category ` and added new tour tags in ` NavigationDrawerFragment ` to streamline
renamed the method ` cancel ` to ` cancelMatchingOperation ` and updated the method name from ` observeDownloadWorkerState ` to ` observe
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated the ` onFontSizeChanged ` method to accept an unused ` fontSizeDp ` parameter and adjusted text size handling to improve code clarity
added a valid check for the fact before modifying the ConstantFrame to ensure that the fact is valid before proceeding with further operations
refactor DistBuildTargetGraphCodec , ConvertingPipeline , Parser , and VisibilityPatternParser classes to improve code organization and maintainability
replace return statement to create a new ArrayList instance to ensure that the returned spans list is immutable
removed unnecessary locking mechanism in Liquibase . java to simplify code and improve performance by eliminating unnecessary lock acquisition
added a method to set the revision in MicroserviceVersions and updated InstanceCacheChecker to set it to null in MicroserviceVersions to enhance functionality
added string formatting for foreign key and index in TableRetriever . java to improve readability and maintainability of the code
camel - aws2 - s3 : add unit test for the s3 component
removed conditional check for currency pair in getBitstampUserTransactions method and added a new method to BitstampAccountServiceRaw to streamline transaction retrieval
added error handling for component instance retrieval in BlueprintContainerRegistry to improve robustness by handling potential NoSuchComponentException
return pushtoken . getresult ( ) if enable push , otherwise return false .
replaced direct comparison of legacy addresses with a dataset read from the file to enhance test coverage for LegacyAddress functionality
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to the method from other classes
added a Snackbar setup method and refactored push notification handling in NotificationsActivity to improve code organization and enhance push notification functionality
added logging and improved channel closure logic in NettyAsyncHttpProvider . java to enhance error handling and ensure proper resource management during channel closure
updated null checks for ` noWarnAttribute ` , ` warnDays ` , and ` validDaysResult ` to use ` StringUtils . isEmpty `
refactor DefaultAnnotationEngine and Stubber classes for improved readability to enhance maintainability and clarity of the codebase
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to PHOENIX - 2840
nifi - 1744 : added timezone support to aboutdto ( # 3745 )
updated range splitting logic in Splitter . java and added a conditional check in StorageService . java to ensure correct splitting behavior based on the number
no effective change - code cleanup - remove unnecessary try - catch block
removed synchronization around adding and notifying active circuits in CircuitManagerImpl . java to streamline circuit management by eliminating unnecessary synchronization
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by providing a more appropriate exception type
flume - 1343 . make sink , source and pollablesource accessible from outside the runner class .
replaced error logging with info logging for failed authentication in FastBindLdapAuthenticationHandler . java to improve logging clarity and provide more informative
refactor ContainerOrderFocusTraversalPolicy to improve focus traversal logic to enhance performance and maintainability of focus traversal logic
changed return type of getPointLength method from double to int in AlgoFunctionFreehand and GeoLocusable classes to allow for more flexible
removed unnecessary whitespace in CasRiskBasedAuthenticationEvaluationStartedEvent constructor to improve code readability and maintain consistency
refactor database connection handling and add logging functionality in SchemaCrawlerMain and Executable classes to improve resource management and ensure proper resource management during database operations
add support for tlsv1.2 and tlsv1.1 for jdk16 and jdk17
updated exception messages in CountersManager for clarity to improve error reporting for better debugging
updated audio stopping logic and adjusted index calculation in MediaManager . java to ensure correct audio management behavior based on the current audio queue position
updated debug logging in HttpConnection to include the connection ' s cancellation status to improve logging clarity by including the connection ' s cancellation status
added support for @ Transient annotation in JpaPersistentPropertyImpl and its unit tests to ensure that transient fields are treated as transient in the persistence
updated repository version assertions and added stack ID assertions in UpgradeResourceProviderTest . java to ensure compatibility and correctness of stack version handling in the
trufflevm : make eval ( uri , reader ) return object instead of symbol .
changed access modifier of ` isBinaryType ` method from private to public and modified logging statements in ` Proxy . java ` to enhance accessibility
updated the configuration key from " hive . tez . dynamic . parition . pruning . max . data . size " to " hive
updated the ` findProblem ` method in ` JavaEditor ` to retrieve the most recent ` JavaProblem ` instance to improve the accuracy of problem
updated the usage of the DEFAULT _ OFFHEAP constant in DictionaryIndexType and BloomFilterHandler to use the default value instead of a
replaced hardcoded newline characters with a system - wide line separator in TableWriterTest . java to improve readability and maintainability of the
refactor DebugHelper class to improve code readability to enhance maintainability and facilitate easier debugging
added a boolean field ` ownsTexture ` to manage the ownership of the texture in ` ParticleEffect . java ` to ensure that the texture
added additional LDAP configuration properties to HiveConf . java to enhance configuration flexibility for LDAP authentication in the application
fix : update gapic - generator - java with mock service generation fix
updated input method management in DetailActivity to use Context . INPUT _ METHOD _ SERVICE instead of Activity to improve compatibility with Android ' s input method
added a test for converting a map of primitive to a map of primitive to a piece in DataTableTypeRegistryTableConverterTest . java to ensure
updated the size calculation in TestFileSystem . java from 100 , 500 to 10 , 50 to optimize memory management and improve test reliability
updated error message in ContentTypeManager . java to include a note about closing open resources prior to filing a bug report to provide clearer guid
modified the dropSequences method to be abstract and added MigrationFailedException handling across multiple database - related classes to improve encapsulation and ensure proper exception handling
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
replaced direct assignment of binaryField with a local variable f to improve code readability and maintainability
gather leaves and parents style only when the map property be ` ` icon ' ' or ` ` logicalstylemodel . class ' '
added a new test method ` findOneAfterUpsertForNonExistingObjectReturnsTheInsertedObject ` to ` MongoTemplateTests . java ` to ensure
hbase - 15836 fix incorrect calculation of mid in rowindexseekerv1 / bytebuf / bytes / hfileblockindex
added recordLaunch method and updated broadcast intent handling in Launcher and Stats classes to improve launch tracking functionality and ensure proper handling of null shortcuts
updated graphics handling in JavaSEPort . java to use a new Graphics2D instance to improve graphics management and ensure proper resource management
update instructorfeedbackresultspagedata to use current team instead of previous team
modified the ID generation logic in Inventory . java and added a new test case in InventoryTest . java to ensure that player ' s inventory id
added a conditional check before breaking the loop in ConfigDescriptionRegistry . java to ensure the loop continues only when a configuration description is found
added ` returnType = = null ? returnTypeAnnotations : emptyList ( ) ` to multiple method calls in ` ReloadableJavaParserVisitor ` to ensure
added handling for the " blended tiles " property in TileMapRenderer and TiledLoader to ensure proper initialization of blended tiles
removed multiple Java classes from the Probe . java file to streamline the code by eliminating unnecessary dependencies
updated getArea method to use Math . abs for calculations and added null check for last to improve accuracy in calculations and ensure proper handling of
simplified the initialization of lockOnSync and throttleRate in Throttler . java to improve code readability and maintainability by reducing
refactor event handling in PipeEventBus and add new test cases in PipeEventBusTester to improve event handling consistency and ensure proper functionality
increased the timeout duration from 1000 milliseconds to TIMEOUT in ZkControllerTest . java to improve test reliability by allowing more time for
added a new test method ` passcode _ with _ client _ parameters ` in ` TokenMvcMockTests . java ` to validate client parameters
added constructors for ` LengthFilter ` , ` KeepWordFilter ` , and ` LengthFilter ` in ` TestRandomChains . java ` to
removed the import of JUnit Ignore from RandomPlaneTest . java to clean up the code and reduce unnecessary dependencies
update llvmx86 _ 64bitvastart . java to use unsigned long instead of signed int for boolean , byte , short ,
refactor the creation of ` btCollisionObject ` instances in ` btCollisionObjectArray ` and ` btRigidBody ` to
added a new static final string for the copyright year and updated the OPENROCKET _ URL in the AboutDialog to reflect the new copyright
add jetclientinstanceimpl . getdistributedobjects ( ) method to jetclientinstanceimpl interface ( # 11943 )
added debug print statements to FinSet . java and updated MOI calculations in MassCalculatorTest . java to improve debugging capabilities and ensure accurate
replaced TOTAL _ MEMORY with MAX _ MEMORY in SmartDexingStep . java to improve memory management by using the maximum
updated exception handling from MetadataException to Exception in StandaloneSchemaFetcher . java and setCompressors method in CreateAlignedTimeSeriesPlan . java
change burningman burningman output prefix to be bisq instead of co - founder
updated JsonLoaderTest . java to replace single quotes with double quotes and added exception handling for big integers to improve JSON parsing accuracy and ensure proper
updated the constraint for tableSize from 1 to 0x40000000 in ObjectSet . java to accommodate larger table sizes and improve error
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure data scale is set only if it
removed ` @ AddToRuleKey ` annotations from several fields in ` AppleTest . java ` to simplify the code by eliminating
added security checks and improved content handling in FileHelper and TextHelper classes to enhance security by handling security exceptions during query operations
added a new constant ` StyleWithMultipleAttributes ` and corresponding tests in ` ShadowThemeTest ` to support attribute resolution with multiple attributes in the
updated sheet name validation logic in HSSFWorkbook . java and added multiple sheet creation tests in TestHSSFWorkbook . java to ensure
updated the tint color from primary to element in ManageAccountsActivity to improve the visual appearance of the accounts activity
added a null check for replyHandler in DefaultEventBus . java and simplified path resolution in DefaultPlatformManager . java to improve code robustness
added binaryCollationName configuration to MariaDbDbmsType and MySqlDbmsType classes and implemented the getCollateFragment method in
added a new method ` whenType ` to the ` Tree ` class that returns an ` Optional < T > ` to enhance type safety by
added a method to retrieve the user view destination based on the base item to improve code readability and maintainability by centralizing navigation logic
replaced the return statement to redirect to a temporary redirect URI in FeedREST . java to ensure the user is redirected to the correct public URL
[ hotfix ] [ kinesis ] improve error message when use non - serializable kinesis deserializer
( chore ) camel - core : fix checkstyle violation
refactor ZkStateReader initialization and shutdown logic in LeaderElectionTest . java to ensure proper resource management and prevent potential memory leaks
updated method names from ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify
added a new method ` read ` to ` ProxyHandler ` that calls ` endPoint . fill ( buffer ) ` to streamline the code by
replaced ` BufferUtil . allocate ` with direct calls to ` ByteBuffer . allocate ` in ` ABCase1 _ 2 . java ` to
modified the return type of ` prepareStreamsToUpload ` from ` void ` to ` boolean ` and modified the ` prepareStreamsToUpload `
updated comparison logic in AbstractConfigLoader and modified test cases in TestMicroserviceConfigLoader to ensure consistent ordering handling and improve test reliability
added a new file ` PicOfDayAppWidget . java ` to handle the pic - of - day app widget in the application to enable
server : set default value of internallbvmserviceofferingid to 0 to avoid npe
updated import statements and refactored join condition handling in HiveParserCalcitePlanner . java to utilize HiveRelOptUtil for impro
[ hotfix ] [ doc ] deprecate method in transformation class
added user and password options for accessing the remote jmx in NodeToolCmd . java to enhance security by allowing access to the remote jmx
removed unnecessary initialization of scratch in Stemmer . java to streamline code by eliminating unnecessary variables
updated widget handling logic in AppsCustomizePagedView . java to simplify conditions and improve readability to enhance code clarity and maintain
ggb - 1186 use 3d view for 3d api
updated rotation calculations in GcodeRenderer . java to ensure valid vertical positioning to prevent rendering errors
added a new configuration option for workspace directory in OptionEnum . java and updated TerminalClient . java to set the workspace directory to enable users to
updated the file name from " options . apt " to " options . html " in CLIManagerTest . java to correct the file name
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test structure and ensure compatibility with JUnit
refactor OAuthConfirmationController to use a map for model attributes and simplify the confimAccess method to enhance code readability and maintainability by
updated assertions in HibernateIT . java to use a separate session and clear the cache after each test to improve test reliability by ensuring the
refactor EventBusHook class to improve code readability to enhance maintainability and facilitate future updates
refactor MultiPaintEventTest class for improved readability to enhance maintainability and clarity of the test code
changed the assignment of mNewScale from final to non - final in WorkspaceStateTransitionAnimation . java to ensure immutability of mNew
refactor SyncFactory class to improve code readability to enhance maintainability and facilitate future updates
added unique key handling for the unique key field in LukeRequestHandler to ensure proper handling of unique key fields in the schema
added document filter to stroke and background color in BorderEditor and updated EditableResources to use the rounded border color to enhance the visual appearance
truffle - api : add compilationassert . neverpartofcompilation ( ) to binaryparseexception
[ hotfix ] [ test ] replace usage of slotpoolimpl with slotpool
added logging statements for " pending - request " in GatewayRSocket and modified PingPongApp to return HIGHEST _ PRECED
added a toolbar menu item click listener to RecentChatFragment to enhance user experience by providing access to recent chat actions under construction
updated ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget
replaced instances of ` add ( ) ` and ` removeTail ( ) ` with ` push ( ) ` and ` peek ( ) `
updated URLs in CommonsApplication from " test . wikipedia " to " common . wikimedia . org " to align with the new
refactor index creation logic into a separate method ` setIndex ` to improve code readability and maintainability by reducing duplication
replaced ` Collections . sort ( ) ` calls with direct calls to ` sort ( ) ` in multiple files to improve code readability and
added new date and time patterns to the FormatData _ hr _ HR class to support additional date and time formats in the application
added a call to clear focus on the clicked view to improve user experience by preventing unintended focus changes
updated language selection logic in DescriptionsAdapter and modified language handling in SpinnerLanguagesAdapter to improve user experience by ensuring the correct language is selected
updated time zone names from " WSST " to " WSDT " across multiple files to ensure accurate representation of time zones in the application
added native methods for registering global and weak fields and refactored field access logic in FastGetField . java to improve field management capabilities and
added default value handling for UNION and NULL types in ReflectData . java and updated test assertions in TestReflect . java to ensure correct handling of
increase offer timeout from 300ms to 1000ms in SedaBlockWhenFullTest . java to improve test reliability by allowing more
added a null check before remapping the resource class to avoid potential NullPointerExceptions when the resource class is not initialized
[ hapi ] add default constructor for dialect that require databaseversion
camel - 13671 : camel - http - add a method to set the connection header to be close when the producer be close .
increased the socket timeout from 60000 ms to 120000 ms in BasicDistributedZkTest . java to allow more time for
added an assertion to verify that the count of tickets with status ' FREE ' and final _ price _ cts is zero to ensure that
refactor Parser class to improve code readability to enhance maintainability and facilitate future updates
refactor CasProcessingFilter to improve code structure to enhance maintainability and readability of the code
replaced calls to ` getFirstElementChild ( ) . getFirstElementChild ( ) ` with ` getFirstElementChild ( ) . getFirstElementChild
[ optaplanner - 1348 ] fix npe when remove an enum from the look - up manager
updated port values and added a method to wait for cluster nodes to shut down to ensure proper resource management and prevent potential resource leaks
updated log level from warn to info for no such field in ELContextCleaner . java to provide more informative logging for better debugging
set mContentType to " application / octet - stream " in WebdavEntry . java to ensure proper content type handling for WebDAV entries
added a getQueueSize method to the LazyTraceThreadPoolTaskExecutor class and created corresponding tests in LazyTraceThreadPoolTaskExecutorTests to enable retrieval of
[ geot - 5769 ] fix distanceop to skip line with small distance
changed the variable name from ` required ` to ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity by indicating
updated the ` next ( ) ` method to call ` updateProgress ( ) ` in ` PurgingPartitionIterator . java ` to ensure progress
added a method ` getAsUnescapedPath ( ) ` in ` SchemaPath ` and updated references in ` VectorUtil ` to use it to
added abstract methods ` getHeight ( ) ` and ` getWidth ( ) ` to ` BaseMonochromeBitmapSource ` to provide abstract methods for
added validation for the number of points in the vertices array and updated the assignment logic for localVertices to ensure that the polygon array has at least
replaced instances of ` ObjectMapper ` with ` ObjectMappers . newDefaultInstance ( ) ` across multiple files to improve object mapping consistency and
ggb - 1181 avoid npe if ca be n ' t evaluate the right hand side
updated ExternalNameRecord to handle reading Unicode names differently based on the multibyte flag to ensure correct handling of Unicode names in ExternalNameRecord
camel - 14284 : camel - jms - allow to specify the type of the jms destination . default to ' queue '
added conditional logic to return login prompts in LoginInfoEndpoint and updated tests in LoginInfoEndpointTests to ensure username and password prompts are
replaced ` remove ` method with ` removeIf ` for listener removal to ensure listeners are only removed if they are not the same instance
added a case for toggling the spin animation in the PieChartActivity to enhance user experience by providing a visual separation of con
server : kill the copy process if the copy _ vhd _ to _ secondarystorage fail
hbase - 15836 skip table that have namespace quota ( chaoyu tang via szehon )
updated import statements and added a resize method in AndroidInput . java to improve code clarity and ensure proper resizing of pressure array
added a new method ` propertyValuesOf ` to ` PropertySupport ` for retrieving property values to enhance the flexibility of property value retrieval by
added JUnit @ Ignore annotation to ClientMapNearCacheTest . java to mark the test as ignored due to blocking PRs
fixed the hopperhock ' s getentitieswithinaabb method to correctly position the item .
added authentication dialog creation in SsoWebViewClient . java to enhance user experience by providing basic authentication options
refactor TestStressIndexing2 to improve document deletion and query handling to enhance test reliability and clarity in document management
[ flink - 22559 ] [ test ] ignore flaky upsertkafkatableitcase
replaced direct retrieval of type lists with a computeIfAbsent method to improve performance by avoiding redundant calls to get methods
added a configuration option to accept a single value as an array in DefaultEntityMapper to enhance flexibility in handling multiple values in the mapper
updated localization update messages in VersionChangeLogs . java to improve clarity of localization updates
configurationlogic : use resourceutils . getstring ( ) to load category from classpath
refactor ` visitExpressionInstanceOf ` method to ` visitRelExpressionInstanceOf ` and modify its implementation in ` ASTBuilderVisitor ` to
nifi - 1778 : add content - type to the @ writesattributes annotation in gethttp
refactor provenance assignment in BaseHapiFhirDao and ResourceHistoryTable to use a new method to create ResourceHistoryProvenanceEntity
corrected the spelling of " exit " and " done " in the HelpActivity and SearchBookContentsActivity classes to improve code readability
refactor NatsConfiguration class to improve code readability to enhance maintainability and facilitate future updates
refactor ` invalidateStalePartition ` method to accept a list of ` PartitionNameWithVersion ` and ` MetastoreContext ` to improve
make viewresultsfullvisualizer more resilient to infinite loop
updated drawable resource references from ` ic _ group ` to ` ic _ chat _ bubble ` in multiple classes to enhance the visual appearance of
updated method calls from ` getLong ` to ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure thread safety
updated test method names and import statements in MocksCreationTest . java to improve clarity and consistency in test naming conventions
added a static final string for the data source name in CSVThirdEyeDataSource . java and made the method public in YamlDetectionConfigTranslator
increased timeout duration from 10 seconds to 30 seconds in awaiter method calls to improve responsiveness by allowing more time for phaser
removed the BuildSlaveFinishedStatusEvent class and updated the publishBuildSlaveFinishedEvent method in DistBuildRunCommand and DistBuildSlaveEventBus
cloudstack - 5379 : fix for uuid encode issue in vmwarestoragemanagerimpl . java ( # 5379 )
add test case for deposit workspace item without workflow
added distinct ( ) to classpath file processing in ClassLoaderSupportImpl . java to ensure only unique classpath files are processed
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool to use a counter for both " - encoding " , " - string " , and " - template
added a check to ensure the table is not null and is not an external table before deleting its directory to prevent potential NullPointerExceptions and ensure proper
updated async execution pool size and queue size configurations in HiveServer2 to improve performance and control over asynchronous operations
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for execution task role and improve service and component retrieval to enhance code readability and maintainability by
added a new variable ` diff ` in ` OperationSetTelephonyConferencingSipImpl . java ` to store the current configuration information
add a clearentries ( ) method to the flutterlogtree class ( # 4808 )
updated return statements in ChannelEndPoint to include checks for output and input shutdown states to ensure proper handling of shutdown states in the channel endpoint
refactor SetNullableGenerator class for improved readability to enhance maintainability and clarity of the codebase
camel - 16400 : camel - example - reportincident - use servlet transport instead of file component .
updated import statements in NettyRoutingFilter . java and modified content type handling in FormIntegrationTests . java to improve code clarity and maintain
added API operation nickname annotations and implemented a new hello method in multiple service classes to enhance functionality for managing service names with values
replaced the ` update ` method with direct calls to ` update ( ) ` and ` dispose ( ) ` methods in ` Lwj
updated FG _ FK color value from 90 to 200 to improve the visual appearance of the UI component
added a requirement for mp3 audio format in SoundManager to ensure proper handling of audio formats in the sound manager
fix secondaryindexmanagertest . testmarkedasbuilt ( ) to check that index be not mark a built
add a preference page to show the version and eclipse version of the plugin
[ hotfix ] [ test ] use exceptionutils . findthrowable instead of throwable . getcause
refactor MediaFormatUtil class to improve code readability to enhance maintainability and facilitate future updates
added a method ` isCellEditable ` to ` GeneralTab ` that always returns false to provide a default implementation for cell editing functionality
added a method ` isOnlyPrintCommands ( ) ` to ` AbstractUnusedDependenciesFinder ` and modified the message creation logic in ` DefaultJava
added a static integer variable ` tmpCount ` and updated the ` vscales ` array value from ` 2.0 ` to ` 0.
updated import statements in BaseScalarUdfTest and TestUDFRound , TestGenericUDFConcat , and TestUDFRound classes to
added hashCode ( ) and equals ( ) methods to UaaAuthenticationDetails class to ensure proper serialization and deserialization of UaaAuthenticationDetails instances
* fix testskeletoncontrolrefresh . java to use animcomposer instead of animcontrol
renamed ` NodeFilter ` to ` NodeCountFilter ` and updated related methods to improve clarity and consistency in naming conventions
updated the condition to check if the sync block size is less than or equal to SYNC _ FETCH _ BATCH _ NUM to ensure accurate
updated the state in DebugExpressionParser from 365 to 366 and modified local context types in DebugExpressionParser . java to correct the state and
updated the condition in ExcludeDependency to check for dependencies in classpath to ensure only relevant dependencies are included in the classpath of the specified scope
replaced ` tmp ( ) ` with ` dst2 ( v ) ` and added a new method ` dst2 ( v ) ` to
initialize the ` args ` array to an empty object instead of null to ensure a default value for the ` args ` variable
refactor RustBinaryDescription to use ImmutableList for rustcFlags and linkerFlags instead of a List to improve flexibility in handling linker
[ # 8048 ] admin : admin email : set recipient to xls instead of xls ( # 8049 )
added DAG name handling in HiveConf and improved logging in TaskExecutorService and GenericUDTFGetSplits to enhance query execution context and
removed unused import of java . io . File from TileAtlas . java to clean up the code and improve readability
[ netbeans - 4892 ] fix gradle daemon crash when write to a closed stream .
updated the ` validateQuery ` method to include an additional ` arguments ` parameter to enhance error handling by providing more context in error messages
updated INDEX _ VERSION from 1 to 2 and refactored getTree method in LuceneExecutor . java to improve index versioning and streamline
[ hotfix ] [ kryo ] add test for default kryo registered class do n ' t change
added a null check before removing properties in BlueprintConfigurationProcessor . java and updated test assertions in BlueprintConfigurationProcessorTest . java to ensure proper handling
refactor boolean value handling in MetaStoreDirectSql . java to use BooleanUtils for better clarity to improve code readability and maintainability
added a call to hideCustomizationDrawer ( ) in the Launcher class to improve user experience by hiding the customization drawer
refactor warning handling in TermVectorComponent to use a constant for key warnings to improve code readability and maintainability by reducing redundancy
added logging for optimistic types and modified logging levels based on the log enabled status to improve visibility of optimization types and enhance logging granularity based on
refactor Expect class implementation to improve code readability and maintainability
added UnixSocketConfigurationStrategy to DockerClientFactory and created UnixSocketConfigurationStrategy to enable unix socket access for Docker communication
added JUnit Jupiter tests for the ` testEvenLowRateIP ` method in ` CloseableDoSFilterTest ` to address fl
camel - 15836 : camel - reactive - do not throw illegalstateexception when the stream have no active subscription
refactor vectorization methods in Vectorizer to use TezTask and TezWork instead of MapRedTask to improve clarity and functionality
added a boolean parameter to the constructor calls in StringAppender and LogDivertAppender classes to enable flexible initialization of the appender based on the
add null check for guipackage before call updatecurrentnode ( )
make linkage . isweak ( linkage ) return true for weak function .
updated multiple Java files related to XShareAuto , LoadClassNegative , XCheckJSig , and ReadFromNoaccessArea to improve code organization
test : add thread - local test for defaulttransactionthreadlocal
added a check for invalid OperationHandle in HiveStatement . java to improve error handling and logging for server - side operations
rename ALTER _ TABLE _ ALTER _ COLUMN _ NULL to ALTER _ TABLE _ ALTER _ COLUMN _ DROP _ NOT _ NULL
camel - aws - secrets - manager : add integration test for aws - secretsmanager endpoint
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed exception message from the return statement in UserREST . java to simplify error message formatting for better readability
added a boolean parameter to the ` fromContent ` method and modified the ` Result ` constructor to include a subTree parameter to enhance functionality by
update column width calculation in Sheet . java and add a test for column width in TestHSSFSheet . java to ensure consistent column width
added a configPath parameter to the less command in Builtins . java to enable configuration management for less commands
changed the type of ` tables ` and ` weakAssociations ` from ` Set ` to ` Collection ` in ` DotWriter . java ` and
upgrade sshd container image from 1.0 . 0 to 1.0 . 0
removed an assertion check for hostId in AgentManagerImpl . java to ensure that assertions are only executed when hostId is not null
refactor rawKey initialization in DefaultGroupKeyGenerator to use BlockSingleValIterator for better clarity to improve code readability and maintainability
lucene - 4892 : fix testmultimap . testseek ( ) to catch eofexception
refactor IngredientStack creation to use IngredientNBTBC for building the input set to improve code clarity and
renamed the method ` put ` to ` putObject ` in ` GraphHopperConfigMixIn . java ` to improve clarity by
modified visibility logic in CellLayout and refactored drag - and - drop handling in Workspace to improve code clarity and maintainability by encaps
updated ModifyRequestBodyGatewayFilterFactory to use original body as the rewrite function and added a new test for upstream request bodies to ensure that the rewrite
added a check for package - accessible modifiers in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure that only package - accessible types are
changed log level from warn to trace in LoggingHandler . java to provide more detailed logging information for better troubleshooting
fix whitelisting of wildcard ( # 348 )
added Showcase support and improved gallery options handling in GalleryActivity to enhance user experience by providing access to image uploads in the gallery
refactor MongoDBServiceFactory to create a singleton service instance only once to improve performance by avoiding repeated service creation
added tests to prevent code formatting for boolean values in InlineConstantMutatorTest to ensure correct formatting of boolean values during code formatting
added a Blackhole parameter to the decode method in RecordTest . java to enable handling of double and integer values during testing
chore : update gapic - generator - java with mock service generation fix ( # 7 )
[ knx ] do n ' t add dpt unit if it ' s not applicable to group address
removed the call to ` dbManager . getWitnesses ( ) . clear ( ) ` in ` ManagerTest . java ` to streamline
improve error message when jdbc connection abort
replaced the method for setting the stack property in NativeError . java with a utility method for retrieving and setting the stack property to improve code
added a condition to check if the path name starts with " . " in DrillPathFilter . java to ensure proper handling of file paths
rename ` onboard ` to ` autoload ` in ` ThirdEyeAnomalyApplication ` and ` ThirdEyeAnomalyConfiguration
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared after each test execution
updated the BOLDWEIGHT _ NORMAL constant from 190 to 0x190 to correct the constant value for better compatibility
changed fThreadGroup to be volatile and modified fLookForStuckThread and fLookForStuckThread methods to improve thread safety and
reformatted the constructor and setter methods in ValueResultData . java to improve code readability and maintainability
updated hash code calculation and comparison logic in FuzzyQuery . java to ensure correct behavior when comparing objects and avoid null pointer exceptions
removed debug print statement from PushedResourcesTest . java to clean up the test output and improve readability
changed method signatures from ` removeFile ` and ` removeDirectory ` to ` void ` in ` SharedOpenFilesCache . java ` to enforce
updated JDBC driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated ` retrievePersonAttributes ` and ` buildResolvedPrincipal ` methods to initialize ` attributes ` with a default value of ` 0 ` to ensure
changed log level from info to warn in OpenWebNetBridgeHandler . java from info to warn for missing parameters to provide more detailed logging for
updated method names from ` intHash ` and ` longHash ` to ` hash ` across multiple classes to standardize method naming conventions and
added a constructor to ThumbnailGenerationTask that initializes the storage manager , account , and image view references to ensure that the storage manager is not
updated the condition for stopping the loop in GroupSelectionQuery . java to allow for more robust control over iteration conditions
added a new file ` Bug1933922 . java ` that implements a programming system with multiple threads to demonstrate and
removed unnecessary parentheses from comparison conditions in multiple classes to improve code readability and maintain consistency
updated control character validation from 33 to 32 in FileResolver . java to ensure space characters are correctly validated for control characters
added a call to requestFocus ( ) in the Display class to ensure the component receives focus when necessary
update instructorhomepageuitest to cover new instructor home page
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to improve clarity and consistency in naming conventions
refactor Crouton handling in DetailFragment and MainActivity to improve clarity and functionality to enhance user experience by ensuring Crouton is
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to validate schema queries and fetching with unrelated templates to ensure
refactor Dialog class to improve code structure to enhance maintainability and readability of the dialog functionality
replaced ` Runtime . getRuntime ( ) . exec ( args ) ` with ` ProcessBuilder . start ( ) ` in ` SourceCompiler .
update HintedHandOffTest to use InetAddress . getByName ( " 127.0 . 0.1 " ) instead of getLocalHost (
refactor controller and base handling in Metrics . java to improve clarity and structure to enhance maintainability and readability of the code
added assumptions to the DaemonLifecycleManagerTest and InstallCommandIntegrationTest classes to ensure tests are only executed on macOS devices
make jvmciversioncheck . java require a property , not just a property .
refactor Mockito class to improve code readability to enhance maintainability and facilitate future development
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage
updated BinaryParser , PlainTextParser , and ParsingExecutionContextView to utilize the context ' s charset instead of a direct source to improve
added a new ` MultiPartFormDataCompliance ` enum and its associated getter / setter methods in ` HttpConfiguration ` and ` Request ` classes to
added GradleVersion . version ( " 7.2 " ) to GradleDistributionManager . java to support JDK - 17 for
added a method to add types based on class types and refactored type addition logic in SnapshotControl to improve code readability and maintainability
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
modified return statement to handle null or empty runWith values to improve robustness by handling cases where runWith is null or empty
http : / / issues . apache . org / activemq / browse / amq - 4892 - add test for amq
refactor AudioDeviceInfoBuilder , MediaCodecInfoBuilder , NativeInput , ShadowActivityManager , ShadowLegacyMessage , and ShadowTextUtils to
pdfbox - 417 : do n ' t fail the test if the image be too large
refactor TaskView to use a variable for tintAmount instead of modifying it directly to improve code readability and maintainability by reducing
added a new file ` SumZeroFunctions . java ` and modified ` SumZeroAggr . java ` to implement aggregation functions for sum zero
[ hotfix ] [ table - planner - blink ] remove not null from non - signed long function
hbase - 15936 bucketcache . getallocationfailwarningmessage ( ) should print out the table name , cf , and hfile
added a null check before setting the property value in JDBCRoleService to avoid potential NullPointerExceptions when propName is null
updated visibility annotations and methods in StatusBarTouchController , RecentsView , and TestLauncherViaGestureTests to improve testability and
added a new method ` logContainerStream ` to ` DockerClient ` to control the logging of a container ' s stream status to enhance container
mvstorecacheperformancetest : add performance test for cache performance
updated the LONG type from " L " to " J " in PrimitiveType . java to reflect the correct data type being used
changed the access modifier of the delegatingApplicationListener method from public to static to allow access to the delegatingApplicationListener instance from other classes
camel - 14263 : camel - rest - rest should not set message body to null in case of error .
added a new file ` FileDeletingTasklet . java ` and ` TaskletJobFunctionalTests . java ` to implement a tasklet
g3d - 335 : do n ' t update size keep drawables when create view for plane
updated bitwise operations in BitUtil , Int2IntCounterMap , and Int2IntHashMap to handle out - of - bounds values to improve
updated methods to use ` sendStateEventToTest ` instead of ` sendEventToTest ` for state events to improve event handling consistency and
added user agent check for video thumbnail requests in RequestHandler and RequestHandlerV2 to ensure proper handling of video requests based on the renderer ' s L
updated error handling logic in ErrorCheckerService . java to handle cases where PDE lines start or stop offsets are invalid to improve user experience by
updated the SideMenuBar title layout to conditionally include the openButton based on the theme settings to enhance button visibility based on user preferences for
added preload = " libskia " to the Skia . java file and modified the value and link properties in Skia . java to
add support for the unittestnet network parameter in the networkparameters .
added error handling for format arguments in QueryCommand and created corresponding tests in QueryCommandIntegrationTest to ensure that invalid format arguments are handled correctly and
replaced ` capacity ` with ` length ` and updated related references in ` IntIterator . java ` to improve clarity and consistency in variable
updated the ` walkRuleAndAdd ` method to include a ` srcTarget ` parameter and modified its logic to conditionally visit dependencies based on
patchmodulefilemanager : fix class _ output location when source override
[ java ] remove protocol version check for election . candidatetermid check .
modify OwnCloudClientManagerFactory to set default policy based on SAML authentication type to ensure proper client configuration based on authentication type
added null checks for mappedTableResource in ReadBatch and WriteBatch classes to ensure that a mappedTableResource is required when building ReadBatch and
close jms connection in onmessagesubscriber , receivesubscriber , jmssampler and jmssreceiver when the connection be close
refactor ` AnonymousAuthenticationFilter ` to use a ` Supplier < SecurityContext > ` for context management to improve flexibility in setting the anonymous security
modified the ` removeActor ` method to include an additional parameter for unfocusing to enhance actor removal functionality by allowing unfocusing based on
refactor prompt logic to use a variable for valid configuration strings to improve code readability and maintainability by reducing redundancy
added logging functionality to the NettyHttpServer and RoutingInBoundHandler classes to enhance logging capabilities for better debugging and monitoring
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replaced ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` in ` CodeDependenciesPanel . java
camel - 14850 : camel - groovy should use the language ' s script to load the script instead of the shell to load the script
replaced List with Set for resolving artifacts in DefaultPluginManager . java to improve efficiency and clarity in artifact management
[ hotfix ] [ cli ] make constructor of cliutils public
renamed ` ShadowSharedPreferencesEditor ` to ` TestSharedPreferencesEditor ` and added a new test class ` TestSharedPreferencesTest ` to
removed storage alias retrieval and certificate chain retrieval from HttpsMessenger to streamline certificate management by eliminating unnecessary code
danielwagnerhall : do n ' t throw classcastexception if the response be not a json response .
changed the access modifier of the ` updateImage ` method from private to protected in ` ImageButton ` and ` ImageTextButton ` classes to
add block . dropresources ( ) and block . dropresources ( ) ( # 6240 )
added native methods for spatial location calculations in DataOutputQueue and depthai classes to enhance functionality for spatial location calculations in the application
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replaced keySet ( ) . isEmpty ( ) with a dedicated isEmpty ( ) method in TreeTrie . java to improve code readability and maintain
updated foreground and background methods in AttributedStringBuilder to include r , g , and b parameters to improve rendering accuracy by aligning foreground and background
added a condition to disable fingerprinting based on a system property to enhance synchronization control by allowing fingerprinting to be disabled by default
changed the access modifier of the moveFunds method from private to public to allow access to the moveFunds method from other classes
updated MongoTemplate to emit BeforeConvertEvent and added context handling for PersonWithIdPropertyOfTypeUUID in tests to enhance event tracking and ensure proper
refactor collectionitem . readdata ( ) and collectionitem . writedata ( ) to writeobject ( ) and readobject ( ) to
added null check and closing logic for the input stream in TikaCLI . java to ensure proper resource management and prevent potential memory leaks
replaced ` ApiBag . ExceptionWithErrObject ` with ` ApiException ` in ` TestCollectionAPIs . java ` to improve error handling
removed unnecessary whitespace in OptionsParser . java to improve code readability and maintainability
updated log message formatting in InstructorFeedbackAddActionTest . java and InstructorFeedbackCopyActionTest . java to improve clarity of log
[ hotfix ] fix checkstyle violation in externalworkerservice
removed the ` step ` property and related methods from ` HmDatapoint ` and ` DisplayTextVirtualDatapoint ` classes to simplify the
added logging statements for acquiring and releasing shared and exclusive locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve cl
removed duplicate call to scheduleJobs ( ) in BaseSchedulerServiceImpl . java to streamline the code by eliminating redundancy
simon : fix flaky test in testgettextcontent
refactor Logger to use ThreadLocal for thread - safe logger management to improve thread safety and maintainability of logger management
added @ VisibleForTesting annotation to FunctionInitializer and modified FunctionInitializerTest to use MockitoJUnitRunner instead of JMockit to improve test
added a method to box primitive types and modified type checking logic in various classes to improve type handling and ensure proper handling of primitive types
updated task view orientation handling in RecentsView and removed unnecessary toast initialization in TaskView to improve user experience by ensuring the correct task view
replaced stream processing with direct retrieval of regions from the cluster to simplify code and improve readability by eliminating unnecessary stream processing
added logic to clone the repository and delete a new contract address in TransactionExecutor . java to ensure that changes to contract details are reflected in the
replace TOKEN _ ISSUE _ FEE constant with repository . getDynamicPropertiesStore ( ) . getAssetIssueFee ( ) in TokenIssue
refactor texture cache management by replacing apMap and texCache with URI maps and introducing a clearCache method to improve texture management efficiency and
refactor Blit and Bug7049339 classes to improve readability and maintainability of the code to enhance code clarity and
added support for unselected text style in the Component and Label classes to improve text alignment based on user - defined styles
updated ArrayList initialization to initialize with a dynamic size of 0 instead of an empty list to improve memory efficiency by avoiding unnecessary object creation
removed the ` flags ` parameter from multiple methods in ` ShadowApplicationPackageManager . java ` to simplify method signatures by eliminating unnecessary parameters
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
add mp4 _ sample _ with _ increasing _ timestamps . mp4 to the list of test
refactor TradfriGatewayHandler to improve firmware upgrade warning handling to enhance clarity in warning messages regarding firmware version upgrade requirements
refactor AjaxElementLocator to improve code readability to enhance maintainability and facilitate future updates
updated layout logic in BoxLayout and DefaultLayout to include " table - cell " display to enhance layout flexibility by allowing different display options
refactor JsonDecoder to improve handling of JSON array structure and add a new test for reordering fields to enhance code clarity and ensure correct
[ hotfix ] [ core ] pass removalcause to blockcache . releaselocation ( )
added JUnit @ Ignore annotation to SavepointTestBase . java to temporarily disable tests during development
added multiple @ Test annotations to DroolsMvelParserTest . java to ensure proper testing of DroolsMvelParser functionality
[ type : fix ] fix checkstyle violation in contextregisterlistener
refactor ObjectHashSet to initialize the iterator with a cache option and improve initialization logic to enhance flexibility in object set initialization and ensure consistent behavior
added batchBytes handling in SparkReduceRecordHandler , ReduceRecordSource , and VectorizedRowBatch classes to ensure batch size accurately reflects
updated context modes from MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE in AppSettings and Update
updated logging messages in JdbcProxyGenerator to clarify that close ( ) is called after already close ( ) or abort ( ) ed to
updated the method to retrieve animation to use mState instead of getState ( ) and added important for accessibility based on state to improve animation
changed log level from warn to debug for malformed edits in ProtobufLogReader . java to provide more detailed logging for debugging purposes
refactor scope handling in UaaTokenServices and add a test for persisting revocable tokens in UaaTokenServicesTests to ensure
updated import statements in SchemaRetrievalOptionsBuilderTest . java and added a toString method in AvailableJDBCDrivers . java to improve code clarity and
( chore ) camel - kie - api : add executablecommand interface to facilitate command execution with a context
( chore ) camel - itest - jdbc : remove unused jdbctableservice
added padding methods to CellLayout and modified Bitmap creation in Launcher to improve layout handling for portrait orientations
added a conditional check for the presence of a StringBuilder before filtering candidates in LineReaderImpl . java to improve robustness by avoiding unnecessary filtering
refactor ` SamlMetadataUIParserAction ` and related classes to use ` Action ` instead of ` SamlMetadataUIParserAction `
added a method to check for open LDAP ports in LdapMockMvcTests . java to ensure that the LDAP processes have available ports before proceeding
log4j2 - 1343 use 0 instead of - 1 for executorservice shutdown timeout
refactor URL handling in Fetcher and HTMLMetaProcessor to improve redirect handling and refresh logic to enhance code clarity and ensure proper handling of
updated SolrQuery to use " name : samsang " instead of " * : * " and modified assertions in TestSpellCheckResponse
updated Console initialization logic to use a dynamic constructor based on the type of the Console class to improve flexibility in handling different Console API implementations
changed the visibility of the ` getVerticesColors ` method and modified the initialization of ` mCol ` in ` MeshHelper . java ` to
added file filtering and modified directory copying logic in HTMLReportGenerator . java and HTMLReportGeneratorTest . java to enhance file filtering capabilities and improve
renamed test methods and updated test parameters in DataValidatorTest . java to improve clarity and consistency to enhance test readability and maintainability
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added null check for bindStatus in FieldUtils . java to ensure proper error handling when an expression is executed outside the adequate context
removed debug print statement from JoglInput . java to clean up the output and improve readability
added a flag to allow extracting private fields and updated the readField method to accept it to enhance flexibility in field extraction by allowing users to
replace " { name } " with device . getName ( ) in WebDataHandler . java to improve clarity and consistency in device name representation
refactor lookup constructor initialization in Platform . java to use MethodHandles . lookup ( ) to improve flexibility in creating instances of Lookup based on
deprecated the ` weights ` method and added a ` weightsByDouble ` method to ` ZParams ` to enhance functionality by allowing weights to be
added a Database parameter to the writeCustomHTML method across multiple writer classes to enhance functionality by integrating database - specific functionality
updated assertions in BTreeMap . java and removed unnecessary casts in key deserialization to improve code clarity and ensure proper deserialization of keys
updated exception handling in CancelDeferredTransactionContractActuator , UpdateDeferredTransactionContractActuator , and TransactionTrace to include BalanceInsufficientException to
[ netbeans - 4892 ] fix zero file write in abstractlongmap
refactor logging and message sending in ChangeSet and Main classes to use UI messages instead of standard output streams to improve error handling and streamline
updated the buffer size from 14 to 13 in HortonworksEncodedSchemaReferenceStrategy . java and modified the write method in Horton
added import statements for ChunkListener , ItemProcessListener , and ItemReadListener in multiple Java files to enhance event handling capabilities for batch processing
refactor code formatting and improve readability in AbstractProviderModule . java to enhance code clarity and maintainability
updated print statements to use ` title ` instead of ` doc . get ( " title " ) ` in ` SearchFiles . java ` ,
refactor Test7005594 class for improved readability to enhance maintainability and ease of understanding
improve error message when resource validation fails
refactor TopKRollupPhaseOneJob class for improved clarity to enhance maintainability and readability of the code
server : fix npe when map ip address to vm
fix ( gamepad ) : allow modifier digital trigger
refactor ` iteratesOverSequence ` and ` iteratesOver ` methods in ` IterableSubject ` and ` IterableTest ` classes to improve clarity
camel - 14284 : camel - core - optimize url decode to avoid array out of bound exception
added assertions to verify the number of instances returned from native queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure that the system correctly
added a new ` LargeValueFormatter ` class and modified the calculation of ` val ` in ` BarChartActivityMultiDataset ` , and
replaced hardcoded character ' z ' with a constant INNOCUOS _ CHAR and modified the handling of prevTwoChars to improve code
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to eliminate unnecessary warnings related to incompatible argument types
removed unnecessary whitespace in the printLir method call to improve code readability and maintain consistency
added a TODO to the Auto - generated method stub in NullAssertionValidator . java to address the TODO issue associated with the method stub
added import for RuleKeyAppendable and updated rule key appending logic in DefaultRuleKeyBuilderFactory to ensure proper handling of RuleKeyAppendable instances
added a check for the existence of the system profile directory and refactored test setup and teardown methods in multiple test classes to ensure the system
refactor thread factory creation in TestcontainersDockerCmdExecFactory to use a dedicated createThreadFactory method to improve code readability and maintainability
refactor HttpChannelOverHTTP and HttpReceiverOverHTTP to encapsulate message counting in a separate method to improve code readability and maintainability
added a line to set the " accept " attribute to " image / * " in the ImageFileInputDialog to enhance user experience by allowing
replaced NodeBuilder with PreBuiltTransportClient and updated client initialization in ElasticIndexWriter . java and TestElasticIndexWriter . java to improve
added additional information about witnesses and their class names in ForkController . java to improve debugging by providing clearer information about witnesses and their
added a new file ` NullPointerAndEmptyArrayTest . java ` that tests null pointer and empty array behavior to demonstrate the
refactor ` findConfiguredGeneratedSourcePathsUsingDeps ` method to utilize dependency mapping for generated source paths to improve code clarity and maintain
updated UaaStringUtils to include a new method for constructing wildcard patterns with a character delimiter to enhance flexibility in handling wildcard patterns with special
hive - 14850 : vectorizer should not fail validation if more than one tablescanoperator alias be use ( sergey sh
updated MockitoJUnitRunner import from Mockito . runners to MockitoJUnitRunner in WeatherQueryTest . java to align
added error handling for firmware setting updates in TinyGFirmwareSettings . java to improve robustness by logging errors when setting firmware settings
replaced specific imports with a wildcard import and modified the getLangs method to return a Set instead of an array to enhance code readability and
updated import statements and assertion logic in LazyTraceScheduledThreadPoolExecutorTests . java to streamline dependencies and improve readability of test code
hbase - 15936 takesnapshothandler should acquire table lock before load table descriptor
[ j2kt ] add support for implementfinallyviacontrolflow and rewritereferenceequalityopportunity .
added a test for verifying the modifications of the HTTP RPC endpoint in DockerQuickstartTest . java to ensure that the HTTP RPC endpoint is
added a ` isSuspended ` field and modified thread state handling in ` Thread . java ` and ` Test _ Thread . java ` to ensure
updated Javadoc visitor methods to replace Author and Since with Hidden and Serial in Java 11 and ReloadableJava8 to improve clarity and consistency in
( chore ) camel - spring : fix npe when there be no camelcontextid
removed multiple redundant @ Override annotations from multiple security - related classes to improve code clarity and maintainability by eliminating redundancy
added module import handling in Java2TypeScriptAdapter and updated test assertions in EnumTests and ComplexEnumsAccess to improve module management and ensure
updated the language string from XMLConstants to " http : / / www . w3 . org / 2001 / XMLSchema " to ensure
added content description handling for badges in BubbleTextView to improve user experience by providing clearer notification descriptions
added MouseWheelListener to handle mouse wheel events in TestMouseWheelScroll . java to enable proper handling of mouse wheel rotation in the
added closing of PDDocument resources in the VisualTester and added a new test for positioning absolute in VisualRegressionTest to ensure proper
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to align
replaced instances of ` VacuumEnvironment . Location . A ` with ` VacuumEnvironment . LOCATION _ A ` and
removed conditional currency assignment for bitfinexSymbol in BitfinexAdapters . java to simplify the code by directly returning the currency string
replaced ` Sets ` with ` ImmutableSet ` and refactored default value handling in ` JsonFormat . java ` to improve code clarity
added handling for array and enum types in JacksonXmlFormatMapper to ensure proper serialization of arrays and enums in JSON format
updated constants and variable assignments in VirtualThread . java to improve clarity and consistency to enhance code readability and maintainability by using more d
updated the ` DirectoryTaxonomyWriter ` and ` NameIntCacheLRU ` classes to include a new ` NoOpCache ` implementation to improve
refactor VetoableChangeSupport class for improved clarity to enhance maintainability and readability of the code
adjusted the calculation of the y - coordinate in the BrowserContentPane to correct the vertical positioning of the content pane
pdfbox - 4892 : remove unnecessary exception from method signature , a suggest by valerybokov
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
do n ' t show the help button if the menu bar be open
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced Thread . sleep with ThreadHelper . waitUntil for controller state checks in BackendInitializerHelper and TerminalClient classes to improve responsiveness
updated the condition to check for exception and release status in SwingStartup . java to improve handling of update information based on exception and release status
added support for includeGeneratedFileComment configuration in DbMigrationConfig and updated MigrationXmlWriter to include a comment for generated files to enhance XML migration
updated argument descriptions from " < player > " to " < player | * > " in multiple Java files to enhance functionality by allowing player names
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused filters to streamline the codebase
updated method calls from " nameVariableName " to " optionName " in OptionProcessor . java to improve clarity and consistency in naming conventions
added a condition to check if the parallel class is equal to the PARALLEL _ CLASSES constant in TestNGContentHandler . java
[ issue # 3640 ] fix npe in routeinfomanager ( # 3641 )
refactor : remove static import of enums in ctmethodimpl . java ( # 3649 )
added serialVersionUID fields to multiple Java classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code clarity and maintainability
updated the ` shaBase64 ` method to include a separator parameter in ` ShibbolethCompatiblePersistentIdGenerator ` to enhance flexibility
updated the return statement to handle null values for SYSTEM _ ACTIONS _ ENABLED to improve robustness by preventing potential NullPointerExceptions
added a new file ` Person . java ` that contains a class ` Person ` with a name field to provide a structured way to store and
do n ' t pass btcutilities . getlocaladdress ( ) to gossiper . instance . start ( ) , because it
updated the way column labels are processed in AbstractClient . java to ensure consistent case - insensitive comparison for time strings
added assertions to verify the properties of ` timeColumn ` , ` timeUnit ` , and ` totalDocs ` in ` SegmentMetadataImpl ` to
replaced ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` and updated the foreground color
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to ensure
replaced ` getAnnotationNamesByStereotype ` with ` getAnnotationTypesByStereotype ` in ` DefaultBeanContext . java
danielwagnerhall : click on an element hidden by double overflow should be wait for the element to be visible .
added a try - catch block around the dismissDialog method call to handle potential exceptions when dismissing the dialog
added a mechanism to lookup the JTA TransactionSynchronizationRegistry using a system property to enable dynamic configuration of the JNDI location for transaction synchronization registry
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to simplify the interface by eliminating unnecessary functionality
renamed variable ` enabledCiphers ` to ` result ` and updated related logic for clarity to improve code readability and maintainability by
[ beam - 10625 ] fix bigquery timestamp type conversion ( # 10625 )
replaced ` IllegalArgumentException ` with ` requireNonNull ` for null checks in ` Identifiers . java ` and ` DatabaseConnector . java ` to improve
change variable name from ' input ' to ' inputMap ' for consistency to improve code readability and maintainability
added bounds checking for row and column parameters in FlightConfigurablePanel . java to ensure that row and column indices are within valid table dimensions
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness by
[ java ] unnecessarylocalbeforereturn : fix checkstyle issue
replaced the instantiation of ScriptEngineManager with a single instance of ScriptEngine to simplify the code and improve readability by eliminating unnecessary
simplified calculations in EuclideanDistanceSimilarity . java and updated assertions in EuclideanDistanceSimilarityTest . java to improve accuracy of
make datatracker . backupincrementally ( ) more thread - safe
refactor relativize method to accept two Path objects instead of just a single one to improve flexibility in relativizing paths by allowing
updated column size and decimal digits handling in ColumnSnapshotGenerator and DataType classes to ensure proper handling of null values for columnSize and decimalDigits
skip the current writer head file 1 . log . tmp in DeadLetterQueueWriterTest . java to improve test reliability by avoiding unnecessary
replaced ` ByteArray . toHexString ` with ` ByteArray . toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure consistency in
renamed ` ErrorHandlerController ` to ` Error403Controller ` and created new controllers ` Error404Controller ` and ` Error404ControllerTest
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal and Windows
[ netbeans - 4892 ] fix tiny . collections . toarray ( ) trigger with source version
refactor connection pool to use an iterator for removing entries instead of a single entry to improve efficiency and readability of connection acquisition logic
updated method names from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` in ` PasswordPolicyConfiguration ` and related classes
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils to include classLoader information to improve clarity of error messages for better debugging
added exception handling properties and updated thread join times in LargeStreamletTest . java to improve exception management and ensure proper thread termination
updated the logic to count and set the current item for extra pages based on user preferences to ensure that extra pages are correctly managed based on user
added error handling for Bitmap creation and image processing in AndroidImplementation . java to improve robustness by preventing image processing when Gaussian is broken
added @ SuppressSubnodes annotation and simplified return statements in BaseParser . java to improve code readability and maintainability by eliminating unnecessary
pdfbox - 4892 : use try - with - resources for dfparser initialization , a suggest by valerybokov
deleted the TestDocInverterPerFieldErrorInfo . java file to the test file is no longer needed for the project
added a shell command to input a key event 82 in AbstractLauncherUiTest . java and modified the assertion in LauncherInstrumentation . java
added JSON mapping for filename to URL in FileDumper . java to enable proper handling of URLs in the output directory
bugfix # 169272 - reset result notified flag on server shutdown
refactor texture loading logic into a separate method ` loadImage ` to improve code readability and maintainability by centralizing image loading logic
updated assertions in SpringBootTestContextBootstrapperIntegrationTests and SpringBootTestContextBootstrapperWithContextConfigurationTests to use " application " instead of
updated isbn randomizer ID from " 9781797745008 " to " 9781797845005 " in Randomizers
updated notification sound configuration to use a ringtone URI instead of a default URI to enhance notification sound flexibility by allowing dynamic ringtone
added a method to report loop count in the RootNode class to enable tracking of loop count in the call target
do n ' t log cluster version in finalizedupgradetest if it ' s standard
server : fix regionid to rangeid in listbyregionidandstatesearch
removed duplicate call to streamManager . open ( stepExecution . getExecutionContext ( ) ) in ItemOrientedStep . java to streamManager
added a new file CountedLoopProblem . java that demonstrates the performance of counting loops to demonstrate and validate the
[ gr - 23254 ] fix miss parameter in hotspotgraalruntime . getcompilertovm ( ) . executecompiledmethod (
[ gr - 23254 ] fix bug where pending _ failed _ speculation field do not exist .
replaced ` TransformerSupplier ` with ` ValueTransformerWithKeySupplier ` in ` KafkaStreamsTracing . java ` to enhance tracing capabilities by using
[ fix # 868 ] feedbacksessionsessionsummarysummarypage : add a new field ` ` received points ' ' to the response
removed the call to ` DynamicColors . applyToActivitiesIfAvailable ( this ) ` in ` BaseApplication . java ` to streamline the application
added stack dump functionality and improved thread termination handling in CloseRace . java to enhance debugging capabilities and ensure proper termination of child threads
updated return statement to use intValue ( ) instead of val in IntPointField . java and added assertions in TestPointFields . java to ensure
updated the arcSize variable from an integer to a double and adjusted the calculation for height calculations to improve the accuracy of the button ' s size
updated image size from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java to improve image
replaced ` minifySqlEnabled ` with ` shrinkWhitespacesInSql ` in ` SqlSourceBuilder ` and related configurations to improve clarity
replaced the existing ` waitForStateTransitionToEnd ` method with a new ` waitForState ` method in ` WorkProfileTest . java `
updated import statements in multiple test classes to include new configuration classes to enhance code clarity and maintainability by organizing configuration classes
replaced ` raf . readLong ( ) ` with ` DataIO . getLong ( buf , 0 ) ` and ` DataIO . getLong (
( chore ) camel - http : fix checkstyle issue in camel - http
refactor ClassPath handling in DeclarativeHintsParser to improve clarity and structure to enhance code readability and maintainability by using a
initialize audio and voice manager to null in defaultscriptscopeprovider
added methods to retrieve and set the layer manager in AnimComposer , AnimEvent , and TestJaime classes to enhance layer management
added a check to return early if the queue is empty in DeferredHandler . java and removed unnecessary methods in Workspace . java to improve performance by
added null checks for mapOp and mapWork in MapRecordProcessor and improved exception handling in TezProcessor to enhance robustness by prevent
refactor ` CylinderRegion ` to use ` center ` instead of ` center2D ` and update related methods to improve clarity
updated TestBadUseCases to use JUnit ' s ExpectedException instead of static assertions to improve test reliability by utilizing JUnit '
modified the sendOneQuery method to handle null parameters for subqueries and added a new test for multi - execution in StatementTest to improve robust
do n ' t log custom security environment if it ' s already set
added rctag = android% 20app% 20edit to the query in ReviewInterface . java to include additional context for the GET request
refactor test cases in Test . java to improve code readability and maintainability
updated the PBEKeySpec instantiation to use keyLength instead of blkSize to ensure the correct key length is used for encryption
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
pdfbox - 4892 : write section definition , a suggest by valerybokov
added distance detection for very large jump points and improved accuracy checks in GpsLoggingService . java to ensure stability by discarding points
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 49 )
replace boolean flags with Reference < Object > objects for rootNameFn , sourceFilterFn , and sourceFilterFnHash in InsightFilter to
simplified the addition of apps from data to added in AllAppsList . java to streamline the code by eliminating unnecessary binary
refactored SettingsActivity to extend PreferenceActivity instead of ThemedPreferenceActivity and removed the ThemedPreferenceActivity class to simplify the
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to accurately reflect the purpose of
updated assertion in FST . java to remove unnecessary whitespace to improve code readability and maintain consistency
added an assertion to verify that the security policy is valid to ensure that the security policy is valid before proceeding with further operations
camel - olingo2 - add miss getconfiguration ( ) method to olingo2component
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow for more time for recovery operations to complete
removed the exception parameter from the logging statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary information
added functionality to publish an image by HTTP using the XMPP client to enable users to publish images using the HTTP protocol
camel - 14284 : camel - netty - use channellocal instead of channellocal to avoid memory leak .
updated JDBC _ CLICKHOUSE _ PREFIX regex pattern and added corresponding test cases in BalancedClickhouseDataSourceTest to ensure correct URL splitting
disable jasper ' s compiler ' s disablejsr199 for now
added handling for null values in CSV format and configuration to ensure proper handling of null values in CSV records
added ` @ LiquibaseService ( skip = true ) ` annotation to multiple connection classes to skip the LiquibaseService for
updated cursor handling in VariableNameUtils to use JavaSourceFile instead of J . CompilationUnit to ensure compatibility with Java source files and improve code cl
fix event topic for item command and state trigger ( # 1193 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve exception
solr - 1748 : deprecate zkcredientialsprovider and add zkcredentialsprovider to solrconfig
fix mana tablet not show the mana bar when it ' s creative
set the identifier collection of mCurrentCallEvent in P25P2DecoderState . java to ensure consistent identifier collection usage during call events
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter in TestRandomChains . java to clean up the code
updated the thread pool executor name from " deriveKeyWithScrypt - % d " to " deriveKeyWithScrypt " to simplify the
refactor GeneratedCode class to improve code structure to enhance maintainability and readability of the code
added a parameter to the assertNotNull method for better clarity to improve error handling by providing a more descriptive error message
added visibility setting for the shareWithMeIcon view in LocalFileListAdapter . java to improve user experience by hiding the shareWithMeIcon
updated link URLs in LogoutPageGeneratingFilter , LogoutPageGeneratingWebFilter , and related classes from " http " to " https " to ensure
added @ NotNull annotation and modified header handling in RouterFilter and RouterServerListFilter classes to ensure non - null headers are handled correctly and improve
added debug information to the assertion failure message in TestIndexWriterMergePolicy . java to improve debugging by providing more context about the assertion failure
mark multiple classes as deprecated to indicate that these classes are outdated and should not be used in new code
added null check for context in CrawlerSessionManagerValve and introduced a new test for context awareness in TestCrawlerSessionManagerValve to
modify getJspApplicationContext to use AccessController for security checks to enhance security by ensuring JspApplicationContextImpl is only instantiated when security is enabled
refactor RocketComponentConfig to use minimum and maximum values for axis offsets and length calculations to improve accuracy in calculating the length based on component
removed Singleton annotation from NonceService and updated bind method in OpenIDAuthenticationProviderModule to ensure NonceService is only bound in single tier scope
updated the asynchronous method for updating child links in FileWrapper . java to improve code readability and ensure proper child link updates
refactor error handling and URL building in SpringCloudPlugin . java to improve code readability and maintainability
increased the delay duration in publishWithDelay calls from 100ms to 500ms in RetrievalBlockingMessageStoreTests to accommodate
do n ' t override shift code if it be always override
[ hotfix ] [ runtime ] fix zkleaderelectionmanager . isleader ( ) to be synchronized
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition in AbstractKerberosDescriptorContainer to check if the identity is a reference instead of a service name to improve the accuracy of
modified the ` newInstance ` method signatures to accept a ` noop ` boolean instead of ` AbstractCommandOptions ` to streamline the instantiation process by
added a sleep duration of 3000 milliseconds before catching IOException and InterruptedException to improve responsiveness during TCP record processing
modified the argument handling in PatchExtensionMethod . java to restore original arguments before modifying them to ensure that the original arguments remain unchanged after method calls
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` for managing libraries to improve
int - 1186 add support for ' apply - sequence ' and ' ignore - send - failures ' attribute to the router element .
added support for the x509 certificate publishing in the ClientKeyPublisher and JwkViewResolver classes to enhance security by integrating X.509
updated the handling of the reader array in QueryComponent . java to ensure the correct subReader is assigned based on the length of readers
replaced the existing ValueSourceParser with a new Double2Parser for " max " and " min " with Math . max and Math .
simplified the return statement in the Container class by removing unnecessary checks to improve code readability and maintainability
removed IOException declaration from the next ( ) method in TokenSources . java to simplify the method signature by eliminating unnecessary exception handling
cloudstack - 5339 : fix bug in insert user ( uuid be not unique )
updated CasMultifactorAuthenticationWebflowConfiguration and CasWebflowContextConfiguration to use @ Qualifier and ObjectProvider for flowBuilderServices to
updated PostgreSQL command settings and refactored table creation and execution methods in WriteJdbcPTest . java to enhance connection management and improve code cl
removed conditional check for the editor ' s laf preference before setting the UI look and feel to simplify the code by eliminating unnecessary
[ scb - 1341 ] fix npe in servicecomponenthostimpl . getdesiredstate ( )
simplified margin calculations in FloatingTaskView . java to improve code readability and maintainability
added a break statement in RootFolder . java and changed the status line in NavigationShareTab . java to improve control flow and provide user feedback
replaced the incrementing of threadId with a direct reference to ti . threadId in CPUCallGraphBuilder . java to improve code clarity and
ggb - 1346 use default toolbar instead of a hardcoded 0 ( 0 )
added NetworkAddressChangeListener interface and modified logging messages in HomeKitImpl . java to enhance network address management and improve logging clarity
replace lease retrieval logic with lease renewal time retrieval in TestHDFSEventSinkOnMiniCluster . java to improve clarity and
replaced ` Optional < SourcePath > ` with ` Optional . absent ( ) ` for ` prefixHeader ` and ` linkStyle ` to
added null check for exception message in ExceptionHandlerRegistryFactory and created a new test for handling fatal IOException with null messages to improve error handling robust
changed ` nextID ` to be ` volatile ` and modified the ` getSize ( ) ` method to return ` nextID ` instead of `
fix test which randomly fail on slow ci server
added HasSourcePath interface and updated related classes to implement it to enhance the functionality of SourcePath argument classes by integrating HasSourcePath functionality
replaced StringBuffer with direct string concatenation in IllegalArgumentException instantiation to simplify error handling by eliminating unnecessary string concatenation
added custom index field name for the " tag " facet in OrdinalMappingAtomicReader and updated test cases for facet counts to ensure correct
updated the calculation of milliseconds based on seconds and nanos in Instant . java and added a test for epoch milliseconds in TestInstant . java to improve
updated attribute retrieval in OGLESShaderRenderer and LwjglRenderer to use the name ( ) method instead of the direct attribute
added functionality to block update scripts in CopyPaste . java to improve user experience by preventing unnecessary updates
added a new file TestCMoveLimitType . java for testing character buffer operations to ensure correct handling of limit types in character buffer operations
reset temporal attributes in ChannelState and refactored audio packet handling in AudioPacketWaveRecorder and OverflowableTransferQueue to improve efficiency and
camel - 16400 : fix camel - sql - stored - template to work with java 1.6 .
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor console creation and version printing logic in Main . java and VersionCommand . java to improve code organization and maintainability by encapsulating version
refactor token validation logic in InputStreamBinder and NextcloudRequest to use a new method for hashing to improve code clarity and maintainability by
added EOFException handling in Http11InputBuffer . java to ensure proper error handling for malformed input
add unit tests for the DefaultGroupProvider class to validate the deletion behavior of non - existent group members to ensure that the DefaultGroupProvider correctly
( chore ) camel - aws2 - iotdb : remove unnecessary array creation
deleted the V2ReplicationProtocol . java file to remove obsolete replication protocol implementation for protocol version 2
replaced instances of ` compileTimeClasspathDeps ` with ` compileTimeClasspathSourcePaths ` across multiple files to improve clarity and consistency in
added new classes ` ConstructorArgsDemo ` and ` FinalDemo ` , and modified ` StupidFinal ` to extend ` StrictDemo `
make templatefeaturecollectionfactory thread - safe by use a threadlocal
updated the assertion in WriteResponseHandler to allow responseCount to be less than or equal to 2 * replication factor to ensure that the response count
added a null check for the index number in the ItemRowAdapter to ensure that the item is not null before proceeding with the comparison
corrected the spelling of " areAnchestorsShown " to " areAncestorsShown " across multiple classes to improve code readability
added a width check for minimum 12 characters in KBBase . java to ensure that the application does not exceed 12 characters for better user experience
updated equality check in ChangeLogParameters from ` = = ` to ` . equals ( ) ` and added a new test for value retrieval in
changed the visibility of loggers from static to final in LogFactory . java to ensure loggers are immutable and avoid accidental modification
updated return statement to use getBasePlot ( false ) instead of p to ensure that the returned plot is the base plot
( chore ) camel - rest - server : do n ' t log warn if directory do n ' t exist
added a boolean parameter ` sendStatus200 ` to multiple classes and updated related constructors to allow for control over the status of HTTP responses in the
added a condition to check if the comment length is greater than zero in the multi - line comment handling logic to ensure that multi - line comments
added file type association handling in BuckModule . java to ensure that all file types are removed from the file type association collection
replaced multiple import statements with a wildcard import and changed the return type of multiply methods from ToLong to ToInt to simplify import statements and
added RTM _ OS _ ERROR constant and updated related error messages in TestUseRTMLockingOptionOnUnsupportedCPU . java to improve
reformatted code for consistency and clarity in AccountsActivityTest . java to improve code readability and maintainability
refactor Player class to improve code organization to enhance maintainability and readability of the code
added a static import for ChannelTypeUID and a static method to mock it in AbstractModbusOSGiTest . java to facil
polyglotexceptionimpl : fix typo find by codespell on fossies . org
set the system context to null in AndroidTestEnvironment and added a reset method in ShadowFontsContract to ensure proper cleanup of the system context
added a ` toMillis ` method to ` TimeGranularity ` and modified ` PinotDataSourceDimensionFilters ` and ` PinotDataSourceMaxTime
refactor finally handling logic in ControlFlow . java to improve clarity and structure to enhance the handling of finally statements and ensure proper flow analysis
updated assertions in Assert . java to handle arrays with different sizes and improved error messaging in assertEquals to enhance error handling and provide clearer
added default cases for click type handling in WindowClickLogic . java to improve code clarity and ensure proper return values for unknown clicks
corrected the bitwise operation for index assignment in MeshBuilder . java to ensure proper handling of bit shifts in index calculations
nifi - 1778 : remove unused controllerserviceprovider reference in standardprocessscheduler
added support for Kotlin annotation processor parameters in KotlincToJarStepFactory and created corresponding tests in KotlinLibraryIntegration
updated RESCROLL _ DELAY to use PAGE _ SNAP _ ANIMATION _ DURATION and simplified page snapping logic in Paged
added permission check for shortcut host permission before querying shortcuts in the Launcher and DeepShortcutManager classes to ensure shortcuts are refreshed only when necessary ,
added a case for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to handle the reverse of history search functionality
added null check for core name in CoreAdminHandler . java and implemented a test for reloading null core in CoreAdminHandlerTest . java
added marker selection functionality to NearbyMapFragment to improve user experience by ensuring markers are removed when the map is closed
added a catch block to handle Throwable in FileSyncAdapter . java to improve error handling by printing stack traces when exceptions occur
refactor TestMemoryAwareness to use OutputAnalyzer for better error handling to improve clarity and robustness of memory management assertions
updated feed processing logic in FeedQueues . java to exclude heavy load feeds based on application settings to ensure that feeds are processed only when he
added playbackLooper verification in DefaultDrmSession and DefaultDrmSessionManager classes to ensure playback thread is on the correct thread to prevent
updated ` AndroidBinaryDescription ` and ` AndroidBinaryBuilder ` to use ` Locale . US ` for string conversion and added a method to set
updated XML MIME type from " text / xml " to " application / xml " in multiple test files to ensure compatibility with the application ' s
updated the instantiation of ` File ` and ` Configuration ` to use ` INSTANCE . confFile ` instead of ` configFile ` to ensure consistency in
updated the exit statement in the waitUntilReadyAndTimeout method from " sleep 5 ; exit 1 " to " exit 1 " to simplify the
updated IntMath and LongMath to use long for arithmetic operations in HiveExpandDistinctAggregatesRule . java to improve precision and prevent potential overflow in
added multiple checks for headless mode in the Toolkit class to ensure that HeadlessException is thrown when running in a headless environment
added a condition to check if the current recipe matches the furnace ' s world before executing the ExoflameFurnaceHandler
add move thread count to solversolverfactory and make it configurable
updated paths retrieval method in SearchBuilder and added a new test in FhirResourceDaoR4SearchNoFtTest to ensure correct
added a new test class ` Issue582Test ` to validate the functionality of a Pump source using a BTree key serializer to ensure
added multiple decimal overflow test cases in AbstractTestNativeGeneralQueries . java to ensure proper handling of decimal overflow scenarios in SQL queries
refactor LoadingCache class to improve cache management to enhance performance and maintainability of the code
added a rule to avoid non - constructor methods with class names in NamingRulesTest . java to ensure proper handling of non - constructor methods in
danielwagnerhall : add try - catch around staleelementreferenceexception in expectconditions .
refactor ViewExistsPrecondition to improve error handling and add a view existence check in DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator to enhance error
refactor DOMUtil class to improve code readability to enhance maintainability and facilitate future updates
added translation calculations in TaskViewUtils and implemented a method to log matrix values in Utilities to enhance animation performance and facilitate debugging by
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags and Rotation
added a new method ` walk ` to ` TempFSTTermsReader ` for reading arc nodes and updated ` TempTermOutputs ` to handle
added SolrQueryRequest parameter to the DocTransformer creation methods across multiple classes to support additional query parameters in the augmentation process
added null checks for post content and announcement content in SingleTableMySQLTriggerTest . java to ensure proper handling of NULL values during post insertion and
refactor FieldValueHitQueue to use a dedicated setComparator method for setting the comparators array to improve code clarity and maintainability by
phoenix - 1348 fix test failure in phoenixquerybuildertest
added Spark initialization to the init method in RequesterTest . java to ensure proper initialization before Spark execution
added methods to retrieve and save total storage pool , fees , limit , and used in DynamicPropertiesStore . java to improve handling of invalid
added ` NinjaProperties ` to the ` AssetsController ` and ` AssetsControllerTest ` classes to support streaming files from the source directory for
updated mapMark key retrieval to use getMapMarkKey method to improve code clarity and maintainability by using a more descriptive variable name
added TokenRewriteStream parameter to method signatures in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance functionality by allowing token rewriting during
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` FatalError ` to
refactor JxBrowserManager to use a local variable for the file path and improve logging messages to enhance code readability and maintainability by
added a check for the " AppVersion " property in IOSImplementation . java and updated method calls accordingly to ensure proper handling of application version
changed the method call from ` getBridgeUID ( ) . getId ( ) ` to ` getUID ( ) ` in ` Somf
( chore ) camel - aggregator : disable flaky test on github
replaced the default trust manager implementation with a dynamic keystore configuration in OpenWireConnectionTimeoutTest . java to improve flexibility and maintainability by
replaced instances of ` warnThenDebugLogger ` with ` stackTraceWarnThenDebugLogger ` and introduced ` nanGaugeWarnThenDebugLogger `
added a line to remove a session ID from sessionIdToSessionInfo to ensure proper management of session information associated with a specific session ID
added a check to set the hostname if it is null in the HeartBeatHandler and improved logging in AlertReceivedListener to ensure
simplified the buffer clearing logic in ChannelEndPoint . java to improve code readability and maintainability
[ drools - 5892 ] move kmodule . xsd from kie - api to kie - api
added unit tests for seekTo functionality in ShadowMediaPlayerTest and implemented seekTo method in ShadowMediaPlayer to ensure correct behavior of seekTo
rename method ` createTask ` to ` createThrowingTask ` across multiple classes to improve clarity and consistency in method naming
added AQUA LAF border settings for tab close button in CloseButtonTabbedPane to improve visual consistency for AQUA LAF
added connection and read timeout settings for POST requests in TSPTimeStampService . java and modified test assertions in TestSignatureInfo . java to improve
add support for wildcard type permission in the xstream creation method ( # 2321 )
added error handling for diamond types in ` ppp Attr . java ` and created a new class ` DiamondRaw . java
[ calcite - 2852 ] fix typo in reloptutil . gettargettype ( ) and reloptutiltest . get
updated argument checks in Http2Settings . java to use ' && ' instead of ' | | ' for clarity to improve readability and
deleted the MapInterfaceTest . java file to the test file is no longer needed for the project
added error handling for session operations in SessionsPoolTest . java to ensure that disposed sessions are not operated on a disposed session
added a start / end root object for the " type " property in GeoJsonWMSBuilder . java to ensure proper JSON structure for the
simplified the method for setting the selected index in PopupMenuButton to improve code readability and maintainability by using primitive types
added a method to check if the app can temporarily unstash in the TaskbarStashController to improve user experience by preventing unnecessary stash
( chore ) camel - route : remove unnecessary custom id check
modified the ` getEventMismatchMessage ` method to accept a boolean parameter for waiting for expected events to enhance flexibility in event mismatch messages by allowing
added a new file HeaderFixer . java to process and write header files to a specified directory to ensure that the header file is correctly formatted
added broadcast functionality for first load completion in Launcher . java and updated app widget binding in LauncherProvider . java to improve user experience by
deleted the file SuperJumperAndroid . java to the class is no longer needed in the project
updated the return value in SystemTableScan to check if the table is distributed and modified the query string construction in TestStarQueries . java to
removed KeyValuesProviderAware and ObservationConventionAware interfaces to streamline the code by eliminating unused interfaces
add miss block / item to the list of remapped block / item in the registry manager ( # 3649 )
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to cast the index to long to ensure correct handling of integer values
added caching for last date format retrieval in HSSFCellStyle . java to improve performance by avoiding repeated calls to getDataFormatString
updated the URL in RemoteAuthenticationEndpointTests to include a username filter to enhance filtering capabilities for users based on their username
change the condition from ` needsInput ( ) ` to ` finished ( ) ` in ` DeflateCompressor . java ` to ensure
updated logging configuration in Launcher . java to include ContainerInfo and WorkspaceContainer to enhance logging clarity for the launcher exit process
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
deleted the DeadlockTest . java file to remove unused test code that is no longer needed
added null check for newInput and improved marker existence handling in BugContentProvider . java and BugGroup . java to ensure proper handling of
added a new JMenuItem to reopen the server in the browser and modified the startServerItem and stopServerItem methods to enhance user experience by
added a new error message for multi - output scenarios in ErrorMsg . java and improved error handling in SemanticAnalyzer . java to ensure that
added null checks for the addEntryListener method in BasicTest . java to ensure proper handling of null parameters in the addEntryListener method
fix coordinatearraystest , add reverse ( ) test
removed redundant whitespace in the setOpen method call to improve code readability and maintain consistency
added a boolean variable ` first ` with a value of ` false ` in ` TestPayloads . java ` to track the state of the
replaced the method ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in the ` Launcher ` class to
added a call to set the destination of a message in NetworkRouteTest . java to ensure that the destination is correctly set for the message dispatch
change return value from Integer . MIN _ VALUE to Integer . MAX _ VALUE in MessageHandlerInterceptorDefinition . java to ensure proper handling of integer
refactor variable declarations in NestedArithmeticTest and AMD64FloatConvertNode for consistency to improve code readability and maintainability
updated HttpClientRequestImpl and HttpTest to improve buffer handling and padding functionality to enhance performance and correctness of buffer management in HTTP requests
updated artifact replacement from " analysis - " to " ( ? < ! solr - ) analysis - " in GetMavenDependenciesTask . java
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
removed debug print statement from ReferenceUtil . java to clean up the code and improve readability
add visiblefieldpredicateenvironment to support visibility of query
added configuration parameters for JSON - RPC HTTP server ports and enabling / disabling HTTP connections to enhance flexibility and control over JSON - RPC
added a check to ensure the folder is an instance of DropTarget before removing it to prevent potential ClassCastException when attempting to remove a non - Drop
refactor stub jar creation logic into a separate method ` createStubJar ` to improve code readability and maintainability by encapsulating the creation
added new feature descriptions for Setup wizard and Workflow in StartPageTopComponent . java to enhance user understanding of hardware setup and workflow functionality
[ hotfix ] [ cassandra ] fix checkstyle violation in cassandradaemon
simplified the null check for available in OnlineTestCase . java to improve code readability and maintainability
updated return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository to accurately reflect the intended return values for user authentication
refactor timeout handling in HttpChannelState and add failure listener in HttpChannelTest to improve error handling and ensure proper failure callback execution
modified the CreateEndPoint class to extend Invocable . NonBlocking instead of Runnable to enable non - blocking operations in the endpoint creation process
refactor TABLE _ HEADER _ SEPARATOR regex to use a constant for better readability and maintainability to improve code clarity and maintainability by
change the return value from 32.0 f to 31.5 f in the Camera class to improve the accuracy of the camera ' s position
added a preference to disable the start on - boot setup feature in GpsSettingsActivity to improve user experience by providing clearer feedback on the
updated the client secret size in DefaultOAuth2ClientDetailsEntityService from 128 to 512 to optimize memory usage for client secret generation
updated error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include a parameter specifying whether to pass null parameters to ensure that null parameters
added JUnit Ignore annotation to ScheduledMethodMetricsTest . java to mark the test as ignored due to race conditions
updated the ` getInputPinotFS ` and ` getOutputPinotFS ` methods to return ` PinotFS ` and added null checks for
added locale - specific date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure consistent date formatting based on the application ' s locale
added MetalLookAndFeel import and set UIManager look and feel in bug8032878 . java to enable Metal
refactor ping task handling and message sending in Bot . java to improve thread safety and ensure proper shutdown of scheduled executor service
updated the error message in the GlobalErrorHandler to include throwable instead of throwable . getMessage ( ) to improve error handling by providing more context in error
refactor method parameter names from ` module ` to ` from ` in ` ModuleTable ` , ` PackageTable ` , and ` ModulesHelper
added handling for CmdLineException in PinotAdministrator . java to improve error handling for command line exceptions
replaced the superclass implementation of ` super . equals ( ) ` with ` isEqualTo ( ) ` and added a deprecated ` hashCode ( )
updated popup menu visibility and improved readability in CustomPlaybackOverlayFragment . java and ImageButton . java to enhance code clarity and maintain
updated zoom levels in mapView and mvp controls from low to high to improve user interface responsiveness by reducing zoom levels
refactor admin user and group retrieval logic in DrillRoot . java to utilize ImpersonationUtil for process user and group information to
replaced AccessController . checkPermission with sm . checkPermission in UnixFileSystemProvider and WindowsFileSystemProvider , and updated permission assertions in CheckPermissions . java to
added an ArgumentExtractor parameter to the DelegatedClientAuthenticationAction and related classes to enhance service resolution by allowing additional argument extraction options
changed the ` defaultGroup ` variable from non - final to final in ` NacosServerRegisterRepository . java ` to ensure that the
tilesizechanger : use destroytilecaches ( ) and createtilecaches ( ) to clear the cache
removed unnecessary calls to ` removeAllViews ( ) ` in ` CustomPlaybackOverlayFragment . java ` and ` InfoLayoutHelper . java ` to
refactor cleanFeedsWithoutSubscriptions method to improve clarity and structure to enhance code readability and maintainability by encapsulating cleanup logic
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to stream
nifi - 1778 : fix filebasedclusternodefirewalltest to use temporaryfolder instead of file
make conic fan point calculation more robust .
added braces to ensure proper block structure in RandomAccessReader . java to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations to Fields . java and MockitoBeforeTestNGMethod .
added methods to convert images from arrays and lists to CImage objects to enhance image processing capabilities and improve memory management
removed the import of WritableByteArrayComparable and replaced it with ByteArrayComparable in MapRDBFilterBuilder . java to simplify the code by
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple classes to improve clarity and consistency in
replaced direct null comparisons with ` Objects . equals ` in multiple classes to simplify code and improve readability by using built - in ` Objects
updated method names from ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and added nullability annotations to improve clarity
added verification for various Ninja property values in NinjaDefaultTest . java to ensure proper handling of internal server error , bad request , and
renamed ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations in ` DeviceProfile ` and ` In
updated padding values in DetailFragment and ListFragment , and adjusted listViewPositionOffset in ListFragment to improve layout consistency and adjust positioning for
updated exception handling in ZkStateReader . java to include InterruptedException and improved logging messages to enhance error handling clarity and provide clearer
added null checks for field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure proper handling of
add a check to ensure that the static nat service be support in the specified network id , to avoid npe .
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added a call to remove extra empty screen in the workspace to improve user experience by removing unnecessary screen elements
added fixed width support for glyph alignment in BitmapFont to enhance text alignment based on font characteristics
removed the ` showTitle ` parameter from the ` createFragment ` method and its usage in ` ChangeLogFragment ` to simplify the fragment creation
added preEvent , preTransition , and postTransition methods to AbstractStateMachineFactory to enhance state machine interceptor functionality for better event processing
refactor ConfigDescriptionProvider class for improved clarity to enhance maintainability and readability of the code
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf handling in StorageBasedMetastoreTestBase and TestStorageBasedMetastore
refactor sorting logic in FacetComponent to use a boolean variable for clarity to improve readability and maintainability of the code
refactor CheckstyleReport to use a local variable for overriding properties and update the cache file path to improve code readability and ensure the correct
refactor DeleteInactiveReplicaTest to improve jetty stopping logic to enhance test reliability by ensuring all active slices are stopped correctly
added a file name parameter to the FileActionsDialogFragment constructor and updated its usage in OCFileListFragment to enhance user experience by providing a
updated the reorder direction handling logic in CellLayout . java to use a constant for invalid direction values to improve code readability and maintainability by
updated API endpoint paths from ` / api / v1 / accounts ` and ` / api / v2 / accounts ` to ` v1
add jobexecutionservice . getexecutionidforjobid ( ) method to get the execution id for a job id .
added a new annotation interface ` EnableAdminClient ` in the ` org . noear . solon . admin . client . config ` package
replaced specific JavaType imports with a wildcard import and added multiple visitIdentifier methods for identifiers to streamline import statements and enhance code clarity
added a method to set the action text color in AuthenticatorActivity to improve the visual appearance of action buttons in the user interface
added ` find ` and ` setFinder ` methods to ` Manager ` , ` StreamSupplierComponent ` , and ` MockManager ` classes to
renamed methods and variables in the Runner class from ` addTestStepsForPickleSteps ` to ` createTestStepsForPickleSteps
renamed the test method from ` noArgMethodIsNotValid ` to ` validNoArgMethod ` in ` StaticHandlerMethodResolverTests `
added client cancellation functionality to SparkClientImpl and RpcServer classes to ensure child processes exit before attempting to connect back to the client
added ` getImplicitPreCoercionValue ( ) ` methods to ` SkylarkParamInfo ` , ` DefaultConstructorArgMarshaller
initialize lastDisplayedUser to an Optional . empty ( ) to ensure lastDisplayedUser is always initialized to avoid potential NullPointerExceptions
added a ` findAll ` method to ` QueryDslMongoRepository ` and modified the ` createQueryFor ` method signature in ` AbstractPersonRepository
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerExceptions during stopping
[ hotfix ] [ table - planner ] exit the warm - up loop in case of failure
add xread ( ) and xreadgroup ( ) method to multikeypipelinebase and multikeybinaryredispipeline . xread ( )
refactor LinkedBufferInput and StreamInput classes to simplify method calls and improve clarity to enhance code readability and maintainability by reducing
added WebSecurityCustomizer configuration and updated related methods in CasWebAppSecurityConfiguration and CasWebSecurityConfigurerAdapter to enhance security configuration flex
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to use
added a new method ` registerProviderInternal ` to ` ShadowContentResolver ` and modified ` ContentProviderController ` to handle provider registration to improve
changed the type of the ` version ` variable from ` Version ` to ` ClassFile . Version ` in the ` AttributeReader ` constructor to ensure
added a method to set the keep - alive configuration in SingleConnectionManager to ensure proper connection handling based on the configuration settings
[ java ] rename context . unicastsenderflowcontrol ( ) to context . multicastsenderflowcontrol ( ) for consistency .
added null check for current point in DrawLocus and GBasicStrokeD classes to ensure proper handling of 3D locus without points in 2
added imports for ConcurrentHashMap and ConcurrentMap , and modified StringBuilder initialization in HttpServerTestBase , WebSocketConnectionD13 , WebSocketGeneratorD13 ,
simonstewart : allow the selenium client to take screenshots from a local file system .
replaced JUnit assertions with AssertJ assertions in multiple test files to improve code readability and maintainability
truffle : remove deprecate getcontextreference ( ) since it be no longer use .
initialized the ` e ` variable to null and modified exception handling logic in ` StubberImpl . java ` , and added new test classes for
updated error handling in Actor . java and Group . java for clarity and consistency to improve error reporting for invalid ascendant and descendant actors
added location permissions handling to the getLocation method in LocationPickerActivity to enhance user experience by allowing users to turn the location on or off
http : / / code . google . com / p / mybatis / issues / detail ? id = 556 : add a counter
added import for CookieSpecs and set a standard cookie spec in requestConfigBuilder to ensure proper handling of cookies in HTTP requests
simplified the intersection check in the Intersector class to improve code readability and maintainability
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java and updated audio filtering logic in Air
added monitoringUrl parameter to ScrollingPanel and SystemInformationsButtonsPanel constructors to enable monitoring functionality in the scrolling panel
[ hotfix ] [ k8s ] remove kubernetes . service . create - timeout config option
added a switch statement to set the icon based on the place description to improve user experience by providing a more appropriate icon for different place types
added a null check for the package before retrieving its name in DefaultPackageScanClassResolver . java to avoid potential NullPointerExceptions when the package is
added a new file PrintInlining . java that includes a main method that prints a " Passed " message to facilitate
test ( javadoc ) : add test for nested bracing in Javadoc tag
[ java ] remove unused field in archivetest . java .
updated the method calls from ` getEdges ( ) ` to ` getEdgesAndMetaEdges ( ) ` in ` EdgeDataTable . java `
removed unused import of ClassPathResource and ResourceLoader from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
updated logging statements to use % f instead of % d for playback speed to improve clarity and consistency in logging output
added room removal event handling in MUCRoomController to ensure proper handling of room removal events during clustering
updated the variable ' minimize ' from ' replicas ' to ' cores ' in the AutoScalingHandlerTest . java file to correct the variable ' minimize
added key transformations to TextureHelper . java to enable flipping and generating mips for the texture key
refactor PythonDslProjectBuildFileParser and related classes to use EventReportingProjectBuildFileParser and CloseRecordingProjectBuildFileParserDecorator
[ j2cl ] introduce librarynormalizationpass to handle library transformation .
removed the call to ` nextResponseBodyConverter ` from ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverterFactory ` to simplify the
[ hotfix ] [ runtime ] remove segment . isFreed ( ) check from memorymanager
server : enable timestamp in consolesessionvo ( # 4396 )
added new files Hbs . java and HbsTest . java to implement a template engine for the Handlebars application to facilitate
updated visibility handling for HintMessage and IncomingMessage in ChatMessageAdapter to ensure proper visibility based on empty hint or message text to improve user
replaced ` keySet ( ) ` with ` values ( ) ` for loop in ` ImportCsv . java ` to improve performance by using a
add a new test method ` waitsUntilAlertDialogAppears ` to ` AlertTest . java ` and remove ` ConfirmTest . java
added a check for distinct column indices size in ReduceSinkDeDuplication . java to ensure that the method handles cases where distinct column indices
added a check to ensure the name is not already in the list before processing and modified the getClassPathFromManifest method to improve error handling and
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated the websocket artifact name from " websocket - server " and " websocket - client " to " jetty - websocket - server " and "
changed the return type of identity attributes from an unmodifiable map to an unmodifiable map to ensure immutability of the identity attributes before returning it
added logic to update modified status of sketch codes in Editor . java to ensure that sketch codes are only modified when their document text matches the saved
replaced instances of ` new Double ( bytes ) ` and ` new Float ( bytes ) ` with direct return statements in multiple Java files to
updated method from ` getDate ` to ` getTimestamp ` in ` JdbcDataSource ` to ensure correct timestamp representation for data retrieval
updated the condition to check for both Context and " javax . naming . Context " in HtmlJndiTreeReport . java to ensure proper class
added write buffer size configuration for specific database types in StorageUtils . java and improved logging format in Manager . java to enhance flexibility in
updated the edge type check from " double " to " mutual " in ImporterGEXF . java to ensure accurate handling of mut
replaced the private static final int FLAG _ SLIPPERY with an import for FLAG _ SLIPPERY in StatusBar
truffle : fix array dimension calculation for constant field .
added methods to retrieve and set the Google Drive folder path in PreferenceHelper and updated references in GoogleDriveJob and GoogleDriveSettingsFragment to
[ web ] shuffling suggestion popup on enter / down
added @ Nullable annotation to several assertThat methods in Truth . java to improve null safety and clarity in method signatures
updated bitwise operations in ArrayUtil . java to use bitwise operations for new size to improve readability and maintainability of the code
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to instrument constructors only if they can be instrumented to ensure
added a synchronized multimap for managing waiting operations in StreamIn and StreamInManager classes to improve thread safety and management of waiting operations
added a new boolean field ` isKeyguardSecure ` and its getter and setter methods in ` ShadowKeyguardManager ` , and refact
added serialVersionUID fields to StringDialog class to ensure proper serialization compatibility for subclasses
updated the loop to replace ' > ' with ' ' and added a conditional check for overrideParts length in GrblUtils . java to
renamed the method ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrowables `
modified the checkDrained ( ) method in AsyncFileImpl . java and added a new test in FileSystemTest . java to ensure that
updated lighting constants and shader setup in HybridLightTest . java to improve lighting performance and ensure consistent shader usage
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` across multiple test files to ensure consistent filesystem usage across
changed the type of ` loadRerunFile ` from ` List < String > ` to ` List < PathWithLines > ` across multiple
refactor Gson , JsonArray , and JsonObject classes to improve code organization to enhance maintainability and readability of the codebase
removed the @ NotNull annotation from TEST _ DIRS in PubRoot . java to streamline the code by eliminating unnecessary null checks
added a call to ` Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) . close ( ) ` in ` Shadow
added a method to reset the prefix index in the BasisLibrary class and modified the return statement in Stylesheet . java to improve thread safety
added a debug logging level annotation to the TestDistributedStatsComponentCardinality class to improve traceability of test failures during development
added a call to throwIfImmutable ( ) in IntList . java to ensure the IntList is immutable before further operations
updated GrpcServerRunner and GrpcClientBuilder to use JetBrains annotations and modified ManagedChannelBuilder initialization to enhance null safety
updated package structure and refactored method calls in Graal . java for improved clarity to enhance code readability and maintainability by
truffle : fix memory leak in insightpercontext . invalidatefunctionsarray .
added platform - specific handling for writing manifest files in GenerateManifestStep . java to ensure consistent line endings handling across different operating systems
update findnulleref priority to high priority and add a new class RFE3531161 for testing null checks to ensure that redundant null
added @ Nullable annotation to getConfigDescription methods and improved null checks in ConfigDescriptionRegistry and ThingResource classes to enhance code clarity and ensure
change the return type of createcancellationexception ( ) from throwable to runtimeexception ( # 11818 )
pdfbox - 4892 : avoid npe , a suggest by valerybokov
refactor ManagerBase class to improve code readability to enhance maintainability and facilitate future updates
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to enable accessing All Ap
replaced the initialization of FragmentActivity with Robolectric ' s FragmentActivity initialization to improve compatibility with Robolectric ' s activity
rename method ` getFileCoordinates ` to ` processFileCoordinates ` and introduce ` getDecimalCoords ` in ` ShareActivity ` to improve method
rename ` ABCase1 _ 1 ` and ` ABCase2 ` classes to ` TestABCase1 _ 1 ` and ` TestAB
updated parameter name from ' num ' to ' value ' in saveEnergyPriceHistoryDone method and added a null check in the Manager class
modified the handler setup in OpenRocketViewer . java to call doSimsChanged ( ) after setting the current rocket ' s handler
added a new class ` ChangeDependencyGroupIdAndArtifactId ` to manage Maven dependency groupId and artifactId to enable users to change dependency groupId and artifactId
refactor path handling and add a check for segment existence in IndexingJob . java and SegmentChecker . java to improve code clarity and
updated comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor PreprocessorDelegate to use Supplier for replacement paths and path to improve performance by reducing object creation overhead
rename ` JsonExamples ` class to ` Examples ` and update package - info . java accordingly to clarify the purpose of the class and
added debug logging statements in ViewExtractor . java for entryPath , jarEntry , and input stream retrieval to improve visibility into the extraction process and
refactor FindsByLinkText class implementation to improve code readability and maintainability
added a new Main class with a main method that prints a message when a Java oop entry point is hit to facilitate testing
add some synchronization around the creation of cSeqHeader and retryTran in OperationSetBasicInstantMessagingSipImpl . java and improve error handling in
removed redundant continue statements in NativeScanner . java to improve code clarity and maintainability
changed package and import statements in RendererConfigurationTest . java from ` net . pms . test ` to ` net . pms . configuration
replaced ImmutableSet . Builder with Supplier < ImmutableList < BuildRule > > for managing dependencies to improve code readability and performance by using memoized
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added content encoding handling in ExtractingDocumentLoader to ensure proper metadata is added based on the content type of the stream
updated SQL insert and select SQL statements to use placeholders instead of string concatenation to improve readability and avoid potential SQL injection vulnerabilities
added a check to return early if the slot is - 1 in WindowListener . java to avoid unnecessary processing when no valid slot is available
added option to ignore transitive repositories in MavenExecutionRequest and related classes to enable users to ignore remote repositories introduced by transitive dependencies
removed duplicate injection of BackgroundJobManager in ContactsPreferenceActivity . java to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to enhance compatibility with newer Android versions
added null check before closing selection in NIOTransport . java to avoid potential NullPointerException when selection is not initialized
added a condition to break if the index equals the string length and matcher starts at the end to improve performance by avoiding unnecessary processing when the
added server port configuration to the IntegrationTest annotation to ensure the test connects to the correct server port
added a new function " reverse " in FunctionRegistry and created a new UDFReverse class in UDFReverse . java to facilitate the
updated method calls to use ` getRequestContextPath ( ) ` instead of ` getContextPathEncoded ( ) ` for context path retrieval to ensure accurate retrieval of
refactor Tracer class implementation to improve code readability and maintainability
[ hotfix ] ignore flaky test in rocksdbstatebackendreaderkeyedstateitcase
simplified import statements in XMLChangeLogParserTest . java by replacing specific imports with a wildcard import to improve code readability and maintain
added synchronization to the buffer clearing logic in StarTreeRecordStoreCircularBufferImpl . java and implemented a test for it in TestStarTree
updated the forecastMinutes , forecastHours , and forecastDays values in OpenWeatherMapOneCallHandler . java to adjust the time range for
added timeout annotations and updated fetch time handling in AbstractPageOperationTemplateTest to improve test reliability and ensure accurate tracking of fetch request times
updated RemoteTargetGluer and FloatingHeaderView to improve handling of split task IDs and added animations for all apps content to enhance user experience
updated the ` parseRerunFile ` method to return a ` Stream < Collection < FeatureWithLines > > ` instead of a ` Collection
added multiple item items to the BotaniaCreativeTab for various block types to enhance the creative ' s functionality by integrating various block types
updated assertion statements in TestRadioButtons . java to use parameterized assertions to improve readability and maintainability of the test code
added support for -- file - sizes option in RCFileCat . java and introduced a method to retrieve number rows in RCFile . java to
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
added a checkNDArray method to JnaUtils . java to ensure that an MXNet NDArray is closed before proceeding to improve error handling
[ hotfix ] [ doc ] fix typo in blobserver javadoc
fixed bug 137027 - unusedprivatemethodrule should not report unused private constructor from initializer
refactor variable names for clarity and consistency in Global . java to improve code readability and maintainability
added a test method to verify the auto - startup behavior of the SFTP source polling channel adapter to ensure that the SFTP source polling adapter
added getter and setter methods to Node , Quadtree , AbstractSTRtree , and STRtree classes , and modified constructors in various classes to enhance
updated version parsing logic to handle minor version number correctly to ensure accurate parsing of version numbers and improve accuracy in version parsing
updated tag handling in ItemRegistryImpl to check for non - empty tags before adding them to ensure tags are only persisted if there are tags available
added ` parseDateTimeStringToEpochMillis ` and ` fromDateTime ` methods to ` DateTimePatternHandler ` , ` DateTimeFunctions ` , and `
hhh - 17100 fix nullpointerexception in customtype # disassemble
refactor Log4j2ConfiguratorServlet to improve code readability to enhance maintainability and facilitate easier debugging
replaced instances of HiveException with AuthorizationException in StorageBasedAuthorizationProvider . java to simplify exception handling by directly returning the original exception
updated CGoCompileStep to use String . join for the " CC " key and added a new test for C++ prebuilt dependencies to
fix : make customresource editable by default
removed the @ Override annotation from the method in mmm Only . java and ppp Only . java to streamline code by eliminating
added TIMEOUT _ THREE _ HOURS constant and updated HttpConnectionParams to use it to improve timeout management for HTTP connections
added new event names for " nonresolving _ raw _ target _ node _ parse _ pipeline " and " configured _ raw _ target _
simonstewart : add a constraint to enable / disable everything but trace .
removed the Singleton annotation from ApplicationController . java to simplify the code by eliminating unnecessary singleton references
updated username retrieval logic in ShareActivity to utilize OwnCloudAccount for improved account display handling to ensure correct username is retrieved based on
added BatchStatus import and a new test method for resuming an instance in SimpleJobLauncherTests to ensure proper handling of paused jobs in the
added a null check for cacheConfig before joining it in HttpSyncDataService and refactored data refresh logic in DataRefreshFactory to enhance
danielwagnerhall : make dockersession public and move it to localnode
fix compilationunitcontext . getqualifiedname ( ) to return the default package name
pdfbox - 4892 : make nonsequentialpdfparser a nonsequentialpdfparser , a suggest by valerybokov
[ mahout - 3641 ] fix test failure in testdistributedlanczossolvercli ( # 3642 )
refactor HttpServerTestBase to improve test structure to enhance maintainability and readability of the test code
replaced the implementation of ` entrySet ` and ` entrySet ` with ` keySet ` and ` get ` methods in ` PortletApplicationMapTest `
added tests for ` dynamoDbIgnoreNulls ` behavior in ` BeanTableSchema ` to ensure that ` innerBeanList1 ` and `
fixed - spring starter auto configuration do n ' t work with spring 5 . x
fix bug in indicator . todouble ( ) , add unit test
added methods ` execInContainerWithUser ` and ` execInContainer ` to handle user - specific command execution to enhance flexibility by allowing
replaced conditional checks for WebSocketByteListener and WebSocketTextListener with direct assignment of interestedInByteMessages and interestedInTextMessages to simplify the
added unit tests for attribute handling and negated attributes in SemgrexTest . java to ensure correct behavior of various semantic patterns in the semantic graph
added a broadcast intent to send a CLEAR _ PULL _ UNREAD message in HomeFragment to enhance user experience by providing a clear
simplified the initialization of Scroller in TouchImageView . java to streamline the code for better readability and maintainability
updated BaseDstu21Config and WebsocketDstu21Config to include a destroyMethod and added defaultProfileValidationSupport method to enhance resource
( chore ) camel - core - camel - veto : fix npe in abstractcamelcontext # start
added FloatingActionButton components to manage the visibility and click listeners for the main FAB and maps fragment to enhance user experience by allowing users
added support for inline date formatting in ToDateTokenizer to improve date parsing accuracy and error handling
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading functionality
corrected the spelling of " tecken " to " token " in multiple error messages and resources to improve clarity and consistency in
added a check to ensure the server is checked before binding the OperationsService to improve user experience by preventing auto - binding when the server is
updated the return values from ` getBeginColumn ( ) ` and ` getEndColumn ( ) ` to ` getEndLine ( ) ` and ` getEnd
added ` waitFor ( ) ` methods to ` CxxPreprocessAndCompileStep ` , ` outputProcessor ` , and ` errorProcessor `
added a boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented a new ` PrincipalAttributeRepositoryFetcherTests ` class
wait for cluster safe state before check map store size
added support for multiple SSL protocols in the Netty web server configuration to enhance security by allowing configurable SSL protocols
replaced ` AtomicBoolean ` with ` AtomicReference ` for ` set ` and introduced a wrapper class for thread - safe atomic operations to improve
updated key retrieval logic in QueryDslMongoRepository and added a test for empty path expression in SpringDataMongodbSerializerUnitTests to ensure
updated assertions in RoundRectBorderTest to reflect changes in border behavior to ensure that round rect borders are only equal with self to improve clarity
added a check to ensure genesis config is not empty before creating nodes and improved error handling for empty clusters to enhance stability by preventing
remove paralleltest since it be not use
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a validation check for the length of ' sign
modified the condition to check if the window is not null before proceeding to ensure that the code only executes when the window is not active
replaced instances of ` maxN ` and ` minN ` with ` greatest ` and ` least ` in ` MoreCollectors .
added null checks and WebSocket client extension handlers in BitmexStreamingExchange and BitmexManualExample classes to improve robustness by preventing
added validation to GeoPointField to ensure lat and lon values are valid to improve error handling for invalid lat and lon values
updated method names and logic in OozieProxyImpersonator and WorkflowFilesService to improve clarity and functionality to enhance code readability
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
modified the ` getTableDocument ` method to include a ` withDependents ` parameter to control whether to include dependent tables based on the specified conditions
added functionality to control the number of consecutive uploads without coordinates in UploadActivity and UploadPresenter to improve user experience by providing feedback when consecutive uploads are
added caching mechanism for profile data retrieval in ProfileResources . java to improve performance by reducing redundant processing of profile data
refactor JpaMetamodelEntityInformation to improve identifier derivation handling and improve property value extraction to enhance code clarity and maintainability by
phoenix - 4358 upgradeutil . bootstraplastddltimestamp ( ) should return last ddl timestamp for table and index
add default exception mappers to jersey config ( # 1341 )
added a boolean parameter ` false ` to the ` storeFieldAction ` method in ` EntryEditor . java ` to control the behavior of the
updated the ` nativeCreateNSWindow ` method to include an ` ownerPtr ` parameter and modified its initialization logic to ensure the window pointer is
updated the ALTER TABLE statement to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure the correct table name is used
added a new enum ` STOCK ` and modified ` CIRCULAR _ PROGRESS ` and ` STOCK ` to support skin
fixed - commandasyncservice . readasync ( ) and commandasync . writeasync ( ) method throw typecastexception . # 3550
do n ' t warn about complex generic signature in type frame modeling
added a BackProgressAnimator to manage progress updates during back animations to enhance user experience by providing visual feedback during transitions
changed the ` _ initialPageNo ` variable from ` final ` to ` private ` and added a condition to initialize the ` _ contentLimits
updated CRC16 calculations in JedisClusterCRC16 . java and adjusted total operations in CRC16Benchmark . java to improve CRC calculation accuracy and ensure
added support for parsing formatted SQL changes with comments in FormattedSqlChangeLogParser to enhance the parsing capabilities for SQL change sets with comments
replaced the initialization of JarArchiver with a single instance in MavenArchiver and set it in AbstractJarMojo to simplify the arch
replaced HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling by providing a more
modified the condition for adding aggregations in TSServiceImpl . java and added a new multiAggregationTest method in DaemonTest . java to ensure that
added validation for pixel format and type in GwtGL20 . java to ensure input pixels buffer is of type ByteBuffer and improve error handling
updated method calls in OutputMemoryTest , PrintR , and VarDump to use methodMagicDebugInfo . getName ( ) instead of invokeDynamic
improve error message when byte buddy ca n ' t instrument all class within the mock ' s type hierarchy
[ gr - 23233 ] add class initialization trace to track class initialization .
fix ( broker ) : fix typo in brokerrequesthandler
( chore ) camel - topic - route : use caffeine cache instead of google common cache
mbt tiles : set sqliteconfig . setpragma ( sqliteconfig . pragma . SYNCHRONOUS , " OFF " )
updated INVALID _ SOURCE _ TARGET _ RELEASE regex pattern and added a fatal error for invalid target releases to improve error handling for invalid target releases
updated URI construction and added a location intent check in DetailFragment . java to ensure the user is redirected to the correct location when the intent is
hhh - 14850 - fix npe in getreferencedparametercontexts when there be no inheritedparametercontexts
refactor ClassLoader class structure to improve code readability and maintainability
added a method to set origin response headers in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure proper handling of origin response
removed the new ProfileSettingDrawerItem instance from GpsMainActivity to streamline the app by eliminating unused items
added XML validation parameter handling in multiple classes to allow dynamic configuration of XML validation behavior based on application context
danielwagnerhall : do n ' t fail the test if the browser do n ' t support javascript
added a maxRows variable and updated fetch size handling in IoTDBStatement . java to ensure maxRows is always greater than or equal to fetch
refactor ` isCountOptimizable ` method to ` allActionsAreOptimizableFilters ` for clarity to improve code readability and maintain
added event handlers for node and mouse click events in StandardVizEventManager . java to enable handling of node and mouse click events based on
[ java ] : use zerobuffer instead of setmemory in ManyToOneRingBuffer to avoid unnecessary memory allocation .
refactor xorGroup handling in TerminalNode to utilize memory for better encapsulation to improve code clarity and maintainability by centralizing xor
removed ` getHeight ( ) ` and ` getWidth ( ) ` methods from ` LCDUIImageMonochromeBitmapSource . java ` to
refactor SourcePathResolver to use getPathPrivateImpl for improved path resolution logic to enhance code clarity and maintainability by encapsulating path
fix xmlparser . encoderesourcetostring ( ) to correctly handle dstu2 attribute
updated WebsocketRoutingFilter to use containsEncodedParts for URL encoding to ensure proper handling of encoded URLs in WebSocket upgrade scenarios
rename test _ suite _ * to test _ suite _ * for consistency
added a method to retrieve the CxxPlatform from HaskellBinaryDescriptionArg and updated the initialization of CxxPlatform to improve flexibility
added imports for IndexReader , IndexWriter , and Similarity in multiple Java files to support Lucene ' s indexing capabilities in the Javadoc documentation
modified the return statement in ConcurrentLinkedStack to handle null values and added new test methods in ConcurrentLinkedStackTest to improve robustness of the
added methods ` isMatched ( ) ` and ` setMatched ( ) ` to ` BinaryHeapQueueTest ` and ` BaseQueueable `
added null check for mDirectories before initializing mDirs to avoid potential NullPointerException when mDirectories is not initialized
updated gesture condition in RecentsView . java to check for overview state and first layout to ensure proper handling of navigation when overview state is
added multiple package - info . java files for various Lucene packages to provide package - level documentation for various Lucene packages
added text to the visibleAutoLeveler component in AutoLevelerTopComponent to improve user interface clarity by providing a more descriptive label
added postOptimizeCallbacks to DirectUpdateHandler and DirectUpdateHandler2 , and implemented optimized event handling in UpdateHandler to enable post - optimization
updated compression handling in CompressionMode . java to explicitly set the dummy byte to 0 to ensure correct compression behavior by explicitly setting the dummy byte to
removed the check ( user _ data ) method call from Shaderc . java to simplify the code by eliminating unnecessary checks
added a condition to check if the base class is a local meta store before retrying retries to ensure that retries are only attempted when the base class
added checks for TimeoutException and ConnectionClosedException in HeliosSoloLogService . java to improve error handling by ignoring exceptions related to timeout
refactor Subject class to improve code readability to enhance maintainability and facilitate future updates
use weak and strong reference type for serialization in abstractserializationservice
fix bug in hssf palette . findsimilarcolor ( ) and add unit test .
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
danielwagnerhall : re - enable elementfindingtest . testfindasingleelementbynumericid and testfind
added a new flag parameter to the registerReceiver method and updated related classes to include it to enhance receiver registration functionality by allowing flags to be passed
fix ffmpegtest . testversion ( ) to use mockito ' s answer
refactor OggInputStream to accept a previous input stream and manage buffer initialization to ensure proper resource management and avoid potential memory leaks
added a constant for " Response was null " and updated the failure message assignment to use this constant to improve code readability and maintainability by
[ te ] fix migration for anomaly with no warning
refactor BaseActivity and DetailActivity to use a new method for showing a Toast message to improve code readability and maintainability by central
updated the Request creation to use httpMethod ( ) and delegate . requestTemplate ( ) instead of method ( ) to improve flexibility in handling different
updated LDAPCertStore to handle LDAP referral exceptions and added name validation to improve error handling and ensure valid LDAP names are handled correctly
refactor socket retain logic into a separate method ` retain ` to improve code readability and maintainability by reducing duplication
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test method for item click handling to improve clarity and
[ hotfix ] [ test ] refactor checkpointfailuremanageritcase to use classrule
remove genericitemuiprovider since it be not use
added a selectedObject field to the SIPCommSelectorBox class and updated the setSelected method to accept an Object parameter to enhance functionality by allowing
added JUnit ' s @ Isolated annotation to MetaInfConfigurationTest . java to enable parallel execution of FileSystemPool methods in tests
added a line to set the server host from HTTP _ INFO . bindAddress to ensure the server connects to the correct HTTP server
updated token validity settings based on the heart mode and grant types in DynamicClientRegistrationEndpoint . java to ensure accurate token validity checks based on
added a new CloverInstrumentationFilter class and modified the filtering logic in TestInterfaceAudienceAnnotations . java and SplitLogCounters . java to
added support for ZHIMI _ HUMIDIFIER _ CB2 device in MiIoDevices . java and updated ReadmeHelper
fix the plausible to break action when the mining duration be too low
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
ambari - 14850 . ambari should not be able to access the host / cluster repository list if the host / cluster repository list
simplified the return statement in IntHashSet . java to simplify the logic for determining missing values
added Serializable annotation to RuleAdministrator class to enable serialization of RuleAdministrator instances
updated allowedOrigins and allowedTimingOrigins to use Set instead of List and added allowedOriginPatterns to allow multiple origin patterns to enhance flex
added " g3d / knight . g3dj " and " g3d / test . g3dj " to BaseG
added error handling for invalid solidified position in updateLatestSolidifiedBlock method to improve robustness by logging errors during block updates
hbase - 15836 fix npe in execresult when value be null
added a method to check if a user has admin access and updated error handling for unauthorized access to improve access control checks and ensure proper response
replaced the ` writeTo ` method with a ` getStubClassBytes ` method in ` ClassMirror ` and introduced a new ` CreateStub
added a TextView for shared internal link text in FileDetailSharingFragment to enhance user experience by providing clearer link text for shared files
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting across different locales
fix modelzootest . testsaturday ( ) to work correctly
added hideInput ( ) method to AllAppsContainerView and overridden hideIme ( ) in LauncherAllAppsContainerView to improve user
[ test ] use inmemory event storage engine in event handling test
refactor BsdFileStore to use BsdNativeDispatcher ' s getmntonname method instead of direct access to parent directories to improve
add a new test class ` Issue1599Test ` for the ` JavaSymbolSolver ` functionality to ensure correct behavior of method call expressions in
added ` x ` , ` y ` , and ` z ` parameters to the ` spawn ` command in ` SpawnCommand . java `
added a MIN _ CONTENT _ DIMEN constant and refactored method calls in Folder . java to improve code readability and maintainability
make hotspot crypto substitution test more robust
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to reliably reli
added pluginCheckClassNames to m _ failedChecks in UpgradeCheckRegistry and reformatted the addColumnsToUpgradeTable method in UpgradeCatalog280
refactor Environment class to improve code readability to enhance maintainability and facilitate future updates
added import for LuceneTestCase and annotated the RecoveryAfterSoftCommitTest class with BadApple to address issue SOLR - 7421
updated the path construction logic in CodenameOneImplementation . java and removed a warning in HashtableContent . java to ensure the home path does
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
updated import statements and resourceAccessor initialization in LiquibaseEntityResolver . java and XMLChangeLogSAXParser . java to streamline
added import for Security and set the " jdk . tls . disabledAlgorithms " property in ComHostnameVerifier and JavaxHostnameVerifier to
updated ` AbstractCxxDeps ` and related classes to use ` CxxDeps . of ( ) ` instead of ` CxxDeps .
rename ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` in ` StubJarTest .
removed unnecessary whitespace in Int2ObjectHashMap . java to improve code readability and maintain consistency
updated folder name hint logic to check for non - empty title before setting it to improve user experience by providing a clearer hint when the title
updated client details retrieval to include an additional client ID parameter to enhance test clarity by providing more context in client identification
changed access modifiers of methods in ShadowSQLiteDatabase from public to private to restrict access to these methods for better encapsulation
updated logging statements in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to include isClosed condition to ensure accurate representation of atomic counters and buffers
refactor MimetypeIconUtil class to improve code readability to enhance maintainability and facilitate future updates
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in method naming
added a new test method ` negatedInstanceOf ` to ` UnnecessaryParenthesesTest ` and updated the return condition in ` Unwrap
added a ` built ` flag and a ` teleport ` method to the ` Location ` class and integrated it into the ` teleport ` method to
replaced Base64 encoding with Base64Utils ' encodeToUrlSafeString for modulus and exponent in TokenKeyEndpoint to enhance security by
updated import statements and modified statistics reporting method in TranslatorManagerHelper . java to enhance clarity and maintainability of statistics reporting functionality
rename ` ContainerAnnotation ` to ` ContainedBy ` in ` ContainerAnnotation . java ` to clarify the purpose of the annotation '
added a null check for the result variable in ObjectIdentityImpl . java to ensure that the getId ( ) method returns a non - null value
modified the ` setUpRevampedTweet ` method to include a ` muffled ` parameter and adjusted the logic for determining if the
added conditional logic to retrieve the verified text view based on the presence of a theme in UserProfileActivity to ensure the verified text is displayed based
replace static instance of AbucoinsDigest with instance variable in AbucoinsDigest . java to improve performance by reducing unnecessary object creation
camel - 14284 : camel - mongodb - allow to configure the mongo connection in the spring context .
added sourceIndex parameter and related methods in AttributeMapping , DataAccessMappingFeatureIterator , and NestedAttributeMapping to allow dynamic retrieval of the source
improve error message when corruption occur during alter partition
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks based on security settings
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
do n ' t escape email in geoserver home page ( email be not html )
enrich engine ' s reflections with subsystems in modulemanagerimpl ( # 11943 )
updated the output format in JoinModeller to use the number of features instead of a fixed value to ensure accurate representation of the number of features
added a check for the length of the command before processing to avoid potential ArrayIndexOutOfBoundsException when the command is empty
( chore ) camel - kafka : avoid log spam in singlenodekafkaproductionstrategy
replaced ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _ PLAY
updated IgnitionConfigurationHandler , MotorMountHandler , FlightConfigurationID , AxialStage , and IgnitionEvent classes
tika - 2338 -- improve error message for invalid ascii name length in msownerfileparser
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to compatibility issues on
refactor MavenDependencyResolver to use a dedicated method for creating the lock file to improve code readability and maintainability by encapsulating lock file
updated preference for 5.3 from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added sync interval
added a check for the FEDERATION _ USER in AuthenticationManager to return null if the username matches the FEDERATION _ USER
fix executemethodnode to check if the value be not a truffleobject .
replaced ` collect ( Collectors . toList ( ) ) ` with ` toList ( ) ` in ` JakartaClientShutdownWithServer
logbackvalve : do n ' t throw an error if the filter chain be dy
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
removed unused import of Version from CreateIndexTask . java to clean up the code and improve readability
added handling for missing primary keys in OracleDatabase and AbstractDb2Database to ensure correct schema and catalog is set for missing indexes
added ` MetastoreException ` to the ` execute ` method in ` MsckOperation ` and implemented error handling in ` TestMSC
[ hotfix ] [ connector / kafka ] retry committable in case of recoverable exception
[ rip - 10 ] remove the receipt handle from the forward message to dlq ( # 2329 )
added a services list to DockerComposeContainer and modified the runWithCompose method to handle empty services to enhance flexibility in service management by allowing
[ ci ] use copyset from coley . recaf . util
removed HTMLCleaner and simplified return statement in FeedParser . java to streamline XML processing and improve code readability
simplified conditional checks in Launcher and Workspace classes to improve code readability and maintainability
changed the data type of energy consumed , produced , and power apparentSSum from int to double in MeterRealtimeBodyDataDTO .
added a new file bug4150029 . java that implements a JApplet with file chooser functionality to address bug 4150029
added functionality to manage Spark configuration updates in HiveConf and SparkClient classes to ensure proper resource management and prevent memory leaks when Spark configurations are
added a long press indicator to multiple classes and updated Launchable class to include a long press indicator to enhance user experience by providing a clearer
added a check for empty polygon in WKBWriter and updated test methods in WKBWriterTest to ensure proper handling of empty polygons and improve
refactor UnflavoredBuildTarget to use a builder pattern instead of using withShortName and withShortName methods to improve code readability and
added a new file ` MultiplyByMaxInt . java ` that implements a mathematical test for integer multiplication with maximum integer limits
added functionality to enable the drawer indicator based on the current file status to improve user experience by ensuring the correct drawer indicator is displayed based on the
changed the package of TestRAMDirectory from org . apache . lucene . index . store to org . apache . lucene . store
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton ` and ` Operations ` classes to simplify the code and improve
[ DMNEvaluatorCompiler ] improve error message and add a new constant for no expression defined for name on node .
replaced ` @ ContainerFor ( RTA ) ` and ` @ Target ( RTA [ ] value ( ) ) ` annotations with `
updated message formatting in AbstractController to include send duration to improve clarity of output during file sending
updated class name handling in OpenMBeanAttributeInfoSupport to use a variable for the base class name to improve code readability and ensure package access
make quorumresponseresolver . isdatapresent ( ) and quorumresponseresolver . isdatapresent ( ) more robust .
updated the calculation of freeSize in StoreDirect . java to ensure accurate free size adjustment based on the specified size
do n ' t send touch event when touch be disable in anykeyboardview
replaced SslContextFactory instances with SslContextFactory . Server instances in HttpServer , RESTServer , and ThriftServer to ensure compatibility with the latest SSL context
removed the PrivilegedSocket implementation and simplified the connection initialization to simplify the code by eliminating unnecessary privileged operations
refactor InputTest class to improve test structure to enhance maintainability and readability of the test code
added pauseBlursOnWindows and pauseBlursOnWindows functionality to the DepthController and AbsSwipeUpHandler classes to enhance user experience
removed currentLocationMarker and currentLocationPolygon from NearbyMapFragment . java and added null check for curLatLng in Nearby
updated the method to retrieve client details using the clientId instead of the client object to ensure the correct client ID is retrieved from the clientDetailsService
replaced ` @ BeforeAll ` and ` @ BeforeEach ` annotations with ` @ BeforeEach ` and modified SQL query formatting to improve test
fix for http : / / issues . apache . org / activemq / browse / amq - 4892 - wait for thread
added JUnit rules and a test method for handling unknown key exceptions in SlidingGanttCategoryDatasetTest to ensure proper exception handling and
[ type : fix ] fix npe in shenyutrierulelistener ( # 11943 )
lightcontrol : fix cloning of controldir and light name
updated the logic for setting ` _ hideStacks ` and improved stack frame handling in ` StdErrLog . java ` to enhance code cl
refactor HttpSessionEventPublisher to use a dedicated method for context retrieval to improve code readability and ensure the context is not null before publishing events
added a semantic exception for the syntax change in CREATE CQ statement to ensure compatibility with v0.14 and prevent runtime errors
[ hotfix ] [ table - common ] fix typo in flinkiotdbsink
added a counter for custom simplifying considers nodes in CanonicalizerPhase to track the number of simplified nodes for better debugging and monitoring
updated the ` setImageDrawable ` method to use ` context ` instead of ` null ` to ensure the correct context is used for file type icon
updated the method call from ` readIdentifierWithSchema ( ) ` to ` readIdentifierWithSchema ( schema . getName ( ) ) ` and
fix ( bqio ) : add support for read with timestamp field ( # 4558 )
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` classes to retrieve views based on the specified tag
updated type parameters from ` Enumeration ` to ` Enumeration < String > ` in multiple Java files to improve type safety and reduce unchecked cast warnings
removed unused import of PColumnFamily in IndexTool . java and MetaDataClient . java to clean up the code and improve readability
added JSON _ VALUE and JSON _ CREATOR constants and modified the getEnumValue method to handle JSON annotations to enhance the handling of JSON values and
svm : fix resource feature for jar file .
reformatted code for CUDA constants in cublas . java to improve readability and maintainability of the code
updated the ResourceLoader class to filter out specific layout directories based on file existence to improve resource loading by ensuring only valid layout directories are processed
fix redstonesTorch not get the attached face ( # 3640 )
added VARBINARY case handling in RelToStageConverter . java to support VARBINARY data type in the RelToStageConverter class
removed unused import of DateHelper from NoteAdapter . java to clean up the code and improve readability
updated backup notification messages and error handling in Backup . java and Captions . java to improve clarity and functionality of backup loading feedback
mow - 1186 make the simple panel scroll to the right of the euclidian view
replaced the creation of a temporary file with a direct file creation in ShadowParcelFileDescriptor . java to simplify the file creation process and
replaced ` poll ( ) ` with ` removeFirst ( ) ` and ` addFirst ( ) ` methods in ` StackBasedSecurityContextHolder
updated the rule name from " optimizations " to " controversial " in BooleanInversionTest . java to accurately reflect the
added unit tests for ` XorNode ` and ` XorNeutralSnippet ` in ` IntegerEqualsCanonicalizerTest . java `
added a new constant STRING _ ARRAY in TypeFactory . java to define a String array type for better type handling
refactor ` hideIme ( ) ` method to ` hideIme ( ) ` and introduce ` allAppsLogger ( ) `
force bit density to fix network issues , resize below if needed .
updated assertions in TimelineMetricCacheSizingTest and modified cache removal method in TimelineMetricCacheTest to improve clarity of assertions and
minecraftforge / fml / par1player / par1player / par1player / gl _ max _ texture _ size
[ java ] do n ' t call trystoplogrecording ( ) if the recording can not be stop .
added a condition to initialize startPosn to 0 when inTransform is true to ensure startPosn is initialized correctly when not in a transform
add querycontext . setskipstartree ( ) to control whether star tree should be skip
added a lockNearbyView variable and modified refreshView method to handle refresh behavior to improve thread safety and ensure progress bar visibility is managed correctly
add maptransformer . of ( map < k , v > ) and map . inverse ( ) and bimap ( ) to maptransformer
refactor methods in EmeddedObjects and EmbeddedObjects classes to improve code readability and maintainability
added support for loading launcher widget information in the LauncherPreviewRenderer and PreviewSurfaceRenderer classes to enhance widget management capabilities by allowing retrieval of loaded
replaced ` ChangeListener ` with ` StateChangeListener ` in ` StageSelector . java ` and ` StageAction . java ` to improve event
added methods to retrieve and set the calling process ID and UID in the ShadowBinder class to enable better control over the process ' s UID and
replaced ` @ AutoValue ` with ` @ Nullable ` for ` message ` and ` cause ` in the ` ExpectationFailure ` class
removed a warning log statement indicating no support for deserializing messages to streamline the code by eliminating unnecessary warnings
simplified the calculation of newW and newH based on target dimensions to ensure newWidth and newH are set to - 1 when
added support for character escape sequences in CoreMarkdownNodeRenderer and updated MarkdownWriter to handle newline characters to ensure proper formatting of quoted strings in Markdown
added a neutral button to delete a file and refactored password setting logic in SharePasswordDialogFragment . java to improve user experience by
replaced private static final methods with static final methods for MAP _ ADDRESS and UNMAP _ BUFFER in IoUtil . java to improve code
changed method visibility from public to package - private in AbstractAssert _ describedAs _ printed _ to _ console _ Test from package - private to
added slider option support for keytab directory and principal in LlapOptionsProcessor . java to enhance flexibility in configuration for Slider AM key
updated the ` tearOutGraphViewContainer ` method to accept a ` JFrame ` parameter and adjusted the ` tearOutGraphView
added loader completion handling and refactored shortcut addition methods in LauncherModel . java to improve thread safety and ensure shortcuts are only added when
modified the ` NodeManageMemoryMergeOperator ` , ` NodePathsConvertOperator ` , and ` NodePathsCountOperator ` classes to use `
updated the ` ValidationReport ` class to include additional parameters for type , guid , and check results and added a new ` JsonValidationReport `
added a method to retrieve the Cipher provider name and modified the exception handling in RSAClientKeyExchange . java to improve error handling and provide clear
[ hotfix ] [ mesos ] rename dynamicconfiguration to flinkconfiguration in containerspec
change log level from WARNING to OFF in CCJSqlParserUtil . java to disable logging for better performance
removed unnecessary indentation in AggregateLifeCycle . java to improve code readability and maintainability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private static final to public static in DefaultMapScaleBar . java to allow access
removed the @ Ignore annotation from CovariantOverrideTest . java to mark the test as ignored since we do not know how to implement it co
replaced instances of ` Curly ` and ` Ques ` with ` Qtype ` and ` Qtype . LAZY ` and
camel - 14850 : camel - jbang - load route from xml should use the type converter to convert the resource to xml .
added space minimum and maximum settings to the getXAxis ( ) method in ScatterChart . java to improve the visual appearance of the
updated formatting of the " as INTERVAL " statement in ExpressionStringBuilder . java to improve code readability and maintain consistency
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` and overridden it in ` BaseState ` to
added a check for the " UTF8 " key in the properties map to ensure that a valid UTF8 key is present in the system resource
updated LuceneTestCase to use MixWithSuiteName and added logging for random values to improve test reliability and facilitate easier
added logging for long - pressing an AllApps item in StatsLogManager and ItemLongClickListener to enhance user experience by tracking long - press
added null check for log in StoreWAL . java and created a new test class Issue112Test . java with a double commit test to
added a condition to check if the ' showSectorLandInfo ' variable is set to true based on the ' preset ' property to ensure
[ hotfix ] [ runtime ] fix generic in typeinfo base class
refactor Enum class to improve code readability to enhance maintainability and facilitate future updates
added a randomSelection parameter to the buildNearbyRandom method and improved error handling for invalid configurations to enhance flexibility in nearby random
improve performance of temporarycache . retrieve ( ) and temporarycache . cacheobject ( ) .
set visibility of createSQLViewContainer and createWMSLayerImportContainer to false in NewLayerPage . java to improve user interface respons
initialize Availability _ availability to Availability . UNAVAILABLE to ensure proper initialization of availability state
updated methods in FetchInvDataMsgHandler and PbftDataSyncHandler to use BlockCapsule instead of blockNum to improve clarity
chore : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 0 (
replaced the ` _ freeSpaceReclaimDisabled ` boolean with a ` _ freeSpaceReclaimQ ` integer and updated related methods to
changed KDCOptions fields from public to private static final in KDCOptions . java and added a new class KdcDefaultOptions . java
updated the initialization of JsonWriter to ensure proper type casting and initialization to improve code clarity and prevent potential ClassCastException
updated spacing and formatting in ProfilePager . java for consistency to improve code readability and maintainability
renamed the method ` paintBackground ` to ` paintComponentBackground ` in ` Slider . java ` to clarify that the background
added a method ` valueFromClassConstant ` to retrieve a value from a class constant in ` Configuration ` to improve property handling for object value
added error handling to the initialize method in KafkaService to improve stability by logging errors during service initialization
updated RESOURCES _ TO _ ALWAYS _ ACQUIRE to use ImmutableSet instead of Set to improve flexibility in resource requirements
improve error message when auto - create channel for non - default message endpoint
added functionality to index keywords in HTMLDocument and implemented a test for indexing keywords in TestDemo to enhance index functionality and ensure correct keyword handling in
updated SDK version check from S to R in FileUploader . java to ensure compatibility with newer Android versions
added an else clause to initialize the _ addresses list in MemcachedSessionDataMapFactory . java to ensure that the _ addresses list is only initialized when
updated the instantiation of CorrespondenceSubclassToFactoryCall to use the class type instead of creating a new instance to ensure compatibility with the
refactor Builder class to improve code readability to enhance maintainability and facilitate future updates
update isbntobibtexfetcher to use http : / / www . ebook . de / de / tools / isbn2b
polyglot : increase keep alive time to 10 second
added null check for text before calling fireDataChanged ( ) and setCursorPosition ( 0 ) to prevent potential NullPointerException when text is null
make sure we do n ' t have duplicate category in the sentiment model
added a line trimming of whitespace in SuffixURLFilter . java to ensure proper processing of lines without leading or trailing spaces
added a check to return early if the player is in godmode before processing combat invocation notifications to optimize performance by avoiding unnecessary processing
wly - 1341 fix the bug that the checkbox creation dialog do n ' t register the popup correctly .
updated LinkedHashMapCache and BoundedLinkedHashMap constructors to accept maximumSize as a parameter to simplify cache initialization by removing unnecessary parameters
replaced ` _ channel . close ( ) ` with ` close ( ) ` in ` ChannelEndPoint . java ` to ensure proper resource management
modified key index validation logic in FixAcidKeyIndex . java and removed KeyIndexBuilder instantiation in OrcRecordUpdater . java to ensure
updated exception handling in DirectUpdateHandler2 . java to include Locale . ROOT to improve error handling clarity and ensure consistent locale handling
add storecheckguard to writenode and fix canonicalizerphase
do n ' t check reachability of exception dispatch block in bciblockmapping
bugfix : add getclassificationdisagreement ( ) method to dbcloud and implement it in abstractcloud
removed unnecessary ` BuildTarget . copyOf ( ) ` calls in multiple Java files to simplify the code and improve readability by eliminating unnecessary
refactor SqlRunner class to improve code readability to enhance maintainability and facilitate future updates
changed the type of ` date _ taken ` from ` String ` to ` long ` and updated related methods in ` FileStorageUtils ` to
refactor DefaultSdkProvider to use a HashSet for known SDKs instead of a TreeMap to improve efficiency and maintainability of the SDK management logic
replaced ProgressIndicator with ConfidenceProgressIndicator in CreateOfferView . java to enhance user experience by providing a more appropriate progress indicator
updated USER _ AGENT header from " Cling / " to " UMS / " in RequestHandler and RequestHandlerV2 , and added
force iteration of bpts when they have the same blockindex , close # 119
added constants for message view types and modified the onCreateViewHolder method to handle different view types to improve code clarity and maintainability by
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` in ` LinuxLibrary . java ` and ` MacOSXLibraryDL
corrected a typo in the regex pattern in EnglishGrammaticalRelations . java to ensure accurate matching of target expressions
removed the ` BufferedImage ` parameter from the ` insert ` method and related calls in ` TexturePacker . java ` to simplify the method signature
replaced the ` getVisitors ( ) ` method with a ` apply ( ) ` method in ` RefactorModule ` and updated the stream
added methods ` getChildByName ` and ` getChildByNameRecursive ` to retrieve elements by their names and their recursive children to enhance functionality by allowing retrieval
set the " Content - Charset " header to " UTF - 8 " in HttpSolrServer and BasicHttpSolrServerTest to ensure proper handling
updated SystemUiController to use SystemUiControllerFlags instead of static UI _ STATE _ ALLAPPS and adjusted related methods to enhance UI state
removed the private ClientConfigurationService field from IntrospectingTokenService . java to simplify the service initialization process
updated RuntimeException message format in HiveRecordSet . java to include additional context to improve error reporting for better debugging and debugging
removed the ownerId field from NodeEntry . java to streamline the code by eliminating unnecessary fields
rename configuration key from ` BackupSnapshotAferTakingSnapshot ` to ` BackupSnapshotAfterTakingSnapshot ` in ` SnapshotManagerImpl .
added score calculation to the merge method in TextFragment . java to ensure that the score value does not exceed the score of the text fragment
removed the private Digester instance from Md4PasswordEncoder . java to streamline the code by eliminating unnecessary dependencies
added a validation check for maximumUnimprovedStepCount in UnimprovedStepCountFinish . java to ensure maximumUnimpro
added a check to return early if there are no currently opened editors to optimize performance by avoiding unnecessary processing when no editors are open
updated the ` verify ` method in ` BDDMockito ` to use ` Mockito . verify ` instead of direct calls to ` verify
updated the classloader retrieval method from Thread . currentThread ( ) to PathScanner . class to ensure the correct class loader is used for the PathScanner
fix : add async api to codefirstpojo # sayhi2
add log to abstractsplitbraintest ( # 11936 )
added null checks for LogoutConfigurer before adding a logout filter in DefaultLoginPageConfigurer and ServerHttpSecurity to ensure proper handling of logout
[ giac ] do n ' t use degree ( ) if the degree be 0
added log consumer functionality to DockerComposeContainer and created a new DockerComposeLogConsumerTest class to enhance logging functionality and improve test coverage for Docker
updated the parameter type of the testMapping method from Object to Class < ? > to improve type safety and clarity in the method signature
removed unused imports from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to facilitate the creation of a ` Throwing
replace ` break ` with ` return ( true ) ` in ` ConsoleActivity . java ` to ensure proper exit status handling in the application
camel - 14284 : camel - platform - http - add support for text body in platform - http
added methods to handle path with platform - specific separators in MorePaths . java and updated argument resolution in CopyStep . java to improve path handling
added a null check before processing parameters in AuditEvent . java to avoid potential NullPointerException when authorizationContext is null
replaced ` loadLibraryOnlyIfPresent ` with ` throwExceptionIfFail ` in ` load ` method and added a check for file existence to
updated SDK version from " 4611349 " to " 4514284 " and added tests for stop and speak methods in ShadowText
add transactionlogkey to queuetransactionlog so that it can be compare and hashcode
added support for enabling SQL without profile in JdbcEnvironmentProperties and JdbcEnvironmentRepository classes to improve flexibility in SQL execution by allowing users to
added a try - finally block around the write method in ConnectHandler . java to ensure proper resource management and prevent potential memory leaks
use eventgenerator . fromfunction instead of supplier for registryevent . newregistry
updated date formatting in DateUtils to use calendar instead of date to ensure accurate date representation for better user experience
updated ` loadValue ` method in ` CachedThreadStatesGaugeSet ` and modified ` getThreadInfo ` method in ` ThreadStatesGaugeSet `
added a protected field ` prevTlogOnPrecommit ` and modified sleep duration in ` LeaderTragicEventTest ` to improve transaction
updated the version of FastAsyncWorldEdit from P2 - V6 to 1.17 to reflect the latest version of FastAsyncWorldEdit
added a check to ensure the output directory exists before creating it to prevent potential errors when the output directory does not exist
added a method to calculate the normal vector for a DefaultObj and updated the TriangulationHelper to use it to improve the handling of normal
updated JdbcAuditService to use principalId and identityZoneId instead of principal and identityZone to improve clarity and consistency in retrieving audit events
refactor SpanCollector class to improve code readability to enhance maintainability and facilitate future updates
added a null check for the current session before accessing its info to avoid potential NullPointerExceptions when accessing session information
refactor TransactionIsolationLevel class for improved readability to enhance maintainability and clarity of the code
updated method names from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java
added logging of the current thread ' s remote URL in TestSession . java to improve debugging by providing clearer context on the thread being forwarded
refactor CookieManager class to improve code readability to enhance maintainability and facilitate future updates
simplified the return statement in LauncherExtension . java by returning an empty ArrayList to improve code readability and maintainability
added OverviewToAllAppsTouchController to the list to enhance user experience by providing access to touch controllers
replaced the ` scaleHotseatWithWorkspace ` method with ` getHotseatScaleAndTranslation ` in ` LauncherState `
added a condition to check if the class name starts with " org . mockito . internal . junit . JUnitRule " to ensure
replaced instances of ` dstnull ` with ` dstByteArray ` and updated related method calls in ` MappedResizeableBuffer . java ` to
replaced the direct addition of a BalanceListener with a private variable balanceListener to improve code readability and maintainability by reducing redundancy
added a conditional check for edge mode before converting color in RealisticRenderer . java to ensure color values are set correctly based on edge mode and
added null check for httpClientResponse in HttpClientBeanPostProcessor . java and refactored log initialization in multiple files to improve code robustness and
replaced the import of PatternUtil with a direct call to PatternUtil . checkPattern in Gl200ProtocolDecoder . java to streamline the
refactor playback time handling in FullDetailsActivity to improve clarity and maintainability to enhance the reliability of playback tracking in the application
refactor SpanishXMLTreeReader to introduce a new method ` isEllipticNode ` for better clarity and functionality to enhance
added a condition to clear the language DC if it is empty in InstallItem . java to ensure that the item ' s language is reset when
updated the ReactiveLoadBalancerClientFilter to override the scheme based on the server ' s secure status to ensure correct scheme overrides based on the server '
http : / / issues . apache . org / jira / browse / amq - 4892 - fix duplicate bytebuffer usage in
changed the visibility modifier of the ` fullFilePathFromClassName ` method from ` final static ` to ` static ` in ` NativeImageDebugInfo
refactor Correspondence creation to use a lambda expression instead of an anonymous class to improve code readability and reduce boilerplate code
replace ` isNonUSLangSupported ( ) ` with ` isNonENLangSupported ( ) ` in ` JRELocaleProviderAdapter .
removed null check for redeemData in LocalTransactionSigner . java to simplify the logic for obtaining the full key
minecraftforgeclient need to implement texture override for forge . close # 3550
added a return statement to TxCacheDB . java to indicate a successful execution of the method
updated import statements from ` com . sun . xml . internal . ws . org . objectweb . asm ` to ` jdk . internal
refactor FastDictionary class implementation to improve performance and maintainability of the code
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5883 :
updated GPS event parameters and epsilon in FlightEventsTest . java to improve accuracy and accuracy of flight event handling
[ beam - 10670 ] update protobuf to v1p26p0 for textsource and bytekey to v1p26p
replace target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure proper handling of namespace declarations
rename profilepicturelink to profilepicturelinks and add new method getstudentprofilepicturelink ( )
added a short rules list and modified the default rules initialization in DefaultPasswordValidator . java to enhance password validation flexibility by allowing short passwords and
danielwagnerhall : increase mortbay timeout to 20 second .
removed the JUnit test annotation from ProxyClassSerializationTest . java to simplify the test class by eliminating unnecessary dependencies
updated the string concatenation syntax in DLNAMediaInfo . java to use " format = bgr24 " instead of concatenating strings
fix speculativeguardmovementphase canonicalization during test .
added checks to ensure that only the AUTHENTICATION _ MANAGER bean definition is processed in the AuthenticationManagerBeanDefinitionParser to enhance security by
updated ForwardedRequestCustomizer to handle server and host separately to improve handling of forwarded requests for different server configurations
set the length of the StringBuilder to zero in ConsoleReader . java to ensure the StringBuilder is properly initialized before use
change access modifier of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists
update OpenIDE - Module - Specification - Version to 1.56 and OpenIDE - Module - Specification - Version to ensure compatibility with the latest
hbase - 15936 add default value for hbase . server . netty . tls . wrapsize in x509util and net
updated multiple Java classes including CookieStore , HttpURLPermission , Inet4Address , Inet6Address , InetAddress , ProtocolFamily , SocketOption ,
replaced JUnit ' s TestCase inheritance with JUnit ' s Test annotations and added unit tests for incorrect line length exceptions to improve test
added validation for protocol binding in OpenSamlAuthenticationRequestFactory and created corresponding tests in OpenSamlAuthenticationRequestFactoryTests to ensure valid protocol binding and
refactor SurfaceControl transaction handling in DepthController . java to utilize AttachedSurfaceControl for root surface control to improve code clarity and
updated the version return value from " main " to " 2.5 . x " in AsciidoctorConventions . java to
hbase - 15836 allow bulk load to create table ( chaoyu tang via szehon )
updated subList method calls and adjusted measurementSchemas array indices in TsFileManagement . java and MergeTaskTest . java to ensure correct indexing of measurement
camel - 14850 : camel - core - add support for convert file to inputstream in genericfileconverter
added login functionality to DefaultShardManager and DefaultShardManagerBuilder classes to enable conditional login behavior based on user configuration
removed unnecessary whitespace in the DeleteGlobalRef method call to improve code readability and maintain consistency
updated the table name from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to clarify the purpose of
added a check to determine if the response completion is marked before processing it to ensure that the response is only processed when it is marked to avoid
added a check for whether the user is a student before verifying the giver of the response to ensure that the response giver is only
added support for enabling and disabling linked profiles in the BMPImageReader to enhance user experience by allowing users to link images
updated the location parameters in the setSimpleCuboid method calls in ClassicPlotManager . java to correct the positioning of the plot block
added a wait message to wait for PMD checks in the package before executing the actionPerformed method to improve user experience by ensuring PMD checks are
refactor grid presentation setup to use a dedicated method for setting grid sizes to improve code readability and maintainability by reducing duplication
changed return values from false to true in ContributionsListFragment . java to ensure that the method returns true for both success and failure scenarios
added a test for skipping a range query in DistinctPrefixFilterIT and modified the scan logic in BaseResultIterators to improve test coverage
added a new test method ` testAcrobatCheckBoxGroupProperties ` to validate checkbox properties in ` PDButtonTest . java ` to ensure
added a method ` getFileLastModified ` to retrieve the last modified timestamp of a file to provide functionality for retrieving the last modified timestamp of a file
added a check for the existence of a " metaTable " in the table properties before processing AVRO files to ensure that metadata tables are validated
refactor currency input field to combobox for currency selection to enhance user experience by allowing users to select different trades by country
changed catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching all possible exceptions
added a new boolean variable ` mStartedEnterAnimation ` and modified animation logic in ` IconRecentsView . java ` to improve animation handling
added a new public String field ` activeKeyId ` to the ` UaaConfiguration ` class to provide access to the active key ID for better
updated action labels and descriptions for email sending actions in SendMailActions . java to improve clarity and usability of email sending functionality
changed the ` isActive ` variable from private to volatile in ` SocketServer . java ` to ensure that the ` isActive ` variable cannot be modified
fix ( core ) : fix selectionpartiallyorderedbydesc operation order by expression
cast the result of ` buildImplicitVarPart ` and ` toStringLHS ` methods to ` CharSequence ` to ensure proper type handling for string
added an import for MainApp and modified the condition to check if the application name matches OWNCLOUD _ APP _ NAME to ensure proper
hbase - 15936 allow hbase . rootdir . perms to be configure by hbase - site . xml if kerberos be
updated method calls from ` httpServletRequest ` to ` httpServletResponse ` in JakartaServletWebExchange and JavaxServletWebExchange
refactor Instant class to improve readability to enhance maintainability and facilitate future updates
updated the return type of getStateFormat methods from int to String in multiple classes to allow for more flexible state format handling in the application
removed the type parameter from the logging statement in CentralAuthenticationServiceImpl . java and modified the conditional check in AbstractTicket . java to simplify
pdfbox - 4892 : ignore illegalargumentexception , a suggest by valerybokov
reformatted conditional statement for better readability to enhance code clarity and maintainability
refactor PluginParameterExpressionEvaluator to accept a PathTranslator for improved file path alignment to enhance flexibility and maintainability of file path handling
[ beam - 13434 ] move protobuf coders to sdk . extensions . protobuf ( # 13434 )
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer to ensure proper handling of signed numeric literals in queries
updated LaunchLugHandler and RailGuideHandler to include parent length in LaunchLug and RailButton creation to improve clarity and
removed the getNonceFactory method from the BitmexStreamingExchange class to streamline the code by eliminating unnecessary functionality
( chore ) camel - mail : avoid string concatenation in log statement
[ java ] set default timeouts for driver conductor test to avoid flakiness .
changed the initialization flag from true to false in ScanSpec . java to disable class loading initialization for improved performance
added a call to grabFocus ( ) in FullTextSearchPanel . java to ensure the search field focuses when necessary
refactor NioParams initialization in TlsConnectionLogging . java to improve code readability and maintainability
removed an assertion from the getDouble method call in StatementTest . java to simplify the test by eliminating unnecessary assertions
updated assertion message format in TestSolrConfigHandler . java to include server URL to improve clarity of error messages related to expected values
updated CsrfWebFilterTests to mock ServerHttpRequest and ServerWebExchange for non - standard HTTP methods to improve test reliability by ensuring
added density handling in FilterResourcesStep . java to improve clarity of drawable pattern matching based on the density value
added a buttonUIID variable and refactored UIID updates in ComponentGroup . java to improve clarity and maintainability of UIID
removed density density check from the condition in RecentsAnimationDeviceState . java to simplify the condition for better readability and maintainability
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java to demonstrate
added import for LuceneTestCase . AwaitsFix and annotated ReplicationFactorTest with @ AwaitsFix to address issue SOLR
fixed - rscheduleservice . schedule ( ) method throw npe if nextstartdate be null
simplified the condition for updating credentials in FileDownloader and FileUploader to improve code readability and maintainability
hbase - 15827 avoid npe in compactor . closefilescanners when scanner be null
[ java ] use getOrDefault ( iface , 0L ) . doubleValue ( ) instead of get ( iface ) in netmetrics .
added a nonce parameter to the claims retrieval method in TokenMvcMockTests . java to ensure the nonce is correctly associated with the token ' s
updated multiple editor classes for consistency and clarity to improve maintainability and readability of the codebase
set the width and height of the formLayeredPane to dynamically adjust its dimensions to improve user interface responsiveness by ensuring the form layer
updated import statements and added a maxY method in BrowserContentPane . java to improve code clarity and ensure proper handling of height calculations
modified the ` openDatabase ` and ` closeDatabase ` methods to return a boolean indicating if the database connection is successful to improve error handling by
replaced static final String DOCKER _ COMMAND with Platform . DOCKER _ COMMAND in DockerTestUtils . java and Platform . java
added null check for input stream in initializeParameters method to ensure robustness by preventing potential NullPointerExceptions
updated the ` drawLeaveBehind ` method to accept a color parameter for folder leave behind color to enhance flexibility by allowing customizable color
report an error dialog if the plugin do n ' t work properly with canary versions of Android Studio .
bug 10625 : add null check for identityproxy table name to avoid npe
added ` modulePersistEnable ` and ` modulePersistDisable ` lists and modified related methods in ` StartArgs . java ` to enable and disable
updated argument length check from ` length = = = 1 ` to ` length > = 1 ` in ` GeminiMarketDataService
replace HashSet with LinkedHashSet in VerifyPasswordResetRequestAction . java to ensure the order of questions is maintained in the request flow scope
add unit test base on user forum issue
update removeExclude calls in AuthCheckFilter . java to exclude specific setup resources to streamline security by removing unnecessary setup - related jsp files
refactor Scheduler to encapsulate runnable execution logic into a separate method to improve code readability and maintainability by encapsulating execution logic in a
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use String . . args instead of String [ ] to improve
modify XMLParser to handle potential - 1 character read failures to improve robustness by handling potential end - of - stream exceptions
added a new test method ` testHorizPageOverflowHidden ` to the ` TextVisualRegressionTest ` class to address text issue causing
added pivot values for the arrow in the DeepShortcutsContainer to ensure proper positioning of the arrow based on icon positioning
do n ' t print stacktraces in case of interruptedexception in fileupdatemonitor
updated the ` AbsSwipeUpHandler ` to include a ` refreshView ` parameter for thumbnail updates to enhance the functionality of the thumbnail update
pdfbox - 4892 : improve usage message , a suggest by valerybokov
updated the ` InternetAddress ` constructor to include a ` true ` parameter and modified the validation check in ` HostnameFormatSpecifier ` to ensure proper
updated method calls to use ` this ` instead of ` AuthenticatorActivity . this ` for consistency across multiple activities to improve code readability and maintain
updated the handling of ` maxDocId ` in ` SizeBasedDocIdIterator ` and ` SizeBasedDocIdSet ` classes to ensure
modified the ` promptToOpenFile ` method to accept an ` existingFileName ` parameter and modified the logic for setting the current directory to enhance
updated page count calculations in AppsCustomizePagedView and removed setCurrentPageToWidgets method in AppsCustomizeTabHost to improve
refactor FlightConfiguration to use InstanceMap for managing active instances and update bounding box calculations to improve the accuracy of flight configuration by utilizing
updated test cases to use " direct " instead of " seda " in MicrometerMessageHistoryTest and SpringMicrometer
updated DateTimeFormatter instantiation to include Locale . ROOT to ensure consistent date formatting across different locales
[ ds - 3852 ] exclude hidden metadata from rest endpoint ( # 3853 )
added a new test method ` testMissingRequired ` to ` TestStarTreeConfig . java ` to ensure that missing dimension and metric names are
updated the parameter name from " receipients " to " recipients " in the recipientList method signature and added test methods for dynamic and static
refactor InlineLayoutBox and HoverListener to improve paint handling logic to enhance code clarity and ensure proper repainting behavior based on paint
refactor AuthenticatorActivity to use OperationsService for detect authentication methods to improve the management and management of authentication methods in the application
