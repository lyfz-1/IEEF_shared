refactor SocketAppender initialization to set remote host and port directly to improve clarity and flexibility of socket appender configuration
refactor header handling in BasicAuthPlugin to use a more concise method to improve code readability and maintainability by reducing repetitive
simplified the retrieval of msgLength in ManyToOneRingBuffer . java to improve code readability and maintainability
server : fix the calculation of cpu / ram overcommit ratio when vm detail cpu / ram be not set .
added antiAlias flag handling in ShadowPaint and updated tests in PaintTest to reflect anti - aliasing functionality to enhance the functionality of the shadow
updated the title of the MassSetFieldsDialog from " Set / clear / append / rename fields " to " Manage field names & content
do n ' t fail detection test if eclipse be not use
fix issue with digest authentication without a nonce
added a new interface ` RemoteInputListener ` and modified the ` RemoteInput ` class to utilize it for handling input connection events to enhance
refactor conditional statement formatting in OrcEncodedDataReader . java to improve code readability and maintainability
updated filter condition to check if the thing is enabled before filtering out AbstractHomeConnectThingHandler to ensure that only enabled items are processed in the
added null check for ' bs ' before removing and adding policies to prevent potential NullPointerExceptions when ' bs ' is null
updated JSON assertion methods to use ` matches ` instead of ` isEqualTo ` for string comparisons to ensure compatibility with both Java 9 and later versions
added JSON serialization for DAG information in TezTask . java to enhance debugging capabilities by providing detailed DAG information
hprof : add getheaptime ( ) and getheadertime ( ) method to get heap time
replaced RxJava2Tasks with CommonsApplication for retrieving upload count to streamline upload count retrieval and improve code organization
removed unnecessary check for MVStore in lock logic to simplify conditional logic for better readability and maintainability
[ issue # 5021 ] fix the issue of commitlog be not respect maxoffset ( # 5022 )
updated folder opening logic in Launcher . java to handle cases where a folder is marked as open but associated folders are not open to ensure proper
added a test method to verify that PGProperty names are sorted in ascending order to ensure that PGProperty names are consistently sorted in ascending order
added a new constant HOVER _ MESSAGE _ EVALUATION _ POINTS _ GIVEN to the Common class to provide a
changed method parameters from ` Object ` to ` ItemInfo ` in ` UninstallDropTarget . java ` to enhance type safety and simplify item
updated assertion method in RequestBuilderTest to use getMessage ( ) instead of hasMessage ( ) to improve clarity of error message validation
updated NearbyActivity and NearbyMapFragment to use class references instead of string literals to improve code readability and maintainability by
renamed the parameter ` status ` to ` sessionStatus ` in the ` FlatProfileContainerFree ` constructor to improve clarity and consistency in
added a new boolean property ` sendZeroAnomalyEmail ` to the ` EmailConfiguration ` class and its corresponding getter and setter methods to enable
[ hotfix ] [ kafka ] fix npe in kafkaconsumerbase # open ( )
removed getUser and getGeofence methods from DataManager . java to streamline code by eliminating unused methods
added a constructor to BlockingResponseListener that accepts a maximum length to enhance flexibility in handling request limits
refactor memberbroadcastsreceived method to accept a byte array instead of a byte array to improve flexibility in handling different data types
replaced System . out . println with logger for snapshot paths and added a try - finally block for resource management to improve logging clarity and
fix broken test due to url change
[ hotfix ] [ test ] fix checkstyle violation in configmetadataprovidertest
updated import statements and variable names in ListFragment and SnoozeActivity for clarity to improve code readability and maintainability by using
refactor directory stream filtering by introducing a private static class ` AcceptAllFilter ` to improve code readability and maintainability by centralizing
refactor JdbcTestDataSet class for improved readability to enhance maintainability and facilitate future updates
fix for jdk - 8047029 do n ' t throw noclassdeffounderror when find unique concrete method
refactor Docker image validation into a new utility class ` DockerImageName ` to improve code readability and maintainability by centralizing tag validation logic
updated the login error dialog string from " login _ failed _ username " and " login _ failed _ password " to " login _ failed _
improve the autofocusing of some form class to reduce memory consumption .
added a test method for verifying identity zone saml properties in SamlIDPRefreshMockMvcTests to ensure correct handling of identity zone configurations
added conditional logic to update the list in ComparableVersion . java and created a new test for Mng 7644 in ComparableVersionTest . java
replaced topLeftMode ( false ) and topRightMode ( true ) with bottomRightMode ( false ) and adjusted return statements accordingly to
moved ` ParallelUniverse ` and related classes from the ` org . robolectric ` package to the ` org . robole
refactor method return type handling in LocalCacheFactory and NodeFactory to improve code clarity and maintainability by reducing redundancy
updated the fill pattern from SOLID _ FILL to SOLID _ FOREGROUND in FrillsAndFills . java to improve the
added functionality to display graph edges and self loops in the ProcessingPreview class to enhance visual representation of graph edges and self loops in the processing preview
updated variable and method names from ALLOW _ TVM _ SOLIDITY _ 0 _ 5 _ 10 to ALLOW _ TVM _ SOLID
rename ` ` addmanaged ' ' to ` ` manage ' ' to be consistent with other method name .
fix bug where drag handle translation be not set to 0 on device profile change .
removed unnecessary logging in CollectionViewer , CommunityViewer , and ItemViewer classes to streamline logging for better readability and maintainability
updated the configuration description for pushing filters during query optimization to clarify that filters may be push down in the operator tree when hive .
added an assumption in ScanningAppProviderRuntimeUpdatesTest to skip tests on OS X to address test failures related to build server issues on OS
added Maven bundles for " jetty - alpn - java - client " and a debug flag for " jetty - alpn - client
fix for activiti optimistic lock exception in executionentitymanager # updateprocessinstancelocktime
refactor transaction handling logic to improve code readability and maintainability
replaced ` @ AddToRuleKey ` with ` @ ExcludeFromRuleKey ` in ` GenruleBuildable . java ` to exclude
added a method ` whichExec ` to determine the executable path for Firefox in ` AsyncExecute ` and updated the ` FirefoxCustomProfileLauncher `
do n ' t use putifabsent for colfamtodynamictables mapping ( fixes # 2282 )
[ hotfix ] [ table - common ] remove unnecessary suppresswarnings in hadoop class
added logic to retrieve and add derived columns and indexes from the parent table if the client version is below MIN _ SPLITTABLE _ SYSTEM _
fix issue where instructor do n ' t have to update the googleid when add a new account
fix import of testcellreference in allxssftests . java
fix the mana lens piston not work on block that have a hardness . close # 1188
added a new file LongPointerPressTest3049 . java to implement a long pointer press test with network error handling to demonstr
remove dependency on trufflecompileroptions . trufflefunctioninlining to disable the inlining check .
refactor code to use ternary operator for null checks in BaseBuilder and XMLConfigBuilder classes to improve code readability and reduce redundancy
simplified the condition in ListBlockParser and added a new test for deeply indentation in SpecialInputTest to improve code readability and
added a new abstract class ` AbstractOptionalAssert ` and refactored ` OptionalAssert ` to use it to improve code reusability and
ignore webflux test until http : / / github . com / spring - cloud / spring - cloud - gateway / issues / 1070 be
[ wasm ] make testcaselogger . savemessage accept string .
removed unnecessary whitespace in RouteStartupOrderLastTest . java to improve code readability and maintain consistency
added a condition to check if the video format is video before using web sub settings to ensure web sub settings are only applied when the video format
added import of Security and set TLS disabled algorithms to an empty string in ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS algorithms
server : do n ' t allow zone - wide storage pool creation in vmware
updated logging statements in Driver . java and QueryResultsCache . java to use a local variable for CacheEntry to improve logging clarity and maintainability
added a ` maybeUpdateModel ( ) ` method to ` AddManagedDependency ` and updated related logic in ` ManageDependencies ` and ` Add
added a test for sending an intent with a specified request code in ShadowActivityTest and implemented the send method in ShadowActivity and ShadowPendingIntent
added FBO functionality and improved rendering hints in RocketFigure3d . java to enhance rendering control and ensure proper scaling based on
added synchronization to the controllerListeners list in HydrawiseAccountHandler and modified the dispose method in HydrawiseControllerHandler to ensure thread safety
solr - 9893 : skip e2e test that do not work with java 9
updated year retrieval to use ` ChronoField . YEAR _ OF _ ERA ` instead of ` Math . abs ( ) ` for BC dates
fix a potential npe in jabber when connect to a jabber account .
added ` cur _ ws _ commit _ id ` to the list of commit IDs in ` TxnHandler . java ` to provide additional context for
replaced ByteChunk with ByteBuffer in BufferedInputFilter . java to improve memory efficiency and handle BufferOverflowException more gracefully
added a new method ` toSync ` to the ` AsyncUtils ` class and created a corresponding test class ` AsyncUtilsTest ` to fac
added ActionGraphBuilder parameter to multiple compiler factory classes and updated related methods to utilize it to enhance compiler configuration management by integrating ActionGraph
danielwagnerhall : add a test for hidden file input in firefox
removed duplicate import statement for java . util . Date in SQLManager . java to streamline code by eliminating redundancy
added a check to return the local Maven directory if the file does not exist to ensure the application uses the correct local Maven directory when the file
make sure hidden label do n ' t show again
fix ( ctelement ) : fix npe in ctelementimpl . getmetadata ( ) ( # 4348 )
use addflags ( ) instead of setflags ( ) in defaulttrackoutput .
do n ' t re - order entity iterable if it be already sort by id .
updated error message to indicate missing method call for verify ( mock ) to improve clarity of error reporting for better debugging
added a null check for backupFolder before logging expiration messages to avoid potential NullPointerException when backupFolder is not initialized
added a new file ` ArrayNewInstanceOfVoid . java ` implementing a test for the ` Array . newInstance ` method to demonstr
added @ AddToRuleKey annotation to the toolType field in ClangCompiler and GccCompiler classes to ensure that the toolType is
replaced hardcoded timeout value with a constant PINCODE _ TIMEOUT to improve code maintainability and readability by avoiding magic numbers
polish ` ` implement issampled method in prometheusmeterregistrytest ' ' and ` ` implement method in prometheusexemplarssample
removed @ Ignore annotations from multiple test classes to streamline test execution by eliminating unnecessary MongoDB server requirements
http : / / issues . apache . org / jira / browse / amq - 4237 - fix test case which fail
updated the condition to check if the table is an artificial instead of a simple name check to improve accuracy in determining if the table is
updated file status checks from ` isFile ( ) ` to ` isDir ( ) ` in ` FileOutputCommitterContainer . java ` and `
updated session attribute handling logic in MongoSessionManager . java to improve clarity and ensure proper management of session attributes
use setsizefromlayout ( ) instead of setfixedsize ( ) in camerasurfaceview .
replace direct reference to ` _ stopping ` with a ` CountDownLatch ` variable for clarity to improve code readability and maintainability by
removed unnecessary whitespace in HuobiStreamingService . java to improve code readability and maintain consistency
camel - 15836 : camel - core - message - history - remove stopwatch and use system . currenttimemillis ( )
do n ' t swallow exception in delayedmonopublishertest # doonerror ( )
replace assertTrue with a conditional failure message in WebsocketTest . java to improve error handling by providing a clearer failure message
refactor AllAppsTransitionController to implement View . OnLayoutChangeListener directly to simplify layout change handling and improve code readability
updated variable names from ' theHandler ' to ' handler ' for consistency to enhance code readability and maintainability by using a more descriptive
int - 1343 add defaultoutputchannel attribute to the < xpath - router / > element ( int - 1343 )
changed cacheSeconds type from int to String and added DurationCapable annotation to MessageBundleProperties and CasCoreWebConfiguration to enhance flexibility in
updated OpenAPI version from ' 3.0 . 0 - rc1 ' to ' 3.0 . 0 ' in ParameterDeSerializationTest
replaced the ` append ( buffer , true ) ` method call with ` append ( buffer , true ) ` in ` ByteBufferPool . java
added a check for the presence of " alt - rt . jar " in the boot class path and printed a warning if it is detected to
updated user names in JdbcScimUserProvisioningTests to be case - insensitive and modified test cases to reflect changes in usernames to ensure compatibility with
added debug option for java 1.7 when use flightrecorderprofiler
added a method ` isStreamEmpty ( ) ` to ` WebCamInputPanel ` and modified ` WebcamInputDialog ` to check
added a condition to check if the content view has content before processing the buffer in HttpParser . java , and implemented a test for chunked HTTP
fix typo find by codespell on fossies . org
added additional method checks for " printf " and " print " in Java2TypeScriptAdapter . java to enhance functionality to support additional print functions
added a new test class ` TestCapacityUntilGCWrapAround ` and native methods for managing metaspace capacity in ` WhiteBox ` to ensure
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the logic to update the endTime based on the timestamp of the resource to ensure accurate calculation of the end time based on the timestamp of the
added unit test base on user forum issue
tmi - jpeg : do n ' t throw illegalargumentexception if icc profile be miss .
fix the rod of the terra shatterer ' s rod not be able to reintroduce a reequip animation
removed configuration and environment bindings from JoobyModule and added a method to ignore specific entry types in SpringModule to streamline bean registration
simplify code by use the container ' s parent classloader
added support for additional nameupgradetector . properties in jmeter . properties . jmeter . nameupdater . properties
added initialization of the ' started ' variable in the EllipsoidRegionSelector class to ensure proper tracking of the selection state during initialization
updated URLs from HTTP to HTTPS in JavaSEPort . java and added a default protocol to enhance security by using a secure connection
[ geos - 7748 ] wfs getfeature api : validate sortby attribute , throw exception if it be invalid
simplified the null check for grantTuple [ 0 ] in AbstractJdbc2DatabaseMetaData . java to improve code readability and maintainability
replaced the use of ` expectedImage ` with ` compatibleImage ` in ` DiagramGenerationTest . java ` to ensure that the image
improve error message if minecraft do n ' t install fml properly
refactor DataUtilities and ReTypeFeatureReader classes to improve code organization and maintainability
fix flaky test locktest . islocked ( )
added methods ` wholeWordTokenize ` and ` joinTokens ` to ` StringUtil ` for tokenization and joining tokens to enhance string manipulation capabilities
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5767 .
refactor command handling and highlighting logic in SystemHighlighter . java to improve clarity and correctness of command processing and highlighting
updated version to " 1.0 . 1 - SNAPSHOT " and set version date to " PENDING " to reflect the current version and prepare
update buffer position to use dimensionSize instead of idx to ensure correct dimension size is used for buffer operations
added support for the shell drag and drop functionality in the QuickstepTestInformationHandler and SystemUiProxy classes to enhance the user experience by allowing
[ log4j2 - 1343 ] fix tcp traffic class test on java 7
8274188 : test / sun / security / pkcs12 / cipher / testcipher . java fails due to tlsv1.
updated description retrieval method from ` getDescription ( ) . getText ( ) ` to ` getLongDescription ( ) ` in ` NearbyMapFragment
added JsonProperty annotation to ScimGroupMember class to facilitate JSON serialization for the value field
refactor HqlQueryRenderer to improve token handling and support schema scoping in query rendering to enhance query accuracy and support for schema scoping
[ java ] fix typo in error message .
refactor Parser class to improve code structure to enhance maintainability and readability of the code
modified the ` offsetStreamIndex ` method to include an additional parameter ` indexStartsAtOne ` to enhance the functionality of ` offsetStreamIndex
tika - 697 add mime type detection for cpio and archive file
[ flink - 18731 ] [ table - planner - blink ] fix monotonicity logic of uuid function
added ` equals ` , ` hashCode ` , and ` toString ` methods to ` OneTimeTokenAccount ` and ` OneTimeToken ` classes
added a condition to check if the assistant is not launched when fling is true to ensure proper handling of fling behavior when the assistant is
added a new file SolarisShortDSA . java that implements key pair generation and verification using DSA to implement a Solar
added a toggleSearchLabel ( false ) method call to ListFragment . java to disable the search label functionality in the user interface
bug cs - 15486 : do n ' t try to create snapshot on primary if the volume be already create
replaced the ServiceConnection implementation with a DetailsServiceConnection class and added null checks before unbinding the service to improve resource management and prevent potential
refactor exception handling in HttpClientTLSTest to use AtomicReference for better clarity to improve code readability and maintainability by using a
removed the equals method from the ConjunctionScorer class to streamline the comparison logic for Scorer objects
added null check for item binding in Launcher . java to improve error logging when item colliding fails
wait for commit to complete before remove the cp group
updated cache size checks and modified cache shrinking logic in DefaultCache . java to improve cache management and enhance performance monitoring
updated API endpoint from v2 to v3 and modified method signatures in various classes to align API versioning with the latest features and improv
added an ` empty ( ) ` method to the ` freenect2 ` class to provide a way to check if the collection is empty
drill - 8023 : release buffer when read empty dictionary page ( drill - 8416 )
updated argument handling and added validation for the market data type in SerumStreamingService . java to ensure correct argument types and improve error handling for
add a config to disable the charging animation when an item be charging on top of a mana pool .
[ java ] make clusterconnectiontimeoutexception more informative and make clusternoderestarttest more robust .
updated exception handling from ' ignore ' to ' ex ' in WaitForHelper . java to improve error logging by logging the exception message for better debugging
refactor DefaultServletTest to use assumptions for directory creation and response validation to improve test reliability by ensuring the filesystem supports question directories
removed duplicate injection of dialogStylesScss and openScreenStyle in ResourcesInjectorFull . java to streamline the code by eliminating red
changed the type of ` changeLogFile ` and ` outputFile ` from ` String ` to ` FileResource ` in ` BaseLiquibase
updated method calls from ` other . x ` , ` y ` , and ` z ` to ` getName ( ) ` in ` BlockWorld
removed unnecessary comments in LongConcurrentLRUMap . java and made CacheEntry class final to improve code clarity and ensure immutability of fields
added regex parsing to resourceConfiguration using Pattern . quote to ensure proper handling of special characters in resource expressions
modified the KRB5CCNAME environment variable handling and updated the EmptyCC command - line argument handling to improve flexibility in retrieving the K
updated the database path from " output _ PrecompiledContracts _ test " to " output _ ValidateMultiSignContract _ test " to reflect the
enable fast sync by default if there be no peer available
simonstewart : make sure we attach the session log to the current thread
do n ' t expand " areequal [ segment [ x , y ] , segment [ z , w ] ] " format expression for segment
added a check to clear pending rendering operations if the implementation is minimized to prevent excessive rendering operations when the implementation is minimized
fix ( hazelcasttestsupport ) : do n ' t sleep after the deadline
fix for continuously update delay - time window of write - behind entry
set the icon of a JLabel to null in GroupTreeCellRenderer to save some space for better visual clarity
updated test methods in TestBlacklistAwareRedirectResolver to use setStrictMatch ( false ) instead of setStrictMatch ( true ) to improve cl
added IO import and modified shutdown test methods in ShutdownMonitorTest . java to improve resource management and enhance test coverage for ShutdownMonitor functionality
mondrian : optimize randomaccessstore . compact ( ) and randomaccessstore . compare ( ) for small fill rate
refactor field retrieval and serialization methods for improved clarity and efficiency to enhance code readability and maintainability by reducing repetitive method
[ hotfix ] [ runtime ] move componentclosingutils to correct package
destroy vm volume when create snapshot fail due to error state
server : fix npe cause by ipv6 range be not set on vpc vr ( # 4748 )
renamed ` InitializeUserDetailsManagerConfigurer ` to ` beanNames ` for consistency to improve code clarity by using a more descriptive
increased the timeout duration for retrieving the leader in the CollectionsAPIDistributedZkTest from 15 seconds to 30 seconds to allow
refactor error message handling by removing the input parameter from the errorMessage method across multiple parameter classes to simplify error message generation and improve logging clarity
updated draw coordinates in URLImage . java to use negative values to ensure proper rendering of images with non - negative coordinates
updated field name comparison from ` solrDocument1 ` to ` solrDocument2 ` in ` SolrTestCaseJ4 . java ` to ensure
pdfbox - 4892 : simplify code , a suggest by valerybokov
[ hotfix ] [ stream ] add cause to streamtaskexception in streamconfig
refactor string building logic in Preprocess . java for improved clarity and efficiency to enhance code readability and maintainability by reducing
removed unnecessary whitespace in the read method of MessagePack . java to improve code readability and maintain consistency
added a new annotation interface named Mapper in the org . apache . ibatis . annotations package to provide a way to define a custom annotation
do n ' t encode empty extension list if fhir do n ' t support it
updated string splitting logic and improved type safety in LibraryManager . java to enhance robustness and prevent potential null pointer exceptions during artifact extraction
added an alias for the " node _ popup _ scripting " menu entry in ScriptingMenuEntryVisitor . java to improve clarity and
updated constants and animations in OverviewActionsView and RecentsView classes to improve task visibility and animation handling based on device profile to enhance
camel - 14284 : camel - jms should not use reflection to get out the jmsmessage
[ hotfix ] fix checkstyle violation in io module
deleted deprecated classes ` AbstractDelegatedVerb ` and ` FailureContext ` to remove obsolete code to streamline the codebase
updated ` GzipHandlerTest ` to use ` final ` for string variables and added a new ` MicroServlet ` for handling non - micro requests
fix onsubscriberepo . distinct ( ) and onsubscriberepo . repeat ( ) not call backpressureutils . getand
added logging functionality and improved error message formatting in SpeedmentImpl . java to enhance debugging capabilities and readability of error messages
added dspace - oai module to load oai config from dspace - config . xml
updated StoreScanner and TestWideScanner to improve row handling and batch processing logic to enhance performance and maintainability of the scanning process
camel - 16400 : camel - jbang - enable jmx by default for this test .
replace hardcoded ' / ' with a constant CANONICAL _ PACKAGE _ SEPARATOR in SourceLineAnnotation . java and SourceCodeDisplay . java
added methods to find YARN binary and Hadoop home in HiveConf . java and updated RemoteSparkJobMonitor . java to print application information
added support for Maria database in DbConnectionManager to ensure compatibility with both MySQL and Maria databases
[ hotfix ] [ master ] fix log format in splitlogmanager
added a new file ExecuteAndReturnStringTest . java to implement a basic UI test with network error handling to demonstrate and verify
added a new file InvokespecialInterface . java implementing an interface and a class implementing dynamic invocation to demonstrate the use of invoked
refactored the EvictingBoundedList class implementation to improve performance and maintainability of the code
graphhopper now correctly set the encodingmanager if turncosts be enable .
added a check for ` style . backgroundDisabled ` and a negative selection check in ` SelectBox . java ` to ensure that the selection cannot
hbase - 9224 print out name of the method we do not support rather than throw npe
updated the calculation of hotseatCellSize and hotseatIconCenter in TaskbarViewController . java to incorporate border
updated the method of constructing the ` valString ` string from ` partitionName ` to ` values . get ( " partitionColumnIndex " ) `
fix serialization of namedtaskdecorator ( v4.0 - > v4.1 )
updated the directory reference from ` getIndexDir ( ) ` to ` getNewIndexDir ( ) ` in ` ReplicationHandler . java ` to ensure
changed the default value of the ` equal ` variable from ` false ` to ` true ` in the ` isDisplayModeEqual ` method to
[ geot - 5598 ] fix ` ` $ \ mathematical italic u + 1D716 ' ' in html
added ISO control validation for ISO line endings in OAIDCCrosswalk . java and Item . java to ensure consistent formatting of ISO
simonstewart : fix the last frame in the selenium - backed selenium
added a clear button to the DataBrowser class and modified the BookmarksPanel to exclude the BOOKMARKFILE _ EXTENSION to enhance user experience
refactor base URL generation in OAuth2AuthorizationRequestRedirectFilter to use UrlUtils for URL construction to improve code clarity and maintainability by
replaced SQL date assertions with AssertJ ' s parseDatetime method for improved clarity to enhance readability and maintainability of date comparisons
updated adaptOrders method to include a reverse parameter and modified limitOrders initialization to improve order adaptation logic and ensure proper handling of orders based on
delombok now print a ` ` var var ' ' instead of ` ` var ( 1 ) ' ' if there be a ` `
simonstewart : fix the compilation error of the selenium - backed selenium module
updated the instantiation of Configuration to include a boolean parameter and removed conditional logging for overriding Hadoop conf property to enhance configuration flexibility by allowing configuration to
changed the call to ` drawChildren ` from ` super . drawChildren ` to ` super . draw ` in ` WidgetGroup . java `
added unit test base on user forum issue
replaced usage of ` Globals . CATALINA _ BASE _ PROP ` with ` context . getCatalinaBase ( ) `
added unit tests for the ` getBestDateTimePattern ` method in ` ShadowICUTest ` and modified the ` getJmmPattern ` method
added color codes to the map and set them in the style to enhance the visual representation of the plot ' s color representation
added ZuulProperties as a parameter to several constructors and beans in TraceRestClientRibbonCommandFactory and TraceZuulAutoConfiguration
tika - 1358 - fix time zone issue in fontparserstest .
added a new file ` SampleApplication . java ` and modified ` BuildInfoMojo . java ` to include a ` buildTime ` parameter
updated the calculation of xDist to use the absolute value of mScroller to ensure proper positioning of the scroll bar
deleted the GUIRWTester . java file which contained XML configuration reading and writing functionality to remove unused code that is no longer needed
removed the nullable annotation from the ` format ` parameter in the ` LazyMessage ` and ` StandardSubjectBuilder ` classes to simplify the constructor and
updated error message formatting in TestStream . java to improve clarity of error messages for better debugging
move markup parser from templateparser to markup package
added a test method for XPath string evaluation in XPathTest . java and updated the test case in XPathTest . java to ensure correct handling of
added @ Nullable annotation to FutureUtils . java to indicate that the variable can be null to improve code clarity and prevent potential null pointer exceptions
add warn when invokedynamic be not resolve during call - graph construction
updated email addresses from " gmail . com " to " example . com " in ContextTest . java to ensure tests reflect the correct domain
updated the HTTP response format from " GET / bad / encoding % 1 " to " GET / bad / encoding % x " and modified URI
added ` getColumnDataType ` method implementations in ` AbstractResultSet ` , ` ResultSet ` , and ` ResultTableResultSet ` classes to provide a standard
make aws and async client non - abstract , throw unsupportedoperationexception instead of unsupportedoperationexception
refactor HSSFPictureData class to improve code readability to enhance maintainability and reduce complexity
replaced ` long ` with ` Instant ` for time handling in ` Statistics . java ` to improve performance and accuracy of time measurement
added version handling for MediaInfoLib - v in LibMediaInfoParser . java to ensure compatibility with specific media info versions
added reflection - based proxy creation for IdeaDependency in ProjectReader . java to enhance dependency management by associating IdeaDependency instances with their
added a new SerialHeap class and updated the heap mapping in Universe . java to facilitate the management of a SerialHeap instance
added multiple @ SuppressWarnings ( " serial " ) annotations to the GsonTypes . java file to suppress serialization warnings related to non - serializable fields
change mouse wheel event to use mouse position instead of mouse . getposition ( )
datamongo - 1608 - fix npe in searchbyfirstnameignorecase with null parameter
[ hotfix ] [ table - common ] fix multi - value map key generation issue
added a method to retrieve an active and duplicate identity providers by their issuer in XOAuthProviderConfigurator to ensure proper error handling for invalid provider configurations
pdfbox - 4892 : fix parsing of cmap with poor space
refactor ContactsBackupJob to implement a new OperationsServiceConnection class for better management of the OperationsService to improve the handling of file expiration
added a new class ` T6938454a ` and modified ` ForAll ` , ` Infer ` , and ` InferTest
add isconfighidden ( ) method to accountid and use it to check the hidden status of the protocol provider .
added a condition to log an error when the number of supported display states changes to ensure accurate logging of display state changes for better debugging
removed schema name from the removal of schemas in PMetaDataImpl . java and added a test for schema removal in PMetaDataImplTest . java
ggb - 1881 fire passive login callback on data change instead of load event
added a new Box2DTest class and integrated it into the GDXTester menu to facilitate testing of Box2D graphics
improve debug logging and return value for localbypartionertype
[ hotfix ] [ runtime ] increase default buffer request timeout to 5 minute
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
added help button to openoffice integration panel to help the user with more information
[ java ] add tcp _ nodelay a child option for netty acceptor and publishdecodingserver .
updated method signatures in BinanceAuthenticated , BinanceAccountServiceRaw , and BinanceFundingHistoryParams to use wildcard generics to improve type
added a transient class reference field and refactored class name retrieval logic in ScanResultObject . java to improve performance by reusing the class
refactor code to improve error handling and streamline input stream management in DecodeServlet . java to enhance code readability and maintainability while ensuring
updated Querydsl to use a new method ` toQueryDslNullHandling ` for null handling to enhance flexibility in querying with different null
modified loop condition in ParallelAction and added null check for actor in SequenceAction to ensure actions are processed only when the actor is not null to
test ( refactor ) : fix checkstyle violation in cttypetest
added synchronization to the closing of bucket writers in HDFSEventSink . java to ensure thread safety when accessing shared resources
added a new file ` Issue888 _ JavaI . java ` with interfaces ` Issue888 _ JavaI ` , ` JJ
added functionality to revoke an existing CA certificate in ` CertificateManager . java ` and created a corresponding test in ` CertGenerationTest . java `
added a check for responses with no body codes in AbstractHttpTest and implemented a corresponding test in HttpServerTestBase to ensure proper handling of HTTP
added error handling and improved script engine loading in ScriptTransformer . java to ensure compatibility with Java 6 and enhance error messaging for better debugging
updated connection pooling type in HiveConf and added HikariDataSource configuration in TxnHandler to enhance database connection management and improve error handling for
replaced calls to ` mDevice . pressHome ( ) ` with ` mLauncher . pressHome ( ) ` in multiple test files to
added file locking functionality to the FileMenuFilter and updated OCFileListFragment to toggle file locking based on file locking status to enhance user experience
updated mmm Version . java and ppp Version . java files to improve versioning and maintainability of the code
clear endpoint cache when a new keyspace be add
refactor synchronization logic into a separate method ` waitForState ` to improve code readability and maintainability by reducing duplication
updated SkylarkDescription and SkylarkRuleContext to use SkylarkRuleContextAttr instead of individual attributes to simplify
douniaberrada : move storage interface to a separate package to make it easy to reuse
fix : create or replace view do n ' t work when there be no ` ` replace ' ' option
changed exception handling from ` Exception ` to ` Throwable ` in ` SegmentGenerationJobRunner . java ` to improve error handling by catching all
updated the query parameter retrieval logic in SpellCheckComponent . java to ensure the correct query string is used for improved functionality
added validation to check for illegal characters in header values and implemented a checkValue method to improve header validation and prevent potential errors
fix array base offset in hostedinstanceclass .
[ apex ] add experimental annotation to astcommentcontainer . setcontainscomment ( boolean ) .
hhh - 14650 - warn about use lazy association with @ fetch ( fetchmode . lazy ) and @ fetch ( fetchtype .
refactor NoGetOperationsFilter , NoUserOperationsFilter , and RemoveInternalParamsFilter classes to extend AbstractSpecFilter instead of implementing SwaggerSpec
added database and table names assertions to TestCompactionTxnHandler and updated TxnHandler to set database and table names from ResultSet to enhance test coverage
camel - 13660 : timer consumer should be suspend when shut down , so we can see if the timer be stop gracefully .
added a check to ensure traces are only added if the block is not processed before adding to the worklist to avoid adding unnecessary traces when the
updated ProviderManager to check for null elements using CollectionUtils instead of direct null checks to enhance null safety and improve code robustness
simplified the database version check by directly returning the instance of PostgresDatabase to improve code readability and maintainability
added new queries and constants for local index limits in LocalIndexIT and ExplainTable classes , and modified scan handling in ExplainTable to
added validation to prevent adding collections with the same name and type in AlterTableStatement . java to ensure that incompatible collections are not added to
updated cursor handling logic in VDUBuffer and vt320 classes to improve cursor management and ensure correct row / column positioning
removed the constant USE _ RETRIES from HttpShardHandlerFactory . java to streamline the code by eliminating unused constants
updated the VERSION _ NUMBER regex pattern in JavaVersion . java and added a new test for JavaVersion in TestJavaVersion . java to ensure
added a check to return early if no input gates are available to optimize performance by avoiding unnecessary processing when no input gates are available
no effective change - add empty test method to prevent npe
added null check for properties before retrieving values to prevent potential NullPointerException when properties is null
updated IOException handling in FileSystemBlobStrategy to set the cause of the exception to improve error reporting by explicitly setting the cause of the IOException
updated log message from " rolling upgrade " to " stack upgrade . " to improve clarity and accuracy of log messages related to stack upgrade
added a private TxConfidenceListener to the TxIdTextField class to manage transaction confidence updates more efficiently
added support for the g1 Perm Gen feature in the JmxSupport class to enable support for g1 Perm Gen functionality in the application
removed unused imports and simplified return statements in NearbyController . java to improve code clarity and maintainability
pdfbox - 4892 : make method public , a suggest by valerybokov
added checks for non - home activity types in BaseSwipeUpHandlerV2 . java to ensure proper handling of home activities in swipe up
renamed ` DefaultEdgeClientFilter ` to ` EdgeAddHeaderClientFilter ` and updated related constants and methods to improve clarity and consistency
updated method names and logic for network and sim country ISO handling in ShadowTelephonyManagerTest and ShadowTelephonyManager to improve cl
update UnfreezeBalanceV2Actuator to set unfreeze amount to ensure proper handling of unfreezing balance in the application
fix typo in description of conference scheduling xlsx fileio
danielwagnerhall : use apache common fileutils instead of guava to copy the model
refactor multiple assertion classes to improve code organization to enhance maintainability and readability of the assertion framework
2 . x : improve javadocs for observable . delay ( ) and observable . delay ( )
updated the method for adding multi - field operations in the Update class and added tests for multiple pushAll functionality in MongoTemplateTests to enhance functionality
added a null check for ` randomUUID ` before setting ` hubChangeLog . setId ` to ensure ` hubChangeLog . setId ` is
added hover event handling to InputConsumer classes and updated InputConsumerProxy to support hover events to enhance user interaction and improve input consumer responsiveness
added a sleep mechanism for zkServer configuration checks in CoreContainer . java to ensure that the configuration is correctly set before proceeding with further operations
fix camel - example - netty - http : use maxheaderssize instead of maxheaderssize
increased the number of client retries from 5 to 35 in HBaseTestingClusterAutoStarter . java to improve test reliability by allowing
replaced ` toPath ( ) . resolve ( ) . toFile ( ) ` with ` new File ( baseDirectory . getAbsolutePath ( ) ) `
avoid transient failure cause by the graph be already cache .
updated the query command from " customer _ count " to " all _ tables " and added a new test method for outputting tables to enhance
added currency adaptation functionality for Kraken assets in KrakenAdapters . java to enhance asset management and metadata handling in the Kra
added a ` toString ` method to the ` AnyOf ` class and created a corresponding test class ` AnyOf _ toString _ Test ` to
[ te ] use emailsubjectname instead of emailname if groupname be empty
[ beam - 8470 ] do n ' t publish influxdb metric if no measurement or database be set
rename method ` doTransform ` to ` downcast ` across multiple converter classes to improve clarity and consistency in method naming to enhance code read
updated local address validation logic in NetUtils . java to include specific filter addresses to enhance security by ensuring only unique local addresses are considered
added a method to convert column names to quoted column names and updated the row header writing to use this method to improve column name handling for better
added methods for setting and getting system properties and implemented line processing in StrUtils , and updated CompileMethodEntity to use these methods to improve code
added a constructor to UpdateRequest that accepts a URL parameter to initialize the UpdateRequest with the appropriate HTTP method
updated enum declaration from static to non - static in ProtoTypeAdapter . java to allow for instance - level access to EnumSerialization
added an ` addExperimentalFormatWarning ` method in ` RequestHandlerUtils ` to indicate that the response format is experimental to improve clarity and
formatted module names in debug logging to include a comma - separated string to improve readability of module names in debug output
take into account the default label ' s size when calculate row height
[ issue # 4892 ] fix the issue that broker heartbeat be not send to master ( # 4893 )
added meanPartitionSize , partitionCount , and splitCount calculations to CqlInputFormat . java to ensure accurate calculation of split count based on
simplified the conditional check for the JUnitTestsShouldIncludeAssertRule class to improve code readability and maintainability
[ drools - 2852 ] add equal and hashcode for ruleterminenodelefttuple ( # 4696 )
added import for StageIDsRearranger and resolved it based on configuration to enable dynamic stage ID rearrangement based on configuration settings
fix mbean name for messagingservice
updated memory consumption checks in LotsOfOutput . java to improve clarity of memory consumption logs to enhance debugging capabilities by providing clearer memory
added imports for ` Document ` and ` BinaryDocValuesFormat ` in multiple facet field classes and modified the ` DIM _ CONFIG ` initialization
updated LdapAutoConfiguration and LdapProperties to introduce anonymousReadOnly and anonymousReadOnly properties to enhance configuration flexibility for LDAP context sources
refactor DatabaseMetaData class to improve code readability to enhance maintainability and facilitate future updates
fix eclipse compiler warning ( # 1745 )
added a ` finishMocking ` method to ` MockitoSession ` and modified its implementation in ` DefaultMockitoSession ` to handle `
removed the ` extraDeps ` from the ` params ` in ` GoTestDescription . java ` and added new test cases in ` GoTest
renamed buffer and handler variables to readBuffer and writeHandler , and updated related logic in SPDYAsyncConnection and HTTPSPDYAsync
updated the block retrieval method from ` getStaticBlock ` to ` getFlowingBlock ` in ` BlockLiquidWrapper . java ` to
updated intent data handling in AndroidLocationPlayServiceManager and BackgroundLocationHandler to use Uri instead of extra to improve flexibility in handling location listeners
fix typo find by codespell on fossies . org
[ hotfix ] [ table - planner - blink ] fix the json plan generation for streamingplan
fix npe in craftingmanager . getrecipe ( ) , use computeifabsent ( )
[ hotfix ] [ test ] fix test flakiness in testfilechannelrestart
simplified whitespace and whitespace checks in TabsAndIndentsVisitor . java to improve code readability and maintainability
added a pattern to match lines containing " pg _ temp _ " in NeuteredLinesFilter . java to enhance filtering capabilities for temporary lines
doc ( regen ) : update license year for generated file ( # 4382 )
added conditional logic to handle " INTERVAL " data type in DataTypeFactory and modified data type checks in UnknownType and ColumnSnapshotGenerator to improve
polish ` ` do n ' t publish histogram for timer that be publish in wavefront ' '
updated the handling of ` springCloudSelectorHandle ` in ` ShenyuClientRegisterSpringCloudServiceImpl . java ` and added
added a new method ` registerListener ` to the ` ShadowSensorManager ` class to enable the registration of a sensor event listener with specific parameters
added exception handling for SocketException in testFullMethod , testFullURI , and testFullHeader methods in SelectChannelServerSslTest . java
added null check before closing the Ignite instance and modified logging visibility in test classes to enhance robustness by preventing potential NullPointerExceptions
added a conditional check for zero and modified the result set handling in AbstractClient . java to improve clarity of output when there are no lines
pdfbox - 4892 : catch exception instead of ioexception , a suggest by valerybokov
added tests for HDR capabilities handling in ShadowDisplay to ensure proper functionality and compatibility with different Android SDK versions
added a finally block to reset classLoader to null to ensure proper resource management and prevent memory leaks
enhanced error messages in SemanticAnalyzer and SemiJoinHint to include source and column names to improve debugging by providing more context in semantic exceptions
added a default constructor to the Message class to ensure that the Message object has a valid constructor for instantiation
use low priority for gui component when serializability be not serializable
updated PhoenixDecimalObjectInspector to accept PrimitiveTypeInfo and modified decimal handling logic to enhance type safety and ensure proper precision scaling for decimal
added a check for committed responses before setting the Content - Encoding header in the CompressionResponseStream class to ensure that the original output stream is used
renamed the parameter ` WWWAuthenticate ` to ` authenticateHeader ` and updated its usage in the ` getAuthorization ` method to improve clarity
removed specific checks for EJS and org . omg paths in the DCD . java file to simplify the code by eliminating unnecessary
updated ThreadLeakTest to use a helper method for retrieving thread group names to improve code readability and maintainability by encapsulating thread group
added logging functionality and improved code formatting in MethodInvocationPrivilegeEvaluator . java to enhance debugging capabilities and maintain code readability
changed the package of DmozParser from ` org . apache . nutch . crawl ` to ` org . apache . nut
updated imports in RegisteredServiceChainOperatorTypes . java and ChainingRegisteredServiceDelegatedAuthenticationPolicy . java to utilize Lombok '
kvm : fix the issue that kvm fail to start when the vm have iso attach .
removed the use of ` sun . misc . SignalHandler ` and updated method names in ` SigInt ` and ` SigIntTest ` to
replaced static import of ArrayUtils . isEmpty with a direct call to ArrayUtils . isEmpty to improve code readability and maintainability by using a consistent
replaced NoopDiscoveryClientAutoConfiguration with @ SpringBootTest annotation in AxonAutoConfigurationWithSpringCloudTest . java and added
added multiple @ Override annotations in ColorRGBA . java to improve code clarity and ensure proper method overriding
planningvariabledescriptor . uninitialize do n ' t need to be deprecate .
added a ` buildTimeMs ` parameter to several methods in ` TwoLevelArtifactCacheDecorator ` , ` ManifestRuleKeyManager ` , and
updated the handling of fields in GroupByOperator to use getType ( ) instead of getFields ( ) and adjusted the condition for numEntriesHashTable
added a null check for the block before adding appearance to avoid potential NullPointerExceptions when adding appearance
added a new currency pair " CNC _ BTC " and its corresponding currency pair in multiple files to support trading functionality for the Ch
updated skewAllowance values and refactored related logic to use CasConfigurationProperties to enhance configuration flexibility for handling skew allowance in SAML
added sorting functionality to SongListActivity and updated query parameters in Utils to enhance user experience by providing a more comprehensive list of
removed unused imports and refactored the ` readBodyToBytesIfNecessary ` method in ` Utils . java ` to streamline the code and improve
add legacybaseblockwrapper so that signblock and mobspawnerblock do n ' t have to subclass
refactor snapshot retrieval logic in IcebergBranchExec . java to use SnapshotRef instead of Optional to improve compatibility with Iceberg table
replaced ` newArrayList ` with ` Collections . singletonList ` for setting the external groups whitelist to simplify the code and improve readability by using a
modified ` PhotonMappingDemo . java ` and ` HybridDemoSsboInstancing . java ` to adjust binding and
add debug log and fix test case
added a removal of assumeReflective from notInitializedInConstructors to exclude uninitialized fields from constructor initialization
updated database connection URL handling in JdbcExecutor . java to ensure proper error reporting when the connection is closed
add test case to verify that postforobject / annotations / saysomething do n ' t require user data
updated regex patterns for user and password in CredentialInjector . java and corresponding test in CredentialInjectorTest . java to improve clarity and consistency in
added a new menu item " Item4 " and a key binding for the " Enter " key in ActionListenerCalledTwiceTest . java to
updated print statements and assertions in TestCoreParser . java for clarity and consistency to improve readability and maintainability of test output
changed condition from comparing ` children ` to ` id ` in ` SimpleNode . java ` to ensure consistency in comparison between ` id ` and
changed the access modifier of the PopulatorContextStackItem class from public to package - private to allow access from other packages
updated the handling of document counts in MoreLikeThis . java and added a new test method in TestMoreLikeThis . java to improve accuracy
refactor code in QuestManager . java for improved readability to enhance maintainability of the code
[ hotfix ] [ network ] make networkbufferpooltest extend from testlogger
modified query construction in MongoSessionDataStore . java to correctly append the " $ gt " and " $ lt " parameters to the query to ensure
add miss macro substitution for unsafe . getlong ( ) .
replace " ARAST " with " EET " for " Asia / Amman " in multiple TimeZoneNames files to reflect the current
updated the ID from 90000010 to 90000011 in DeprecationLogger . java to reflect the new version of logging functionality
hhh - 14619 do n ' t wrap jdbcexception in sessionimpl . convert when rollbackonly = true
fix issue with download external file that have no obvious extension
disable menubar on macosx for macosx
make sure piecewiseintegration work for both case , add test
updated access modifiers of ` STATE _ SCREENSHOT _ CAPTURED ` and ` switchToScreenshot ` methods in ` BaseSw
added a test for modifying the Hive metastore URIs and modified the modWhiteListPattern in HiveConf . java to ensure that the Hive
removed the entry entry entry from invalidClasses to streamline the code by eliminating unnecessary entries
updated the method to retrieve the closest target using the player ' s team instead of a sharded team to ensure the target is associated with the
updated the domain variable to use a dynamic domain helper instead of a hardcoded value to improve flexibility and maintainability of cookie handling
added a method to determine if columns should validate nullable based on search conditions to enhance validation logic for nullable columns based on search conditions
refactor multiple security - related classes to improve code organization and maintainability to enhance maintainability and readability of the security token service components
added methods for deleting and adding documents in CustomCollectionTest and made several fields static final in CompositeIdRouter to improve query handling and enhance code
added snapshot handling functionality to ` ExecutablePreparedStatementBase ` and updated tests in ` PostgreSQLIntegrationTest ` to improve snapshot management and ensure compatibility with PostgreSQL
updated cache condition checks and formatting in DefaultServlet . java to improve readability and maintainability of the code
fix tab drag - and - drop not work ( # 7596 )
updated description creation in ExecutionUnitRunner and modified test assertions in CucumberTest and ExecutionUnitRunnerTest to improve clarity and correctness
replaced string empty checks with StringUtils . isNotEmpty for myVersion and buildTimeString to improve readability and maintainability of the code
removed public access modifier from several methods in the TimeUtils class to restrict access to these methods for better encapsulation
added a method to determine if a class is expected security frame or injected invokers and refactored related logic to improve code clarity and
updated file extension checks to include a space before " . " to ensure consistent file extension formatting across the application
[ gr - 10663 ] fix debug info for hosted method .
added icon retrieval methods and updated class displayed state to NODE in DataTableTopComponent . java and DataTableTopComponent . java to enhance user interface by
added a null check before extracting the last element from the request name to avoid potential NullPointerException when retrieving the request name
updated the ` FindAndReplace ` class to properly handle dollar signs in replacement strings to ensure proper string replacement behavior when the regex is not
[ smack ] fix nullpointerexception in xmppconnection . setconnection ( ) .
refactor SchemaExtractionProcessor to improve code structure to enhance maintainability and readability of the code
added a method ` copyDir ` to copy files from a specified directory to a specified destination directory to ensure that the source and destination directories are
added exception handling for unknown datum classes in JacksonUtils . java to improve error reporting for unknown datum types
replaced ABI handling logic to retrieve class and source ABI jars using ` HasJavaAbi . getLibraryTarget ( buildTarget )
adjusted the height calculation for the SelectBox by removing unnecessary background padding and adjusting height accordingly to streamline the height adjustment logic for better
added normalization of database and table names in ObjectStore . java to ensure consistent identifier formatting for database and table names
added schema handling for Oracle databases in DbSqlSession . java to ensure correct schema is used when using PostgreSQL and Oracle databases
removed logout functionality from the API client in HomeFragment . java to simplify the code by eliminating unnecessary logout handling
[ hotfix ] [ table - planner - blink ] fix flaky test ( # 1337 )
updated FastImportAction to handle null candidates before retrieving the priviledged element to improve robustness by preventing potential NullPointerExceptions
updated the logic for determining if a bean is managed in ContainerLifeCycle . java and modified assertions in ContainerLifeCycleTest . java to improve
rename iexecutionattributedialect to iexecutionattributedialect to be consistent with the other dialect
added a call to ` metadata . clearUnsafe ( ) ` in ` AlterTest . java ` to ensure the metadata is cleared before further
bug 6645 : fix npe when loc be not define for gettime ( )
added null check for measurement in TabletInsertionDataContainer and implemented custom exception handling in DisruptorQueue to improve robustness by preventing null
deleted the Session2Token . java file to the class is no longer needed in the media package
volume : destroy volume if fail to create a volume from base image
added a new Install class to the SystemShortcut class and integrated it into the PopupDataProvider to enhance the shortcut functionality by allowing users to install
added a constructor to ` LdapAuthenticationProvider ` that accepts a ` LdapAuthenticator ` and a ` NullAuthoritiesPopulator ` to provide a
updated the method for retrieving the retrolambda JAR path and added checks for the existence of the retrolambda jar in CN1BuildM
replaced ` buildOrThrow ( ) ` with ` build ( ) ` in ` ShadowCamera . java ` to simplify the camera building process
updated the ` sortLiveDocs ` method to use ` Bits ` instead of ` FixedBitSet ` and modified its implementation to improve performance and
fix jpmspathextractor to handle null result
updated import statements in AuthorizeTag . java and added null and length checks for currentUser authorities to enhance code clarity and prevent potential NullPointerExceptions
refactor assert statements in multiple test classes for consistency and clarity to improve code readability and maintainability
cs - 15819 : fix the error message when try to create a vm snapshot with memory on a vgpu enable vm .
updated configuration handling in RobolectricTestRunner and changed ArrayList to HashSet for shadows in Config to improve clarity and correctness in
replaced ` SelectChannelConnector ` with ` SocketConnector ` in ` JettySolrRunner . java ` to align with the latest Jetty
added a method to check if partial partition keys are identical in HiveAlterHandler . java to improve partition key comparison logic for better accuracy
added a new debug flag ENABLE _ ICON _ IN _ TEXT _ HEADER in FeatureFlags . java to control the visibility of the icon
corrected spacing in a conditional statement in SimulationStatus . java to improve code readability and maintain consistency
replaced SharedBlockingCallback with Callback in StandardDeployer , StandardUndeployer , and ContextHandlerCollection classes to improve handling of blocking operations
added WorkspaceListener functionality to PreviewControllerImpl and modified buildGraph method in PreviewUIController to enable dynamic graph building based on workspace updates
added a check for VM anonymous classes in ReflectionFactory and updated class name checks in ReflectUtil to ensure no inflation is performed only for non
refactor TransportHelper class to improve code readability to enhance maintainability and facilitate future feature additions
updated the file path format in CatalinaAcegiUserRealm . java to ensure correct loading of XML resources
ambari - 20613 . log server and actionmanager initiation in the ambari server startup process ( rlevas )
updated JSONWriter . java to handle initialization and modification nodes more robustly to improve robustness and prevent potential null pointer exceptions
updated method signatures and user configuration handling in SliderAppsViewControllerImpl . java to improve parameter handling and ensure proper user authentication based on the
added a check to ensure backgroundManager is not attached before attaching it to prevent potential issues when the background manager is already attached
added methods to set the current tab and adjust child dimensions in AllAppsTabbed , Launcher , and Workspace classes to improve UI respons
added a null check for the URL in BaseDataSource and implemented a corresponding test case in SimpleDataSourceTest to ensure that an invalid URL is not
update pebemodertest to run only on jdk8
added a new EditNameDialog for directory creation and updated dialog handling in FileDisplayActivity to enhance user experience by allowing directory creation through a dialog
added functionality to toggle bar borders in multiple activities and chart activities to enhance user interaction by allowing border width toggling of chart elements
updated API endpoint from " okcoin . com " to " okex . com " in OkCoinExchange . java to align with the new
jbrules - 2238 : remove @ fixed annotation from test
replace FileChannel with SeekableByteChannel for file operations to improve compatibility and flexibility while reading files
[ hotfix ] [ table - common ] fix npe in flattenrecordbatch
replaced ` MockHandler ` with ` MockHandlerImpl ` in multiple files to align with the new implementation pattern in the Mockito framework
[ hotfix ] fix checkstyle violation in serializationconfigurationparser
added import statements and set watch heap limit for debugging devices in QuickstepProcessInitializer . java to enhance performance by limiting watch heap size for
refactor code to store the result of ` mapper . applyAsDouble ( t ) ` in a variable before performing the sum operation to improve
log4j2 - 1343 add workaround for log4j2 - 1343
added a conditional check for the top level deletion before serializing the data output buffer to ensure data serialization occurs only when the top level deletion is
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest .
close meterregistry lifecycle when auto - configuring meterregistry
change log level to info when config center be not find
added test cases to validate certificate generation with specific input data to ensure proper exception handling for invalid input data during certificate generation
camel - 15836 : camel - core - optimize simple tokenizer to avoid stringindexoutofboundsexception when use ambiguous binary operator
removed the ` onTabUnselected ` method from ` EditorActivity ` and added focus change handling in ` IDEEditor ` to streamline
log the user ' s name in accesslogvalve . openfail for debug purpose
updated file names and scaling factors in SkeletonModelGpuSkinningTest . java , added null check in OgreXmlLoader . java
removed ` throws InterruptedException ` from the ` createOrThrow ` method signature to simplify the method signature for better error handling
mark UpgradeResponse class as deprecated to indicate that the class is outdated and should no longer be used
added functionality to generate d . ts files based on the " dtsout " option to enhance the transpilation process by allowing users to
( chore ) camel - aws2 - kinesis : set default fetchtimeout to 600ms if kinesisconsumerfactory be not present
add . html to the file name in streamingdataflowworker .
increased the maximum number of threads for the Hive metastore server from 100 , 000 to 1000 to allow more threads for the met
changed the return type of ` onTaskSnapshotChanged ` from ` void ` to ` boolean ` to enable the method to indicate success or failure
update shadow radius setting in SwipeUpAnimationLogic to use shadowRadius instead of mMaxShadowRadius to ensure proper shadow radius is applied during
added a new test method ` chainNestingAndAggregation ` to ` ChainParserTests ` to verify the behavior of chain nesting and aggregation with
updated loop condition from ` limit ` to ` end ` and added a failure assertion in ` MarketSellAssetActuatorTest ` to
fix polyglotcontextimpl . getsource ( ) should check if source be an interactive source .
updated condition in CreateKeytabFilesServerAction . java to handle cases where previousCachedFilePath is null to ensure proper validation of keytab file
added DisplayController import and modified WindowManagerProxy instantiation to include DisplayController to enhance functionality by integrating display management capabilities
added conditional logic to set toolTipText for root directories in MetalFileChooserUI and SynthFileChooserUI implementations to improve tooltip display
replaced ` getToolkit ( ) ` with ` Toolkit . getDefaultToolkit ( ) ` for retrieving screen size to ensure compatibility with
changed the return type of the recognise method from List < ? extends RecognisedObject > to List < CaptionObject > in Tensorflow
added test methods for inserting , removing entities , and fetching results with a factory expression in JPASQLBase . java to enhance test coverage
updated drag index logic in FreeformFinSetConfig . java to ensure proper dragging of points based on their x and y coordinates
updated moeVersion from " 1.1 . 2 " to " 1.2 . 0 " to reflect the latest version of the mo
improve error message when constant can not be set .
updated error message formatting in multiple classes to include newline characters to improve readability and consistency of error output
added a @ Deprecated annotation to the Weights class to indicate that the Weights class is outdated and should no longer be used
refactor registration of unsafe plugins in amd64graphbuilderplugins and standardgraphbuilderplugins
added hints to ` AndroidAppModularityDescription . java ` and ` AndroidGraphEnhancerArgs . java ` , and implemented a test
changed the value of mCenterPagesVertically from true to false to adjust layout behavior for better user experience
updated the handling of the doneProcessing method in MigrationRequestOperation . java to ensure proper processing of the migration process
updated constants and variable names from " HOST " to " BASE _ URL " across multiple files to standardize naming conventions and improve clarity
change the parameter type of ` attributeValue ` from ` Object ` to ` List < Object > ` in ` WSFederationClaimsReleasePolicy `
added database - specific table creation and query processing in TestJdbcWithMiniLlap . java and LlapBaseInputFormat . java to
added a new test method ` testCaseInsideBrackets ` to ` CaseExpressionTest . java ` to validate SQL parsing and deparsing of cases
added touch event handling for copy mode in ConsoleActivity to improve user experience on Sandwich devices by starting the copy mode when the input
updated the ` writeXmlOutput ` method to use a ` Writer ` and added XML transformation support to improve XML output handling and enhance compatibility with
fixed nullpointerexception when use customlistaggregationstrategy with empty split
camel - 16400 : camel - core - make it easy to differentiate between exchangexchangexception and exchangexchang
move basicconfigurator to main / instead of main /
do n ' t generate type qualifier for phi - nodes if they do n ' t have them
added import statement for SharedStringSource in TestXSSFRichTextString . java to facilitate the use of shared string handling
added a new method ` invokeMethod ` to the ` ObjectInvokeHelper ` class to facilitate method invocation with additional parameters for improved
renamed multiple classes related to box and whisker calculations and histograms to improve clarity and consistency in naming conventions
[ hotfix ] [ test ] migrate readablewritabletest to junit5
updated field equality checks to use ` . equals ( ) ` instead of ` = = ` for string comparison to improve performance and readability by
changed the access modifier of the singleton and constructor of IndexFileNameFilter from public to private to restrict access to the singleton instance and enhance encapsulation
refactor IfStatementTest to use local variables for PluginDefinition and update vertex creation methods to improve code readability and maintainability by reducing
updated method call from ` getPutOnlyTableHeaderRow ` to ` getTableHeaderRow ` in ` ConnectionlessQueryServicesImpl . java `
refactored the ` TypeAdapter ` class to simplify null - safe handling for ` Foo ` objects to improve code readability and maintainability
updated the expected size in the BundledDistributionTest from 12 to 13 to reflect the correct number of elements in the distribution
added a new file ` EXIFReader . java ` that reads and processes exif metadata from a specified file to facilitate the extraction
fix cloudwatchmeterregistry . tostandardunit ( ) to return standardunit . none instead of unknown _ to _ sdk _ version (
[ rhdm - 4352 ] fix pmml parameter type mismatch ( # 4353 )
updated the format of the info string in FluentProtocol . java to include newline characters to improve readability and clarity of error messages related to
added a check to ensure the bubble bar is visible before proceeding to improve performance by avoiding unnecessary processing when the bar is not visible
[ gr - 16905 ] handle branchtargetoutofboundexception in aarch64 backend .
added a try - finally block around the initialization of the JDKLogManager and implemented a concurrent initialization test in XRLogTest to ensure proper
added a new method ` find ( Class < Ticket > ticketClass ) ` to ` TicketCatalog ` and modified ticket retrieval logic in ` Default
refactor SSL connection parameters and assumptions in TestSSL . java to improve code readability and maintainability
[ hotfix ] [ runtime ] fix the file writer leak in sort - shuffle - resultpartition
[ hotfix ] [ jms ] remove empty constructor in jmsio
updated PluginHandleController and PluginHandleDTO classes to include ' type ' and ' sort ' parameters for fetching plugin handles to enhance functionality by allowing
added start ( ) method call to span creation in DefaultSpanCreator and SleuthAdvisorConfig to ensure proper span lifecycle management during tracing
added GLKViewDrawable attributes to IOSApplicationConfiguration and updated IOSGraphics constructor to use these configurations to enhance flexibility and customization
add test to verify user lock out after a failed attempt
[ pytorch ] add unsupported operation exception for real ( ) and complex ( )
removed the ` ! t . isInterrupted ( ) ` condition from the while loop and replaced it with a do - while loop to ensure thread
refactor Implements and ShadowPicker classes to improve code organization to enhance maintainability and readability of the codebase
refactor HttpClientOptions creation and add new configuration methods for HTTP / 2 connection parameters to enhance flexibility and configuration options for HTTP / 2 connection
added support for ` DynamicArray ` in ` DynamicStruct . java ` and improved error handling in ` SolidityFunctionWrapper . java
updated ` getStringProperty ` and ` getFloatProperty ` methods to include a default value of ` true ` to ensure consistent behavior when retrieving CSS properties
added constructors to ` CopyStep ` that accept ` Path ` and ` boolean ` for recursive copying to enhance flexibility in path handling in the
fixed - rsemaphore . acquire ( ) and rsemaphore . release ( ) method of rsemaphore
camel - 16400 : fix camel - dsl - maven - plugin to compile with jdk8
added a new ` FlavorParser ` class and refactored ` BuildTargetParser ` and ` FlavorParserTest ` classes to encaps
changed the type of lists from ` String ` to ` ByteString ` in ` WitnessScheduleStore . java ` and updated related methods to use
added a check for non - empty results before printing them to avoid printing unnecessary information when results are not available
refactor ConcurrentLinkedQueue to improve removal logic and introduce RemoveLeak class for testing to enhance memory management and prevent potential memory leaks
added a boolean parameter ` addSpecialTokens ` to multiple ` encode ` and ` batchEncode ` methods in ` HuggingFaceTokenizer `
[ hotfix ] [ runtime ] replace arraylist with collections . nCopies in taskmanagerservices
[ iotdb - 4892 ] fix load single tsfile load bug ( # 7892 )
added a new constant for session storage context and updated session state handling in DuoSecurityMultifactorWebflowConfigurer to enhance session
add a unit test that demonstrate the use of javax . xml . parser . documentbuilder . setvalidationschema ( true )
added a default constructor to TypeAdapter and updated comments in Java17RecordTest and ReflectionAccessTest to clarify the purpose of the test
do n ' t throw killexception if a suspendedevent be forcefully kill .
refactor AntPathRequestMatcher for improved clarity to enhance maintainability and readability of the code
[ ds - 3952 ] remove useless null parameter in createresourcepolicy .
added null check before releasing _ deflaterEntry in GzipHttpOutputInterceptor to avoid potential NullPointerException when _ deflaterEntry is null
added JUnit 5 @ AfterEach annotation to ReactorCoreAutoConfigurationTests . java to ensure proper cleanup after each test execution
added normalization functionality to the CheckSum class to ensure consistent handling of Unicode characters in the checksum computation
refactor variable names for clarity and improve command handling to enhance code readability and maintainability by using more descriptive variable names
bugfix # 20613 , make keylistener final in basicprofilerstate and add @ override in basappstate
updated the variable name from ` objectToSave ` to ` dbDoc ` in ` MongoTemplate . java ` and added a new test for
added logic to handle multiple remote addresses in RequestUtils to ensure proper parsing of IP addresses that contain commas
changed the return type of ` getJobArgs ` from ` String ` to ` ObjectBuilder ` and updated related method signatures in ` JsLibrary .
refactor CookieManagerTest and UnmodifiableMaps to use a dynamic host address retrieval method to improve reliability and maintainability of host address retrieval
refactor glyph processing logic in GlyphLayout . java and add a new test case in BitmapFontTest . java to ensure proper handling of whitespace
added ` pauseOrResumeSplits ` method to ` PulsarSourceReaderBase ` and ` PulsarPartitionSplitReaderBase
added a configuration variable for the Hive script operator ID in HiveConf . java and updated ScriptOperator . java to retrieve and store the operator ID
refactor getListedTermCounts method to support sorting of term counts based on facet parameters to enhance flexibility in retrieving term counts based on specified
added a new action class ` UseSeparateStepSizeAction ` to manage the use of separate step sizes in the application to enhance user experience
updated FileMenuFilter to use AccountManager and FileLockingHelper for file locking and unlocking actions to enhance file management functionality and improve user
hbase - 25827 roundrobintableinputformat do n ' t handle empty regionserver list correctly
updated header values in HttpClientRequestAdapter and HttpClientRequestAdapterTest to replace " false " and " true " with " 0 " and " 1
pdfbox - 4892 : use ioutils . closecloseclose ( ) instead of manual force flag
added fullscreen functionality and improved viewport handling in GwtApplication and GwtGraphics classes to enhance user experience by allowing dynamic resizing of
changed the type of ` issuers ` and ` normalizeResource ` from ` String ` to ` URI ` in ` WebfingerIssuerService
added a new test class ` SoulApacheDubboClientConfigurationTest ` to validate configuration properties for the Apache Dubbo client
updated method calls to use ` resolve ( fileName ) . pathWithoutExtension ( ) ` instead of ` Gdx . files . internal ( fileName
updated logging levels from warn to info in ChainingAttributeReleasePolicy . java and OidcDefaultJsonWebKeystoreCacheLoader . java to
replaced ` lock ( ) ` with ` lockInterruptibly ( ) ` in multiple Java files to enhance thread safety by using interruptible locking
updated package declaration for clarity in Compiler . java to improve code readability and maintainability
do n ' t report false positive for null dereferences and redundant comparison
add defaulthttpdatasource to manifestfetcher so that it do n ' t require a content id
added a new configuration property ` EXECUTION _ SCHEDULER _ MAX _ STATEMENTS _ PER _ CONNECTION ` and its getter method
updated method return type from WritableConfig to Configuration in multiple configuration classes to improve clarity and consistency in configuration handling
added a method to check for command errors and throw an exception with relevant error details to improve error handling by providing clearer error context for command
refactor CombinedDataset class to improve code readability to enhance maintainability and facilitate future updates
changed variable name from ' buf ' to ' b ' in InflateIn _ DeflateOut . java to improve code readability
added methods to remove restricted cryptography permissions in the Utilities class to enhance security management by ensuring restricted cryptography permissions are properly handled
added a check for cancel events and modified teleport logic in the entity to ensure proper teleportation and teleportation behavior when the event is canceled
added a new test method ` testPageMarginsLongTextTransform ` to ` TextVisualRegressionTest . java ` to ensure proper handling of
added a null check and initialization for the vectorization context in Vectorizer . java to ensure a valid vContext is always available before adding it
convert speed to 0.539957 in wialonprotocoldecoder ( fix # 348 )
hbase - 25827 enable metricuseraggregate by default ( addendum )
added an ` isEmpty ( ) ` method to the ` JsonObject ` class and a corresponding test in ` JsonObjectTest ` to provide a way to
updated the handling of the receiver state by introducing a new boolean variable ` mAttached ` and modifying the unregistering logic to ensure the receiver
refactor multiple Java classes related to HTTP requests and responses to improve code organization and maintainability
add params to the zadd operation so that it do n ' t have to be call twice .
( chore ) camel - dspace - metadata : fix checkstyle violation
renamed the test class from TestAsyncMessages to TestAsyncMessagesPerformance to better reflect the purpose of the test and improve test reliability
added a method to retrieve the optional target node in VersionedTargetGraphBuilder and updated test handling in VersionPropagatorBuilder to improve code clarity
updated epoch seconds constants in TimeZoneProvider . java for better clarity to improve readability and maintainability of the code
updated the return statement in EscherBlipRecord . java to use HEADER _ SIZE and added a new test class TestOLE2Embed
updated the initialization of the variables ' row ' and ' column ' in JSONParser . java to correct the initialization logic for better clarity and
replaced usage of ` JavaType . FullyQualified ` with ` Pattern ` in ` FindTypes ` and ` JavaType ` classes to
updated DETAIL _ THUMB _ HEIGHT from 200 to 300 and added functionality to play local trailers to enhance user experience by allowing
added a method to remove glyph information from long pointers in CStrike . java and invoked it in CStrikeDisposer . java to
act - 161 : terminate all process instance after a terminate - all event .
camel - 13660 : camel - xml - bind - allow to specify the local name of a type use the @ xmlrootelement annotation
updated the endpoint in the test from " http : / / www . apereo . org / scottb . html " to "
add ` ` prdef ' ' option to reset all preference
hbase - 25827 make internal class protect instead of private in thriftmetrics and thriftserver
[ danfossairunit ] remove channel that be deprecate ( # 10660 )
use hamcrest assertion instead of junit in examples / microprofile / endpoint - tests
removed duplicate code for stopping the expansionHelper in TweetActivity . java to streamline the code by eliminating redundancy
added null check for index in PartitionPanel and implemented equals and hashCode methods in PartitionFactory to improve robustness by preventing null pointer exceptions during
server : set root _ disk _ size in custom params when vm be create from snapshot
updated visibility logic in PredictionRowView based on user preferences to enhance user experience by allowing conditional visibility based on preference settings
improve bbox bbox parse to handle invalid bbox
added validation methods for value and position parameters in LibrustzcashParam . java and updated IVK value in Librustz
deprecate ithrowableentity in favor of fml ' s common registry
added random positioning for the x and y properties in NodeDataImpl . java to ensure that the position is properly initialized with a random value
renamed the test method from ` validateRefreshToken ` to ` validateRefreshToken _ happycase ` and added a new test for missing scopes to
added variables for declaredDepsBuildResult , firstOrderStdout , and firstOrderStderr using try - with - resources in JavacStep .
updated the VERSION string from " 0.9 . 1 " to " 0.9 . 2 " to reflect the new release version
added a condition to check for DEEP shortcuts in LoaderCursor . java to ensure proper handling of deep shortcuts in the cursor
added a hashCode ( ) method to the TimeGranularitySpec class to ensure consistent hash code generation for instances of TimeType and columnName
changed access modifiers of classes ` BooleanWeight ` and ` DisjunctionMaxWeight ` from private to protected to allow subclasses to access these classes and
added a boolean flag ` useProxyResponseCode ` and modified proxy handling logic in ` HttpURLConnection ` to improve control over NTLM proxy behavior
aarch64 : fix bug in aarch64move . ldr and aarch64move . ldr .
server : return reserve / used vm capacity instead of calculate them manually
added a condition to check if maxScore is not null in JSONResponseWriter . java and updated the query in TestDistributedSearch . java
updated the audio recorder parameters in AudioRecorderTest . java from 22050 to 44100 to correct the audio recorder configuration for testing
adjust calculation of newOriginX in RocketFigure . java to account for subject bounds to ensure correct positioning of the rocket figure
updated DruidQueryBasedInputFormat to allow empty data source and improved interval initialization to enhance data source validation and ensure proper handling of empty
added a new constant ` ORIGINAL _ TYPE ` and modified the regex pattern in ` CustomProperty . java ` to include it to enhance
added a static method ` create ` to create an instance of ` IndexImpl ` using a parent and data map to facilitate the
simplified the return statement by removing unnecessary variable to improve code readability and maintainability
[ hotfix ] [ table - common ] fix schema compatibility error message
added support for entity paths and association types in QueryUtils . java to enhance querying capabilities for entities in the database
updated TestSpanHandler to use synchronized lists for thread safety to ensure thread safety when accessing the spans list
updated method signatures in multiple classes to use wildcard generics for argument types to improve type safety and flexibility in argument handling
updated exception handling to catch InvocationTargetException and added logging for authentication errors to improve error handling and provide more informative logging for authentication failures
updated OAuth2AccessTokenEntity . java to improve access token handling to enhance security and maintainability of the OAuth2 access token management
updated request rejection messages to clarify that the service cannot process requests due to a specific status to improve the accuracy of request rejection
added new project files for " ios / data / Default - 1024w - 1366h " and " ios - moe / resources
replaced the import of ` ArrayList ` and ` List ` with ` ConcurrentMergeScheduler ` in ` TestSearcherManager . java ` to
added a null check for ` rc ` in ` QTestUtil . java ` and modified list handling in ` GenericUDTFInline .
refactor MapIterable , FJIterate , and ParallelIterate classes to improve code organization and maintainability
bugfix : prevent the spreadsheet key from open the spreadsheet if the user click on it .
added persistence and session factory service registration and unregistration in HibernateBundleActivator . java , and updated test cases in OsgiTestCase
fix # 159 - do n ' t decrement the timeout when the connection be close .
do n ' t create a component . xml file if there be no packaged resource .
updated file path handling in Compat . java and FileOpener . java to ensure consistent file path formatting across different operating systems
changed the return type of the row ( ) method from Cell < T > to void to simplify the method signature for better usability
improve error message when port number be specify multiple time
added a null mask feature to the WebSocketClient class and modified the WebSocketConnectionD12 instantiation to use a fixed mask generator when null mask is
refactor ` genUDTFPlan ` method to return a ` Pair < RelNode , RowResolver > ` instead of a ` Rel
added bucketedPreferredNodeSelectedCount and bucketedNonPreferredNodeSelectedCount counters to NodeSelectionStats and updated related methods to track node selection
add a test case for the new ` ` name ' ' property in maven - it0001
added a boolean variable ` hasOwnerPtr ` to track the presence of the owner pointer to improve code clarity and ensure proper handling of the
added clock functionality to PlaybackOverlayFragment to enhance user experience by providing a fade - in and fade - out animation
remove call to markdirty from updatecomparatoroutputlevel , they do n ' t do anything anymore .
modified the visibility of the IMPL variable and improved exception messages in SegmentReader . java to allow for dynamic class loading and enhance error handling
added SwingUtilities . invokeLater to fire cell updates on the Event Dispatch Thread to ensure events are executed on the Event Dispatch Thread for thread safety
replaced DefaultInetAddressAdapter with a custom InetAddressAdapter in DefaultTypeAdapters . java and updated typeHierarchyAdapter method signatures in MiniG
added methods to handle double , long , boolean , string , and string values in the Series class and corresponding tests to ensure that the Series correctly
updated the option for audio time stretch from " -- no - audio - time - stretch " to " -- audio - time - stretch " to
updated boundary conditions in GeoRelationUtils and modified GeoRect calculations in GeoUtils to improve accuracy in geometric calculations and ensure proper bounds handling
fix npe in listvirtualmachines api - get diskofferingid from the service offering object instead of the service offering object
added cleanup method to hazelcasttest to ensure all resource be clean up after each test
add test for no - padding cipher in blockciphertest
added filters to print operations logs in QFileClient to improve logging visibility for better debugging
improve javadoc for @ stub and @ beandefinition with @ beandefinition and @ beandefinitioninjectprocessor .
initialize currentconnectionaddress with proxyaddress if it be null .
replaced Math . addExact with MathUtils . cappedAdd for demand calculation to simplify code and improve readability by using a standard utility
refactor code to use try - with - resources for ImageOutputStream and ensure file deletion in finally block to improve resource management and ensure proper cleanup
replaced calls to ` TvApp . getApplication ( ) . showSearch ( ) ` with direct usage of ` SearchActivity ` in multiple
modified the instantiation of ` schemaCrawlerOptions ` in ` SchemaCrawlerCommandLine ` and adjusted the ` toString ` method formatting in ` GrepOptions
http : / / issues . apache . org / activemq / browse / amq - 2692 - add osgi support for
added dependency injection for PersonRepository in RepositoryIndexCreationIntegrationTests to facilitate dependency injection for test cases
changed the exception type in the ` stop ` method from ` Exception ` to ` InterruptedException ` to ensure proper handling of thread interruptions during
re - order cactus case to make it consistent with vanilla
refactor mouse event handling in ThemeSelector . java into a separate method to improve code readability and maintainability by encapsulating mouse event handling
[ java ] avoid false share protection on flow control padding
added alignment and vertical alignment parameters to the editStringAt method in IOSImplementation and IOSNative to enhance the functionality by allowing dynamic adjustment
throw an illegalargumentexception instead of an exception if the modelfile be null .
added a condition to check if the query is not a distinct query and modified group column handling in the query generator to ensure proper handling of distinct
[ gr - 34497 ] add option to jni reflection to find the best linkage to use .
fix checkstyle issue with line length
added null check for children before iterating over its elements to prevent potential NullPointerException when children is null
added tokenPosition and currentPosition variables and updated return statements in MessagePackParser . java , and implemented error handling in MessagePackParserTest . java
added locale management to AbstractSolrMorphlineTestBase by resetting the default locale after tests to ensure consistent test execution by resetting the default locale after
removed unnecessary conditional checks for ` mActionBarSize ` in ` LauncherFragment . java ` to streamline size calculation logic for better read
add a new test class MetricsReporterTest for testing the MetricsRegister functionality to ensure metrics are registered correctly and handle potential runtime exceptions
( chore ) camel - osgi : remove unused field
added equals and hashCode methods to the Rectangle class to ensure proper comparison and hashing functionality for the Rectangle class
[ hotfix ] [ kafka ] fix flaky test in streamkafkaptest
refactor DSAParameterGenerator to improve handling of strength values and clarify error messages to enhance code readability and maintainability by using
added configuration to use FQDN of the AM machine when submitting work to LLAP to enhance the flexibility of AM host name resolution based
add asserttrueeventually to clientoutofmemoryhandlertest to make sure the client be shut down properly
replaced calls to setObjectId with a new method getCmoObjectId across multiple shape classes and added a new test class for shape validation to ensure
added a new test method ` testWithDistinctScalarQuery ` to ` DistinctTest . java ` to verify the retrieval of distinct entities from
refactor multiple Java classes related to search trading functionality to improve code organization and maintainability
[ kubernetes ] remove unused bind and unbind method of managedkubernetesclient
updated subtitle display to use a dedicated method for retrieving information to improve code readability and maintainability by centralizing information retrieval logic
updated JUnit imports and annotations from JUnit 4 to JUnit 5 in TestAuthHandlerBoot . java and TestRSAProviderTokenManager .
do n ' t swallow exception when generate the summary html
simplified the reset method calls for intPool and bytePool in TermsHash . java to improve code readability and maintainability by using
added multiple @ Override annotations in FilterInputStream . java to ensure proper method overriding and improve code readability
updated the API level check from S _ V2 to TIRAMISU and added a new WindowSessionDelegateU class to enhance window
fix urlhelper . forceaddschemehostandportwithnonstandardport ( ) and urlhelper . forceaddschemehostandport ( )
added support for MSSQLDatabase in foreign key constraint generation to ensure proper handling of on - delete behavior for specific database types
hbase - 25836 fix checkstyle violation in hbase - server
improve emzuli pipe performance by remove debug output
simonstewart : make the htmlidentifier ' s shouldbeinjected method configurable
[ hotfix ] [ table - planner ] fix typo in hivelookuptablesource and hivelookupjoinitcase (
update player . listener to check if the player be in the correct thread
updated schema handling in SequenceSnapshotGenerator . java to use CatalogAndSchema to improve schema management by using a customizable schema name
updated ` SpriteBatch ` and ` SpriteCache ` classes , replaced ` ProgressiveJPEGTest ` with ` AlphaTest ` , and
fixed - rconnection . redissonconnection . connect ( ) and rconnection . redisclusterstate ( ) method throw classcastexception . #
added base URL handling in SolrLoggerServiceImpl to ensure only unique cores are stored in the statistic year cores
refactor TaskActionController methods to improve method naming and enhance task launching functionality to enhance code clarity and maintainability by using more d
refactor MorfologikFilter to improve dictionary handling and resource loading to enhance code clarity and ensure proper loading of dictionary resources
updated sorting options in GridFragment to use " community rating " instead of " stars " to improve clarity and consistency in naming conventions
added imports for ViewKt and ListRow , and modified visibility logic for header view in CustomListRowPresenter to enhance UI responsiveness
refactor switch - case structure in StressAction . java to use a try - finally block to ensure proper resource management and avoid potential memory
refactor HttpClient class implementation to improve performance and maintainability of the HTTP client implementation
replaced calls to ` isCaseSensitive ( ) ` with ` instanceof DB2Database ` in ` CatalogAndSchema ` and ` CatalogComparator
added support for jackson ' s javatime module in the standardjacksonserializer ( # 1188 )
replaced ` org . apache . log4j . MDC ` with ` org . slf4j . MDC ` in `
replace TypeBearer with Type in PhiTypeResolver . java to improve type safety and clarity in type handling
removed unnecessary imports and formatted code in CoinbaseTransaction . java to improve code readability and maintainability
added a method ` getBuildTargetList ` to ` BuckConfig ` for retrieving build targets and updated ` ProjectCommand ` to use this method
added a call to System . gc ( ) and modified the initialization of the IdleStrategy in the Ping class to improve memory management and ensure proper
replaced ` ContentProvider ` with ` ContentResolver ` in ` OCFile ` , ` FileDisplayActivity ` , and ` FileList
removed redundant state change checks in ReportPanel . java to streamline the code for better readability and maintainability
[ hotfix ] [ test ] check that slotowner be not null in testinglogicalslot
add a new recipe class to remove calls to ` System . gc ( ) ` and ` Runtime . gc ( ) ` from the JVM to
removed redundant calls to ` super ( ) ` in multiple exception classes to ensure consistent initialization of exception handling classes
added a new method ` setUIID ` to the ` ScaleImageLabel ` class to retrieve and set the icon based on the provided ID
replaced ` foundEntry ` with ` update ` for better clarity to improve code readability and maintainability by using a more descriptive
added support for the " - cp " argument alongside " - classpath " in the argument handling logic to enhance flexibility in handling classpath
replaced the ` options ` option with ` compiler ` in the ` avutil . java ` file to improve clarity and consistency in the
initialized variable in StorageService . java is set to true to ensure proper initialization of storage services
updated Test7196045 . java file to improve test coverage and functionality
updated density and decay values in ShaderParametersLightShaft . java to improve lighting effects and performance
added new properties ` withState ` and ` stateData ` to ` OidcConfiguration ` and modified ` OidcRedirectActionBuilder ` to
ddl - 1499 - alter table add unique constraint do not work for nullable column
added federated share capability checks in UsersAndGroupsSearchProvider and modified folder visibility in EditShareFragment to enhance security by restricting federated
added a method ` needsDocValues ` that always returns true in the ` TestBBoxStrategy ` class to ensure that the ` needsDocValues
refactor BufferAlignmentAgent and BufferAlignmentInterceptor for improved clarity and error handling to enhance code readability and maintainability while ensuring proper
added a new method ` intForEach ` to the ` Int2ObjectHashMap ` class and modified the ` SpecialisationGenerator ` to enhance
fix potential race condition in worldserver . savescoreboarddata ( ) .
changed return type of count methods from Long to long in QueryDslMongoRepository , QueryDslPredicateExecutor , and SimpleMongoRepository to
updated MManager . java to adjust MTree snapshot creation logic based on modification time and line number to improve logging clarity and ensure MTree
lucene - 8248 : vectorutil . dotproduct ( ) should return 0.5 rather than 1.0
added IRREVERSIBLE _ THRESHOLD constant and methods to manage the latest confirmed block number to enhance functionality by allowing dynamic configuration of the latest
refactor locale handling in GpsMainActivity and MainPreferenceActivity to use Systems . setLocale method to improve locale management and enhance logging functionality
added a check to determine if the database was recently created in LauncherClings . java and modified LauncherProvider . java and Launcher
refactor assertions and exception handling in BasicAclEntryAfterInvocationCollectionFilteringProvider . java for improved readability to enhance code clarity and
refactor condition checking for 64 - bit architecture in Constants . java to improve readability and maintainability of the code
added a Thread variable and a check for the current thread in TestIndexWriterDelete . java to ensure that the current thread is valid before proceed
changed the access modifier of the closeDatabase method from private to protected to allow subclasses to access the closeDatabase method
updated imports and method calls from ` org . jellyfin . apiclient . model . dto ` to ` org . jel
added attribute handling for SVG elements in BatikSVGDrawer . java to support XML import functionality in the document
removed the inputrcUrl parameter from the warning log message when user configuration parsing fails to improve error handling by logging the warning only when
added extra handling for " WaitForResult " in AndroidImplementation and CodenameOneActivity to control the waiting state based on intent data to ensure
refactor HitQueue , SpanPositionQueue , and PriorityQueue to use a Supplier for sentinel objects instead of a pre - populating method
added a new TextView for widget description and updated visibility handling in WidgetCell . java to enhance user experience by displaying widget descriptions when available
added a maximum attribute count limit check in the Attribute class to ensure that the number of registered attributes does not exceed a defined maximum , preventing
move predicate test to impl package to improve organization of predicate test
camel - 1770 : added support for header name to be case insensitive . thanks to benjamin for the patch .
updated variable names and logic in InlineLayout and Breaker classes for better clarity to improve code readability and maintainability by using more d
added nullability annotations and improved view initialization in ShareUserListAdapter . java to enhance code robustness and prevent potential null pointer exceptions
refactor ` shouldInstrument ` and ` parentIsInstrumented ` methods to streamline package management and improve instrumentation logic to enhance code clarity
added a condition to check if the association is an insert destination before the source in BrowserContentPane . java to ensure correct column count is returned
updated memory limit file path handling in CmdModifierTest . java to dynamically retrieve the memory limit file path based on the Docker version to ensure compatibility
replaced instances of ` CxxDeps . of ( ) ` with ` CxxDeps . EMPTY _ INSTANCE . EMPTY _ INSTANCE ` to
added a check to throw a HumanReadableException if the specified source under test is not among its dependencies to improve error handling by providing clear
change minecraft proxy detection to use mc _ version instead of hardcoding it
added a check to ensure ` atIndex ` is non - negative to prevent potential index out - of - bounds errors during string processing
increased timeout duration from 100 milliseconds to 500 milliseconds and increased sleep duration from 1000 milliseconds to 5000 milliseconds to improve test reliability by allowing
refactor TaskOverlayFactoryGo to accept AssistContentRequester as a parameter to enhance flexibility in creating TaskOverlayGo instances
updated the way the witness address is encoded in VoteWitnessProcessor . java to improve the accuracy of the representation of the witness address
refactor DefaultMethodRegressionTests for improved clarity to enhance code maintainability and readability
refactor WorkloadManagerMxBean class for improved readability to enhance maintainability and clarity of the codebase
camel - kafka : upgrade to kafka 2.2 . 0 . final - upgrade to 2.3 . 1
added a call to closeLoader ( ) in DesktopGeneratorController . java to ensure proper resource management and prevent memory leaks
added a clear method to ExceptionThrowingTaskletStub and multiple test cases for exception handling in FaultTolerantExceptionClassesTests to enhance
improve error message when configbuilder can not find any runner
added ` extraProperties ` parameter to multiple tuner utility methods across multiple classes to allow for additional configuration options during tuner application
added a set to track in - progress instances of real - time segments in PinotRealtimeSegmentsManager to ensure that segments are only added
added a check to return null if the touchable state is disabled to ensure proper handling of disabled touchables in the table
added a new test method ` testBuildUsingPrecompiledHeaderInOtherCell ` to ` PrecompiledHeaderIntegrationTest . java ` to ensure
throw a retryable exception if cache config do not have be create yet
refactor JSweetTranspiler to use ProcessUtil for node package installation checks to improve code clarity and maintainability by centralizing package
added ManagedObject and ManagedOperation annotations to MBeanContainer and Destroyable classes to enhance monitoring capabilities for MBeans and destroying components
modified the conditional check from ` if ( settings . inAppBrowser ) ` to ` if ( false ) ` in ` LongClickableSpan
refactor string comparison in EspMilightHubDiscoveryService and EspMilightHubHandler to use ` " 0 " .
updated the condition in isReifiable check and added new classes T6558559a and T6558559b to enhance
add more information to log when position be set
camel - 14263 : camel - kafka should wait for task to complete before shut down the consumer
added default implementation of the examples ( ) method in the Schema class to provide a placeholder for examples in the schema documentation
modified thread interruption logic in AgentRunner . java to improve clarity and control flow to ensure proper handling of thread interruption and
removed the time column from dimensions and result in DefaultAggregationLoader and PinotDataSourceDimensionFilters to ensure that the dataset ' s time column is
simplified the conditional check for shards in FacetComponent . java to enhance code readability and maintainability
replace linker dependency retrieval with CxxPlatforms methods in RustBinaryDescription and RustLibraryDescription to streamline dependency management for C++
added private String field ' name ' with getter and setter methods in JdbcAuthenticationProperties , AbstractLdapProperties , and NtlmProperties classes to
do n ' t exit the jvm if the printer can not connect to the igv
refactor scan logic to use local variables instead of method calls in BaseQueryPlan . java and add new constants in QueryServices . java and
added ` routeId ` to the ` filterToStringCreator ` in ` RetryGatewayFilterFactory . java ` to include the route ID in the
replaced calls to ` redisplay ( ) ` with ` callWidget ( REDISPLAY ) ` in ` LineReaderImpl . java `
refactor onOverviewShown methods in ActivityControlHelper , WindowTransformSwipeHandler , and DiscoveryBounce to use a new showForOverview
refactor null and size checks for globalMinPackedValue and globalMaxPackedValue in CheckIndex . java and add a test for
updated the publish method parameter from ` true ` to ` updateLastState ` to ensure the correct state is updated during the publishing process
updated string concatenation syntax for SKEWED _ STRING _ LIST _ VALUES in MetastoreDirectSqlUtils . java to ensure proper syntax
removed the addition of a null element to the exp collection in SpliteratorCollisions . java to simplify the code by eliminating unnecessary null
danielwagnerhall : add case sensitivity to text condition to make it easy to use
replaced the ` do ` loop with a ` while ( true ) ` loop in ` ManyToManyConcurrentArrayQueue . java ` to improve
# 113 - enh : add support for forward _ only _ fetch _ size for mysql
added handling for ClosedChannelException in HttpServerMultiplexChannelHandler to avoid sending 404 back to the client when the channel is already closed
pdfbox - 4892 : set individual initial arraylist size , a suggest by valerybokov
updated the initialization of ` mWindowRadius ` to use ` initialWindowRadius ` based on support for rounded corners to ensure proper handling of window
refactor ` DesktopTaskView ` to use ` View ` for background and icon views instead of ` ShapeDrawable ` to improve flexibility
updated the initialization of UpstreamCheckService in UpstreamCheckServiceTest . java to ensure proper initialization of the upstreamCheckService instance
updated logging statements in AbstractSession . java and AbstractSessionManager . java to check for debug level before logging warnings to improve logging clarity and
removed error logging and exception throwing in ZooKeeperHiveLockManager . java to streamline lock retrieval process by returning locks directly instead of throwing exceptions
[ hotfix ] [ javadoc ] fix checkstyle violation in executionconfig
added a boolean flag ` containsCustomData ` to control the mipmap generation logic to ensure mipmaps are only generated when custom data
camel - 16400 : use single quote instead of double quote for string in camel - core
added selectable state and methods to manage selection behavior in the List class to enhance user interaction by preventing touch events when the list is not selectable
added a check to return false if there are no value vectors in LlapArrowBatchRecordReader to ensure that the correct handling of empty vector
added file separator handling and improved logging in PolicyContext . java to enhance file path management and enhance debugging output
replaced HashSet with ArrayList for flatQueries and expandQueries in FieldQuery . java to improve performance and maintain order of queries
refactor TLSRestrictions class for improved security to enhance security by enforcing stricter certificate validation
[ camel - kafka ] use submit daemon task to wait for close producer .
updated the assertNodeStateProvider method to include an ignorableNodeValues parameter and modified its implementation to include this parameter to enhance functionality by allowing
added a check to delete the " LOCK " file if it exists to ensure that the lock is removed before proceeding with further operations
hbase - 25827 minizookeepercluster should use inetaddress for the standalone server factory ( chaoyu tang
refactored the ` getResponse ` method to improve error handling and logging to enhance code readability and maintainability while ensuring proper connection management
updated the way segmentTarURIs is converted to a string array to improve code clarity and maintainability by using a more descriptive method
updated the password used in the login method call from TEST _ STUDENT2 _ ACCOUNT to TEST _ STUDENT1 _ PASSWORD to
added a null check for item ID in EnhancedBrowseFragment and StdBrowseFragment to prevent potential NullPointerExceptions when accessing the item ID
reduced the number of strings from 500 to 100 in TestSpecialOperations . java to improve test reliability by reducing resource usage
replaced the custom ByteArrayInStream implementation with a default byte array initialization and removed the hexToBytes method to simplify the code and improve performance by
rename method ` messageWithHeaderEntry ` to ` messageWithHeaderKey ` to improve clarity by using a more descriptive parameter name
added a check for direct substates in AbstractStateMachine . java and updated assertions in ShowcaseTests . java to ensure proper handling of state
added checks for ListMultimap and SetMultimap in MultimapSubject . java and corresponding tests in MultimapTest . java to ensure correct equality checks
added JoinOperation interface to PostJoinOperation class to enable join operation functionality in the operation hierarchy
added a new test method ` testDataIssue258 ` in ` AdditionalPostgreSQLTest . java ` to validate PostgreSQL functionality to ensure correct
http : / / issues . apache . org / jira / browse / amq - 5035 - fix test failure
renamed AvaticaDatabaseMetaData . java to improve clarity to enhance code readability and maintainability
updated MongoDbConnectionPoolProperties to use DurationCapable annotations for lifeTime , idleTime , and maxWaitTime to support string representations of duration
fix a nullpointerexception in sdputils . createaudiomediaformat ( )
refactor FacetProcessor methods to return a boolean indicating filter application to improve clarity and control over filter processing based on document acceptance criteria
added a enabledTimeout flag and modified timeout handling logic in ShuffleHandler . java to enable or disable timeout control based on configuration
replaced hardcoded value of ` mQuickStepStartingRotation ` with a constant ` QUICKSTEP _ ROTATION _ UNINITIALIZED
camel - 16400 : camel - xquery - improve log and deprecate camel - saxon - xpath
pdfbox - 4892 : fix typo , a suggest by valerybokov
[ net . sourceforge . pmd . cpd ] add test case for escape back slash
added a check for the presence of the " atlas " property in the map and threw an exception if it ' s missing to ensure that the
camel - 16400 : camel - core - remove propertyplaceholders from camel - core , it be not use anymore .
added a call to close the database in BlockchainTest . java and removed the receive listener implementation in KafkaTest . java to improve resource management
refactor code to use a new method ` getLines ` for splitting strings to improve code readability and maintainability by centralizing line parsing
int - 1188 fix checkstyle violation in webserviceinboundgatewayparsertests
replaced ImmutableList . Builder with List in ProjectableSQLQuery , SQLBindings , AbstractSQLClause , and SQLBindings classes to improve flexibility
added a check for the Java VM name being " OpenJDK " in addition to the existing vendor check to ensure compatibility with OpenJDK
http : / / issues . apache . org / jira / browse / amq - 4892 - add keepaliveclient
replaced string literals with constants from the ShaderProgram class in MD5Renderer . java and ObjLoader . java to improve code maintainability
camel - 14263 : camel - core - make it easy to configure component in osgi .
modified the condition for checking the existence of an account in UnfreezeBalanceActuator . java to improve clarity and prevent potential null pointer exceptions
update version number to be 3.8 . 1 . alpha for the new release .
replace direct calls to ` t ` with ` t . unannotatedType ( ) ` in multiple locations to ensure proper handling of unannot
updated assertions and processor configuration in StorageGroupProcessorTest . java to improve test clarity and ensure proper handling of sequence ts file size
updated class names and imports for Jetty - related configurations to reflect changes from " ee10 " to " ee10 " to ensure compatibility with
added a parameter ` waitbeforestart ` of 2500 to the ` FFMpegVideo ` class to allow for a longer wait time before
removed the ` skipCorrupt ` parameter from the ` OrcEncodedDataConsumer ` constructor and related classes to simplify the constructor and eliminate unnecessary complexity
pdfbox - 4892 : improve test coverage of accessors . listindex ( )
add an accessor to the lirgenerator to make it easy to access the framemap
updated test classes to use @ ConditionalIgnore and @ RunWith with RunningStandaloneCondition instead of @ Ignore to enhance test flexibility by allowing
fix boat not be able to drop water ( # 4068 )
updated the ` toString ( ) ` method in ` Directory ` and added ` getLockID ( ) ` method in ` RAMDirectory ` to improve
simplified the condition for checking experimental options in Launcher . java to improve code readability and maintainability by removing unnecessary method
added new utility methods for path assertions in BDDAssertions . java to enhance assertion capabilities for different path types
renamed variable ` hp ` to ` hostField ` and updated related logic in ` ForwardedRequestCustomizer . java ` and ` For
update log level from debug to warn for multiple Kubernetes config files to provide clearer guidance on how to change the Kubernetes configuration file
added file upload status handling in UploadListActivity and updated OCFile retrieval in FileStorageUtils to improve file management and ensure proper cancellation of
added a new file ` ProviderLoader . java ` and refactored ` TerminalManager . java ` to use it to implement ` ProviderLoader
replace usage of Span with TraceMessageHeaders in StreamEnvironmentPostProcessor and its tests to integrate tracing functionality into the application
modified the SelectFromDatabaseChangeLogStatement to use a computed column configuration instead of specific fields to enhance flexibility in retrieving database change log history
hhh - 14819 - fix namequalifiersupport for postgresql 8.1
fix for internalpartitionserviceimpl when there be no data member
added scheduler state checks and improved error handling in ExecutionScheduleManager and ExecutionSchedulerImpl classes to ensure that starting a scheduler only starts if it
simplified the instantiation of InlineBox and improved the conditional check for blockParent to enhance code readability and maintainability
refactor checkArgument messages in StatisticMap . java for improved readability to enhance maintainability and clarity of error messages
updated the return value of getStagedRectSlideEnd ( ) from 383 to 500 to adjust the timing for better user experience
change command mode label to be i18n - friendly
modified the condition to check if road items should be killed based on the ownership of the plot to ensure that road items are only killed
added a test for setting touch exploration enabled and refactored listener handling in ShadowAccessibilityManager to improve accessibility management functionality and ensure
pdfbox - 5328 : avoid indexoutofboundsexception , add test
use testelement . getname ( ) instead of element . getpropertyasstring ( ) . getname ( )
refactor the creation of NPOIFSFileSystem to use POIFSFileSystem . create ( big ) instead of new NPOIFS
added imports for PlotArea and modified return logic in mmm Move . java to retrieve and utilize plot coordinates from specified arguments to enhance functionality
updated regex pattern in TestWebHCatE2e . java to allow additional characters in the version string to improve flexibility in version validation
updated the validation condition for ` count ` in ` Filters . java ` from ` count < 0 ` to ` count < 1 ` to ensure
add client id to kafka consumer thread property ( # 6691 )
replaced the import of ` IsolatedClassLoader ` with ` IsolatedClassLoader ` and added error handling in ` JavacCompiler . java
ggb - 1352 repaint only when need
fix checkstyle violation in springbatchproducer
added a method ` isAnimationFinished ` to check if an animation is finished based on ` stateTime ` and ` frameDuration ` to provide
updated import statements in LoginMockMvcTests . java and added a new test method for custom favicon with line breaks to improve code readability
added null check for ` otherUrl ` in ` TimeLineCursorAdapter . java ` and modified the ` setRefreshingText ` method in
ggb - 1186 fix space in text field when edit a button
refactor ObjectHashSet class for improved performance to optimize hash set operations for better efficiency
refactor null checks for ' a ' and ' b ' in DataUtilities . java to improve null handling and simplify equality checks to enhance code
fix nbt data comparison , allow for delete of enchanted book , mc - 12770
( chore ) camel - microprofile - async : add test case for async resource method
rename target - flat - headers . hmap and target - flat - headers . hmap to target - user - headers . hmap and
added error logging and improved message sending details in MailService . java to enhance debugging capabilities and provide clearer error messages when sending fails
renamed the method ` resetTaskItemView ` to ` resetToEmptyUi ` and introduced a new constant ` EMPTY _ LABEL ` to
added unit tests for partition retrieval with different sizes in TestHiveMetaStoreClientApiArgumentsChecker to ensure correct behavior for different batch sizes in
added a closing brace to the FileListListAdapter class to ensure proper code structure and avoid potential null pointer exceptions
changed ArrayList to List for sharees in OCFile . java and OCFileListAdapter . java to improve flexibility and consistency in data
updated the index used to remove the view in the layout from ` getChildAt ( getChildCount ( ) - 1 ) ` to ` getChildAt (
removed unnecessary package declarations from hide methods in JavaxWebSocketConfiguration and JettyWebSocketConfiguration to simplify the code by eliminating unnecessary dependencies
do n ' t use ssl for s3 , we ca n ' t use ssl
fix jfxradiobuttonskin not update animation when timeline be null
updated the condition for parsing DeweyNumber and added an exception for invalid inputs to improve error handling and ensure proper parsing of Dewey
updated category set string handling in MwVolleyApi . java to ensure proper formatting of category sets by removing " Category : " prefix
updated the assertion message in WebSocketClientTest to use " Invalid close code 1111 " instead of " Invalid close control status code 1111 "
added null check for classLoader in WebappLoader and updated assertions in TestVirtualWebappLoader and TestWebappClassLoaderWeaving to ensure robust
removed duplicate code for collecting persistent fields in PersistentAttributeTransformer . java to streamline the code for better readability and maintainability
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a new test class ` TestPorterStemFilter ` for testing the ` PorterStemFilter ` functionality to ensure that the ` P
added a success parameter to the postBatchMutate method and modified its implementation to conditionally write index updates based on its success status to improve
corrected the package name from " exlore " to " explore " in multiple test classes to ensure consistency with the new package structure
fix multichat operation set definition and gibberish protocol implementation . related issue : http : / / forums . google .
removed duplicate calls to Sys . touch ( ) across multiple Java files to streamline code and improve maintainability
updated the ` untrackedFiles ( ) ` method implementation to use " - mardu " instead of " -- unknown " and modified the
camel - 15836 : camel - netty - should use timer from component instead of create new timer per endpoint
changed the ` directionalLight ` , ` PointLight ` , and ` SpotLight ` classes to be ` final ` and added a `
replaced direct calls to target width and height with variable assignments in X11GraphicsConfig and WGLGraphicsConfig to ensure minimum width and height
added ` toString ( ) ` methods to ` DelegatingSecurityContextCallable ` and ` DelegatingSecurityContextRunnable ` classes to provide a string representation of
added a new class AnnoFilterTreeSet and methods to find annotated classes with specific annotations in the ClassFinder to improve filtering of annotated classes
updated the handling of ` newLength ` in ` BytesColumnVector . java ` to ensure ` newLength ` is always greater than zero to
fix intermittent test failure in writebehindmapstorewithevictionstest # testwritebehindmapstorewitheviction
changed the parameter type of the ` uninstallListeners ` method from ` JScrollPane ` to ` JComponent ` in both ` MotifScrollPaneUI
ggb - 232 add polyfunction . isequal ( ) to compare polynomial function
added null check for the table before retrieving the column class to avoid potential NullPointerException when table is null
added a try - catch block around the instantiation of CustomChange to handle potential ClassCastException when loading classes
updated DistBuildConfig to replace ConfigPathGetter with BuckConfig and added optional whitelist functionality to enhance configurability and maintainability of the
show warn message when export to ofx or qif
added JUnit @ Ignore annotation to BasicDistributedZkTest . java to mark the test as ignored due to a known issue to address
refactor doJoin methods to return boolean values instead of void in JoinTemplate and JoinWorker classes to enhance the functionality of the doJoin method
added a method ` getAutodeps ( ) ` to the ` JavaLibraryDescription ` class to provide a way to retrieve the status of
added FLAG _ ACTIVITY _ NEW _ TASK to intent flags in LauncherTimelineCursorAdapter . java to ensure the activity does not stay
added a method ` checkPagingOrderBy ( ) ` to the ` SpiQuery ` class to enable the checking of pagination order by in
updated index references for MavenArtifactRepository assertions in RepositoryConventionPluginTests . java to ensure correct handling of multiple repositories in tests
francoisreynaud : add affiliate task to check if affiliate exist in the cluster before send the affil
remove dependency on httprequestutil and use uri . normalize ( ) directly
changed the access modifier of the method ` buildUserProfileByClassCompleteName ` from private to public to allow access to the method from other classes
added array handling in CacheKey and improved readability in CacheKeyTest to enhance functionality to support array updates in cache key comparisons
updated file type detection logic to use FileSystemProvider for consistent file type detection across platforms to improve compatibility and maintainability of file system implementations
added a call to close the WebSocket session to ensure proper resource management and prevent potential memory leaks
updated ` ShadowVirtualDeviceManager ` to retrieve ` VirtualSensorCallback ` and ` VirtualSensorDirectChannelCallback ` directly from ` ShadowDevice `
added a condition to check if the context is not removed from the session in the HttpSessionSecurityContextRepository to ensure that the security context is only removed
replaced variable name ' lch ' with ' loopback ' and updated the logic for retrieving the loopback address to improve clarity and correctness
renamed BUF _ SIZE to DEFAULT _ BUF _ SIZE and updated related buffer initialization to improve clarity and consistency in variable naming
updated KeyInfoReferenceResolver to include secure validation and modified error handling in XML processing classes to enhance security checks and improve error reporting for XML processing
added a boolean flag to track if the icon change listener is installed and modified action listener logic accordingly to ensure that the icon change listener is only
added Russian language support to the language files to enhance internationalization support for Russian users
hhh - 14650 use nanosecond instead of second for duration conversion in basSqmtosqlastconverter
disable frame state verification during graph construction in substratetransitionkit .
added teardown methods and reset system properties in RobolectricTestRunnerTest and TestUtil classes to ensure proper cleanup of system properties after tests
added SLF4J logger class support to ViewClassLoader and its test to ensure proper loading of LoggerFactory in the application context
updated the changePackaging logic to handle " jar " packaging alongside " null " in addition to " jar " to ensure that
use ` $ . download ( withextension ( ` ` txt ' ' ) ` ) ` instead of ` $ . download ( ) ` in
glfw demo : clear the nk buffer when it ' s clear
replaced default units with preferred units in the JogService and Settings classes to improve clarity and consistency in unit management
updated date formatting in DatePatternConverterTest to use dynamic timezone handling to improve flexibility and accuracy of date formatting for different time zones
removed unnecessary whitespace in Terminator . java to improve code readability and maintain consistency
[ hotfix ] [ filesystem ] improve error message when hdfs namenode host be not specify
use jabrefexecutorexecutorservice instead of scheduledexecutorservice in jabrefframe
( chore ) camel - ftp : use awaitility instead of thread . sleep ( )
updated KeyedProperties class to extend ConcurrentSkipListMap instead of ConcurrentHashMap to improve performance by avoiding unnecessary concurrent operations
added an ` ignore ` method to multiple log classes that logs the current state to enhance logging control by notifying when a log entry is ignored
added a null check for runningTaskView before proceeding to prevent potential NullPointerExceptions when runningTaskView is not initialized
removed unnecessary type casting when retrieving damage in BukkitWorld . java to simplify code and improve readability by eliminating unnecessary
removed the cleanImage function call from PanelManager . java to streamline image processing by eliminating unnecessary image processing
added MMapDirectoryFactory and SimpleFSDirectoryFactory classes for managing mmaping and unmapping directories in Solr to enhance directory management capabilities and improve
added null check for ` ic ` before creating ` BaseColor ` in ` PdfCleanUpProcessor ` to prevent potential NullPointerException when ` ic `
updated the field name in the query assertion from ' field1 ' to ' field1 _ s ' to ensure the test accurately reflects
updated the implementation of ExtendedOperatingSystemMXBeanImpl to improve performance and maintainability of the code
added installLeftCommands method to manage left commands in the SideMenuBar class to enhance the functionality of the SideMenuBar by integrating left
added a boolean flag ` advanceWindowed ` to ` AppSettings ` and modified ` TweetActivity ` and ` UserProfileActivity ` to
added SybaseDatabase support to the conditional check in DropPrimaryKeyGenerator . java to support additional database types in the primary key generation process
refactor Client class to improve code readability to enhance maintainability and facilitate future updates
[ java ] update lastrecordingposition when leader be ready .
replaced invalidate ( ) with setCellLayoutPressedOrFocusedIcon ( ) in BubbleTextView . java and implemented shouldDelayChildPressed
added a return statement to the NearCachedClientMapProxy class to ensure proper termination of the method execution
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to shutdown the HTTP server in a try - catch block to handle potential exceptions when starting the server to ensure that the server is
camel - 15836 - camel - aws2 - s3 : support stream upload in camel - aws2 - s3
[ hotfix ] [ runtime ] remove the usage of parameter _ tm _ id in taskmanagermetricshandler
bug cs - 15419 : add miss key to 227 to 227 db upgrade
added a new test class ` TestThriftCLIServiceSecurity ` and modified the password handling in ` TOpenSessionReq ` to ensure that the
added maxEnergyLimit variable and updated its assignment based on fee limit to ensure energy limits are accurately calculated based on transaction fees
added ` maxInMemorySize ` property and its getter / setter in ` HttpClientProperties ` , and modified the ` webClientPlugin ` method
refactor caching logic in Cache . java to improve performance and reduce memory usage
added two new test files , RunCucumberTest . java and StepDefinitions . java , to implement Cucumber test functionalities and
refactor double value handling in TypeJsonUtils and add tests for array operations in TestArrayOperators to improve error handling and ensure correct data processing
updated Utf8StringBuilderTest . java to include new hex strings " 656469746564 " and " 8080656469
added checks to ensure parameters are only processed if they are set to improve parameter handling and avoid potential null pointer exceptions
camel - 10663 : add validation for circuitbreaker load balancer to limit the number of output configure on the load balancer type
updated the assertions in TestIndexWriterExceptions . java to use the correct expected value to ensure that the test accurately verifies the maximum buffered documents
replaced string hashing methods with Sha1HashCode for resource APK , primary Dex , string assets , and text symbols to improve performance
removed enumValue , intValue , and longValue methods from AsmRuntime . java to streamline code by eliminating unused utility methods
add miss biome tag ( fixes # 6798 )
change asyncimageloader to a thread pool , a suggest by valerybokov
changed access modifiers of several fields and methods from private to protected in BaseTableUpsertMetadataManager . java to allow subclasses to access these fields and
updated Unicode string references from " \ u0648 \ u0646 " to " \ u064a \ u064a
replaced ` getImage ( ) . equals ( varName ) ` and ` getImage ( ) . equals ( vn ) ` with ` hasImageEqual
camel - jbang - make it easy to pass -- repos to jbang run command
added handling for NaN values in CrawlDbReader to improve score processing by distinguishing between NaN and non - NaN values
added a cleanup method in OnStartupTriggeringPolicyTest to clean up temporary files after tests to ensure the test environment is clean up after each
replaced ` requestFocus ( ) ` with ` requestFocusInWindow ( ) ` in ` FilterConditionEditor . java ` and modified focus
[ hotfix ] [ checkpoint ] make checkpointscleaner implement autocloseableasync
added a new file ` XPathWhiteSpaceTest . java ` that tests XML schema validation to ensure proper handling of whitespace in XSD files
do n ' t persist the trie log if it ' s already persist
updated FilledNewArrayInstruction class implementation to improve performance and maintainability of the code
added ` timeout = 60 * 1000 ` to the ` @ Test ` annotation in ` SimpleNetworkTest . java ` to improve test reliability
updated the condition for returning the parent path to use ` endsWith ( ) ` instead of ` substring ( ) . equals ( ) ` to improve
added a print statement to indicate the failure of loading the skin file to improve error handling by providing feedback when the skin file fails
added markDirty ( ) and isValid ( ) methods to LgoGroupedLevel2Update and modified logic in LgoLevel2BatchSubscription to
added a new constant ` UNDEFINED ` in the ` Result ` class and replaced its usage in ` TestStep ` to standardize the handling of
updated assertions in TestTransactionCallback to check for NullPointerException instead of PersistenceException to ensure proper exception handling for null pointer exceptions in database operations
make uploadjobmultipartoperation extend operation , not async operation ( # 11936 )
improve error handling when recover from the scheduled job journal
bug fix : do not show summary level for node with no child
replaced the ` volatile ` modifier with a ` public ` variable ` sizeMask ` and modified the ` ensureAvail ` method to use
added @ Ignore annotation to ChaosMonkeySafeLeaderTest . java and RecoveryZkTest . java files to temporarily disable tests that
replaced the calculation of ' targets ' with a direct assignment of ' endpoints ' to ensure proper handling of block - for endpoints in the storage
updated parameters in FileManager . java to include ' final ' keyword for consistency to improve code readability and maintainability
updated transform function types in TransformFunctionType . java and added corresponding method calls in TransformFunctionFactory . java to improve clarity and consistency in
added getSimpleName ( ) and getEnclosingElement ( ) methods in VariableElement . java and implemented them in VariableElement . java to provide clearer
updated RFC3280 reference from " RFC3280 " to " RFC5280 " in multiple Java files to ensure compliance with RFC standards
update version number from 2.17 . 3 to 2.17 . 4 and fix type casting in SearchAnnotationVisitor to ensure compatibility with the
refactor ListActivity and NoteAdapter to use SparseBooleanArray for selected items instead of HashMap to improve performance and simplify the handling of selected items
simplified conditional statements in DirectUpdateHandler2 . java to improve code readability and maintainability
updated ConfigFileApplicationListener to use ResourceUtils for URL path validation and added a test for absolute resource defaulting to ensure correct handling of absolute paths
updated the constructor of PreviewPositionHelper to accept a Context parameter and modified inset handling in TaskViewSimulator and TaskThumbnailView to improve
[ java ] do n ' t publish new leadership term if it ' s already in the recording log .
( chore ) camel - jbang - pmdcoverage : use errorstream to check output log
modified skip logic in ByteArrayInputStream and added a new Skip class with test cases to improve handling of input stream skipping and ensure correct skip behavior
refactor conditional check for ` mActivityReference ` and ` promptUpdate ` in ` UpdaterTask . java ` to improve readability and
changed the visibility of MAX _ HEADERS from final static to public static in HeadersMessage . java and added a conditional check in Peer . java
add rt . jar to the list of default library in modclassloader .
removed redundant code and streamlined the handshake process in AbstractHandshakeHandler . java to improve code readability and maintainability by reducing complexity
[ geos - 8540 ] fix checkstyle violation in geoserver - ui
added a check to prevent sending an error 500 response if the response is already committed to enhance error handling by logging a warning if the response is
modified conditions in HttpSession . java to check for non - negative hold values and adjusted polling logic to ensure proper handling of idle connections and improve polling
modified fade - out behavior in HomeGestureTutorialController and added feature flag checks in SwipeUpGestureTutorialController to enhance
add name to prefab if it do n ' t exist
replaced the initialization of ` eDB ` with direct addition of specific external groups in ` LdapMockMvcTests . java ` to streamline
updated thirtyDays initialization in FreezeBalanceActuator . java and added validation in TransferActuator . java to ensure proper thirtyDays
replaced hardcoded ' / ' with File . separator for path index retrieval to improve compatibility across different operating systems
ggb - 2322 fix focus and error when enter a geogebra .
updated GpsMainActivity to retrieve the session description instead of an empty string and modified AnnotationViewFragment to use EventBus for command events to
updated JsoupNonVisualRegressionTest to conditionally save and read a PDF file before asserting the number of pages to ensure that
rename androidbufferallocator to androidnativibufferallocator , deprecate in favor of androidbufferallocator
added checks for flags starting with " ! " in Main . java and PrimaryItem . java , and modified flag matching logic in Util . java
added a NOPMD comment to indicate that the ResultSet is no longer needed during execution
updated string comparison to use a constant for ITEM _ USE _ GRANT _ SELECT _ REWARD in BattlePassManager . java to
improve test coverage of priorityelement . tostring
fix the unit test failure of affinityapitest . thanks to david mollitor for the patch .
added a null check for the main command and updated the option check to include the HELP option to enhance command - line argument validation and provide
increase the size of the LightOutputStream in multiple classes to optimize memory usage for better performance
changed the access modifier of the Scanned class from package - private to public to allow access to the Scanned class from other packages
added a new class T8032819 and modified ClassWriter . java to include a showBlank option to enhance visibility of blank line output in
added assertion to check the length of the ' sn ' variable to ensure that the ' sn ' variable is correctly initialized before use
added null check for file extension before checking the blacklist to improve robustness by preventing potential NullPointerExceptions
replaced ` return ` with ` continue ` in ` ContactRightButtonMenu . java ` to improve control flow by controlling flow flow
[ hotfix ] [ runtime ] fix checkstyle violation in simpleslot
simplified the screen iteration logic in InstallShortcutReceiver . java to improve readability and maintainability of the code
refactor socket implementation by using a delegate pattern for handling file descriptors and addresses to enhance code clarity and manage resource cleanup effectively
added functionality to manage and clear removed items from the media details in the BookmarkListRootFragment and MediaDetailPagerFragment to improve user experience
updated log message to specify offsets from the element ' s in - view center point instead of the center of element to improve clarity and accuracy
added a new file bug4865918 . java to implement a GUI test for a scrollbar to verify that the scrollbar block increment is in
replaced ` VelocityEngine ` with ` Velocity ` in ` ADKerberosOperationHandler . java ` to simplify the code and utilize the
updated import statements in QuestCommand . java and added grouptriggers functionality to enhance command functionality to include group triggers for better user feedback
fix crash when try to select account file in accountpreferencesfragment
add miss @ tostring ( callsuper = true ) on partitionchangeevent and tbapplicationevent
updated CloudService configuration to use a constant for the configuration URI to improve code maintainability and readability by centralizing configuration URI handling
removed viewport and JScrollPane settings from BrowserPanel . java to streamline code by eliminating unnecessary component settings
updated key mappings from KEYCODE _ DEL to KEYCODE _ FORWARD _ DEL and added handling for the BACK key in multiple classes
added a configuration option to conditionally index MIME type parts in the MoreIndexingFilter class to enhance flexibility in handling content type parts based on
added a pattern to filter methods based on the author of a method in JSDoc . java to improve the accuracy of method visibility checks based on
updated metrics constants from DELTA _ TOTAL _ DATABASES and DELTA _ TOTAL _ PARTITIONS to CREATE _ T
updated HiveDatabaseSchema and HiveSchemaFactory to utilize DrillHiveMetaStoreClient and SchemaConfig for improved schema management to enhance
modified the ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` as a parameter and added error handling to
updated the calendar name from " Hijrah - umalqura " to " Islamic Umm al - Qura
added support for firefox in the WebAudioWrapper class to ensure compatibility with non - Firefox browser environments
added a method to append an interceptor in the GrpcServerBuilder class and removed the private constructor in the InterceptorConstants class to enhance server interceptor
added support for the " DEFAULT " keyword in the table creation statements to ensure that the database defaults to " UTF8 " and align with the
removed unnecessary calls to allocateOutgoing ( ) in WriterRecordBatch . java and streamlined return logic in StreamingAggTemplate . java to improve code
[ hotfix ] [ runtime ] fix typo in executiongraph # getallocationtimeout
added a boolean flag ` hasFrom ` and modified related methods in ` Delete ` , ` DeleteDeParser ` , and ` DeleteTest `
refactor method names and improve error handling in SynchronizeFolderOperation . java to enhance code clarity and maintainability by using more descriptive
refactor test applicable tests to use a new utility method ` applicableListTests ` to improve code readability and maintainability by centralizing applicable
loganalyser : add support for ` ` : ' ' a log line separator .
( chore ) camel - test - infra - google - cloud : enable integration test if application credential be not provide
fixed - rsearch . value ( ) method should use ismaxexclusive instead of isminexclusive
updated type declarations and logic for selecting options in CCLicenseStep . java to improve type safety and clarity in the selection process
fix a nullpointerexception in IfcModel . java
updated equality check in OptionalAssert to use comparison strategy to improve clarity and consistency in comparison logic
updated memory management in NoNewLineParagraphCssApplier and ParagraphCssApplier to conditionally store the last margin value based on its presence to
added a new class TestArrayCopyToFromObject with a test method to verify array copy behavior to ensure that ArrayStoreException is correctly handled when copying
updated the insert method calls in BuckPythonProgram . java to include quotes around paths to ensure proper handling of paths with special characters in Python
align state check in AjpAprProtocol and AjpNioProtocol to use ' ! = ' instead of ' = = ' to
fix recipehelper . findfiles ( ) and forgehooks . findfiles ( ) do n ' t visit all file by default . close #
added JUnit @ Ignore annotation to TestLlapSignerImpl . java to mark the test case as unstable to prevent the test from running
[ hotfix ] [ test ] fix flaky testinternalinputbuffer test
move spliclassloader . autoloadcall ( string ) to environment . autoloadcall ( string , string )
updated the server version comparison logic in CustomPlaybackOverlayFragment and modified user preferences retrieval in PlaybackController to ensure compatibility with server versions and enhance
updated KDC and OneKrb5Test classes to use a local variable for hostname and modified principal random key generation to ensure correct hostname resolution
updated Jsr250Voter to return ACCESS _ DENIED or ACCESS _ ABSTAIN based on the presence of a JSR250
updated import statements in MP4Parser . java to include specific classes for better organization and clarity to enhance code readability and maintainability by
added HS2 _ PROXY _ USER constant and modified session parameter handling in ConnectionFactory . java to ensure session parameters include the user ' s
camel - 16400 : camel - hdfs - compression support for snappy , bzip2 and snappy .
added a 1 - second sleep in HttpClientTest . java to allow for better synchronization during test execution
fixed xssfcell . setcellvalue ( string ) and xssfcell . setcelltype ( cell . cell _ type _
modified glyph offset calculations and adjusted buffer appending logic in GlyphLayout . java , and updated text in BitmapFontTest . java to improve text formatting
removed hardcoded path for ISTIO binary and replaced it with a direct reference to Commons . ISTIO _ VERSION to simplify code
replaced calls to ` apiClient . ReportPlaybackStartAsync ` and ` apiClient . ReportPlaybackProgressAsync ` with calls to ` TvApp
make sure to close fileinputstream in simpleauthority . getaccessproperties ( )
do n ' t trigger eviction on maploader hit on initial load
updated the bitwise operation for LENGTH _ BIT and ERROR _ BIT in ResponseFlag . java to ensure correct bit manipulation for error handling
[ ds - 3952 ] fix default policy to work with community .
refactor FontUtilities to use ConcurrentHashMap for storing CompositeFont instances to improve performance and memory efficiency by reusing CompositeFont instances
set prefHeight to 0 and adjust its calculation in Tree . java to ensure consistent height calculation for node elements
[ drools - 6665 ] dmn feel validation for invalid name or reference type ( # 3995 )
removed unused imports and updated generic type usage in multiple Java files to improve code clarity and maintain type safety
changed the access modifier of the ` finishRunningRecentsAnimation ` method from private to public and updated method calls to use MAIN _ EXECUT
added null checks for node ID and edge type in ElementFactoryImpl . java , and improved edge handling in ImportContainerImpl . java to
[ beam - 8470 ] fix npe in FnApiControlClient and BeamFnStateGrpcClientCache when response be null
nifi - 1341 : add test to ensure that flowfiles fit within the bin limit
[ fix ] team . getclosest ( x , y ) now return all core , not just the first one .
added a check to skip copying the content - length header in the RestTemplateCopyHeaderFilter to improve request handling by avoiding unnecessary content -
updated Java2TypeScriptTranslator to handle class and character literals and modified SyntaxTests to assert expected values to improve code clarity and ensure correct
updated filter parameters and sample sizes across multiple classes for consistency and improved visual appearance to enhance user interface responsiveness and visual clarity
hbase - 25836 canary should be able to run all region on a regionserver .
[ hotfix ] [ cassandra ] remove node module from cassandra - connector - test
reset the cursor position of the order index in KahaDBStore . java to ensure the cursor position is reset before further operations
added minimum size constraints and adjusted frame dimensions in CallDialog and OneToOneCallPanel to ensure proper resizing of the call dialog by adjusting
fixed blockfalling . onblockdestroyed not lose state information during world gen . close # 3748
simonstewart : make the test suite static and remove the setup method .
added dependency injection for KerberosPrincipalHostDAO and modified entity removal logic to ensure proper cleanup of entities based on their principal name
removed the boolean parameter from the getTableSnapshot method call to simplify the method call by eliminating unnecessary parameters
improve handling of timeout error in the apr connector so that the poller do n ' t wait forever .
update error message in AndroidGradleBuilder . java to specify the key used in the Monetization setup section to provide clearer guidance
updated file name retrieval from ` getName ( ) ` to ` getDisplayName ( ) ` in ` DLNAResource . java ` and removed the
[ drools - 6682 ] fix kie - maven - plugin to work with drools - 5.0 . 2 ( #
added an assumption to skip tests on devices running Java 19 or higher to ensure compatibility and prevent test failures on unsupported features
removed the context parameter from the assignTargetsForSplitScreen method and adjusted related logic to simplify target assignment process by eliminating unnecessary parameters
refactor LeaderLatch class for improved clarity to enhance maintainability and readability of the code
added methods to initialize zk - SNARK parameters for Sapling to enable dynamic configuration of zk parameters for the Sapling
refactor transaction confidence handling to utilize SettableFuture for depth tracking to improve thread safety and efficiency in depth management
added a method to create a media recorder in CodenameOneImplementation and renamed longtitude to longitude in Location and MapComponent classes to
set default value of platformName to " ios " to ensure platformName has a valid value for consistency
refactor PageEditClient class to improve code readability to enhance maintainability and facilitate future feature additions
added curly braces to conditional statements in Graphics2D . java to improve code readability and maintainability
rename CreateVisibleSignature class to improve clarity to enhance code readability and maintainability
added error handling around the ` outgoingFrame ` method in ` AbstractExtension . java ` to ensure callbacks are executed on exceptions to improve robustness
refactor caller class retrieval to use AccessController for privileged actions to enhance security by ensuring proper access control when obtaining the class loader
added logic to update child categories ' parent ' to null in CategoryREST . java to ensure that all child categories are removed from their respective parent
update contrib manager dialog title to be more descriptive
added a new BigDecimal field ' vwap ' to the Ticker class and updated its constructor accordingly to enhance the Ticker class with additional
added support for a no - widgets text view in the SearchAndRecommendationsScrollController and WidgetsFullSheet classes to enhance user experience
add rendergraph api to make it easy to add a single render graph node .
added a method to set the primary color in NCFirebaseMessagingService to ensure the application uses the correct primary color for messaging
rename ShadowUsbManagerTest . java file to improve clarity and consistency in naming conventions
updated references from trainingPercentage to evaluationPercentage and added logging for user ID in multiple evaluator classes to improve clarity and traceability of user evaluation
added a call to ` this . selectedConfiguration . update ( ) ` in the ` Rocket . java ` file to update the selected configuration
updated width and height calculations in AndroidGraphics to ensure they are at least 1 pixel to avoid potential errors with invalid dimensions
replaced all instances of ` HashMap ` with ` LinkedHashMap ` in multiple Java files to maintain the order of key order for the ` options `
replaced nativeClosureManager with closurePool in NativeClosureFactory . java to utilize a more efficient closure management mechanism
( chore ) camel - spring - boot : migrate to junit5 in camel - core
added two new files , WebsocketIngressIntegratedBootstrap . java and WebsocketPluginTest . java , for integration testing of WebSocket connections to
( chore ) camel - dspace - services : remove unused test case
refactor authentication equality check by introducing a new method ` areAuthenticationsEssentiallyEqual ` to improve code readability and maintainability
added a check for the " jnr . ffi . compile . x86asm " system property in X86MethodGenerator . java to ensure
refactor code to use a local variable ` callNodeType ` instead of repeatedly calling ` callNode . getType ( ) ` to improve code read
added a new annotation ` @ Insecure ` and modified the ` MessageBuffer ` constructor to utilize this annotation to enhance security by restricting access
added multiple configuration variables to HiveConf . java to enhance configuration options for Hive operations
initialize scopes and policies as new HashSet instances in ResourceSet . java and add a null check for policies in DefaultResourceSetService . java to
modified the MultiReader constructor to accept a collection of listeners and changed the visibility of ` decrefOnClose ` to final to enhance immut
updated SecureDirectoryStream , UnixAsynchronousSocketChannelImpl , WindowsAsynchronousSocketChannelImpl , TestFrameSize , and Test3 classes to
simonstewart : refactoring test to use setvalue ( ) instead of clear ( )
refactor ` getFirstTypeArgument ` method to use a final class declaration for ` EntrySet ` , ` KeySet ` , and ` ParameterizedType
changed return types of keySet ( ) and values ( ) methods in Int2IntHashMap from Set and Collection < Integer > to KeySet and
added a duration property and modified related methods in FlipTransition . java to allow dynamic adjustment of transition duration based on user - defined duration
removed trace logging for subsAreValidForStreaming in DLNAResource . java to simplify the condition for better readability and maintainability
bump major and minor version to 9 for 1.11 . 0 release .
replaced ` System . err . println ` warnings with ` LowLevelLogUtil . log ` for logging warnings based on Java version to enhance
add java16 to the list of supported language in the parser
updated padding logic for the background view in ExpansionViewHelper . java to improve layout consistency by adjusting padding based on the number of replies
[ hotfix ] [ cluster ] do not invoke partitionbackupreplicaregionoperation if versionmap be empty
added metadata handling functionality to SeedUrl and SeedResource classes to facilitate the retrieval and storage of additional metadata from the seed URL
fix npe in patternbuilder when declaration be null
[ hotfix ] [ test ] fix checkstyle violation in testcoprocessorwhitelistmasterobserver
ww - 4352 add package name to action name in annotationactionvalidatormanager .
updated assertions in IterableTest to explicitly cast null arrays to Object to ensure type safety and prevent potential ClassCastException
added stream and parallelStream methods to MapIterable and PrimitiveObjectMap classes , along with corresponding test cases in MapIterableTestCase to enhance performance
clone the notifInfo object instead of returning it directly to ensure that the original notifInfo is not modified during return
make sure we iterate through all command key , not just the first
refactor AEADBlockCipher class for improved readability to enhance maintainability and facilitate future updates
added methods to check if a variable is local in ILocalVariableAwareVariablesMap , VariablesMap , and WebVariablesMap classes , and updated
added a null check and inverse of resource names in PackageResourceTable . java and updated the default resources mode in RobolectricTestRunner
added checks for ` ulSize ` and ` ulPos ` before retrieving head and post tables in ` TrueTypeFont . java ` to ensure
refactor SignPlugin constructor to accept a list of HttpMessageReaders instead of a static list to improve flexibility in handling multiple message readers for
refactor Int2ObjectCache . java for improved performance to enhance efficiency of object caching operations
added validation check for MavenDeployer in StandardMavenAuthenticationProvider . java to ensure that the remote repository is a valid Maven instance before proceed
refactor AudioNode class to improve code readability to enhance maintainability and facilitate future updates
added SSL context initialization and error handling in LinkyHandlerFactory . java and modified cookie store usage in EnedisHttpApi . java to improve
updated HiveFunctionRegistry to use streams and ImmutableMap for function replacement to improve code readability and maintainability by utilizing modern Java features
resolve http : / / issues . apache . org / activemq / browse / amq - 2690 - fix mbean name for
updated the method signature of getBuildTargetForAlias to include a possiblyFlavoredAlias and adjusted the return statement accordingly to improve clarity and
camel - 13077 : fix poll return for empty odata odatafeeds ( # 2719 )
added support for equivalent Hive versions in MetaStoreSchemaInfo to ensure compatibility with the latest Hive versions
server : fix expunge vm in case of vm expunge failure .
added multiple @ Deprecated annotations to AbstractDateAssert . java to indicate that certain methods are outdated and should no longer be used
refactor title handling in ONDashClockExtension and AlarmReceiver to use a new method for retrieving the alternative title to improve code cl
changed the test class name from ` GoogleAuthUserConfigTable ` to ` GoogleAuthUserConfigTableTest ` and updated column types to improve
replaced ` commit ( ) ` method with ` apply ( ) ` method for SharedPreferences operations across multiple classes to improve performance by avoiding
added an ` TestIdleListener ` to the ` StandardSession ` instantiation in ` AsyncTimeoutTest . java ` to enhance session management by allowing
update testBigQueryTable assignment to include TEST _ ID to improve clarity of test ID for better debugging
added background resource and reset functionality for icons in HotseatPredictionController and set background to null in BubbleTextView to enhance visual
mondrian : rename getflushafterquery to flushafter to be consistent with other property .
[ native ] add unit test for native query runner
[ te ] fix npe in lIMEexplanation when there be no active feature
added support for command - line arguments in the AppleSimulatorController and InstallCommand classes to enhance functionality by allowing users to pass specific arguments
make sure we do n ' t try to get the absolute position of the line in the parargraph
added a check for the availability of the pipeline state in both ContainerBase . java and StandardContext . java to ensure that only valid Lifecycle instances
added ` setClipToOutline ( true ) ` to the background view in ` QsbWidgetHostView . java ` to ensure the background
added time tracking for flag processing in SQLManager and improved flag processing logic in BlockTypeListFlag to enhance performance monitoring and ensure flag processing
updated import statements in FloatingTextRenderer . java to use a wildcard import and modified depth handling based on the floating text ' s occlusion
sulong : rename linux context to posix context to avoid clash with other platform .
refactor propagation behavior handling in JdbcAggregationRepository to use a variable instead of a hardcoded value to improve flexibility by allowing different propagation behaviors
refactor configureBaseLayer method to handle L1Regularization and L2Regularization cases to improve validation logic for L1 and L2
refactor readWrite method to handle exceptions and improve error logging to enhance robustness and provide clearer error reporting for read / write failures
changed the visibility of the colorStack variable from static to instance variable to allow multiple instances of GlyphLayout to access the colorStack variable directly
updated method calls from ` getMappedStatement ( id , false ) ` and ` hasStatement ( id , true ) ` to ` getMapped
convert tradableIdentifier and currency to lowercase in BTCEDepth retrieval to ensure consistency in depth retrieval by converting them to lowercase
updated assertions in ChannelStateTests to reflect correct expected values for channel states to ensure accurate representation of command states in tests
remove empty versionedhashes field from eip6110 payload ( # 5957 )
clear trigger price when create a new offer
modify the logic of studentfeedbacksubmissioneditsaveaction to handle the case when there be an error
removed debug print statements from I18NPageController . java to clean up the code and improve readability
hbase - 2649 addendum fix checkstyle issue in hstore / hstore . java
fix for # 269 - beanstate . getchangedprops ( ) be call twice on setmanyproperty ( ) .
added a boolean flag ` _ alwaysSaveUri ` and its getter / setter methods in ` FormAuthenticator . java ` , and modified the session
added two protected static methods ` nSetLayerType ` and ` nSetLayerPaint ` to the ` ShadowRenderNode ` class to provide
replaced specific imports with wildcard imports for java . awt and javax . swing , and added firePopupMenuWillBecomeVisible and getP
[ java ] make stressprofile case insensitive to avoid npe .
replaced direct calls to ` scala . collection . JavaConversions . asScalaIterable ` with a static import of ` collectionAs
fix npe in mockservereventlog when no request be find
[ hotfix ] [ runtime ] log warn if property file can not be load
refactor session dataset handling to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added a condition to check if the NIC is supported multicast and the NIC is up before proceeding to ensure that outgoing connections are only
modified the instantiation of ` sqlCommand ` to include a specified length to ensure that the command is properly formatted with the specified length
updated methods in UnDelegateResourceActuator , BandwidthProcessor , and EnergyProcessor to use latestConsumeTime and latestConsumeTimeFor
added a method to set the ` invalidSessionStrategy ` in ` SessionManagementConfigurer ` to ensure that a non - null ` invalidSession
improve error message when protobuf index can not be find
add a new test class ` MapAssert _ containsKeys _ Test ` for verifying keys in map assertions to ensure that the ` containsKeys
updated JdbcProxyGenerator to use a DelegatorGenerator for NewProxyAnyStatementGenerator and added JDBC4TemporaryPreparedStatementMethods interface to enhance flexibility
added a static method ` ensure ` to ` ServerWebSocketContainer ` and updated test methods to use ` Handler ` instead of ` ContextHandler `
changed the return type of ` ImmutableMultimap ` to ` ImmutableListMultimap ` in ` CxxFlags . java ` to enhance immutability and
pdfbox - 4892 : avoid npe , a suggest by valerybokov ; use point2d instead of point2
make method . hook . empty a static final field to avoid creation of empty array .
added a boolean parameter ` grantAccess ` to the ` MockAuthenticationManager ` constructor and modified the authentication retrieval logic to allow access control based on
updated the ` afterJob ` method signatures to accept ` JobExecution ` as a parameter across multiple classes to enhance job listener functionality by allowing execution context
added a check for file execution permissions in SharedLibraryLoader . java to ensure that only writable files are processed
doc ( regen ) : update protoc to v3.15 . 3 ( # 3 )
change parameter name to be consistent with other method in samplers
added new constants for bundle properties in BundleConstants . java and updated CustomUrlManager . java to utilize these constants to enhance code readability
make searchexpression . applyrule accept map instead of hashtable
g3d - 335 : move object relative to screen instead of widget
updated JoglGraphics and ProjectiveTextureTest classes to modify texture and UI parameters and filter settings to enhance texture rendering capabilities and ensure proper
modified the ` setResourceToDelegate ` method to return a ` File ` object instead of void to allow the method to return a ` File `
camel - 16400 : fixed the issue that property component can not be intercept from uri . thanks to benjamin for
updated the condition from " if ( currentTime > = stage . getLastAttemptTime ( hostName , role ) ) " to " if ( currentTime >
updated debug zip path to use a default location and added null check for debug _ log to ensure debug zip is only used if debug log is
update render overlay to show the hud only when it ' s visible
move pipe . resetgate ( ) to pipe . resetgate ( ) so it can be reuse by pipe . resetgate ( )
updated the TestSupplementary class to restore the default locale before running tests to ensure tests are executed in a consistent locale after execution
updated team color range from 0.8 to 0.4 in the Team constructor to improve visual clarity and consistency in team representation
replaced HashSet with ArrayList for activeMatchedStates and added checks for logging level before logging statements to improve performance and ensure logging is checked before logging
updated the condition to check for null annotations in SoftAsserts . java to ensure that the method correctly handles cases where the annotation is null
updated error message to include the exception message and added logging for plugin saving errors to improve error reporting and provide clearer context for exceptions during plugin
refactor call tree csv printing to use ` tocsvfile ` method
added null checks for notes and modified view access methods in DetailFragment . java to ensure robustness by preventing potential NullPointerExceptions
added logic to track and calculate the fractional loaded percentage based on the number of tasks to improve accuracy of asset loading by incorporating the
danielwagnerhall : enable native event by default on window
added metadata handling for Nutch score and fetch interval in Injector . java and updated CrawlDatum initialization to support custom score and fetch interval
updated import statements to use ` org . apache . commons . collections4 ` instead of ` org . apache . commons . collections ` to ensure
modified the condition in CoreContainer and added a new method isShareSchema in TestCoreContainer to enhance schema sharing functionality and provide a test for
updated size calculations to include a boolean parameter in multiple classes to ensure accurate representation of memory usage in the output
replaced assertions for version1 _ 2 in VersioningTest . java to check for null values to ensure that the Version1 _ 2 object
updated SQL queries to ensure domain columns are not null when their type is ' d ' to ensure proper handling of non - null domain types in
[ java ] move appendnewleadershiptermevent out of appendnewleadershiptermevent .
removed unused import of MediaType and modified buildMediaType method to streamline media type handling to improve code clarity and maintainability by eliminating
replaced method names ` fillUsingLengthPrefix ` and ` fillUsingLengthPrefix2 ` with ` fill ` and ` fillAndGetIndex `
refactor AcidUtils to improve the handling of compacted base checks and add a new test for major table compaction in TestCleaner to
updated storageScheme and qualifierEncodingScheme initialization logic to handle null values and ensure default values are set to NON _ ENCODED _ QUAL
added two new files , PojoProducersCustomized . java and RestProducersCutomized . java , to provide customizable and
updated the retrieval of TLS certificate and TLS key from " cache " to CACHE _ SECTION _ NAME in ArtifactCacheBuckConfig . java to
removed duplicate registration of AesGcmProtoSerialization in AesGcmSivKeyManager . java to streamline the registration process for
add miss wooden slab recipe to oredictionary ( fixes # 374 )
refactor multiple session - related classes to improve code organization to enhance maintainability and readability of session management components
replaced ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` parameter in ` UndefinedSymbolsLink
prepare next release 3.2 : update doc tree and overview ( rc1 )
hhh - 14836 - fix test failure on oracle and mariadb
corrected the position calculation for the sprite batch drawing in HelloWorld . java to correct the positioning of the sprite batch to ensure the correct
refactor permission check and return values in PlayerFunctions . java and enhance the toString method in PlotId . java to improve code clarity and
added a deprecated static final Version constant for Lucene 8.5 . 0 to signal that the version is outdated and should not be used
updated print statement to include the thread name in the closeSocket method to improve logging clarity by providing more context about the socket being closed
added a new test method ` testCastToSignedInteger ` to ` SelectTest . java ` to ensure SQL can be parsed and deparsed
[ llap ] make dependenciestype a enum to make it easy to understand
refactor ` createForMissingDirectory ` and ` createForMissingBuildFile ` methods to use ` parseContext . makeTargetDescription ` to
updated the initialization method from ` testFromMain ( ) ` to ` test ( ) ` in the ` MyChild ` class to simplify the
replaced the size of the ` configBlocks ` array from a fixed - size array to a fixed - size array to optimize memory usage and
updated print statements in BukkitMain . java for clarity and added version checks for Spigot and CraftBukkit to improve
updated SQL statement escaping logic for PostgreSQL in AbstractSQLChange . java and its corresponding test in AbstractSQLChangeTest . java to ensure proper handling
added overloaded methods ` ofAll ` and ` withAll ` to ` MutableBagFactory ` and its implementation in ` MutableBagFactoryImpl
pdfbox - 4892 : allow . adoc and . html extension to be use , a suggest by valerybokov
updated MqttBrokerConnection instantiation to set the ' true ' parameter to false to ensure that the MqttBrokerConnection is created with
updated the way the ChangeSet is retrieved by using a default root change log if none is provided to improve robustness by ensuring the changeLog
refactor method calls in StaticMethodInterceptor , RocketMQGlobalPluginHandler , and PrometheusPluginBootService to use methodResult directly to
added HiveMetaStoreClient and logging statements to TestHiveMetaStorePartitionSpecs and TestObjectStore classes to enhance database management and improve debugging
added a new parameter ` order _ currency ` to the method signatures in ` BithumbAuthenticated ` and ` BithumbAccountServiceRaw
remove ssefluxwebconfig ( thymeleafwebconfig be not use anymore )
updated method return type checks from " void " to " void " in JsonBuildHelper , IDocBuildTemplate , SpringBootDocBuildTemplate
[ te ] detection - yaml : add endpoint to list yamls
removed the ` public ` access modifier from the ` equals ` and ` hashCode ` methods in the ` Marker ` class to restrict access to the
refactor thread factory implementation to use lambda expressions and extract awaitTermination logic into a separate method to improve code readability and maintainability by redu
added unit tests for MongoTemplate and created a new PersonWithAList class to enhance testing capabilities for MongoDB operations with lists
ggb - 1353 syncappletsize ( width , height , evno ) do n ' t change the size of the applet
replaced direct toolbar visibility setting with a delayed execution using a Handler to improve responsiveness by ensuring toolbar visibility is set to VISIBLE after a
[ iotdb - 4892 ] fix overlap data may not be read ( # 7690 )
server : do n ' t update vm password if vm be n ' t run
added two boolean flags , usingOutputStream , usingWriter , and isCharacterEncodingSet , to control output stream and writer behavior in the Response class
added a warning check for assignment side effects in GroupDialog to enhance user experience by preventing unintended assignments
refactor JSON and JSONObjectConvertor classes to improve code readability and maintainability
updated the condition in FileUploadApiController to use maxWidthWithMargin instead of maxHeightWithMargin to ensure the icon size does not exceed the maximum
refactor methods in ` RegisteredServiceProperty ` and ` JwtTokenCipherSigningPublicKeyEndpoint ` to use ` JcaPEMWriter ` and improve
added content type checks and modified import statements in Basic . java to ensure proper handling of file content types on Windows and improve code clarity
add jzlib support to the nettyconnection , and remove the comment
added a method ` doesClassLoaderDescendFrom ` to the ` Util ` class and removed its logic from ` Class ` and ` MethodHandles `
renamed the ` doConnect ` method to ` connect ` in both ` ChannelProvider . java ` and ` ProxyChannelProvider . java `
added functionality to handle empty final columns in CSV processing to ensure proper handling of empty final columns in CSV output
added component gravity settings and margins to NearbyMapFragment to enhance the visual appearance of the NearbyMapFragment
added a test method ` testInterpolation ` to ` GeoPathTest ` for distance calculations to ensure that distance calculations are correctly applied to various Geo
added exception handling to methods in LeafFilterFactory , ParquetFilterPredicateConverter , and TestParquetRecordReaderWrapper to improve error handling and
added language setting logic for video streams in LibMediaInfoParser . java to ensure the correct language is set when the audio track language is blank
add warn log for compatibility issue
replaced ` System . arraycopy ` calls with ` addAll ` and ` addAll ` methods across multiple array - related classes to streamline code and
reformatted code for better readability by adding braces to the try - catch block to improve code clarity and maintainability
added constructors to InMemoryClientRegistrationRepository and InMemoryReactiveClientRegistrationRepository to accept a map of ClientRegistration to enhance flexibility and
added a method to reset the UI state in SchemaUpgradeHelper to ensure that the UI state is reset correctly during schema upgrades
added a failedStep flag and modified conditional logic in JUnitReporter to handle pending exceptions to improve reporting accuracy by distinguishing between strict and pending
fix : allow . in entity name in playerselector ( # 8237 )
added the Closeable interface to the Selector class to enable the Selector class to implement the Closeable interface for better resource management
added MultiplexConnectionPool to the client configuration in MaxConcurrentStreamsTest . java to improve connection management for concurrent streams in the Jetty client
added multiple stringType ( ) method calls to CoreOptions . java to enhance configuration flexibility for string type handling
updated HqlQueryRenderer to handle character and parameter types more effectively and modified context paths in tests to ensure compatibility with EclipseLink and improve
updated HTTP status checks and method names to improve clarity and consistency to enhance code readability and maintainability by using descriptive status constants
pdfbox - 4892 : avoid npe , a suggest by valerybokov
use stubconnection . slowcreate = false to speed up the test
updated ParquetFormatPlugin and ParquetGroupScan to improve metadata file handling and selection logic to enhance performance and maintainability by utilizing metadata
updated the success flag to true and modified the javac task execution logic in Jsr199Javac . java to enhance error handling and
added a new BaseTableModelListener class and integrated it into the DefaultSortedTableModel to enable tracking of table changes and facilitate
updated the validation condition for server numbers from 49152 to 65535 to ensure that the number does not exceed the maximum allowed limits
added DocumentsContract imports and updated AuthenticatorActivity and AccountRemovalJob to notify changes for document provider authority on devices running KitKat and
removed the call to startLogging in MainApp . java to streamline logging setup for better performance
modified exception handling in FilterChainProxy to utilize ThrowableAnalyzer for better error handling to ensure that wrapped RequestRejectedExceptions are properly handled and handled
updated StringBuilder class to use ' this . length ' instead of ' length + length ' and modified arraycopy logic to improve clarity and maintain consistency
added validation to check if the filter list is empty in the Filter class to ensure that an IllegalArgumentException is thrown when an empty filter list is provided
add stopwatch utility class to make it easy to use
initialized the PListStore instance variable to ensure proper initialization of the PListStore instance
added @ Deprecated annotation to multiple Continuation classes and logged a warning to encourage the use of Servlet 3.0 AsyncContext instead
[ zeppelin - 4352 ] fix classloading issue in remoteinterpreterserver
fix checkstyle issue in generator / commandsourcestack / forgehooks . java ( # 8769 )
update minSdk version from P to O _ MR1 in ShadowRttCallTest and ShadowCall classes to ensure compatibility with the latest
corrected variable name from ` indexInTickArray ` to ` tickArrayIndex ` in ` DeadlineTimerWheel . java ` to
# 1394 - enh : add getsimplename ( ) method to beandescriptor and use it in cqueryplan
updated JavaScript and CSS headers from " wro / all . js " and " wro / all . css " to " static / all
added a new test method ` showLatestTimeseriesTest ` to validate the behavior of the ` showLatestTimeseries ` SQL command to ensure
updated parameter name from " appContextLocation " to " contextConfigLocation " across multiple files to improve clarity and consistency in configuration parameter naming
modified exception handling in OCSPChecker to differentiate between CertPathValidatorException and other exceptions to improve clarity and specificity of exception handling
benchmarker : add option to disable write output solution
bulk client regen : set default maxinboundmessagesize to max int ( # 6022 )
added a new test class ` Issue _ 815 ` to verify the functionality of slicing size in a map volume to ensure that slicing
added shapereless recipe for waterproof and slime burger . close # 1188
fix arrayindexoutofboundsexception in sequentialaccesssparc vector ; add test
added metadata handling for Shulkers in BukkitMain . java and implemented entity management in EntitySpawnListener . java to enhance entity
added a method ` getDebugLogger ( ) ` to ` DIHWriter ` and overridden it in ` SolrWriter ` to provide access to the
added imports for ` File ` , ` InputStream ` , and ` FileFilter ` , and introduced methods to retrieve maximum directory and file name lengths
added a check for the presence of a specific tag in the UpToTagChangeSetFilter to ensure that only matching tags are processed , improving
[ beam - 8470 ] use arraylist instead of linkedlist in beam runner
refactor the BrokerRoutingManager class for improved clarity to enhance maintainability and readability of the routing logic
changed volume and up color constants from gray and green to GRAY and GREEN in CandlestickRenderer . java to improve visual
updated layout parameter handling and introduced a new InsettableFrameLayout class to improve layout parameter management and ensure correct margin calculations for Insettable
added a new method ` duration ( ) ` to the ` BuildTargetDurationListener ` and updated associated tests to support a new duration parameter in
replaced the use of the ` @ Profile ` annotation with ` assumeTrue ` in multiple migration integration test classes to ensure tests are only executed
added a null check for the user object before processing claims to avoid potential NullPointerExceptions when the user is null
added advicewithroutebuilder to make it easy to replace a route from another endpoint .
use nonblockinghashset instead of concurrentskiplistset in cassandraconnection to avoid deadlock
api : add networkid parameter to listpublicipaddresses command , to be able to list all public ip address by source network id
added functionality to ignore battery optimizations in ShadowPowerManager and corresponding tests in ShadowPowerManagerTest to enable testing of battery optimization behavior
updated the method to retrieve the Jetty version from the build properties to ensure the version is dynamically fetched from the build properties
added unit tests for verification behavior in NumberOfInvocationsInOrderVerifierTest and VerifcationModeBuilder to ensure correct behavior of verification
improve performance of tregexexecnode . match ( )
added " - foreground " parameter to the startProfile method call in NewProfileExtensionConnection . java to enable the process to start with the foreground
updated variable names and improved resource management in MiniSolrCloudCluster . java to enhance code clarity and ensure proper closure of resources
changed the type of ` parseFieldnames ` from ` Map < String , String > ` to ` String [ ] ` and simplified its initialization
updated file name retrieval in CodeEditorView and added null checks in EditorTextActionWindow to improve logging clarity and ensure proper cleanup of action
improved the message format for skipped entries in ClassFileReader and updated the warning message in JdepsTask to enhance clarity of skipped entries
added link storage functionality to the Fetcher and related classes to enhance document storage capabilities for better tracking and analysis of links
updated the ` populateBubble ` method to include an ` existingBubble ` parameter and modified its usage in ` BubbleBarController .
[ hotfix ] [ runtime ] remove redundant warn log in schedule job
updated method signatures and logic in MotanServiceBeanPostProcessor , MotanRpcExt , and TarsServiceBeanPostProcessor to
[ java ] use configurable delay generator for multicast conductor .
updated Gson initialization and added additional properties to the ClientInformationResponseView class to enhance JSON serialization capabilities for client information responses
added a conditional check for ` openOrder ` before setting the average price in ` HuobiAdapters . java ` to ensure that the average
removed the ` rawExecutionReports ` method and simplified the subscription process in ` BinanceStreamingMarketDataService . java ` to improve code
added an ` fail ` method to handle exceptions and modified the failure logic in ` LdapTimeoutTest . java ` to improve error handling by providing
fix for ticket : 271 -- check for file existence before attempt to load the user dictionary .
added a check for the presence of a password file or credential store alias before updating the password in AmbariServerConfigurationHandler . java to
added a check to skip parsing a segment if it already exists in ParseSegment . java and implemented the isParsed method in SegmentChecker . java
[ hotfix ] [ yarn ] make application _ attempt _ failure _ validity _ interval configurable in yarnconfigoptions
added error handling for ClassNotFoundException in GeoserverInitStartupListener to improve robustness by skipping unloading the H2 driver if it is not
hbase - 25811 make scan . readtype configurable for snapshot - based inputformat ( # 2588 )
added ` fixedHeight ` and ` fixedWidth ` properties with their respective getters and setters in ` LoginInstanceRequest ` to enable dynamic adjustment of instance
added cornerRadius parameter to update methods in multiple classes to allow for customizable corner radius during animation updates
updated the COMMANDS _ TO _ REMOVE array to include additional SQL commands and added filtering filters for cross product queries to enhance functionality by allowing
added a retry mechanism for establishing a connection pool in TxnHandler . java to improve reliability by allowing retries on BONECP bugs
do n ' t create backup backup operation if they do n ' t exist
added a private final char [ ] [ ] strings field to the FirstOfStringsMatcher class to facilitate the storage and management of
updated DELETE statements to include " DELETE ROWS CLIENT SELECT " and modified the planSteps to include " DELETE ROWS SERVER SELECT " to enhance
added handling for ` SocketException ` in ` BaseServiceException ` to improve error management by distinguishing between ` SocketTimeoutException ` and ` insufficient
added a new parameter ` rapidInstallTypes ` to multiple constructors in ` AdbHelper ` , ` RealAndroidDevice ` , ` B
updated the regex pattern in SortTest . java to allow negative seed values to improve flexibility in matching random number generation
refactor ` MultimapSubject ` to use a factory for creating ` IterableValuesForKey ` and ` iterableEntries ` to improve code clarity
simplified the return statement by removing conditional logic to improve code readability and maintainability
added a ` transmux ` boolean parameter and updated related methods in ` Transformer ` , ` TransformerInternal ` , and ` TransformerEndTo
added localization handling for string values in Picker . java to improve user experience by ensuring localized strings are displayed
camel - 14850 : camel - cxfrs - do n ' t fail the exchange if the exception be null .
added Hibernate exception handling for LockAcquisitionException and PessimisticLockException in PostgreSQL81Dialect . java to improve error handling for
added null check for queryId and modified visibility annotations in HiveStatement . java to enhance robustness and clarity in database query handling
[ beam - 8470 ] add usesunboundedpcollections category to pardo test
updated the text formatting in GpsSimpleViewFragment to remove the dependency on the GPS logger folder to simplify the display by directly using the formatted
[ java ] remove unnecessary leadershiptermid from log replay . joinlogasfollower .
refactor HttpSender to store the HttpExchange instance in a class variable to improve code readability and maintainability by reducing method calls
[ hotfix ] migrate failoverstrategycheckpointcoordinatortest to junit5
changed the method name from ` token ( ) ` to ` apiToken ( ) ` in ` AppOpticsPropertiesConfigAdapter ` to align
added null checks and Lombok ' s EqualsAndHashCode annotations in Recipe , Markers , and SearchResult classes to enhance code robustness
pdfbox - 4892 : use double instead of float for font size , a suggest by valerybokov
addressbookdocomoresultparser now use matchdocomoprefixedfield ( ) instead of matchsingledocomoprefixedfield
added handling for exclusions in RawMavenResolver to ensure correct grouping of dependencies based on their exclusions
added error handling and currency pair validation in DSXAdapters . java and introduced baseCurrency and quotedCurrency in DSXPairInfo . java to
[ hotfix ] [ table - common ] fix checkstyle violation in io test
[ drools - 90 ] fix kiemoduleincrementalcompilationtest when kiemodule pom be invalid
updated the initialization of ` copy ` and added a check for ` sobj . has ( k ) ` before defining properties in ` NativeArray
refactor JacksonDataFormat and JacksonXMLDataFormat classes to improve code organization and maintainability
[ gr - 21782 ] unreflect getter and setter in hostfielddesc instead of throw unknownidentifierexception .
added a method parameter annotation for CompletableFuture in DefaultNullnessAnnotations . java to ensure proper handling of completion stages in the database
updated the calculation of mFreezeCheckPoint in PlaybackController . java to correct the calculation for mFreezeCheckPoint based on the
added Whitebox and Annotation imports in AbstractCommonPowerMockRunner and removed them from PowerMockRunner to streamline internal state management and improve code
updated the method call from ` typeCode ` to ` realType ( ) ` in ` TCUtility . unmarshalIn ` to ensure correct type
updated indentation handling for method invocations and select expressions in TabsAndIndentsVisitor . java to improve readability and maintainability of the code
updated the TestSingleTokenTokenFilter class to extend JUnit ' s TestCase instead of Lucene ' s LuceneTestCase to simplify
modify the column writing logic in HtmlProcessInformationsReport . java to enhance the readability of the output by properly wrapping the column
added ExecutionContext management to JdbcStepExecutionDao and MapStepExecutionDao , and updated SimpleJobRepository to use it to improve execution context management
added a condition to check if a new media folder should be shown before adding it to the root folder to ensure that new media folders are only
added null checks for actor and updated widget removal logic in SplitPane . java to improve robustness by preventing null pointer exceptions and ensuring proper
added handling for ` JavaType . Parameterized ` in ` RemoveUnusedImports . java ` to improve type management for parameterized Java types
updated debug logging to use the current instance and added null and empty checks for modInfos to improve logging clarity and ensure proper handling of null
changed the logger variable from ` private final ` to ` private static final ` in ` TicketGrantingTicketImpl . java ` to allow for
update the SQL string for creating a timeseries with a specific datatype and compression to ensure compatibility with the new timeseries format
added a method ` isValue ( String value ) ` to ` AttrData ` and modified ` Converter ` to check for enum values to enhance value
added support for character modifiers and locale checks in CPlatformResponder . java and introduced utility methods in LWCToolkit . java to enhance
[ java ] set aeron _ publication _ connection _ timeout environment variable for c medium driver test .
added a check to return false for specific request URIs in GTVGFilter . java to prevent processing of specific CSS , images , and favicons
added an assertion to verify the installation of a wellbeing test APK to ensure that the device is rooted when the installation fails
add @ ignoreplatform ( oracle ) to testqueryforupdate ( ) and testqueryfindpagedata ( )
added MultiMap mock to TestSimpleBodyHandler and updated the expected number of secure transport protocols from 1 to 3 in TestVertxTLSBuilder to
replaced references to ` e3506ff7c11f638dc79ddada ` with ` fc76b6367
added a new boolean variable ` mIsDismissHapticRunning ` and modified the conditional check in ` TaskViewTouchController . java
update spongecommon for explosion cause change
added ` setHasStableIds ( true ) ` and overridden ` getItemId ( int position ) ` method in ` SymbolInputAdapter ` to
replaced ` @ PathParam ` with ` @ QueryParam ` for limit _ bids and limit _ asks in the ` getBook ` method to
camel - 10650 : camel - spring - xml - spring - xml - validator - spring - xml - validator - spring - xml -
[ hotfix ] [ runtime ] make zookeeperleaderelectiondriver . tostring ( ) print configmap and leader latch path
refactor SqlSessionFactoryBean to improve code structure to enhance maintainability and readability of the codebase
[ 3.0 ] fix nullpointerexception when triple invoke with generic method ( # 9343 )
replaced Gdx . app . error with GdxRuntimeException in PolygonRegionLoader . java to improve error handling by throwing a GdxRuntimeException
added a method ` isStarted ( ) ` to check if the current deadline is started and integrated it into the ` RawStoreProxy ` class to
improve error message when the channel be close
modified the way genres is set in ItemListActivity to handle null values to improve robustness by preventing potential NullPointerExceptions when genres
[ flink - 20660 ] [ checkpoint ] reset the master hook before restore checkpoint data
add support for a collection of mapped container in the prefab
[ hotfix ] [ runtime ] fix npe in walnode when there be no unpinned memtable info
added a new test method ` testRetrySameHostOnCallbackFailure ` to ` HttpTest . java ` to ensure proper handling of callback failures
truffle : fix typo in package - info . java .
added a new test class SQLServerEscapeQuestionCharacterTest for testing SQL Server escape functionality to ensure correct handling of special characters in SQL Server queries
added @ NonNull annotations to constructors in CamelModule for better null safety to enhance code safety by preventing potential NullPointerExceptions
replaced synchronized block with a while loop and simplified the wait method in JavaFXSEPort . java to improve thread safety and simplify the code
changed the package of ParameterFlags from com . kenai . jaffl to com . kenai . jaffl . provider
refactor cropBehaviour creation and handling for different image object types in CropperUtils . java to improve code clarity and ensure proper
removed the ` appName ` parameter from several ` configure ` methods in ` InputRC ` and ` LineReader ` classes to simplify method signatures and
[ gr - 33599 ] add test for ignore deps in catalog / uninstall command .
danielwagnerhall : use ` ` -- headless = chrome ' ' instead of ` ` -- headless = chrome
updated value assignment to use intern ( ) method to improve memory efficiency by reusing cached values
added " MOVE " status check to the connection status validation to support the additional status " MOVE " in the connection handling logic
updated formatting for various date time formats in FixedDateFormat . java to improve consistency and readability of date formatting
replaced org . apache . curator . shaded . com . google . common . collect . Lists with com . google . common .
[ hotfix ] fix the npe in hsbuffercontext # startspillingbuffer
updated permission checks in the Visit class to include an additional flag for untrusted visit access to enhance security by restricting access to untrusted visit
do n ' t try to register jabber protocol if it be already register .
updated the condition in BasicURLNormalizer to include additional characters and added a new test for curly braces to enhance URL normalization validation to accommodate
changed access modifiers of methods in QuickstepTransitionManager from protected to private to enhance encapsulation by restricting access to these methods
added a check to assign the lock rate if it is zero in EncodingConfiguration . java to ensure consistent lock rate comparison between enc1 and enc
added a method to retrieve the project path and modified the ` generateProjects ` method to return an ` ImmutableSet < Path > ` to improve project
modified the handling of the zero digit setting and added a validation check for the calendar ID to improve code clarity and ensure valid calendar ID is
added a new file MSwingUtilities . java with utility methods for displaying exceptions and scaling images to enhance error handling and improve image scaling functionality
camel - mail - make it easy to use async producer in camel - mail
added ` @ RefreshScope ` annotation to ` CasCoreWebConfiguration ` and ` PasswordlessAuthenticationConfiguration ` classes to enable refreshing of configuration
added unit test base on user forum issue
added two new files , Main . java and ScriptRenderer . java , for the integration of scripting functionalities to facilitate the
added a condition to check if the input state is __ NONE and implemented a new test for query parameters in the Request class to ensure proper handling
added checks for non - positive width and height before applying descent calculations and introduced a method to check if an actor is a descendant to enhance
replaced direct failure reporting with context shutdown hook execution in DeploymentManager . java and added a test for failure deployment in DeploymentTest . java to
add an ` ` forceignore ' ' parameter to the ` ` stacktostring ' ' method in lexiconrecipemappings . java
updated sleep duration from 100ms to 500ms in ConstantTimeBackoffTest . java to improve responsiveness by allowing a longer wait time after
replaced specific StringUtils imports with a wildcard import and modified conditional check for shortName to simplify import statements and enhance readability of the code
do n ' t use classpathurlstreamhandler , use getresource ( ) instead
added a new file ` FieldUtils . java ` with utility methods for accessing fields and accessors to facilitate the retrieval and access of
simplified the assertion check in DeferredAttr . java and added a new class DoubleStaticImport . java with a test method to improve code
updated layout inflation from ` workspace _ custom _ content ` to ` workspace _ screen ` and added widget padding to improve layout consistency and ensure
added ability to sync xabber account with invalid token .
added a method ` setvar ` to set variables in a ` LineReader ` to facilitate easier manipulation of variable values in the
add animaltame hook to allow for animal tame . close # 4029
[ core ] add support for unsigned numeric range in window frame .
pdfbox - 4892 : add a test to verify that the font be actually set
added functionality to set the application mode in PageListController to ensure the application displays the correct mode based on the application ' s current mode
added support for customizable Docker file paths in ` ImageFromDockerfile ` and created a corresponding test class ` DockerfileBuildTest ` to
added a null check before creating new ThreadInfo instances in ThreadInfos . java to avoid unnecessary object creation and improve performance by avoiding unnecessary object
updated the conditional check for ` sweepAngleOuter ` to use a constant ` Utils . FLOAT _ EPSILON ` to improve code readability and
[ hotfix ] [ checkpointing ] add more log for singleinputgate and channelstatepersister
added new schema constants to the mmm and ppp files to enhance functionality and maintainability of the schema management system
added a minimumSimilarity parameter to the FuzzyQuery and FuzzyTermEnum constructors and methods to enforce a minimum similarity requirement to improve query
renamed the method ` addActionsView ( ) ` to ` setActionsView ( ) ` in ` RecentsView . java `
log4j2 - 1343 add immediateflush property to outputstreamappender and use it in layoutinsteadofencoder
updated AutoConfigureAfter annotation to include additional auto - configuration classes to enhance configuration flexibility by allowing additional auto - configuration options
added null check in JLayer ' s remove method and created a new test class for bug6875716 to ensure proper handling of null
updated import statements to use ` com . google . common . base ` instead of ` avro . shaded . com ` to ensure compatibility with
add return block and unwind block to blockmap , remove redundant code
refactor legacyRenderer handling and add getter / setter methods in Label . java to improve code clarity and provide a way to control the legacy
replaced custom intToFourBytes method with Google Guava ' s Ints . toByteArray method in AbstractJweDecrypter and Abstract
added null check for mObserver in the NavigationModeFeatureFlag class to prevent potential NullPointerException when mObserver is not initialized
updated the signature of the ` thenComparing ` method in ` Comparator . java ` and added a new ` Department ` class in `
refactor DocIdSet . java to improve code structure to enhance maintainability and readability of the code
update end time handling in UserRuleAnomalyFunction to use currentKey bucketMillis instead of null to ensure accurate time representation for anomalies
added error handling for NumberFormatException in VisualScoreTagTest . java to ensure that NumberFormatException is not thrown during parsing
set the class loader for MockFactory in MockFactory . java to ensure the correct class loader is used for mocking classes
added OriginalFormat class to facilitate the formatting of enum values in the ConverterWithEnumFormat class to enable proper handling of enum values
replaced hardcoded date format " yyyy / MM / " with a constant pattern _ YYYY _ MM in FileStorageUtils . java to improve
refactor JAWTRenderer class implementation to improve rendering performance and maintainability
camel - 14836 - camel - aws2 - * : enable autowire on the lambda client , fix test
server : fix mac address validation in uservmmanagerimpl ( # 6246 )
removed condition checking for " Authorization " header in ProxyServlet . java to simplify authorization handling by eliminating unnecessary checks
replaced ` submit ` method with ` execute ` method in ` TraceableExecutorService . java ` to ensure proper execution of commands when the context
added ` getDetails ( ) ` methods to multiple authentication token classes and updated ` UsernamePasswordAuthenticationToken ` to store and retrieve authentication details to
updated the logic for determining ` randUsePoints ` in ` SolrTestCaseJ4 . java ` to ensure ` randUsePoints ` is
[ geot - 5042 ] change the method name from ` appenddot ( ) ` to ` endSentence ( ) ` in multiple
updated ` formatForConsole ` method to accept a ` Locale ` parameter across multiple classes to ensure consistent formatting across different locales for time output
fix groovyparser throw indexoutofboundsexception when use groovyparser with named argument
added bounds checking for top , left , and right inset dimensions in Border . java to ensure proper layout adjustments when dimensions exceed defined limits
refactor GestureState initialization to use DEFAULT _ STATE instead of a new instance to improve code clarity and ensure consistent initialization of Gesture
updated date formatting in LlapServiceDriver from Joda - Time to Java ' s built - in DateTimeFormatter to improve compatibility with modern date
refactor openblas and openblas _ nolapack classes for improved organization to enhance maintainability and readability of the code
remove ioutils . closeall and use java . io . ioexception instead
added synchronized keyword to initTxnMgr method to ensure thread safety during transaction management
increased the wait time from 120 seconds to 480 seconds in ` AbstractDistribZkTestBase . java ` and increased the
add a new class ` SearchResults ` for handling search results in Lucene to facilitate the retrieval and storage of search results in
do n ' t recreate the refresher if the threadcpusupport be null
initialize primitive body if it be n ' t already present .
added new versions " 8.10 . 0 - cfs " and " 8.10 . 0 - nocfs " to TestBackwards
updated feature flag for " ENABLE _ TWOLINE _ ALLAPPS " from DISABLED to TEAMFOOD and modified AppIcon
added a new endpoint to retrieve tenant pools for the current instance in InstanceResource . java to provide a way to retrieve tenant pools associated with instances
updated the ` TopFieldCollector ` and ` TestTopFieldCollectorEarlyTermination ` classes to improve the termination logic for document ID and prefix
added support for mocking interfaces and strings in InlineBytecodeGenerator and corresponding tests in InlineByteBuddyMockMakerTest to enhance mock functionality
added logging statements to CxxCompileStep and CxxPreprocessStep for improved debugging and error handling to enhance traceability and debugging capabilities
added stringutil # removecharacter method to remove a character from a string
[ 3.0 ] fix metadata service protocol can not be set ( # 9042 )
( chore ) camel - kie - api : move data transformation interface to kie - runtime
updated the type of values and objval from Object [ ] to Number [ ] [ ] in DistributionGraph . java to improve type safety and
removed unnecessary boolean flag and simplified condition in FormatStringChecker . java to simplify code logic and improve readability
solr - 4892 : fix nullpointerexception in electioncontext . getsolrcore ( ) .
refactor ITestDbTxnManager class for improved transaction management to enhance code readability and maintainability
refactor connection handling in DatabasePlatformFactory to use try - with - resources to ensure proper resource management and avoid potential memory leaks
added a method to test MapModel in both CodeFirstPojoClient and CodeFirstPojo classes to ensure correct handling of null values in
pdfbox - 4892 : avoid npe , a suggest by valerybokov
refactor item listener logic in ScaleDialog . java for improved clarity and functionality to enhance readability and maintainability of the selection state
fix npe on forge when there ' s no step height
pdfbox - 4892 : skip empty appearance stream instead of throw an ioexception
replace TreeSet with LinkedHashSet for keys in ExecuteSqlCommandStep . java to maintain insertion order for keys
increased TIME _ BETWEEN _ TOUCH _ AND _ DRAG from 1500 to 1000 in CancelEventTimer . java and added
updated preload library version from " libdc1394 - 22 " to " libdc1394 - 25 " in dc1394 . java
added checks for agent support before setting all constructors to public in MainMockTransformer and introduced new classes for mocking static methods with private constructors to
pdfbox - 4892 : avoid object duplication , a suggest by valerybokov
pdfbox - 4892 : set default window title for x11 . x toolkit
modified depth calculation in XRSurfaceData to handle different pixel sizes to ensure correct depth value is set based on the color model ' s pixel
added error response body to InvalidResponseCodeException constructor to improve error handling for unsuccessful responses in OkHttpDataSource
added a static method ` exit ` to ` TopLogging ` and modified ` TopThreadGroup ` to call this method to improve error handling by
modified the initialization of the ` start ` variable in ` NativeRegExp . java ` to correctly handle cases where the regex is not global to ensure
planner - 468 ignore test until upgrade to optaplanner 6.3 . 1 +
updated allocation index from lowIndex to highIndex in DefaultAllocator . java to ensure correct retrieval of high allocation from available allocations
added the method ` cleanEntriesWithoutFeeds ` to ` DatabaseCleaner ` and ` FeedEntryDAO ` to remove entries without feeds to
changed the return type of ` appendToLabel ` from ` void ` to ` AtomicCounter ` to allow method chaining for improved functionality
[ java ] use noopidlestrategy instead of busyspinidlestrategy in lowlatencymediadriver .
added handling for HttpStatus . NOT _ MODIFIED in CacheControlHeadersWriter , CacheControlServerHttpHeadersWriter , and CacheControlServerHttpHeaders
update instrumentationpartialevaluationtest to use tool - based instrumentation instead of splice - based one
modified the ` paintTabArea ` method in ` SynthTabbedPaneUI ` to correctly calculate the dimensions of the tab area to ensure
modified the ` getKrakenDepth ` and ` getKrakenMarketDataServiceRaw ` methods to accept an additional ` args ` parameter
camel - 14263 : fixed the issue that camel - ftp do n ' t handle the file path correctly .
added classpath handling to JavaProvenance and updated MavenProjectParser to utilize it to streamline the creation of JavaProvenance objects and improve
added trace logging for registered Hive UDFs and non - deterministic UDFs , and modified the conditional check in TestInbuiltHiveUDF
increased the loop iteration count from 100 to 200 in CloudStateUpdateTest . java to improve test coverage by allowing more iterations
do n ' t deliver hint for deleted columnfamilystore exception
updated error handling in NativeErrors . java to check if output file is writable before executing the command to ensure that tests are skipped when the output
added package info retrieval in LauncherModel . java to check if the application info is enabled before proceeding to ensure that the application does not
bug cs - 15832 : databaseupgradechecker should throw an exception if unable to upgrade the database
refactor exception handling in AbstractFaultTolerantChunkOrientedTasklet and add a test for non - skippable exceptions to improve
case insensitive completion do n ' t highlight result of different case , fix # 249
added imports for SourcesFileResults and SourcesFileErrors , and updated dataTables handling to utilize global data tables to improve code organization and enhance
added import for Overview and modified task dismissal logic in TaplTestsTaskbar . java to ensure tasks are properly dismissed
server : update systemvm template when upgrade from 4.2 . 1 to 4.3 . 1
refactor connection handling in LdapClient by removing redundant null checks to streamline connection management and enhance code clarity
refactor index handling in SequenceAction to use a temporary variable to improve code readability and maintainability
improve cassandraserver . set _ keyspace ( ) to check if the current keyspace exist
added a check to skip synthetic fields in ReflectUtils . java to improve handling of synthetic fields in the code
added LoggerProvider class and integrated it into ApplicationController for logging to enhance logging capabilities for better debugging and monitoring
changed the type of ` values ` and ` builder ` from ` ImmutableMap < String , String > ` to ` ImmutableMap < String , Object >
added deprecation warning for multiple glue classes in SpringFactory to inform users about configuration issues to ensure that multiple Spring context configurations are handled correctly and provide
added a new method ` deepStart ` to the ` Startables ` class that accepts a list of ` Startable ` arguments to enhance functionality
removed the deprecated method ` reservePrimitiveExtensionArray ( ) ` from ` Shape ` and its implementation in ` ShapeImpl ` to streamline the
fix laser table not work with laser target .
modify object name validation logic in AbstractJdbcDatabase . java to improve clarity and correctness of object name validation
removed unused imports from TestSolr4Spatial2 . java to clean up the code and improve readability
test ( core ) : fix race condition in memorylimittest
removed null checks for handlerName and simplified conditionals in RequestHandlers . java to improve code clarity and reduce unnecessary null checks
replace ' - ' with ' . ' in the servlet name format in ProxyServlet . java to ensure proper logging format for servlet names
updated the handling of Python environment variables in ProjectBuildFileParser . java to exclude certain keys from the environment to ensure that the PythonPATH environment
updated audio processing logic to use frame size directly and handle potential OutOfMemoryError to improve robustness and error handling when processing audio data
added null checks for enums in ElasticSearchStringLookupService to ensure proper handling of null values to avoid potential NullPointerExceptions
updated the format string in CommitLogReader to include the segment number in the error message to improve clarity of error reporting for better debugging
added a assignment of the policy from the container scope to ensure the WebSocket session uses the correct policy from the container scope
simplified the condition for determining static fields in the Java to TypeScript translation to improve code clarity and maintainability by removing unnecessary checks
updated the context creation to use a webroot parameter instead of a default UI _ DIR to enhance flexibility by allowing the webroot path to
updated JUnit imports and annotations from JUnit 4 to JUnit 5 across multiple test files to ensure compatibility with the latest JUnit 5 features
use netbeans api instead of reflection to check if a vm be attachable
updated method names from ` printHeaderObject ` to ` createHeader ` in multiple formatter classes to improve clarity and consistency in header creation logic
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
added multiple calls to buffer . reset ( ) in ReduceRecordProcessor . java to ensure buffer is properly reset before processing new data
added null checks before setting foreground and background in FloatingWidgetBackgroundView to avoid potential NullPointerExceptions when setting values
updated the range check in FloatingDecimal . java from ` < = ` to ` < ` and added a new class ToString . java with
updated property type checking logic in ` PropertyDescriptor . java ` and added a new file ` Test7189112 . java ` with a bean
removed the maxVersion parameter from the getVersions method call in RealTimeGetComponent . java to simplify the version retrieval process by eliminating
fix : do n ' t set the origin header when it be already set .
updated animations in RecentsView and TaskView to use alpha and scale based on the state of the modal overlay to improve user experience by
enhanced error messages in ORCRecordReader to include the field name to improve clarity and context in error reporting for multi - value fields
added new sample files for " CastVideos " , " HLS " , and " Basic 4x3 " in DemoUtil .
removed HIBERNATE52 - related interfaces and their associated interfaces from the PersistenceProvider and related classes to simplify the configuration by removing unnecessary
updated log initialization to use the correct class name in ExecRPCInvoker and WritableRpcEngine to ensure consistency and clarity in logging across the codebase
added diagnostic logging functionality and a test for union types with fixed fields in TestSpecificCompiler . java to improve error reporting and validation for Java file
refactor WebSocket session creation logic and add a test for session closure behavior to improve clarity of session management and ensure correct handling of session closure
increase batch processing delay for dao state listener
update mappings to include Apache Struts in addition to OpenSymphony to ensure compatibility with the latest version of the Apache Struts library
added conditional stop logic for video tracks in WebCamInputPanel . java to ensure video tracks are properly stopped when the stream is stopped
changed the data type of ` chartData ` from ` List ` to ` ArrayList ` in ` BittrexChartDataResponse ` and added
[ geot - 6042 ] update gml example to use new geotools api
replaced ` substream ( 200 ) ` with ` skip ( 200 ) ` in the ` TargetType58 ` class to improve performance by
hhh - 10956 - allow simplevalue . getidentifiergenerator ( ) to be use
rename ` ` find full text document ' ' to ` ` download full text document ' '
refactor URI registration logic to include host and port information from ` dataList ` to improve clarity and functionality of URI registration handling
refactor WebSocketMapping and WebSocketUpgradeFilter classes to improve code organization and maintainability
added a check for blank OSDB hash before retrieving information from OSDB to prevent errors when the OSDB hash is blank for a specific path
added token transfer functionality to RuntimeImpl and MUtil classes to enhance contract processing by allowing token transfer based on call token values
camel - 14263 : camel - ftp should be able to delete a file in stepwise mode . thanks to michael
camel - jackson - ldap : use password instead of dn for ldap search bind
added assertions and improved hybrid hash join conditions in MapJoinOperator and HybridHashTableContainer classes to ensure proper handling of join results and
updated HTTPSPDYAsyncConnectionFactory to accept an AsyncEndPoint parameter and added methods to retrieve local address , port , and server name to enhance
added " id " extra to intent in multiple adapter classes and TweetPager , and TweetFragment to ensure the intent includes the correct tweet
added a new method ` disconnectWeb ( ) ` and modified the handling of proxy authentication in ` HttpURLConnection ` to improve connection management and ensure proper
replaced ` int ` with ` AtomicInteger ` for the ` _ numChildren ` variable and updated its usage in the ` TraceContext ` class
updated various data and plugin classes for consistency and clarity to improve code readability and maintainability
disable a test in ValueTypeTests by setting the enabled attribute to false to temporarily disable the test to avoid intermittent failure
( chore ) camel - kie - services : move everything from kie - api under org . kie . api : add
rename ` IN ` predicate to ` NOT _ IN ` in multiple predicate classes to improve clarity and consistency in naming conventions
replaced AccountUtils . AccountNotFoundException with a general Exception catch in FileActivity , Preferences , and ReceiveExternalFilesActivity to improve error handling and
added null check for witnessService before validating permission to prevent potential NullPointerException when witnessService is not initialized
updated the method of obtaining the tagged column string in JoinDesc . java to ensure the correct expression string is used for better clarity in
added a conditional check before setting the JavaDoc in AbstractJavaClassTranslator to ensure that the JavaDoc is only set if it is not present
rename ` holderMethod ` to ` holderMetadata ` and update related methods in ` CompiledICHolder . java ` , and add a new
replaced calls to ` revalidate ( ) ` with ` revalidateWithAnimationSafety ( ) ` in multiple locations to improve animation safety
[ hotfix ] [ connectors / kafka ] remove unsupported metricgroup from serialization schema adapter
updated the calculation of the y - coordinate by introducing an oldX variable to improve code clarity and maintainability by reducing redundancy
updated the ` createCache ` method to explicitly cast ` null ` to ` Configuration < Object , Object > ` to ensure type safety by explicitly
bug 2974855 : http : / / code . google . com / p / mybatis / issues / detail ? id =
refactor ShadowCookieManager to improve code structure to enhance maintainability and readability of the code
added a new configuration option for disabling storage - based authorization checks for external tables to ensure that storage - based authorization does not drop external tables
added braces to a conditional statement in Stage . java and modified the position of the background drawing in ProgressBar . java to improve code readability and
sulong : cache byte order for llvmlanguage .
updated the property name for Windows client provider timeout from " namedPipesocketprovider . timeout " to " windowsprovider . timeout " to align
updated initWebViewLogin method to accept a baseURL parameter and modified web view loading logic to enhance flexibility in configuring the web view login
corrected a typo in the exception message from " Paramter " to " Parameter " to improve clarity and consistency in error reporting
polish ` ` allow audit event to be request without date parameter ' '
renamed ` ExponentialTimer ` to ` PreciseThroughputTimer ` and updated related references to improve clarity and consistency in class naming
make softbodytest more stable by remove it from the world
[ hotfix ] [ table - common ] make provider interface public
[ hotfix ] [ zeppelin - 4071 ] fix log message in websocket and client
add a test case to ensure that the namespace be not redundant .
add a null check to the redplasma check to prevent a npe .
added support for HTTP / 2 headers in BareResponseImpl and updated HelidonConnectionHandler to extend HttpToHttp2ConnectionHandler
updated member removal logic to check for trusted and removed members to ensure only relevant members are removed from the plot
updated string concatenation and formatting in SimpleReport . java to improve readability and maintain consistency in string formatting
removed the option to ignore symbol files in ` JavapTask ` and added a new test class ` T6863746 ` to
renamed ` TickerDemo ` to ` StreamingTickerDemo ` and updated references accordingly to improve clarity and consistency in naming conventions related
refactored contract validation logic in Runtime . java to improve clarity and error handling to enhance code readability and ensure contract validation is performed
g3d : do n ' t create input3d when not in applet
added @ Ignore annotation to KinesisIntegrationTests . java to temporarily disable tests that are not ready for execution
do n ' t throw parserexception for script tag payload reader
updated the ` getRepositoryFactoryClassName ` method to include an ` @ Override ` annotation to ensure proper method overriding and improve code clarity
changed the return type of ` getExecutableCommand ` methods from ` String ` to ` List < String > ` across multiple classes to allow for
updated references from ' this ' to ' IOSGLES20 . x ' , ' this . y ' , ' width ' , and '
removed UploadPathActivity and its associated components from the codebase to streamline the codebase by eliminating unused components
update return statements in SimpleTextFieldsReader to handle DOCS _ ONLY option to ensure correct handling of total and sum term frequencies based on index
fix ( jdttreebuilder ) : fix implicit constructor in parentexiter ( # 3649 )
added a ` Database ` parameter to multiple ` populateValidateIfNeeded ` methods to ensure proper handling of Oracle database types during validation
refactor Database class to improve code structure to enhance maintainability and readability of the code
rename SpringApplicationBuilder class to improve clarity to enhance code readability and maintainability
updated iterator assignment in PointInSetQuery . java to use the current instance of sortedPackedPoints to ensure proper initialization of the iterator for
removed the substring operation for rawName in SchematicHandler . java to simplify the code and improve readability
added class name checks in AbstractCollectionAssert and updated test cases in CollectionAssert _ isUnmodifiable _ Test to ensure proper handling of specific collections and
changed the Option enum from static to non - static in ProcessExecutor . java to allow for instance - specific implementation of the Option enum
added a confirmation dialog for non - negative character limits in Compose . java and refactored related code in ComposeActivity . java to
replaced the ` toggleKeepInSync ( ) ` method with a direct call to ` getFileOperationsHelper ( ) . toggleKeepInSync
updated the Base64 decoding method in ImageUtil to use java . util . Base64 instead of javax . xml . bind . DatatypeConverter to
added new files ` ControllerCounter . java ` and ` DBCallback . java ` to implement MongoDB - related functionality to facilitate tracking
changed the parameter of the deleteTicket method from ` String ` to ` final String ` to enforce immutability of the ` ticketId `
added a new file FlywayMigrationRunner . java to implement a flyway migration runner to facilitate the execution of flyway
replaced ` isEmpty ( ) ` checks with ` size = = 0 ` in HashMap . java and added a new class ` OverrideIsEmpty
updated the version number from 0.6 . 0 to 0.7 . 0 in TsFileDBConstant . java to reflect the latest release
added @ Nullable annotation to modifiers parameter in CompressionCodec and ZlibCodec classes to enhance code safety by preventing null pointer exceptions
8067922 : fail when jar file do not contain main - class attribute
rename test classes for consistency in naming conventions to improve code readability and maintainability
move hotspotprofilinginfo . java to hotspotprofilinginfo . java to support graal compiler .
pdfbox - 4892 : make cellcopypolicy constructor public , and use it in xssfsheet . clone ( )
added a method to reset the icon load result in FloatingIconView . java and invoked it in Launcher . java to improve code organization
updated method call from ` getValues ( ) ` to ` getRawValueCharSequences ( ) ` in ` EntityCapsManager . java ` to ensure
updated IconRecentsView . java to handle landscape orientation and clear bottom margin based on device orientation to ensure proper layout behavior for landscape
deleted the AddAdapter . java file to the functionality was no longer needed in the project
do n ' t run nonstaticlifter when there be no constructor
added a boolean parameter ` processSortCols ` to the ` selectOperator ` method and modified the logic for processing bucket and bucket columns to enhance
log4j2 - 1343 fix test that fail if there be no entry register for a new logwatcher
added a print statement that prints " < any > " to the Java2TypeScriptTranslator to enhance output formatting for better TypeScript compatibility
updated the SDK version from 4799589 to 4913185 in SdkConfig . java to align the SDK with the latest version requirements
added a check to set the SPRING _ AOP _ PROXY _ TARGET _ CLASS property to true if it does not already exist to
removed the singletonLock variable and related logic from TypeCachingBytecodeGenerator . java to simplify the code by eliminating unnecessary locking logic
improve documentation for action and response
suite : add utility method to append to output file
updated conditions in ` MavenExecutionContextView . java ` and refactored ` MavenRepositoryMirror . java ` to improve handling of Maven repository
added a ` name ` parameter to constructors and methods in ` BuildRuleSourcePath ` , ` PathSourcePath ` , and ` SourcePath
updated the redirect URI comparison logic in OAuth20CallbackAuthorizeEndpointController and added a test for operation clients with the same redirect URI in OAuth20
refactor annotation handling by introducing the ` AnnotationParser ` for converting maps to arrays to improve code readability and maintainability by centralizing
updated method calls in UserManagerCompatVL to use getBadgedIconForUser instead of getBadgedDrawableForUser to ensure compatibility with updated
updated the default value for the line separator in GlobalConfiguration . java to provide a clearer description of the default line separator for better readability
fix a bug in the configuration manager that cause some test to fail .
sanitize input before send them to the model to prevent crashes
chore : update java and python dependency ( # 134 )
modified the ` buildFileNamesCanBeDifferentCrossCell ` method to include exception handling and added a new test for verifying file contents from
refactor CountersReader to improve code readability to enhance maintainability and ease of understanding for future developers
updated container type assignment in ` AllAppsRecyclerView ` and modified method parameters in ` DeepShortcutsContainer ` and ` DeepShortcutsContainer
hbase - 25827 deprecate hbase . ipc . server . reservoir . initial . buffer . size and hbase
fix intermittent native join test failure
added a new method ` getAllGenericParameterTypes ( ) ` to retrieve all generic parameter types to improve parameter handling by distinguishing between synthetic and
refactor TestFSTs class for improved readability to enhance maintainability of the test code
ggb - 1352 fix for inputbox label height calculation for non - latex string .
hbase - 25850 increase initial size for increasingtopbounderegionsplitpolicy ( addendum )
removed model . resetLoadedState ( ) and model . startLoader ( ) calls from LauncherClings . java to streamline the loading
removed initialization of keys and updates lists and initialized the updatesAt variable directly to streamline the code by eliminating unnecessary assignments
added a set to control excluded Spring datasources in SpringDataSourceBeanPostProcessor to allow dynamic exclusion of beans based on specific criteria
added a call to store undo information in TableValuesView and simplified the deletion event execution in TableValuesPanel to improve user experience by ensuring undo
camel - 15836 - camel - aws2 - kinesis : do n ' t wrap amazonserviceexception in sdkclientexception
refactor channel triggering logic to use a loop for each channel to improve code readability and maintainability by reducing redundancy
disabled tests due to unfavorable benchmarks in LocalCacheSelectorCode . java and modified delayable logic in BoundedLocalCacheTest .
added a test for illegal database names in IoTDBSessionSimpleIT . java and improved error handling in PartialPath . java to ensure that
added a call to resetNewFiles ( ) in GarbageCollector . java to ensure that new files are properly cleaned up after garbage collection
renamed ` desiredWorkspaceLeftRightMarginPx ` and ` desiredWorkspaceHorizontalMarginPx ` to ` desiredWorkspaceHorizontalMarginOriginalPx ` and
refactor code formatting and structure in CharTokenizer . java to improve readability and maintainability of the code
chore : update gapic - generator - java version to 2.1 . 0 ( # 637 )
cloudstack - 7892 : fix typo in xenserver _ network _ label
updated libGDX and libGDX nightly versions from 1.5 . 5 and 1.5 . 6 - SNAPSHOT to
removed the metricNames set and its getter method from SolrCore . java to simplify the code and improve encapsulation
replaced URI usage with Path for workingDirectory and absolutePath in MavenManifestFactory . java to improve type safety and clarity in path handling
replaced direct OS detection with a static final boolean variable IS _ MAC to improve code readability and maintainability
refactor JdbcAggregationRepository to improve data aggregation logic to enhance performance and maintainability of aggregation operations
fix bug where frame . getslotlist ( ) return an empty list .
initialize m _ predCount to - 1 in PredicatedNodeTest . java to reset the predicate count before further operations
added properties merging functionality to ConfigurationSpringInitializer to ensure that configuration properties are correctly merged from the application ' s configuration
updated the ` setupLogging ` method to accept a ` org . slf4j . Logger ` parameter and refactored the switch statement
replaced ` HashMap ` with ` LinkedHashMap ` in multiple files to maintain insertion order for the ` aliasToWork ` map
added logic to retrieve jdbcHandlerMap based on the superclass of the type to ensure proper retrieval of JDBC handler mappings for different class types
added debug logging for item writing operations in multiple item writer classes to improve traceability and debugging of item writing operations
modified the way language ranges are parsed by removing trailing semicolons from the input string to ensure correct parsing of language ranges by removing trailing sem
updated the handling of null handlers in VertxHttp2Handler and adjusted the server start method in Http2Test to ensure proper context management and
speed up xssfevaluationworkbook . gettable by cache xssftable instance
updated schema text detail type checks and simplified symbol assignment logic in BaseSchemaTextFormatter . java to improve clarity and maintainability of the schema
replaced ` MongoFactoryBean ` with ` MongoClientFactoryBean ` in ` MongoNamespaceReplicaSetTests . java ` to enhance compatibility with
replaced HashSet with LinkedHashSet for roots and leaves collections in SparkWork . java to maintain insertion order and ensure consistent iteration order
added a check for cloning table scan operators before cloning them in SkewJoinOptimizer . java to ensure proper cloning of the operator
added a null check for the client ID before returning it in DynamicRegistrationClientConfigurationService to prevent potential null pointer exceptions when the client ID is
fix miss clear ( ) call for achievementlist . field _ 187981 _ e . clear ( )
initialize userName , productName , productVersion , driverName , driverClassName , and connectionUrl to an empty string to initialize variables to an empty string
updated permission strings from " link _ share _ read _ only " to " link _ share _ view _ only " in QuickSharingPermissionsBottom
added support for reading long buffers in ByteBuffersDataInput to improve performance and efficiency of data reading operations
added new long variables st _ atime , st _ mtime , st _ ctime , st _ atime _ sec , and st _
added a new file TestNoEagerReclaimOfHumongousRegions . java to test garbage collection behavior on large object references to
added functionality to conditionally hide the search bar based on user preferences to enhance user experience by controlling search visibility based on user preferences
fix envroutetest failure due to wrong api call
added null checks for cur and next in LineChartRenderer . java to prevent potential NullPointerExceptions during rendering
added a new action ` ReloadPageAction ` to the menu for reloading the displayed page to enhance user experience by allowing users to reload the
changed log level from info to warn for various logging entries in ` SQLManager . java ` to improve logging granularity for non - existent entries
update minimum Spring version from 3.2 . 7 . RELEASE to 3.2 . 8 . RELEASE to ensure compatibility with the latest
added a null check for currentClusterConfigForService in UpgradeHelper . java to ensure that the configuration type has a selected version before proceeding
use serviceloader to load spi file , rather than factoryregistry . lookupproviders ( point )
added a finalize method to ensure the table is closed in a finally block to ensure proper resource management and prevent memory leaks
added a ` stopStatementExecutor ( ) ` method to ` JdbcConnector ` and logging in ` HiveViewImpl ` to ensure proper cleanup of
updated XML feature settings and improved generic type usage in various handler classes to enhance code clarity and maintainability by using explicit generic types
8274188 : jdk / jdb / stopthreadid / jdbstopthreadidtest . java fail with ` `
added a new method ` getType ` to ` ShadowContentResolver ` and corresponding unit tests in ` ContentResolverTest ` to enable retrieval of content
updated variable names from ' runnable ' to ' future ' for clarity to improve code readability and maintainability by using more descriptive variable
updated the default HTTP port property from " port " to " vertx . httpPort " in HttpTestBase . java to ensure the correct
replaced ` addCaptureListener ` with ` addListener ` for the button table to improve clarity and consistency in listener management
increased the default batch size from 10 to the number of available processors to improve performance by dynamically adjusting the batch size based on the
[ hotfix ] [ runtime ] log error when establish resource manager connection in taskexecutor
updated LambdaRewriter . java to handle null ClassFile and modified exception handling to return a new LambdaExpressionFallback instance to improve robustness by ensuring
updated error message in IllegalArgumentException to include min and max values to improve clarity of error reporting for better debugging
updated message handling methods to include an entity parameter for better context to enhance message processing by associating with the correct entity context
added new interfaces ` Cursor ` , ` Database ` , and ` Row ` , along with a new abstract class ` Database ` and ` Row
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the assertion framework
# 259 - enh : add ebeanserver . setbeanid ( object bean , object id ) ... for convenience ( # 2
do n ' t hardcode add - menu - to - site - descriptor . xsl in documentation
added a list of request matchers and modified the requestMatcher assignment logic to improve the handling of multiple request matchers in HttpSecurity
implement hashcode and equals methods for ContactResource class to ensure proper comparison and hashing functionality for resource objects
move initialization of request and response to abstractprocessor so they can be reuse
updated logging messages in FileManager . java for clarity and consistency to improve readability and provide more informative error messages during save operations
added a ` tearDown ` method to ` TestIndexSearcher ` and reset the mock control in ` TestJdbcDataSource ` to ensure
added import statement for LambdasWithInterfaces and removed unnecessary semicolons in getSourceFile ( ) calls to improve code readability and maintain
refactor ConnectionModel and ModeledConnection classes for improved clarity to enhance code maintainability and readability
fix for tika - 1349 : remove the special parserdecorator from tika - core
improve fmlsecuritymanager to be able to call class . getcallerclass ( ) . getcallerclass ( ) . getcaller
refactored variable declarations in AccountUtils , IndexedForest , and CustomPopup classes for improved readability to enhance code clarity and
updated parameter name from " swap " to " rename " in TestCoreAdminApis . java and modified the RENAME method call in Core
[ wasm ] add support for jsx comment .
added ScreenRecordRule import and annotation to AddWidgetTest . java to enable screen recording functionality for the test case
updated error handling in BuildEndToEndTest and CxxEndToEndTest to use exit codes instead of failure messages to improve clarity
added physical memory checks to TestStringBufferAndBuilderGrowth . java to ensure the machine has sufficient resource to run the test
deprecated the ConversionService class and refactored conversion logic in MapToLocalDateConverter to improve flexibility and maintainability by allowing custom conversion
added a success flag to HiveMetaStoreClient . java to indicate successful execution of the operation
updated string comparison from ' = = ' to ' . equals ( ) ' in ResourceReferenceInfo . java and modified bundle creation in Dst
added support for " amp . twimg . com / v / " URLs in TweetActivity and TimeLineCursorAdapter to enhance tweet processing
mark the AreaReference class as deprecated to indicate that the class is outdated and should no longer be used
refactor ElementType and Target classes to improve code organization to enhance maintainability and readability of the codebase
updated assertions and reference kind handling in MemberName . java to improve clarity of assertions and ensure correct reference kind handling
changed the default value for submitKeyUpdates from " false " to " true " and added synchronization around the runChange method to ensure thread safety
change the order of type checking for firstEvent in EditNodeTextField . java to ensure correct handling of MouseEvent instances
camel - 6594 : beanexpression . lookupbyname ( ) should check if the bean be find by the classresolver or the bean
renamed multiple classes related to benchmarking functionality to improve clarity and maintainability of the benchmarking framework
refactor exception handling in AgentRunnerTest to use LangUtil . rethrowUnchecked for ClosedByInterruptException to improve clarity and maintainability
added ` getDescription ( ) ` method implementations and updated return statements across multiple classes to provide clearer descriptions for Maven project properties and plugins
refactor faces management in ObjLoader to use a local variable for clarity to improve code readability and maintainability by reducing repetitive
refactor ProcessEngine class to improve code organization to enhance maintainability and readability of the code
corrected the variable name from ` reentrantLock ` to ` lock ` across multiple classes to improve code readability and maintainability by
updated the ` PrintMavenAsCycloneDxBom ` class to include ` mavenPackaging ` as a parameter and modified the `
modified the back method call to include the component ' s name from the event to ensure the back event reflects the current component context
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5783 - check for
updated method signatures to use generic types in ObjectArraySubject , StandardSubjectBuilder , and Truth classes to enhance type safety and improve code cl
replaced ` NutchConf . get ( ) ` with ` getConf ( ) ` in multiple classes to standardize configuration retrieval across classes
bugfix : do n ' t remove boards pane when select a sheet
added a method ` getSessionId ( ) ` to the ` RemoteWebDriver ` class to provide access to the ` sessionId ` property
added null checks before setting time intervals for nodes and edges in ImportContainerImpl . java and updated tests in ImporterGEXF2Test
removed the logging option for the server port in MockServerContainer to simplify the command execution by using the server port directly
updated error logging to include the exception message to improve clarity of error messages for better debugging
extract robotshatoringpolicy from crawldetails into crawldetails .
added JUnit Ignore annotation to ITSystemTest . java to temporarily disable tests that are not ready for execution
use platform - independent file separator for test
added alternativePath method to ExpectNewDemo for handling alternative input streams to improve flexibility in path generation by allowing alternative input streams
updated the initialization method of the input filter in LogEntryParseTester . java to ensure the first filter is properly initialized before use
added a new parameter ` protectionDomain ` to the ` BufferAlignmentAgent ` constructor to enhance security by associating the ` protectionDomain ` with
added dispose method to the WaterRipples class to properly release resources to prevent memory leaks
added a configuration option to disable unsafe external table operations in Hive to optimize performance by preventing unnecessary optimization on external tables
updated the description of the Authorization header from " Uses basic authorization with ` base64 ( resource _ server : shared _ secret ) ` to "
removed the FLAG _ SHOW _ WALLPAPER flag from the window in Launcher . java and adjusted wallpaper offsets in Workspace .
change return value from false to true in SybaseASADatabase . java and modify SQL query generation logic in SequenceSnapshotGenerator . java to
nifi - 1348 : add an autocommit mode to putsql to allow the driver to commit / rollback on clean up
added directory creation logic in SnapPuller and assertions in TestReplicationHandler to ensure that the parent directory exists and verify the existence of the
updated AppTargetId from " id : launcher " to " launcher : launcher " in AppEventProducer . java to ensure consistency in app target
refactor framer . frame and related methods to accept an output byte buffer instead of returning it directly to improve performance by reducing unnecessary byte
refactor constructor parameters in OAuth2 authorization and login filter classes for consistency to improve code clarity and maintainability by standardizing parameter order
hive - 26969 : udfstringtomap ( sergey shelukhin , review by prasanth j
updated PlainFormatter to use ` Instant . now ( ) . truncatedTo ( ChronoUnit . MILLIS ) ` instead of a static method to
updated timeout duration from 1000ms to 3000ms and added a retry mechanism for closing the agent to improve the reliability of agent closure by allowing
hhh - 14650 use methodhandles . privatelookupin ( ) instead of reflection
refactor Mockito class implementation to improve code readability and maintainability
updated debug log message from " Closing proto event file " to " New proto event file " to clarify the purpose of the event
ignore samplingnamingtest until we can fix it
updated the error message for invalid rows and columns in GridLayout . java to improve clarity and consistency in error reporting
updated string concatenation syntax and improved error handling in the DecisionNode and WagonCART classes to enhance code readability and ensure proper
added support for ordered BoundSheetRecords in XLS2CSVmra and BoundSheetRecord classes to improve data retrieval and ordering of BoundSheetRecords
refactor average impulse calculations to use start and end thrust variables instead of separate impulse calculations to improve code clarity and maintainability
updated InputSystemJme initialization to use inputManager parameter to improve flexibility by allowing different input managers
refactor the logic for setting the hash code field offset in UniverseBuilder . java to improve clarity and ensure the offset is valid before
remove deprecate block . getmesh ( ) in favor of block . getmesh ( )
[ hotfix ] [ yarn ] fix checkstyle violation in yarnapplicationmanagerrunner
added an option to disable empty word options in the LineReader and LineReaderImpl classes to enhance flexibility in matching words based on user -
updated pushViewReplicaUpdates method to include writeCommitLog parameter to ensure correct handling of view replica updates based on commit log state
refactor clipboard handling in CaptureActivity and add auto - open preference support in PreferencesActivity to enhance clipboard functionality and provide user preference options for button
added a new test method ` testBatching ` to ` JoinedTableTest ` and implemented additional properties in ` JoinedTableTest `
added handling for EntityExistsException in JpaPersistenceService to improve error logging for duplicate entries during item persistence
removed the deprecated ` -- format ` option from ` CucumberOptions ` and updated the plugin reference in ` RunCukesByComposition
removed the save ( ) method from PMS . java to streamline code by eliminating unnecessary method calls
refactor back key handling in ExtendedEditText to simplify back key listener logic to improve code readability and maintainability
modified the capacity calculation in AbstractStringBuilder and added a new class Capacity with a test method to ensure proper functionality of string manipulation methods with varying
replace ` goHome ( ) ` method with ` onNoteSaved ( noteTmp ) ` method in ` DetailFragment . java ` to enhance
improve extraction of poi - ooxml endnote from poi - ooxml - l in poi - ooxml - l
added clientInfo parameter to CasAuthenticationTransactionSuccessfulEvent in DefaultAuthenticationManager and updated CasEventsReportEndpointTests to include clientInfo to enhance event
added a test method ` testVersion ` to the ` BridjOGRDataStoreTest ` class to verify the functionality of ` GDAL
added a new file ` Lifecycle . java ` that implements network error handling in the application to facilitate the management and logging of network
do n ' t try to download deviantart ripper url that do n ' t exist
removed unused imports and simplified code in RocketFigure . java to improve code clarity and maintainability
implement nativewindow . retina to work around a bug in the nativewindow
enable auto - select for create project offline option ( # 3246 )
refactor DiskDocValuesConsumer to use BlockPackedWriter and streamline value writing logic to enhance performance and maintainability of the code
updated DefaultRouteBuilder and DefaultRouter to use TreeSet instead of ArrayList for routesByStatus to improve performance and maintain order of routes by status
removed unused imports and simplified the response handling logic in GoAwayTest . java to improve code clarity and maintainability by eliminating
added utility methods for setting properties in Java collections and created a new FluentSetterBean class to enhance flexibility in handling fluent bean properties
updated the ` post ` and ` send ` methods in ` BlockingHttpEndpoint ` to return a ` HttpResponse ` instead of a ` Listenable
updated fileUrl to remove the " noop = true " parameter and refactored related test methods for clarity to streamline the file URL
updated print statement to use getLastAppearedTaskId ( ) instead of mLastAppearedTaskTarget to improve clarity of output by
added option for write image scaling information and option for msword ( msword - 2007 )
added aggregation function handling in TSServiceImpl . java to support dynamic column addition based on the execution context
updated test classes to extend from WithNestedTests instead of LuceneTestCase and modified JUnit rules accordingly to improve test structure and ensure proper
added functionality to enable or disable XCap server URI in the PresencePanel to enhance user experience by allowing dynamic configuration of XCap server URI
ww - 4352 add a configuration option to skip handle exception when run in dev mode
added a method to stop text editing and its execution in multiple implementations to enhance user experience by allowing cancellation of text editing actions
nifi - 1348 : controlrate . groupname should default to ` ` group ' ' if no grouping attribute be set
updated the ` showDialog ` method to use ` isNewComponent ` instead of ` includeUndoModify ` and modified the ` selectPreset ` method
added error handling and logging for chat errors in ChatAnnotation . java to improve error reporting and ensure thread safety when sending messages
added a check to ensure the test runs only on Windows to prevent execution on unsupported operating systems
added SQL _ SERVER _ SNAPSHOT with a value of 0x1000 to TransactionIsolationLevel . java to enhance transaction management by introducing a
replace direct addition of new recids with a blocking offer operation to improve responsiveness by allowing more time for recids to be added to
remove use of jrecompat from tomcat - api
added a check to ensure ` getCommandClass ( ) ` is not null before creating a new instance of ` RegisteredServiceImpl ` to prevent potential
change default disk _ failure _ policy to ignore and add ' ignore ' to cassandra daemon
remove public from interface and class in favor of package - private
[ java ] filter out address that be not ipv6 address in peerdiscoveryagent .
removed the ` setJobIdentifierFactory ` method from ` SimpleCommandLineJobRunner ` to streamline code by eliminating unused functionality
updated import statements and modified computePartitionAssignment method to include ClusterDataCache to enhance partition assignment management by utilizing a new caching mechanism
danielwagnerhall : remove the deletion of a container from the protocol , since it do n ' t seem to be
selenium : fix parsing of command string with pipe - separated argument
add retry to make test more reliable
rename ` Components . COMPONENTS _ SCHEMAS _ REF ` to ` Components . COMPONENTS _ SCHEMAS _ REF `
refactor EntityDeletedEvent to utilize JsonUtils for JSON serialization and deserialization to improve code clarity and maintainability by standardizing data handling
added support for the " gop " key and its value in FormatConfiguration . java and updated media parsing logic in DLNAMediaInfo
added a new file TestProfileReturnTypePrinting . java with methods for testing return types to facilitate performance testing of return type printing
added locking mechanism to the ` ParseConfigUtils ` class to ensure thread safety when updating configuration items
updated MinMaxValueBasedSelectionOrderByCombineOperator to handle acquiring and releasing of columns segment operators to ensure proper resource management and prevent
danielwagnerhall : remove @ ignore from firefoxprofiletest
updated the ` getSystemBars ` method to return a map of bar types and values as ` Map < String , Map < String , Object
do n ' t add dead bug to projectstats
[ netbeans - 4352 ] fix import from disabled label
removed multiple redundant @ Override annotations in CacheControlImpl . java to streamline code and improve readability
added a check for empty recurrence by days in the ScheduledAction class and created a corresponding test case to ensure that a scheduled action returns a date
replaced the upload button functionality with a menu item for enabling the upload task to streamline the upload process by utilizing the action menu
refactor and rename multiple message - related classes to improve code clarity and maintainability
added ` loadMetaData ` method implementation in ` MeXBTExchange ` and ` RippleExchange ` classes to enable loading of exchange metadata
added a custom serializer for Hadoop Writable types in CrawlDbReader to ensure proper serialization and deserialization of Hadoop Writable types in JSON output
remove test code that be no longer need
added service and configurationPid annotations to the MDNSDiscoveryService class to facilitate configuration management for the DiscoveryService
chatviewerfragment : fix crash when try to scroll to the first message in a chat .
updated ForkJoinPool initialization in BPIndexReorderer and TestBPIndexReorderer to include a custom worker thread to improve thread
updated assertions in RoleCommandOrderTest to check for DATANODE and NAMENODE roles to ensure correctness of dependency checks for blocker roles
added a method to restore and restore local information from TableInfo and refactored the writeObject method to improve clarity and functionality of the serialization
standardized spacing in conditional statements across multiple Java files to improve code readability and maintain consistency
added transformations and modified logo file format in BitmapFontTest . java to enhance image rendering by applying transformations and flipping the logo
[ hotfix ] [ table - planner - blink ] ignore built - in aggregate in streamphysicalgroupwindowaggregaterule
refactored the handling of pending echoes in EndpointState and improved logging messages in Gossiper to enhance code clarity and
fix check for reachable node in storageproxy . check if any storage node be down .
[ fix ] [ geosymbolic ] do n ' t change from multiplication to multiplication
updated content type handling in FormAuthenticator and added getter / setter methods in SavedRequest to ensure correct content type is set based on saved request
updated variable access modifiers and added null checks for localEnv , device , and display in XToolkit . java to enhance encapsulation and ensure
refactor RecommenderJob and AbstractJob classes to improve code organization and maintainability
replaced ` synchronized ` with ` ReentrantReadWriteLock ` for thread - safe locking in ` EnvironmentImpl . java ` to improve
added a test method to verify the functionality of reading an identity provider in a specified zone to ensure that the identity provider behaves correctly in different
replace the schedule job with an ExpireJob instance in ObjectTypeNode . java and modify the timestamp handling in PointInTimeTrigger . java to
removed unused import of Service from SendTicketGrantingTicketActionTests . java to clean up the code and improve readability
[ issue # 5892 ] send heartbeat after rebalance ( # 5893 )
( chore ) camel - cairo - jdbc : add new property ` ` cairo . detached . mkdir . mode ' ' ( #
[ java ] add a test that remains stable when there be a slow follower .
use [ auth ] [ year ] instead of [ author3 ] [ year ] to match author name
replaced direct calls to CxxPlatform ' s getParseTimeDeps method with direct calls to CxxPlatforms . getParseTimeDeps
refactored the OAuth service handling in GoogleCloudAPI and added a dispose method in GoogleTTSService to improve resource management and ensure proper
camel - 14263 : fixed the issue that file consumer do not work with dynamic done file name .
added a configuration option to reopen readers in SolrConfig and updated SolrCore to conditionally reopen readers based on this setting to improve performance by
add dialect version attribute to mapwriter ( for debug purpose )
added methods to update current date and timestamp in the Update class to enhance functionality for handling date and timestamp fields in MongoDB updates
added a new method ` dup ` in ` Attr . java ` and created a new test class ` PrimitiveTypeInBoundForMethodRefTest
refactor ` Condition ` class to an interface and update assertions in ` AddConfigWidgetTest . java ` , ` WidgetSearchCondition . java
updated the IndexSearcher to use ConstantScoreQuery instead of TermQuery and changed the expected value calculation to improve query performance and ensure correct expected
removed multiple unused Java . lang . invoke classes from ConcurrentClassLoadingTest . java to streamline the code and reduce unnecessary dependencies
added a method to provide direct nearby upload preferences and modified the UploadController constructor to use it to enhance the upload controller functionality by allowing direct
added support for " SYSIBM " and " SYSDUMMY1 " modes in the database mode and updated related test cases to enhance
refactor logging statements for consistency and clarity in TraceGatewayEnvironmentPostProcessor and SamplerAutoConfiguration classes to improve code readability and maintain
added functionality to track and retrieve the last process ID of custom properties in POIXMLProperties to ensure accurate identification of property entries in the document
[ geotiffreader ] use isfinite instead of isnan to check for nan
updated CliDriver . java and SessionState . java to improve error handling and resource management to enhance code reliability and maintainability by ensuring proper
replaced ` Executor ` with ` Schedulers ` for the HTTP executor in ` MockRestAdapter ` and updated related tests to enhance the
added a default implementation for the ` selectByRuleIdSet ` method and modified its implementation to partition the list of ` ruleIdSet ` to
added a new method ` addExitDescription ` to ` ExitStatus ` and refactored stack trace handling in ` AbstractJob ` and `
do n ' t allow right click on the minecraft player in multiblockrenderhandler .
renamed the ` columnFamily ` variable and related methods to ` columnFamilyColumn ` in ` SliceReadCommand . java ` to improve clarity and
removed unnecessary import statement in PlotConfiguration . java to clean up the code and improve readability
replaced the ` buildUIAlertView ` method with ` buildUIAlertController ` and refactored the ` DefaultIOSInput ` class
updated the method call from ` params . getBuildTarget ( ) ` to ` nativeLinkable . getBuildTarget ( ) ` to ensure the correct
renamed the parameter ` arrayValue ` to ` values ` in the ` ofArray ` method to improve clarity and consistency in variable naming
added an assertion to check if the message is null in the AdvServiceTest to ensure that the service ' s message is correctly initialized before
updated key handling in MappingMongoConverter to use potentiallyEscapeMapKey instead of potentiallyConvertMapKey to improve clarity and correctness in key
updated Timber logging statements in NearbyMapFragment . java for consistency to improve readability and maintainability of logging statements
camel - 14263 : camel - core - make it easy to know which property be deprecate .
added null check for terms in FuzzyLikeThisQuery and created a test for non - existing fields in FuzzyLikeThisQueryTest to
modified the ` writeApplicationsLinks ` method to accept a boolean parameter for displaying application links to enhance flexibility in displaying application links based on the
[ ds - 3952 ] use identifierservicefactory . getinstance ( ) instead of dspace ' s identifierservice . getserviceby
replaced direct calls to ` bytes . length ` with ` bw . getLength ( ) ` in ` assignBytes ` method calls to improve code
modified the ` getDisplayScript ` method to return ` null ` instead of abstract to provide a default implementation for the method
danielwagnerhall : use sequence instead of keytopress / release in remotewebdriver .
pdfbox - 4892 : set initial arraylist size , a suggest by valerybokov
fix a nullpointerexception in networkmanagerlistenerimpl when there be no network interface
fix bug # 45538 - handle nested object in hssfworkbook . getallembeddedobjects ( )
added import statement for jogamp . common . os . elf . Shdr in ShaderNodeLoaderDelegate . java to utilize
replaced instances of ` hostParams ` with ` roleParams ` in ` AmbariManagementControllerImpl . java ` to improve clarity
pdfbox - 4892 : ignore symbol font , a suggest by valerybokov
replaced glStateManager . popAttrib ( ) with GL11 . glPopAttrib ( ) in ModelHourglass . java to ensure
updated Calendar handling in LiveTvGuideActivity and ProgramListAdapter to use a specific timezone for time calculations to ensure accurate date display based on
updated method invocation in MockGateway . java and added new classes CommonParentTest . java and MainMockTransformer . java , along with new test
load libfreetype . so and libfontmanager . so so that jre can load them
[ fix ] [ core ] fix multi - variable function bug
loop safepoint elimination : add unsigned range guard to loopbeginnode .
do n ' t crash if we ca n ' t find an instance of a constant class .
added LocalizedString class and refactored methodArguments to use it to improve localization support and simplify argument handling in method calls
added a configuration option to disable classpath search in ServerConfig . java and updated DefaultContainer . java to use it to enhance flexibility in managing
pdfbox - 4892 : use arrays . copyof instead of system . arraycopy
update default retries value from 0 to 2 in Reference . java and AnnotationPropertyValuesAdapterTest . java to allow retries to be set to 1
added JSON parsing and settings handling in TexturePacker . java to enhance flexibility in loading and processing settings
added text views for uploaded and used images in AchievementsFragment to improve user interface clarity by displaying relevant image details
added unit tests for annotation processing round and entry points in ` TranslatingJavacPhaseTracerTest . java ` to ensure proper logging and
added a new ` CategoryInfo ` class and updated the ` generator ` parameter in ` MwQueryPage ` to utilize it to enhance
updated string assertions for username and password in AuthzAuthenticationRequest . java to improve clarity and consistency in error message handling
added accessibility support to the TaskbarStashController by utilizing a method to determine the auto - hide timeout to improve user experience by
added handling for the ' ^ ' character in the GenericSignatureParser to ensure proper exception management for NoSuchElementExceptions
updated access flags handling in ClassVisitorDriverFromElement . java and added multiple unit tests in StubJarTest . java to ensure correct behavior of
added null checks using ` Objects . requireNonNull ` in ` IntervalFilter ` and updated null handling in ` LowpassIntervalsSource ` to ensure that
added tests for the entry set iterator functionality in the MapInterfaceTest class to ensure that the iterator behaves correctly when iterating through the map '
added a serialVersionUID field to the TreeMap class to ensure compatibility during serialization and deserialization processes
updated the creation time from epochMilli to epochSecond in ImageData . java to ensure accurate representation of image creation time in seconds
change singularws to use f2m instead of grobcov ( grobcovc1 , grobcovc1
added import for EncryptionUtils and implemented key deletion for private and public accounts in AccountRemovalJob to enhance security by removing private and public keys from
add a helper method to make keep - alive header string consistent with other http provider .
do n ' t initialize postjoinmapcontainer if there be no interceptor and lite member join
mondrian : remove standard inlining processor that be n ' t need anymore
[ hotfix ] [ table - common ] remove unnecessary parameter spillenabled from longhybridhashtable
refactor environment variable retrieval by introducing ` envMap ( ) ` and ` processEnv ( ) ` methods to improve environment variable handling and
fix checkstyle issue with unused import
added SerializableMode import to Mockito . java and adjusted formatting in PluginSwitch . java to enhance serialization support and improve code readability
fix a bug where @ nullable field value could be set to null .
added support for isolation level in SQL queries and refactored related logic to enhance database compatibility handling and improve code clarity
replaced the use of ` HiveConf . ConfVars ` with static final constants for configuration keys in ` HiveConnection . java ` to improve
added an implementation of the ` isCacheable ` method to ` GlobalOrdinalsWithScoreQuery ` that always returns false to ensure that
added a new file TestStrangeControl . java that contains a thread executing StrangeControl . test ( 42 ) to implement a threaded
updated generated file names from " . json " to " . jsfile " and " . jslib " in JsFile . java and Js
added selectionStart and selectionEnd variables along with their respective setter and getter methods in ShadowEditText . java to enable tracking and managing selection positions
refactor grpc server initialization to use a try - with - resources statement for better resource management to ensure proper resource management and prevent potential memory leak
modified the ` use ` method in ` Jooby ` and ` Router ` classes to include validation for the ` path ` parameter to
added a null check for the fst variable in FreeTextSuggester . java to throw an IllegalStateException if the lookup is not supported at this
replaced newline character with platform - specific line separator in output string to ensure consistent line endings across different operating systems
added ABI writer class loading functionality to JavacInMemoryStep . java to enhance support for ABI processing in the application
added a suppression warning for BooleanMethodIsAlwaysInverted in PubRoot . java to improve code clarity and suppress warnings related to boolean
added a check to prevent scheduled tasks from being executed if the service is not stopped to ensure that tasks are only executed when the service is not
refactor EnergyEndpointer class to improve code readability to enhance maintainability and facilitate future development
refactor ComponentPresetChooserDialog to use a list for displayed columns instead of an array to improve code readability and maintainability by reducing
fix checkstyle issue in repository / repository - remove unused import
camel - 14284 : camel - google - sheets fixed switch / cases indentation see camel - 14540
added a default method ` getExportedHeaderStyle ( ) ` to ` CxxLibraryDescription ` and ` CxxLibraryMetadataFactory ` to
deleted the files mmm Constants . java and mmm DistanceUtils . java to remove unused or redundant code to clean up the codebase
replaced the usage of ` Pattern . compile ( ) ` with ` substring ( ) ` for extracting keys in ` RandomPartitioner . java
do n ' t try to initialize fallback class at build time if there be no @ fold annotation
[ openshift ] fix rolebindings . create ( ) to handle inline create
added logging statements for session cookie configuration in UaaSessionCookieConfig . java to improve debugging and traceability of session cookie configuration
updated the calculation of the file name to use the current year instead of a fixed value to ensure the file name is accurately based on the
fix a typo in the variable name from ' o ' to ' v ' in ObservableBlockingSubscribe . java to improve code readability and
added error handling for invalid options in JavapTask . java and created a new test class T8033711 . java to ensure
replaced calls to ` collect ( toList ( ) ) ` with ` toList ( ) ` in multiple Java files to improve code readability and
replaced error logging with warning logging and added shutdown check for task retrieval to improve logging clarity and handle shutdown scenarios more gracefully
[ hotfix ] [ network ] do not configure hybrid result partition with tiered storage when enable tiered storage
replace constant success _ code with helper method isnotsuccessstatus ( int )
set the useGL20 configuration to true in Cuboc . java and modified LwjglApplication instantiation in CubocDesktop .
removed unnecessary check for VoidType in JimpleBody . java to streamline code for better readability and maintainability
replaced ` DefaultSourcePathResolver ` with ` AddToRuleKey ` and updated method signatures in ` OutputMacroExpander . java `
refactor assertnodelayeventually to assertnoleightjob rather than assertnoleightjob
added a check for file path separators in MergeWordsListTask . java to ensure that file paths do not contain the escape character " \ build
change instructorfeedbackresponsecomment to use ' givername ' and ' recipientname ' instead of ' questionname ' and ' recipientname
removed unnecessary whitespace in the ` Container ` class to improve code readability and maintain consistency
added a new file TestEscapeThroughInvoke . java implementing object escape testing to demonstrate the behavior of object methods with and without object
replaced direct stream skip and read with IOUtils . skip and IOUtils . read for improved readability to enhance code readability and maintainability
added interceptor initialization logic and improved error handling in ConnectionPool and DataSourceProxy classes to enhance connection management and provide clearer logging for exceptions during
changed catch block from Exception to Throwable in CoreContainer . java to handle a broader range of exceptions during execution
added null check and eviction tracking methods to LruBlockCache and implemented unit tests for eviction in TestLruBlockCache to improve robustness
removed redundant check for task count in RecentsView . java to streamline code by eliminating unnecessary checks
added instance configuration change listener for HelixBrokerStarter and increased sleep duration from 1000ms to 5000ms in HelixServerStarter to
added CoinmateMetadataServiceRaw and CoinmateStatic interface to retrieve exchange metadata to enable the retrieval of exchange metadata from the Coinm
resolved - issue batch - 1341 : add validation to ensure that ` $ { basedir } ` and ` $ { project . basedir }
pdfbox - 4892 : do n ' t write object key if they do n ' t match
add displaydata ( list < itemspec < ? > > ) to ptransform . setdisplaydata ( list < itemspec < ? >
replaced instances of ` new DefaultSubject ( Truth . THROW _ ASSERTION _ ERROR , null ) ` with ` assertThat
disable MD2 and RSA key size constraints in JSSE configuration to enhance security by restricting cryptographic algorithms
added checks for sub - commands and sub - command groups in OptionData . java to clarify error messages to improve user understanding of
updated module - info . java files for mmm and ppp modules to improve module dependencies and organization
added error handling to the ensureConnection method and improved error reporting to ensure proper exception management and provide clearer error reporting for server errors
set sCheckingEvents to true in LauncherInstrumentation . java and set mFinished to null in LogEventChecker . java to ensure proper
refactor exception handling and resource closing logic in FileSinkOperator . java to improve error handling and ensure proper resource cleanup
added diagnostic output to the task execution in SchemaGenerator . java to improve debugging by capturing diagnostic details during execution
replaced ` SemanticException ` with ` OptiqSemanticException ` in ` SemanticAnalyzer . java ` to improve error handling by using the
refactor DataSourceMonitorTests to improve test structure to enhance maintainability and readability of the test code
added caching mechanism for loaded resource paths in ClasspathMethodScanner to optimize resource scanning by reducing repeated scanning
[ hotfix ] [ test ] fix npe in testserviceutil
add handling for null input in RoutingInBoundHandler to ensure proper response is sent to the emitter when the input is null
added a nullable ` natIp ` field to ` EkeyConfiguration ` and updated logging statements in ` EkeyUdpPacketReceiver ` to
updated imports and memory allocation in AsyncTaskCopyLocalJars , WritableByteChannelAdapter , Deserializer , and Serializer classes to use ArrowByte
refactor CommitLogArchiver , CommitLogReplayer , and JdbcDecimalTest classes to improve code organization and maintainability
added validation checks for HTTP headers and bodies in the HttpConnection class and implemented a new test for unexpect behavior in RFC2616BaseTest
refactor MultiTimeout to use an AtomicReference for the ' upstream ' subscription and improve subscription handling to enhance clarity and maintainability of the
avoid start compaction when there be too many sstables to compact
added a test annotation to the TestOrcTimezone1 class to ensure proper functionality of the test cases
updated conditional logic and added substring handling for metrics and timers in Debug . java to improve accuracy in determining enabled metrics and timers based on substrings
added error handling for JSON processing in PinotSegmentRestletResource . java and simplified return statements in TraceContext . java and TraceContextTest
modified the superclass retrieval logic in JTable and added a new test class Test6888156 to ensure proper handling of column classes to avoid
added a check for the existence of the SHELL file before adding the BUSYBOX path to the arguments list to ensure the application uses
updated the method call from ` deleteWithoutSubscriptions ( 10 ) ` to ` deleteWithoutSubscriptions ( 1 ) ` in ` DatabaseCleaningService
replaced List with LinkedHashSet for testInstances in MockitoExtension . java and added dependency injection in JunitJupiterTest . java to
refactor FieldMonitor class to improve code structure to enhance maintainability and readability of the code
removed the ` deleteFilesAfterClose ( ) ` method and added ` transactionDisable ( ) ` in ` BTreeMapTest . java `
modified the iterator initialization in SortedIntList and added a new Iterator constructor to improve iterator handling and ensure proper initialization of the iterator
added JMXHelper unregistration in DefaultRemoteProxy and modified exception handling in JMXHelper to improve JMX management and enhance error handling clarity
[ hotfix ] [ config ] adjust rocksdb writebuffer size to 64mb
removed the second parameter from the constructor call in Style . java to simplify the constructor initialization by eliminating unnecessary parameters
replaced ` addArgument ` with ` addArgumentNoEncoding ` in ` FacebookShare . java ` to ensure proper handling of special characters in the message
[ hotfix ] [ samza ] remove unused json graph from samzarunner
change the name of the audio node to be ocean but not nature
rename LoopRotateBadNodeBudget . java file to improve clarity and maintain consistency in naming conventions
added TypeInformation < ? > parameter to convertToMongoType methods across multiple classes to enhance type conversion capabilities for better type handling in MongoDB operations
ggb - 1881 display i instead of i for complex inputbox
simonstewart : fix sendkeytomonewithelement . tostring ( ) return an empty array instead of an array
added a method to create a scaled instance of a BufferedImage with validation for target dimensions to ensure valid image dimensions and prevent runtime exceptions during image scaling
removed the ` extendArgumentCheck ( ) ` and ` extendWrapStore ( ) ` methods from ` DBMaker . java ` to streamline
fix for shift state update on multi - tap .
removed the DETECTED _ ACTIVITY constant and its associated methods from multiple classes to streamline the codebase by eliminating obsolete references and
updated import statements from ` org . eclipse . jetty . websocket . extensions ` to ` org . eclipse . jetty . websocket
removed import of Buildable from AaptPackageResources . java to streamline dependencies and improve code clarity
added comments to unused variables in multiple Java files to clarify the purpose of the code by indicating unused variables
updated the exception message to include the response status code to provide clearer context for the error related to the invalid upgrade protocol
reformatted the assignment of blockMode in P11Cipher . java to improve code readability and maintainability
refactor Mockito class implementation to improve code readability and maintainability
removed redundant code in Merge . java to streamline ownership check logic for plots to improve code clarity and maintainability
removed deprecated getConversationID ( ) methods from HttpContentResponse , HttpResponse , Request , and Response classes to streamline code by eliminating
replace de . sun . speech . freetts . freetts . txt with de . dfki . lt . mary . units
refactor ` stripQuotes ` method to use ` PlanUtils ` for string processing to improve code clarity and maintainability by centralizing quote
refactored the ` updateRendering ` method to use a local variable for ` RendererConfiguration ` and updated the call to ` updateChild `
added remote artifact repositories to the repository list in DefaultPluginManager to ensure all relevant repositories are included in the plugin ' s configuration
camel - 14850 : fix the unit test error of cxfrsproducerclientfactorycachetest
chore : integrate new gapic - generator - java and rules _ gapic ( # 686 )
added JUnit @ Ignore annotation to SessionTest . java to temporarily disable the test due to frequent failures
added a new File object instantiation in ZipFile . java to facilitate the creation of a File object from a specified name
added a deprecated method ` handleAll ( ) ` to the ` TryType ` class to indicate that the method should no longer be used in
fix channel default constructor to not create an invalid uid ( # 4877 )
added logging functionality to GenericDAOImpl and introduced StackTraceUtils for class package retrieval to improve traceability of method calls and facilitate easier
added a test annotation to FormLoginIntegrationTests . java to ensure proper integration testing of form login functionality
refactor unparse logic in FunDefBase and ParenthesesFunDef to conditionally handle single - argument arguments to improve flexibility
updated the GET _ CONFIGS _ SELECTED _ MORE _ THAN _ ONCE _ QUERY query and modified the configsSelectedMoreThan
corrected the spelling of " supressWarnings " to " suppressWarnings " and added a check for " jdk . internal . misc
updated JsonTreeReader to throw an exception for unexpected JSON element types and added a new test for nextJsonElement to improve error handling and ensure
added option handling for dashed arguments in TestCommand . java and a test for extra arguments in ExternalTestRunnerIntegrationTest . java to ensure
added methods ` dedup ` and ` indexSolr ` to ` SolrDeleteDuplicates ` and ` SolrIndexer ` classes to enhance functionality for managing Solr
[ hotfix ] [ table - planner ] support flink planner in stream sql example
added a call to clearDatabase ( ) in MssqlIntegrationTest . java to ensure the database is cleared before running tests
updated progress display logic and added disposal logic in Progress . java and RSSReader . java to improve user experience by controlling progress display and
added a check to ensure the parent file exists before proceeding to prevent potential errors when the parent file does not exist
added methods to write and close POIDocuments using File and IOException in IOUtils . java to enhance resource management by ensuring proper closure of
updated print statements in JavaBuild . java to include newline characters for runOptions , sketch name , and exportClassPath to improve output formatting for better
changed the type of ` _ root ` from ` Box ` to ` BlockBox ` and added getter methods for its root and dots per point
updated the apply method in CustomQueryFilterFactory to handle generic user search queries and improved test cases in TestLdapAtnProviderWithMin
added default ports functionality to NettyHttpServer , DefaultRouteBuilder , DefaultRouter , and FilteredRouter classes to enhance routing capabilities by allowing
updated SnmpTargetHandler to check if the thing handler is initialized and refactored status verification in tests to improve code clarity and ensure
update instructorfeedbackeditpageaction to filter out instructor with submit privilege
added @ Incubating and @ Deprecated annotations to AvailableSettings . java to indicate that the class is outdated and should no longer be used
refactor path parsing logic in FileResolverImpl . java and add a new WarFileResolverTest . java file to improve path handling and
updated string formatting for newFlushedSize in DocumentsWriterPerThread . java to improve clarity of log output by including document stores
fix dirt . dirt . dirt . getunlocalizedname ( ) in mod example
swapped the conditions for stripping whitespace in ImageProcessor . java to ensure consistent behavior when stripping whitespace settings
increase the number of locks per thread from ` threads ` to ` threads * 1000 ` to improve thread management by allowing more flexible locking
updated the parameter in TsFileSequenceReader from ` false ` to ` exactSearch ` and added assertions in MeasurementChunkMetadataListMapIteratorTest
[ hotfix ] [ core ] remove useless parameter in csvsaveservice # makeresultfrom delimited string
added preferred size setting for the pane in NavigationShareTab to ensure the pane displays correctly with the preferred size of the list
replaced OffsetAttribute with State in BeiderMorseFilter and added a test for custom attributes in TestBeiderMorseFilter to improve
refactor multiple Upnp - related classes to improve code organization to enhance maintainability and readability of the codebase
fix warp lens collide at x / y / z instead of x / y / z
added a new ` toJson ` method and modified import statements in ` JsonTest . java ` to utilize it to enhance testing capabilities for JSON
[ hotfix ] [ runtime ] fix typo in javadoc of mutablecontextdatasupplier
updated exception handling from Exception to Throwable in CoreContainer . java to improve error handling by logging a warning instead of throwing an exception
updated the parameter in KubernetesMockServer constructor from ` true ` to ` https ` to enable secure connections for the Kubernetes mock server
[ gr - 23211 ] use correct stamp for unarymathintrinsics in defaultjavalloweringprovider .
updated HTTP method handling in DefaultServlet to allow POST requests instead of a not - allowed status to enhance security by enforcing the request ' s
tika - 2636 -- fix the unit test error of tiffextractor
refactor error handling in ShowFileRequestHandler to set response exceptions directly to improve clarity and maintainability of exception management
added try - catch functionality to the ReflectorClassWriter and corresponding test cases to enhance error handling for thrown exceptions in the code generation process
added a ` clamp ` method to the ` Vector ` and ` Vector2 ` classes to enhance vector manipulation capabilities by allowing bounds checking
added client scope handling and modified access token creation in ChainedTokenGranter . java to ensure proper authentication and scope management in the token
updated the implementation of the BC _ instanceof class to improve type checking functionality
remove setsaveflags ( save _ all ) , use logger . instance ( ) instead
updated UaaUrlUtilsTest to use JUnit 5 annotations and added pollution prevention extension to improve test structure and ensure compatibility with the
mondrian : migrate nativequery . addscalar ( ) to return basicdomaintype instead of type
added caching mechanism for font presence status in SunLayoutEngine to improve performance by reducing redundant checks for font existence
fix size of intarraylist instance in typedset
danielwagnerhall : use sessionid instead of sessionid for get / session / : sessioid
refactor method names in BrokerRequestUtils for clarity to improve code readability and maintainability
refactor InjectorBuilderImpl to improve instance handling and order verification to enhance code clarity and ensure correct order of instances during instantiation
updated the method calls in ` BuildTargetToRawTargetNodeTransformer . java ` to use ` getBasePath ( ) ` instead of ` getAbsolutePath
added a null check for the value before parsing to ensure that a default value is set when the input is null to avoid potential NullPointerExceptions
fix a memory leak in the jabber connection when jabber be stop .
updated the DEFAULT _ LOAD _ FACTOR value from 0.67F to 0.67 to adjust the loading factor for improved performance
added a method ` getAllDataTypePhysicalVariations ( ) ` to ` VectorizationContext ` and updated related classes to utilize this new method
move zxing - client - j2se to zxing - client - j2se to avoid conflict with zxing -
updated conditional logic to return RECENTS _ CLEAR _ ALL _ BUTTON based on overview actions to improve button behavior based on overview actions
added import statement for javax . persistence . Entity and annotated the BaseActivityEventEntity class to enable proper entity management within the application
added tracing functionality to NavBarSwipeInteractionHandler , TouchInteractionService , and TraceHelper classes to facilitate debugging and monitoring
added a new class ` InvalidOptions ` to test command - line options handling to ensure that invalid options are correctly reported to the user
added a condition to log an error when the number of supported display states changes to ensure accurate logging of display state changes for better debugging
refactor OAuth20UsernamePasswordAuthenticator to use OAuth20Utils for retrieving client ID and client secret to improve code organization and maintainability by central
updated the ` _ unwrapServletException ` variable to true in ` ErrorPageErrorHandler ` and ` AsyncContextTest ` classes to enable unwrapping
set status to ShortcutInfo . DEFAULT and infoUpdated to true in PackageUpdatedTask . java to ensure proper handling of shortcut status and info
seda component / endpoint : add option to set the size of the unbounded queue to be use by default .
added batchUpdateStart ( ) and batchUpdateEnd ( ) methods to App . java and implemented their functionality in Kernel . java and App .
added HttpClient configuration and validation annotations to ThirdEyeApplication . java to enable HTTP client integration and improve configuration flexibility
added a sort parameter to the JobInstanceFetchRequest and modified the batch size retrieval in JpaJobPersistenceImpl to allow sorting capabilities in job
updated the cancelCryptoFacilitiesOrder method to return a CurrencyPair instead of throwing an exception to improve functionality by allowing cancellation of cryptocur
ggb - 1353 hide keyboard on click ( on web )
use llvm . memcpy instead of llvm . memmove for readability
reformatted code in BindLdapAuthenticationHandler . java for consistency to improve readability and maintainability of the code
make tooltip blockable by default
updated DefaultDateTypeAdapter to use a specified date style and added a setDateFormat method to GsonBuilder to enhance date formatting flexibility by allowing
updated playerSet string formatting from " < UID : " to " ( " to improve clarity and consistency in output formatting
added a check for an empty list in the List class to prevent potential NullPointerExceptions when the list is empty
added exception handling for InvocationTargetException in ParametricCallable . java to improve error management for command execution failures
added regex support to the ` getLikeExpression ` method in ` VectorizationContext . java ` to enhance the expression filtering capabilities to support regular
added start ( ) and stop ( ) methods to StreamSupplierComponent and its implementation in NativeStreamSupplierComponentImpl to provide lifecycle management for stream
added locale setting functionality to the runChild method in LuceneTestCase to ensure all available locales are set when running tests
updated multiple Java files related to PGConnection , PGStream , ConnectionFactoryImpl , DefaultJavaSSLFactory , LibPQFactory , JsonbTest
refactor context handler initialization into a separate method to improve code readability and maintainability by encapsulating context handler initialization logic
camel - 9565 : camel - osgi - add osgi test case for camel - blueprint .
nifi - 1888 : use contains instead of substring in testexecutestreamcommand .
refactor the returnTypeSubstitutable method to accept a Warner parameter and simplify type comparisons to enhance code clarity and maintainability by using
added a throttle type enum and modified processing logic in TestExecutor . java to support different processing types based on the throttling type
removed unnecessary variable assignment for pixel in ColorBleedEffect . java and added a conditional check in SpriteBatch . java to simplify code
updated annotations in mmm and ppp classes to improve clarity and consistency in annotation handling
added a new interface ` Model ` and modified ` Sheet ` and ` Workbook ` classes to implement it to enable the implementation of the `
( chore ) camel - http : use constant instead of hard - coded string
added a ` clearEntityManager ` feature to ` JpaItemWriter ` , ` JpaItemWriterBuilder ` , and ` JpaItem
added null checks for ShortcutInfo in InstallShortcutReceiver , Launcher , and Workspace classes to ensure robustness by preventing null pointer exceptions
updated instantiation of TwoDimensionalCollectionValuedMap to include a boolean parameter to allow for flexibility in handling different data types
updated exchange name from " btc - e " to " Wex " and changed host and exchange name from " BTC - e " to
added null checks for columnReaders and reader in OrcEncodedDataConsumer . java and added null check in EncodedTreeReaderFactory . java to
added null check for files in SegmentInfos . java and implemented a test for opening the reader after deletion in TestIndexReader . java to ensure
added itestdatabuilder interface to test resource creation and update
updated the return statement in DeviceHandler to handle negative and maximum percent values to ensure accurate representation of percentage values by preventing division by zero
updated limit checks from ` < 1 ` to ` < = 0 ` in ` RangeInputStream . java ` and ` RangeReader . java `
camel - 19099 : camel - core - optimize routescollector to reduce load time
improve playback position calculation for hl chunk .
updated test classes to extend LuceneTestCase instead of TestCase to align with Lucene ' s testing framework for improved testing capabilities
[ hotfix ] [ operator ] fix the outputhandler to correctly set the next input record in the operator state
removed null check before setting bitmap shader shift in Area . java and added it in Line . java to simplify code by directly setting bitmap shader shift
remove dbexists logic from blockchain
trim whitespace from the group retrieved from the matcher to ensure consistent output by removing leading and trailing whitespace
correctly set the async flag on the apr connector so that it can be use by an apr connector .
[ web ] fix divider location in applet
added new health check metrics and updated the checkHealth method in PinotControllerHealthCheck to enhance monitoring capabilities for controller health checks and improve error handling
hide the shared avatars view in the LocalFileListAdapter to improve user interface by hiding unnecessary shared avatars
remove unnecessary clientbundle from mebisresources
[ java ] fix off - by - one error and use ` < = ` instead of ` > = ` .
added a log level check before executing the command in LogInterceptor . java to ensure that commands are executed only when the logging level is fine to
replaced CountDownLatch with assertWaitUntil for checking finished spans to simplify span verification and improve readability of the test
updated the Locale initialization and added getter / setter methods in QueryParser . java to improve encapsulation and provide getter methods for locale management
fix concurrentmodificationexception when edit bibtex entry
jbrules - 282 : fix classcastexception in rulebuilder and add test case
added a new class ` OcspUnauthorized ` and modified the ` UNAUTHORIZED ` case in ` OCSPResponse . java ` to improve error
added a server state management mechanism in SSL . java to ensure that the server is in a valid state before proceeding with further operations
added open connection count functionality to SourceCounter and AvroSource classes to track the number of active connections for better resource management
fix : make executionstrategy . execute ( ) public , and add a builder method in graphqlinterfacetype .
added a new method ` getSrcRoots ( ) ` and refactored the ` createDefaultJavaPackageFinder ( ) ` method to return an
replaced OutputWriter with PrintWriter in ScriptExecutable . java to enhance output handling by utilizing the PrintWriter
[ hotfix ] [ test ] fix flaky test for filesourcetextlinesitcase
added import for DataTable and updated JRubyStepDefinition to handle DataTable instances to enhance functionality for processing DataTable objects in JRuby integration
updated visibility settings for author in SearchImagesRenderer . java and refactored parameters in ApacheHttpClientMediaWikiApi . java to improve code read
[ doc ] fix typo in readsentimentdataset javadocs
improve error message when parse formula
added bindAddress property and its getter / setter methods in WebSocketClient . java to allow configuration of the WebSocket connection ' s bind address
[ java ] move delete of archive and aeron directory to close method in consensusmoduleharness .
refactor size assignment logic in WidgetGroup to use a dedicated setSize method to improve code readability and maintainability by reducing redundancy
change sessionFixationAttribute comparison to use Boolean . valueOf for better type safety to enhance code clarity and prevent potential NullPointerExceptions
fix ( ui ) : fix bug in startonechannell ( # 1186 )
danielwagnerhall : add incremental backoff to chrome startup
added HttpMethod and httpRoute parameters to ClientResponseWrapper and updated related classes to enhance response handling by associating the HTTP method and HTTP route with the
use integer . min _ value in precompactedrow to avoid nullpointerexception
updated return statements in ICC _ Profile . java and ColorConvertOp . java , and added a new test class InvalidRenderIntentTest .
modify contribution question form to allow ' on ' a valid value for the ' contrib ' checkbox
added multiple calls to ` PublicMethed . waitProduceNextBlock ( blockingStubFull ) ` in ` ContractInternalTransaction003 . java
[ hotfix ] [ kafka ] fix findbugs issue in kafka connector
added PGConnection support to the Proxy instantiation in PooledConnectionImpl . java and implemented a test for PGConnection in BaseDataSourceTest . java
refactor PropertyTable and CloseIgnoringInputStream classes to improve code readability and maintainability
updated logging level from warn to info for token encryption secret warnings in TokenAuthenticationHandler . java to provide clearer guidance on how to use
remove deprecate code for removal in 3.0 . x
added methods to create completed command reports and send topology update events in various classes to enhance command reporting capabilities and improve error handling during Kerberos setup
added iterator handling and updated string writing methods in NamedListCodec to improve functionality and maintainability of the serialization process
fix npe in migrationmanager . assigncompletelylostpartitions when migration fails
added an import for InclusionRule and set schema inclusion rule to control schema inclusion behavior in API examples
updated the expected value of the mean and var assertions from 3.0 to 7.0 to ensure the test accurately reflects the intended
mondrian : fix ` ` x ( 0 , 0 , 0 ) ' ' for x ( 0 , 0 , 0 ) '
added methods ` getBaseName ( ) ` and ` getDimensionCount ( ) ` to ` ConstantPool ` class to retrieve base name and dimension count
added a method setDebugEvaluationOutputForNextEval to HSSFFormulaEvaluator , SheetUtil , and XSSFFormulaEvaluator classes to
test : migrate testmodule and refactormoduletest to junit 5 ( # 4649 )
modified the ExoPlayerProfile instantiation by removing the last boolean parameter and updated the isLiveTv condition in PlaybackController to streamline profile creation and ensure correct playback behavior based on user preferences
added a return statement to the DynamicStyleBar class to ensure proper termination of method execution
added SLF4J logging for REPL DUMP property changes in Utils . java to facilitate debugging and monitoring of replication dump
refactor ReactiveAuthorizationManager for improved authorization handling to enhance security and maintainability of authorization logic
updated the condition to promote both object and boolean types to ensure compatibility with both object and boolean types in MethodEmitter
rename llvmbackframenuller to llvmbackframenuller for clarity
refactor multiple Java files to improve code structure and organization to enhance maintainability and readability of the codebase
( chore ) camel - cffeine : add test case for transaction - aware cache proxy
added calculateBoundingBox method to calculate bounding box from mesh vertices to enhance bounding box calculation for better rendering accuracy
added a TargetHashFunction enum and refactored hash function handling in TargetsCommand . java to allow customizable hashing behavior based on the target
refactor DefaultConfigurationProperties for improved clarity to enhance maintainability and readability of the configuration settings
added high light color and alpha settings for multi - chart components in ListViewMultiChartActivity and updated highlight arrow drawing in BarChart to enhance
updated the mapping of ` tmpPg ` to ` sgPathPlanMap ` in ` ClusterPlanRouter . java ` to ensure proper handling of
[ hotfix ] [ camel - infinispan ] fix the test error of infinispanremoteproducerit
added functionality to check for artifact existence and create a lock file in MavenDependencyResolver to ensure that artifacts are only fetched when they are present ,
added conditional compilation for fragment shader in SpriteBatch . java to ensure compatibility with OpenGL ES features when GL _ ES is enabled
replaced SortedSet with Set for servers and tables in RSGroupInfo and TestUpdateRSGroupConfiguration classes to simplify code and improve performance by using
added a try - catch block to load the JspPage class and modified the logging level from warn to debug to improve performance by avoiding unnecessary
updated the version handling in CustomAnalyzer and added a test for version aware filters in TestCustomAnalyzer to improve code clarity and ensure compatibility with
added a test method to verify package archive info retrieval in ShadowPackageManagerTest to ensure correct retrieval of package archive information from the package manager
replaced direct method invocation with MethodUtil . invoke for better access control to enhance security by ensuring proper package access checks
added functionality to update progress listeners in Main . java and updated imports in GradleBuildService . java to enhance progress tracking and support project
removed synchronized block from AndroidWebDriver . java to improve performance by eliminating unnecessary synchronization
do n ' t throw poolinitializationexception if initializationfailtimeout = 0
renamed the method ` getResult ( int timeOut ) ` to ` getResult ( ) ` and added an ` error ( HttpResponse httpResponse )
changed the ` isNative ` field to be transient and modified the ` addEntry ` method to use a default value of ` false ` to
[ hotfix ] fix checkstyle violation in centrypointcallstubmethod
rename ruleenablehandler to ruleenablementactionhandler ( # 4566 )
fix javadoc warning , add parent and id to tagsupport
updated debug logging statements in AuthzAuthenticationFilter and AuthzAuthenticationManager to improve clarity of request handling and debugging information
[ hotfix ] [ table - common ] fix typo in kafka and upsert dynamic table test
added null check for registrant repository in UsersPanel . java to improve error handling and provide user feedback when the registrant repository is not found
added support for font file extensions " . otf " and " . OTF " in font manager to support additional font file formats in the
refactor type matching logic in AnnotationMatcher to use Class . build for better accuracy to improve accuracy of type matching based on class names
updated log level from " OFF " to " SEVERE " in Grep . java to improve error reporting for better debugging
added debug check before logging messages in FaultTolerantChunkProcessor . java to improve logging efficiency by avoiding string concatenation when debug level is
fix potential npe in surefireplugin when include / exclude be empty
added a condition to check if the home intent should move to the default screen to ensure proper handling of home intents in the launcher
updated maximum bitrate from " 110 " to " 30 " to improve performance by reducing bitrate usage
removed duplicate option retrieval logic from CommandLineParser . java to simplify the code by eliminating redundancy
trim whitespace from the description return in MutableDatabaseProperty . java to ensure that the description does not contain leading or trailing whitespace
updated the output filename path in XOMParserTest . java to simplify the output path for better readability and maintainability
do n ' t log pid when there ' s no pid
added getLoadedMusic ( ) and getLoadedSound ( ) methods to MusicLoader and SoundLoader classes to provide access to loaded
removed unnecessary import of ClassUtils and simplified type casting in OnBeanCondition . java to improve code clarity and eliminate unnecessary dependencies
added screen recording annotations to RequestPinItemTest . java to address issue b / 215673732 related to screen recording functionality
added conditional logic to set the lrPauseButton to false if it is not null in CPUFeature and MemoryFeature to ensure the lrPauseButton
refactor preferences handling to use a single method for adding and removing accounts to improve code readability and maintainability by reducing duplication
change order of send available presence to be consistent with other connection .
modified StringBuilder initialization in ObjectInputStream to use a calculated initial capacity based on utflen to optimize memory allocation for improved performance
disable statsd export in webendpoints auto - configuration test
refactor InterruptedException class for improved clarity to enhance maintainability and readability of the code
refactor ServiceTicket class for improved clarity to enhance maintainability and readability of the code
refactor connection handling logic in ConnectionCheckOperation . java to improve clarity and correctness of SSL and HTTP connection checks
modify custom ( temporary ) canconvert ( ) method for map / properties from string in preparation for spring 3.0 final
[ ds - 3952 ] fix item filter for community collection in xml workflow
removed the ` AuthenticatorActivity . class ` from the list of passcode activites and set the intent flags to reorder to the fragment to improve
refactor : remove @ deprecated annotation in patterntemplateconfigurator ( # 1188 )
changed the return type of the ` beginDraggingWidget ` method from ` void ` to ` boolean ` and added a null check for the
added JUnit @ Ignore annotation to TestPackedInts . java to temporarily disable tests related to LUCENE - 4488
added a null check for the root variable and collected components in DynamicStyle . java to avoid potential NullPointerExceptions when root is not initialized
add the confusion matrix to the test class so that it can be reproducible
refactor : make sure last _ sample _ ok be set only if it ' s set to true
added unit tests for Bluetooth connection and device state management in ShadowBluetoothHeadsetTest . java to ensure correct functionality of Bluetooth head
corrected the spelling of " autowire " to " autowired " in PropertyBindingSupportTest and PropertyBindingSupport to ensure
added " clone " method to the objectMethods set and introduced a new finalizer method to control the finalization of objects to enhance functionality by
added null checks for counters and updated warning message in IntegrationTestBigLinkedList . java to ensure proper handling of null counters and provide clearer
send not _ implemented reply when cangetinstanceinfo be not implement .
updated the registered service filter to check against the service ID instead of the service object to ensure that only valid SAML services are processed
added a null check for getActivity ( ) before invoking its runOnUiThread method to avoid potential NullPointerException when getActivity ( ) is not initialized
fix sonar issue : logger variable name should be ` logger ` , not ` LOGGER `
added getter and setter methods for the ` _ stringType ` variable in ` DatabaseAdaptor ` and modified their access levels in ` JDBCSessionDataStore
updated test methods and assertions in UIMAUpdateRequestProcessorTest . java to use suggested category instead of language to improve test accuracy and ensure
refactor thread name handling in CliDriver , SessionState , and HiveSessionImpl classes to improve clarity and maintainability of thread name management
refactor TaskletAdapter . java to improve code structure to enhance maintainability and readability of the code
[ drools - 2200 ] fix npe when evaluate an dmn model with negative value ( # 2370 )
[ macos ] enable splash screen by default on macos
added a tooltip text to the showCGCP checkbox in RocketPanel . java to enhance user experience by providing context - sensitive information
updated method calls from ` getTypes ( ) . add ( e ) ` to ` addType ( e ) ` in ` EnumFactory ` and `
show mnemonic in hot reload action ( # 5246 )
use hasspreadsheetlabel instead of islabelsimple ( ) , a suggest by valerybokov
changed the BRIGHTNESS _ FACTOR calculation from ` intValue ( ) ` to ` doubleValue ( ) ` to ensure proper type handling for
update sscm history parser to parse context and date instead of branch
added a boolean parameter to the createUser method and implemented user list and admin methods in HomekitAuthInfoImpl to enhance the user management functionality by allowing
added return type validation for indexed and property write methods in ` IndexedPropertyDescriptor ` , ` Introspector ` , and ` PropertyDescriptor ` classes
( chore ) camel - dynatrace : fix logging in dynatraceexporterv2
updated method signatures in Context . java and Response . java for consistency and clarity to enhance code readability and maintainability by using more d
fix itemstack . setcapabilitiesfrompongebuilder ( ) not be able to deserialize nbt
[ hotfix ] [ test ] fix test assertion in lifecycleutilstest
added validation checks for contract types and refactored contract retrieval logic in multiple files to enhance contract validation logic and improve code clarity
added multiple package - info . java files for various packages and modules to improve organization and clarity of package documentation
refactor the ` add ` method in ` DocumentsWriterDeleteQueue ` to use a loop for node addition to improve performance by avoiding
added a HashSet to prevent duplicate parsing of JavaFileObject objects and refactored the runTest method to improve code efficiency by avoiding redundant parsing
change default value of STRIP _ IPV6 from " true " to " false " and adjust substring logic accordingly to ensure that IPv6
added a list of parameter names to the LoginServerTokenEndpointFilter and modified the constructor to accept it to allow dynamic addition of user parameters to
added support for a new language key C _ KEY in LanguageFactory and updated language comparison logic in CPPParserTokenManager to enhance language flex
replaced the direct instantiation of ` ThreadPoolExecutor ` with a dedicated method for creating a single - thread executor in ` BuckEventBus `
updated Cache - Control and Expires headers in FormAuthenticator and added assertions in ConstraintTest to enhance response handling and ensure proper caching behavior
added exception message to the error log message to improve debugging by providing more context about the error
updated test suite imports and class names in HSSFTests . java and TestEmptyDocument . java to enhance test coverage and improve clarity
refactor FetchHTTP2Test , FetchHTTPTest , and FetchHTTPTestBase classes to improve code organization and readability
updated the output handling in TestCommand . java to check for null before retrieving the absolute path to improve robustness by avoiding potential NullPointerExceptions
added ExternalResourceControlPriority constants for before and after access controllers in Java2DRenderer . java to enhance access control control behavior during resource resolution
added error handling for ArrayIndexOutOfBoundsException in TestTriggerCoverage . java to ensure the build does not fail when a JDK fails on a Windows machine ,
changed the ` mbean ` variable to be ` final static ` and modified the ` main ` method signature , and introduced a ` testCPUTime
updated condition to check if comments are empty before processing whitespace in TabsAndIndentsVisitor . java to ensure proper handling of whitespace when comments
updated logging statements in SimDistribStateManager and modified rate assertions in TestTriggerIntegration to improve logging clarity and increase the expected rates for
updated string comparison in DatabaseChangeLog , RanChangeSet , NotRanChangeSetFilter , and NotRanChangeSetFilter to be case -
added a method to retrieve a string value from the map to provide a default value if the key is not found in the map
updated date and time formatting logic in TweetActivity to accommodate locale - specific date and time formats to ensure consistent date formatting across different
nifi - 1341 : do n ' t throw exception if there be no connection to process
refactor focus handling logic in DetailFragment . java to improve code readability and maintainability by encapsulating focus request logic
update classpath handling in App . java to ensure proper formatting of file paths to avoid potential issues with path separators
make coordmatrix . solve thread safe ( no need to create a new array )
int - 1188 add javadoc for genericmessage . getmessage ( )
updated SQL queries in PostgresConnector and MapReduceJobHistoryUpdater for improved clarity and functionality to enhance query performance and maintainability by
updated file filter handling logic in AquaFileChooserUI . java to ensure the selected filter does not contain the file filter to enhance user
refactor synchronization in P2PTransportManager . java for improved readability to ensure thread safety during the processing of content packets
updated ` ArrayPtg . toFormulaString ` to return " TRUE " or " FALSE " instead of converting a boolean to a string representation
updated import statements in PGtokenizerTest . java to use specific assertions to improve code readability and maintainability by using specific assertion methods
refactor variable handling logic in Java2TypeScriptTranslator for improved clarity and functionality to enhance variable processing and ensure correct handling of anonymous
added support for auto - increment column creation in PostgreSQL to ensure compatibility with PostgreSQL ' s auto - increment functionality
modified byte reading logic in DataInput . java to use bitwise AND instead of bitwise AND to improve readability and correctness of character handling
temporarily disable a couple of test that be fail on the ci - server .
updated the method call from ` getParent ( ) ` to ` getParent ( ) . getParent ( ) ` to ensure the correct parent component is retrieved
refactor import statements and formatting in multiple Java files to improve code readability and maintainability
use engine _ free instead of engine _ finish in test .
added a start variable and modified iteration event handling methods across multiple classes to improve clarity and functionality of iteration events
updated HttpContent handling in FormDataHttpContentProcessor and NettyStreamingFileUpload to ensure proper resource management by releasing HttpContent and File
added a call to deleteLogs ( ) in TestRecovery . java to ensure logs are deleted before proceeding with recovery operations
modified URL loading logic in BrowserActivity to launch a new activity if the URL contains " twitter : / / " to improve user experience by allowing
fix flaky test by wait for host status to be up before run the test .
updated logResult method call from false to true in VisibilityController . java to enable logging of list labels for better visibility tracking
updated the logging level for badClients . ribbon . MaxAutoRetries from 0 to 25 in RestTemplateRetryTests . java to improve
removed a print statement from TranslatorSupportTest . java and added multiple @ Override annotations in StandardTypeMapperComponent . java to clean up the code
added support for the " fraction " resource in the resource loader and corresponding converter to support fractional values in the application
removed a confirmation check for writing a file in BasicFrame . java to simplify the code by eliminating unnecessary checks
added null checks for groupId and artifactId in findNewerDependencyVersion method to ensure proper retrieval of values from resolution results
hbase - 25827 namespacestatemanager . createtable ( ) should throw quotacdexception if the number of table exceed
refactor multiple token - related classes to improve code organization to enhance maintainability and readability of the token processing logic
[ jdk - 8010500 ] [ jdk - 8010500 ] fix bug in testfuzzpreloop . java
added a check to ensure f0 is non - negative to prevent potential negative values in HTSVocoder
updated logging message from " Retrieeved " to " Retrieved " and added null checks for primary and foreign key columns in TableRetriever
simplify the way b2cconverter be handle by use a thread - safe map
added functionality to check if empty pages are allowed based on SharedPreferences to optimize performance by avoiding unnecessary processing when pages are not available
added a warning log message about the deprecation of cucumber - needle to inform users to use cucumber - cdi2 or c
replaced ` ShadowActivityWithAnotherTheme ` with ` Resources . Theme ` for theme management to simplify theme handling and improve code clarity
updated error message formatting in VerifyFast . java to use Arrays . toString ( ) instead of string concatenation to improve clarity of failure messages for
no effective change - code cleanup - remove unused @ dbmigration annotation
added a check for ` IdentNode ` in ` CodeGenerator . java ` and introduced new functions ` getProto ` and ` SETPROTOCHECK
modified the shuffle method to include a random seed parameter to enhance the randomness of the readers list
updated the display name assignment logic in UsersAndGroupsSearchProvider . java to differentiate between remote clarification and known clarification based
updated path handling in CookieRetrievingCookieGenerator to ensure a default value is provided to avoid potential errors when the path is blank
fix checkstyle issue in io / entity / jvm / attachmodel . java and jvmjvmstatmodel . java
updated backup count check from ` getBackupCount ( ) ` to ` getTotalBackupCount ( ) ` in ` AbstractCacheService . java `
updated the condition to compare pageNumber from 0 to non - 0 in ValidationResult . java to ensure that the pageNumber is not equal to the current value
added a check to ensure ` TabbingManager . focusedWidget ` is not null and equals ( ) ` before evaluating highlighted index to prevent potential
fix checkstyle issue in util / soundutil . java
refactor ApplePackageDescription to utilize a new method for retrieving the AppleCxx platform flavors domain to improve code clarity
simonstewart : add a test to make sure we do n ' t break the build
renamed the ` onConnect ` method to ` onAccept ` in ` ServerSessionListener ` and ` AbstractHTTP2ServerConnectionFactory ` to
pdfbox - 4071 : fix typo find by codespell on fossies . org
added a new file TestGetLoggerNPE . java that demonstrates potential NullPointerExceptions during logger retrieval to ensure proper handling of null
added a ` ConcurrentHashMap ` for thread - safe access in ` PathSharingContext ` and removed shared map initialization in ` ActionDirectory ` and
use compilerdirectives . castexact for unsafe access in getobjectvolatile .
added support for using " NEXT VALUE FOR " in the NextValExpression class to enhance flexibility in expression parsing by allowing both " NEXT VALUE
improve error message when resource bundle be not pre - cached
updated the buffer management logic in BoundedLocalCache and added a test for clearing pending writes in BoundedLocalCacheTest to improve performance and
added orderDirection property and its getter method to QuoineNewMarginOrderRequest . java and updated exchange specifications in QuoineExchange .
added bound initialization for properties in PropertyDescriptor and created unit tests for binding validation to ensure correct binding behavior for properties in MyBean class
replaced ` failsafeWidth ` and ` failsafeHeight ` with a new ` setDisplayModeCallback ` interface in ` Lwjgl
added a check to ensure that the parent form ' s buttonsAwatingRelease is null before setting it to null to prevent potential null pointer exceptions
fix text wrap width for linecell ( fixes # 527 )
updated error message formatting in XSLTErrorResources _ it . java to improve readability and consistency of error messages
replaced HashMap with LinkedHashMap for paramValues in CustomChangeWrapper and CustomPreconditionWrapper classes to maintain insertion order for the parameter values
simonstewart : use string . format ( ` ` % s ' ' , ... ` ` ) instead of string concatenation ' '
replaced the retrieval of the namespace URI with a direct method call to simplify the code and improve readability by eliminating unnecessary context checks
added configuration option for nested joins in multiple test files to enable nested joins functionality in the testing framework
fix the bug in listvirtualmachines api - root admin can not be use by root admin
added caching functionality for JavacFileManager in SourceFileManager and updated CompletionTaskProcesor constructor to include cursor parameter to enhance file
added configuration settings for METASTOREURIS and HIVE _ AUTHORIZATION _ MANAGER in TestMsgBusConnection . java to ensure
updated import statements in KuduIOIT . java and XmlIOTest . java to use Hamcrest ' s assertThat
add nullability annotation to outputhandler to avoid crash
fix ( ilp ) : fix symbol file mapping bug
removed print statements for termFilter and otherTermFilter in TermFilterTest . java to clean up the test output and improve readability
removed the ` Reflection ` class and updated imports in ` Jooby . java ` and ` TypeConverters . java ` to streamline
refactor ` ThreadlessExecutor ` to replace ` ExecutorService ` with separate ` isFinished ( ) ` and ` setWaiting ( ) ` methods
refactor DateTimeFormatter exception handling and add a new test for handling 2 - argument DateTime exceptions to improve error handling and ensure proper handling of null values
rename CHUNK _ LENGTH to CHUNK _ LENGTH _ KB and introduce a method to calculate the chunk length in KB to improve clarity and consistency
added a new case for WILDCARD in Types . java and created a new file T7034495 . java with generic interfaces to prevent
replaced a ' do ' loop with a ' while ' loop in LotsOfEvents . java to improve code readability and maintainability
updated conditional checks for ` c ` and ` Hop . HopChar ` in ` TransclusionDecideRule . java ` to ensure
do n ' t print micronaut version by default
added assertions to verify the handling of the " Print _ Area " formula record in TestBugs . java to ensure correct functionality and validation of name
modify MindIconFactory to include a description string when the name starts with a slash to ensure proper formatting of icon descriptions for better readability
updated onHomeIntent method to accept a boolean parameter indicating internal state to enhance flexibility in handling home intents based on the internal state state
replaced direct usage of ` getPreferDependencyTree ( ) . orElse ( false ) ` with a boolean variable ` preferDependencyTree ` to
added ` showDetails ` method to ` FileDisplayActivity ` and modified ` FileDetailFragment ` instantiation to include ` activeTab ` parameter to
updated function names from " $ apply " to " apply " and " applyStatic " across multiple files to simplify method naming and improve code read
fix a bug in minimalencoder that cause the high - level symbol to be encode incorrectly .
[ log4j2 - 1349 ] improve the output of the sourcebuilder to be more readable .
added a call to notifyDataSetChanged ( ) in FolderSyncActivity . java to ensure data is updated when data changes
removed the method ` setDefaultWALSyncMode ` from ` ShadowSQLiteConnection ` to streamline the code by eliminating unused functionality
updated type checks in RemoveJavaDependenciesAdapter and added assertions in Collections . java to improve type safety and ensure proper functionality of collection operations
camel - 15836 - camel - aws2 - s3 : remove unused public method from aws crt - asyncclient
updated test cases in ParserTest . java to check for corrupted stream out of bounds length to improve accuracy of password validation messages
improve assertion message in hazelcasttestsupport # testcollectioncontent
[ fix ] do n ' t add a goto if if we ca n ' t find a condition
mow - 1343 fix for image not load in some case
refactor SQLXML class for improved performance to enhance efficiency of SQL query processing
updated the ` getOrderBook ` method to include a ` limit ` parameter and modified related method calls to enhance order book retrieval by incorpor
rename gotwrongoomeexception to heapoomeexception
set maxstringlength to int . max _ value for jackson stream read constraint in standarddataflow
modified the way engines are retrieved by changing the default value from configuration to an empty string to ensure that engines are retrieved without potential null pointer exceptions
updated class names and formatting in TimerWheel . java and TimerWheelTest . java for clarity and consistency to improve code readability
return a good error message if a custom bug pattern can not be generate
updated the timeout duration in LocalChunkProviderTest from 3 seconds to 10 seconds to improve readability and maintainability of the test code
changed the visibility of the uncomplete checklists menu item from true to false to hide the uncomplete checklists menu item for better user experience
refactor DefaultResultSetHandler to resolve discriminated result maps and introduce a new Contract class to enhance handling of constructor arguments for improved
added null checks and unregistration logic for defaultHome and mUpdateRegisteredPackage in OverviewComponentObserver . java to ensure proper handling of null
removed the import and annotation for VertxGen in PumpImpl . java to streamline code generation by eliminating unnecessary dependencies
removed unnecessary type casting when accessing mContainerActivity in FileDetailFragment and OCFileListFragment to simplify code and improve readability by directly using
fix config attribute editor to trim leading and lead space
rename ` ClassUsingAnotherAuxiliary ` and ` SelfClassWithAux ` classes to improve clarity and consistency in naming conventions
[ gr - 23211 ] fix module unnamed in jdk9 +
added a check for the presence of " pg _ " in the " r " case of DatabaseMetaData to determine the relKind based on the
chore : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18 . 1
updated case numbers from - 1 to 1 in ThriftHiveMetastore . java and HiveMetaStore . java to correct the logic for
added a new module - info . java file for the core package to define module exports and dependencies for better modularization and modularization
added logic to handle flushing state and fill state checks in SslConnection . java to ensure proper handling of flush states and improve robustness of fill
refactor Log4j2LogDelegateFactory to improve logging functionality and add NoExceptionInInitializerErrorTest class to enhance error handling and ensure
7029048 : [ testbug ] jdk / jfr / event / test7029048 / test702
refactor multiple operation classes to improve code organization to enhance maintainability and readability of the codebase
replace null with " org . postgresql . ssl . LibPQFactory " in PGProperty . java to ensure compatibility with the LibPQFactory
disable the interprocess semaphore test until it can be fix
refactor theme key handling in EditableResources . java to use a sorted list to improve code readability and ensure consistent ordering of resource names
added a new file ` OSvTerminal . java ` and modified ` TerminalFactory . java ` to support OSV terminals to enhance terminal
added additional file extensions " . gr " and " . grs " to the conditional check in ClassType . java to support additional file extensions
replaced ` HashMap ` with ` TreeMap ` for combined vectors in ` DrillTestWrapper . java ` to ensure consistent iteration order for vector
added a condition to check if the index is within the range of names and values to ensure that the loop only proceeds if both names and
refactor WebSocketPolicy class for improved readability to enhance maintainability and facilitate future updates
changed static boolean fields and methods in ShadowTelephonyManager and ShadowWifiManager to instance variables and methods to improve object - oriented
add option to perform template - based / origin - based / default - based resolution to standardmessageresolver . resolvemessage ( )
updated constructor and subclass handling in AsmUtil . java to use asSubclass for MethodVisitor and ClassVisitor to enhance type safety and reduce
added a new class LoggingAuditService for auditing user authentication events to facilitate logging and monitoring user authentication status in the application
updated ` toTemperatureState ` method to accept nullable ` TemperatureObject ` and ` TemperatureDataPoint ` parameters to enhance robustness
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 395 : do
camel - 8705 : camel - http should use proxy from java system property to configure http proxy .
( chore ) camel - template : upgrade template template to version 1.2
added a call to jdkSerialFilter ( ) in System . java to utilize the jdkSerialFilter class for serialization filtering
add the pool size of the exchange factory in the info log message
replaced ` forceFinished ( true ) ` with ` forceFinishScroller ( ) ` in multiple animation classes to simplify the scroller termination
updated the parameter name in the ensureRealtimeClusterIsSetUp method from ` realtimeTableConfig ` to ` rawRealtimeTableConfig `
[ java ] report a fatal error when try to resolve a reference
refactor inline QSB handling in InvariantDeviceProfile to use closestProfile and introduce new constants for rotation options to enhance flexibility and
updated the ` createClassPath ` method to include exception handling and improved URL decoding to enhance code robustness by ensuring proper handling of character encoding
updated regex patterns in @ Given annotations to allow wildcard matching to enhance flexibility in method parameter validation
fix npe in toolkit . setproperty ( ) and pgraphicsjava2d . setimage ( image )
replaced hardcoded timeout values with a configurable timeout variable in FaultToleranceTest . java to improve flexibility and maintainability by allowing dynamic timeout
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a method to set the Docker image URL in the Environments class to enable dynamic configuration of the Docker image used in the environment
added call to system . gc ( ) in kryanagenttest that do n ' t need to call system . gc ( )
updated AdditionalAnswers , AnswerFunctionalInterfaces , and InvocationOnMock classes to improve code clarity and maintainability
replaced ` createHardLink ` with ` copyFile ` and added error handling for file existence checks to improve file copying functionality and provide clearer
refactor ( doc ) : remove unused method in asyncoperationdocprovider and operationdocprovider
[ pytorch ] add device check to functioninfo and fix ndarray . zeros ( )
added a check for ` Xml . Document ` before visiting XML nodes in Autodetect . java to ensure only valid XML documents are
refactor NotesHelperTest and ReminderHelperTest to use AndroidJUnit4 and InstrumentationRegistry instead of extending InstrumentationTestCase to
fix : add gaslimit and parent gaslimit rule to commonconfig
changed the visibility of ` setupData ( ) ` from public to private and modified its access level in multiple test classes to enhance encapsulation and
renamed the variable ` autocommit ` to ` runInTransaction ` in the ` ChangeSet ` class to clarify the purpose of
added a null check for the listener in TripleServerStream . java to prevent potential null pointer exceptions during stream closure
[ hotfix ] [ doc ] update documentation for restart strategy
added a new test method ` testIssue154 ( ) ` to ` SelectTest . java ` to validate SQL parsing and deparsing for discount
refactor Common class to improve code organization to enhance maintainability and readability of the code
refactor Launchable class to use try - with - resources for better resource management to ensure proper closure of resources to prevent memory leaks
refactor StreamExecDeduplicate class implementation to improve code readability and maintainability
[ hotfix ] [ kafka ] log kafka exception when send message to topic
datajpa - 9 - add miss setpersistentpropertyaccessorfactory ( ) method to simpleelasticsearchpersistententity and simpleelasticsearchpersistent
refactor setCoord method to return a boolean indicating success or failure in GeoCoordSys1D . java and add setCoord method in Geo
added scroll handling logic and logging for velocity and distance limits in AskGestureEventsListener . java to improve gesture event processing and track scrolling behavior
change ngramestimator to compare by key rather than by value in order to improve the accuracy of n - gram estimation
updated imports from ` cucumber . runtime ` to ` io . cucumber . core . runtime ` across multiple files to align imports
updated method call in StatsLogCompatManager to retrieve folder icon properties to enhance functionality by retrieving additional properties from the folder icon
updated method calls from ` getServerSlogan ( ) ` to ` getServerName ( ) ` in ` ThemeUtils . java ` to ensure
- xx : - uselooppredicate = + stressIGVn and add test for skeletons
added a handler setter and modified the equals and hashCode methods in SelectionHighlighter . java to enhance the handling of selection events and improve object comparison
added a new ` StringResultConverter ` class and updated ` AsmRuntime ` and ` AsmUtil ` to use it for string conversion
camel - 19751 : camel - core - remove disabledifsystemproperty and replace with @ disabled
updated the condition for waiting on a single object in JansiWinSysTerminal . java to ensure that the console waits for a single object
added null checks for the buffer before setting it limit in the setInBuffer method to prevent potential NullPointerExceptions when the buffer is not initialized
updated the assertion in TestSolrDiscoveryProperties to use File . separator instead of a leading slash to ensure compatibility with different file path formats
updated the operating system checks in AutoUpdaterServerProperties . java to handle Windows and macOS more robustly to ensure compatibility with macOS and
updated Lock class to use a String lockName instead of a File object to improve flexibility by allowing the lock name to be passed as a
updated the launcher object reference from " appIcon " to " allApps " and changed the method for retrieving visible bounds to improve clarity and
updated references from ` Invocable . InvocationType ` to ` InvocationType ` in ` ClientDatagramEndPoint . java ` to improve code
corrected a typo in the SQL query string from " oreder " to " order by " in JdbcStepExecutionDao . java
updated button handling in LwjglInput . java to return - 1 instead of BUTTONs . LEFT and added a check for unknown buttons
make taskrestrepositoryit # testclaimedtasks not require the reject parameter
replaced instances of ` logger ` with a static final logger in multiple response builder classes to improve logging consistency and maintainability across the codebase
modified the expiration time calculation in SsoAccessTokenProvider and updated test methods in SsoAccessTokenProviderTest to improve accuracy of token expiration time handling
[ geos - 8470 ] skip some test that fail on github build
added alarm suppression request methods to ` GreetResourceMockedTest ` and updated imports in ` OciMetricsCdiExtensionTest `
reordered conditional checks for the default close operation in JFrame . java to improve code readability and maintainability
refactor database connection handling in LibraryScanner . java to use a try - with - resources statement to ensure proper resource management and avoid potential NullPointerException
updated metricsContext handling in SuggestComponent to use the superclass ' s initializeMetrics method to ensure proper initialization of metrics context for better metrics management
updated file and folder handling logic in OCFileListFragment . java to improve clarity and functionality of footer display based on file and folder counts
change default value of hash known hosts from " yes " to " no " in ScpServerTestSupport . java and change return type of
[ hotfix ] [ source ] fix typo in sourceversion javadoc
added a new test class ` ThreadFactoryTest ` to validate the ` MyThreadFactory ` implementation to ensure that the ` MyThreadFactory `
refactor lockPeriod retrieval to utilize dynamicPropertiesStore for improved flexibility to enhance flexibility in handling lock periods based on support for
added initialization of TicketModel in EditTicketPage to ensure proper ticket management functionality
changed the feature flag for " ENABLE _ PREDICTION _ DISMISS " from false to true to enable the option for dimiss
updated constructors in various assertion classes to include the self - type parameter to enhance type safety by associating assertions with the actual assertion class
added a new menu item for quoting and modified its visibility in TweetActivity . java to enhance user experience by allowing users to quote tweets
move lock out of while loop to avoid deadlock
rename ` ` codec passthrough ' ' to ` ` decryptonlycodec ' ' in mediacodecaudiorenderer
added a conditional check for the result before offering and closing the failure consumer in ServerHTTP2StreamEndPoint . java to ensure that failure handling
updated German and French XSLT error messages from " Stiller Modus " to " Silent - Modus . " to improve cl
added ThreadSafe annotation to CheckpointsCleaner . java to enforce thread safety for concurrent operations
replaced ` Observer ` with ` Subscriber ` in ` MockRestAdapter ` , ` RestAdapterTest ` , and ` RestAdapterTest `
removed unnecessary braces around the try - catch block in ComponentPresetManager . java to improve code readability and maintainability
added a configuration option for using unique column names in Hive and updated assertions in TestJdbcDriver and TestJdbcDriver2 to ensure unique column names
fix for ticket : 282 -- make sure we do n ' t replace the default voice
added session validity check and exception throwing in Session . java to ensure that an invalid session does not cause runtime exceptions and improve error handling
hhh - 14650 remove unused exceptionhelper . getrootcause ( )
fix ( jcex25519 ) : change default key length to 255
added codec setting for Lucene41PostingsFormat in TestBlockPostingsFormat3 . java to ensure compatibility with Lucene41Postings
[ hotfix ] [ checkpoint ] add debug log for empty header list
added support for RSA / ECB / OAEPPadding algorithm in the OperatorHelper class to enhance security by enforcing the use of O
updated references from DARWIN _ AARCH64 to Platform . MACOS _ AARCH64 across multiple Java files to ensure compatibility with the
catch securityexceptions and log them instead of swallow them
simplified the conditional check for OS . IS _ UNIX in AbstractTest . java to improve code readability and maintainability
added error logging and modified the default return value in FileUploadUtils , ControllerConf , and UploadRefreshDeleteIntegrationTest to improve error handling and
replaced ` newDisposableByteBuffer ` with ` newUnsafeByteBuffer ` and added memory freeing functionality to improve memory management and ensure proper memory
changed the value of USE _ PIPELINE _ DOWNLOADER from false to true to enable the pipeline downloader functionality by default
updated DST _ OFFSET setting in SimpleDateFormat . java and added a new Bug7130335 . java file for time zone testing to ensure
refactor variables in AllAppsView . java to use local variables instead of repeatedly calling mRollo . mState to improve code readability
server : do n ' t add default hypervisor to vr if there be no default
refactor StringBuffer methods for improved performance to enhance performance and reduce memory usage
added ruleUID assignment to RuleResource . java to ensure the rule ' s UID reflects the correct rule context
added a null check for the listener before unsubscribing to avoid potential NullPointerExceptions when the listener is null
added a new property ` PRETTY _ PRINT ` to the ` JoltTransformJSON ` class and modified the way JSON strings are converted
make access _ table public so it can be access from outside package .
updated error messages in ` DataSourceInitializer ` and ` DataSourceInitializerInvokerTests ` to specify that no resources were found at the specified location to improve
refactor do run ( ) to dorun ( ) so that it can be override by subclass .
[ ci ] fix checkstyle violation in control and controlfactory
added parameters for effectiveClusterVersion and isUpgradeSuspended in AmbariManagementControllerImpl . java to improve handling of upgrade suspension
danielwagnerhall : update copyright notice for findbycselector
removed the initialization of the ` wfields ` list from ` writer . getFields ( ) ` to streamline the code by eliminating unnecessary
added encryption and signing key size settings in OAuthProperties to enhance security by using a default encryption and signing keys
hbase - 25827 addendum remove useless method getcolumnfamilystats ( ) from htabledescriptor
replaced the use of AllowedResourceAliasChecker with a lambda expression for adding alias checks to improve code readability and simplify the alias check logic
refactor ObjectInputStream , ObjectOutputStream , ObjectStreamClass , and package - info classes to improve code organization and maintainability
[ java ] make cluster interface extend idlestrategy and add reset method to clusteredserviceagent .
modified the initialization of the writer in ChunkedWriter . java to correctly increment the currentChunkID before creating a new SequenceFile . Writer instance
added a new file AbstractJobExecutor . java that implements the JobExecutor interface to provide a standardized way to execute job executions with a listener
replaced the return statement with a replayFuture assignment and modified the replay logic to improve clarity and maintainability of the recovery process
rename ` hugeStaticBase ` to ` staticBase ` in ` HugeResourceTest . java ` to improve clarity and consistency in
added a method to retrieve service IDs based on the discovery configuration to ensure that the service IDs are only returned when the Consul client is enabled ,
replaced ` Float . floatToIntBits ( ( float ) Math . random ( ) ) ` with ` SecureRandom ( ) . nextInt (
improve trace of compilation failure during runtime compilation
updated currentStart and baselineStart calculations to include aggTimeBucketMillis to ensure accurate aggregation of time values in time comparison
updated the ` answer ` method in ` CallsRealMethods ` to return a GloballyConfiguredAnswer for abstract methods to enhance functionality by allowing stub
refactor ` checkPackageAccess ` method to accept ` Class ` instead of ` String ` for improved type safety to enhance security by ensuring
updated ` ContextPathPluginTest ` to extend ` AbstractPluginDataInit ` and added error configuration setup methods to enhance plugin functionality and ensure proper
remove bold font from contrib table , use font from toolkit
added REQUEST _ HAS _ TIS case handling in QuickstepTestInformationHandler and TestInformationHandler , and modified related conditions in LauncherInstrument
replaced the try - catch block with a writeAccess method for mutex access in ConnectAction . java to ensure proper thread safety during connection handling
updated method and variable types from ` String ` to ` BuildTarget ` in ` TargetsCommand . java ` to improve type specificity and cl
[ j2kt ] fix javadoc issue in j2kt - internal module
added handling for HOME and END operations in the Less . java file to improve functionality for home and end navigation in the terminal
removed synchronization around the retrieval of connected plots in PlotHandler . java to simplify the code by eliminating unnecessary synchronization
replaced the existing package installation check with a new intent creation for launching a folder chooser to streamline the process of launching activities
removed the public access modifier from the constructor of the Roster class to enforce encapsulation by restricting access to the constructor
added basic constraints to cert generation in TestUtils . java to enhance security by enforcing stricter certificate validation
added a new test method ` testFixedNestedTransform ` to ` TextVisualRegressionTest . java ` to address failures due to incorrect transform
simplified the assignment of precisionStep in TrieDateField . java and TrieField . java to improve code readability and maintainability by
removed the TaskbarStateHandler class and updated BaseQuickstepLauncher to utilize its functionality directly from BaseQuickstepLauncher to simplify the codebase
added a new file ArrayLength . java to test array field access to ensure proper handling of NoSuchFieldException for array types
wait for process to be destroy before shut down hzstartit
replaced the ` @ Singleton ` annotation with ` @ ApplicationScoped ` and introduced a new ` init ` method in ` ApplicationSettingsService `
updated assertions and logic for handling new value in Safepoint . java to ensure that newValue is always greater than or equal to 0 and
updated threadNameField to use " Ljava / lang / String ; " and changed return type from charArrayToString to stringOopToString
updated DEFAULT _ RAND _ SEED from System . currentTimeMillis ( ) to 42 in Lucene90HnswGraphBuilder . java and
use stroke ( ) and font ( ) instead of strokeimpl ( ) in java2d
refactor expression expansion logic into a separate method ` expandDynamicStar ` to improve code readability and maintainability by reducing duplication
added a new method ` findInterestingChildren ( ) ` to initialize ` _ header ` and ` _ children ` records of type ` Comment
added import for Messages and set status code to PMS 141 in HTTPServer . java to provide a warning icon for the application ' s
fix mouseevent . getmodifiers ( ) and mouseevent . getclickcount ( ) in web
countleading / trailing - zeros : use nodecycle . cycles _ 3 instead of nodecycle . cycles _ 6
fix npe in entityparser when disposition notification be not set
refactor Locale class for improved readability to enhance maintainability and facilitate future updates
added a clearLog button and a clear method to the ErrorConsoleController class , and implemented clear functionality in the ErrorConsoleViewModel and Log
set mRecentsAnimationController to null in RecentsView . java to ensure proper initialization of the animation controller
updated Debug . java , CaptionMap . java , DummyCaptionMap . java , and DummyCaptionMap . java to utilize LocaleHolder for
added connection pooling methods to ConcurrentBatchIdentifierTest and SequenceOptimizerIdentifierTest , and modified data source handling in AbstractTest to optimize resource management
[ java ] add operablink to the list of supported driver .
add a dialog to inform user when a file can not be download
added new Lifx product entries for various cryptocurrency types in LifxProduct . java to enhance functionality and support for additional cryptoc
added asynchronous request handling in OverseerCollectionProcessor and modified CollectionHandler to use AddReplica in CollectionsAPIAsyncDistributedZkTest to
removed redundant variable declarations and improved code readability in PostgresDatabase and PostgresDatabaseTest classes to enhance code clarity and maintainability
updated LogPanel and SummaryPage to use objectId instead of repositoryName to ensure consistent reference to the repository ' s head when creating LogPanel instances
skeletoninter bone wire now use unit _ XYZ for the parent tail , not unit _ y
added a method to destroy the Android browser component and modified the deinitialization logic to improve resource management and ensure proper cleanup of the Android browser
added waitForActiveCollection ( " readApiTestViolations " ) call to AutoScalingHandlerTest . java to ensure that the test waits for active
refactor the loop to use an index - based approach for processing elements in ScreenTerminal . java and update imports in Tmux . java
updated controller state checks in SoftResetAction . java to include specific controller states to enhance the accuracy of soft reset actions based on the current controller
disable on - disc stream cache to speed up texture pack reloading .
added parentFolder assignment in Request . java and RequestV2 . java to ensure proper handling of media resources when a specific condition is met
network offering : rename ispersistent to persistent to avoid confusion .
updated FileOutputStream to implement a custom close method that deletes the temporary file to ensure proper resource management and prevent potential memory leaks
added error handling for 403 responses in StandardGitHubRepository . java to improve debugging and provide clearer feedback when a 403 response is received
log4j2 - 1343 add the original messagefactory2adapter . getoriginal ( ) method to the messagefactory2adapter interface
added @ SuppressWarnings ( " BanSerializableRead " ) annotations to DataSizeTest , DurationTest , and SizeTest classes to suppress warnings related
updated regex pattern from " ( 0 - 9 ] { 1 , 2 } ) " to " ( 0 - 9 ] { 1 , 3
set initial and dismiss delays for tooltip manager in ExtractionModelFrame to improve user experience by providing a smoother and smoother
refactor ProjectCommand to use a passed - in targets set for project generation methods to improve code clarity and maintainability by centralizing target
added timezone setting and assertion for time formatting in TimeTest . java to ensure correct handling of time zone in tests
refactor MediaSessionConnector class to improve session handling logic to enhance performance and maintainability of media session management
use the ssl implementation from the endpoint instead of create a new jssefactory instance
updated the accuracy display string in GpsLoggingService . java to use the current location ' s accuracy instead of the altitude to improve accuracy accuracy
added functionality to enable or disable futures in the Binance exchange to enhance trading efficiency by avoiding unnecessary order processing
refactored admin account management to use table instead of list
hbase - 25827 set acceptqueuelength in thrifthttpcliservice to maxworkerthreads ( jesus camacho
replaced direct calls to ` getClass ( ) . getName ( ) ` with a static final property ` PROPERTY _ DISABLE _ WATCHER
http : / / issues . apache . org / activemq / browse / amq - 2652 - allow jmsfactory to handle
replaced ` parseError ` with ` validationError ` in ` DrillSqlWorker . java ` and updated test expectations in ` TestWindow
removed assertion for duration in GCInspector . java to ensure duration is always non - zero for a really fast collection
fix : nodewithjavadoc # getjavadoccomment should return empty optional instead of null
added OS - specific handling for reserved memory access in ReserveMemory . java and modified method signature in WhiteBox . java to improve memory management
added calls to ` checkForRegionClosingOrSplitting ( ) ` in ` IndexRebuildRegionScanner . java ` to ensure proper handling of
hbase - 2698 hbaseadmin # waitforoperation should print the procid , not the operation type
camel - 14263 : camel - cxf - do not use reflection to invoke cxf service . thanks to michael
refactor YamlChangeLogSerializer to use a dumpAsMap method for databaseChangeLog to improve clarity and maintainability of the serialization process
updated print statements in SchemaPrinter . java to include a newline character to improve formatting of output for better readability
updated regen logic in DebugRoadRegen . java and modified schematic handling in SchematicHandler . java to improve road
replaced ` getContext ( ) ` with ` getActivity ( ) ` in ` HomeFragment . java ` to ensure the correct context is used for
updated Hibernate annotations to use the ` @ GeneratedValue ` annotation with a ` @ GenericGenerator ` name and added a ` @ GeneratedValue
removed the country parameter from the getSystemTimeZoneID method and related code to simplify the method signature and improve code clarity
updated the write method in BZip2Codec to include position and remaining bytes , and modified ByteBuffer allocation in TestBZip2Codec to improve
simonstewart : move the startlogger ( ) method from appw to appframe
added a constant VALUE _ TYPE _ EMPTY to the Type class and modified the Value class to use it for type initialization to improve clarity and
replaced equality checks with ` equals ` method for group comparisons to improve readability and maintainability of the code
refactor Liquibase and LiquibaseDropAll classes to improve code organization and maintainability
refactor SimplexNoise class implementation to improve code readability and maintainability
added a new method ` newInstanceExact ` to the ` TargetGraphFactory ` class to facilitate the creation of ` TargetGraph `
fix typo in columnfamilystorembean . getmin / max / mean row size method name
fix json serialization of mod metadata
added logic to handle previous and current elements in the NativeArray class to ensure proper deletion of elements when the element does not already exist
updated file handling in FileUploader to use the parent file ' s ID instead of the local file path to improve file management by ensuring the correct
added a new file UTF8ReaderBug . java to test supplementary character handling in XML parsing to ensure proper handling of supplementary characters in
added unit test base on user forum issue
replaced " ethbtc @ depth / ethbtc @ depth @ 100ms " with " ethbtc @ depth / ethb
added a ` resetAllocation ` method to the ` Wrapper ` class and called it in ` SimpleParallelizer ` to reset allocation variables to ensure
removed unused import of AssertTree in AmbariManagementControllerTest . java to clean up the code and improve readability
refactored property handling in Agent . java to synchronize access to ensure thread safety when accessing system properties
refactor ModelUtils methods for improved readability to enhance maintainability and reduce complexity in the code
refactor methods in AbstractDoubleArrayAssert for improved clarity to enhance code maintainability and readability
refactor width and height calculations in Legend . java to include bounds checking for the last label to ensure accurate calculation of width and height based
added methods ` testDelay ( ) ` and ` testAbort ( ) ` to ` CodeFirstSpringmvcIntf ` , and
replaced the retrieval method from ` d . get ( fieldName ) ` to ` d . getValues ( fieldName ) ` for array access and added
replaced CxxLink rule resolution with BuildTargetSourcePath in Omnibus . java to improve code clarity and maintainability by
make ` ` download late ' ' command disable by default
changed ` Collection ` to ` List ` for ` filePaths ` in ` MediaFolder ` and introduced ` numberOfFiles ` field in ` Media
removed the " - b " argument from the arguments in the AidlStep and GenAidlTest classes to streamline command line
delete java . sql . statement from oblindinganalysis ( # 79 )
added a TODO comment to the FakeHttpLayer class to temporarily disable the test for future development
[ hotfix ] [ runtime ] remove error handling from embeddedleaderservice
fix compositediscoveryclient . reduce ( ) to return empty list instead of empty list ( # 6693 )
[ hotfix ] rename ` applysystemconfiguration ` to ` applyqualifiers `
[ hotfix ] [ doc ] update jobmanager . execution . max - prior - execution - attempts option description
refactor methods to replace ` updateNoWidgetsView ` with ` updateRecyclerViewVisibility ` and update visibility logic based on adapter type to improve
fix npe in multiversionxmlparsertest when woodstox be not on classpath
refactor ` AuditAliasCommandIntegrationTest ` to initialize the ` ProjectWorkspace ` within the ` setUp ` method to improve test structure and ensure
removed unnecessary logging statements in WidgetsFullSheet . java and WidgetsRecommendationTableLayout . java to clean up unused logging and improve code
( chore ) camel - cxf : disable failing test
added error handling around the update ( ) method in CachedStore . java to improve robustness by logging exceptions during periodic refresh failures
refactor ChainingAuditPrincipalIdProvider and CasCoreAuditConfiguration to use @ RequiredArgsConstructor and improve provider management to enhance code clarity
patch from josh from bug # 44494 - fix bug # 44494 - allow automatic color to be use in cell style
updated ZonedDateTimeFormatterBenchmark . java for improved test coverage to enhance reliability of date formatting calculations
added a new method ` shouldBufferUpdate ` to ` DistributedUpdateProcessor ` and created a corresponding test class ` DistributedUpdateProcessorTest ` to
added a condition to check if the rocket stage is null along with the motor being null to ensure that the code handles cases where the stage
added / editreplace / / editscript / / editreplace / / editscript / / editreplace and / / editscript / / edit
[ hotfix ] [ config ] fix checkstyle violation in extendedmastersecretextension
changed the declaration of the InputProcessor variable to be final to ensure that the processor variable cannot be reassigned after initialization
added a listener to notify when the end of the stream is reached to improve error handling by notifying when the end of the stream is reached
added " CUBE " to MySQLDatabase . java to support additional database features
added a try - catch block around the rm call in TestReplicationHandler . java to handle potential IOException during the removal of the snapDir
refactor ` ExperimentalRobolectricTestRunner ` to ` MultiApiRobolectricTestRunner ` and update related method names
fix defaultokhttpclientfactorytest to not use reflection
refactor BatchUpdateException , PreparedStatement , and Statement classes for improved clarity to enhance code maintainability and readability
added null check for variable ' os ' in RawMessageContentRedirectInterceptor . java to prevent potential NullPointerException when ' os ' is not initialized
ggb - 1353 fix for ` ` 3d point ' ' and ` ` 3d point ' ' in algebra view (
added a new parameter ` fromCli ` to the ` jailerMain ` method and modified its implementation to conditionally throw a ` RuntimeException
refactor HttpRequest class to improve code readability to enhance maintainability and facilitate future feature additions
added preference for pulling unread status in shared preferences to ensure unread status reflects the latest pull status
fix a bug in the isnullnode that lead to an npe if the parent be an object .
updated Box2DTest . java , Pong . java , OrthographicCamera . java , and OrthographicCamera . java to
fix crash when try to edit comment in viewpostdetailfragment
updated logging level from trace to warn for background operation abortion to improve logging granularity for better debugging and monitoring
fix a bug in the jimplebodybuilder when a method be declare as abstract .
make sure pointerup callback be run on ie10 +
updated the ` getNotificationUsers ` method to include ` deviceId ` parameter in ` NotificationManager ` and ` CacheManager ` to enhance notification user
updated the base URL in CGIARProvider . java from " http : / / droppr . org / srtm / v4
removed unnecessary listeners and set bottomPanel to null in MotifFileChooserUI . java , and added a new class bug6520101
change return type of hollowdiffui , hollowhistoryui , hollow explorerui . gethistoryui . handle ( ) to boolean
refactor methods in BuildRuleResolver for improved null handling and type safety to enhance code clarity and maintainability by reducing redundancy
added visibility control for transportSpinner based on makingShortcut condition to improve user interface responsiveness based on the makingShortcut state
added null check for attributes _ field in lint augmentation and introduced new classes with annotations in T7043371 and T70734
do n ' t show the back button if the back button be n ' t click .
added support for long view index functionality in QueryServices and updated getViewIndexDataType method to improve flexibility in handling view index data type based on
updated string concatenation from " v " to " v " in SDRTrunk . java to improve clarity and consistency in string representation
updated private key path handling in PrivateKeyParserTests to use StringUtils ' cleanPath method to improve path validation by removing leading and trailing slashes
removed the columnPosition parameter from the diffDropColumn method and related calls to simplify the method signature and improve code readability
updated IndexWriter and IndexWriterConfig instances to use TEST _ VERSION _ CURRENT instead of LUCENE _ 40 to ensure compatibility with the
hbase - 25819 add option to disable column family check in importtsv ( # 2321 )
[ java ] use logsubscriptionid instead of logrecordingchannel to avoid deadlock .
replaced calls to ` startActivity ( intent ) ` with ` startActivitySafely ( intent , " onClickVoiceButton " ) ` and
added a condition to return early if the first element of the jsonNodeNew array equals " i " to optimize performance by avoiding unnecessary processing
refactor Procedure class to improve code readability to enhance maintainability and facilitate future modifications
updated resource bundle loading to include default locale and system class loader to ensure consistent resource loading across different locales
[ j2kt ] add pass to normalize array creation for kotlin
added checks for mincount and hasAnyCount before incrementing position and counts in PerSegmentSingleValuedFaceting . java to ensure proper handling
fix modmetadata . getauthorlist ( ) return an empty list if there be no author
added a new file OSGiTest . java with tests for Gson annotations and misc imports to ensure compatibility with the Google Gson library and
nifi - 1348 : fix concurrency issue with enable referencing service
hbase - 2698 htable . flushasync ( ) should not clear buffer on fail
test ( refactor ) : fix bug in ctscanner , defaultjavaprettyprinter , signatureprinter , and annotationtest
add hasuserdata ( ) method to property and override it in simplefeatureimpl
removed ` throws HiveException ` from method signatures in ` DDLPlanUtils ` and ` ExplainTask ` classes to simplify error handling by removing
refactor RelyingPartyRegistration class to improve code structure to enhance maintainability and readability of the code
added a method to enable logging in the JavaCompiler class to ensure all logging handlers are logged for better debugging
added a new class ` InJavaSourceSet ` that extends ` JavaIsoVisitor ` to handle Java source set visitors to facilitate
updated resource loading logic in TestGDALParser . java to use a variable for the fits filename to improve readability and maintainability of the
added a new method ` createGetter ` that accepts a ` Object ` and an ` String ` attribute to facilitate the creation of
removed the useExtStorage boolean check from the SDK version check to simplify the condition for better readability and maintainability
added a new constant for " indexer . nocommit " and modified related classes to utilize it to control commit behavior in the indexing process
createvolume - add validation for diskofferingid parameter in createvolume api
added null check for ' result . text ' in ToHtml . java and updated assertion message in BaseTestCellComment . java to ensure '
added checks for instances of ` Period ` in ` LocalDate ` , ` LocalDateTime ` , and ` ZonedDateTime ` classes to ensure proper handling of `
added a new file ` Issue382 . java ` to handle specific error types in the server feature to provide a structured way to handle specific
replaced the custom ` signum ` method with a static import for ` Integer . signum ` and simplified the return statement to improve code clarity
added a condition to hide the text view in the AttachmentAdapter to improve user interface by hiding the text when certain conditions are met
fix : check for ctreference instead of ctnameelement in jdtimportbuilder
simonstewart : fix an issue with the firefox driver where the profile be n ' t be retrieve .
add bucketpickup for liquid block ( # 54688 )
fix intermittent ci failure
updated the time zone from " PST " to " America / Los _ Angeles " in LocaleProviders . java to ensure accurate
log4j2 - 1349 optimize distincterrorlog to reduce object allocation
updated TEST _ NIGHTLY , TEST _ WEEKLY , TEST _ AWAITSFIX , and TEST _ SLOW to use TestGroup
log4j2 - 1343 sql execution logger should be create only once
deny access to method , field , and proxy in graalcontext
change to use getdataelements ( x , y , c , d ) instead of getrgb ( x , y , width , height ,
updated HiveAbstractReader to use partition reference instead of table reference to ensure accurate transactional properties are added for partition information
updated the logic for determining scrolling behavior in the launcher overlay to improve clarity and functionality of overlay scrolling behavior
added new classes UnmodifiableBatchImpl and UnmodifiableBatchBuilderInitiator for improved batch building and initialization to facilitate the use
improve error message for unexpected analysis error
added a new class ` MockWithStaticStateDemo ` and a test method ` spyingOnAClassRetainsState ` to ` Mock
added a new test method ` testUnionWithBracketsAndOrderBy ` to ` SelectTest . java ` to ensure correct parsing and deparsing of
refactor security handling in SecurityUtil to handle null UGI scenarios to improve robustness by ensuring proper execution of actions when ugi is not
updated error handling in OpenALMusic . java to include the error code in exception messages to improve debugging by providing more context on the error
camel - 8705 : camel - quartz should use endpointhelper . resolveparameter instead of reslovestringparameter
updated the logic for creating SQL types based on the unscaled value and scale to ensure correct handling of precision and scale values in the Rex
refactor code to use Optional for safer null handling in WebAuthnMultifactorDeviceProviderAction . java to improve code readability
updated the assertion in the updateAccount method to use a string representation of the current time to ensure the test accurately reflects the current time
replaced instances of ` AxialStage ` with ` RocketComponent ` in ` BasicFrame . java ` and refactored selection logic
added getter and setter for the longRunningTime variable in mmm Args . java and ppp Args . java to allow configuration of the long
updated priority adjustments in FindRefComparison . java and RefComparisonWarningProperty . java , and added a new class Ideas _ 2012 _
replaced deprecated ` sun . misc . Service ` imports with ` java . util . ServiceConfigurationError ` and ` java . util . Service
[ geot - 5508 ] fix xlsdecimalbinding . tostring ( ) to return plain string
simplified assertion statements in TestRestClientRequestImpl . java to improve readability and maintainability of the test code
updated the condition to check if the reference database matches the comparison database before attempting to ensure unique constraint validation only occurs if the reference database matches the
refactor ` addAndroidConstants ` method to return early in ` IjProjectTemplateDataPreparer . java ` to improve code clarity
replaced direct assertions with awaitility for request retrieval in DuplicateCookieTest and SessionRenewTest to improve test reliability by ensuring that requests are
added user _ args and is _ daemon , and timestamp fields to the ImmutableMap in ChromeTraceBuildListener . java and its test to enhance the
svm : improve performance of resource bundle lookup
[ hotfix ] [ planner ] fix mislead trace log message in hepplanner
added a new file TheRockMetaDataDemo . java to demonstrate exchange metadata retrieval and printing currency pairs to facilitate
added ` strictfp ` to ` FloatingDecimal ` and ` FormattedFloatingDecimal ` classes , and implemented a ` testStrictness `
removed the unparseIdentifier call from the columnNamesBuilder append method to simplify the column name handling by directly using the original column name
added a test for replacing variable declarations in Java templates and updated the method signature in BlockStatementTemplateGenerator to improve template transformation accuracy and reflect cursor usage in context - free templates
added a condition to check if the method is not synthetic in InstantiateStaticClass . java and introduced a new test method in Bug1282 .
replaced ` projectFilesystem . getPathForRelativePath ( basePath ) ` with ` basePath ` in ` WorkspaceAndProjectGenerator . java ` to simplify
added functionality to handle pending rescues in the IkStepDefinition class to improve resource management and error handling during message processing
modified the ` equals ` and ` hashCode ` methods in multiple type classes to provide default implementations for equality checks and hash code generation
added a method to retrieve the SyncLevel enum and updated its initialization to improve flexibility in setting the SyncLevel based on user - defined configuration
make controlcommandtest more tolerant to slow machine
added a condition to check if the slice state is not RECOVERY to ensure proper handling of recovery scenarios in the recovery process
swapped the order of parameters in the create method call in opencv _ core . java to improve code readability and maintain consistency in
added sdkPath to AppleBundle and modified makeProcessExecutorParams method to accept ExecutionContext to enhance process execution configuration by incorporating
[ hotfix ] [ runtime ] use cleanup callback in blobserver and blobcache
cloudstack - 8563 : fix the typo in log message for static nat
refactor PasswordEncoder and StandardPasswordEncoder classes for consistency to improve code maintainability and readability
added conversion logic for sort and union row types in HiveSortLimitPullUpConstantsRule and HiveUnionPullUpConstantsRule to ensure correct data
refactor BetterBlockPos class to improve code readability to enhance maintainability and facilitate future updates
updated the method to retrieve the proxy using the class loader to ensure the proxy is retrieved with the correct class loader context
refactor version handling and warning settings for nightly builds to improve code clarity and maintainability by centralizing version management logic
updated LoggingExecutor and JdbcExecutor to handle trailing / ' s in SQL statements to improve SQL statement formatting for Oracle databases
add ` ` findbugs . nullderef . assumensp ' ' property to disable npe detection .
fix test which randomly fail on slow ci server
updated BLOB _ SIZE , PLAY _ MARGIN , SLIDER _ MARGIN , and modified time formatting logic in Draw
added a call to ` addMultifactorAuthenticationProviderBypass ( duoSecurityPrincipalMultifactorAuthenticationProviderBypass ( ) )
refactor findPositionForNewNodeBestAreaFit and findPositionForNewNodeContactPoint methods for improved readability to enhance code cl
( chore ) camel - kie - k : fix javadoc warning
added methods to set and get a help page in PMS . java and updated HelpTab . java to use this new help page to enhance
added GeocodeProviderFactory and Constants interfaces to the project to provide utility functions for geocoding and managing notes in the application
updated import statements for CharArraySet in LuceneAnalyzerUtil . java and LuceneTokenizer . java to align with the correct package structure for
[ hotfix ] [ test ] remove unnecessary rule from test class
[ py4j ] do n ' t try to delete object in python proxy if the object id be unknown .
updated conditions in ` SegmentsInfoRequestHandler . java ` and modified collection name in ` CollectionsAPISolrJTest . java ` to improve cl
update calculation of numPredictiveAppCols based on phone type to ensure correct number of app columns based on device type
added a new method ` hasScalarSubqueryInput ` in ` JoinUtils ` and updated its usage in ` NestedLoopJoinPrule `
add a new blockbuildcraft to make it easy to remove block from the client side .
updated layout parameters for drag - and - drop functionality in DeviceProfile . java to improve layout responsiveness and alignment of drag - and -
use start ( ) instead of run ( ) in yahoosession to avoid race condition
removed the standAloneClient flag and updated the client shutdown logic in HiveMetaStoreClient . java and Hive . java to simplify the client
updated the getDisplayScript method to accept a DISPLAY category parameter and added a test for bug 7079486 to ensure the correct display script is
replaced static imports of ZkStateReader . BASE _ URL _ PROP and ZkStateReader . CORE _ NAME _ PROP with
replace ThreadLocalRandom with a random instance in StoreDirectTest . java to improve performance by avoiding unnecessary thread - local randomness
added a check for the launcher ' s readiness before processing favorites , screens , icons , and widgets in LauncherBackupHelper
updated IllegalArgumentException messages to include context in error messages to improve clarity and debugging by providing more context in error messages
( chore ) camel - resilience4j : added unit test base on user forum issue
rename variables and methods related to bar space from " BodySpace " to " BarSpace " across multiple classes to improve clarity and consistency in
refactor ShadowProcess class to improve code structure to enhance maintainability and readability of the code
( chore ) camel - file - messagetest : use hamcrest assertion instead of junit in integrations /
added debug logging statements to multiple loggers in Grasscutter . java to facilitate easier debugging and troubleshooting
changed the ` highlightCnstScrRngQuery ` variable and methods to be static in ` SpanScorer . java ` and updated
added a new method ` getState ( ) ` and modified the condition in ` Launcher . java ` to check for ` Workspace . State .
refactor multiple array assertion classes for consistency and clarity to improve maintainability and readability of the assertion framework
added a conditional check for ` args . cacheable ` before notifying new templates in ` SnippetTemplate . java ` to ensure templates are only
added a new constant SCOPE _ SOLR _ CORE and modified related classes to manage core scope sessions to enhance scope management and improve data handling
updated the table name from " CREATE TABLE " to " CREATE TABLE " and added assertions for primary keys in DatabaseMetaDataTest to improve clarity
[ pantheon ] rename ` ` permissions - config - path ' ' to ` ` permissions - config - file ' '
refactor session creation logic in HttpSessionContextIntegrationFilter for improved clarity and functionality to enhance readability and maintainability of session handling logic
added a new file TestIfWithDeadRegion . java with a class for testing string manipulation with a supplier to demonstrate the use
rename english ud to englishusd so that it would well reflect our new naming convention
refactor test concurrent access handling in SnowflakeIdGeneratorTest to enable and disable the high - resolution timer to improve test reliability by ensuring
added a static UI setting to AppSettings and modified MainFragment to conditionally show a toast bar based on its value to enhance user experience by
refactor the Privilege return statement to use a lambda expression instead of an anonymous class to improve code readability and ensure proper resource management
replaced ` setParameter ` with ` setParameterIfAbsent ` for setting parameters in ` SamlRedirectLogoutHandler ` and added a check for non -
updated dialog messages in MEncoderVideo , NavigationShareTab , and PluginTab to use localized string retrieval to improve user experience by providing localized messages
tika - 2692 -- add mime detection for file with mime type ` ` x - tika - ooxml ' ' and
added debug logging for loading glue and feature paths in multiple classes to improve visibility into the loading process and facilitate easier debugging
camel - 16400 : camel - eip - documentation - enricher - fix xml output for camel - main and camel - spring -
do n ' t wait for migration to complete when a node be remove from the version list
fix ( deviceconfiguration ) : set default capture device if no capture device be specify
added a WebsocketConfig class and modified WebSocketClient methods to accept a ShenyuConfig parameter to enhance WebSocket configuration flexibility and allow
refactor CacheValidationListener to implement ISuiteListener and introduce result queue management to enhance listener functionality and improve resource management during test execution
updated content length handling in MoreIndexingFilter to check for non - empty values before adding to the document to ensure only non - empty content length
fix possible deadlock in defaultsolversolverjob
refactor createTimeseries method to use internalCreateTimeseries for handling PathAlreadyExistException to improve code readability and handle potential PathAlready
added a method ` check ( boolean result ) ` to the ` Authz ` class to provide a mechanism for checking the result state
changed access modifier of several methods from public to protected in multiple classes to restrict access to these methods for better encapsulation
cloudstack - 7803 : add reservation rule to the list public ip range in the case of reserve public ip range .
update HttpParser to initialize _ valueString to an empty string instead of null to ensure proper handling of HTTP compliance and improve test clarity
refactor thread initialization to use a new method ` threadCompleteInitialization ` for better clarity to improve code readability and maintainability by central
add ` getExternalStoragePublicDirectory ` method to ` ShadowEnvironment ` and create a corresponding test class ` EnvironmentTest ` to enhance functionality for external
[ jbrules - 2865 ] add test case to reproduce problem with mvel type coercion
refactor code to use diamond operator for type inference in LoggingConfig . java to improve code readability and maintainability
updated log message to include exception message to improve debugging by providing more context on the exception during the construct process
fix parsing of tel : a : b : b : a : b : a : b : a : b : a : b :
refactor visibility logic for shared file in FileListListAdapter to improve readability and maintainability of the code
deprecated the HIVEOPTSORTDYNAMICPARTITION setting in HiveConf . java and updated its usage in TestTxnCommands3 . java to
updated constructors and variable names in ExecuteStatementOperation and Operation classes to improve clarity and consistency in naming conventions to enhance code readability and
replaced instances of ` Lists . newArrayList ` with ` Arrays . asList ` in ` BTCMarketsStreamingAdapters . java ` and `
[ geot - 5029 ] fix ogrdatastoretest to use gettype ( ) instead of getname ( )
removed the method ` onErrorInStep ` from ` StepListenerSupport ` to streamline error handling by eliminating unnecessary method
refactor wallet methods for improved readability to enhance maintainability and ease of understanding for future developers
camel - 15836 : camel - netty - http should use host and port if ssl be enable .
replaced ` System . out . println ` calls with ` Log . info ` and ` Log . error ` calls in ` TestNonBlocking
added a boundary check for the row index in the connection list to prevent out - of - bounds errors when accessing the connection list
add a new rule to detect method with the same name as the enclosing class .
added ExtendedPlatformComponent class and integrated its methods into ManagementFactory to enhance platform management capabilities by integrating platform - managed beans
replace double quotes in SQL statements with single quotes to ensure proper handling of special characters in SQL queries
updated resource paths in test files to include " org / knowm / xchange / bleutrade / dto / " prefix to ensure tests
refactor text escaping logic in TextEscapeUtils . java to improve code readability and maintainability
added a filter parameter to the AbstractSpatialFieldType and modified the FilteredQuery instantiation to allow dynamic filtering based on local parameters to enhance flexibility
updated the email handling logic in GpsLoggingService and added a post method in AutoEmailHelper to ensure that the auto - email is sent
replace ArrayList with HashSet for inlinks in Inlinks . java and improve iterator usage in LinkDb . java and LinkDbReader . java to
added a synchronized stopScan method to remove overscroll results in the TradfriDiscoveryService class to ensure proper cleanup of overscroll
updated filter test methods to accept a boolean parameter for filtering behavior to enhance flexibility in filtering behavior based on server - side behavior
added " Abandoned " status to TicketModel and updated related statuses in TicketBasePage to include a new status " Closed " to enhance ticket
change default value of columnAliasPrefix from " c " to null in multiple platform classes to ensure consistent handling of null values for columnAliasPrefix
updated data type from Text to BytesWritable in LlapRowRecordReader and LlapRowInputFormat classes to improve data handling and compatibility with
add a warning log when run on a 32 - bit jvm on a 64 - bit system .
pdfcopy : fix a bug where the parent / b attribute be not be correctly copy
added a new option ` DAEMON ` to the ` OptionEnum ` class and implemented the daemon mode in ` TerminalClient ` to
added a new file ` FlushIndexTask . java ` that extends ` PerfTask ` to facilitate the flushing of the index
take into account the bmt threshold when create a sstablewriter .
added support for SEASONS output in MediaLibraryFolder . java to enable sorting functionality for additional media formats
added a new file ` LocalSocketAddress . java ` that implements a DatagramSocket using an IPv6 address to test the functionality of IPv6
updated grid size points in GridSizeMigrationTask . java to correct the coordinates for grid size calculations
replaced calls to ` getName ( ) ` and ` getFields ( ) ` with direct access to ` name ` and ` fields ` from `
added read - only context management to the Context class to enhance security by preventing operations on read - only contexts
refactor LookAndFeelCommand class for improved readability to enhance maintainability and clarity of the code structure
updated the calculation of ` lastRunEnd ` and adjusted the condition for ` offset ` in ` BlockBoxing . java ` to ensure accurate
added EOFException handling to the assertion in GracefulStopTest . java to ensure proper exception type validation for closed channels
refactor locking mechanism in NetJavaImpl . java by replacing manual locking with direct method calls to improve code efficiency and readability by reducing
refactor NetworkParameters class for improved clarity to enhance maintainability and readability of the code
updated account asset optimization handling in DynamicPropertiesStore . java to ensure correct configuration based on the allowAccountAssetOptimization setting
added a new constant J9 _ GC _ POLICY _ NOGC with a value of 0 to manage garbage collection policies effectively
added error handling for valid contract proto validation in TransactionCapsule . java to improve robustness by throwing a specific P2pException for invalid
remove exceptiontypechecking in favor of strictexception
updated resource retrieval to use " en / " prefix and improved logging message formatting to enhance localization support and provide clearer error messages
added a new file ` ProcessorInfo . java ` to manage CPU processor availability to provide a mechanism to determine the number of available CPU cores and
add - html option for generate html output ( default stylesheet be default . xsl )
[ logback ] fix nullpointerexception when logbackxmllocation be not set
refactor handling of update events in HostLevelParamsHolder and ServiceComponentRecoveryChangedEvent to improve clarity and maintainability of the code to enhance
updated the handler creation logic in SleuthTagPropagationAutoConfiguration and added new test cases in SleuthTagPropagationAutoConfigurationTests to
refactor RustCompileUtils to use a switch statement for determining dependency type to improve code readability and maintainability by using a switch statement
modified the ` oauth2LoginLinks ` method to accept ` MultiValueMap < String , String > ` as a parameter and added error handling to
hbase - 15978 halfstorefilereader . getfirstkey ( ) do n ' t seek to the first key in the
hhh - 14709 - add @ generationtiming annotation and deprecate @ generationtype . value ( )
add test case for layer norm with nan
refactor showShareFile methods to utilize FileOperationsHelper for sharing file functionality to improve code organization and maintainability by centralizing file sharing
added a new test class ` LiquibaseUpdateMojoExecutionTest ` to validate the execution of ` LiquibaseUpdate `
convert the proxy type string to uppercase before setting it to ensure consistent handling of proxy types across different environments
add a mod _ minecraftforge class that initialize the dungeon loot
refactor JdbcDatabaseSnapshot to improve column caching logic and introduce a flag for all table columns to enhance performance and maintainability by reducing
added a container with a CSS border and a label to the CSSBorderTest class to enhance the UI with a styled label and improve the
added a new ` RetryableStatusCodeException ` class and modified ` LoadBalancerAutoConfiguration ` and ` RetryInterceptorAutoConfiguration ` to use it to
change layout parameter from FILL _ PARENT to MATCH _ PARENT in CellLayout to ensure layout consistency by using MATCH _ PARENT instead of FILL
updated the construction of the parentTaskName to use currentTimeMillis ( ) instead of nanoTime ( ) to improve accuracy of task naming by using the current
added error handling for invalid Add Service Request input in ServiceResourceProvider . java to improve robustness by providing clearer error messages when invalid input
indexdatabase . accept ( ) : do n ' t accept versioned file if they do n ' t exist
[ giac ] do n ' t evaluate x [ 0 , 1 ] when x = = - 1 , x = = 2
refactor AnonCipherWithWantClientAuth class to improve code organization to enhance maintainability and readability of the codebase
added multiple @ Deprecated annotations to ProducerTemplate . java to indicate that certain methods are outdated and should no longer be used
refactor JLayer class to improve code structure to enhance maintainability and readability of the code
make evictiontest more tolerant to slow machine
refactor encode logic in Md5PasswordEncoder to use a single encodePassword method to simplify code and improve readability by eliminating
refactor code to directly use mTaskRecyclerView for adding and removing global layout listeners to improve code readability and maintainability by reducing
refactor Response class to improve code structure to enhance maintainability and readability of the code
fix max timestamp to be long . max _ value in sstablemetadata . readmetadata ( )
set preferred size of securitypanel to 200x60
added a null and empty check for replies before compressing replies in multiple classes to ensure that replies are only compressed when they are not empty or
replaced Apache Commons Lang ' s ToStringBuilder with Java ' s Objects and added custom equals and hashCode methods to HitbtcBalance
fix ( sql ) : support order by clause in order by clause
updated the return statement in RetriesExhaustedWithDetailsException to use addrs . toString ( ) instead of a variable to improve clarity
replaced manual action handling with OpenCookie for opening the file to simplify code and improve code readability by eliminating redundancy
updated HTTP client imports and initialization to use the latest version from ` org . apache . http ` to ` org . apache . http . impl
update energy calculations in PipePowerWood . java to use the minimum value of requestedEnergy and remove unnecessary energyUsable checks to simplify energy
added a check to delete the temporary output file if it exists before creating a new one to ensure the temporary output file is deleted if it does
updated the JSON property name from " order _ type " to " id " in the BitstampWebSocketTransaction constructor and added a new test method
improve handling of expiration in replaysubject . peekstatetime ( )
updated expectedCitation string formatting in CitationStyleGeneratorTest . java to improve code readability and consistency
added a new SQL statement for inserting media entries into the database and updated the default video HDR format handling to improve performance and maintainability by
show definition for equation in exam , default to prerelease
fix a nullpointerexception in sipcommtextfieldui when there be no component
hbase - 25827 set cache size for meta scan when startrow be null ( chunhui )
updated the initialization script name from " q _ test _ init . sql " to " q _ test _ init _ for _ minimr .
refactor Math and StrictMath classes for improved consistency to enhance code maintainability and readability
added a new BooleanFlag ENABLE _ TRANSIENT _ TASKBAR to FeatureFlags . java to provide a debug flag for enabling transient task
[ hotfix ] [ runtime ] fix checkstyle violation in accessexecution
added a condition to set density to 3f when scale is 3 to ensure consistent density representation when scale is 3
rename the ` optional ` field and related methods from ` optional ` to ` vararg ` in the ` Parameter ` class to improve clarity
hbase - 20619 regionstatestore . getregionstate ( ) should log stacktraces at info level , not at info
[ hotfix ] [ test ] fix flaky asserttrueeventually in testclusterupgradetestutils
updated warning log message and refactored connection handling in AsyncHttpConnection . java , and renamed AsyncContextTest class to LocalAsyncContextTest
added a new parameter ` showArrow ` to the constructor of ` SearchUiManager ` to control the visibility of the arrow icon in the search
added a break statement in Database . java and modified the lock mode handling in TestRowLocks . java to ensure proper handling of read committed locks
skip bigintegertest on linux amd64
updated input handling in Scalars . java to differentiate between Integer , StringValue , and IntValue types to improve type safety and clarity in
updated primary key validation logic in CreateTableStatement . java to ensure that only one or multiple primary keys are specified to improve error handling for invalid
added conditional checks in CellLayout , Hotseat , and Launcher classes to set drawable resources based on LMP status to improve UI
improve error message when no isolate to query for flutter view
added methods to configure headers in HeadersConfigurer for various content type options , XSS Protection , caching control , HSTS Protection
refactor methods in ObjectEnumerableAssert for improved clarity to enhance code readability and maintainability
danielwagnerhall : rename ` ` smoketest ' ' to ` ` distributedcdptest ' ' , and
added type attribute to @ aggregateroot in eventsourcingrepositorytest
added support for prebuilt libraries in Python binaries and updated related tests to ensure proper handling of prebuilt libraries in the in - place binary
added client authentication handling in NetServerOptionsConverter and refactored initialization in HttpServerOptions to improve client authentication management and ensure consistent initialization across the
updated paths in HiveConf and MetastoreConf to use the system ' s name instead of hardcoded paths to ensure compatibility with different user
refactor task view retrieval logic in RecentsView . java to handle primary and secondary task views more efficiently to improve code clarity
add a timeout to the test so that it do n ' t fail on slow machine
removed the clearAll ( ) method from DataTableTopComponent . java to streamline code by eliminating unnecessary method calls
rename controller to flowcontroller so that it would well reflect our new terminology .
[ hotfix ] [ table - common ] fix the exchange count in operator tree generation
added import statement for ClassLoaderHandler in module - info . java to enable class loading functionality in the project
fix problemvisitor . solve ( ) not work in event thread
added JsonIgnore annotation to ApplicationSettings . java to exclude certain fields from JSON serialization
updated the condition from checking if throwable is null to checking if throwable is not null to ensure that the code correctly handles cases where throwable is not
replace direct access to queryInfoMap with a local variable queryInfo to improve code readability and maintainability
fix auto workbench crash when there be no material
fix gl200 text decoder ( fix # 269 )
rename ` timeColumnName ` and ` timeFieldSpec ` to ` incomingTimeColumnName ` and ` incomingTimeFieldSpec ` for clarity to
removed duplicate calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` in ` HttpShieldTrc20
ww - 4352 add support for inject a custom factory when create a container
( chore ) camel - core - instrument : add longtasktimer . sample to timerobservationhandler
changed the data type of SYNC _ DELTA _ RATE from float to double and updated calculations for fetch time to improve precision and
add a warning in abstractfragmentinsertiontagprocessor about the deprecation of unwrapped fragment expression
changed the type of ` _ attributes ` from ` HashMap ` to ` ConcurrentHashMap ` to ensure thread - safe access to the attributes collection
resolve http : / / issues . apache . org / activemq / browse / amq - 2692 - fix for amq
added new color constants and modified the extractInto method to handle fallback color extraction to enhance color extraction functionality and improve handling of dark text hints
add data folder accessibility check to source folder list in sketchbuilder
updated the return value of ` OmniNotes . java ` and modified ` appendContent ` method in ` NotesHelper . java ` to
removed initialization of sessionRegistry with a new instance to simplify session management by eliminating unnecessary object creation
added logging for reconnection completion and error handling in the NettyStreamingService to improve debugging and error tracking during connection reconnection
replaced instances of ` Factory ` with ` Proxy ` in multiple test files to utilize the internal Javassist proxy implementation instead of
replaced ` ConcurrentLinkedQueue ` with ` ConcurrentHashSet ` for thread management in ` QueuedThreadPool ` to improve performance and reduce contention
simplified exception message construction by replacing StringBuilder with String . join for improved readability to enhance code clarity and maintainability by redu
added a check to verify if the view directory is under the repository to ensure proper handling of views under the specified repository directory
remove some dead code from tabpane
added " - XX : + UseCompressedClassPointers " JVM option to multiple test files to ensure compatibility with the use of compressed class pointers
removed error logging for non - active or replay state in PeerSync . java to simplify error handling for updates not in active or replaying states
deleted the ConnectionHook . java file to the class is no longer needed for the current implementation
removed unused ` waitForReplicasInSync ` variable and related assertions in several test classes to streamline the code and improve clarity regarding synchronization handling
( chore ) camel - swagger - java : fix the test error of camel - swagger - java
updated version handling in ApexLanguageModule and added hasNamespaceGuardedAccess method in TestAccessEvaluator to ensure compatibility with the current version and
fix a couple of javadoc warning in the tree annotator
refactor AggregateEngine to use a singleton instance and update thread pool usage to improve thread management and ensure proper shutdown of the executor service
updated WebSocketAsyncConnection to accept a ByteBufferPool instead of using StandardByteBufferPool to improve memory management by utilizing the configured buffer size
added scrollToPositionWithOffset calls to rvThumbnails in UploadActivity . java to improve user experience by allowing navigation to the top of the
fix ( griffin ) : fix duplicate column name error ( # 2321 )
refactored animation handling in LauncherAnimUtils and added transition animation in LauncherStateTransitionAnimation to improve code clarity and enhance animation
added a check to disable the default user agent in the HttpClient configuration to ensure proper handling of user agent settings in HTTP requests
added pubsubhubbub functionality to ApplicationSettings and modified FeedRefreshUpdater to conditionally handle pubsub updates based on application settings to enhance functionality by
changed the access modifier of the finalize method from public to protected to allow subclasses to override the finalize method
added support for synthetic classes in the StubJarClassEntry class to ensure proper identification of synthetic classes in the stub jar generation
add a dummy web application that do n ' t work with the rest api
added null check for leftTableAlias in CalcitePlanner and implemented getTableAliasContainingColumn method in RowResolver to ensure correct table alias is used
[ hotfix ] [ runtime ] fix trigger key format in jobgenerator
updated logging statements to use ` warn ` level instead of ` info ` for transaction broadcasting failures and improved error handling to enhance visibility and
fix test failure on slow ci server
updated the initialization of ` rcfileOptimizedWriterEnabled ` and ` rcfileWriterValidate ` in ` HiveClientConfig . java ` to ensure
added a new enum ` TlsClientCertPolicy ` and integrated it into ` GitBlitServer ` for client certificate policy management to enhance
added a debug log statement to indicate that a new alert message has been saved to improve traceability and debugging of subscription issues
added headers to the ProxyWebSocketHandler constructor and modified WebSocket request handling to allow customization of WebSocket protocols based on request headers
added debug logging for HiveQueryResultsFetchReq in HiveQueryResultSet . java to improve traceability of query result sets for debugging purposes
removed the dimension name formatting from the HolidayEventFormatter to simplify the output for better readability and clarity
updated method names and logic for handling inner classes in FinalizePrivateFieldsTest . java and added an isInnerClass method in FinalizePrivateFields .
refactor UnexpectedJobExecutionException class for improved clarity to enhance code maintainability and readability
deleted the module - info . java file and simplified button opacity logic in AquaLookAndFeel . java and AquaUtils
updated the handling of maximum frequency in DrillSidewaysQuery and DrillSidewaysScorer to use maxCost instead of maxFreq to
added a new entry for GeoDegeneratePath in classRegsitry to support GeoDegeneratePath functionality in the standardObjects class
removed the ' preFill ' parameter from multiple pool constructors in favor of default behavior to enhance flexibility in pool management by allowing pre - filled
updated TaskbarLauncherStateController and TaskbarStashController to update taskbar state based on launcher state and apply state to ensure taskbar
updated conditional checks for default style and style removal in CascadeDeleteVisitor . java to enhance null safety and prevent potential NullPointerExceptions
fix marqueelabel so it do n ' t overlap the label .
refactor icon assignment logic in FileTreeViewHolder . java to use TreeFileExtension for file extensions to improve code readability and maintainability
replaced ` isEqualTo ` assertions with ` contains ` for qualifier checks in ` ParallelUniverseTest . java ` to improve readability and
added synchronize when iterate over synchronizedmap
add nativesupportprobabilityfunctionqueries test for native
added ShutdownThread . deregister ( this ) to ClientContainer . java to ensure proper resource cleanup during application shutdown
hhh - 14627 - fix drop temporary table after use in sybase ase15
danielwagnerhall : remove htmlunit workaround for color value in htmlunitdriver
refactor multiple Solr - related classes to improve code organization to enhance maintainability and readability of the codebase
refactor LinksIndexingFilter to improve code structure to enhance maintainability and readability of the code
updated the hex string format for reserved memory addresses in VirtualAllocCommitUncommitRecommit . java to improve readability and clarity of the
do n ' t refresh source info if there be no ad group
refactor equality check in MultimapSubject to use a boolean variable for clarity to improve code readability and maintainability by suppressing the
updated the string resource from ` deg _ text ` to ` unit _ hz ` in ` fetchPropertyValue ` method calls to improve clarity
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
replaced the creation of a TreeMap with a constructor that initializes it directly from includedLabelSets to simplify the code and improve performance by reducing
[ fix ] [ runtime ] fix npe in vanilla flat vertex lighter
added tracing context tags for gRPC messages in multiple interceptor classes to ensure that messages are logged in the correct tracing context for better traceability
replaced the use of ` ZoneId . of ( timeZoneStr ) ` with ` TimeZone . toZoneId ( ) ` for timezone conversion
added ` AsyncBucket ` class and modified methods in ` Bucket ` , ` Bucket4j ` , ` ConfigurationBuilder ` , and ` Extension ` to support asynchronous operations and custom time measurement to enhance the library ' s functionality to support async mode and improve time precision configurations
added regex pattern matching for class path validation in resexhausted003 . java to improve error handling when the classes directory is not found in
reformatted code for consistency and improved readability to enhance maintainability and adhere to coding standards
refactor OngoingStubbing class for improved readability to enhance maintainability and clarity of the codebase
modified the ` Main . java ` and ` Daemon . java ` classes to incorporate an ` Optional < WebServer > ` parameter
renamed the productConstructor variable to constructor and updated its usage in HttpClientUtil . java to improve clarity and consistency in naming conventions
added a check to clear the thread allowlist if it is not already empty to ensure that the thread allowlist is properly cleared to avoid potential
replaced the method ` setOutputSource ` with ` setItemWriter ` in ` TransformerWriterItemProcessorTests . java ` to improve clarity by
[ drools - 5390 ] skip ddtanalyser . findgaps and ddtanalyser . findOverlaps
add a test for sliding window combine to pcollection . combinefn ( )
added a conditional check for ` allAppsDirty ` before binding all apps in ` LauncherModel ` to ensure app binding only occurs when `
removed the check for the " Running " attribute in ManagedFileWatcherReloadStrategyTest to streamline the test by eliminating unnecessary assertions
corrected the calculation of beautifulTriplets in the Solution class to ensure that the correct number of beautifulTriplets is returned based on
replaced deprecated useScreenMenuBar property retrieval with a check for embedded LWCToolkit to improve code clarity and maintainability by
add setrawlocation ( location , boolean fall ) to glowentity . setrawlocation ( location , boolean fall )
refactor query logic in SimpleJpaRepository to use a criteria query and a maximum result check to improve query accuracy and ensure correct result retrieval
added new fields to the BlockUtil class for timestamp , parent hash , nonce , and number to enhance the block builder ' s functionality to include
rename loopsafepointinsertionphase to safepointinsertionphase since safepoints be now enable by default
hbase - 25836 fix npe in rsgroupinfomanagerimpl and rsgroupprocedurememberrpcs when list
changed access modifiers of methods and classes in ArtifactResolver from package - private to public to allow external access to these methods for better usability
[ bullet ] dispose all resource when the executor be terminate .
added validation to ensure maxBufferedDocs is at least 1 to prevent illegal argument exceptions when maxBufferedDocs is less than 1
added state management for the login process in the LoginActivity to ensure that the login process operates correctly during configuration changes
added null checks for source and value extraction in Pump . java and implemented a reverse order test in PumpTest . java to ensure robust
modified access modifiers from private to protected for several fields and methods in HttpShardHandlerFactory and LBHttpSolrServer classes to enhance encapsulation
updated the authentication service selection order from LOWEST _ PRECEDENCE to HIGHEST _ PRECEDENCE and added a new test class
added Jetty server configuration to TestJNDI . java to enable handling of context handlers in the Jetty server
refactor code formatting and improve operator handling in SortedDynPartitionOptimizer . java to enhance readability and maintainability of the code
modified the return value of the method from checking if the loop is an instance of NioEventLoop to always return true to simplify the logic
updated the logic for determining new number of nulls in StatsUtils . java to ensure that the number of nulls does not exceed the number of rows
camel - 18131 : camel - jbang - export should support kamelets in the command line
updated OSMJob . java to replace OkHttpOAuthConsumer with OpenStreetMap authorization handling and added atomic state management for OpenStreetMap access
add basicptxtest . test ( snippet ) and basicptxtest . test ( snippet ) to print out the snippet
added a clientAuth property and its getter / setter in IoTDBRestServiceConfig . java , and modified RestService . java and IoTDB
simplified the injection process in ` PropertyAndSetterInjection . java ` and added a new test class ` ChildWithSameParentFieldInjection
bloom : add initializerequests ( ) method to bloomuriuniqfilter , a per http : / / issues . apache
updated cursor adapter setting from false to true in HomeFragment . java and added refresh preference in TweetPager . java to enable the refresh functionality
updated the intermediate header height ratio from 1f to 75f to improve the visual appearance of the profile page
updated imports and introduced RecompilationEvent class to improve logging for recompilation exceptions to enhance clarity and traceability of recompilation
added a new configuration property ` HOST _ SYS _ PREPPED ` and its corresponding method in ` Configuration ` and ` Ambari
added a boolean parameter ` logEveryUnknownFileFormat ` to the ` include ` method and introduced a new test class ` UnknownChangeLogFormat
added a loop to delete trailing slashes from the location string to ensure proper handling of leading slashes in the URL
added entity and score properties handling in StaticPipeline to enable configuration of entities and scores in the pipeline
refactor file path handling in Frame . java and add configuration check in WhoopsModule . java to improve file path management and enhance the
[ geos - 8470 ] catalogrepository . lookupdatastore ( ) should return null if store do not exist in the workspace
refactor Assert class to improve code readability to enhance maintainability and facilitate easier debugging
renamed MultiLineTests to MultiLineGridlikeTextTests and added MultiLineJaggedTextTests classes to improve clarity and functionality
( chore ) camel - http : / / issues . apache . org / activemq / browse / camel - 1560 -
replaced ` IMeasurementSchema ` and ` IMeasurementSchema ` with ` MeasurementSchema ` and ` MeasurementSchema ` in multiple classes to simplify
updated loop syntax and adjusted memory usage calculations in TestPromotionFromSurvivorToTenuredAfterMinorGC . java to improve code
updated the log4j library name from " slf4j - log4j12 " to " slf4j - reload4
[ huebridgehandlerosgitest ] fix flaky test ( # 10663 )
renamed the package ` com . itsaky . androidide ` to ` com . itsaky . androidide . activities ` and updated imports
disable kiecontainersolverfactorytest when drool - 1276 be fix
added a constructor to ` PullRequestMergedEventsStream ` that initializes ` _ service ` and ` _ gitHubAPICaller ` with a ` Stream
refactor AbstractExpressionPart class to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ runtime ] fix checkstyle violation in taskslot
replaced the ` FIRE _ EXCEPTION _ ON _ FAILURE ` listener with ` CLOSE ` in the ` NettyWebSocket ` and ` Net
added error handling for lock release in MoveTask . java to improve robustness by catching LockException during lock release
replaced the use of Properties with ResourceBundle for retrieving GEM _ PATH and RUBY _ VERSION in JRubyBackend . java to improve
transaction : use ` byteutil . empty _ byte _ array ` instead of ` static final byte [ 0 ] ` .
refactor variable declaration for better readability in ClassGraphClassLoader . java to improve code clarity and maintainability
[ hotfix ] [ test ] fix blob storage directory path in jobmanagerstartuptest
( chore ) camel - google - cloud : support the fully qualify fully qualify class name for datastream resource
added a Bundle with extras to the builder in FileDisplayActivity to allow customization of file display options
changed the control flow from break to continue in ParticleEmitter . java to improve flow control by skipping the null particle check
updated expect ( cluster ) . times ( ) and expect ( cluster ) . times ( ) values from 2 to 1 in AmbariManagement
removed the nullable attribute from the @ Column annotation in TransientSessionTicketImpl . java and added handling for NoResultException in JpaTicketRegistry
updated Bug4823811 . java file to address a specific bug issue
updated RmStep . java to use the path relativizer for pattern deletion to ensure the original pattern is relative to the project filesystem '
[ deconz ] do n ' t request full state until initial request
refactor ShibbolethCompatiblePersistentIdGenerator to use an attribute attribute instead of a byte array conversion method to enhance flexibility in managing
removed unnecessary whitespace in RequestValidationService . java to improve code readability and maintain consistency
refactor key handling in UiThreadHelper to use a Bundle for logging keyboard messages to improve code organization and maintainability by encapsulating keyboard logging
removed unnecessary whitespace in FileNodeProcessor . java and updated MManager . getInstance ( ) . clear ( ) in MManagerBasicTest . java
renamed NavigableMap and NavigableSet classes to improve clarity and consistency in naming conventions
add a testslurpfile ( ) method that check that slurpfile ( ) do n ' t throw exception
changed access modifier of client and server properties from protected to private and added @ FunctionalInterface annotation to enhance encapsulation and indicate that these interfaces
refactor span retrieval logic into a separate method called spanWithName to improve code readability and maintainability by reducing duplication
added support for handling DateWritable types in Hive schema converters to enable proper conversion between Date and Integer types in Parquet
updated the string splitting method to use Patterns . COMMA _ SEPARATOR for consistency to improve code readability and maintainability by using a standardized
improve error handling in inputdialogtableview by use stringparser . parse ( )
refactor column count validation logic in SemanticAnalyzer . java to improve clarity and maintainability of column count checks
refactor WANDScorer . java to improve score update logic and assertion checks to enhance code reliability and maintainability by ensuring proper handling
refactor Correspondence class to improve code structure to enhance maintainability and readability of the code
updated import statements in PaintSetEnabledDeadlock . java to include specific classes for better clarity and functionality
modified the initialization of ` curPixVal ` in ` XRSolidSrcPict . java ` and added a new test class ` White
fix biomedictionary . containstype ( ) and biomedictionary . containstype ( ) method to return a collection of type
corrected the variable name from " withinTolerance " to " exceedsTolerance " in BoundedLocalCache . java to improve clarity and accuracy
replaced the @ Ignore annotation with @ Stability annotation in TaplTestsLauncher3 . java to enable test stability for better test
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added a check to ensure logFileSuffix is not only non - null but also not empty to enhance robustness by preventing potential null or empty
refactor PythonBuckConfig class for improved readability to enhance maintainability and clarity of the codebase
added unit tests for adding and clearing system shared library names in ShadowPackageManager to ensure correct functionality of system shared library management in the package manager
add meiligao alarm support ( fix # 269 )
fix potential npe in powerdiode
modified the ` cache ` preference to be final and added a ` TrimCache ` task to display cache size to improve performance by reducing the
fix ( render ) : update dependency to new google common
replaced return statements in multiple access control factory classes to throw exceptions for non - Basic authentication errors to improve error handling and provide clearer feedback
updated method signatures in the Scheduler class to use a generic state parameter and added a new abstract method for schedulePeriodically to enhance type safety and
replaced refreshListOfFilesFragment ( false ) with onItemClicked ( ) in FileDisplayActivity . java to enable the refresh of the
added a random search for multiple xsd files and improved error handling in StreamUtil . java to enhance robustness by ensuring a random input stream
refactor ` create _ table _ with _ environment _ context ` to ` create _ table ` and remove the ` EnvironmentContext ` parameter to
added a volatile boolean variable ` aborted ` and modified the ` start ` and ` abort ` methods in ` FixedRateFragInsStateTracker `
added checks for indentation levels in multiple block parser classes to ensure that indentation does not exceed 4 characters to improve code readability and prevent potential errors
fix wifi autoplay not work when wifi be disable in demo app
removed the check for control frames in the ProtocolException validation to simplify the validation logic for control frames
added visibility setting for the collapse handle view in the WidgetsBottomSheet to improve user interface by providing visibility for the collapse handle view
added new files for ` Issue475 ` and ` XSS ` classes , along with new test cases for HTML and JavaScript parameter handling to
added a condition to return early if the number of units to scroll is zero to optimize performance by avoiding unnecessary processing
change condition from checking if the contract list size is greater than one to checking if it is not equal to one to ensure that the contract list
added ` add ` and ` put ` methods to ` JsonArray ` and ` JsonObject ` classes , along with corresponding unit tests for enum handling in
added hashCode ( ) method to IPPPrintService and created TestRaceCond class for testing equality of print services to ensure consistent hash code
refactor db2dialect and db2zdialect to use getversion ( ) instead of getversion ( )
added a check for platform fee before establishing a connection in BaseStripeManager . java to ensure that the connection only occurs when there is a
refactor BatchUpdateException , PreparedStatement , and Statement classes for improved clarity to enhance code maintainability and readability
add buffer encryption check to mediacodecrenderer . onqueueinputbuffer ( ) .
removed the ' public ' access modifier from class constructors in multiple classes to enforce encapsulation by restricting access to the class itself
added import statement for Retrofit in Part and PartMap classes to enable Retrofit functionality in the application
updated JSON building logic in JsonBuildHelper and added commonHandleParam method in ParamsBuildHelper to improve handling of generic names and enhance parameter building
added TYPE _ TASKBAR _ OVERLAY _ PROXY to the list of taskbar types in AbstractFloatingView . java to enhance functionality by allowing
fix : update gapic - generator - java with mock service generation fix ( # 269 )
updated alpha calculation logic in ClipAnimationHelper and added hasRecents field in RemoteAnimationTargetSet to improve animation responsiveness based on
removed the second parameter from the createRenderScript method in AllAppsView . java to simplify the script creation process by removing unnecessary parameters
fix typo find by codespell on fossies . org
fix ( plugin ) : plugin system bundle should not be a system bundle
reordered and reformatted import statements in IntegrationTestSparkBulkLoad . java to improve code readability and maintainability
[ hotfix ] [ test ] use low false positive rate in test
refactor configuration handling in Overview . java to use a Configuration object instead of rocketConfiguration to improve code clarity and maintainability by
fix findattache ( ) return null if host be not attach to agent
defaultrecordstore : fix npe in case of null value in map
kvm : throw discoverdexception instead of return null when fail to add host
updated the message format for NO _ NAME and NO _ VALUE to include specific attributes to improve clarity and specificity of error messages for better
refactor constructors in BaseStubbing , ConsecutiveStubbing , and OngoingStubbingImpl to accept a Object parameter instead of InvocationContainer
added a method to strip method parameters from the method name in LocationOpener . java to improve parameter handling by removing unnecessary parentheses from the method
updated version name and code for the GreatVoyage application to reflect the new release version
mondrian : outputfilter now use set instead of list for allow command
[ geot - 6338 ] fix symbolizer option key name mislead in the doc
ggb - 1352 fix overlap feature not resize popup , close # 3353
updated error messages in ValidationSuite . java to use hyphens instead of hyphens to improve readability and consistency of error messages
replaced an anonymous inner class for task launching with a dedicated ` StartingWindowListener ` class to improve code readability and maintainability by
added a doc comment inherited from MBeanServerConnection in MBeanServer . java to improve documentation clarity and maintain consistency with MBeanServerConnection
updated exception messages in CheckPackageAccess . java to reflect package access and package definition validation to improve clarity and accuracy of exception handling related to
increased the timeout duration in the ThreadSafetyTest from 30 seconds to 90 seconds and added an assertion to check if the executor service
changed the loggingEnabled variable type from boolean to Boolean and added a null check before setting it to ensure that logging is enabled only when it is
added @ JsonIgnore ( true ) annotation to mmm Schema . java and ppp Schema . java to exclude certain fields from JSON serialization for
increased the timeout duration for the TestNonTxIndexBuilder test from 5000ms to 10000ms to allow more time for tests to complete
updated method signatures and variable names in SimpleNaiveBayesClassifier for consistency and accuracy to improve clarity and accuracy in classification calculations
renamed CheckHelperModule to CheckHelperControllerModule and added CheckHelperAuditModule to improve clarity in the module ' s purpose and enhance
updated mmm Prototype . java and ppp Prototype . java files to improve code organization and maintainability
added a check to determine if the table is transactional if it is null to ensure that the table ' s transactional status is correctly determined based on
[ java ] : remove unused writefragment method from recordingwriter .
return empty cue list instead of 0 for negative timeus
added getalias ( ) method to datastoremetricqueryimpl and use it in the kairos datastore test
updated currency pairs in VaultOfSatoshiBaseService . java to replace specific currency pairs with a more generic one to enhance currency management and
hhh - 14619 - fix some test failure on the ci server
updated KafkaSender import statements from ' kafka11 ' to ' kafka ' in ZipkinKafkaSenderConfiguration and ZipkinAutoConfigurationTests to
added new files GwtBinaryIntegrationTest . java and A . java to implement integration tests for Gwt binary building to ensure proper functionality and
updated conditions for setting loading cause label visibility and improved error handling in SQLConsole to enhance user experience by ensuring loading cause label visibility and catch
removed unnecessary line breaks in EnhancedRandomImpl . java and EnhancedRandomImplTest . java to improve code readability and maintainability
added XMLSecurityPropertyManager to DTDConfiguration , NonValidatingConfiguration , and SAXParser classes to manage XML security properties more effectively to enhance security
added a new file ` InlineDefaultMethod . java ` implementing interfaces with default methods to demonstrate default methods in interfaces and their subclasses
updated SQL query patterns from " LIKE " to " GLOB " in SqliteFieldPredicateView . java to improve query accuracy by using a
( chore ) camel - dmn : align visibility of getdmnprofiles ( ) method
fixed - rscript . loadasync ( ) and rscript . loadasync ( ) method throw concurrentmodificationexception . # 3353
remove static method and add assertion in espresso code .
updated debug log messages to use indexed counts instead of strings to improve logging clarity by providing more detailed information about target counts
fix error cause by multi - target message send from lan host ( # 4536 )
added a new constant HTTP _ JETTY _ SERVER _ HANDLERS to ExecConstants and updated the thread pool configuration in WebServer to
refactor shortcut management logic to handle removed shortcuts more efficiently to improve efficiency by avoiding unnecessary updates when shortcuts are not available
removed unnecessary type check before converting the value to String in DefaultHttpClientBinderRegistry . java to streamline code for better readability and efficiency
removed the navigation up case from DetailFragment . java to simplify the code by eliminating unnecessary cases
added a condition to check if the Android market is present before including play services to ensure that play services are only included when the market is present
refactor TableBlockParser to improve handling of cell boundaries and add a new test for rendering tables containing outside whitespace to enhance code robustness and
added support for a bridging header in NewNativeTargetProjectMutator , ProjectGenerator , and AbstractAppleNativeTargetBuilder classes , and
updated the handling of method declarations and source paths in PotentiallyDeadCode . java to improve clarity and functionality of method management in the code
added support for diamond method resolution in Attr . java and created new classes DiamondRedundantArgs . java and T6939
replace calls to invocation . getInvocationStageTrace ( ) . startSend ( ) with invocation . onStartSendRequest ( ) in Highway
removed unused import of Utils and logging statement in SolrCacheHolder . java to improve code clarity and reduce unnecessary logging overhead
added exception handling for AuthenticationException in LdapCtxFactory . java to improve error management by rethrowing the original exception
updated the condition in Test6796786 . java to check for - ( d1 - d2 ) instead of ( d1 +
added local configuration for " logback . dev . xml " in JoobyMojo . java and modified Main . java to include
added a new file JaasEventCheck . java to handle Jaas authentication events to enable monitoring of failed and successful Jaas authentication events
refactor QuickstepTransitionManager to use a list of views to animate from the workspace to improve code readability and maintainability by reducing
updated string distance comparison logic in ConjunctionSolrSpellChecker and added unit tests for its functionality to ensure that non - identical StringDistances
changed the type of ` fetchers ` from ` HashMap ` to ` Map ` in ` ShadowSystemServiceRegistry . java ` to improve type
[ hotfix ] [ runtime ] remove unused variable in defaultleaderelectionservice
changed the access modifier of the setAuthentication method from public to package - private to restrict access to the method for better encapsulation
kvm : make agent ' s ready command timeout configurable
updated JDBC _ TABLE parameter handling in AbstractJDBCConnectorProvider . java to use tableName directly and added JDBC _ SCHEMA parameter to improve clarity and
corrected the spelling of " sqlUpdateAUP " to " sqlUpdate " across multiple files to ensure consistency and adherence to
updated ` schemaTypeCache ` initialization to use ` Collections . synchronizedMap ( new WeakHashMap < > ( ) ) ` and refactored
refactor header addition logic in StaticServerHttpHeadersWriter and add a new test case in StaticServerHttpHeadersWriterTests to ensure headers are
temporarily ignore lattice demo test because it ' s only available in cmu
added a method to create a storage directory in TestCollector . java to ensure the storage directory exists before running tests
added a method to set chunked streaming mode in StarTreeJobUtils to improve performance by reducing the number of streaming requests
schema : added test class for basic , multiple and single type check
hbase - 25819 use wrong protobuf package in hbase - service module ( ted yu )
added a new test method ` beansWithRecursiveStructureMustNotCauseStackOverflowException ` to ` BeanPopulatorTest . java ` and created
added IOException to the getRemoteName ( ) method to ensure proper error handling during the remote name retrieval process
added handling for IllegalArgumentException in UserAccountManagerImpl and introduced HttpClient in ClientFactory and ConnectivityServiceImpl to improve error handling and enhance HTTP client
refactor WebSocketConnection and ExplicitDemandTest classes to improve code organization and readability
added support for AspectJ mode in GlobalMethodSecurityBeanDefinitionParser to enable compatibility with AspectJ mode and improve integration with Spring Security
updated import statements and added hostname verification logic in mmm Connection . java and ppp Connection . java to enhance security by controlling endpoint identification
removed the ' final ' modifier from the OHLCItem variable and added a remove method to the OHLCSeries class , along with a corresponding
updated method calls from ` invoke ( ) . joinInternal ( ) ` to ` invokeUrgent ( ) . joinInternal ( ) `
removed redundant code for destroying and removing JointEdges in the world to improve code clarity and maintainability by eliminating redundancy
fix a npe in the search filter when the search string be null .
[ hotfix ] [ source ] move sourcereadertestbase to flink - connector - tests
added null checks for document , parentFolder , and targetFolder in DocumentsStorageProvider . java to ensure proper exception handling for file not found
added two new files , HookDefinition . java and JavaHookDefinition . java , for defining Java hooks in the Cucumber runtime package to
refactor deadlock risk flushing logic into a separate method ` flushIfDeadlockRisk ` to improve code readability and maintainability by
updated setExoOptions method to include a boolean parameter for ts allowance to enhance flexibility in setting exo options for live TV
remove the user from the identifier collection in DMRDecoderState . java to ensure proper handling of user identifiers in the decoder state
added an INVISIBLE color to the Color class and refactored the toString method to use it to improve code readability and maintainability by
updated the logic for enabling null handling in CountAggregationFunction . java and added a new test case in NullHandlingIntegrationTest . java to
initialize the deep variable to - 1 in InternalTransaction . java to ensure proper initialization of the transaction state
escape the name in the buffer to ensure that the name is properly escaped before being appended to the buffer
updated file path handling in PerfRunData , ReutersDocMaker , and TrecDocMaker to use a configurable work directory to
added support for deprecate rule in the rulesetfactory
amd64directcallop : use codebuffer . position instead of create a dummy label .
replaced instance variables ` minStamp ` and ` maxStamp ` with static final constants ` MIN _ TIME ` and ` MAX _ TIME `
refactor BitDocIdSet to improve performance to enhance efficiency in document ID handling
refactor code to extract JSON response handling into a separate method ` emitMetricsJson ` to improve code readability and maintainability by reducing
refactor attachment mime type checks and add video view handling in GalleryActivity to improve code readability and enhance user experience with video media interactions
fix the tank not be able to drain liquid if they be n ' t sneak and the player be sneak in
updated CsharpLibrary . java to handle RuleAnalysisLegacyBuildRuleView for improved library resolution logic to enhance compatibility with legacy build rules
improve handling of ' get ' iq packet in pephandler .
added a null check for runtime in IntrinsificationPhase . java to ensure runtime is not null before proceeding to avoid potential null pointer exceptions
[ beam - 13434 ] fix metrictrackingwindmillserverstub and streamstreamingdataflowworker when there be no active metric
pdfbox - 4892 : save last object id , genid , and object offset only if they be > long . max _ value
added constructors to LwjglAppletApplication that accepts a Canvas and configuration , and modified the canvas refresh behavior to enhance the application ' s
updated the string representation method in EnvironmentAndSystemPropertyClientProviderStrategy . java to handle null DockerClientConfig more gracefully to improve code robustness and
refactor password policy handling logic into a separate handler method in LdapAuthenticationHandler . java to improve code readability and maintainability by centralizing
refactor Int2ObjectCache . java for improved performance to enhance efficiency of object caching operations
added a new private field ` resolveFromAttribute ` in ` AbstractLdapAuthenticationProperties ` and updated ` LdapUtils ` to set its value to
refactor Readable class to improve code readability to enhance maintainability and facilitate future updates
modified the way the PDF document is created by using TestSupport . WITH _ FONT in JsoupNonVisualRegressionTest . java to
updated the icon used in the menu item from ` share _ menu _ item ` to ` ic _ menu _ share ` to improve consistency and
added JVM version checks for minimum Java version in Constants . java to ensure compatibility with Java versions greater than 8 or later
updated network timeout handling in PoolUtilities . java to check for Integer . MIN _ VALUE and added exception handling for specific exceptions to improve robustness
refactor GenericContainer class to improve code structure to enhance maintainability and readability of the code
replaced HashSet with ArrayList for filteredList in Enclosed . java to improve performance and maintainability by using a more appropriate data structure
added multiple @ Override annotations to various classes to ensure proper method overriding and improve code clarity
reordered the declarations of png , jpg , and gif in ChartProvider . java to improve code readability and maintainability
use file . getparent ( ) instead of file . getpath ( ) for the work directory preference
modified the return statement in ` JavacParser . java ` and added a new test class ` ExtraSemiTest . java ` to
added date handling capabilities to the JpaQueryCreator and User classes to enable querying users based on their creation date in the database
rename Test15FloatJNIArgs . java file to improve clarity and consistency in naming
updated string formatting in plugin . java to use placeholder placeholders instead of hardcoded strings to improve readability and maintainability of the code
corrected the substring length in MockProcessContext . java and added a test for fake encryption and decryption in TestMockProcessContext . java to
[ java ] prevent call aeronarchive . invoke from other thread in parallel .
added null check before merging dependencies in OpProcFactory . java to avoid potential NullPointerException when merging dependencies
added a timeout attribute to the @ Test annotations in SslBytesServerTest . java to allow for more time for tests to complete before proceeding
refactor Peer class to improve code readability to enhance maintainability and facilitate future feature additions
updated the ` RealtimeIndexingCoordinator ` , ` RealtimeSegment ` , ` StreamProvider ` , and ` StreamProviderConfig ` classes to
updated FailureWatcher to check if exportedData is null before calling writeTo to avoid potential NullPointerException when accessing viewCaptureDataSupplier
updated the calculation of popup position and radius in RecyclerViewFastScroller . java to improve the accuracy of popup positioning based on scroll thumb
updated text in ` BuckWSServerPortUtils ` and added checks in ` BuckEventsConsumer ` and ` BuckToolWindowFactory
added a conditional check for non - Windows platforms before creating a JCheckBox for the " NetworkTab . 33 " checkbox to ensure the checkbox only
updated import statements from ` javax . servlet ` to ` jakarta . servlet ` in ` HttpConfigurationAuthorityOverrideTest . java `
added cropping size calculations for app transitions based on device orientation to improve layout handling for different screen orientations
added full - screen exclusive mode functionality to XWindow and XWindowPeer classes to enhance user experience by allowing full - screen mode management
fix stringutils . playeddurationstr ( string ) for long duration
added methods to add credentials from MapWork and ReduceWork in DagUtils . java to enhance functionality for managing credentials in DAG operations
( chore ) camel - core : use map . entryset ( ) instead of keyset ( )
trim whitespace from the thread name in SessionState . java to ensure consistent thread naming by removing leading and trailing whitespace
updated error message in GpsMainActivity to specify that the next point has been logged to a file to provide clearer guidance on how
[ hotfix ] fix checkstyle violation in job
added a new abstract class ` Unused ` and a test method ` testUnusedType ( ) ` in ` Main . java ` to ensure
ambari - 20836 . fix the issue that dummy heartbeat do not report the hostname of hbase _ master
deleted the EventReaderDeserializer and EventWriterSerializer interfaces from the project to remove unused XML event processing classes
modified the ` performJoin ` method to return a list of ` GenericRecord ` objects instead of a single record to allow multiple output records for
updated the handling of MAX _ DELEGATE _ LOCK _ PERIOD to allow a maximum value of 10512000 and adjusted related calculations to
bug 10625 : do n ' t allow to set network rate to 0 in nics . xml
removed initialization of services and updated the applySpecification method in CmcExchange . java to streamline the code by eliminating unnecessary methods
updated configuration retrieval for seed node IP list in GossipLocalNode . java and changed configuration file names in Constant . java to improve clarity and
add a system property ` ` hazelcast . client . tpc . enabled ' ' to disable tpc by default
update swagger - ui version from 2.2 . 10 - 1 to 3.18 . 2 in multiple API application files to ensure compatibility with
refactor the division logic in MutableBigInteger and add a new ModInvTime class for computing modular inverses to improve clarity and
refactor key assignment logic in NamedObjectList . java to handle blank names more gracefully to improve clarity and ensure a default key is used when
updated method names from ` cleanupEmptyDir ` to ` cleanupEmptyTableDir ` across multiple query compactor classes to improve clarity and consistency
refactor AsyncCache and Cache classes to improve code organization and maintainability
added import for RCFileInputFormat and registered it with Kryo to enable support for RCFileInputFormat serialization
added methods to retrieve Java types and categories from a Column in TypeMapperComponent to enhance type mapping functionality for better data handling
added error handling for invalid host header parsing in Request . java and implemented a test for invalid host header in RequestTest . java to improve robust
updated ` ShadowTimeZoneFinderTest ` and ` ShadowTimeZoneFinder ` to use ` ReflectionHelpers ` instead of ` libcore . util . TimeZone
bugfix : remove unused method in standardop
changed access modifiers and variable declarations in SegmentCoreReaders and SegmentReader classes to enhance encapsulation and improve code readability
added a method to check for the existence of the main thread profile in multiple DAO and repository classes to enhance the functionality of the system to
added a validation check for annotation definitions in a Buck rule to ensure that annotations are not allowed in the Buck rule for required source AB
updated constant names for Greek , Irish , UAX29URLEmail , and Turkish Lowercase filter factories to
refactor HSSFSheet and Sheet classes to improve code organization to enhance maintainability and readability of the code
update search servlet to use discoverysearchrequestprocessor instead of lucenesearchrequestprocessor
added a new list to remove specific time zones from the date and time values in BasicDateTime . java to simplify date and time handling by removing
updated SurfaceSyncGroup instantiation to include a string parameter to enhance clarity by specifying the context of the SurfaceSyncGroup
updated GridFsTemplate and GridFsTemplateIntegrationTests to remove unnecessary casting and improve code clarity to enhance code readability and maintainability by
added methods to manage total size and bytes in ShadowDownloadManager and updated corresponding test cases in ShadowDownloadManagerTest to enhance functionality and ensure correct
refactor character insertion logic in TextField . java to use a boolean variable to improve readability and maintainability of the code
added equality check in GroupNodeViewModel to prevent unnecessary processing when the target is the same as itself
added a method to determine if a block is terminal based on the last non - null variable node and refactored terminal handling logic to improve
added hashCode and equals methods using HashUtilities in IntervalXYDelegate , XYSeriesCollection , and XYSeriesCollectionTests classes to improve hash code generation
add cleanup to clientqueuestisruptiontest to cleanup resource after each test
refactor CloudWatchAppender and related tests for improved clarity and consistency in naming conventions to enhance code readability and maintainability while ensuring
updated serialization method from ` serializeSpecialDoubleValues ( ) ` to ` serializeSpecialFloatingPointValues ( ) ` in ` Gson . java `
added calls to ` HttpMethed . waitToProduceOneBlock ( httpnode ) ` and ` PublicMethed . waitProduce
added checks for non - empty language tags before canonicalizing and appending language tags in Locale . java and LanguageTag . java to ensure proper handling
add global config to enable / disable ssh - to - agent feature for management server
removed public access modifier from several constructors and methods in SchedulerWhen . java to enhance encapsulation and improve code readability
updated import statement for PagerSlidingTabStrip to use the correct package to ensure compatibility with the latest version of the Astuetz library
added a condition to exclude whitespace from the filter string check to ensure that the filter does not contain " - " characters as intended
updated text for sorting columns in BrowserContentPane and refactored statistics calculation in DataBrowser and Desktop to improve readability and maintainability
replaced the use of Arrays . copyOf with a new implementation to improve performance by reducing unnecessary array copying
encode remoteAddr in HtmlSessionInformationsReport . java to ensure it does not contain spaces to improve data integrity by preventing potential issues with leading
add ` ` smarthome / items / ' ' to itemstatetriggerhandler . isitemactive ( ) ` check ( # 118
removed synchronization around date formatting in FastHttpDateFormat . java to improve performance by reducing unnecessary synchronization overhead
refactor file moving logic to use a configurable thread pool for moving files to improve performance by allowing parallel execution of file movements concurrently
added new overloaded trigger methods in WrapTimer . java to enable scheduling of timer tasks with specified time periods
[ flink - 20660 ] [ table - planner - blink ] support localdatetime , localdate , localtime type in type
updated error handling in AbstractStatusReporter to include verbose error logging to enhance debugging capabilities by providing more detailed error information
added menu toggle functionality to ClickStartHandler initialization in Header . java and ItemControls . java to enhance user interaction by allowing menu toggling
fix s2s vpn : do n ' t allow connection between account / customer gateway and vpn gateway
updated error handling logic in CursorReadingTask and added a unit test for it to improve error handling clarity and ensure that the error handler is
pdfbox - 4892 : do n ' t try to extract / create thumbnail if the pdf be encrypt
[ 3.0 ] fix the problem that the service be n ' t shutdown when the zookeeper client be close ( # 9441 )
rename AnomalyDetectionResource and AnomalyDetectionResourceTest files to improve clarity and consistency in naming conventions
updated URI handling in HostsList . java to use a variable ' id ' instead of the selected item ID to improve code clarity and ensure
refactor Java6Assertions and Conditions classes to improve code readability and maintainability
changed the parameter type of replaceOrderBulk from Collection < ReplaceOrderCommand > to List < BitmexPrivateOrder > and updated its usage
refactor ` enterDefault ` method to ` enterIdentNode ` in ` FindScopeDepths . java ` and add ` enterFunctionNode
added a new utility class J9ConstantHelper for retrieving long values from reflection to facilitate dynamic retrieval of extended runtime flags based on
added a new test class ` ConcurrentModificationExceptionOnMultiThreadedVerificationTest ` to verify concurrent modification behavior in multi - threaded scenarios to
add the ability to remove resource from the roster of a session if it be unavailable .
replaced ` getProperties ( ) ` with ` getOverlayedProperties ( ) ` in ` MapOperator . java ` and added a method to
updated code formatting in FunctionObjectCreator . java for consistency to improve code readability and maintainability
added null check for extTypeCustomDesers before initializing it in MessagePackFactory to avoid potential NullPointerException when extTypeCustomDesers is null
remove system . setproperty ( ` ` mockserver . loglevel ' ' = ` ` warn ' ' ) ' '
removed the @ Test annotation from AbstractRegistryFactoryTest . java to streamline test cases for better clarity and maintainability
removed the JettySolrRunner implementation from the AbstractSolrMorphlineZkTestBase class to simplify the test setup by eliminating unnecessary
replaced ` scoreMap ` with a ` Map < String , Map < Float , Float > > ` and introduced ` termScoreMap `
updated conditional checks in U64 . java to use negative values instead of a specific mask to improve accuracy of data comparison by allowing negative values
remove the default headline style in the main view model
update notification logic in WallpaperColorInfo . java to account for support for dark text to ensure notifications are only sent when dark text support
[ hotfix ] [ checkpoint ] fix checkstyle violation in checkpointrequestdecider
updated import statements and modified pool size constants in Parallel . java to improve code clarity and adjust pool size parameters for better resource management
replaced filter with anyMatch for provider matching in AuthenticationAttributeMultifactorAuthenticationPolicyEventResolver . java to improve readability and efficiency of
added tests for ` notWindows ( ) ` and ` notArm ( ) ` in ` OpenCVImageFactoryTest . java ` to ensure
fix for http : / / issues . apache . org / activemq / browse / amq - 2692 - add support for
allow the python proxy to throw any exception , not just ` ` null ' ' .
added a new annotation ` Issues ` to the ` Issue ` class with a repeatable target and retention policy to provide a mechanism for managing
updated user property key from " hcat _ user " to " webhcat _ user " in BlueprintConfigurationProcessor . java and modified imports
added a check for the " socksProxyHost " system property before establishing a socket connection using a resolved address to enhance flexibility by
[ hotfix ] fix checkstyle violation in slotreport and slotstatus
added import statement for ClassUtils in mmm ReflectionUtils . java and ppp ReflectionUtils . java to utilize utility functions from the Apache Commons Lang
replaced instances of HashSet with LinkedHashSet for excludeProtocols , includeCipherSuites , and selected _ protocols in SslContextFactory . java to maintain insertion order
added a static Resources variable and updated logic for returning system resources to improve resource management by referencing a cached system resource
added a constant for plain text segment size in StreamingAeadDecryptingChannel and StreamingAeadSeekableDecryptingChannel classes to improve code
added a test to verify that a circuit breaker fallback throws an exception for invalid URIs to ensure that the circuit breaker correctly handles invalid fallback
added SSL connection support in AppPage . java to enhance security by using SSL for HTTP connections
set the size limit of the input stream to a fixed value of 0x7FFFFFFF and remove resetBytesReadCounter call to optimize performance
moved the ` preferAES ` property and its getter / setter methods from ` StandardProtectionPolicy . java ` to ` ProtectionPolicy .
( chore ) camel - opentelemetry : replace system . out . println with logger
[ ec2 ] remove unreliable test from elbintegrationtest . testloadbalancerinstanceoperations
changed method name from setAlarm to setRingtone in AlarmReceiver . java to clarify that the method accurately refers to
added error handling for file creation in DiacriticTest . java to improve robustness by preventing invalid path exceptions during file creation
hhh - 14619 - fix timeout issue on oracle 11
updated texture file handling and error management in TextureUnpacker . java to improve robustness and clarity of file existence checks
added locking mechanisms to manage cluster write locks in AmbariManagementControllerImpl . java to ensure thread safety when updating service and component states
refactor FilterChainProxy and DefaultFilterInvocationSecurityMetadataSource classes to improve code organization and maintainability
added a test to verify that the result set does not close its underlying statement to ensure proper resource management and prevent potential resource leaks
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5783 - fix issue
added logic to remove database pre - deleted databases from the schema response to ensure that outdated schemas are not retained in the response
removed the " chunkedWriter " from the pipeline before writing the resource to ensure that the resource is written directly instead of using writeAndFlush
updated the item ID check in EnhancedBrowseFragment and added a deleteItem method in FullDetailsFragment to ensure the correct base item ID is
refactor ` RuleFinder ` to implement ` RuleBank ` interface and update related methods for improved rule management to enhance code modularity and
[ tl ] handle exception in jcatlscrypto . dofinal ( )
added new files TestMonomorphicObjectCall . java and Object . java for testing and object manipulation to facilitate testing and object
replaced calls to ` removeMetaDataSource ( session ) ` with ` toFront ( ) ` in ` DataBrowser . java ` and `
hbase - 25827 use scan . getcolumnfamilytimerange ( ) instead of scan . gettimerange ( ) in default
[ hotfix ] [ configuration ] rename local _ state _ root _ directories to local _ state _ directories
updated AlterTimeSeriesStatement to accept a boolean parameter for altering the view to enhance flexibility in handling different alterations based on the view
[ selenide ] fix matchtext ( string ) to display human readable name
added exception handling for retrieving the routing table builder in HelixBrokerStarter . java to improve robustness by preventing application crashes due
fix : do not overwrite null value in request parameter
fix jms test due to security issue
bug 10727 : do n ' t show all domain in listdomainchildren api call if isrecursive = false
removed unnecessary methods and simplified equality checks in Counters . java to improve code clarity and maintainability by simplifying equality checks
updated the initialize method to accept an original SimulationStatus object and set warnings accordingly to improve the clarity and functionality of the initialization process by
[ gr - 16905 ] sulong : do not transfer to interpreter when get system . currenttimemillis ( ) .
updated the handling of variable types in the PrettyPrinter class to improve readability and maintainability of the code
refactor LRUDictionary to ensure nodes are properly initialized and cleared to improve memory management and prevent potential memory leaks
refactor DatagramPacket handling and filter logic in DatagramSocket . java and DatagramChannelImpl . java to improve filtering logic and enhance
updated JUnit imports and annotations from JUnit 4 to JUnit 5 to ensure compatibility with the latest testing framework features
added a new class NutchServerInfo to manage server - related job information to facilitate the retrieval and management of Nut
replaced OffsetAttribute and PositionLengthAttribute with AttributeSource in EdgeNGramTokenFilter to simplify attribute management and improve code clarity
added timestamp handling in CqlInserter , ThriftInserter , and SettingsColumn classes to allow users to specify a timestamp when writing
refactor DSAParameterGenerator to improve handling of strength values and clarify error messages to enhance code readability and maintainability by using
updated Bit manipulation methods in NumberUtils and Numbers classes for improved precision and handling of float and double values to enhance performance and correctness
updated the masking condition in InetAddressSet and added multiple test cases in InetAddressSetTest to ensure correct masking behavior and improve test coverage for
added handling for SQLException and DataIntegrityViolationException in DefaultJdbcOptimisticLockingExceptionMapper to improve constraint violation detection for better error management
[ issue # 5051 ] fix the issue of rewriterequestforstatictopic ( # 5052 )
added a new method ` addTab ` and refactored the ` createTab ` method to ` createTabImpl ` for better encapsulation
replaced specific array size usage with zero - length arrays in multiple classes to improve performance and readability by eliminating unnecessary array creation
[ hotfix ] [ test ] add taskmanagerruntimeinfo to mockenvironmentbuilder
replaced return statements with conditional statements in MavenVisitor . java to improve readability and maintainability of the code
updated mock variable names from " MOCK _ NAME2 " to " MOCK _ NAME _ UPDATE " and added refresh event handling for selector
added a new file FormatCheckingTest . java to implement a class format validation test to verify error handling for illegal class names in Java
updated line number assignment in CodeGenerator . java to use a local variable to improve clarity and maintainability of line number handling
added a try - catch block around configuration retrieval in ConfigHelper . java to handle potential exceptions during configuration retrieval
added methods to create toggle buttons in RadioButton with specified text , icon , and command to enhance functionality for managing radio buttons in the UI
updated cache initialization in LRUCache and increased CHUNK _ METADATA _ CACHE _ SIZE in MetadataQuerierByFileImpl to optimize memory usage
add support for the ` ` capacity ' ' attribute on the < channel / > element in the < message - bus / > element .
fix npe in osgomanagementnamesstrategy when there be no symbolic name
add support for load mode resource from the system property ( usemode = ' ' ' ' )
added error handling for adding and removing shutdown hooks in IOManager and improved logging in YarnSessionFIFOITCase to enhance robustness
updated variable and method names from " projectRoot " to " androidManifestPath " in RobolectricTestRunner . java to improve clarity
http : / / issues . apache . org / jira / browse / amq - 4892 - fix abstractmessageproducinghandler
refactor CompareMode class for improved readability to enhance maintainability and facilitate future updates
added HasTests interface to RustBinaryDescription and RustLibraryDescription classes to enable testing capabilities for build targets
updated placeholder and error drawable resources in FileMessageVH . java to improve visual consistency by using a consistent drawable resource
rename OnExitTest . java files to improve clarity and consistency in naming conventions
added onUserPreferenceChanged method to recreate the taskbar when user preference changes
refactor HeapDump to use reflection for heap dumping based on the IBM JVM type to improve compatibility with different JVM implementations and enhance code
try to fix the build error of mybatisproducer
simonstewart : do n ' t close the ie driver in the ie - specific code
updated Java version from JDK 5 to Java 5 and refactored trigger patterns and variable declarations to improve compatibility with Java 5 and enhance code cl
set application state to unavailable in case jmx connection fails
updated position and limit handling in ByteBuffer and StringCharBuffer classes to improve clarity and correctness in position and limit calculations
updated the method call from ` toUri ( ) ` to ` toString ( ) ` in ` ConditionalResolverMergeFiles . java ` to simplify
updated various classes to implement setEmpty methods for managing empty states to improve array management and ensure proper handling of empty states during sorting
changed enum declarations from package - private to public in VirtualAuthenticatorOptions . java to allow access to these enums from other packages
replaced ` doc4 ` with ` doc6 ` in ` TestMultiPhraseQuery . java ` to ensure the correct document is added to
do n ' t send offline _ payment if the reservation be offline .
added a new thread variable ` _ onTimeoutThread ` and updated timeout handling logic in ` HttpChannelState . java ` to ensure proper synchronization
updated logging statements in SslBytesTest , SocketChannelEndPointTest , TrackingSocket , and ServerTimeoutsTest to use logger . debug instead
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated the consistency level parameter to conditionally use LOCAL _ SERIAL or QUORUM based on the consistencyForPaxos value to ensure
added a check for " Home " model manufacturer in HeosDiscoveryParticipant . java and modified player ID handling in HeosPlayerHandler . java
added a new ` Wait ` class and modified ` PlainSelect ` , ` SelectDeParser ` , and ` SelectTest ` classes to support
refactor Neo4j to utilize AttributeController for setting node and edge attributes to improve attribute management and enhance code clarity
added a null check for serverName in SessionManager . java to ensure proper handling of null values during session validation
nifi - 3596 : move rocksdb metronome to nifi - controller - repository to avoid circular dependency
updated the method to retrieve the " IS _ GRANTABLE " value from the results object to improve code clarity and maintainability by using
added logging for JavaScript execution and modified URL validation logic to enhance debugging capabilities and ensure proper handling of JavaScript commands
camel - 14284 : camel - cxf - mtom test fail on window because of the change in camel - cxf
updated column modification logic to handle cases where ` columnDesc ` is null to ensure proper handling of cases where ` columnDesc ` is not initialized
added the ` implements Disposable ` interface to the ` Texture ` class to implement the ` Disposable ` interface for better resource management
added null checks for ` tldBundleLocation ` and changed references from ` WebappRegistrationHelper ` to ` WebBundleDeployerHelper ` to
clean up goquorum compatibility check ( # 1193 )
replace IOException with Throwable in HttpInput . java to improve error handling by providing a more general Throwable type
added a condition to skip the " JP " country check in the LocaleTest . java file to prevent issues related to era changes in the
updated API operations to use ` HostResponse . HostResponseWrapper ` instead of ` HostResponse . Wrapper ` to improve clarity and consistency in
added a check for the boost value in the FilteredQuery class to ensure that the query matching logic correctly accounts for the boost value
reformatted the constructor of FileMenuFilter for improved readability to enhance code clarity and maintainability
ggb - 1343 fix for ` ` show logging ' ' in debug mode
added a new file TestCMSClassUnloadingDisabledHWM . java to test CMS class unloading behavior to ensure that CMS class unloading
added a check for non - empty entities before retrieving the first entity in the sponge event to prevent potential NullPointerException when accessing the first entity
refactor ` ColumnMapKeyMappingPreparedStatementSetter ` and ` MultipleColumnJdbcKeyCollector ` to use ` ItemPreparedStatementSetter ` instead of `
fix compactionstest to use identityqueryfilter
added null check for ' type ' attribute in MiniAapt . java and introduced a test for invalid item resources in MiniAaptTest .
added a new SpELJudge operator and implemented its functionality in the OperatorEnum and OperatorJudgeFactory classes to enhance the functionality of the
[ hotfix ] [ table - planner ] fix checkstyle violation in localexecutionplanner
use openide ' s lookup instead of sun ' s service to find the default profiler
updated import statements in ConscryptTest . java and removed an unused static import in CertBlacklist . java to streamline dependencies and improve code
updated variable types from ' l ' to ' L ' for start _ offset and length in ShadowArscAssetManager9 . java to ensure
updated source and target parameters from " 1.5 " to " 6 " in SetupHid . java to adjust the source and target options
[ calcite - 2283 ] pushprojectintotablesourcescanrule should support metadata only for table source ( # 2283
added imports for NonNull and SoftReference , and modified the way localized names are sorted in AboutActivity . java to improve code clarity and
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
added a conditional check for live streaming before posting a delayed runnable in HomeFragment . java to ensure that the shared preferences are only refreshed when
added the exception as a cause to the MappingException to improve error handling by providing the original exception as a cause
fix flaky test in fileconsumerpollstrategystoponrollbacktest
updated type declarations from AbstractType to AbstractType < ? > in SchemaLoader , CompositeTypeTest , and DynamicCompositeTypeTest to enhance type
added support for transport configuration in GitClientApplication and updated RepositoryUrlPanel to utilize this method to enhance functionality by allowing transport support based on
added delegator name retrieval and improved reason string formatting across multiple input consumer classes to enhance traceability and clarity of gesture interactions
add null check for mavenMetadata and modify version filtering logic to improve robustness by handling cases where mavenMetadata is null
8274889 : [ testbug ] testlargepageuseforheap . java fail on aarch64 due to ` `
skip event migration when usage db do n ' t exist
fix ( brokerxmlconfigstarttest ) : fix path issue on window
added a new test class ` TestObjectStreamClass ` for testing object stream class functionality to ensure proper serialization and deserialization of ` ObjectStreamClass
simplified the null check for ` getDataCenterInfo ( ) ` in ` ZoneAwareDiscoveryFilter . java ` to improve code readability
fix ( opentracingtracer ) : change log level from error to warn
added a toString ( ) method to the Generator class to provide a clearer string representation of the generator ' s registered count
refactor URI handling in ` mmm URI . java ` and add new test cases in ` mmm Test . java ` to improve code
added a check to throw a NoSuchResourceException if the requested resource does not exist in ClusterControllerImpl . java to improve error handling for missing resources
refactor response extraction logic to handle null responses and improve logging to enhance error handling and provide clearer logging for API issues
updated byte buffer allocation logic in VertexBufferObject for Android and above to ensure compatibility with newer Android versions and improve performance
refactor SybaseASADatabase class to improve code structure to enhance maintainability and readability of the codebase
phoenix - 5696 backward compatibility of hashjoininfo with non - default projection
added a method ` getStringDistance ( ) ` to return the value of ` sd ` in ` SpellChecker . java ` to provide access
added new PendingIntent flags and modified PendingIntent creation methods in AndroidImplementation . java to ensure compatibility with newer Android SDK versions and improve pending intent
added methods to append read column IDs in HiveFileFormatUtils and updated HiveInputFormat to use this new method to improve configuration handling for column
updated UPNPHelper to use getIPv4MulticastAddress instead of getUPNPAddress and changed related method name to getIPv4Mult
replaced multiple instances of DisplayTemporaryToast ( ) with DisplayTemporaryToast ( ) in SavedExperiments . java to provide
added version resolution logic in ServiceModule and a corresponding test in ServiceModuleTest to ensure the service version is set correctly based on parent module version
added a new test class ` RawSerializationTest ` for testing Gson serialization of collections to ensure that the ` toJson ` method correctly handles various collection
danielwagnerhall : add an api to generate ssl certificate for the selenium server
refactor the iteration over replies in ExpansionViewHelper to use an index - based approach to improve readability and maintainability of the code
increase the timeout duration in ExpiringUrlCacheTests from 3 seconds to 60 seconds to improve test reliability by allowing more time for resource
added a new test method ` testNGramFilterPayload ` to the ` TestNGramFilters ` class to verify the functionality of the token
refactor AclImpl class to improve code organization to enhance maintainability and readability of the code
added a new test method ` differentArraysShouldBeRandomizedWithDifferentSizes ` to ` EasyRandomTest . java ` to verify randomization
catch exception and log it in stop and reboot command .
added a ThreadLocal variable ` tryWriteAgain ` to manage the state of ` _ runCompleteWrite ` to ensure that the ` _ run
refactored condition checks and introduced a new method ` ancestorsVisible ( ) ` in the ` Actor ` class to improve code readability and
added a log statement to indicate the status of a rolling - update step on a deployment group to improve visibility into the failure of the rolling -
[ hotfix ] [ table - common ] fix checkstyle violation in streaming connector
added a new event class ` AuthenticationFailureUsernameNotFoundEvent ` and modified ` DaoAuthenticationProvider ` to handle ` BadCredentialsException ` to
refactor AtMostXVerificationTest class for improved readability to enhance maintainability and clarity of test cases
updated default QTYPE to use LuceneQParserPlugin ' s NAME instead of OldLuceneQParserPlugin ' s NAME to ensure consistency in
updated SimpleDateFormat instances to use Locale . US to ensure consistent date formatting across different locales
added an ` isInitialized ` method to ` ILanguageServer ` and overridden it in ` JavaLanguageServer ` , and created a new ` Loc
updated the parameter name from ` idToken ` to ` shouldHaveIdToken ` in ` ClientAPITokenIntegrationTest . java ` to improve
added methods to begin , mark transactions as successful , and end transactions in the DatabaseAdapter class to improve transaction management and ensure proper cleanup of database
replace byte array handling with ByteArrayOutputStream for reading data to improve performance by avoiding unnecessary byte array creation
refactor exception handling logic in MessagingTemplate . java for clarity and consistency to improve readability and maintainability of exception handling logic
added an ` isAcceptable ` method to ` AutoFormatVisitor ` that checks if a source file is an instance of ` J . Compilation
added maximum buffered documents and RAM buffer sizes to TestIndexWriterMergePolicy to improve resource management and performance during merging operations
added a method to clear the witness list and implemented a test for updating witnesses in ManagerTest to ensure the witness management functionality works as expected
added exception handling for NoSuchElementException in CopyOnWriteMap . java to ensure robustness by preventing potential NoSuchElementException during iteration
flume - 269 . remove log4j dependency from flume - agent .
added a reindex collection and updated various authentication assertions in BasicAuthIntegrationTest . java , and modified the daemon stream execution in DaemonStream . java
replaced HashMap with LinkedHashMap for the ' nodes ' variable in DependencyUtil . java to maintain insertion order for graph nodes
add an error mapper to jersey to return 500 error
refactor HTTP response header validation into a separate method to improve code readability and maintainability by encapsulating header validation logic
added handling for specific system property keys in System . java to improve flexibility in managing system properties based on specific Java specifications
changed method parameters from ` String ` to ` CharSequence ` in ` StringSubject ` and ` StringTest ` classes to allow for more flexible
add miss intrinsic to checkgraalintrinsics to allow checkgraalintrinsics to be investigated
rename IntUtilsTest class to PrimUtilsTest to clarify the purpose of the test class
updated the datasource assignment in PersistenceManagerProvider to use a conditional statement to ensure the correct datasource is used when in compaction mode
refactor DeploymentOptions class for improved clarity to enhance code maintainability and readability
updated the ` updateTextButtonWithDrawable ` method to accept a ` Drawable ` instead of ` Drawable . ConstantState ` and modified the drawable
updated XmlParser and YamlParser to use try - with - resources for better resource management to ensure proper resource management and avoid potential memory leaks
added support for the COALESCE function in the RexNodeConverter and SqlFunctionConverter to enhance the functionality of the COALES
camel - 15836 : camel - hl7 - fix the unit test error of camel - hl7
updated JavassistProxyFactoryFactory to use the current thread ' s context class loader to ensure proper class loading during proxy factory generation
updated DefaultDateTypeAdapter constructor and added synchronized keyword to serialize and deserialize methods to ensure thread safety during serialization and deserialization processes
reformatted method signatures in DocumentUtil . java for improved readability to enhance code clarity and maintainability
refactor HttpClientRequestBase to simplify URI and query handling by directly setting the URI and parsing the query to improve code readability and maintainability
added a method to filter out entries that are less than 50 to improve the efficiency of feed entry retrieval by ensuring only relevant entries are processed
hbase - 2649 fix log level in fshlog . append to warn
replaced the getValues ( ) method with a new NodeMapIterable class and refactored iterator and remove methods to improve code organization and enhance
updated import statements and variable names for clarity in DiscoveryClientRouteDefinitionLocator . java to improve code readability and maintain consistency in naming con
added a check for non - empty fields before adding aggregation operations and updated return logic in RexToMongoTranslator to ensure operations are only added
added ' admin ' to the admin list if it do n ' t exist
replace usage of MultiFields with SolrIndexSearcher in IGainTermsQParserPlugin , SignificantTermsQParserPlugin , and TextLog
updated the return statement in ConstantBeanHolder to include class name and identity hash code to improve readability of the returned string representation for better debugging
remove unnecessary line number check and simplify return statement in GroovyParserVisitor . java to improve code readability and maintainability
[ gr - 21933 ] remove unused ` hashcode ( ) ` and ` tostring ( ) ` intrinsics .
updated timeout values for blockingFoo and blockingBar in SedaBlockWhenFullTest . java to improve test reliability by adjusting
added a new file ` package - info . java ` in the ` org . apache . lucene . core . testresources ` package to
update calculation of read length in MessageUnpacker . java to ensure correct handling of buffer size during read operations
updated import statement from ` io . micrometer . common . lang . Nullable ` to ` io . micrometer . core
updated SQL query in IconCache . java to include user - specific filtering to ensure proper filtering of icons based on user context
change defaultmqproducer # getbackpressureforasyncsendnum to defaultmqproducer # getbackpressureforasyncsendsize so that
do n ' t allow module - info . class to be whitelisted by module - info . class
fix a bug in the baremetal - dhcp - devices table due to the foreign key change in 4.2 . x
removed the IJava2DRenderer interface and modified Java2DRenderer class to simplify the class structure and remove unused interface
added onTearDown method to DefaultAudioSink class to ensure offload buffer is cleared when the audio track is tear down
added scheduled task functionality for handling upstream tasks with configurable delays to improve performance and responsiveness of the upstream task execution
refactor StreamType class to improve code structure to enhance maintainability and readability of the code
updated assert statement in Recording . java to include additional context to improve debugging by providing context on the expected output
updated FilestorePage and RootPage to use @ RequiresAdminRole for role - based access control to enhance security by restricting access to
camel - 18131 : ignore camel - elasticsearch - rest test until we can fix it
refactor the ` accept ` method to improve type checking for ` Lifecycle ` and ` CustomizableThreadCreator ` to enhance code clarity and
updated button labels in OfferBookChartView . java from " leftButtonAltcoin " and " rightButtonAltcoin " to "
camel - 8705 : restlet component / restlet / methodbasedrouter should return 404 instead of 500 in case of invalid url .
block : remove unused parameter from createnextblock ( )
removed the Serializable interface from BTreeMapJava and updated test methods in ConcurrentSkipListMapTest and JSR166Test to ensure proper serialization
added null check for the cause before logging the error message in RuleEngineImpl . java to avoid potential NullPointerException when retrieving the cause
refactor conditional statement for better readability in Main . java to improve code clarity and maintainability
updated the method call from ` mFilesAll . indexOf ( file ) ` to ` mFiles . indexOf ( file ) ` to ensure the
deleted the PlainVerifier . java file to the functionality is no longer needed in the project
added a condition to close the system windows when the alt tab is triggered to improve user experience by closing recent notifications when the alt tab is triggered
refactor dialog handling in DialogFragmentIT and OCFileListBottomSheetDialog to improve code clarity and functionality to enhance dialog management and ensure
added " UTF - 8 " parameter to MimeUtil . parseCharset calls in RestAdapter . java to ensure proper character encoding when parsing MIME types
added a call to the superclass ' s deinitialize method in the TextField class to ensure proper initialization of the TextField component
replaced manual serialization code with utility methods in LogFormatTest . java to streamline the serialization process and improve code readability
updated the method to retrieve the previous duration from ` previousClause ` and modified the ` PreviousFill ` initialization in ` GroupByFillDataSet `
updated array size validation and added negative handling in JAXWSExceptionBase . java to ensure proper error handling for negative array sizes and improve robustness
test ( refactor ) : migrate ctunresolvedimporttest to junit 5 ( # 4348 )
increased the join duration from 10 seconds to 60 seconds in T6567415 . java to allow more time for the thread to
[ hotfix ] [ runtime ] change default slotmanager . slotmanager . default . network - memory - min and network - memory - max
added a ` title ` field with getter and setter methods in ` ShadowActivity ` , and updated annotations in ` ShadowAlertDialog ` , `
replaced Apache Commons Logging with POI logging in POIFSFileSystem . java to improve logging performance and maintainability
updated alarm handling in InstarHandler to handle string representations of alarm codes and objects to improve clarity and maintainability of alarm detection logic
add map . delete ( ) and localmapstats . getremoveoperationcount ( ) in mapdeletemessagetask ( # 1
refactor status check in Response . java to use a switch statement to improve clarity and maintainability of status validation logic
updated CheckResourceKeys to use a dynamic findJavacLocation method for javac location retrieval to improve flexibility in locating Java files
set the project name when create a new project ( # 3246 )
added a new test class DeprecatedStubbingTest for testing deprecated methods in Mockito to ensure proper functionality and error handling of deprecated methods in Mock
replaced ` org . eclipse . jetty . server . DispatcherType ` with ` javax . servlet . DispatcherType ` in ` IT
fix partmod for when modify np have nml and nx in the tree
add boolean system property to allow rsa key exchange in fips mode
refactor variable names from ` output _ reader ` to ` reader ` for consistency to improve code readability and ensure proper resource management
refactor OAuth service handling in PubSubAPI , SDMAPI , and SDMAccountHandler classes to use a unified OAuthFactory and its handle
replaced AGGRESSIVE _ EASE interpolator with EMPHASIZED interpolator in TaskbarEduView . java
added handling for UpdateRegionLocationPlan in ConfigPhysicalPlan . java and updated logging levels in ProcedureManager . java and RegionMigrateProcedure . java
added a new file ` FileDialogLeakTest . java ` to test the garbage collection of ` FileDialog ` to ensure that the `
hbase - 25827 move testopentableincoprocessor to hbase - coprocessor ( addendum )
truffle : do not mark uninterruptible method a non - interruptible .
[ flink - 20663 ] [ protobuf ] fix the code generation of very - big - pb message in protobuf format
modified the condition to check if ` dims [ 1 ] . disi ` is not null instead of checking for ` dims [ 1 ] .
update FakeMediaSource to use a Handler for source info refreshing to ensure that the source info is refreshed on the main thread for accurate testing
added JVM version checks in Constants . java and updated Helper . java to use it to ensure compatibility with Java 9 and above
updated FileReporterTest to explicitly cast null parameters to String and File types to ensure proper handling of null values in the FileReporter constructor
changed the condition from checking for end - to - end encryption keys to checking for true status to ensure that end - to - end encryption keys
added menu item handling for the home button in DirectMessageConversation to improve user navigation by allowing back navigation through the action bar
added GET _ USER protocol and updated PROTOCOL _ VERSION to 6 , and implemented user retrieval logic in RpcServlet and RpcUtils to enhance user management
added @ EnabledIfSystemProperty annotation to TestJdbcPluginWithMSSQL . java to ensure compatibility with specific operating systems
replaced the direct usage of ` startClass ` with a temporary variable ` originalStartClass ` in ` WhiteboxImpl . java ` to
updated exception message format and added local handling for parameter registrations in DexBody . java to improve clarity of error messages and ensure correct unit
replaced calls to ` getAsyncContext ( ) . getResponse ( ) ` with ` getSuppliedResponse ( ) ` in ` TestAsyncContextImpl
jbrules - 2842 : fix nimbus look and feel when use nimbus planner
updated regex pattern in AppPage . java to ensure consistent formatting to improve readability and maintainability of the code
refactor animation listeners in LauncherAppTransitionManagerImpl to use instance variables for alpha and translation to improve code clarity and maintainability by
dumpedprivatekey : use version instead of base58 in error message
fix editofferdatamodel to use newofferpayload instead of offerpayload
updated milestoneParameters initialization to conditionally use ` WicketUtils . newOpenTicketsParameter ` or ` WicketUtils . newRepositoryParameter
pipeitemswood now set the battery to 80 per item , not 640 per item
updated the ` getStateMachineClusterInstance ` method to include a ` blueprintName ` and ` blueprintRev ` parameters for cluster key retrieval to enhance
set the default value of the downgradeAllowed variable to true and add a new test for its behavior to ensure that the downgrade feature is
replaced ` NameType . ATTRIBUTE ` with ` NameType . ATTRIBUTENAME ` for element and attribute names in multiple scanner implementations to
enable emulate system load library by default
fix issue where all apps do n ' t appear in the first page of the widget
updated file handling in DefaultPlatformManager and FatJarStarter to ensure parent directories are created before creating the output stream to prevent file operations
updated the ` doTest ` method and assertion message format in ` TestSecretKeyCredentialHandler . java ` to improve clarity of test output and
fix issue with findrouteconfigurationbean and routebuilderfinder not be able to find package .
[ hotfix ] [ doc ] fix typo in metricoptions description
hbase - 25836 testfulllogreconstruction fail on window because of dfs . support . append
added ` reuseAddress ` and ` setTrafficClass ` methods to ` DatagramSocketOptions ` class to enhance socket configuration flexibility by allowing
fix checkstyle issue in net / glowserver / glowserver . java ( # 1181 )
douniaberrada : remove deprecate locatable interface , since it ' s no longer use
updated error messages in VersionInfo . java for clarity to improve clarity of error messages regarding schema fields and document values
replaced equalityPredicateColumns with predicateColumns in StarTreeIndexOperator . java to improve clarity and consistency in naming conventions
removed duplicate code lines in HandshakeHandler . java to improve code readability and maintainability
updated closing brace formatting in Navigator . java to improve code readability and consistency
updated constants in RecordReaderFactory to remove ' private ' keyword and added a new constant for ParquetRecordReaderConfig class to improve readability
added support for greater and less equality criteria in MongoQueryCreator to enhance query creation capabilities for comparisons
refactor GROUP BY clause handling by introducing a helper method for checking expressions outside the GROUP BY clause to improve code readability and maintainability
replace UnsupportedOperationException with Unsafe . invokeCleaner ( ) in MappedByteBuffer . java and add unmap method in FileChannelLinesSpliterator . java
replaced direct calls to ` l . getValidator ( ) ` with a local variable ` validator ` for improved readability to enhance code cl
added a schedule method to CircuitBreakerImpl and modified testDuration in CircuitBreakerTest to improve scheduling functionality and enhance test timeout handling
removed FLAG _ ACTIVITY _ EXCLUDE _ FROM _ RECENTS from intent flags in Launcher . java to simplify intent flags to
rename webui . submit . upload . ajax to webui . submit . upload . progressbar so that it would well reflect our new progress bar
updated the display name in TableExtRetrieverTest from " Retrieve view column privileges " to " Retrieve column privileges " and added the @ Disabled annotation
added synchronized keyword to ` addExportedCount ` and ` getExportedCount ` methods to ensure thread safety when accessing shared resources
updated import statement to use IntRangeUtil . requireNonNegative instead of IntRangeUtil1 . requireNonNegative to ensure compatibility with the latest
updated character validation and encoding logic in HttpParser . java and added a test for encoded headers in HttpParserTest . java to ensure proper handling
updated the layout reference in ConfigurePagerActivity from trends _ activity to configuration _ activity to align the application with the new configuration layout
updated print statement in SLWTTextListing . java to include position and position information to improve clarity of output for SLWT
refactor ForceLeaderTest to conditionally use Tlog replicas and introduce a new test class for testing to improve test reliability by allowing
refactor Thread class to improve code organization to enhance maintainability and readability of the code
added new template file suffix constants and a forceTemplateMode flag in AbstractConfigurableTemplateResolver . java to enhance flexibility in template handling by allowing
camel - 7507 fixed the issue of camel - cxf do n ' t handle the namespace correctly
reformatted constructors and class definitions in YamlRepresenter . java to improve code readability and consistency
updated the way day and month values are formatted in ToChar . java and added a test case in TestFunctions . java to improve readability
added configuration checks for valid transaction and write ID settings in GenericUDTFGetSplits . java to ensure proper handling of valid transaction and write
replaced ` ArrayList ` with ` Collections . emptyList ( ) ` for empty checks for ` columnNameProperty ` and ` columnTypeProperty ` to improve
added a null check for the book path before loading data in DataHolder . java and introduced a method to check for initial images in Picture .
sstdeserializer : do n ' t try to manufacture all sst string if there be no next record .
refactor grid column retrieval logic to use a constant in AppPreferencesImpl to improve code readability and maintainability by centralizing default value
updated the diff field message to specify that line contents match but line - break characters do not differ to improve clarity in the diff output for
[ java ] track whether we wait for a key in the clipping period .
removed the " / api " prefix from the @ Path annotations in OkexV3 . java to simplify API path for improved clarity
added curly braces to conditional statements in LineUtilitiesTests . java to improve code readability and maintainability
added error logging for varargs and old array syntax in JavacParser . java and created new classes T6569633 . java and
log warn if defaultdrmsessionmanager be use on wrong thread
added METHOD variable handling and corresponding unit tests in VariableContext . java and corresponding test cases in TestVariableContext . java to enhance variable context parsing
added unit tests for parsing invalid compilation unit and profile string JSON in ExperimentParserTest . java to ensure proper error handling for invalid JSON inputs
[ java ] set buffer . position ( ) in place of bufferformessage . capacity ( ) .
added HttpClientProperties support to NettyRoutingFilter and related classes to allow configurable response timeout settings for improved HTTP client response handling
refactor NativeLinkTarget handling in CxxLibraryFactory and replace deprecated methods in NativeLinkTargetGroup to improve code clarity and maintainability
camel - main - add unit test base on user forum issue
added support for handling RexFieldAccess in ASTConverter and RexNodeConverter to enhance the parsing of field access expressions in Hive
replaced direct calls to ` QueryLogEntry . values ( ) ` with a static final array ` QUERY _ LOG _ ENTRY _ VALUES ` to
fix ( proxy ) : use proxy . noproxy predicate to determine whether to relativize uri without proxy .
refactor certificate handling in PKCS12KeyStore and update references in StoreSecretKeyTest to improve clarity and correctness in handling certificate chains and alias
added reflection access checks and updated related method names in NativeObject , Bootstrap , and ReflectionCheckLinker classes to enhance security by enforcing proper
removed the public access modifier from the constructors of the CollisionMap class to enforce encapsulation within the package
mark getrawinputfromtransactioninput a deprecate and add null check
refactor conditional statements in ConfigurationValueConverter and Main classes to use a switch statement to improve code readability and maintainability by using a switch
remove region _ id from user and account table when create a new user
bug 60284 : throw an encrypteddocumentexception when extract text from old excel file
add -- add - exports = all - unnamed to native - image - builder benchmark
removed unnecessary whitespace in TimeLineCursorAdapter . java to improve code readability and maintain consistency
increased the scheduler timeout from 10 to 50 seconds and modified sleep duration from 10 to 1 milliseconds in BatchingStateChangeUploadSchedulerTest to
refactor file handling in ` ShadowContext ` and ` ContextTest ` to use a dedicated ` deleteDir ` method to improve clarity and
refactor exception factory initialization to use method references instead of anonymous inner classes to improve code readability and reduce boilerplate in exception handling
increased WAIT _ TIME _ MS from 10 , 000 ms to 60 , 000 ms to allow more time for launcher operations to complete
updated import statements and added audience handling in ConnectOAuth2RequestFactory and ConnectTokenEnhancer classes to enhance request processing by incorpor
( chore ) camel - kafka : remove default value for breakonfirsterror in camel - kafka
added a new constant named selectableItemBackground to the R class to provide a way to specify a background color for selectable items
replaced individual imports of trade DTOs with a wildcard import and added a placeholder method for placing stop orders to streamline import statements
updated event type assignment logic in TxnSetOperation . java to ensure correct event handling for updated entries
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 56362 - use http
updated the class loading mechanism to use " AbstractAccessLogValve $ 3 " instead of " AccessLogValve $ 3 " to ensure
added logic to manage format records in HSSFDataFormat . java and updated test assertions in TestWorkbook . java to ensure correct format handling
[ hotfix ] [ kafka ] deprecate unused method in flinkkafkaproducer
updated the condition for checking compressed chunk length in CompressedInputStream . java to ensure correct validation of the length against the maximum compressed length
camel - 14263 : camel - spring - data - redis - add an idempotent repository that store multiple value with the same key in redis
fix vanilla bug where vanilla use metadata instead of damage .
do n ' t try to create artifact from local repository if it ' s not in the local layout
[ hotfix ] [ runtime ] only log error if local instance manager can not be start
add maven deploy option for artifact resolution error
updated temporal path handling in UploadFileOperation . java and added internalTemporalPath method in FileStorageUtils . java to improve file management and ensure
replaced the import statements for Lists and Maps with Apache Commons collections and added a new method to find FeedEntryStatus by entries to improve
added thread execution timing checks in ` ContextImpl . java ` and improved variable naming in ` BlockedThreadCheckerTest . java ` to
updated the ` instantiate ` method to accept a formatter string and modified the ` convert ` method to accept an optional output argument to enhance error handling
updated file input stream handling in LoadContactsTask . java to support different Android SDK versions to ensure compatibility with different file input streams across different Android
replaced setter methods for remoteAddress and hostname with direct assignment to improve code clarity and reduce unnecessary setter methods
added a null check for realClass in Robolectric . java to ensure that the shadow class is annotated with @ Implements to prevent runtime
http : / / issues . apache . org / jira / browse / amq - 4657 - allow tlsmutualauthenticationrequired
updated import statements in BasicHttpTest . java to include ISO _ 8859 _ 1 charset and added a test for handling SSL exceptions to ensure
added getter methods for consumer and producer in AbstractKafkaResumeStrategy to enhance accessibility of consumer and producer for external use
added import statements for ArrayList and ArrayList in FrameRenderer . java and modified conditional logic in PageChangeListener . java to enhance code clarity and ensure
updated warning message to indicate SMS instead of email when no email settings are configured to improve clarity and accuracy of warning message for better debugging
# 263 - enh : add query optimization for draftable bean ( # 263 )
added exception handling for IO operations in MultipartBody . java to improve robustness by handling resource temporarily unavailable scenarios
fix ( core ) : fix checkstyle issue in util / zipfolder . java ( # 2328 )
refactor multiple classes related to EndpointConfiguration , SpEL , MainSupport , and SSLContextParameters to improve code organization and maintainability
fix attach file not work if file directory be not set
added LoadOptionsBuilder and updated SchemaCrawlerOptions initialization in AccessTest . java to enhance schema loading options for improved functionality
updated package structure and test method names in TestLoadLegacyLibrary . java to improve clarity and organization of test cases
replace throwing an exception with returning null in TestReader . java to simplify error handling by returning null instead of throwing an exception
added methods to set name , enabled , and expanded properties from the prototype to enhance the functionality of the ProjectProperty class by allowing dynamic property updates
refactor connection handling in AbstractDbmsOperationHandler to use try - with - resources to ensure proper resource management and avoid potential memory leaks
[ hotfix ] [ datastream ] fix checkstyle violation in datastreamjob
refactor error handling in TestContentProvider to use try - with - resources for FileOutputStream to ensure proper resource management and avoid potential resource leaks
camel - 14263 : camel - cxf should use cxf ' s classhelper to get the name of the service class .
added a condition to check if the protocol is " h2 - 14 " and modified the return logic in HTTP2ServerConnectionFactory . java to
updated method symbol handling in LambdaToMethod and added lambda detection logic in ClassFileVisitor and ReflectionVisitor to improve clarity and correctness of lambda
fix a bug in the coordinate transformer where the whnp do n ' t match the whnp = what
fix dl4jinceptionv3net test failure on slow box
added a phraseSlop setting to the mpq object to enhance query processing by incorporating phrase sensitivity options
increased sleep duration from 10 milliseconds to 100 milliseconds in LongPressMouseListenerTest . java to improve test reliability by allowing more time
updated the heartbeat timeout from 8188 to 6188 in FlumeTimelineMetricsSink . java and HadoopTimelineMetricsSink . java to
add terasology . scheduleparser . scheduleparallel ( string name , Runnable task ) to make it possible to run game task
updated visibility logic for the compound view based on whether edit options are available to ensure the correct view is displayed based on the availability of edit options
updated the progress calculation in DepthController . java to ensure a minimum value of 1.1 f to improve stability by preventing negative progress
( chore ) camel - xmpp : remove unused packetreceived method
added debug logging and refactored authentication handling in the DefaultCasDelegatingWebflowEventResolver and DelegatedAuthenticationGenerateClientsAction classes
added null checks for the service before accessing its properties in SamlIdPEntityIdAuthenticationServiceSelectionStrategy and SamlIdPMetadataUI
[ pantheon ] add ` ` hidden ' ' flag to cli command ( # 1348 )
added a method to exclude the class " CoroutinesRoom $ Companion " from instrumentation to prevent the instrumentation of specific classes related to Cor
modified the ` isSupported ` method to synchronize access and added logging for security exceptions to improve thread safety and enhance debugging capabilities during authentication checks
removed the ` setInitScript ` method from ` InitializingDataSourceFactoryBean ` to streamline the initialization of the ` initScripts ` array
camel - 15836 : camel - core - optimize to reduce stack frame in use during rout with rout engine .
refactor AuthenticationProvider and TargetObject classes for improved clarity to enhance code maintainability and readability
added methods to flush and close MC blocks for tagged PDF elements in PdfDocument . java to ensure proper handling of image tags in PDF processing
log4j2 - 1343 add unit test for patternselector and markermanager . createpatternselector ( )
simonstewart : make sure we can run the iehta test in iehta mode
updated the thank method parameter type from MwPostResponse to MwThankPostResponse and added a new class MwThank
added a new interface ` SocketBased ` and updated ` ChannelEndPoint ` and ` SslConnection ` to implement it to enhance socket handling capabilities in
updated revokingStore initialization and max size calculation in mmm Manager . java and ppp Manager . java to ensure proper management of rev
added unit tests for implicit join scenarios in HQLTest . java to ensure correct handling of implicit joins in the query execution
updated assertions in NonVisualRegressionTest to normalize line endings to ensure consistent line endings across different operating systems
updated IndexWriter and related classes to manage file references more effectively to improve resource management and prevent potential memory leaks during file closure
changed method access modifiers from ' final ' to ' package - private ' for several methods in BaseError . java to allow for subclassing and
added validation for user resource percentage in ConsumeUserResourcePercentActuator . java to ensure the percentage is within the range of 0 to 100 to
added a condition to check if legacy login should be displayed based on a resource flag to enhance user experience by allowing users to toggle the display of
rename the test class from StreamNetworkThroughputBenchmarkTests to StreamNetworkThroughputBenchmarkTest to improve clarity and consistency in naming conventions
updated the response page assignment in EditTeamPage . java to ensure the correct page is used for user navigation
updated debug log message to include the exception when initializing plugin credentials to improve clarity of error logging for better debugging
refactor connection management to ensure proper shutdown and shutdown of the server socket channel to improve resource management and prevent potential resource leaks
refactor Rocket class to improve code readability to enhance maintainability and facilitate future development
refactor partition specification creation logic into a separate method ` createDynPartSpec ` to improve code readability and maintainability by encapsulating logic
use round _ half _ up _ factor instead of round hack for long integer
added a visitDirectory method to JarDirectoryStep and implemented directory entry handling in DirectoryTraversal to enhance directory traversal functionality and ensure proper entry management in
added a new file ` JWKSetEditor . java ` that extends ` PropertyEditorSupport ` to handle JWKSet property editing to facilit
refactor ` finish ` methods in ` OrdsBlockTreeTermsWriter ` and ` BlockTreeTermsWriter ` to remove minTerm and max
do n ' t try to resolve klasses for method that do n ' t have them .
changed default value of ` fetcher . threads . per . host . by . ip ` from ` true ` to ` false ` to disable thread
modified the condition for setting timeToLiveOfQuery in StatementUtil . java to handle the case when queryTimeout is null or zero to ensure that
added imports for UnconfiguredTargetConfiguration and TargetConfigurationHasher in HaskellGhciRuleIntegrationTest . java to include target configuration
refactor ReplicaPosition class to improve code structure to enhance maintainability and readability of the code
cloudstack - 7563 : network usage stats update task should run immediately if initial delay be negative .
updated animation interpolators in QuickstepAtomicAnimationFactory and AllAppsTransitionController to use a new FINAL _ FRAME constant to improve clarity
updated swipe length calculation in Background . java to adjust the vertical position based on display density to improve user experience by adjusting swipe position based on
added a new module - info . java file for the Jetty HTTP3 server module to define module dependencies and organize code structure for better
refactor json handling in JsonType . java and JsonTest . java to use constants for JSON object names to improve code readability and maintain
simplified the assignment of the ` ctx ` variable by removing unnecessary parentheses to improve code readability and maintainability
[ hotfix ] [ checkpointing ] use get ( ) instead of getoptional ( )
refactor ` reportInnerClassReferences ` method to accept ` Element ` instead of ` TypeElement ` and introduce ` visitPackage ` method to
modified the command string to include an additional space after the system property " test . tool . vm . opts " to ensure that the command correctly
replaced FluentIterable with Java Streams for file listing to improve code readability and leverage modern Java features
[ 3.0 ] add register parameter to service config ( default to true )
disable otr session when security otr mode be disable .
added new properties for node label outline size , color , and transparency in PreviewProperty . java and updated renderProcessing method in NodeLabelRenderer .
refactor ProxySelector , URL , and URLStreamHandler classes to improve code organization and maintainability
updated boolean value from false to true in Win32FontManager . java to enable font loading functionality in the application
added null check before visiting a tree element in TreeVisitor . java to ensure the cursor is reset when the visitor is not null
fix ( jdtbatchcompiler ) : use errorhandlingpolicy for non - classpath jdtcompiler
added methods for setting and getting content alignment point and text anchor in LabelBlock class to enhance flexibility in label rendering by allowing customizable anchor
refactor Class and Parameter classes to improve code organization to enhance maintainability and readability of the codebase
refactor IndexReader . java to improve code structure to enhance maintainability and readability of the code
replaced boolean isLoopback with Boolean isLoopback and added null check for networkInterface to improve clarity and prevent potential null pointer exceptions
added Locale parameter to SimpleDateFormat and its usage in multiple classes to ensure consistent date formatting across different locales
updated the download method in FileDownloadViaProxyTest to specify the file extension to ensure that the download method correctly identifies and accepts a PDF file
nifi - 1341 add property to allow to output no hit flowfile
serviceoffering : calculate one - hour cost per hour instead of per minute
[ java ] add try - with - resources to prevent deadlock .
remove uncheckrun ( ) call from readfilesp . close ( )
refactor widget handling logic in PageChangeListener . java for improved readability and maintainability to enhance code clarity and reduce redundancy in
added isWriteProtected ( ) method to Workbook , FileSharingRecord , and HSSFWorkbook classes , and improved error handling in
added a try - catch block around the unregisterInvalidatedSessions ( ) method to handle potential exceptions during session unregistration
refactor CategorizationFragment to improve code organization to enhance maintainability and readability of the code
updated the status update message in HueLightHandler . java from " reachable = false " to " not reachable " to improve clarity of
add a loading flag to the fmlclienthandler so we can check if the game be load .
add ` ` unit . millions ' ' and ` ` unit . thousands ' ' to ui and blockinventoryfragment
refactor MessagePackParser to use a switch statement for type handling and add a new class for BinKeyPojo to improve type handling and
added parameterized tests for querying reserved words as identifiers in HqlQueryTransformerTests and JpqlQueryTransformerTests to ensure proper handling of reserved
added unit tests for serialization and deserialization of nested maps in MapTest . java to ensure proper handling and deserialization of nested maps in JSON
added bounds checking for x2 and y2 in GeometryUtils . java to ensure coordinates do not exceed the specified offset
refactor sorting order handling in FileDisplayActivity and ReceiveExternalFilesActivity to utilize SortingOrderDialogFragment to improve code clarity and
do n ' t exit if testplan can not be find
refactor ` JdbcManagerSupportImpl ` to use ` Lazy < DbmsType > ` and ` Lazy < DbmsOperationHandler > `
modified argument handling in the parser to check for both strict and non - strict idents before adding to the parameters list to improve robustness by
updated the default protocol setting in JettyHttpComponent9 to use the configured protocol from the scf object to improve flexibility by allowing dynamic
set default value of displayVolume to true in VolumeVO . java to ensure that the displayVolume variable is set to true by default
updated the version method to accept a boolean flag and improved logging message handling to enhance flexibility in versioning and provide clearer version information
refactor condition checks in ChangeLogParameters . java for better clarity and functionality to enhance the logic to prioritize global change logs and improve
changed log level from warn to debug in JtaTransactionManager . java to reduce log verbosity for non - existent transactions
hhh - 14663 skip test setoperationtest due to basicformatterimpl bug
added handshake and socket timeout adjustments to the sslSocket configuration to ensure proper socket timeout handling during SSL connection establishment
updated the status bar height calculation in multiple fragments to account for the ` MainActivity . isPopup ` flag to ensure that the status bar height
[ gr - 21199 ] make default / noop class hierarchies oracle final .
resolve http : / / issues . apache . org / activemq / browse / amq - 2692 - set correct classloader for
refactor JodaTimeRangeRandomizersTest to use AssertJ assertions and simplify data provider usage to enhance readability and maintainability of tests
added conditional logic to redirect XML resources based on servlet version to ensure compatibility with Jakarta EE and Jakarta EE
implement readiness . isready ( ) to check if an item be a node
replaced liveEndpoints with handler . endpoints in StorageProxy . java to ensure proper endpoint retrieval from the handler
added a null and empty check for creationStatements in IdTableHelper . java to prevent potential NullPointerExceptions during execution
updated RPC _ VERSION from 1 to 2 in DataRpcConfig . java and UserRpcConfig . java to reflect the latest version of the RPC
added security checks using System . getSecurityManager ( ) in ObjectStreamClass . java and ObjectStreamField . java to ensure security checks are only
removed unused imports and updated return statements in Utils . java , and made UGSCommandCount private in XLCDCommunicator . java
refactor DefaultMetricsTagProvider to use HashMap instead of ImmutableMap for tagging to improve code readability and reduce dependency on Google Commons collections
simonstewart : add the mockbrowsertest to the test suite , so that it do n ' t interfere with the
change default logging level from OFF to ERROR in Launcher . java to improve error handling by reflecting the appropriate logging level
changed instance variables mPaintIcon , mCanvasARGB , mDir , mRandom , and mPixels to be final in IconNormalizer .
added a boolean flag ` firstCallPrepareDo ` and modified prefix invocation logic in ` PrepareInterceptor . java ` to allow control over the invocation
refactor workspace visibility and overview mode handling in Launcher . java and ApppsCustomizePagedView . java to improve user experience by
added Singleton annotation to AuthWithStoreFeature and simplified bindings in Auth . java and AuthWithStoreFeature . java to improve code clarity and
updated the incomingAssociations method to accept an additional parameter for ignoring invisible associations to enhance functionality by allowing conditional handling of invisible associations
remove private ip from capacity _ type _ private _ ip when delete a pod
updated command description for async profiling in ProfileServlet . java to provide clearer guidance on using the Basic Usage section on Linux 4.6
add support for @ ref ( required = true ) to @ ref ( required = true ) property
updated class names from CasCoreConfigurationWatchConfiguration and CasCoreConfigurationWatchConfiguration to CasCoreConfigurationWatchAutoConfiguration and CasCoreEnvironmentBootstrapAuto
refactor FeatureFlags class for improved clarity to enhance maintainability and readability of the code
updated UUID formatting and improved string construction in ConfigStore . java and added a test for large Hue IDs in CommonSetup . java to
added caching logic for ` picture ` in ` TimeLineCursorAdapter ` and ` TimelineArrayAdapter ` classes to ensure the image is set
updated compaction documentation to clarify that compaction on insert - only tables will always run via queries regardless of configuration settings
added a null check for mWaitingToSend . getStoragePath ( ) in FileDisplayActivity . java to ensure stability by avoiding potential null
refactor resize condition checks and introduce a new constant for minimum size to improve code readability and maintainability by centralizing resize logic
renamed LDAPConnectionService class to improve clarity to enhance code readability and maintainability
deprecate the @ xmlattribute ( required = true ) in favor of the @ deprecate annotation
removed debug tracing logs from TouchInteractionService and RecentsAnimationDeviceState to streamline code for better readability and maintainability
added a condition to check if the class name starts with " com . intellij . rt . junit . " in AbstractSoft
updated assertions in TestMultiSearcher to use hits2 and hits3 instead of hits to ensure correct validation of the length of hits in the
added a new class LucenePackage with a static method to retrieve the Lucene package to facilitate the retrieval of the Lucene
corrected the addition of ` sizeInBytes ` by subtracting ` existing . sizeInBytes ` from ` sizeInBytes ` to correctly account for the
updated return statements in StatsRulesProcFactory . java to remove unnecessary type casting and added estimation methods in GenericUDAFBloomFilter . java
added a null check for getDrawerToggle ( ) before processing animations to prevent potential NullPointerExceptions when the drawer toggle is not initialized
added @ SuppressWarnings ( " unused " ) annotation to convertToAuthentication method to suppress warning about unused parameter
added logic to determine if scanning modules should be enabled based on class loader types to enhance flexibility in scanning classes based on configuration options
fix export format for msbib without latex - free field
added a method to cancel core recovery in ZooKeeper aware mode to improve resource management and error handling during core shutdown
replaced ` System . currentTimeMillis ( ) ` calls with ` currentTimeMillis ( ) ` and introduced a new method ` currentTimeMillis ( ) ` to improve
simplified the logic for clicking the first item in the found list to improve code readability and maintainability by simplifying the logic
[ hotfix ] [ doc ] fix typo in javadoc of pgproperty
added security - related fields and modified the SecurityExpressionRoot initialization in SecurityEvaluationContextExtension . java to enhance security context handling and improve object initialization
added a check to set the exponentSize to primeSize - 1 if it is zero to ensure the exponentSize is always initialized to primeSize
replaced direct usage of ` FileStorageUtils . getSavePath ( ) ` with ` FileStorageUtils . getUsableSpace ( mAccount
modified the ` combine ` method in ` DistinctSqlAggregation ` to handle multiple values instead of a single delegate to improve the efficiency of combining
added a test to verify that calling the login method correctly executes post - login activities upon successful authentication to ensure that the user ' s login process
make extractorframesraare more flexible by allow a path to be pass in .
refactor CharArraySet to simplify code initialization and improve contains method logic to enhance readability and maintainability of the code
updated error messages and improved track type validation in MuxerWrapper . java to enhance clarity and maintainability of track management logic
refactor JsBundleGenrule to replace JsBundleAndroid with AndroidPackageable and update related methods for improved type handling to enhance compatibility with
fix string dictionary lookup for utf - 8 character ( # 10698 )
rename logical analyzer to logic analyzer , it ' s now a tile icon .
added instanceClassName and instanceClass variables and modified vector instantiation logic in AbstractVector . java to improve performance by reusing instance instances when vectorClassName
removed syncMetaLeader ( ) method from CMManager . java to streamline leader synchronization process for improved performance
update contribution question to display ` ` no response ' ' instead of ` ` not submit ' '
added TestLoggingExtension import and annotation to DiagramRendererTest to enable logging capabilities during tests
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 395 : add
added VIOMI _ WATERHEATER _ E1 device type to MiIoDevices . java to support compatibility with ViIo
refactor SSL session data retrieval to use a local variable for clarity to improve code readability and maintainability by reducing method calls
added a new file CreateNewSpreadsheet . java to demonstrate the creation of sheets in Apache POI to facilitate
changed the ` ttl ` field type from ` Duration ` to ` long ` in ` CacheProperties ` and updated related getter and setter methods to
replaced ` CONTENT _ URI ` with ` CONTENT _ URI _ NO _ NOTIFICATION ` in multiple files to ensure consistency in content URI handling
updated testCompile group version from 2.14 . 0 to 2.27 . 2 in SwaggerResolveTest . java to ensure compatibility with the
replaced ` lucidaFontName ` synchronization with ` this ` synchronization in ` SunFontManager . java ` to ensure thread safety
added a condition to check if the character is ' < ' before verifying ' ltLen ' in DocClassUtil . java to ensure correct
replaced String . format with direct string retrieval for workspace scroll format to simplify string formatting and improve readability
added import statement for Liquibase Scope and sent a message indicating no validation errors to improve user feedback by notifying when no validation errors
updated imports and introduced a method to configure web resources in IntegrationTestContextLoader . java to improve resource management and ensure proper servlet context initialization
updated method calls from ` getResponderAt ( x , y ) ` to ` getComponentAt ( x , y ) ` in multiple classes to
removed unnecessary whitespace in RamlType . java to improve code readability and maintain consistency
added a new ` ClientStat ` class and updated method signatures and data types from ` Long ` to ` String ` in ` StatsService `
replaced instances of " $ 1 " and " $ 2 " with " $ \ n1 " and " $ \ n1 " in
simonstewart : add support for \ r \ n in regexp
mondrian : fix typo in mondrian . properties javadoc
added stack trace printing functionality to ProcessTools . java and improved launcher path handling in CustomLauncherTest . java to enhance debugging capabilities and ensure
removed the testEmbeddedImage method from TumblrRipperTest . java to streamline the test case by eliminating unnecessary
added a conditional check for symbol slots before converting storeType to ensure that the conversion only occurs if the symbol has a slot for the storeType
optimize chunk so that it do n ' t need to re - init each chunk
updated imports and refactored IndexWriter initialization in BaseLockFactoryTestCase . java to improve encoding handling and streamline IndexWriter configuration
tika - 2597 -- add config option to disable load error handle for serviceloader , and add dummyparser .
updated imports and added package - info handling in DocLint . java , and added new test classes in DocLintTester . java to improve
added a check for IMPORT _ CMD in addition to DELTA _ IMPORT _ CMD in DataImportHandler and DataImporter to ensure proper handling
added a test to verify that inner classes are not modified when ignoreDefinition is true to ensure that the changeType recipe does not modify inner classes
removed unused import of android . util . Log in JettyService . java to clean up the code and reduce unnecessary dependencies
modified the ` checkItemPlacement ` method to accept an additional ` ArrayList < Long > ` parameter for workspace screens and updated related logic
danielwagnerhall : use system . exit ( 0 ) to kill the jvm
refactor transformation logic in LLRealtimeSegmentDataManager to use a list for transformed rows to improve code readability and maintainability by redu
added a check for Windows OS to skip devices with display names containing " Teredo " to improve functionality by avoiding issues with Teredo devices on Windows systems
fix a problem with the add contact dialog when the protocol provider be not register .
replaced direct bean registration with a component registration method for user details service factory to improve clarity and maintainability of the registration process
modified the parameters of the drawBitmap method to use null instead of the left and top values to simplify the drawing process by allowing the bitmap to
fix ( meitrack ) and totem protocol decoder ( fix # 2692 )
changed access modifiers of ` getFontPath ` and ` getPlatformFontPath ` methods in ` SunFontManager ` and ` X11FontManager `
added @ Deprecated annotations to multiple methods in EnhancedRandom . java to indicate that these methods are outdated and should not be used
fix exception handle for reachedmaxsizeexception in clientmapstoretest
added an option to keep empty sentence in the documentprocessor , and updated related classes accordingly .
added error handling for artifact subdirectory creation and modified return type of createArtifactSubdirectory method to boolean to improve error handling and provide clearer error
removed the IDELazyTreeLoader class and replaced null returns with JavaCompilerService . NO _ MODULE _ COMPILER in JavaLanguageServer
bug 10663 : add log for null answer in directagentattache
removed exception handling from the sendEmail method to directly throw MessagingException to simplify the method signature and improve exception handling
fix an npe in pipeitemsobsidian when there be no tile
updated DateMathParser instantiation to accept a Locale parameter in DateFormatEvaluator and FileListEntityProcessor to improve flexibility by allowing locale - specific parsing
added a boolean field ` includeDecals ` and its getter / setter methods in ` StorageOptions ` , and implemented a checkbox in ` Storage
added a null parameter to the generateDocumentation method in Liquibase . java and updated the getImplementedDatabases method in Liquibase
updated the performance logging mechanism in HiveProtoLoggingHook and improved test assertions in TestHiveProtoLoggingHook to enhance logging accuracy and ensure
corrected spelling errors in log messages from " Begining " to " Beginning " to improve clarity and consistency in log output
updated the class file version check to use the major version instead of a hardcoded value to ensure the output reflects the correct class file version
added a new test class ` LdapPasswordAuthenticationTest ` for LDAP authentication tests to ensure correct handling of user password authentication in the LDAP context
replace ` OrcInputFormat ` with ` BasicStatsNoJobTask ` check in ` TaskCompiler . java ` to improve code clarity
fix an npe in reloadmanager . onsave ( ) when reload on project
refactor VisibleAdvance class to improve code structure to enhance maintainability and readability of the code
fix # 4796 : do n ' t swallow exception in informer start ( )
added support for dynamic number columns in EdgeDataTable and NodeDataTable to enhance data display functionality for both numeric and dynamic numeric columns
added null checks using ` Objects . requireNonNull ` for groupId and getVersion in ` ResolvedGroupArtifactVersion ` constructor to ensure non - null values are
added null check for apiInfo before assignment to avoid potential NullPointerException when apiInfo is null
refactor HeadersConfigurer and CacheControlHeadersWriter classes to improve header configuration logic and maintainability
added lighting effects and improved texture disposal logic in PhotoPanel and FlameRenderer classes to enhance visual effects and resource management during rendering
fix : add misc . add to list editor
added bounds checking for the index used in the CSS parsing logic to ensure proper handling of character lengths and avoid potential ArrayIndexOutOfBoundsException
added functionality to enable or disable the default look and feel in the UI service to enhance user experience by allowing custom look and feel options
removed unnecessary ' this ' keyword from method calls in HostRoleCommandDAO . java to simplify code and improve readability by eliminating unnecessary
renamed constants F2 _ TEST , F5 _ UNKNOWN , and F6 _ UNKNOWN to F5 _ TRANSPONDER _ TEST _
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection logic for better user experience
changed the type of ` mHostDb ` from ` HostDatabase ` to ` ColorStorage ` to improve data handling by utilizing color storage
refactor String class to improve code readability to enhance maintainability and facilitate future feature additions
removed unused SLF4J Logger imports and static final Logger initialization across multiple classes to improve code clarity and maintainability by eliminating
added a method ` getGlobals ` to the ` MapGlobalResolver ` class to provide a way to retrieve global entries from the map
added multiple assertions to verify the functionality of the sendcoin method in the MultiSign34 class to ensure that the sendcoin functionality works as expected
updated JUnit imports from ` org . junit . Test ` to ` org . junit . jupiter . api . Test `
replaced hardcoded ' ; ' with a dynamic path separator constant in JavadocReport . java to ensure consistent path handling across different operating systems
changed the method modifier of augmentSuccessViewModelObjects from static to instance to allow for instance - level access to the augmentSuccessViewModelObjects
added assertions to verify presence of ' id ' and ' name ' properties in the AbstractEntity class to ensure that ' id ' and ' name
removed the configuration parameter from Outlink instantiation in multiple parser classes to simplify the code by eliminating unnecessary parameters
removed the ` LexicalContext ` parameter from several methods in the ` Lower ` class to simplify method signatures and improve code readability
added import statements and modified return statement in UseLambdaForFunctionalInterface . java , and modified type checking in TypesInUse . java to enhance
[ testng ] remove unnecessary appendclassselector call in ant task
removed unsupported root input check for Aggregate in HiveCardinalityPreservingJoinOptimization . java to streamline the code by eliminating unnecessary
fix npe in registryevent when there be an entry with the same name but different type in the same registry
removed redundant assignments of x3 and y3 in Intersector . java to streamline code for better readability and maintainability
add default implementation for sbe method that be not implement by this version of sbe
add test to check client health of elasticsearch
copy message byte array before parse to avoid concurrent modification exception .
added version ID handling to ClusterDefinition and updated related methods to support versioning to enhance cluster configuration management by allowing dynamic version identification
camel - 14263 : camel - ftp should use source code generate configurer to avoid reflection
[ zeppelin - 4352 ] fix error when dependency can not be load ( # 4357 )
added a new test class ` NoLocalsMustBeReservedForDCEedVarsTest ` and modified ` Gen . java ` to handle
added a check for basic constraints in ForwardBuilder and created a new BuildEEBasicConstraints class for testing to ensure proper handling of certificate constraints and
added initialization logic to update values with the same time in the JdbcPostgresqlDAO class to ensure compatibility with PostgreSQL versions 9.5 and above
updated WebSocket annotation to set maximum message size and added minimum buffer size validation to improve WebSocket performance and enforce minimum buffer size constraints
removed unnecessary deleteAll and rollbackUndeleteAll variables and added assertions for pendingDeleteCount in SegmentReader . java to streamline the deletion process
added null check for scopes in ClientRegistration and updated test cases for null values to ensure that scope validation is required and improve test clarity for
added null checks for the orderBy parameter and explanation before adding it to the expression to prevent potential NullPointerExceptions during execution
[ hotfix ] [ test ] use hamcrest assertion instead of junit in clusterentrypointtest
server : do n ' t allow backup vm to be delete when it ' s in stopped state
added debug logging for the initialization of the Hive log4j message to improve traceability of the initialization process
added a check for non - empty tasks before accessing the first asset loading task to avoid potential NullPointerExceptions when there are no tasks available
make pubsubmanager . deletenode ( string ) ` ` node do not exists ' ' aware
refactored relation entity creation to use entity name instead of id _ property .
added checks for empty barcodes in Code128Reader and Code39Reader , and improved error handling in TruePositivesBlackBoxTestCase
replace TreeSet with LinkedHashSet for storing CipherSuites to improve performance and maintain insertion order
updated control character validation logic in Escaper . java and adjusted expected string formatting in InternationalizationTest . java to improve clarity and
[ hotfix ] [ sql - provider ] do n ' t use string return type in sqlsource
refactor aliasChildren handling and improve null checks in InternalMNode . java to enhance code robustness and prevent potential NullPointerExceptions
added a method to calculate the layout transition offset for a page in PagedView . java and updated scroll delta calculation in Workspace . java to
renamed ` synthetic ` to ` pruned ` and updated related code for clarity to improve code readability and maintainability by using a more
added accessibility setting for the method in WidgetInterceptor . java to ensure the method is accessible for use
added a condition to set the default value only if the raw name is not " database . server . id " to ensure that the default value
updated Mozilla version from Macintosh to Windows NT 10.0 ; Intel Mac OS X 10.7 ; rv : 36.
added a new menu item for accessing the server ' s host in BasicSystemUtils to provide users with a way to access the application ' s
refactor handling of ` value ` and ` innerThen ` statements in ` HandleGetter . java ` to improve clarity and maintainability of
added error handling for ArrayIndexOutOfBoundsException in EncryptedSlideShow . java to improve robustness by preventing application crashes due to ArrayIndexOutOfBoundsException
[ hotfix ] [ core ] add more logging to mappageio and filecheckpointio
updated call to loadBattlePassManager ( ) before calling avatar postLoad to avoid null pointer to ensure that the avatar is loaded before
updated SSH version from 1.0 . 0 to 1.1 . 0 and modified SSH command formatting in PortForwardingContainer . java to ensure
added a large array and a call to System . gc ( ) to force an initial full - gc to improve memory management and prevent premature
added checks for log names and updated logger behavior in StdErrLog . java and StdErrLogTest . java to improve logging clarity and
fixed - rremoteservice . getremoteservice ( ) and rremoteservice . getremoteservice (
added methods to manage the selection state of radio buttons and checkboxes to enhance the functionality of the MultiButton class to support the " selected "
replaced ` UpNextActivity ` with ` NextUpActivity ` in ` CustomPlaybackOverlayFragment . java ` to update the nextup activity
[ hotfix ] [ broker ] fix checkstyle violation in brokercontroller
refactor RedisReactiveHealthIndicator to use ReactiveRedisConnection for connection management to ensure proper resource management and avoid potential memory leaks
updated background color handling and refactored brand color retrieval methods in ProgramGridCell and Utils classes to improve code clarity and maintainability by
renames occurrence of callparticipant to callpeer so that it would well reflect our new call architecture that also include conferencing and con
added custom type adapters for various components in ToolingApiLauncher to enhance the flexibility and usability of the API configuration
[ hotfix ] [ test ] fix test bug in testpayloadcheckquery
refactor ConsoleReader to handle character printing with a mask based on input length to improve flexibility in printing input based on masking behavior
added user information to the exit status and command output in BaseCommand . java to enhance debugging by providing context when the command is canceled
move unit test from graal - compiler - test to graal - compiler - api .
[ hotfix ] [ runtime ] remove useless constructor of slotsharinggroup
modify the condition for returning Java9Specific to include a check for the " one . util . streamex . emulateJava8 " property
updated texture paths and audio formats in DecalTest , MusicTest , and SimpleDecalTest classes to ensure compatibility with the new audio
rearranged the registration and unregistration of the mCloseSystemDialogsReceiver in Launcher . java to ensure proper resource management and prevent
updated import statements for clarity in HostsRemovedEvent . java to improve code readability and maintainability
added a new boolean flag ` allowIntrospection ` to ` ClientDetailsEntity ` and modified related logic in ` ChainedTokenGranter
replaced ` write ( remoteUser ) ` with ` writer . write ( htmlEncode ( remoteUser ) ) ` and added ` htmlEncode
added PhrasePrefixQuery and SpanQuery annotations to PhraseQuery and PhrasePrefixQuery in Query . java to enhance query functionality and improve
replaced ` size ( ) = = 0 ` with ` isEmpty ( ) ` for better readability and performance to improve code clarity and
refactor isLiteralString and isThisElementAnOperandInABinaryStringConcatenation methods to improve clarity and functionality to enhance readability
updated method signatures in AbstractAssert and Assert classes to use Object instead of a generic type A to simplify method signatures and improve type flexibility
updated the import and modified the ThrowingFunction interface to use a generic type to improve type safety and flexibility in handling exceptions within the jwt
added methods to get and set uploaderBehaviour in AppPreferences and updated PreferenceManager to use these methods to improve code modularity and maintainability
fix : fix bug in getfinalfield in ctconstructor ( # 2329 )
updated BitmapDrawable instantiation to use Robolectric ' s newInstanceOf method to enhance compatibility with Robolectric features
renamed the method ` isValidSEnding ` to ` isValidEnEnding ` and added a character variable to clarify the purpose of the
updated PageMarkerResources drawable from ` ic _ pageindicator _ add ` to ` ic _ pageindicator _ current ` to accurately reflect the
added reinvocations tracking and improved logging messages in BasicInvocation . java to enhance tracking of reinvocations for better debugging and monitoring of
updated the calculation of topPadding in DefaultLookAndFeel . java to use getInnerHeight ( ) instead of getHeight ( ) to improve layout
added a break statement in the Recognize . java file to prevent fall - through behavior in a specific case
added preference handling for home screen locking in multiple classes to enhance user experience by providing tactile feedback when interacting with the home screen
added handling for FORMULA cell type in ExcelBatchReader and implemented a test for text formula in TestExcelFormat to enhance functionality to support
fixed bug 1245708 - immutablefield no long report false positive on assignment in anonymous inner class method .
added a private String field for the user agent in CommaFeedConfiguration and updated HttpGetter to use it to ensure the user agent is dynamically
updated the @ XmlAttribute annotation to be required in AvroDataFormat . java to ensure that the attribute is required for XML processing
changed log level from info to debug for file not found message to reduce log verbosity and improve performance by reducing log verbosity
rename QueueTest class to QueuedPipeTest to clarify the purpose of the test class
updated the version check logic in BukkitMain . java to dynamically determine if the server supports the " getUniqueID " method to ensure compatibility
camel - 16400 : camel - core - optimize routescollector to reduce call to findroutebuilders ( )
add ` ` vertexcolor ' ' property to pshape3d , to disable fill / tint
updated SchemaDotFormatter to include a filter flag for primary key columns and modified related methods to enhance column filtering logic and improve code clarity
removed unnecessary import and method call from ShadowMotionEvent . java to simplify code and improve readability by directly using the matrix ' s values
changed the package of MetaRules from ` com . facebook . buck . parser . api ` to ` com . facebook . buck .
refactor class handling logic in GroovyEngine . java to simplify the retrieval and removal of class definitions to improve code clarity and reduce redundancy
fix ( hawtio - system ) : move plugin context listener from web package to branding / plugin
updated print statement syntax in NativeCodeGenerator . java to ensure consistent formatting of command output
replaced calls to ` updateMotors ( ) ` and ` updateActiveInstances ( ) ` with ` fireChangeEvent ( ) ` in `
added unit tests for ` ThrowableAssert _ hasCause _ Test ` to verify behavior when both expected and actual cause types are different to ensure proper
removed the ` flatten ` and ` pack ` variables from the ` AutomaticDependencies ` class to streamline the code by eliminating unnecessary
changed the variable from requestedScopes to allowedScopes in ClientDynamicRegistrationEndpoint . java to ensure the correct scope is used when no requested scopes are
simonstewart : fix the marionette test for firefox
camel - 16400 : camel - core - allow to configure route description via jmx .
refactor JavacTreeMaker class to improve code structure to enhance maintainability and readability of the code
added a line to set the weight of the edge in ImporterCSV . java to ensure that the edge ' s weight is correctly applied to
update tariffs cost per hour to match current date
updated SQL query in DatabaseMetaData . java to include additional attributes from pg _ attrdef to enhance the retrieval of additional attributes from database attributes
throw an error if binarized sentence be not build by the parser .
modify the return statement in User . java to include detailed username details to enhance debugging by providing more context about the user ' s properties
improve javadoc for methodinfo . extractbodyasstring ( ) and messagehelper . extractbodyasstring ( ) .
[ hotfix ] [ runtime ] fix usage of taskdeploymentdescriptorfactory . fromexecutionvertex
refactored group visibility check in rosteraccess . cansubscribe ( ) and rostermanager . isgroupvisible ( ) to improve code
added project reference for " maven . test . classpath " in AbstractJRubyMojo . java and removed unchecked suppression in Cuc
updated assertions in MethodHandleImpl . java to use ' mtype ' instead of ' rtype ' and added a new userMethod method in MethodHandles
added imports for StopFilterFactory and NamedSPILoader in CommonGramsQueryFilterFactory , AnalysisSPILoader , and LegacyHTMLStripCharFilter
update condition checks in URLImage . java from " greater than or equal to " to " ! = " for width and height comparison to ensure
added a check to ensure class names do not start with " META - INF / " and modified the handling of package names in the list to
added background task scheduling for image downloads in edt mode to ensure images are downloaded on the UI thread for better user experience
updated assertions in StackWalkerTest to use a dynamic expected value based on version check to ensure compatibility with different Java versions and improve test reliability
changed the access modifier of the ` addViewportJob ` method from protected to public to allow access to the method from other classes
removed the ` partitions ` parameter from the ` buildFlow ` method and related code to simplify method signatures and improve readability by eliminating
updated server configuration settings in TestDatabase . java to improve server behavior during shutdown and exit conditions
added null and empty checks for block in NodePathsConvertOperator and modified return logic in SchemaQueryMergeOperator to enhance robustness by preventing
add the total harvesting time to the call info screen .
updated font draw parameters in ParticleEditor . java for FPS , count , and max values to improve visual consistency and performance of particle rendering
added handling for " keyserver _ port " configuration in UpgradeCatalog240 . java and updated related tests in UpgradeCatalog240Test . java to
added a transparent background color to the SvgViewerFactory to improve visual appearance by providing a transparent background color
removed ` @ Config ( minSdk = M ) ` from ` ShadowKeyguardManagerTest . java ` and ` ShadowKeyguardManager .
refactor ` containsExactly ` method to accept ` varargs ` instead of ` first ` and ` rest ` to improve flexibility by allowing
updated Bandwidth builder to use capacity and refillGreedy methods and added validation for the key before building the AsyncBucketProxy to improve
added comments to GermanAnalyzer , GermanStemmer , and WordlistLoader classes to clarify the functionality and usability of the
updated the Generator class to accept a set of hooks and modified transformations to include materialized view handling to enhance the flexibility and functionality of the
added exception handling for NoClassDefFoundError in REngine . java to set supported to Boolean . FALSE when no class definition is found
refactor TraceFilter and TraceWebFilter to utilize a new SpanAndScope class for improved span management to enhance code clarity and
updated exception handling in AbstractUpdateCommandStep to provide a fallback message if the cause is null to improve error clarity by providing a fallback message
updated SolrServerException constructor to include the base URL when throwing exceptions to improve error handling by providing the base URL for better context
modified landscape setting logic in HSSFPrintSetup . java to invert orientation logic to improve clarity and correctness of landscape display
update return statement to handle null values correctly to ensure proper handling of null values in the object inspector
added validation to check for argument names to ensure that invalid argument names do not lead to runtime errors
modified location handling in AndroidLocationPlayServiceManager to manage background location updates more efficiently to improve performance by avoiding unnecessary updates when the Android
updated the condition to check for primitiveType from " ! = GL _ POINTS " to " = = GL _ POINTS "
trufflestring : do n ' t convert byte [ ] to trufflestring if string length do n ' t match byte [
added a method to set the command list in ComboBox to enable dynamic selection of command options based on user preferences
nifi - 8042 : escape forward - slash and back - slash in filename for tl client
updated the command string in ZkCLI to use localhost instead of hardcoded zkcli . sh - cmd to improve consistency and flexibility in
updated equality checks in FirmwareUpdateProgressInfo , BridgeHandler , and WemoLightHandler for consistency to ensure accurate comparison of progress values
added a conditional check for remote gRPC status before posting a warning in LocalFallbackStrategy . java to ensure logging only occurs when remote gRPC is
updated method signatures in XYItemRenderer and related classes to remove unnecessary parameters to improve code clarity and maintainability by standardizing method signatures
added entity id to tick entity if it ' s not null to prevent potential null pointer exception
add the gl _ error string to the glsurfaceviewapi18 . getGLerror ( int ) method
add a method to get a list of supported locale in the feature registry and use it in the info request handler
updated the server URI handling in RFC2616BaseTest . java to ensure the test verifies the correct server URI format
added a method call to addToHelperList in the Construction class to enhance the handling of helper lists in the construction process
added a condition to skip the first element when the length is - 2 and changed return value from - 1 to - 2 to ensure proper handling
added security permissions and refactored context class loader management in Transport and TCPTransport classes to enhance security by ensuring proper context class loader management and
updated file path handling and error checking in ReceiveExternalFilesActivity . java to ensure proper synchronization and error handling when a file path is not found
added a null check for m _ serviceLoaderClassLoader before loading ServiceLoader to avoid potential NullPointerException when m _ serviceLoaderClassLoader is not set
removed debug logging statement from BarrowmanCalculator . java and corrected the calculation of deltap in TubeCalc . java to improve code cl
modified column handling logic in TimelineControllerImpl to differentiate between Node and Edge tables to ensure correct column addition based on the object type
fix the issue that brokeradminapiapplication do n ' t register extra component
added a new test method ` testBug4658 ` to ` MultiCfQueryExecIT . java ` to verify behavior related to bug
peergroup : use a linkedlist instead of an arraylist for the peer candidate list
attempt to fix the builder so that it do n ' t go into infinite loop .
added a Supplier < RatisConfig . RatisConsensus > parameter to RatisClient and updated related classes to allow dynamic
updated multiple Java files for consistency and clarity to improve code maintainability and readability
added a check for the ManagedService annotation before unregistering and registering JMXHelper to ensure JMXHelper is only registered when the ManagedService annotation is
tika - 2596 -- add support for detect non - unicode entry name in zip file .
8014869 : c2 : c2 : c2 : c2 : runtime / c2 / c2 / splitth
added methods to lookup generic types and superclasses in TemplateRegistry for improved type handling to enhance flexibility in template registration for generic type parameters
increased the initial capacity of ByteArrayOutputStream from 512 to 1028 to optimize memory usage for improved performance
added comments to the ` languagesExcluded ` array in ` PlayerSettingsScreen . java ` to clarify the purpose of the ` languagesExcluded
modify byte array initialization and transfer logic in TransferCompletionHandler . java to handle larger byte counts to ensure that the transfer process does not exceed the
fix popup menu to use windowadapter instead of windowfocuslistener
added a null check for the source AST node before throwing a SemanticException in SemanticAnalyzer . java to improve error handling by providing a clearer
fix a bug when render skeletal mesh with non - uniform scale
added ` getSolrHome ( ) ` method to ` DistributedClusteringComponentTest ` and ` BaseDistributedSearchTestCase ` classes to
added @ ComponentScan annotation to SpringWebConfig . java to enable the use of Spring ' s component scanning functionality
removed the getAccount ( ) method from UserListItem . java to streamline the code by eliminating unnecessary account conversion
added unit tests for installPackage method and updated applicationInfo handling in ShadowPackageManager and ShadowApplicationPackageManager to ensure correct applicationInfo processName
refactor AvailableSettings class for improved readability to enhance maintainability and facilitate future updates
added imports and constructors for TransactionCapsule and ReceiptCapsule in TransactionTrace . java to enhance the functionality of the TransactionTrace class by providing
add shufflememberlist property to allow client to send a list of member to shuffle .
replaced Text with CrawlDatum in SegmentReader . java to utilize CrawlDatum data structure for improved data handling
refactor JsonDeserializer class implementation to improve code readability and maintainability
updated ` fetchSize ` from an integer to a ` ThreadLocal ` in ` QueryProcessExecutor ` to improve thread safety and manage fetch size
updated the error message from " trunk ( ) " to " trunc ( ) " in GenericUDFTrunc . java to clarify the
removed import statement for ExecutionContext in TaskletStep . java to streamline dependencies and improve code clarity
initialize the title variable to an empty string in Lwjgl3WindowConfiguration . java to ensure that the title variable has a default value
fix asynchttpclient . response . body ( ) should not be null
deprecate embeddedserverinstance in favor of runtime . server . embeddedserverinstance
use osx . macadapter . registerevents ( ) instead of create new macadapter instance
renamed ` SecurityTokenServiceAuthenticationMetaDataPopulatorTests ` to ` SecurityTokenServiceTokenFetcherTests ` and updated references accordingly to improve cl
simplified the return statement in the toEnum method call to improve code readability and maintainability
made the ` hideUnprivilegedObjects ` variable final to ensure immutability of the ` hideUnprivilegedObjects ` variable
fix a coustic test so that it do n ' t fail if there be no audio file
added a check for Android Q and implemented saveGiphyGiphyVideo11 method in IOUtils . java to ensure compatibility with Android Q
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 353 : add
refactor multiple classes related to ticket management to improve code organization and maintainability
replaced manual retrieval of logger instance with a more concise computeIfAbsent method to simplify the code and improve readability
hbase - 25819 remove unused class dataoutputstream from hbaseobjectwritablefor96migration
updated Hive transaction ID from " 21 " to " 2 " in TestAcidOnTez . java to ensure the correct transaction ID is
changed log level from info to debug in MavenEnhancePlugin . java to reduce log verbosity and improve performance during class enhancing
added a method to retrieve the default provider name and updated provider name handling in multiple classes to ensure compatibility with Conscrypt as the default provider
added Captor annotation processing for instances annotated with @ Captor in MockitoBeforeTestNGMethod . java to enhance the functionality of
added error handling for cases with non - existent class and method names in TestSuiteBuilder . java to improve debugging by providing clear feedback when test
added imports for TextUtils and StringUtils , and refactored prefix computation logic in GroovyAutoComplete . java , and GroovyLanguage . java to improve
use graphhopperosm instead of graphhopper for import
danielwagnerhall : enable retries for the http client in the selenium - backed webdriver
changed the visibility of the mHideSysUiScrim variable from final to non - final and added functionality to control the visibility of the
modified method signatures and added cancellation logic in Call and OkHttpCall classes to improve resource management and ensure proper cancellation of ongoing calls
refactor swipe handling logic in WindowTransformSwipeHandler . java to improve clarity and functionality to enhance swipe detection logic for better user experience
updated the RequestMatcher interface to extend from org . springframework . security . web . util . matcher . RequestMatcher to ensure compatibility with the
added ' IF ' to the list in DeferredAttr . java and created a new abstract class ImplicitLambdaConsideredForApplicabilityTest
fix j2kt box class equality test to work with j2kt .
added unit tests for the applyQualifiers method in DeviceConfigTest . java and updated the setDimensions method in DeviceConfig . java to ensure
replaced IOException with RuntimeException in ExternalViewReaderTest . java and updated timestamp initialization in PinotDataTypeTest . java to improve error handling and
updated the icon resource in RootCursor from a drawable to a mipmap icon to improve the visual appearance of the launcher icon
added functionality to set the content text in the error builder to enhance error handling by providing context for the content being uploaded
refactor ConcurrentHashMap implementation to improve performance and reduce memory usage
added methods to adapt BTC fill data to UserTrades in the AbucoinsAdapters and AbucoinsTradeService classes to enhance tra
updated conditions in PlotSquared , Claim , and Delete classes for plot claiming and deletion , and modified economy handling in Claim class
simonstewart : add support to the htmlunit driver for the firefox and internet explorer browser .
added handling for VARBINARY data type in BlobType . java to ensure correct database data type is returned for VARBINARY types
pdfbox - 4892 : use version = 1 instead of version = 0 for set cooky
added synchronization to the language initialization in ` LibFFIContext . java ` to ensure thread safety when accessing ` language ` variables
replaced ` Context ` with ` ContextInternal ` and updated related methods in ` InboundBuffer ` to ensure compatibility with Vert . x thread
modified timeout handling and introduced a new method ` deadServerNoTimeout ` in ` LdapTimeoutTest . java ` to improve test reliability by
corrected the spelling of " Uniocde " to " Unicode " in the usage message to improve clarity and accuracy of the
camel - 7994 fixed the unit test error of cxfmessageheadersrelaytest
updated multiple UI components in Synth - related Java files to improve consistency and maintainability across the UI components
added handling for BoosterSet in ComponentAssemblySaver . java and changed the return value of BoosterSet . java from true to false
added support for jabref proxy in jabref - http : / / github . com / codenameone / codenameone /
updated constant name from BLOCKCHAIN __ FORK _ COUNT to BLOCKCHAIN _ FORK _ COUNT and modified interval calculation in MetricsApi
replace InternalError throwing with returning false in Class . java to simplify error handling for JEP 359 support
updated logging imports in TestIPCUtil . java to use Apache Commons Logging instead of Mortbay Log to improve logging consistency and
removed the chunked transfer handling from the NettyRoutingFilter to simplify the request process by directly using the HTTP client request
added clearAttributes ( ) method to PatternTokenizer . java to enhance attribute management in the tokenizer
refactor VerificationAfterDelayImpl to include a polling period for verification failures to improve error handling and control over sleep duration during verification failures
added compaction handling in session state and modified masking conditions in SemanticAnalyzer to ensure proper control over table masking based on compaction status
[ zeppelin - 4892 ] fix copy of interpreter jar from zeppelin . jar to zepp
hbase - 26969 hbaseadmin # gettableregions ( ) should call cleanupcatalogtracker ( ) after hbase -
added @ Ignore annotation to PartialEscapeAnalysisTest . java to temporarily disable the test due to instability
updated the ` calcXBounds ` method implementations in ` BarLineScatterCandleBubbleDataProvider ` and ` CombinedChartRenderer `
added error handling for XML parsing in SimpleSAX . java to ensure proper resource management and prevent potential memory leaks
added release of headerBuffer in HttpSenderOverHTTP to ensure proper resource management and prevent memory leaks
added a new test class ` UseDiamondOperatorWithVarTest ` to validate the behavior of the ` UseDiamondOperatorWith
added null and closed checks for the result set before closing it to prevent potential NullPointerExceptions and ensure proper resource management
updated driverVersionMajor and driverVersionMinor from - 1 to 10 and 6 in DerbyDatabase . java to ensure compatibility with the latest database
fixed bug 1371706 - usesttringbufferlength no long report a false positive when there be no literal
removed error logging from RemoteSparkJobMonitor to streamline error reporting by eliminating unnecessary error logging
modified the ` createDb ( ) ` method to return a ` Connection ` object and ensured the database connection is properly closed to improve resource
renamed classes CreateCustomMetric , ListResources , and their corresponding test files to improve clarity and consistency in naming conventions
hbase - 25832 allow configure hstore . hstore . compaction . max . max - compact - size . off - peak
updated BitstampDepositAddress . java to handle both " address " and " response " fields and added new test classes DepositAddress
replace IllegalStateException with IllegalArgumentException for handling buffer capacity exceeded to improve error handling by ensuring the response is aborted instead of throwing an exception
convert ` linkPath ` to ` absolutePath ( ) ` in ` ProjectView . java ` to ensure correct path handling for deleted directories
updated ` InvocationFinishedEvent ` to implement ` MetricsEvent ` and modified ` DefaultMetricsRegistry ` to use ` ConcurrentHashMap ` to improve thread
modified the iteration over network interfaces to check for multicast support before returning them to improve robustness by ensuring only valid network interfaces are returned
removed duplicate checksum validation logic in ChangeSet . java to streamline the code for better readability and maintainability
added a clone method to the BufferedChecksumIndexInput class that throws an UnsupportedOperationException to provide a placeholder implementation for the clone method
updated return statements in Circle . java to use radius directly instead of using Math . sqrt to improve clarity and maintainability of the code
added a condition to check if the frequency band is the same as the primary identifier before setting it in P25Channel . java to ensure that
replaced ` tapSquareSize ` and ` tapSquareCenterX ` with ` tapRectangleWidth ` , ` tapRectangleHeight ` , and
change default _ replicate _ on _ write from true to false
added a new parameter ` lastFillTime ` to the ` CryptoFacilitiesAuthenticated ` method and implemented date formatting in the ` Util ` class
added ` getDelegate ( ) ` methods to ` TraceCallable ` and ` TraceRunnable ` classes , and created corresponding tests to enhance functionality to
updated Snackbar handling in FileActivity and added synchronization functionality in FileDisplayActivity to improve user experience by providing more informative error messages and
added functionality to write data to a stream in both ForeignIncubatorQuicheConnection and JnaQuicheConnection classes to improve
added a boolean parameter to the method call in JavascriptContext . java to enhance functionality by allowing the method to accept a boolean value
simplified the instantiation of TableCell by removing the alignment parameter to simplify the code and improve readability by removing unnecessary parameters
added a new file ` TracingAutoConfiguration . java ` to configure tracing functionality in the application
updated the way content is added to a Para object in the Submissions class to improve code clarity and maintainability by using a dedicated
fix the npe in serverqueryexecutorv1impl . getallqueryablesegments ( ) ( # 10705 )
updated VertxBufferTest . java to improve buffer management functionality to enhance performance and reliability of buffer operations
add a test case to make sure we do n ' t throw chunknotfoundexception when a message contain a hyphen
changed the access modifier of mContext from private to protected to allow subclasses to access and override the mContext variable
removed unused imports from ShowTablesOperation . java and ShowViewsOperation . java to clean up the code and improve readability
added a new exception class ` MongoDataIntegrityViolationException ` and updated ` MongoTemplate ` to use it to improve error handling for duplicate key errors
[ hotfix ] [ runtime ] add miss return to jobcoordinationservice # getjobcompletionfuture
refactor ` bitsToHumanReadable ` method to ` bytesToHumanReadable ` and create a ` mimeType2HUmanReadable ` map
updated the merge policy implementation in TestUpgradeIndexMergePolicy to use TieredMergePolicy and added a new test method in TestMergeOn
added a check to return early if overview state is not enabled to optimize performance by avoiding unnecessary processing when overview state is not enabled
update reference to deeplearning4j . org to point to the correct documentation
modified the ` loadSettingModels ` method to accept an ` InputStream ` parameter for reference properties to enhance flexibility in loading settings models by allowing
added null checks for incoming fields , terms , and positions enums in FilterLeafReader . java to ensure robustness by preventing NullPointerExceptions when
add default key size provider to jcecmcontentencryptorbuilder , and add some test
updated IOException message to include the exception ' s message and removed redundant constructors in SoftEndOfStreamException to improve error handling by providing more informative
fix checkstyle issue in netty module
updated assertions in ` BundledDistributionTest . java ` and added database user assertions in ` PostgreSQLTest . java ` to enhance test coverage for
[ hotfix ] [ pipeline ] add ' pipeline . name ' config option for print and log job name
updated scale calculation in OverviewState . java to account for two - panel layouts to ensure correct scaling based on the device profile ' s layout
updated the IcePlainsBiome class to extend SnowyBiome instead of GrassyBiome and modified the population logic
removed unnecessary ` DateTimeZone ` parameter from ` getMinTime ` and ` getMaxTime ` methods in ` StorageUtils ` and ` DataUpdateManager `
[ j2kt ] add ` ` isqualified ' ' flag to thisreference .
replace ` wmde . ` with ` \ \ w ` in xhamster ripper regex
use getall ( ) instead of iterate over the entire list of entity in glowworld .
hhh - 14619 - oracledialect should prepend ' schema ' to the column name of featuretype if it be specify
fix an npe in the console filter ( # 1186 )
added functionality to select and deselect all files in the FileMenuFilter class to enhance user experience by allowing users to select or deselect all
[ java ] : use termlengthmask instead of termwindowlength in networkpublication .
updated GuildUpdateOwnerEvent . java for improved clarity to enhance code readability and maintainability
limit the number of inportalticks to 80 for creative and non - creative environments to improve responsiveness by limiting portal tick count for
updated ClusterMonitorTileSkin to handle compressed data and adjusted chart spacing based on item size to improve visual layout and visual clarity of chart data
refactor ResponseTemplate , TransactionalMapCodecTemplate , TransactionalQueueCodecTemplate , and TransactionalSetCodecTemplate classes to improve code organization and maintainability
change variable types from int to long for length calculations in Base64 . java to ensure proper handling of larger lengths and prevent potential overflow issues
removed the check for header being non - null in RendererConfiguration . java to simplify the condition for better readability and maintainability
scale vm with custom disk offering , do n ' t allow scale the disk offer to the same disk offering
refactor imports in HitbtcAdapters . java and Order classes for improved clarity and functionality to enhance code readability and maintain
[ hotfix ] fix variable name mislead in sulongsegmentdatamanager
updated the service name from " jruby " to " jrubyscripting " in JRubyScriptEngineFactory . java to improve clarity
replaced direct assignment of ' name ' with a variable ' displayName ' in ConfigCategory . java to improve code readability and maintainability by
updated the condition in ParticipateAssetIssueActuator to include an additional check for negative exchange amounts to ensure accurate validation of exchange amount against
removed the loop variable ` i ` and its condition from ` FeedUtils . java ` to simplify the logic by eliminating unnecessary iterations
added a new test method ` testHDF4 ` to verify the parsing of HDF4 files to ensure compatibility with Java 1.5 and
[ calcite - 6092 ] disable cast test for time ( 0 )
removed unnecessary whitespace in IDEEditor . java to improve code readability and maintain consistency
added two overloaded methods ` quietCloseAll ` to ` CloseHelper ` for closing multiple ` AutoCloseable ` instances to improve resource management
replaced the variable ` posBtn ` with a direct reference to ` common _ yes ` in ` RemoveFileDialogFragment . java ` to
added a null check for width and height before calling the drawImage method to avoid potential NullPointerExceptions when image dimensions are zero
replaced ReflectionHelpers imports with direct method invocation for defining the class to simplify the code and improve performance by eliminating dependency on ReflectionHelpers
updated the regex pattern in GUIUtil . java and added unit tests in GUIUtilTest . java to improve the accuracy of port validation and ensure
refactor conflict detection logic in CachedRowSetWriter . java to use a counter for conflicts instead of a boolean flag to improve clarity and
use ` flutter pubspec . yaml ` instead of ` 0.0 . 3 ` ( # 5186 )
added a check to return the reference object if it equals the current instance to optimize performance by avoiding unnecessary object assignments
added logic to check for seed files before injecting them in the Injector class to ensure that only valid seed URLs are processed and improve error handling
added a condition to check if the original view is hidden before applying visibility adjustments to improve UI responsiveness by preventing the original view
fix full unroll optimization when max Trips < = maxNodes
added a check for texture coordinate type before processing texture data in CombinedTexture . java and implemented logging in UVCoordinatesGenerator . java to ensure
added error handling for file deletion and input validation in multiple classes to ensure robust error handling and prevent runtime exceptions
added seek and close methods to TracingConsumer and TracingProducer classes to enhance functionality for seeking and closing partitions
updated the substring method to correctly calculate the substring length and set the integer for the oldPrefix length to improve accuracy of the SQL query by correctly
replaced the manual addition of elements to a list with a constructor that initializes it directly from the collection to simplify the code and improve readability
[ hotfix ] [ core ] make abstracttimer constructor deprecate
added a nightly build warning message for users when running a nightly version of Universal Gcode Sender to inform users about potential issues
add ` ` sort by team name ' ' option to sort response by team name
updated the return statement to include " throws " declarations to clarify the purpose of the removal of unnecessary throws
deleted ` CacheApplication . java ` and refactored ` ShareActivity . java ` to ` CommonsApplication . java ` to streamline
replaced calls to ` realObject . getApplicationContext ( ) ` with ` RuntimeEnvironment . application ` in ` ShadowContextImpl . java `
updated method signatures in StatisticsServlet . java to improve code clarity and maintainability
updated Resources management to use ResourcesManager for configuration updates on devices running KitKat and above to ensure compatibility with newer Android SDK versions and
added a constant for " VersionDefinition / stack _ repo _ update _ link _ exists " and updated resource property handling in the VersionDefinitionResource
refactor ApplicationImpl , NodeImpl , and Witness classes to improve code organization and maintainability
do n ' t create a new index if the old index name do n ' t exist
added package imports for internal resolver helpers and readers in CheckPackageAccess . java to enhance access control for XML package resolution
renamed methods from ` save ` to ` add ` and ` updateExecutionContext ` in multiple classes to improve clarity and consistency in method
remove loop begin from the input of loopexitnodes in GraphUtil . java to ensure proper handling of loop exit nodes during graph processing
updated RecyclerView references and methods to use WidgetsRecyclerView instead of RecyclerView in SearchAndRecommendationsScrollController . java to improve
added a check to ensure the terminal is supported before proceeding to prevent errors when the terminal is not supported
replaced Long values with Integer values for fiveSeconds and timeAllowed in CloudExitableDirectoryReaderTest . java and added time limit checks in
added a session validity check in AbstractSessionCache and modified session handling in RemoveSessionTest to ensure proper session validity before flushing on response commit
refactor index change handling to check for non - null column names before processing to enhance code robustness and prevent potential NullPointerExceptions
replaced Vector with ArrayList for managing RadioButton instances and added action listener methods to enhance button management functionality and improve event listener handling
refactor UserManagerCompat classes to introduce UserManagerCompatVM for better organization and clarity to enhance maintainability and facilitate
added ` getDatabaseMajorVersion ( ) ` and ` getDatabaseMinorVersion ( ) ` methods to multiple database classes and modified the ` Reorganize
refactor ActionGraphCache to improve handling of mismatched rules and enhance error messaging to improve clarity and accuracy of mismatched rules in the
added two new files , LockDatabaseDesc . java and UnlockDatabaseDesc . java , implementing serializable descriptions for database operations to provide functionality for managing
refactor RankingTopComponent and RankingUIModel to use setter methods for property assignments to improve code readability and maintainability
added handling for disconnect messages in HandshakeHandler . java and improved logging in NodeImpl . java to enhance connection stability and provide clearer
added a new test method ` testSetDeleteSG ` to validate the functionality of setting and deleting a storage group in the IoTDB authorization process
fix : documentai \ v1beta1 namespace for documentai , documentai \ v1beta2 , documentai \ v1beta
updated type validation logic to handle variable declarations and improved error reporting for missing types to enhance type validation accuracy and provide clearer feedback for missing
added methods ` afterTestClass ` and ` beforeTestClass ` to the ` StepScopeTestExecutionListener ` class to provide a mechanism for
replaced specific imports with a wildcard import and updated metadata buffer capacity checks to improve code readability and ensure accurate validation of metadata buffer size
updated logging statements in MultiSteps . java and SendEmail . java to use placeholder syntax to improve performance and readability of log messages
added cloning logic for joinKeys in JoinDesc . java to ensure proper handling of join keys when joinDesc ' s joinKeys is not
added PrincipalResolver to WebAuthnConfiguration and updated registration method to use it to enhance authentication handling by using a default principal resolver
updated ` addSettingsFromFile ` method to include ` ImmutableList < Path > searchPaths ` and modified file handling in ` XcconfigParserTest
made several fields in Oracle class final to enforce immutability to enhance code safety and prevent unintended modifications
[ hotfix ] [ checkpointing ] disable unaligned checkpoint by default
do n ' t throw an unsupported operation for sql query that do n ' t support it
add a system property to enable debug log for test compilation .
added a check to ensure ` lValue ` is an instance of ` LocalVariable ` before throwing a ` CannotDelambaException ` to
added support for MySQL timestamp handling in CreateTableGenerator to ensure proper handling of timestamp columns in MySQL databases
fix ( core ) : fix classloader issue in envconfiguration
added a condition to set ejection delay when stageNr is zero in SimulationListHandler . java to ensure proper handling of ejection delay
updated class name and method names from FunctionalRunnerConfig to BeanDefinitionOrderRunnerConfig to improve clarity and specificity regarding the order of
refactor TransactionUtil2 to improve code structure to enhance maintainability and readability of the code
updated issuer handling to accept an Optional < OAuthRegisteredService > parameter across multiple classes to enhance flexibility in issuer resolution based on service context
updated string formatting in ClusterState . java and added null check for DocCollection reference to improve code clarity and prevent potential NullPointerExceptions
replaced ` getStyle ( ) . setAlignment ( align ) ` with ` getAllStyles ( ) . setAlignment ( align ) ` to ensure
added foreignDatabaseName and foreignSchemaName methods to ForeignKeyColumn and updated ForeignKeyColumnMutator to use these names to enhance flexibility in managing foreign
[ java ] log warn if canvass member in unsuccessful leadership bid be not detect .
replaced static import of ` shadowOf ` with a private method ` shadowOf ` in ` ShadowActivity . java ` and ` ShadowBl
drill - 4192 : do not allow root with wildcard in dfs selection ( # 4192 )
fix inventory tick not call onarmor tick . close # 8271
fix export of . zip file on window
added a null check before invoking invalidateOptionsMenu ( ) on getSherlockActivity ( ) to avoid potential NullPointerException when getSherlockActivity (
updated widget binding logic in AppsCustomizePagedView , Launcher , and PendingAddItemInfo classes to handle options correctly to ensure
added new capability constants for air pressure , quality , CO2 PPM , and VOC PPM in EcobeeSensorThingHandler .
refactor code for improved readability and consistency in the OperationSetServerStoredContactInfoFacebookImpl . java file to enhance maintainability and
added environment variables for AAPT and AAPT2 in Genrule . java and updated corresponding test cases in GenruleTest . java to enable
do not dump the access table if trufflecompilationoptions . truffleinstrumentBranches be set to false .
added null check before disposing of message to prevent potential NullPointerException
made the ` db ` field final in ` TronStoreWithRevoking ` and modified the visibility of ` init ( ) `
updated log warning messages in CoreContainer . java for clarity to provide clearer guidance on logging functionality and enhance error reporting
replaced printStackTrace ( ) calls with fail ( ) calls and updated assertions in CategoryPlotTests . java to improve error handling and ensure proper assertion
updated IOSImplementation to use SmallByteArrayOutputStream and modified dial method to handle null cases to improve robustness by preventing NullPointerExceptions when
* shader . getattribute now accept vertexbuffer . type instead of string .
updated JDBC connection configuration from " close = true ; territory = en _ US " to " shutdown = true " to simplify connection management by
changed the type of firstExchangeTimestamp and lastExchangeCompletedTimestamp from Date to Object and added null checks for them to improve type safety and prevent
updated Javadoc and output messages in TestUseOption . java and TestHtmlTag . java to enhance clarity in documentation and add new test cases
updated condition to check if the result is incomplete and there is more than 10 items to ensure that the completion process correctly handles cases with more than
updated command - line usage and argument handling in HybridClusterIntegrationTestCommandLineRunner . java to improve clarity and flexibility of time column
updated output format handling to differentiate between " svg . html " and " svg . html " to ensure consistent output file naming based on the
updated condition in DeviceProfile . java to check for non - QSB enabled states to ensure proper handling of QSB behavior when QSB is
use object # equal ( ) and object # hashcode ( ) to avoid npe
added a ` _ date ` field and its setter method to ` AbstractGenerator ` , ` Generator ` , and ` HttpGenerator ` classes ,
replaced instances of Adler32 with CRC32 in mmm Store . java and ppp Store . java to utilize CRC32 for
do n ' t set heartbeat interval to ` ` any # of seconds ' ' by default .
added a new warning constant ` ZERO _ AREA _ FIN ` and modified checks in ` FinSetCalc . java ` to include it to
( chore ) camel - elasticsearch : migrate elasticsearchio to use databind
hhh - 14627 add date _ trunc function to h2 and oracle dialect
updated error handling in MetricUtils to differentiate memory - related gauge conversion errors to improve clarity and accuracy of error reporting related to memory pool
added JavaScript support in UserTests and modified return statements in UserContext , FileAccess , and FileTreeNode classes to enhance functionality and improve error handling
updated error messages to use ` RUNTIME _ PROTOTYPE _ TYPE . classNameWithEnclosingNames ( ) ` instead of ` @ Config
updated the BACKFILL string from " / generateAnomaliesInRange " to " / replay " to change the endpoint from " / generate
updated return statements in PrecompiledContracts . java to include a proposal ID and modified return statements to include a proposal ID to ensure accurate representation of
refactor item update logic in AllAppsContainerView to utilize BubbleTextView for better badge state management to improve code readability and
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
updated comments in ResourceHandlerTest . java to clarify that the context handler should be started after the ContextHandlerCollection is started to improve
removed condition checking for WORKSPACE _ CUSTOM in Cling . java to simplify conditional logic for better readability and maintainability
truffle : remove assert that lookupmodule be not null .
corrected a typo in the method name from " shadowInvocationWhenChildIsInstrmentedButUnshadowed " to " shadow
updated ItBitExchange import paths from v1 to v2 across multiple files to ensure compatibility with the latest ItBit libraries in the project
ww - 4071 use isdefined ( ) instead of ! = null to check for undefined value
[ hotfix ] [ core ] make utility class final and add private constructor
fix findbugs findbugs dm _ closing _ stream _ closed _ before _ use in RegionsApiUtil . java
updated serialization methods to use " java . util . Vector " and " java . util . Hashtable " instead of their class names to improve type
added ` tableNameWithType ` to the warning log message in ` RetentionManager . java ` to provide additional context about the table being ignored
trim whitespace from the fragment list elements in QueryExecutorImpl . java to ensure consistent length validation by removing leading and trailing whitespace
fix resourcepackfilenotfoundexception with modfile . getfilepath ( ) . tofilenotfoundexception
refactor TransformerBuilder handling in PartitionToolbar . java for improved clarity and functionality to enhance code readability and maintainability while ensuring proper
removed unnecessary condition for showing as grid in RecentsView . java to simplify the scrolling logic for better readability and maintainability
updated calculate methods in CalculatorEndpoint , CalculatorRestEndpoint , CalculatorService , and CalculatorServiceImpl to return BMIViewObject
replaced ` Comparator . comparing ` with ` thenComparing ` in ` QueryCommand . java ` to simplify the comparison logic for better read
added logic to adjust damage for block hay bale to adjust damage based on block type to ensure accurate damage
refactor environment variable handling and improve readability in WindowsProcessAddressSpace , J9DDRImageProcess , and NewElfDump classes
added support for custom plugin properties in OptionsParser and corresponding tests in OptionsParserTest to enhance configuration flexibility and ensure correct handling of plugin properties
updated the condition check from ` hashTable ! = null ` to ` hashTable . isEmpty ( ) ` in ` HashJoinBatch . java
fix ( timestamp ) : do n ' t convert nanosecond to nanosecond in timestamp . of ( )
[ java ] use context . archivecontext ( ) to connect archive in clusteredserviceagent .
added a check for the ' isCompiled ' condition in the compilation threshold logic to ensure that the compilation threshold only applies when the object is not
[ geot - 5621 ] imagemosaic - jdbc - add test a proof of concept
refactor TogglableFlag to improve default value handling and add a change listener for launcher properties to enhance code clarity and ensure proper
add travis ci support for test in an alternative environment
added a condition to return early if the current platform is ANDROID to optimize performance for non - Android platforms
replaced assertEquals with assertThat for better readability in RoutesTest . java to improve test clarity and maintainability by using a more
added new functional interfaces for byte , float , and short predicates in the com . speedment . common . function package to provide functional interfaces for
changed the return type of ` getSubsColor ( ) ` and ` setSubsColor ( ) ` methods from ` int ` to ` String
added a conditional check before deregistering the invocation from the context to ensure that the invocation is only deregistered if the future completes successfully
replaced manual handling of control frame bytes with a method call to output to simplify code and improve readability by utilizing the output method
added a check for the redirect status before starting the WelcomeActivity in LoginActivity and set it in SignupActivity to ensure that the W
added a new class ` ShadowCheckedTextView ` to implement shadow functionality for ` CheckedTextView ` to enable testing of ` CheckedTextView
added Serializable interface to ParserState class and made it transient in AccessorProperty and Property classes to ensure proper serialization and prevent potential serialization issues
8215244 : add expiry exception for identrustdstx3 alias to verifycacerts . java test
removed redundant calls to context . setAttribute in WebInfConfiguration . java to streamline code by eliminating redundancy
fix occupant . getnick ( ) to return the nickname of the occupant .
updated QuicConnection and QuicSession constructors to include a context parameter to enhance session management by allowing context as a parameter for better connection management
updated configuration settings for merge policies in CreateIndexTask . java to ensure proper retrieval of merge policies from the configuration
refactor ICU4JImpl and TextPosition to use ' pageWidthValue ' and ' pageHeight ' instead of calling Character methods directly to
added handling for ComputedDateValue and ComputedNumericValue in AddDefaultValueChange . java and AbstractDatabase . java to improve database default value
refactor NbtScoreboardIoService . java for improved code organization to enhance maintainability and readability of the code
do n ' t load service provider metadata via exist classpath if forceserviceprovidermetadatageneration be true
make graphprinterdumphandler . createtransfer ( ) public to allow subclassing
added BigDecimal import and updated order ' s average price calculation using rounding to enhance precision handling for order price calculations
updated projection handling to use the target field instead of the name in ProjectionOperation . java and changed the field type in TypeBasedAggregationOperationContext
modified the logic in the addViewer0 method to check if the player is already in the viewers list before sending packets to ensure that only
added ConstantState implementation to FolderAdaptiveIcon and ShiftedBitmapDrawable classes to manage drawable states and their changing configurations effectively
refactor SPDYClient to use a new compression and connection factory for improved connection management to enhance code clarity and maintainability by
fix the npe when write a null object in protostuffobjectinput / output
pdfbox - 4892 : fix typo , a suggest by valerybokov
refactor BarrowmanCalculator class for improved readability to enhance maintainability and ease of understanding for future developers
added a condition to check if axes and numbers are visible in DrawAxis . java to ensure that only visible axes and numbers are displayed in the
replaced direct calls to setFilter and setWrap with unsafeSetFilter and unsafeSetWrap methods to improve safety by ensuring safe manipulation of filter and
[ ds - 3952 ] fix npe in xmlworkflowserviceimpl # returntoworkspace
added support for HTTPS connections in CustomUrlJob . java and created a new CustomUrlTrustEverything class to manage SSL context and hostname verification
do n ' t display clock rate in medium format for g722
refactor TextureAtlas class to improve code readability to enhance maintainability and facilitate future updates
updated the method to return the module name instead of the product name in ProjectGenerator and added a method to set the module name in Apple
[ hotfix ] [ test ] fix race condition in testslot
# 113 - enh : add support for query . findids ( ) with inheritance ( # 113 )
updated WebSocketServletRFCTest to use ByteBuffer for reading from input instead of a close frame to improve clarity and correctness of response handling
[ wasm ] make sure function instance be not leak reference .
[ hotfix ] [ table - planner - blink ] [ sql - client ] add ttl option to sql - client - collect ( #
updated serialization type from NESTED _ OBJECT to NAMED _ FIELD and modified field serialization logic in CustomPreconditionWrapper and XMLChangeLog
updated DeploymentExceptionTest to use Jetty ' s Server and HandlerCollection for server management to improve test reliability by utilizing the server '
added error handling and logging for Fresco initialization in CommonsApplication . java and NearbyController . java to improve robustness and
update return statement to handle null or empty objectName cases to improve robustness by ensuring non - null and non - empty return values
updated exception message from " could not find file " to " could not open file " in Command . java and TestPrint . java to improve
[ hotfix ] [ table - planner - blink ] use constant for class name in environmentsettings
updated variable names and logic for handling X500 names in KeyTool . java and added null checks in Resources . java to improve code clarity
added a deprecation annotation to RuntimeOptions . java to indicate that the class is outdated and should no longer be used
replaced manual byte encoding with ` str . getBytes ( utf8Charset ) ` to simplify code and improve performance
added a new interface PermissionEvaluator with permission checking functionality to facilitate permission evaluation in the security context
added support for the ERASE _ LINE _ ON _ FINISH option in the LineReader and LineReaderImpl classes to enhance prompt handling and
[ hotfix ] [ master ] fix the logic of masterfilesystem . ismasterserveravailable ( )
updated exception types from SIGN _ ERROR and CALC _ MERKLE _ ROOT _ FAILED to BLOCK _ SIGN _ ERROR in P
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 53333
fix handling of httpclientexception when the response be complete ( # 6691 )
changed the container centering method from ` center ` to ` centerAbsolute ` in ` Picker . java ` to ensure the spinner is centered
[ hotfix ] [ network ] fix the bug that requestmemorysegments can not be interruptable
updated MBeanServer initialization and release logic in TestJmxIntegration . java to ensure proper management of the MBeanServer instance and prevent potential memory leak
replaced AndroidJUnit4 with RetryTestRule in AbstractIT . java to improve test reliability by using a retry mechanism
replaced the ` autoCommit ` boolean parameter with ` transactionManager ` in the ` QueryStateMachine ` constructor and related methods to streamline
reformatted import statements across multiple Java files and added a new package - info . java file to improve code readability and maintainability
added support for both " javax . net . ssl . DistinguishedNameParser " and " javax . microedition . khron
[ hotfix ] [ test ] remove redundant anonymous class usage in streamtasktestharness
refactor request handling in mmm Request . java and add a test for CONNECT requests in mmm RequestTest . java to improve request URI
updated ` KEY _ LAST _ SEEN _ VERSION _ CODE ` to ` WhatsNewActivity . KEY _ LAST _ SEEN _ VERSION
added methods to handle session availability and unavailability in SessionManager to improve session management by tracking available and unavailable sessions effectively
added " liquibase . pro " to the package scan list in ServiceLocator to support scanning for Liquibase pro packages
replaced the method ` deleteSyncFolders ` with ` deleteOtherSyncedFolders ` in ` SyncedFolderProvider . java ` to simplify the
updated the ` loadWithNewGlobal ` method to accept an additional parameter for arguments to enhance functionality by allowing the method to accept multiple arguments as
refactor path handling logic in FastPathResolver . java for improved clarity and functionality to enhance readability and maintainability of the code
updated the method to use ` getRetainedSize ( ) ` instead of ` length ( ) ` for footer and stream slices to ensure accurate
renamed methods and variables related to random type type checks from " isExceedRandomizedType " to " hasAlreadyRandomizationDepth " to
[ calcite - 3596 ] do n ' t throw unsupportedoperationexception for window function
added a line to clear the headers in the proxyRequest object to ensure that the headers are properly set before processing requests
added a condition to skip the test if SA attach is not expected to work to ensure the test only runs when SA attach is expected to work
added null check for bgColor before checking its alpha value in GraphicsDevice . java and created TranslucentWindow . java for testing window transl
added a check for null user information before displaying them in UserInfoActivity to improve user experience by providing appropriate error messages when no relevant information is available
added a custom serialization mechanism for precompiled headers in PrecompiledHeaderData . java to ensure that precompiled headers cannot be used on different machine
[ hotfix ] [ table ] [ connectors / kafka ] support append mode in kafkatablesourcesinkfactorybase
added a new file ` MultipleOutputsIntegrationTest . java ` to implement integration tests for named output groups to ensure that named outputs can be used
updated regex pattern and modified content handling in FileSettings . java to improve formatting and maintain consistency in file settings
nifi - 10592 : fixed statelessvalidationcontext and statelessflow to handle variable in flowcontents .
replaced ` new Object [ ] { } ` and ` new Object [ ] { } ` with ` ArrayUtils . EMPTY _ OBJECT _ ARRAY
added a TaskbarModeSwitch annotation to TaplTestsQuickstep . java to enable persistent taskbar mode for testing purposes
added two new device status entries for " leaving - dock " and " energy - save - mode " in DeviceStatus . java to enhance device
improve error log when item model can not be load
added @ Ignore annotation to KrakenFuturesStreamingPublicDataTest . java to temporarily disable tests that are not ready for execution
pdfbox - 4892 : do n ' t try to get current pixel scale on non - 2x device
refactor RussianLowerCaseFilter for improved readability to enhance maintainability and facilitate future feature additions
removed server and client properties from CsvBulkLoadToolIT and updated setUpTestDriver to use EMPTY _ PROPS to simplify property management and improve
replace path separator characters in displayName with underscores to ensure consistent file path formatting across different operating systems
add a ` ` resettableinputstream ' ' for good audio data loading .
added a boolean flag ` repeatFirstLineIndent ` to control indentation behavior in ` ColumnText . java ` to allow flexible indentation behavior based
cast ` oid ` to ` Object ` before comparison in ` Oid . java ` to ensure proper type handling for equality checks
fix race condition in hikariconfig . getconnection ( ) . addconnection ( ) . close ( ) .
loopex : switch from controlflowanchornode to controlflowanchored
added a line to set the focus of buttons [ i ] to false to ensure the button is not painted in the user interface
updated the condition to check for unique constraints and foreign keys in DatabaseSnapshot . java to ensure proper handling of primary keys and foreign keys in the
added a deprecated method ` getAccountLedgersWithParams ` to ` KucoinAccountServiceRaw ` and implemented a new API endpoint in ` Account
[ ds - 3952 ] add check for dc . title in post community admin group creation
updated GapInsertionDetector to handle empty utterance cases and added a check for word count to improve robustness by ensuring a valid utterance is returned
added unit test base on user forum issue
updated thread settings in FeedRefreshUpdater to use database update threads instead of background threads to improve thread management by aligning with the new database update
reduced the FASTSCROLL _ THRESHOLD _ MILLIS from 40 to 10 milliseconds in RecyclerViewFastScroller . java to allow for
updated the initialization of SystemClassName to use " L java / lang / System ; " to simplify the class name retrieval for better clarity and
hhh - 13644 - provide a way to get the result stream of a stored procedure call
added a null check for API properties in RestSwaggerSupport . java to avoid potential NullPointerException when retrieving API properties
added BinaryFrameGenerator and TextFrameGenerator classes to provide frame generation functionality for binary and text frames
simonstewart : add webdriverwait to fix flaky test
refactor latitude and longitude generation logic in RandomGeo3dShapeGenerator . java to improve randomness to ensure that latitude and longitude values are
added a keepAlive method to the ResourceBundle class to ensure that the ClassLoader is properly managed during resource loading
change return value from false to true in SQLiteDatabase . java to enable successful execution of database operations
updated the signature check to use a constant for utility concurrent signatures to improve code readability and maintainability by reducing duplication
added MkdirStep to multiple classes and updated steps in FatBinaryTest to ensure necessary directories are created for output files
updated coordinate comparisons and improved error messages in MeshLeveler . java to enhance clarity and maintainability of error handling logic
( chore ) camel - pmml : skip kie - pmml parsing and compilation when pmml be not available
updated the condition from locationMode to thermalStatus in ShadowPowerManager . java to ensure accurate validation of thermal status during shutdown
added support for macOS temporary directory creation in MountableFile . java to ensure compatibility across different operating systems
make sure we do n ' t load memory map file on window
added a null check for the organization in the pom . xml file to ensure that plugis are required to have an organization in the pom
updated copyright notice in SepPostingsWriterImpl . java to ensure compliance with licensing requirements
deleted the TerminateWebSessionListener . java file to the functionality is no longer needed in the project
update ProcessCommunicator to use the system ' s class path instead of an empty string to ensure correct execution of child processes based on the
replaced ` ArrayUtils . EMPTY _ BYTE _ ARRAY ` with ` new byte [ 0 ] ` for cryptKeyInit , cryptKeyPriv ,
added JUnit Pioneer annotations and a test method to ` AddLicenseHeaderTest . java ` to ensure Javadoc changes do not affect the
changed the LAUNCHER3 _ PHYSICS feature flag from false to true to enable the launcher 3 PHYSICS feature
added a ` < div class = ' noPrint ' > ` tag to the output of ` HtmlThreadInformationsReport . java ` to
updated LUCENE _ MAIN _ VERSION from " 3.1 " to " 4.0 " and changed TEST _ VERSION _ CURRENT
added macosx symbolicator and task handles in BsdDebuggerLocal . java and modified OS detection for Darwin in PlatformInfo . java
add weakreference to prevent memory leak
do n ' t log network dispatcher exception in debug
[ java ] default aeron admin buffer to a directory when no a conductor be available .
added a break statement in the TouchImageView class to prevent fall - through behavior in a switch - case structure
chore : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16 . 0
do n ' t flush on ssl handshake complete in the feedablebodygenerator
added handling for Object and CONTRAVARIANT types in TypeUtils . java to ensure correct type constraints are applied to generic types
change memtablespendingflush to use concurrenthashmap instead of nonblockinghashset
added null check for ` tree . errs ` in ` MemberEnter . java ` and updated error handling logic in ` JavaCompiler . java `
changed browser background from SWT . NO _ BACKGROUND to SWT . NONE in BugInfoView . java to improve user experience by using a
updated the method call from ` finish ( ) ` to ` dialog . cancel ( ) ` in ` AboutActivity . java ` to ensure
fix integerstamptest . div ( ) for negative input
added a method to read an InputStream into a byte array and updated image instance creation to use this method to improve code readability and maintainability
added variables and scope management for ` CaseStmtToken ` in ` SwitchCompiler . java ` and ` ExprGenerator . java ` , along with
added error handling for cipher initialization in RSAClientKeyExchange . java to improve robustness by logging exceptions during handshake
updated AdditionalDependencies in WinGammaPlatformVC10 . java to include psapi . lib to ensure compatibility with the new library structure
updated SQL comment formatting to use system - specific line separators to improve compatibility with different operating systems and enhance code readability
added UTF - 8 encoding configuration in TemplateEngineFreemarker and updated malicious JavaScript in ApplicationControllerTest to ensure proper handling of
replace ByteArrayInputStream with String for byte array conversion in CRDGeneratorTest . java to improve performance and readability of the code
make field in sampleresenderfactory non - static
camel - testng : use testngemailablereporter by default if testngemailablereporter be not set
added quote handling in CommandLineBuilder and updated test assertions in CommandLineBuilderTest to improve command line parsing logic and enhance test coverage for quoted quotation
removed the ' public ' access modifier from multiple interfaces and classes to enforce encapsulation within the package
added a line to set the number of reduce tasks based on the number of fetchers to ensure the job uses the correct number of reduce tasks
include default value from objectfield definition in schema generation ( # 2321 )
updated the expected file version in SaveService . java from " 505365 " to " 532077 " to ensure compatibility with the
updated texture extension checks from " texture _ float " to " OES _ texture _ float " and added " GL _ ARB _ texture
add write ( string filename , string value ) and closefile ( string name ) method to fileserver
added a null check for outputDirectory and jarStream before setting its output directory to ensure output directory is only set when both output directory and jarStream
added performance measurement using PerfStatsCollector in ShadowSQLiteConnection to enhance performance tracking during database operations
updated JDK tool path retrieval from ` getCurrentJDKTool ` to ` getTestJDKTool ` in ` JMapHProfLargeHeapTest
add a new enum resourceerrorhandling to handle gc exception report
added buffer position validation in RAMInputStream and implemented EOFException handling in TestRAMDirectory to ensure correct buffer position handling and improve test coverage for EOFException
improve error message when resource not find
modified ForkJoinPool and ForkJoinWorkerThread classes to include an innocuous flag and updated related methods for thread management to enhance thread
reduce CHECK _ EVERY _ N from 10000 to 0xFFFF and modify memory checks to use bitwise operations to improve memory management efficiency and enhance logging
hbase - 25819 fix broken testsplittransaction test ( # 2588 )
added null check for currentSelectionArea in CompatibilityEngine . java to prevent potential NullPointerException when accessing currentSelectionArea
( chore ) camel - demo - jaas : add test case to demonstrate jaas demo
added conditions to check if spanX and spanY are 1 before creating a folder to ensure proper handling of folder creation based on span dimensions
refactor CacheOffHeap class implementation to improve performance and maintainability of the code
improve error message when attempting to create a view depend on a table that be already open .
added a check for valid row and height before parsing XML gid values in TiledLoader . java to ensure that extra XML gid values are ignored
make inmemorytilecache . setworkingset thread - safe
added a new Java class ` Solution ` that processes and calculates the final number of steps based on user input to provide a solution for calculating and
add interface for avoid bad ip address by tracker ( e . g . 0.0 . 0.0 or localhost )
fix multilayermodel and forgehooksclient not use translucent rendertype
remove the ' default : ' tag from config element ' s comment when add them to the tool tip
changed the type of ` thingTypeVersion ` from ` int ` to ` String ` in ` ModuleType . java ` and updated its assignment
added null check for recieptents before mailing to avoid potential NullPointerException when recieptents is null
refactor the logic for determining if a route is a single result to use a dedicated method to improve code readability and maintainability
do n ' t try to pull image if it ' s already in the image cache
added a resourcesMode parameter to AndroidMetadata constructor and updated its usage in RobolectricTestRunner and RobolectricTestRunner to
[ te ] fix historicprocessinstancequeryimpl . getcurrentdate ( ) to return date without truncation .
replaced ` gradleImporter . importProject ` with ` gradleImporter . importProjectCore ` in ` OpenAndroidModule . java `
added error handling for CommandFailedException in LiquibaseCommandLine . java to improve error reporting for command failures
refactor TreeMap class implementation to improve code readability and maintainability
added methods to enable or disable asynchronous stack traces in Display . java and implemented exception handling in Display . java to enable asynchronous stack trace functionality and
added a method to set the glow color in BubbleTextView and updated Folder to use this method to enable customizable glow colors
pdfbox - 4892 : fix style class for link and description
added tests for the ` alltypes ` table and its class name retrieval in ` ResultSetMetaDataTest . java ` to ensure correct metadata retrieval for
removed IOUtils . deleteFilesIgnoringExceptions for bit vector writing in Lucene40LiveDocsFormat . java and SimpleTextLiveDocsFormat . java
updated the condition to check if ` _ info ` is not null before verifying the status of ` SWITCHING _ PROTOCOLS _ 101
added a constructor to the ShadowLocation class that accepts a provider string to facilitate initialization of the provider object
updated maxRAM calculation to accommodate cases where deviceRam is less than 2048 to ensure sufficient memory allocation for 32 - bit devices
add miss stats for local map that do not have data
added logging functionality to FileProfileActivator by implementing LogEnabled and logging for file existence checks to enhance debugging capabilities by providing visibility into file existence
updated the variable used in addToBody from " noname1234 " to " invalid _ " to improve clarity by using a more descriptive
change guild # getroles ( ) to return a set instead of a list ( # 1188 )
updated the maximum number of uploads from 30 to MAX _ NUM _ UPLOADS _ SHOWN in ExpandableUploadListAdapter . java to
added multiple assertions in DashboardUserMapperTest . java to verify the deletion of records to ensure that the deletion functionality works as expected for both user
update instructorfeedbackresultspage : rename recipient to primaryparticipant to avoid confusion
sulong : add ` ` derefaddress ( ) ' ' and ` ` derefaddressgetreceiver ( ) ' '
added a method ` getBufferSize ( ) ` to the ` BufferedIndexOutput ` class to provide access to the buffer size for external use
added usage help auto - width to the ` ` terasology ' ' command and updated the description for the ` -- headless ` option
reformatted code in DrawerActivity . java for consistency and clarity to improve readability and maintainability of the code
updated CommandLineParserTest . java to improve test coverage to enhance reliability of command line parsing functionality
updated animation effects in QuickstepAtomicAnimationFactory and modified visibility of FADE _ MAX _ CLAMPING _ THRESHOLD in Portrait
updated the method to use ` toUnderscoreSeparated ( javaNameFromExternal ( externalName ) ) ` instead of ` toUnderscoreSeparated ( to
added native methods for frame management and object release in CWrapper . java to enhance functionality and ensure proper resource management
added constant value checks in ` mmm Checker . java ` and created a new ` ValueTest . java ` class with various test cases to
updated test files for MontgomeryMultiply , TestMulAdd , and TestSquareToLen to improve test coverage and ensure consistency in
removed null check for constructors in PojoUtils . java to simplify the code by eliminating unnecessary null checks
refactor JiraConfiguration class for improved readability to enhance maintainability and clarity of the code
updated the string representation for error and coverage failures in UploadBuild . java to improve clarity of build failure messages for better debugging
update bounds calculations in DeviceProfile . java to include search bar offset to improve layout responsiveness by accounting for search bar offset
updated log messages to clarify the purpose of the messages related to the PulseAudio audio source to improve code readability and maintainability
refactor code to run the activity launching on the UI thread instead of on the main thread to ensure UI updates occur on the main thread
removed unused imports and added a method to retrieve the source group to improve code clarity and ensure proper handling of optional source group retrieval
increased the wait times in ` TestSimTriggerIntegration . java ` from 22 , 6 , and 60 , 000 milliseconds to 30 ,
fix the size of all - null block return from float reader .
fix npe in abstractnodecostsearch . getbestcosts ( ) when distfromstartsq be square
added a condition to skip processing for specific UI components in ResourceEditorView . java to exclude specific UI components from processing
replaced ` UiThreadHelper . getBackgroundLooper ( ) ` with ` LauncherModel . getWorkerLooper ( ) ` in
added a check to initialize commitPoint to the latest commit if it is null to ensure that the commitPoint is always initialized with the latest commit
added unit tests for ` getImeiForSlot ` and ` getMeidForSlot ` methods in ` ShadowTelephonyManager
removed unnecessary debug request logging in SimpleHostRoutingFilter . java to streamline the request processing by eliminating unnecessary debug information
added a destory method to various classes and implemented resource cleanup to ensure proper resource management and prevent memory leaks
( chore ) camel - rocketmq : fix the test failure of normalmessagenewandrecvit
use standardcharsets . utf _ 8 instead of charset . forname ( ` ` utf - 8 ' ' )
hbase - 25827 bulkload do n ' t retry if there be an error when check for bulk load
added a nullable ` commission ` field to ` DefaultWithdrawFundsParams ` and updated its usage in ` RippleWithdrawF
removed unused import of StreamTerminator in AutoClosingReferenceStream . java to clean up the code and reduce unnecessary dependencies
solr - 10692 : catch solrexceptions in solrexbuilder and solrexlocator , instead of rethrowing them
added a check for null or non - abstract overloaded methods in Java2TypeScriptTranslator . java and modified OverloadTests . java to
added logging functionality using StacklessLogging in TestFileSessions . java to improve error handling and logging during file session sweeping
added serialization support and reorganized variable declarations in multiple classes to enhance data integrity and improve code readability
rename SubExactLConstantTest and SubExactLNonConstantTest classes to improve clarity and consistency in naming conventions
added a check for null values before parsing claimRequestString in ConnectOAuth2RequestFactory . java to improve robustness by handling potential null values
updated HiveFilterSetOpTransposeRule to use RelBuilderFactory instead of FilterFactory to improve flexibility in creating HiveFilterSetOpTranspose
updated ` processTypeHintForNestedDocuments ` to handle null source cases in ` UpdateMapper ` and added unit tests for null values in `
replaced CoreAdminResponse with CoreStatus and updated related method calls in CollectionsAPIDistributedZkTest . java and CoreAdminRequest
fix npe in moddirtransformerdiscoverer by initialize list
updated error message formatting in AbstractQuerydslProcessor . java to enhance readability and maintain consistency in error reporting
remove unimplemented method and use getcallstack instead .
rename method ` setOf ` to ` copiedSetOf ` and update related calls in ` RestTemplateBuilder . java ` to improve clarity
camel - 16400 : camel - mail - make it easy to dump the mail message in the tostring ( ) method
resolve http : / / issues . apache . org / activemq / browse / amq - 2694 - avoid nullpointerexception
updated the return statement to include setting the identifier name as a property name to ensure that the identifier name accurately reflects its intended purpose
added new ` WaveGeneratorActivity ` class and integrated it into ` InstrumentsFragment ` to launch the wave generator activity to enhance user experience by
added null checks and logging for sheet handling in KeyedProperties and SheetOverlaysManager classes to enhance robustness by preventing potential NullPointerExceptions
test : add test for log and exec in the kubernetes - client
added a test method ` testNoWriter ` to ` TestReplicationHandler ` to ensure that the FS factory is used when creating a new index
[ fix ] miss call to super . dispatchmethodkernelokra in graalkerneltester
updated DnsClient , DefaultDnsClient , DefaultMxRecord , and DefaultMxRecord classes to implement Comparable for DefaultMxRecord to
refactor thread creation in XToolkit . java to use a privileged action for clarity to improve code readability and maintainability by
added validate ( ) method to SelectBox and set selected " Linux6 " in UITest to enhance UI validation and ensure compatibility with Linux
replace IllegalStateException with Collector . printStackTrace for exception handling to improve error reporting by printing stack trace instead of throwing an exception
updated the ` createState ` method to include a ` SplitState ` parameter and modified related logic in ` FlowBuilder ` , ` SplitState
changed the ` connectionState ` variable to be volatile and updated its usage in the ` getConnectionState ( ) ` method to ensure thread - safe
polished default polling period to be 1 second instead of 10 .
refactor memory allocation methods in MemoryStack and MemoryUtil to use nmalloc and encodeASCII to improve memory handling efficiency and align method visibility with
added exception handling for ` IOException ` and ` DocletAbortException ` in ` HtmlDoclet ` and ` AbstractDoclet ` classes to
[ java ] unusedmodifier false positive for enum .
replaced lambda expressions with method references for better readability to improve code clarity and reduce boilerplate
added a name parameter for SSL in the AbstractHttpClientServerTest class to improve clarity of the parameterized test by specifying the SSL context
[ hotfix ] [ core ] handle illegalformatexception in transformationhelper . formatpattern ( )
updated the method used to retrieve active connection permissions from ` getUserPermissions ( ) ` to ` getActiveConnectionPermissions ( ) ` to ensure accurate access
replace direct equality check with Apache Commons Lang ' s EqualsBuilder for better readability to improve code maintainability and leverage Apache Commons
added null check for outputRoot before creating a new File object to prevent potential NullPointerException when outputRoot is null
pdfbox - 4892 : add an annotationfilter interface to allow the creation of a pddocument to be filter
refactor StackTraceCleaner class to improve code readability to enhance maintainability and facilitate easier debugging
updated content type handling for CSS and JavaScript files in PluginServlet . java to ensure proper content type is set based on the file extension
hhh - 14619 skip test on oracle for criterialiteralinselectexpressiontest
updated the parameter name from ` slot ` to ` slotSize ` and modified the upgrade method logic to improve clarity and correctness in version
added ` getStats ( ) ` methods to multiple classes and updated ` DocBuilder ` to use ` AtomicLong ` instead of ` AtomicInteger ` to
[ drools - 6865 ] add long polling to kiescanner client to wait for service to be start ( # 118
refactor scrolling methods in PagedView and BaseOverview for improved consistency and functionality to enhance user experience by streamlining scrolling functionality and
updated the initialization of UnlocksDialog in UI . java and added a button in PausedDialog . java to enhance the user interface by providing
added a call to clear the drop list in the PlayerEventListener to ensure the drop event is cleared before further operations
added a new constant DEFAULT _ PARAM with a value of " inputName " in StreamResult . java to provide a default parameter for the input name
updated the exception type in the test method from MalformedURLException to IOException to improve error handling by using a more general exception type
updated the print statement in TsFileSketchTool to include the chunk type and added a line to skip the PlanIndex to improve clarity of
added functionality to exclude specific Swift header files from the UmbrellaHeader class to enhance the filtering of headers by excluding specific ones from the
renamed the method ` onHttpError ` to ` onHttpHeaderError ` in ` GrizzlyAsyncHttpProvider . java `
added encode ( ) method call to RequestPlugin . java to ensure proper handling of special characters in request data
mondrian : fix for mondrian - 1214 . use float precision in native query on db2 .
added null or blank password validation for LDAP user in LdapAuthenticationProviderImpl . java and created corresponding test case in TestLdapAuthenticationProviderImpl .
pdfbox - 4892 : simplify code , a suggest by valerybokov
added a condition to clear the complex writers in ProjectRecordBatch . java to ensure that the complex writers are cleared when a specific condition is met
added @ SuppressWarnings ( " serial " ) annotations to multiple Java files to suppress serialization warnings for better code clarity
removed the ` public ` access modifier from the ` ClassGraphClassLoader ` class and updated the null check logic to enhance encapsulation and prevent potential
added a check for the " _ errors " name and modified the return statement to handle empty location cases to improve error handling by providing clearer
added a constructor to EventSourcingRepository that accepts an EventStore , SnapshotTriggerDefinition , and RepositoryProvider to facilitate the
refactor symbol handling logic for binary nodes in mmm Attr . java and ppp Attr . java to improve clarity and maintainability of
modified the search text handling in SearchedPeopleCursorAdapter and QustomDialogBuilder to ensure proper formatting of search terms to improve user experience
fix alloff command in essentia mode ( # 3352 )
tmi - tiff : use ` ` chunky ' ' planar configuration instead of ` ` extension ' '
added close ( ) method to itemlisttag . close ( ) to prevent resource leak
move the laser table to use an averageutil class to make it easy to get the average of the table .
added two new files , SigInt . java and SigIntBarrier . java , to implement signal handling for the " INT " signal in
refactor graph handling in ExporterGEXF . java to support hierarchical and non - hierarchical graphs to improve graph processing accuracy and support for
refactor TCTLSeparatedProtocol to use Text class instead of byte buffer for null string handling to improve performance and handle character encoding
[ # 7798 ] fix index out of bound exception in feedbackrubricresponsedetails ( # 7798 )
replaced the DB2Database instance check with a specific comparison method to improve code clarity and maintainability by using a more explicit comparison method
simonstewart : allow browsermobproxytest to reset the browser ' s proxy
refactor criticalErrors to use Integer . toString for better readability to improve code clarity and performance by avoiding unnecessary string conversion
removed redundant reset call for mTextWatcher in InPlaceEditView . java to streamline code by eliminating redundancy
updated InternalByteArray and TruffleString classes to improve code structure to enhance maintainability and readability of the code
[ hotfix ] [ graph ] use vertex instead of edge in outedgesfunction
updated multiple Java6 - related assertion classes to improve consistency and clarity to enhance maintainability and readability of the codebase
deleted the file ` mmm ClassA . java ` and added a new file ` ppp DiacriticTest . java ` with
[ java ] use a cyclic barrier in cluster membership test .
[ mng - 4892 ] do n ' t try to collect project in multi - module mode if there be no project activation
updated the SSL configuration check to use ` equals ( ) ` for better readability to improve code clarity and maintainability by using a more
refactor Mockito class implementation to improve code readability and maintainability
removed unnecessary whitespace from Jdbc3Connection constructor parameters to improve code readability and maintain consistency in formatting
added ensureInstance ( ) method to ServletHolder class to improve servlet instance initialization logic and enhance thread safety
added logging functionality and improved delta server time handling in BinanceExchange and BinanceBaseService classes to enhance traceability and debugging capabilities for
added binding conditions for " NonStop ( tm ) Servlets For JavaServer Pages ( tm ) v8.5 " in Tomcat
replaced direct call to deregisterAnimated with a null check for the component form to avoid potential NullPointerExceptions when the component form is not initialized
updated ` decodeResource ` and ` decodeByteArray ` methods to accept ` BitmapFactory . Options ` as a parameter to enhance flexibility in bitmap
[ java ] fix usage of executor in subscriber and publisher .
added functionality to prevent multiple clicks and updated tweet text handling in TimelineArrayAdapter . java to improve user interaction responsiveness and maintain consistent
added " text " to the list of unmodifiable data types in PostgresDatabase . java and modified conditional logic in NumberType . java and Column
entryprocessorbouncingnodestest fix and cleanup ( # 3683 )
updated method names and state checks in AmbariManagementControllerImpl . java and AmbariManagementControllerTest . java to improve clarity
updated the logic in CreateBridgeServlet to check for a non - null value before adding a result to the inbox to ensure that the result is
crawldatosetching : fix race condition in preconditionenforcer
replaced direct calls to getDisplayName ( ) with a variable assignment for better null safety to enhance code robustness by preventing potential NullPointerExceptions
added a default shader parameter to the SpriteBatch constructors and modified the createShader method to accept a default shader to enhance flexibility in shader
added synchronous commit options to the properties configuration in TestUtil . java to enable synchronous commit functionality in the application
added type coercion functionality and improved error handling in SortedSetTypeCoercer . java to enhance the robustness of element coerc
updated confirmation messages based on file type and favorite status in RemoveFileDialogFragment and RemoveFilesDialogFragment to improve user feedback based on file type
added a check to ensure the character is within the range of 256 to prevent potential array out - of - bounds errors
use random port instead of hardcoded 666
updated the expectation for retrieving clusters in HostResourceProviderTest to ensure that the clusters return an empty map instead of null to avoid potential null pointer
[ hotfix ] [ yarn ] remove unused logger parameter from yarnentrypointutils
separate the initialization of the window color and style in the chat window .
removed the ShadowHtml class and updated test assertions in HtmlTest to simplify the codebase and improve test clarity
added a new file ` StarTreeRecordStoreFactoryBlackHoleImpl . java ` that implements the ` StarTreeRecordStoreFactory `
updated logger configurations in HttpClientLoadTest to use specific HTTP3 and Jetty loggers to enhance logging capabilities for better debugging and monitoring
changed the visibility of the ` addListeners ` method from private to package - private and added a test for listener validation in ` MockSettingsImpl
[ hotfix ] [ javadoc ] fix typo in statehandletestore
updated imports from ` org . eclipse . jetty . util . security . Constraint ` to ` org . eclipse . jetty .
update instructorcourseenroll to use constant instead of hardcoded ` ` none ' '
use try - with - resources to ensure stream be close to prevent resource leak
( chore ) camel - 1145 : avoid use hardcoded port number
updated JarBuildStepsFactory to include libraryTarget and modified jar parameter retrieval methods to enhance library management and improve jar parameter retrieval for better ABI
updated the URL in TrustEverythingTrustManager . java to remove " # validating - cerficates " to improve clarity and maintain
api : remove the overridden getpagesizeval method in listcapacity and use it from baselistcmd
added a case for CLOSED in IteratingCallback . java to handle the case when the callback is closed
added an ` isAuthorized ` boolean field and updated related method signatures in ` AccessControlContext . java ` and ` ProtectionDomain . java `
refactor OSGiDeployer to check for AbstractOSGiApp before sending deployment events to ensure proper handling of OSGi service
added support for detecting " tiff " codec and container in DLNAMediaInfo . java to enable proper handling of Tiff
optimizedcalltarget : synchronize access to profiledargumenttypes and assumption
added a new file ` CubocDesktop . java ` and modified ` Map . java ` and ` MapRenderer . java ` to implement
updated file paths in PolicyMonitorTest to use the target directory instead of the test resource directory to ensure tests run in the correct directory structure for
added functionality to remove all files from the trashbin list adapter to ensure that all files are removed from the trashbin list when necessary
updated the import statement for virtual machine manager from ` org . eclipse . jdi . Bootstrap ` to ` com . sun . jdi
truffle : add checkglobalnode node for check and write .
updated the ` createLauncherEvent ` method to include ` Intent ` as a parameter and added component hash and predicted rank calculations to enhance event data
make burningmanpresentationservice ' s max burn target upper bound configurable
replaced specific imports in UniqueConstraintSnapshotGeneratorSnowflake . java with a wildcard import and updated the snapshot object method to handle H2
modified the handling of the ` item ` string in ` DMLTransformer ` to conditionally set it based on the ` insertStatementBuilder `
updated import statements in ServiceValidateControllerTests . java and changed the PGT URL from " http " to " https " and modified the test
do n ' t hide the default function name if the function be not in a statement .
updated JarLauncher . java for improved functionality to enhance performance and maintainability of the code
added generic type parameters to various classes to enhance type safety and improve code clarity
added a new dimension of 320x200 in DeviceConfiguration . java and modified return logic in OperationSetVideoTelephonyJabber
added tests for updating PGobject objects in ResultSetTest . java to ensure correct handling of PGobject data in database updates
updated PasswordResetEndpoints to return an UNPROCESSABLE _ ENTITY for empty email queries and adjusted response handling for bad requests to improve error handling for
replace retrieval of the second child node with direct retrieval of the document element to improve efficiency by directly accessing the document element
refactor caching logic in Cache . java to improve performance and reduce memory usage
rename timeinsec to timemillis so that it would well reflect our new naming convention
add a check to tilelightrelay so that it do n ' t try to set the bindy to - 1 if the block do
added a new ` Chainer ` class and modified ` CollectionSubject ` to return a new ` Chainer < CollectionSubject < T > >
refactor Model class to improve code structure to enhance maintainability and readability of the code
updated the recordedTime calculation to include a long value of 619315200000 milliseconds to ensure accurate time recording by incorporating additional
added a condition to resize the status if the terminal type is Windows to ensure proper handling of terminal status updates on Windows platforms
updated host version state management in UpdateDesiredStackAction . java and modified constants in RepositoryVersionState . java to improve clarity and ensure proper
move jsinterop and jsinterop - annotations . jar to ` ` com / google / j2cl / transpiler / integration / j
change to use linkedhashset instead of hashset to preserve order of artifact
remove unnecessary try / catch in operationserviceimpl . toobject ( )
rearranged the method call in KnativeEnvironment . java for improved readability to enhance maintainability and clarity of the code
updated the thread pool name from " commitlog _ archiver " to " CommitLogArchiver " to improve clarity and consistency in naming
added a connect ( ) method to CloudSolrClient and implemented a test for uploading configurations in TestCloudSolrClientConnections to ensure proper connection handling
synchronize access to allbindings to prevent concurrent modification exception
added methods to clear files and cache in ShadowContext and refactored file stream handling in RobolectricTestRunner to improve file management
added LinkedHashSet and TreeMap classes to SecureXStream . java and implemented assertions in XStreamPersisterTest . java to enhance functionality and ensure correct style
( chore ) camel - kie - maven - plugin : allow to pass kiemodulemodel to kiebuilder / kie
replaced the block type check with a specific check for Farmland instances in the event handling logic to improve the robustness of the
added a default implementation of the getLocalIp method to provide a default implementation for the interface
updated JdbcStepExecutionDao to use SerializationUtils for deserialization and modified test cases in AbstractStepExecutionDaoTests and StatefulRetryStepFactoryBean
updated comments in multiple Java files for clarity and consistency to improve readability and maintainability of the code
added " python " and " - python - gpu " options to various resource options in Python and TensorFlow files to enhance compatibility with additional Python
added refresh functionality to the JTable in PluginTab . java to enhance user interface by allowing dynamic updates of plugins dynamically
change log level from info to warn for reloading , saving , and trimming history file
server : fix npe in vmwarestorageprocessor when vm be n ' t attach to a vm
camel - 16400 : camel - sftp - stop should stop ssh daemon with force = true
updated method signatures in ExperimentalMockitoJUnitRunner . java to improve clarity and maintainability of the code
updated serial handling in GpsSettingsActivity and Session to use Utilities . GetBuildSerial ( ) instead of Build . SERIAL to ensure proper
updated the implementation of the SwapGBuffers class to improve performance and maintainability of the code
added null check for spatial and skeletonControl before removing it to prevent potential null pointer exceptions when spatial is not initialized
added a new method ` setSmartReplies ` to ` ShadowRankingTest ` and refactored ` ShadowRanking ` to use reflection
[ java ] do n ' t filter out record segment file if they do n ' t exist .
removed the call to ` resourceLoader . getConfigDir ( ) ` in ` CarrotClusteringEngine . java ` to streamline the initialization
added null checks for ` testRect ` in ` WindowsTreeUI . java ` and created a new class ` bug8004298 .
updated ASM _ API _ VERSION from ASM7 to ASM9 in ScriptUtils . java and CompilationConfig . java to reflect the
improve error message when a column vector can not be load from map file .
added client information setup and updated method calls in SurrogateAuthenticationEventListenerTests . java to enhance test coverage by utilizing client - specific information
added a isUserView variable initialized to false in CardPresenter . java to ensure user view state is properly initialized before use
remove dependency on guru . nidi . graphviz . engine . graphviz , use schemacrawler ' s diagram generator instead
added assignments for constructBatchHistogram and syncLogTimePerRequestHistogram in LogDispatcherThreadMetrics . java to improve clarity and maintainability of
added a new module - info . java file for the SQLite connector module to define module exports and dependencies for the SQLite connector module
added a 500ms sleep in StreamResetTest . java to allow for better synchronization during test execution
removed conditional check for " new " or " api " in permissionsManager initialization to simplify permission management logic for better readability and maintainability
refactor DateParser and TestDateParser classes to improve code readability and maintainability
added a method ` getDepth ` to ` SpringLoadedState ` that returns a constant value of 0.5 f to provide a consistent depth representation
replaced manual array copying with Arrays . copyOfRange for improved clarity and performance to enhance code readability and maintainability by using a
[ hotfix ] fix checkstyle violation in executiongraph
removed swipe functionality from NotificationRenderer and added a notification removal method in NotificationActivity to simplify the notification handling process and improve user interaction with the bottom
added null check for invocation in DefaultExceptionConverter and updated exception messages in ExceptionsTest to ensure proper handling of null values and improve clarity of
fix checkstyle issue in block / entity / glowcontainer . java ( # 621 )
replaced MethodHandle usage with reflective method access in ProxyMaker . java to improve compatibility with newer Java versions and enhance error handling
fix test to be compatible with jdk 1.4
updated return statements in BaseEmailContentFormatter to remove StringUtils . join for metrics and datasets to simplify string concatenation for better readability and maintainability
added a new JPanel and adjusted visibility settings for ` propertySheet ` and ` propertySheet ` in ` LayoutPanel . java ` to improve UI
added a null check for the location in the dead server condition to ensure proper handling of cases where the location is not initialized
updated BuilderFactory , Pipeline , and PipeliningTest classes to improve code organization and clarity
added a check for missing DSA key parameters in BasicChecker . java and simplified public key generation return statement to enhance error handling and improve code
refactor the ignore media type check in MediaTypeRequestMatcher to use a dedicated method to improve code readability and maintainability by encapsulating the
updated debug logging to use task number from taskAttemptId instead of job configuration to improve logging clarity and maintain consistency in task identification
added a property to the SpringBootTest annotation in EventServiceTests . java to allow configuration of bean definition overriding in the test configuration
added null check before closing the indexReader to prevent potential NullPointerException when indexReader is not initialized
refactor BTCMarketsStreamingAdapters , BTCMarketsStreamingMarketDataService , and BTCMarketsManualExample classes to
added a new test method ` issue151 ` in ` FencedCodeBlockParserTest ` to verify rendering behavior for specific code blocks to
added a new file CompatibilityTest . java to test XML compatibility properties to ensure compliance with XML standards and improve test coverage
added new utility classes for push and security management functionalities to improve code organization and facilitate push - related functionality in the application
fix the bug that tablerebalancer # getnextsinglesegmentassignment do n ' t take into account instance state map
bump version to 2.7 . 0 and update release note
[ log4j2 - 1348 ] fix test failure on window
improve handling of ajp / apr / native read timeout .
initialized friction , restitution , density , and isSensor variables to 0 to initialize their values to ensure proper default values for better
[ te ] add anomaly function spec to anomaly detection api ( # 1305 )
added a try - catch block to handle potential IOException when executing a shell command to improve robustness by handling potential IO exceptions during broadcast idle operations
added unit tests for reading font and link tags in ResourcesTest . java and modified the span calculation in ResStringPool . java to ensure that
move guistatscomponent to src _ base , not src _ work
added phone permission request handling in Launcher . java and Utilities . java to enhance user experience by ensuring necessary permissions are granted before adding a phone
updated return value from 32 to 36 in SimulationPanel . java , added a label to PlotDialog . java , modified method signature in Basic
refactor ` GeoPointInBBoxQuery ` , ` GeoPointInPolygonQuery ` , ` GeoEncodingUtils ` , and ` GeoEncoding
added a synchronized method ` isDockerAvailable ( ) ` to check if the Docker client is available to provide a way to check if the Docker
added a constant for VPX encoding in CodecTypes . java to enable support for VPX encoding in the application
added a coordinatorAddress parameter to DistBuildFactory and DistBuildRunCommand classes , and updated its usage in AbstractDistBuildExecutorArgs to allow
added path matching functionality in FsUtils and improved timer initialization in WrapTimer to enhance file path matching capabilities and ensure thread safety for timer operations
added a conditional check to ensure ` ent . getValue ( ) ` is greater than zero before adding it to ` labelValues ` to avoid adding
make sure ` ` possiblygenericallytrue ' ' be always present , even if the result be null .
added a test annotation to the TestPerfBenchMarkDriver class to enable testing of performance benchmarking functionality
added a method to update creation metadata ' s materialization time in ObjectStore and implemented a test for it in TestObjectStore to ensure that
added handling for UnsatisfiedLinkError in VoskSTTService methods to improve error handling and logging for missing native dependencies
remove the ` ` isoneAY ' ' property from the ` ` jmssampler ' ' element and update the ` ` browse message on
updated break weight calculation logic in GlyphView . java to improve clarity and accuracy of break weight evaluation
refactor checksum calculation in RCFile . java to use a buffer for improved efficiency to enhance performance by reducing the number of byte reads
added an @ AwaitsFix annotation for the AutoAddReplicasPlanActionTest class to indicate a known issue related to SOLR - 13
refactor step and processor data handling to use a LinkedList for unwound entries to improve readability and maintainability of the code
removed unnecessary parameters from the keysToDataFlavorArray method and created a new DataFlavorComparatorTest class to simplify the code and ensure
hbase - 20650 add - infoport to testthriftservercmdline to avoid port conflict
added a check for end of file in RegExpScanner to ensure proper handling of end - of - file scenarios
replaced Boolean . getBoolean with a set checks for enabledMetrics and enabledTimers to improve performance by avoiding unnecessary checks on system properties
fix a nullpointerexception in the chatroomjabberimpl when the nickname be null .
update error message for miss or inaccessible file ( fixes # 374 )
refactor refresh token creation into a separate method to improve code readability and maintainability
updated error message formatting in BuckConfig . java to improve clarity of error reporting for path transformations
[ hotfix ] [ yarn ] do n ' t clear job at high - availability service
added a synchronized method ` nativeGetHardwareBuffer ` that returns ` null ` in ` ShadowNativeImageReaderSurfaceImage . java ` to
updated the SSL URI for BTCChinaMarketDataService to ensure the exchange uses a valid SSL URI for fetching market data
pmd : fix file path issue on window
added two new files , OauthController . java and Oauth2PluginTest . java , for the OAuth authentication controller and its integration test to provide
refactor SemgrexPattern class for improved readability to enhance maintainability and clarity of the codebase
refactored ` flatMap ` and ` flatCollection ` methods in ` AbstractStreamEx ` and removed them from ` EntryStream ` to stream
improve error message for invalid parameter and add exception handling in ExceptionToProducerResponseConverters
added a comment to clarify the purpose of the condition in RobolectricClassLoader to ensure compatibility with Maven Surefire for Android
do n ' t set transcetable audio encoding if it ' s already set
updated the type check from SequenceNextValueFunction to DatabaseFunction in CreateTableGenerator . java and added a new test for default timestamp handling in
added checks for station 3Gml31 and station 3Gml32 documents in NormalizedMultiValuesTest . java to ensure correct validation of
added a volatile boolean field ` wasInvoked ` and updated related variable names in ` NetworkTestUtils ` and ` UaaHttpRequestUtilsTest `
added checks to ensure regex mapping is only applied when the processor is configured to improve data integrity by preventing modification of map entries
refactor ` CustomSeekProvider ` to replace ` splitIntoThirtyParts ` with ` splitIntoThirtySecondsParts ` and introduce
added new classes ` XLCDCommunicator ` , ` XLCDController ` , and ` FirmwareUtils ` for managing G
[ drools - 6682 ] use javax . xml . validation . validator instead of javax . xml . transform . source and javax .
updated retry logic to use a variable for retry times and added checks for non - empty messages to improve code readability and ensure retry conditions are
replaced multiple state awaiting methods with a single join call for test threads to simplify thread management and improve readability of the code
modified the ` equals ` and ` hashCode ` methods in ` DelegatingMethod ` and added a test class ` DelegatingMethodTest ` to
updated resource constants in EnergyCost . java from 20000 to 10000 to increase resource allocation for improved performance
updated the ` command ` method to throw ` ConfigurationException ` and modified the ` waitFor ` and ` command ` logic to improve error handling and ensure
deleted the ` SpringTransactionHooks . java ` file and replaced its usage with ` AbstractSpringTransactionHooks . java ` to streamline transaction
refactor methods in AbstractClassAssert for improved clarity to enhance maintainability and readability of the code
added a new file ` GetUninitializedStringValueTarg . java ` that includes a test class for verifying the uninitialized string value to
added support for querying provided dependencies in AndroidLibraryDescription and updated GraphEnhancementQueryEnvironment to handle additional patterns to enhance dependency resolution and improve
added a new feature flag ENABLE _ KEYBOARD _ TRANSITION _ SYNC to FeatureFlags . java to enable synchronization of keyboard animations
replaced the system anomaly message retrieval with a boolean flag for saved bugreport to simplify logic and improve performance by avoiding unnecessary logging
added a constant for " cinepack " format in FormatConfiguration . java and utilized it in LibMediaInfoParser . java to support
added camera bobbing functionality and adjusted the hand movement offset in the Player class to enhance user experience by allowing customizable hand movement behavior
changed the method used to retrieve blobs from ` data . describe ( ) ` to ` digest . toString ( ) ` to ensure accurate representation of
deleted the HSQLDBServerFilesFilter class and replaced its functionality in TestUtility . java to streamline the codebase by eliminating unused
added a condition to check if restoreFromSeed is null and restoreFromKey is null in WalletAppKit . java to ensure proper handling of
updated API version retrieval from APIUtils . getApiDataVideoVersion ( ) to APIUtils . getApiDataSeriesVersion ( ) and added a trace
added a method to check if a type exists before returning the method invocation to ensure that the method invocation is only processed if the type does not
replaced hardcoded array size with a constant value in AmbientCubemap . java to improve code maintainability and readability by
[ netbeans - 4892 ] display a warning if methods / objects mode be not configure properly
added checks for zero values in multiple classes to return maskedNumber to improve handling of zero values in the mask logic
fix unit test to use temporary folder
add itemstack . isitemstackdamageable ( ) method , close # 2266
fix mc - 167447 : use line _ width instead of alpha for renderstate .
simonstewart : set the default browser startup page to ` ` 0 ' ' in firefoxdriver test .
updated the condition to handle both CONNECT and GET requests in Http1xClientConnection . java to ensure proper handling of different HTTP methods for connection
updated task type from " compile " to " process - classes " in JoobyMojo . java to clarify the purpose
replaced ` shutdown ( ) ` method with ` closeIdleConnections ( ) ` in ` HTTPHC4Impl . java ` to improve connection
added a condition to check if the aggregate function suffix is not present before creating a new metric to ensure that aggregation functions are only added when necessary
added a method to set fullscreen parameters in TaskOverlayFactory and updated the corner radius retrieval in TaskView to improve modularity and maintainability
added a new Java file ` Solution . java ` that counts the frequency of integers to provide a solution for counting the frequency of integers
[ java ] initialize socketchannel to null to avoid potential npe .
updated the test cases in MutisignOperationerGodicTest . java to improve test coverage for improved functionality
added error handling for NoSuchElementException in StaxEventItemReader to improve robustness by handling cases where the end of the fragment is not found
replaced specific text imports with a wildcard import and modified return statements in ShadowTextView . java , and added null check in TestAttributeSet
updated JSON imports from ` com . nimbus . jose . shaded ` to ` net . minidev . json ` in
updated OS . java to handle " AIX " family and added support for " Linux - s390x - 64 " OS mapping in
cloudstack - 6803 : set private ip for vr access detail in the case of delete / removetVpn command
added a new method ` invokeWithoutBlockingWithResultSync ` to the ` Display ` class to facilitate asynchronous execution of a runnable
remove ignored test ( no longer need )
updated calculations in PortraitPagedViewHandler to use Math . round for width and height calculations to improve accuracy in calculating rectangle dimensions and
reformatted method calls in TestClusterDumper . java for consistency to improve code readability and maintainability
update the return statement in KeyValue . java to include additional class size adjustments and improve readability to enhance performance and maintainability of the code
camel - 14263 : camel - core - add type converter to camelcontext to allow to use custom type converter .
added support for dispatching conditional tasks in SparkCrossProductCheck to enhance task management for conditional tasks in the execution flow
added handling for ACTION _ MANAGED _ PROFILE _ ADDED and ACTION _ MANAGED _ PROFILE _ REMOVED actions in Launcher
updated conditional logic in ` LoginInfoEndpoint ` and added tests for account chooser functionality in ` LoginInfoEndpointTests ` to ensure proper handling
hbase - 25832 add more information to assignmentmanager ' s tostring ( ) method
renamed the ` message ` variable to ` msg ` and introduced a new ` result ` field in ` HuobiAccountInfo ` to
added support for " PERIOD " in MariaDBDatabase and created a test for it to ensure proper SQL generation for period columns in M
[ beam - 10705 ] improve the documentation of the portable pipeline option
updated VersionChangeLogs . java to include additional shortcuts for Android 7.1 to enhance clarity on launcher shortcuts for better user understanding of
updated the visibility of NUM _ MILLIS _ IN _ DAY from private to public in TestUtil . java to allow access to NUM _ MILLI
removed a debug print statement from ImageResourceLoader . java to clean up the code and reduce unnecessary console output
[ java ] check that conductor invoker be not null before invoke aeron client .
updated validation logic for implicit lambda parameters and adjusted type creation in method parameters to improve type safety and ensure correct parameter handling for implicit lambda parameters
refactor menu item visibility and enablement methods in FileMenuFilter and FileDetailFragment to improve code readability and maintainability by consolidating
updated BTCETransHistoryResult and BTCETransHistoryJSONTest to use BTC _ deposit type instead of withdrawal
changed List < List < HttpStatus . Series > > to Set < Set < HttpStatus . Series > > in RetryFilterFunctions . java to improve
added a @ Deprecated annotation to the PluginLoader class to indicate that the PluginLoader class is outdated and should no longer be used
updated condition in LastQueryExecutor . java and added a new test in IoTDBLastIT . java to ensure correct handling of unseqTime
updated the formatting of the request string in HttpResponse . java to ensure consistent line endings for better readability
added a static block to set the Apache HTTP wire property to ERROR to ensure proper logging behavior in the application
added safe area setting for the title bar in Sheet . java to ensure the title bar is properly displayed in a safe area
reversed the iteration order of the TimeSeriesChunkMetaData iteration from a for - each loop to a reverse for loop to improve performance by avoiding
added an ALTER TABLE statement to rename a column to a specific table in AlterTest . java to ensure the SQL can be correctly parsed
changed the access modifier of the copyState method from package - private to public to allow access to the copyState method from other configuration classes
fixed - rsedexecutorservice . executecallasync ( ) method should return a future to avoid java . lang . concurrentmodificationexception
move file . part suffix to constant and use it in the file listers .
[ hotfix ] [ doc ] update copyright year for exist file in orc module
remove redundant null check for valueArg in CompareFunctionsProcessor . java to streamline code and improve readability
fixed checkavailablediskspace to properly recalculate expect disk usage of compaction task
removed redundant ` toString ` methods from ` SegmentTermVector ` , ` TermFreqVector ` , and ` QueryTermVector ` classes to stream
added checks to prevent processing when the state handler is invalidated in AbsSwipeUpHandler and null check for mLastGestureState in Task
added methods to get and set lock timestamps in AppPreferences and updated PreferenceManager to use these methods to improve lock timestamp management and encapsulate preference
refactor audio track artist setting by introducing a new method ` getArtist ( ) ` to improve code readability and maintainability by
added null check for remoteMessage before accessing its data to prevent potential NullPointerException when remoteMessage is null
nifi - 1882 : fix npe in splittext when process flow file have no header
added support for Windows - specific key store configuration in HttpsConnectorFactory to ensure proper handling of Windows - specific key store types
increased the default check timeout value from 400 to 1 , 000 in RestTemplateSenderTest . java and WebClientSenderTests . java
added a condition to check if the result code is not FILE _ NOT _ FOUND before executing the else block to ensure proper handling of non
added animation properties and methods for visual value , duration , and interpolation in the Slider class to enhance animation control and improve customization options for
replaced instances of ` eol ` with ` lineSeparator ` in the test assertions to ensure consistency in line separator handling across tests
updated maxWidth and maxHeight values from 512 to 1024 in TexturePacker . java to increase texture packing size for improved performance
added a new test method ` negateTernaryNotUnwrapped ` to ` UnnecessaryParenthesesTest . java ` and modified the condition
camel - 19850 : fix npe in hazelcastqueueconsumer when poll timeout be set to 0 .
added TextFeedbackTest class and integrated it into the test suite to enhance testing capabilities for text feedback functionality
replace Math . round with Float . compare for score comparison in DefaultSolrHighlighter to improve performance and readability of score comparisons
updated Display density cases and refactored file output handling in AddAndScaleMultiImage . java and ResourceEditorApp . java to improve code
added a method ` arrayClassElementOffset ` to ` HotSpotReplacementsUtil ` and modified ` ArrayCopySnippets ` to read the
log4j2 - 1342 fix the issue that the metric be not register at all if the total time be zero
added support for remote SCM command - line options in the configuration and runtime environment to enable users to turn on / off the remote SCM
[ mieleappliance ] add miss off state to mielappliancehandler . onoff
replaced usage of ` StatsLogCompat ` with ` SysUiStatsLog ` for event logging to standardize the logging mechanism and improve code
[ hotfix ] fix checkstyle violation in localzookeeper
added unit tests for ProjectGenerationEvent handling in EventSerializationTest . java to ensure correct serialization output for project generation events
ggb - 1359 select all special point in selection tool , not only the first one
refactor JavaCompiler class to improve code structure to enhance maintainability and readability of the code
hbase - 25832 add check for the amount of time remain for random read in integrationtesttimeboundedrequestswithregionReplicas
updated multiple Java files including DumpHeap , TimSortStackSize2 , TestPollingInterval , BasicLauncherTest , BasicJMapTest , and
added additional gc sections and nocopyreloc flags to the ldflags list in NdkCxxPlatform . java to enhance memory
updated ` SpringCloudCircuitBreakerFilterFactory ` to expand fallback URIs and modified ` HttpBinCompatibleController ` to utilize ` ServerWebExchange
chore ( selenium - client ) : update copyright year to 2020
updated conditions in ReadOnlySharedStringsTable . java to check for NS _ SPREADSHEETML before comparing names to ensure proper handling
added a new method ` getAccountNet ` in ` HttpMethed ` class and a corresponding test in ` HttpTestAccount001 ` to
added a check for available text width before layout handling in SwingUtilities2 . java and modified the GTKLookAndFeel setting in Test
refactor FlatteningIterator to initialize the flatteningIterator correctly and introduce a new test class for its functionality to improve code clarity and
updated TweetLinkUtils to remove HTML tags from the title and body to ensure that the title and body are properly formatted without HTML tags
doc : generate sample code in the java microgenerator ( # 24 )
[ # 7348 ] instructorfeedbackeditquestionsuitest : reload and delete any exist question ( # 7348 )
updated return values and conditional checks in HSSFSheet . java and added assertions in BaseTestSheet . java to ensure correct row number handling
added permission checks for launching activities and refactored related classes to use PendingAddItemInfo to enhance security by preventing malicious int
[ java ] change session state to connect when a new cluster session have be establish .
refactored equals and hashCode methods in AbstractParquetMapInspector and updated equality checks for keyInspector and valueInspector to improve code clarity
added logic to flush and release the buffer when the connection is remotely closed to ensure proper resource management and prevent memory leaks when the connection
made the SplitReader interface extend AutoCloseable and removed the close ( ) method to enhance resource management by allowing the SplitReader to implement
removed the deepCopy method from GsonBuilder to streamline the code by eliminating an unnecessary copy method
make sulong . llvm . sulong . llvmscanner . getcached return a constant instead of null
refactor file opening and closing logic in RestClientRequestImpl . java to simplify asynchronous file handling and improve code readability
removed unnecessary whitespace in GrblController . java to improve code readability and maintain consistency
updated class loader management in MockFactory and added a new SearchingClassLoader class to improve class loading efficiency in mock creation
add a test to demonstrate that refresh flag be set to false
added support for LEFT _ SEMI _ JOIN in the condition check to ensure proper handling of LEFT _ SEMI joins in the constant propagation logic
removed unnecessary boolean variable ` completed ` for response completion checks in ` HttpReceiver . java ` and ` HttpSender . java ` to simplify code
rename arraylengthoffset to arrayoopdesclengthoffset for clarity
http : / / issues . apache . org / jira / browse / amq - 4237 - fix the test failure of broker
updated multiple Java files to reflect new naming conventions to improve code readability and maintainability across the project
added a check to ensure the appCtx is not running before stopping it to prevent potential null pointer exceptions when the context is not running
changed the return type of the drawItem method from void to GlyphLayout to allow the method to return a GlyphLayout object instead of void to
added MetricsPublisher to SpringmvcClient and modified JSON handling in CodeFirstSpringmvc to improve metrics retrieval and error handling for JSON
removed unnecessary generic parameter and improved code readability in AccountAgeWitnessService . java to enhance code clarity and maintainability by standardizing
refactor switch statements and improve readability in StructureHeader . java and StructureReader . java to enhance code readability and maintainability by standard
added ResourceUrlProviderExposingInterceptor to the CasWebflowContextConfiguration and related classes to enhance the handling of resource URLs in the web flow
add a new inliner to dex and add a transform for return statement .
feat ( enrichedruledto ) : add miss property to rule and enhance documentation
removed the NOFOLLOW _ LINKS option from the directory check in PathResource . java and updated test arguments in AliasCheckerSymlinkTest . java
[ hotfix ] [ table - common ] remove unused sqldialect from executioncontext
refactor ` rDotJavaPackages ` handling to use a ` Supplier < ImmutableSet < String > > ` instead of an ` ImmutableSet < String
pmd : add test for package - info annotation [ java ]
added configuration for minimum cross compaction unseq file level to enhance control over unseq file settings during compaction
[ hotfix ] [ runtime ] move activeresourcemanager into activeresource
renamed the test method from ` testCheckColumn _ WrongOrder ` to ` DisabledTestCheckColumn _ WrongOrder ` to clarify
updated the URI creation method in ZipResource to handle URISyntaxException and added a test case for parsing feature files with spaces to improve URI handling and ensure
updated formatting and added thumbnail generation logic in ExpandableUploadListAdapter . java to improve code readability and ensure correct thumbnail handling during uploads
refactor RobolectricTestRunner to merge parent class and method configurations into a single Config instance to improve the handling of config annotations for
fix npe in modelloader due to miss registry name
refactor methods in AbstractDataChangedListener and WebsocketCollector for improved clarity and functionality to enhance code readability and maintainability while
updated JSONPojoConvertor to handle enum types and modified test cases for color handling to improve type conversion logic and enhance test coverage for color
added deprecation warning for the ` -- view ` option in ` IjProjectCommandHelper . java ` to inform users that the ` -- view
changed the data type of ` originalPayload ` from ` String ` to ` byte [ ] ` and simplified character encoding handling in ` GWTRequest
updated GyroControl . java to implement orientation correction handling and adjusted mouse coordinates based on device orientation to enhance sensor event processing based on device
bump biomedictionary . biomedictionary . biee _ list _ size from 256 to the length of the biomegen
updated function calls from " println " to " print " in GetInterfaceTest . java and made interfaces public in Foo2 and Foo2 to
fix ( core ) : fix compilation error in filecompilertest
added a new interface ` ByteToLongCollector ` in the ` com . speedment . common . function . collector ` package to provide functionality for
added a preload option to MMapDirectoryFactory to enable or disable preloading of the map directory to enhance performance by allowing preloading of map
added custom metrics for various plot components in BukkitPlatform . java to track and display various components based on user settings
refactor QuickConnectREST class to improve code structure to enhance maintainability and readability of the codebase
added aspect ratio and default card image in CardPresenter . java to enhance visual representation of card images in the application
do n ' t count implicit authentication in the login method , if the login page do n ' t exist
vectorhashcodewrapper : fix arrayindexoutofboundsexception in vectorHashKeywrapper . clone ( )
added test cases for System . nanoTime ( ) in TimeChangeTest . java to ensure that the System . nanoTime ( ) is correctly recorded after
added trimming of whitespace and null check for lines in MultiPartFilter . java , and printed request parameter in MultipartFilterTest . java to
add livingexperiencedropevent to allow modded player to explore experience
updated error messages in OpenUVBridgeHandler and OpenUVReportHandler to use localized messages to improve user experience by providing clearer error messages and
[ zeppelin - 4352 ] remove unsupportedoperatorsvisitor and use sqlnode . validate in beamqueryplanner
added RdepsFunction functionality and improved target graph handling in GraphEnhancementQueryEnvironment . java to enhance dependency resolution capabilities in the query
refactor Character class to improve code readability to enhance maintainability and facilitate future feature additions
added a flag to scale entire rocket in the ScaleDialog to ensure that only relevant rocket components are selected in the selection
simplified assertions in UpdateableResultTest . java by removing unnecessary toString ( ) calls to improve code readability and maintainability
refactor time boundary handling in BaseBrokerRequestHandler to use deep copy for queries to improve readability and maintainability of the code
simplified the addition of socket references to the poller in AjpAprProcessor and Http11AprProcessor classes to improve code read
updated regex pattern and modified album title extraction logic in EightmusesRipper . java to improve accuracy of album titles and enhance URL
replaced direct calls to ` mDevice . wait ` with ` TestHelpers . wait ` in multiple test files to improve code readability and
added a condition to check if the profile is a phone profile and not in landscape mode to ensure proper layout behavior for phone devices in land
updated assertions in PartTreeJpaQueryIntegrationTests to use unwrap ( QueryImpl . class ) instead of getValue ( query , PROPERTY ) to
replaced the method for reading lines from a file path with a dedicated method named ` readMatchingLines ` to improve code readability and encaps
added dynamic check for the ` getResultStream ` method in ` JpaQueryExecution ` to ensure proper invocation of the ` getResultStream ` method
physicsprocess : fix nullpointerexception when entity be null
add test for entry processor with predicate to clear map when value attribute be indexed
add a jitsi conference room join header to the jitsi conference call . this will allow the jitsi conference
added color normalization and updated HTML message format in Utils and UtilsTest classes to ensure consistent color representation and improve test clarity
fix : disable menu item for empty string
updated the scratch path format in Aapt2Link . java and added RmStep to remove the link tree to ensure the link tree is
replaced ` Capture < > ` with ` Capture . newInstance ( ) ` in ` ExternalJavacTest . java ` and updated mock
make sure undo do n ' t reset the selection again
do n ' t catch markedyamlexception and emptystackexception when parse cql expression
added ` isCanceled ( ) ` method implementations across multiple classes and updated the ` ExecutorCallAdapterFactory ` to use the delegate ' s `
refactor the ` isAnnotationPresent ` method across multiple classes to use a default implementation to improve code maintainability and reduce duplication across multiple classes
added a default implementation of the removeAllWidgets method in UILayout . java to provide a placeholder implementation for future implementation
[ hotfix ] [ yarn ] fix flaky yarntestbase # testyarnsessionfifoitcase
fix off - by - one error in opensslcipher . getoutputsizeforfinal ( )
added checks for Fire TV Stick and direct profile usage in PlaybackController . java to ensure high - resolution content is transcode when
[ beam - 8470 ] add show ( ) method to datasetsourcemock and make sourcetranslatorbatch static
replaced specific import statements with a wildcard import and modified listener management logic in GpsLoggingService . java to enhance functionality by removing specific listeners
modified the ` putString ` method to accept a ` byte [ ] ` instead of a ` boolean [ ] ` for full widths and updated related
added support for handling BaseItemDragListener in FolderIcon . java to enhance drag - and - drop functionality for better user experience
added createEmptyArtifact method to RepositoryConnector and FileSystemConnector classes , and updated SignavioConnector and SignavioConnector to handle
removed unnecessary comments from configuration variables in RabbitMQPublisherImpl . java to improve code readability and maintainability
removed the check for " . m3u8 " in the video fragment validation logic to simplify the condition for determining if the video fragment is
camel - 15836 : camel - sftp should use compact path when create sftp
try to fix the unit test failure on the ci - server
rename ` groupSortStr ` to ` sortWithinGroupStr ` for clarity to improve code readability by using a more descriptive variable
added support for LARGE _ FERN species alongside DOUBLE _ TALLGRASS in BlockDoublePlant . java to
updated tree focus settings from focusable to request focusEnabled to improve user experience by preventing unintended focus behavior in the tree
do n ' t re - throw exception if the vm fail to start
updated DB2TestSystem to include acceptLicense method and modified DockerDatabaseWrapper to check if the test system is not DB2TestSystem to
added a method to set the UnitGroup in DoubleModel and updated its usage in GeneralOptimizationDialog to improve flexibility in unit management and
added a new static final CurrencyPair BTC _ ZMW to the CurrencyPair class to support currency pairs involving BTC and Z
testpbrlighting : set the number of sample for the fpp when run with - dtests . multiplier > 1
updated test cases in StepWithSimpleTaskJobParserTests to remove unnecessary fields from tasklet assertions to simplify test assertions by removing unnecessary fields
changed variable declarations to final in CentralAuthenticationServiceImplTests . java to ensure immutability of variables for better code safety
fix for integral ( # 3000 , need because of # 3808 change )
added multiple calls to ` addServiceOutput ( ) ` and ` hasTrigger ( ) ` in ` DDLSemanticAnalyzer . java `
[ jbrules - 3248 ] fix bigdecimal coercion when use biginteger .
added " org . eclipse . jdt . " to the WebAppContext . java file to hide JDT usage by Jetty to enhance
change the return value of the useAuthCache method from super . useAuthCache ( ) to false to simplify the authentication logic by removing unnecessary
update namespace assignment to capitalize segments [ 0 ] to ensure consistent capitalization of segments [ 0 ]
camel - 16400 : camel - direct should not try to send to non - existing direct endpoint if there be no consumer available .
added a null check for the ZooKeeper object before setting it to null to prevent potential NullPointerException when accessing the state of zookeeper
updated progress bar message formatting in Loader . java to improve clarity and consistency in the progress bar display
replaced direct calls to mVibrator . vibrate ( ) with a method runOnUiHelperThread ( Runnable runnable )
added a method to update the last remote stream ID to ensure the session reflects the latest stream ID changes
set text antialiasing to on , so that the font be antialiasing .
[ java ] do n ' t use term offset for send position in the driver publication .
refactor : remove static import of enums in ctannotationimpl . java ( # 4348 )
rename ExoPlayer . java file to improve clarity and consistency in naming conventions
replaced the native method ` getRGBPixelImpl ` with a direct call to ` getRGBPixels ` to improve performance by directly retrieving pixel
added a new method ` newPrintStream ` to handle different output encoding configurations to improve flexibility in output stream encoding based on system properties
updated vibration duration from 1 to 25 milliseconds to improve the responsiveness of the touchable movement method
fix import in flybushdatacleer . java and testenvironment . java
reformatted constructor calls in WebSocketClient for improved readability to enhance code clarity and maintainability
danielwagnerhall : open the i18n file before run the test
do n ' t report unresolvable method exception for link - at - build
[ hotfix ] [ test ] restore auth system state after test
added a custom LowercaseComparator for string comparison in CoNLLUFeatures . java to ensure consistent sorting of features regardless of null values
refactor Javadoc parsing logic to use a unified ` parse ` method and improve error handling to enhance code readability and maintainability by reducing
danielwagnerhall : add a new test for toggle an option in a multi select .
added validation to check the length of keys in HighestKvno . java to ensure that the number of keys is at least 9 to
added error handling for retrieving attributes in HDF5BatchReader to ensure robustness by logging warnings when accessing attributes due to HDFException
[ beam - 8470 ] return ptransform . expand ( ) instead of pdone in bigqueryio . expand ( )
( chore ) camel - core - swagger - java : add ` ` template ' ' and ` ` upload ' ' to the root element
added a new file TestMultiANewArray . java to implement dynamic class creation and testing with multi - dimensional arrays to facilitate
cloudstack - 7563 : remove global configuration ` ` secondary . storage . vm . option ' ' , it be only use in management
updated the calculation of the length and added a conditional check for the block ID in SyncBlockChainMsgHandler . java to improve clarity and
added theme setting to PreviewTabView using preferences to ensure the preview displays the correct theme based on user preferences
added null check and closing logic for the reader in VectorizedParquetRecordReader . java to ensure proper resource management and prevent potential NullPointerExceptions
added a new test method ` testHttpIdleTime ` to ` ConnectorTimeoutTest ` to verify HTTP idle timeout behavior to ensure proper handling of
refactored dictionary to use propertiesutils . getstringarray to reduce code duplication .
updated method names from ` readIdentifier ( ) ` to ` readTagName ( ) ` and added a new method ` readTagName ( ) `
updated generic type usage in JpaPagingItemReaderIntegrationTests and modified the error message in JobLaunchingGatewayParserTests to improve code
change log level from warn to debug in DistributedQueue . java to reduce log verbosity for child node detection
refactor color extraction logic to use a dedicated method for retrieving the hotseat palette to improve code readability and maintainability while ensuring compatibility
replaced ` ParameterTypeRegistry ` with ` TableEntryByTypeTransformer ` and ` TableCellByTypeTransformer ` in ` TypeRegistry . java `
added an assertion to check if newAvailableShared is less than or equal to initShared to ensure that the shared state is correctly initialized before use
chore ( regen ) : update license year for generated file ( # 130 )
added a boolean field ` projectGenerated ` to the ` ProjectGenerator ` class and updated its usage in ` WorkspaceAndProjectGenerator ` to enable
removed unnecessary ` contains ` method call in ` DriverUtils . java ` to improve code readability and maintainability
added contact form routes and created a new Contact class with associated methods in ApplicationController to enhance functionality for managing contact information within the application
guacamole - 1391 : use objectpermission instead of permission to provide more flexibility in permission management .
updated RELEASE _ VERSION from 20 to 21 in IconCache . java to reflect the latest release version of the application
[ jbrules - 3540 ] fix checkstyle violation in traitfactory
updated method names and references from " findWhereNameLikeAndActive " to " findWhereNameOrAliasLikeAndActive " across multiple classes
replaced manual closing of consumers with IOUtils . closeSafely to improve resource management and avoid potential resource leaks
refactor AbstractDataChangedListener , HttpLongPollingDataChangedListener , and RuleServiceImpl classes to improve code organization and maintainability
replaced menu . show ( ) with a click listener that shows the overflow button to improve user interaction by providing a click listener for the menu
updated error messages for null and non - null references in various classes to improve clarity and accuracy of error reporting for null references
ggb - 1885 update line height of help button in algebraview
move protobufferutilitiestest to core package , so it can be reuse by other test .
fix divider position and width of split pane be not correctly calculate
update aux file generator to handle crossreferences
[ geos - 8470 ] remove dependency on map from geoserverfeaturesource and geoserverfeaturelocking
renamed the variable ` extractTypes ` to ` dataTables ` in ` RecipeDescriptor . java ` to clarify the purpose of
fix the avatar cache in the contact list when a meta contact have be update .
updated import statements to use the correct package for Command to ensure compatibility with the latest SSHD server package structure
added a test for cleaning up the audit log table in the AuditLogTest class to ensure that the audit log table is properly cleaned up after
changed the return type of the ` inject ` method to ` Object ` and added a suppression warning for unchecked type casting to improve type safety
added regex patterns for parsing comment lines and updated related logic in ACLFileParser . java and ACLFileParserTest . java to improve comment line
updated the ` isReadable ` method in ` MapRDBFormatMatcher ` to include ` FileSystemPlugin ` and ` DrillTable ` parameters to
added support for handling ancestor dimension values in StarTreeImpl and StarTreeNodeImpl classes to improve data processing and logging for dimension - related
added user unlock check before dumping plugin manager state and refactored close open views methods to improve code clarity and maintainability by central
change variable name from widthStr to positionStr in Photo . java to improve clarity and consistency in variable naming
refactor PKIXValidator logic to improve clarity and structure to enhance readability and maintainability of certificate validation logic
[ hotfix ] [ hadoop ] [ test ] add archunit test for the test code
updated package names from ` integratedtest ` to ` integrated . test ` for AlibabaDubboIntegrationBootstrap , Alibab
cs - 15832 : do n ' t allow vpc _ network _ access _ rule to be restrict to vpc _ network _ access _
updated assertion in RuntimeTypeAdapterFactoryFunctionalTest to check shape type instead of removing the typeFieldName from the JSON element to ensure the correct
added getter / setter for property - store undo info
replace direct access to system property " sun . java2d . xrgradcache " with a privileged action to ensure that the retrieval of
replaced assertEquals with awaitility in StreamCloseTest to improve reliability and readability of stream size verification
modified the ` doAfterFlush ` method implementations in ` DocConsumer ` , ` DocFieldProcessor ` , ` TermVectorsConsumer ` , and
filter out non - deprecated property from jpa ' s configuration metadata ( # 4357 )
refactor ` BiInt2ObjectMap ` , ` Int2ObjectHashMap ` , ` BiInt2ObjectMap ` , and ` Int
updated HIVE _ MOVE _ FILES _ THREAD _ COUNT from 25 to 15 and corrected variable naming in Hive . java to improve
fix for http : / / issues . apache . org / activemq / browse / amq - 2692 - add trace log
added a null check for the context in SchemeAndroidIDE . java to ensure a default instance is returned when the context is null
svm : use application classloader for native - image build . fix classloading issue .
changed the return type of modifyGrantedAuthorities from void to List in SwitchUserAuthorityChanger and modified authority handling in SwitchUserProcessingFilter
refactor ` JaxrsIntegrationTest ` to ` JaxrsIntegrationTestBase ` and introduce new test classes ` RawJaxrsIntegration
add a method to set the query timeout in the poolutilities . setquerytimeout ( statement , int ) , and use it in the
added data providers for general and supplementary character tests in XslSubstringTest . java to improve test coverage and facilitate easier
replace eventWriter . close ( ) with delegateEventWriter . close ( ) in StaxEventItemWriter and implement the close method in No
added support for ` NEXT VALUE FOR ` function in ` MariaDBDatabase ` and improved sequence handling in ` CreateSequenceGenerator ` to
standardized spacing in error messages across multiple buffer classes to improve code readability and maintain consistency
replaced BrokerResponse import with TableDataManagerProvider import and set server metrics in multiple test files to streamline server metrics handling and improve test
updated the property check to include " jsse . enableMFLNExtension " alongside " jsse . enableMFLExtension "
changed the type of the iterator from ObjectIterator < T > to ObjectHashSetIterator and modified its instantiation and reset methods accordingly to simplify the iterator
updated character limit from 22 to 23 in Compose . java and TweetFragment . java to improve the accuracy of character counting for shortened
[ cassandras ] add ttl for cassandra data point ( # 1193 )
modified the checkForAndKillXcodeIfRunning method to accept a boolean parameter for prompt control to enhance flexibility in checking if the Xcode
add terraingrid . getterrainatcell ( vector3f cellcoord ) , a suggest by valerybokov
added default value handling in ` Pretty . java ` and created a new file ` T6665791 . java ` with Java compiler functionality
added error handling for missing quest keys in ResourceLoader . java to improve robustness by logging an error message when the quest keys file
updated the return statement to check if push is not enabled before verifying transport support to ensure that the protocol is not enabled for non - push
refactor PointValue class to improve code readability to enhance maintainability and facilitate future updates
removed the sign method call for blockCapsule in BlockUtil . java to streamline the signing process by eliminating unnecessary signing
modified return statements in FileSystemView . java , Win32ShellFolder2 . java , and Win32ShellFolderManager2 . java to handle
update methods and variables related to row height and copy functionality in ColumnText and PdfPRow classes to improve code clarity and ensure correct handling
refactor ListFragment to manage undo notes using a SparseArray to improve the management of unsaved notes in the adapter
update feedback question id in responsebackupdata ( # 7748 )
added a null check for data and threw an exception for non - null values to ensure robust error handling for non - null data retrieval
no effective change - remove unused code
refactor widget padding retrieval to use ` AppWidgetHostView . getDefaultPaddingForWidget ` instead of a custom padding class to simplify widget padding
refactor static MethodHandle initialization to use a static block for consStringFilter to improve code readability and maintainability by reducing repetitive
refactor ClassGraph and ScanResult classes to improve code organization to enhance maintainability and readability of the codebase
rename ` latch ` to ` goAwayLatch ` and adjust the await duration in ` IdleTimeoutTest . java ` to improve clarity
replaced calls to ` getMessage ( ) ` with ` hasMessageThat ( ) ` for failure messages in ` IterableSubjectTest . java `
replaced ThreadLocal ` currentBook ` with a direct assignment of ` Workbook . currentBook ` to simplify the management of the current book
added a method to check if a class supports the provided object and updated the vote method to throw an exception if it does not support the provided
removed unused imports from DataLoader . java to clean up the code and improve readability
added a new parameter ` rowsAffected ` to the ` postUpdateLog ` method and updated related classes to handle the logging of the number of
ggb - 1353 fix margin for scaler and suggestion ( on web )
set default values for foregroundFPS and backgroundFPS to 60 to ensure consistent frame rate settings across application configurations
added ObjectReleaseTracker assertions in HdfsTransactionLog and TransactionLog classes to ensure proper resource management and tracking of transactions
replaced DefaultWebSocketFrame with ChannelFutureListener to handle WebSocket frame closure to improve code clarity and maintainability by using a more modern
updated ` StateMachineErrorTests ` and ` DocsConfigurationSampleTests ` to support multiple event listeners to enhance test coverage for state machine error
replaced the finish ( ) method with setListBackground ( ) and added a method to set the background color of the list view to improve
updated import statement for StringUtils from Apache Commons Lang to OpenHAB ' s core StringUtils and added null check for line to ensure compatibility with
[ hotfix ] [ table - common ] add ` ` accumulate ( ) ' ' method to javauserdefinedaggfunctions
[ hotfix ] [ doc ] fix checkstyle violation in replicationsink
replace VALID _ CACHE _ SET with REGEXP _ CACHE to store compiled regular expressions to improve performance by reducing redundant compilation operations
added a static method ` reset ( ) ` to the ` GameThread ` class to provide a way to reset the ` gameThread ` state
added a login method to DigestAuthenticator that checks if the realm matches the login service name to ensure that only valid user accounts are authenticated with the
refactor parameter handling in SavedRequestAwareWrapper to improve clarity and efficiency to enhance efficiency in merging parameter values from savedRequest parameters
updated InfoStatus messages to use the variable ' lc ' instead of ' hiddenSingleton ' and added a toString ( ) method to improve clarity
[ java ] use the wakeup ( ) method to wake up the wait point in the haclient and commitlog
added a check to exclude Android O and modified image view condition in PhotoViewerActivity to ensure image view is only displayed on non - Android O
updated schema info level from minimum to basic in SchemaCrawlerTest to ensure compatibility with the latest schema information requirements
replaced direct XML output stream with buffered output stream in SaveTask . java to improve performance by reducing the number of write operations
updated byte handling in TestPayloads . java to use UTF - 8 encoding and improved random byte generation to enhance reliability and accuracy of
fix mc - 103516 not be able to destroy entity . close # 1914
removed Tomcat container adapter entries from the ProbeConfig list to streamline the configuration by eliminating obsolete adapters
[ drools - 6283 ] fix protobufinputmarshaller to use array . deepequals ( ) instead of array . hashcode ( )
removed unnecessary whitespace in NowSearchTerm and SearchTermBuilder classes to improve code readability and maintain consistency in formatting
pdfbox - 4892 : remove unnecessary public modifier , a suggest by valerybokov
added support for custom HTTP methods and headers in RemoteEndpointServiceAccessStrategy to enhance flexibility in HTTP requests by allowing customizable headers
added a new method ` newResponseBuilder ` to the ` SearchHandler ` class to facilitate the creation of ` ResponseBuilder `
added a notification for command start in AsyncBackgroundTaskManagerTest to ensure the task manager starts correctly during tests
refactor the ` computePreviewDrawingParams ` method to be public and add a call to ` recomputePreviewDrawingParams ` in ` PreviewItem
refactor tokenizer and token filter handling to use CharFilterFactory instead of SimpleOrderedMap to improve code clarity and maintainability by consolidating
replaced null checks with ParamChecks . nullNotPermitted for plot , generator , and hotspot to improve code readability and maintainability by
added verbosity handling to the ExecutionContext to control output behavior based on the verbosity setting
added a check to convert the schema to uppercase if the database type is Oracle to ensure compatibility with Oracle databases that require uppercase schema names
log4j2 - 1342 fix test failure in asynloggerallthreadcontextimplementatortest
added a new file TestShrinkToOneRegion . java with a main method to facilitate testing of the shrink - to - one region
replaced string splitting with Splitter for customPackages to improve code readability and maintainability
replaced ` utf8ToString ( ) ` method calls with direct usage of ` context ` in ` AnalyzingInfixSuggester
http : / / issues . apache . org / jira / browse / amq - 4338 - fix pushsafermessagebuilder
[ zeppelin - 4352 ] remove unused command ' show label histogram ' from modelexplorer
pdfbox - 2576 : remove unneeded null check , a suggest by valerybokov
refactor FORMATTER assignments in multiple test classes to use ' static final ' instead of ' final static ' to improve clarity and consistency in
updated UDFRound . java to replace Apache Commons Logging with Java ' s built - in BigDecimal and RoundingMode for improved precision handling to
refactor injectionEnabled and useIncludedLibrary initialization to use ConfigParser ' s valueAsOrElse method to simplify code and improve readability by le
changed class declarations from package - private to public for Test1 and Test2 classes to allow access to these classes from other packages
updated player event handling to use " deny . no _ enter " instead of " no _ permission _ event . no _ permission _ event .
fix bug in conditionandor and conditioninconstantset , and add test
replaced all instances of ` doTestNormsVersusStoredFields ` with ` doTestNormsVersusDocValues `
added random box and circle creation and reset frictions for contacts in Box2DCharacterControllerTest . java to enhance test coverage and
added tests for exceeding maximum size limits in flight recorder options and adjusted memory parameters to ensure that flight recorder options do not exceed memory limits and
removed redundant assertions related to " must be a power of 2 " in ObjectAlignment . java and Options . java to streamline error handling for
added a method to retrieve the target package from the APK in multiple classes to enable dynamic package extraction from the manifest for instrumentation tests
refactor DocHelper class to improve code structure to enhance maintainability and readability of the code
make acceptablethrowawayitems a list to avoid concurrentmodificationexception
replaced direct calls to ` invokeExact ` with explicit casting of ` mh1 ` and ` mh2 ` to ensure type safety by explicitly
removed unnecessary whitespace in MessageHandler . java to improve code readability and maintainability
refactor Inflection class to improve code readability to enhance maintainability and facilitate future updates
added methods to retrieve and set the locale in EvaluationContext to enhance localization support for the application
removed unused import of Plugin from SummaryPrinter . java to clean up the code and reduce unnecessary dependencies
added a break statement in the DrawerActivity class to prevent fall - through behavior in a switch - case structure
updated import statements in MongoQueryCreator . java to use wildcard imports and modified debug logging to use getQueryObject ( ) method to improve code cl
add system property xwork . loggerfactory to allow customization of loggerfactory
updated test method names in AdminAddPeerWithP2PDisabledAcceptanceTest . java for clarity to improve test readability and reflect
updated bean annotations and method names to include " livenessStateHealthIndicator " and " readinessStateHealthIndicator " to improve clarity and
localpstoreprovider : do n ' t cache pstores when enablewrite = false
changed the access modifier of the ` deleteFiles ` method from public to private to encapsulate the file deletion logic within a try - catch block
replaced the ` Provider ` class with ` ServiceProvider ` and updated related methods in ` ServiceLoaderSpliterator ` and ` TypeUtil `
simplify code and improve error handling in javainteropreflect
added methods to check toolchain creation status in ` AbstractCell ` , ` ToolchainProvider ` , and ` DefaultToolchainProvider ` classes
fix a potential deadlock when remove a context from the engine .
replaced the use of ` indexOf ` with ` contains ` for string checks in ` AbstractCheckDescriptor . java ` to improve readability and
updated PrebuiltCxxLibraryDescription to use exportedLinkerFlags and exportedPlatformLinkerFlags instead of linkerFlags to improve clarity and
refactor updateRecentsRotation method and update orientation handling in AbsSwipeUpHandler and RecentsView classes to improve code clarity
added generic type parameters to multiple listener checks in multiple classes to improve type safety and reduce unchecked warnings in the code
fix possible npe in abstractblockchain . addnewblock ( )
defaultmessagestore : use getstorepathphysic ( ) instead of getstorepathcommitlog ( ) .
[ hotfix ] [ metric ] remove try - with - resources in micrometermetricmanager
[ issue # 5370 ] add get message count in compaction log ( # 5371 )
added @ Deprecated annotations to multiple classes to indicate that these classes are outdated and should no longer be used
added methods to check for the presence of the system UI object and execute keyboard commands for keyguard status view to enhance functionality by allowing keyboard input
changed ` logger ` and ` principals ` variables to be ` final ` in ` SessionRegistryImpl . java ` to ensure immutability of
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 56362 - inmemory
added ` toString ( ) ` method to ` BonsaiValue ` and improved logging in ` BonsaiWorldStateArchive ` ,
updated method signatures from ` String ` to ` CharSequence ` in ` ITextRepository ` , ` LimitedSizeCacheTextRepository ` , and
danielwagnerhall : unignoring a test that pass in marionette
added a try - finally block to handle connection creation in SocketConnector . java to ensure that the destination connection is returned even if an IOException occurs
rename ` WindowsCommandLineEscape ` to ` WindowsCreateProcessEscape ` and update related references across multiple files to clarify the purpose of the
added synchronization to the heartbeatExecutorService initialization to ensure thread safety during concurrent access to the heartbeatExecutorService
replaced ` transformBuildResultIfNotPresent ` with ` transformBuildResultAsyncIfNotPresent ` and introduced ` wrapWithTracingAndCancellation `
added a new method ` updateFirstLineShowing ( ) ` to the ` TextArea ` class to fix drag - selecting text out of
added configuration paths for mapred and staging directories in TestInformationSchemaWithPrivilege . java to ensure consistent directory structure for testing purposes
refactor graphics configuration retrieval logic to handle null parent cases to improve robustness and prevent potential NullPointerExceptions
tika - 2596 -- fix oom test case in legacy mode .
camel - 15836 : camel - core - optimize rout engine to reduce stack frame in use during rout
add - model option to printtaglist to allow specify a model file
updated the way the table name is appended to the buffer in InsertDeParser . java and added a new test case in InsertTest . java
http : / / issues . apache . org / jira / browse / amq - 4237 - fix testcase which fail
[ java ] simplify startfromtruncatedrecordinglogtest by wait for cluster to be ready .
updated the calculation of ` arc ` and ` outer ` in ` LineBorder . java ` to use ` float ` instead of ` int `
added a check for empty galleryImages in PostGalleryTypeImageRecyclerViewAdapter to prevent processing when galleryImages are null or empty
updated deployment ID handling in StandardChangeLogHistoryService and removed NotNullConstraint from CreateDatabaseChangeLogTableGenerator to simplify the deployment ID creation process
pdfbox - 2576 : update usage link to point to the new interactive form package
removed the ' moreColumnOk ' parameter from multiple method signatures in AlterTableAddConstraint . java to simplify method signatures and improve readability
added provisional engines management in QuickfixjComponent and updated related test cases to improve engine management and ensure proper initialization of provisional engines
added displayZoomControls field and modified setMixedContentMode method to improve zoom control functionality in the RoboWebSettings class
add a corporea block , brick and slab , and fix the corporea spark not be able to be pick up .
updated connection handling logic in ConnectionFactory . java to improve performance and reliability of database connections
added a method ` EnableDisableMenuItems ( ) ` to set the icon of ` mnuAnnotate ` based on logging options to enhance user
updated the message resource from ` file _ list _ empty _ headline _ server _ search ` to ` file _ list _ empty _ favorite
no effective change - use @ setting instead of @ serviceregistry . setting
updated MotorMountConfigurationPanel to use a subpanel parameter and modified table settings in MotorMountTableModel to improve flexibility
replaced ` System . lineSeparator ( ) ` with ` System . getProperty ( " line . separator " ) ` in ` StringJoiner .
added getter and setter methods for creator , subject , and subject in POIXMLProperties . java and implemented a test for document properties in Test
removed unnecessary whitespace in the doStop ( ) method call to improve code readability and maintain consistency
[ java ] check the length of the cnc file before try to read it .
renamed ` NonMarkedFoo ` and ` MarkedFoo ` classes to ` FooCommand ` and introduced a new ` FooCommand
added support for handling JMod classes in ClassFileSourceImpl . java to improve modularization and maintainability of the codebase
updated TreeBackedElement and TreeBackedPackageElement to remove the dependency on PostEnterCanonicalizer and added null checks to improve code safety
updated tokenRequest initialization in Saml2TokenGranterTest and UserTokenGranterTest to use PublicTokenRequest and set request
updated variable from ` arrayLength ` to ` valueRangeObject ` in ` AbstractFromPropertyValueRangeDescriptor . java ` to ensure correct reference to
added synchronization method to ZooKeeperWatcher and invoked it in ZKAssign to ensure data consistency during ZooKeeper operations
added checks for EGL context availability in ` GlUtil . java ` to ensure that the current context is valid before proceeding with operations
[ drools - 6540 ] do n ' t remove activation when deactiving a ruleflowgroup
added a return statement to the HystrixDashboardConfiguration class to ensure proper termination of the method execution
removed exception handling for PipeNotExistException in DropPipeProcedure . java and added assertions in IoTDBPipeIT . java to improve error handling and
add cleanup to clientqueuestisruptiontest to cleanup resource after each test
refactor : use defaultjavaprettyprinter instead of signatureprinter in ctreferenceimpl . tostring ( ) ( # 2321 )
changed the visibility of the validateInstance method from public to protected to allow subclasses to access and override the validateInstance method
updated imports in GeoPointField , GeoPointInBBoxQuery , GeoPointInPolygonQuery , and GeoPointPrefixTermsEnum classes to enhance
added a new ` FakeBuildable ` class and updated tests in ` OnDiskBuildInfoTest ` to use it to improve test reliability
use itemstack . isempty ( ) instead of itemstack . getitem ( ) . isnull ( ) in guiingamefor
updated variable and method names from " path " to " timeseries " in TSParser . java and SQLParserTest . java to improve clarity
added a check to return 0 if the scale value is less than a threshold to ensure that the value does not exceed a valid range to avoid
refactor GcsPinotFS to use a unified storage method for bucket creation and retrieval to improve code readability and maintainability by using
removed redundant block closing of the transport vertx in a finally block to ensure proper resource management and avoid potential memory leaks
ddl - db - trigger - based - history - ddl - add support for ` ` create with history view ' ' and ` ` recreate
updated the parameter in checkEngine from 2 to 3 in CarrotClusteringEngineTest . java to ensure the test verifies the correct clustering engine
added JUnit @ Ignore annotation to SynDataReplyDataLoadTest . java to mark the test as ignored to temporarily disable the test due to
added a new class ` ParserStateObjectInputStream ` and updated ` ParserCacheCommand ` to use it for deserializing ` RemoteDaemonicParser
updated object quoting strategy assignment logic in ChangeSet and DatabaseChangeLog classes to ensure correct handling of object quoting strategy based on the change log configuration
replaced ` MetainfoParser . parse ` with ` MetainfoParser . fromXmlStream ` in ` SliderAppsViewControllerImpl .
deleted the CsrfControllerAdvice . java file to remove unused or redundant CSRF token handling functionality
added a method to quote the path list before appending it to the endorsed argument and updated endorsed argument formatting to improve path handling
added scrim animation functionality to the Launcher and LauncherAnimUtils classes to enhance user experience by providing smoother transitions during screen off
[ iotdb - 4892 ] fix the wrong infer type of long string ( # 4892 )
regenerate client with updated copyright year ( # 4382 )
added path type validation and validation for long and UNC paths in WindowsPathParser . java and PathOps . java to ensure correct handling of
replaced InetSocketAddress with direct instantiation of MulticastSocket in Promiscuous . java to simplify the socket creation process by removing unnecessary parameters
removed duplicate closing of writer and query1 in TestWildcard . java to ensure proper resource management and avoid potential memory leaks
clone the nBits array instead of returning it directly to ensure that the original nBits are not modified during the return operation
changed the access modifier of ` deriveCollectorName ` method from private to protected in ` ProfilerCollector . java ` and added custom test cases in
refactor ` MappingMongoConverter ` to use a dedicated method for type hint checks to improve code clarity and maintainability by encapsulating type
added performance measurement for proxy factory creation to improve performance tracking during proxy creation
added multiple @ SuppressWarnings ( " unchecked " ) annotations to GroovyEngine . java to suppress unchecked warnings related to unchecked operations
updated exception handling in TCPConnection to include the original exception as a cause to improve error reporting by providing more context for connection exceptions
refactor ` reinflateWidgetsIfNecessary ( ) ` method to ` getWorkspace ( ) . reinflateWidgetsIfNecessary ( ) `
added a new file ` DeleteInsideFileDialogTest . java ` to test the deletion of files inside a dialog to ensure that the file dialog
lwjgl2 : do n ' t call display . update ( ) if the renderable be set to false
added test case for instructorstudentlistpage that show a profile picture .
added support for filtering tests based on the " onlyrun " and " method " system properties to enhance the flexibility of test ignorance
removed the pointer parameter from the fling method signature to simplify the method signature for better readability and maintainability
added a null check for pageable in QueryDslJpaRepository to ensure that the repository behaves correctly when pageable is null
[ hotfix ] [ core ] add ` ` computememorysize ' ' method to memorymanager
try to fix the unit test failure on the ci - server
refactor SnowballAnalyzer to improve code structure to enhance maintainability and readability of the code
updated the handling of previousIndex and InternalBatch in StreamingAggTemplate . java to improve clarity and efficiency in batch processing logic
throw graalerror instead of assertion when a plugin need to null check the receiver .
added a default method ` stream ` to ` StreamSupplierComponent ` that uses ` computeIntensityDefault ( ) ` to enhance parallel processing capabilities for
updated logging messages to reflect the transition from " watched " to " fully played " and improved error handling for file movement to enhance cl
updated InjectorProxy and StandardInjectorProxy to use newInstance method instead of setAccessable and added a newInstance method to enhance instantiation flexibility and
[ hotfix ] [ stream ] remove unnecessary call to out . close ( ) in flinkstreamingcreatefunction
added test case for show create table , alter , and create table
replace return null with return ImmutableList . of ( ) in AppleTest . java to ensure that the method returns an empty list instead of null
updated the test message in NamedSetTest . java to include QualityDistribution to clarify the purpose of the test for QualityDistribution
added a condition to check for websocketReconnect in DeconzBridgeHandler . java and refactored connection state management in WebSocketConnection . java
replaced setting attributes with removeAttribute for ACEGI _ SECURITY _ AUTHENTICATION _ KEY and ACEGI _ SECURITY _ TARGET _ URL
hbase - 25836 addendum retry table creation in testregionreplicareplicationendpoint . testreplicareplicationendpoint .
added initialization and configuration for PMS in FormatRecognitionTest . java to ensure proper setup and teardown of the PMS instance
cloudstack - 7551 : add event for allocating / failed template in vmware ( # 2807 )
updated test imports and annotations in PrincipalAttributeRegisteredServiceUsernameProviderTests . java to utilize JUnit4 and SpringJUnit4ClassRunner
added @ Override annotations to multiple classes to ensure proper method overriding and improve code clarity
updated table and method names from " metricVal " to " metricVal1 " in AppendOnlySchemaIT . java to improve clarity and
added a check to ensure the number of deleted documents matches the document count in SegmentReader . java to ensure that the correct document counts are maint
add a few method to get the logger name and a method to log a stack trace , for easy debugging .
bugfix : increase staves width to 0.9 , not 1.0
changed the default value of ` handleFileUploads ` from ` true ` to ` false ` in ` VertxPlatformHttpServerConfiguration ` and
added a test for default CSRF protection matcher allowed methods in the CsrfFilter to ensure that the filter correctly handles requests with case - sensitive
remove the static inner class for the field that be not need .
renamed the ` add ` method to ` addFrequency ` and updated related calls in spell - checking components to improve clarity and consistency in
[ beam - 13434 ] fix watermark in fileio . write ( ) ( # 13434 )
http : / / issues . apache . org / jira / browse / amq - 4892 - fix sqmctestatement
added import statement for ResultSetMetaData in QueryCompilerTest . java to facilitate the use of ResultSetMetaData in the test cases
added ` -- root ` option to ` library ` command in ` JsLibrary . java ` to ensure the library uses the correct root directory for
update slider value from 180 degrees to Math . PI in RailButtonConfig . java to ensure proper representation of angle in the user interface
fix saveio . save to be run in a separate thread , not a submit ( )
added support for expression language in KerberosProperties to enhance flexibility in configuration settings
remove setremoteplayershelditemmountpointscale command since it be no longer need
updated setupViews method to include ScrimView parameter and adjusted related calculations to enhance UI responsiveness and visual feedback during UI transitions
[ hotfix ] [ checkpointing ] enable periodic materialization by default
add ` ` value ' ' attribute to protocol parameter to allow customization of value for protocol parameter .
add a test to verify that a chunked response have the correct header .
camel - 16400 : camel - jbang - allow to check if the router be up to date or down
added " Content - Type " header to SwitchToPostInterceptor and modified request body in SearchRequestUnitTest to ensure proper content type is set
refactor EmbeddedClientConnector to improve code structure to enhance maintainability and readability of the code
added logging for ignored setFetchSize ( ) method in PhoenixResultSet to improve debugging by providing a warning message for unsupported features
added initialization of AndroidNet in AndroidDaydream . java to ensure proper handling of null network connections
updated formatting in LLRealtimeSegmentDataManager . java for consistency to improve code readability and maintainability
removed the ` false ` parameter from the ` getDepositAddresses ` method calls in ` KrakenAccountService . java ` to simplify
hbase - 2598 remove hbase - prefixtree from hbase - mapreduce - util ( # 2598 )
added a boolean flag ` inflationFailed ` to handle back navigation in ` DesignerActivity ` and made ` root ` final in ` XML
refactor PushbackInputStream class implementation to improve code readability and maintainability
add schedulephase . containslowerable ( ) to check if a graph contain a lowerable node in the schedule
updated the message format in ErrorMessageAdapter . java to use sync _ folder _ failed _ content instead of download _ folder _ failed _ content to
fix parsing of new line character in makefiles
replaced direct usage of ` reader . getDeletedDocs ( ) ` with ` MultiFields . getDeletedDocs ( reader ) ` to improve
refactor setTransformRefresh method to use refreshFlags and setBoundRefresh to improve refresh logic and ensure proper refresh behavior
make uninterruptible check in method safepoint insertion more generic .
added framebuffer size callback functionality in LwjglWindow . java to handle window size changes to ensure proper handling of framebuffer size updates
updated translation calculations and animations for task parallaxs in LauncherAppTransitionManagerImpl . java to improve the responsiveness of the
refactor ` LiteralNode ` to replace ` NodeLiteralNode ` with ` NullLiteralNode ` and update associated methods to improve clarity and
added a ` setLength ` method to ` FSDirectory ` and ` IndexOutput ` classes , and implemented it in ` CompoundFileWriter ` to
updated AndroidNdkScriptGenerator and AntScriptGenerator to improve manifest handling and modified test classes in LwjglDebugStarter to enhance
camel - 14850 - camel - aws2 - s3 : use sourcebucket and sourcekey instead of copysource and copysource to
added role handling for wildcard role in RuleBasedAuthorizationPlugin and updated test cases in TestRuleBasedAuthorizationPlugin to improve authorization logic and enhance test
updated ZookeeperClientServerRegisterRepository to use EventType and improved URI registration handling to enhance clarity and correctness in handling register data and
renamed methods and variables in ReturnsDeepStubs . java for clarity and consistency to improve code readability and maintainability by using more
modify contract getCallValue ( ) to return an empty Byte value if the size is zero to ensure that the contract ' s call value is
improve error message when date can not be parse
updated the ` mapPBEAlgorithmToOID ` method to throw ` NoSuchAlgorithmException ` and modified the algorithm string in ` PBETest ` to
tiffreader : do n ' t throw eofexception if the offset be out of bound .
added validation for job parameters in CommandLineJobRunner and a corresponding test case to ensure that invalid job parameters are handled correctly to prevent runtime errors
removed line breaks from message content assertions in SmtpTests and MailTests to simplify test cases by removing unnecessary line breaks
refactor case statements in ExtendedConnectionDataSourceProxy to use lambda expressions to improve readability and maintainability of the code
refactor LongSequenceGenerator to use AtomicLongFieldUpdater for sequence ID management to improve thread safety and reduce synchronization overhead
added a new file ` Test . java ` containing a class with a static method ` sum ` and a main method ` main ` to provide
updated minSdk and maxSdk configurations in ShadowWifiManagerTest and changed private fields to protected in WifiUsabilityStatsEntryBuilder to
added a new Java class to implement a solution for sorting queries based on user input to provide functionality for determining if queries are valid based on specified
avoid redundant map . containskey call when add new cf
refactor taskbar recreation logic to improve clarity and maintainability to enhance taskbar behavior based on screen size and orientation changes
refactor SyncFutureCache class implementation to improve performance and maintainability of the code
updated DUBBO _ PROTOCOL _ VERSION and LOWEST _ VERSION _ FOR _ RESPONSE _ ATTATCHMENT from " 2.0 . 1
[ java ] uselessstringvalueof : fix false positive with literal
added a new test method ` testEllipseNoseconeDrag ` to ` SymmetricComponentCalcTest . java ` to verify the functionality
add a config parameter to hollowproducer for set the max type shard size
added new test cases for versions " 5.5 . 2 - cfs " and " 5.5 . 2 - nocfs " to
[ hotfix ] [ doc ] fix typo in compilationtask
updated assertions in TestSemanticAnalysis . java to check if location is not shown in test mode and refactored parameter handling in DDLTask
added a command to clear the database change log table in the AbstractJdbcDatabase class to ensure that changes are removed from the database when necessary
added version handling to RestClient and CallPath classes to support versioning and improve path comparison logic
updated exception messages and added a closed state check in the PhoenixDriver class to improve error handling and ensure proper resource management during driver
simonstewart : fix some typo ( mesurement )
added a cleanup method in ` ConflictsResolveActivityIT ` and modified ` FolderPickerActivityIT ` to extend ` AbstractIT ` , and
[ gr - 20663 ] fix deoptimization phase only if devmode be set .
added a check to return an empty string if the length is less than two and implemented a test for removing leading and ending quotes to ensure that
refactor JpaQueryCreator to use a local variable for type in JpaQueryCreator and add handling for NOT _ CONTAINING case
do n ' t try to push branch id if the auth duration be too long .
added a dispatch call to copy the message in P25MessageFramer . java to enhance message handling by copying the message before dispatching
added a null check for the handler before calling checkClosed ( ) in WebSocketImpl . java and implemented a test for clearing client handlers on end
[ ds - 3952 ] update discoveryit to use indexablepooltask and indexablerequestedtask
updated widget padding retrieval to use ` Launcher . Padding ` instead of hardcoded padding values to improve flexibility and maintainability of widget
added hide methods to TaskbarUIController , TaskbarAllAppsController , and BaseActivityInterface to enhance the control over the visibility of the
removed synchronized modifier from the launch method and replaced a sleep mechanism with a join call to improve thread safety and simplify the launch process
updated calculations for Point in JavaSEPort . java to account for the canvas position to ensure accurate positioning by accounting for the canvas '
replaced notificationManager . notify with startForeground and modified upload handling logic to improve notification management and ensure foreground behavior when upload progress is zero
fixed bug 1371444 - excessivepubliccount no longer report a false positive for static final .
testthrifthbaseservicetest fail on slow machine due to hbase . client . retries . number set to 3
change the log level of half offset commit / rollback message from info to debug
added error handling for FileNotFoundException in ResourceUtils . java and changed logging level from debug to trace in AbstractCipherExecutor . java to improve logging detail
added BittrexTickersResponse class and updated BittrexMarketDataServiceRaw and BittrexMarketDataServiceRaw to
fix classcastexception in entityentry . getenumconstants ( )
refactor to use object instead of class for register / unregister session
update character array to include Unicode escape sequences to ensure proper handling of special characters in the input string
added methods to set and get a stylesheet in ResourceService and updated related logic in ResourceHandler and DefaultServlet to improve stylesheet handling and ensure proper
added a call to clearIndex ( ) in TestFiltering . java to ensure the index is cleared before further operations
updated the method invocation from ` getAddress ` to ` address ` in ` PointerParameterStrategy ` to align method naming with the semantics of pointer addressing in the context
updated conditional check to exclude CockroachDatabase in CreateSequenceGenerator . java to ensure compatibility with CockroachDatabase ' s sequence
removed an unnecessary check for enum type in ObjectStreamClass . java to simplify the condition for better readability and maintainability
replace UnsatisfiedLinkError with SymbolNotFoundError in Library . java and create a new class SymbolNotFoundError to improve error handling by providing a more
added logic to handle only pseudo fields in BinaryResponseWriter to improve flexibility in document retrieval based on return fields requirements
added WebSocket ping handling to the WebSocketImplBase and implemented a corresponding test case in WebSocketTest to enhance WebSocket functionality and ensure proper handling of ping
added a hyphen to the NON _ IDENT _ ESCAPES string in RegExpScanner . java to ensure proper handling of special characters in regular expressions
add option to dnsresolverprovider to disable the cache
added conditional on class for messagingtracing in tracemessagingautoconfiguration
mondrian : fix the test error of mondrian - 1206
updated import statements in IDELanguageClientImpl , IDELanguageClientImpl , EditorTextActionMode , IDEEditor , and IDE
added a condition to set the status to VERIFY _ CLOSE _ TAG when the character is a slash to ensure proper handling of close tags in
set the visibility of TouchCharInput to GONE to improve user interface responsiveness
added a null check for the current user before accessing its ID to avoid potential NullPointerExceptions when the current user is not available
refactor the handling of object members in JSObjectLinker to improve clarity and functionality to ensure proper setting of members based on their index
updated DefaultUniqueTicketIdGenerator and HostNameBasedUniqueTicketIdGenerator to allow customization of ticket suffix and random string generation to enhance flex
added @ Deprecated annotation to SecurityConfig . java to indicate that the class is outdated and should no longer be used
added @ Deprecated annotations to multiple Java classes to indicate that these classes are obsolete and should no longer be used
deleted the JoglDebugAdaptor . java file and modified RocketFigure3d . java and RocketFigure3d .
added ` toString ( ) ` methods to ` ExtraFieldPropagation ` and corresponding tests in ` ExtraFieldPropagationTest ` and ` AWSPropagation `
added PendingIntent creation in FileDownloader . java and FileUploader . java to ensure the notification content is available for new actions
refactor ` nextOrd ` method to include a ` set ` method and modify its implementation to ensure that the ` nextOrd ` method only
refactor DateTimeFormatter class for improved readability to enhance maintainability and ease of understanding for future developers
removed unnecessary try - catch block for class loading in WToolkit . java to streamline code for better readability and maintainability
added null and empty checks for administrator credentials in the setAdministratorCredentials method to ensure that only valid credentials are provided to prevent authentication errors
added MAX _ WIDTH _ SCALE _ FOR _ LARGER _ SCREEN constant and adjusted width calculation for tablet and two panels to ensure
draw sketch window color at start / end of draw ( )
refactor the hashing algorithm implementation to improve performance and maintainability of the hashing algorithm
updated the ` accept ` method in ` FileSenderFactory ` to use ` Files . getBaseName ( ) ` and ` Files . endsWith (
updated the ` addToListIfNeeded ` method to include a content description parameter and modified the ` addToListIfNeeded ` method to include a content
removed redundant null check for the type variable in JavaType . Method to streamline code by eliminating unnecessary null checks
updated ACTIVITY _ START _ DELAY from 500 to 800 to increase activity start delay for improved user experience
added WEBAPP _ HOME constant to SolrJettyTestBase and updated path settings in JettyWebappTest to improve code maintainability and
set selectedMotorSet to null and clear the table selection in ThrustCurveMotorSelectionPanel . java to ensure selectedMotor
added import for BufferUtil and called clearToFill on the buffer to enhance buffer management functionality in ByteBufferPool
improve api to create alarm rule via rest api
updated LDAP group configuration keys from " authorization " to " authentication " to align with the current authentication standards
added deleteExchange and queueDelete calls for " x " and " q " in DurableOnTransient . java to ensure proper cleanup of exchange
[ hotfix ] [ test ] remove timeout from bulkslotproviderimpltest
refactor connection handling in ServerInfoService to use a listener for error handling to improve error reporting for server connection failures
refactor CompositeHandlerAdapter to improve code structure to enhance maintainability and readability of the code
updated Quartz2Adapter . java for improved functionality to enhance performance and maintainability of the Quartz2Adapter
added exception handling to the lookup execution method in SulongLibrary . java to improve robustness by handling IllegalStateExceptions during lookup execution
update Spring Security schema version from 6.2 to 6.3 in multiple files to ensure compatibility with the latest Spring Security features and improv
refactor ` ConfigMappedNameResolverFactory ` and ` DiscoveryClientNameResolver ` to use ` Args ` instead of ` Helper ` to improve
added handling for non - empty annotations and introduced a method to determine the earlier position in JavacParser . java , and created a test
added " com . sun . naming . internal . " to the CheckPackageAccess . java file to restrict access to internal naming package for better
changed the strict attribute from false to true in StaxEventItemReader . java to enable strict validation by default for improved performance
added an ` isExhausted ` boolean to the ` OfflineSorter ` class and modified the ` readPartition ` method to handle it to
refactor ActionResetingPool class for improved clarity to enhance maintainability and readability of the code
updated the logic to check if the light state is in XY mode before converting it to the HSB type to ensure compatibility with XY color modes
refactor folder creation logic to use targetCell for improved clarity and functionality to enhance code readability and maintainability by using a dedicated
replaced ` activity . showLoadingDialog ( ) ` with ` ( ( FileDisplayActivity ) callerActivity ) . showLoadingDialog ( )
added a null check for ` uigestureFile ` before loading logs to avoid potential NullPointerExceptions when ` uigestureFile ` is not
updated FieldNamingPolicyTest to use Locale . getDefault ( ) for string comparisons to ensure consistency in case - insensitive comparisons across different locales
added listener settings to the result object in XmlSuite . java to enable custom listener configuration for improved test execution
added a new method ` loadWithNewGlobal ` to the ` Global ` class and updated related method handles to support loading a new global context
added JSON string serialization and deserialization methods to the StarTreeIndexSpec class to enable proper handling and serialization of the StarTreeIndexSpec
updated HttpSecurity , HeadersConfigurer , OAuth2LoginConfigurer , OAuth2ResourceServerConfigurer , and ServerHttpSecurity configuration classes to
updated string replacement methods from double quotes to single quotes in multiple file handle classes to ensure consistency in string handling across different operating systems
[ drools - 1551 ] fix npe when use in with a null value in executable model
added import for FieldCache and implemented commit and purge methods in TestDistributedSearch . java to ensure proper handling of multiple segments in distributed search
added test case for message boundary event on subprocess and inside subprocess
add resolvestaticcall ( ) method to call site . gettarget ( ) . getmethod ( )
http : / / issues . apache . org / jira / browse / amq - 4237 - fix the memory leak in the
added constants for slot IDs and replaced boolean fips with slotId in Secmod . java to improve code clarity and maintainability by using
added alignment support and modified widget addition in Layout . java and GdxRenderer . java to enhance flexibility in widget alignment and improve mouse button
[ hotfix ] [ test ] temporarily disable unalignedcheckpointitcase
added imports for sound handling and validation in JDK13Services . java to ensure only valid sound classes are processed to avoid runtime errors
make find in reference default to built - in papplet method ( fix # 4224 )
camel - 8705 : fix the issue of multicast eip do n ' t return the size of the consumer .
remove some unused code that be no longer use
escape telegraf tag ( # 644 )
add udpport to the member serialization so that the client can bind to the same multicast address
rename ` ` operator multicast ' ' class to ` ` operation multicast ' '
updated delivery timeout from 1 to 100 milliseconds in EventBusTracerTestBase . java to allow more time for sending messages in the event bus test
added a try - finally block around the node start operation in VertxTestBase . java to ensure latch count is decremented in a finally
added a synchronized destroy method that sets cachedEventListenerRegistry to null in SessionFactoryServiceRegistryImpl to ensure proper cleanup of cached event listener registry after
simonstewart : fix a problem with the test that fail on the ci - server .
[ pytorch ] add miss test case for pytorch map of tensor
added a TaskStackChangeListener to manage the visibility state of the force invisible flag during pinned stack animations to ensure that the force invisible flag is cleared
pdfbox - 4892 : improve performance of defaultsplitcharacter . checkdatepattern ( )
camel - 14284 : camel - cxf should use source code generate configurer to avoid reflection configuration .
refactor pending animation handling by extracting functionality into a separate method to improve code readability and maintainability
added logging for play time and updated play time calculation based on device type to improve debugging capabilities and ensure accurate play time representation
add the ability to bail out if an exception occur during compilation .
set signup and passwd to null in the IdentityZoneConfigurationBootstrapTests to simplify the configuration by removing hardcoded values
[ hotfix ] [ runtime ] rename previousexecutiongraphallocations to reserveallocations
log4j2 - 1343 refactor timeconverter to use string instead of simpledateformat
added NoDataContainer to GeoTiffReader and corresponding test in GeoTiffReaderTest to enable handling of no - data data during image
improve error message when there be no source section
replaced ` toString ( ) ` method with ` new String ( out . toByteArray ( ) ) ` in ` JdbcExecutionContextDao . java
replaced the ` blockUntilConnected ( ) ` method with a ` CountDownLatch ` to track the start of the connection state to ensure
added null checks for arrays in the ArrayTypeHandler class to ensure proper handling of null values in ResultSet operations
replaced the existing RegexpTunnel class with a reflection - based approach for retrieving the prefix in JakartaRegexpCapabilities to improve compatibility with
updated the parameter type of ` pick ` method from ` null ` to ` Application . class ` to ensure the correct type is used for application
[ drools - 6682 ] fix npe on mutable global when call fireallrules ( )
replaced Preconditions with a new validation method in TransactionUtil for asset name , URL , and description to ensure only valid asset names and descriptions are
add parent algorithm to the result of copypast ( ) for textfield
updated label and description in LGWebOSActions and modified status messages in LGWebOSHandler to improve clarity and consistency in user
updated the method for setting seed , active , and trust nodes in TronNetService to improve node management by combining seed , active , and
improve error reporting in basetokenstreamtestcase to make it easy to diagnose failure
log4j2 - 1343 fixed timebasedtriggeringpolicy . getnexttime ( ) to use a modifiablespecifier
added methods to handle item click actions in ShadowAdapterView and findFirstItemContainingText in ShadowListView to improve functionality for clicking items
pdfbox - 4892 : fix typo , a suggest by valerybokov
provide debug information when a graph decode fails after a method scope .
updated HttpSessionDestroyedEvent to use getSession ( ) instead of getSource ( ) and modified attribute retrieval logic to improve session management and ensure correct retrieval of
added a new test method to verify service name change in Zipkin span reporting to ensure that the service name is correctly set in the tracing context
added logging statements to ` JavaInMemoryFileManager ` and ` JavacToJarStepFactory ` for better traceability and debugging to
rename ` SeparatedProjectGenerator ` and related test classes to ` SeparatedProjectsGenerator ` to improve clarity and consistency in naming
test : increase timeout for clientmultimaplocktest . trylock ( )
added DEFAULT _ CACHE _ CAPACITY constant and updated return statements in ConfluentSchemaRegistryDeserializerProvider . java to improve cache capacity handling and
replaced a JCheckBox named " remind " with a new checkbox named " checkAtStartup " in UpdateInfoDialog . java to enhance
added new method definitions and updated factory definition in NodeGenerator . java to improve method structure and clarity in the NodeFactory implementation
hhh - 14627 - do n ' t throw transientpropertyvalueexception in cascadingactions if the child be a transient property
added support for retrieving and setting prototype properties in ScriptObject to enable proper handling of prototype properties in the script object
updated the default read mode from " heap " to " mmap " in CommonConstants . java and modified the ImmutableSegmentLoader . java to improve
added import for ByteArrayTemplate and modified conditional logic to return a ByteArrayTemplate instance if baseClass is byte . class to ensure proper handling of byte array
added Hipchat support to the SamlServiceProviderProperties and created a new configuration class for it to enhance SAML service provider integration with Hip
changed the type of ` commandRegistryUrls ` from ` List < URL > ` to ` Set < URL > ` and updated resource loading to
updated warning log message to include the current context and added debug logging for uncovered HTTP methods to improve logging clarity and enhance debugging capabilities
camel - 1888 : camel - sftp - sftp - do n ' t try to login a sftp if it be n ' t already
http : / / issues . apache . org / activemq / browse / amq - 2696 - do not lazy - create
fix checkstyle issue in template / hypervisor / vmwareresource . java
refactor Timers class for improved readability to enhance maintainability and ease of understanding for future developers
replace ` OVERWRITE _ EXISTING ` with ` APPEND _ TO _ ZIP ` in ` DefaultDefectReporter . java ` to stream
removed deprecated string constants and constructors in UAX29URLEmailTokenizer . java to streamline code and encourage the use of updated
removed redundant Map implementation from ScriptObject class and updated assertions in ContextTest to simplify code and improve readability by using a more descriptive variable
refactor EventBusMetrics class for improved readability to enhance maintainability and ease of understanding for future developers
refactored eperson locale support into a new method in i18nutil to reduce code duplication .
replaced the ` @ PostConstruct ` annotation with ` InitializingBean ` and modified the ` ensureSchema ` method to implement ` Initializing
removed null check for pgTypeName before putting it into _ pgNameToSQLType to simplify the code by always adding the type to the map
added server initialization and handler configuration in ScopedHandlerTest . java to ensure consistent server handling across multiple test cases
calltimeoutexception should not be retryable . calltimeoutexception should be retryable . calltimeoutexception should be retryable .
changed the condition from ` isBlank ` to ` isEmpty ` for checking if the password is empty in ` RestLoginProcessingFilter . java ` to
updated permissionNode comparison from ` Objects . equals ` to ` equals ` for improved clarity to enhance readability and maintainability of permission
rename ` encoding ` to ` sourceCharset ` and update related methods to clarify the purpose of the charset variable to improve code readability
changed the data type of postLogin from byte [ ] to String in HostBean and related classes to improve flexibility in handling post - login
added imports for GenericComponentModifier and FlightConfiguration , and modified simulation handling in GeneralOptimizationDialog . java to improve code clarity and
camel - 17836 : camel - main - dsl - add option to turn on context reloading .
updated log configuration parameters in CommonTestUtils . java to improve logging clarity and consistency to enhance readability and maintainability of the logging configuration
refactor PrologSizeSanityCheck class for improved clarity to enhance maintainability and readability of the code
refactor NearbyListFragment to improve code structure to enhance maintainability and readability of the code
added a check for non - markable input streams in the RequestBody class and created a corresponding test in RequestBodyTest to ensure proper handling
fix : do n ' t generate typeargument qualifier if there be no type define
change player movement debug to use pojoprefab
refactor the ` random ` method to include a half - length total weight parameter and adjust its logic accordingly to improve the random load balancer logic
no effective change - code cleanup - remove unnecessary code
added comments to clarify the sorting order of parameters in ApacheHttpClientMediaWikiApi . java to improve code readability and provide clearer
replaced all instances of ` checkTransactionSynchStatus ( ) ` with ` pulseTransactionCoordinator ( ) ` in ` AbstractSharedSessionContract
replaced ReentrantLock with PipeTaskCoordinatorLock in PipeTaskCoordinator . java and added a new class PipeTaskCoordinatorLock . java
added a conditional check for the usePreinstrumentedJars property before creating a DependencyJar instance to enhance flexibility in dependency resolution based on
modified the conditional check from ` ! isSilent ` to ` isSilent ` to correct the logic to ensure that silent execution occurs only when the
added validation checks for default and required attributes on a dynamic field in IndexSchema . java to ensure proper error handling for unsupported attributes on dynamic fields
remove randomness check for read repair from repair command ( # 6808 )
replaced ImmutableSortedSet with Iterables for adding system include roots and added a new test for includesDirs to improve code clarity and ensure that
refactor AdaptableX509CertSelector to initialize startDate and endDate as nullable and introduce sensitivity flags for subject key identifier and serial number
log4j2 - 1343 no need for try / catch in nosqlappender . parse ( string , int )
deprecate guiscreencrevent . getkeyboard ( ) in favor of getkeyboard ( ) . getkeyboard ( ) .
added methods to manage category additions and removals in CategoryEditSearchRecyclerViewAdapter to improve category management functionality for better user experience
# 259 - enh : add servercachetype parameter to createcache ( ) method ( # 259 )
updated the iteration method for setting massOverriddenBy and CDOverriddenBy properties of a RocketComponent to use a for - each
replaced the ` doCompile ` method with a ` post ` method in ` JavaCompilerService ` , modified the ` destroy ` method to
refactor MultiThreadedBuildRuleResolver to use a Supplier for task creation instead of an anonymous inner class to improve code readability and maintain
refactor WanReplicationServiceImpl to utilize a mutex for thread - safe executor initialization to improve thread safety and resource management during execution
added null checks for partition and table data in Partition . java and modified Driver instantiation in DDLSemanticAnalyzer . java to enhance robustness
refactor lambda expressions in LocalServiceRegistryClientImpl . java and RemoteServiceRegistry . java to use lambda expressions to improve code readability and
added a new test class ` FilesTest ` and implemented the ` delete ` method in the ` Files ` class to ensure proper file deletion functionality
removed unnecessary try - catch blocks around socket closure in ServerSocketAdaptor . java and SocketAdaptor . java to simplify code and improve readability by
updated class name check from " java . lang . System " to " Logger . class . getName ( ) " in SSLLogger . java to
replace currentWorkingDirectoryList addition with addWorkingDir method to improve code clarity and maintainability by using a dedicated method for adding working directories
added null check for ` cn ` in ` ItemInfo . java ` and set insets in ` Workspace . java ` to ensure proper handling of
changed the access modifier of the String variable from public to private to restrict access to the String class for better encapsulation
updated Java command - line arguments for CSV and JSON jar in SimplePostTool . java to streamline command - line options for better clarity
ggb - 1351 fix for ggb - 1352 do n ' t have symbolic toggle
refactored error handling in JavaxWebSocketClientContainerProvider and added ShutdownThread registration in JavaxWebSocketClientContainer to improve code
updated conditional check from ` type = = null && ! type . getOpenWithApplication ( ) ` to ` type = = null | | to
added teardown methods to properly close the web application context in multiple test classes to ensure proper resource management and cleanup of resources after tests
added a method to retrieve a search string from a request URI and updated resource retrieval logic to enhance user experience by allowing direct access to the search
removed the visibility of the neutral button in SetupEncryptionDialogFragment to improve user interface by hiding the neutral button
improve performance of itemserviceimpl . count ( ) by use itemdao # countitems ( )
updated SQL statements to use backticks for table and column names to ensure proper formatting of SQL statements for better readability
added logging functionality for OAuth2 exceptions in CheckTokenEndpoint to improve error handling and debugging capabilities
updated various classes and added a method to lookup series paint in the AbstractRenderer class to enhance functionality and provide better access to the lookup series paint
updated methods and variable names in IdentityZoneEndpointsIntegrationTests and JdbcIdentityZoneProvisioningTests for consistency and clarity to improve code readability and
updated dismiss delay from 20000ms to 10000ms in multiple classes and added tooltip text in SQLConsole to improve user experience by providing clearer
add support for ` ` run _ single _ method _ disabled5 ' ' and ` ` run _ single _ method _ test _ method _
updated exception handling in WorkerShellStep . java to catch IOException instead of a generic Exception to improve error handling by providing a more specific runtime exception
[ hotfix ] [ stream ] add experimental annotation for stream api
[ hotfix ] [ doc ] fix typo in streamcepstrumsource
added a check to prevent index out - of - bounds in the List class to prevent index out - of - bounds errors when accessing items
updated assertions to check for Parenthesis instead of OrExpression in CloneHelperTest . java to ensure correct type validation for expression handling in the
added confirmation and requiredType attributes to the DebugPaste class in DebugPaste . java to enhance command functionality by providing confirmation options for debug
( chore ) camel - web : use optional . orelsethrow ( ) instead of . get ( )
ggb - 1308 fix the focus of the mathquill text field in the formula
updated imports and refactored ` Arg ` class to ` GoBinaryDescriptionArg ` and ` AbstractGoBinaryDescriptionArg ` to improve code
updated the application environment handling in Jooby . java to retrieve the application logback configuration if it exists to improve logging configuration flexibility
replaced ` RetryListenerSupport ` with ` RetryListener ` in multiple files and introduced a new ` SecondDummyRetryListener ` class to simplify
fixed - elasticmeterregistry report whole count a decimal ( # 498 )
changed the ` email ` and ` author ` fields to be ` final ` and initialized ` commits ` in the ` Contribution ` class to
replaced a for loop with a do - while loop in JUnitFormatter . java to improve readability and maintainability of the code
refactor the way elements are retrieved from fields by introducing a check for the class type before creating a new LinkedList instance to ensure that the
improved exception messages in StaxEventItemReader to include the resource URL to provide clearer context for exceptions related to the input resource
tweak testmultirendertarget so that it do n ' t have to do a full loop
updated clientResult assignment to handle null currentProfile and added a debug log message when the current client cannot be found to improve robustness by avoid
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the namespace declaration is
added BigInteger calculations for p , q , and g in KeyStoreManager . java to enhance security handling for cryptographic operations
replaced ` getIndexBuffer ( ) ` with ` getIndicesAsList ( ) ` in ` GImpactCollisionShape . java `
fix engine version in bpmndeployer when persist processdefinition
updated velocity property names from " class . resource . loader " and " file . resource . loader " to " resource . loaders " and "
do n ' t use iscurrentthread in centrypointsnippets if the next thread be attach to a vmthread
updated GenericUDFMapValues to handle null maps and added a new TestGenericUDFMapValues class to ensure robustness by preventing
polish ` ` rename interceptor to handlerinterceptor ' '
add a config option to disable oil spring at the bottom of large lake .
added a check for the existence of a " . clean - me " file before creating a new one in ImportContext . java to ensure that
add miss i18n support for memoryrealm . readxml
updated import statements in RegisteredService . java and CRLDistributionPointRevocationCheckerTests . java to streamline dependencies and improve code clarity
added constants and import statements for ZIP file handling in ZipConstants64 . java and ZipEntry . java to improve code organization and facilitate
refactor ` newFileSystem ` methods to improve file validation and error handling in ` ZipFileSystemProvider . java ` to enhance robustness by ensuring
replaced ` Box . createHorizontalStrut ` with ` Box . createHorizontalGlue ` for condition panel layout to improve layout consistency and
refactor connection initialization in FailoverUpdateURIsTest . java to improve code readability and maintainability
added Gson @ SerializedName annotations for baseUrl , mirrorsList , repoId , and repoName in ServiceOsSpecific . java to enhance serialization
[ 3.0 ] fix crash when delete default book in db adapter
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
correct an off - by - one error in the calculation of the response message length
replace shutdown ( ) and start ( ) on admin console plugin with restart ( ) .
refactor unregisterHandlers method to use instance variables for binary , text , and close handlers to improve code clarity and ensure proper management of message
added properties for device ID transformation method , ID table , and ID table log file in IoTDBDescriptor . java to enhance configuration flexibility for
increased the number of documents per type from 2000 to 100 and introduced a new class for delaying search components to improve test coverage and
updated the condition for checking access error in TestSignatureInfo . java to correct the logic for determining if the access error is present
transaction : make sure to encode the script code in the output .
updated the expression in IndexSchema . java to include " / schema / types / fieldType " to enhance schema type handling by incorporating
updated the value comparison logic in Completers . java and added a new OptionCompleterTest . java file to enhance functionality to handle null
[ hotfix ] fix checkstyle violation in s3utils
changed the data type of ` sourcePeerId ` and related methods from ` String ` to ` int ` across multiple classes to accommodate
pdfbox - 4892 : do n ' t try to upload a file in ftp if it ' s a zip file
updated the alpha value of the reply button in TweetFragment . java to improve visibility of the reply button for better user experience
added mock ` AccessLogContext ` and updated expected string formatting in ` AccessLogSupportTest . java ` to improve test clarity by ensuring
move testfiles - deleteme to tmp so it do n ' t interfere with other test
remove null check and use size ( ) > 0 instead
added a null check for the marshaller in AbstractSamlObjectBuilder and removed the static block in AbstractSaml10ResponseView to improve error handling for
replaced printStackTrace ( ) calls with LogUtil . warn ( t ) in DataBrowser . java to improve error handling by logging warnings instead of
added a check for the existence of a file in the development mode and updated the test cases accordingly to ensure proper handling of non - existent assets
[ hotfix ] [ rocksdb ] make rocksdbkeyedstatebackend . writeoptions configurable
updated the default format string from " value - tag - index " to " value - index " to clarify the purpose of the format
use request . getHints ( ) instead of puthint ( ) for dijkstrabi
use native alt - bn128 and native secp256k1 by default ( # 1193 )
rename ducfsandboxtest to sandboxtest to avoid confusion
camel - 8705 : camel - cxf - do not log error when a message can not be process
make forwardpropagatetree public to allow subclassing
updated SQL query to include a second parameter in the group by clause to improve clarity and consistency in data retrieval
improve error message when use $ { project . * } expression in profile activation
refactor Style class to improve code readability to enhance maintainability and facilitate future updates
added zoom functionality to ShareActivity to handle back key events to enhance user experience by allowing zoom out of the screen
added a check to skip deprecated fields when reading and ignoring deprecated fields to ensure proper handling of deprecated fields during JSON processing
added animations for showing and hiding the send layout in LauncherFragment based on floating compose settings to enhance user experience by providing visual feedback during
[ hotfix ] [ doc ] fix checkstyle violation in yarn module
added Progressable parameter to multiple methods in Utilities , PTFRowContainer , HiveBinaryOutputFormat , and HiveIgnoreKeyTextOutputFormat to
[ hotfix ] [ coordination ] fix typo in sourcecoordinatorprovider
remove a contribution from the panel by its contribution and update the panel ordering and colors accordingly to ensure the contribution list reflects the current state and
renamed ` HyervisorTemplateAdapter ` to ` HypervisorTemplateAdapter ` and removed the ` @ Component ` annotation to improve clarity
added a check to initialize dPath to the user ' s directory if it is empty to ensure the application uses the user ' s directory when
fix e - ac3 output with no sample rate
log4j2 - 1343 add mapfilter . filter ( ) method to improve performance
renamed VerificationInOrderWithCallsTest . java to improve clarity and maintain consistency in naming conventions
updated the axis parameter from ` z ` to ` x ` in the ` setFromAxis ` method to ensure the correct axis is used for setting
corrected a typo in the constant name from " colelction . delim " to " collection . delim " to ensure consistency with the
[ java ] add a test to prove that the listener be connect at start .
bugfix # 5355 : fix the ` ` union ' ' and ` ` union n ' ' sign in generated code completion documentation
added support for one - handed mode in RecentsAnimationDeviceState by introducing a private boolean variable to improve code readability and maintain
added onDetachedFromWindow method to cancel running AppsCustomizeAsyncTask to ensure proper cleanup of running tasks to prevent memory leaks
[ orfologik ] add ` ` dictionary - resource ' ' parameter to filter and analyzer
updated exception handling logic in ResultSetTest . java to correctly manage the count of exceptions to ensure that the test correctly verifies the expected number of exceptions
updated the initialization of the InitializeProjectMessage to use an empty string instead of " debug " to improve clarity and consistency in project initialization
updated exception handling logic in AbstractPhenomenaTest to differentiate between lock timeouts and MVCC anomaly detection to improve clarity and
refactor tooltip text handling in ComponentTreeRenderer to use a dedicated method to improve code readability and maintainability by reducing duplication
increased the timeout duration in the await method from 5 seconds to 10 seconds to allow more time for the zipkin server to become up
added config option deviantart . username and deviantart . password to override the default value .
replace the ` KNOWN _ GOOGLE _ SIGNATURES ` array with a single key constants for Google package signatures to improve code
updated the initialization of solutionBusiness to use createSolutionBusiness ( ) to ensure the solutionBusiness object is properly instantiated before use
added a method to notify window state changes in WWindowPeer . java to ensure proper handling of window state changes in the application
added email description to templateData in EntityGroupKeyContentFormatter and set it in TestEntityGroupKeyEmailContentFormatter to provide additional context for email
update return statement to use data . remove ( sel ) instead of remove ( sel ) to ensure proper data handling in the remove method
refactor language handling in ` Locale . java ` and add error checking in ` LocaleTest . java ` to improve code clarity and ensure
refactor Liquibase code to use a dedicated method for creating UpdateVisitor to improve code readability and maintainability by centralizing the
added a check in OverviewCommandHelper to return early if the screen is currently pinned to improve performance by avoiding unnecessary processing when the screen
added customizable no data text and description fields to Chart . java and updated drawing logic to use these fields to enhance user experience by providing clear
replaced checkValid ( ) calls with checkHeadWritten ( ) in Http1xServerResponse . java and Http2ServerResponseImpl . java
refactor chunking logic in NettyResponse . java to use a separate method for handling SSL to improve code readability and maintainability by
fix http / 2 test that fail on jdk - 8.0 . x
fixed - redissonlocalcachedmap . getall ( ) and redissonlocalcachedmap . getvalues ( ) method do n ' t
camel - 14263 : camel - jpa should use getcomponent ( ) instead of getentitymanagerfactory ( ) and gettransactionmanager
change jump speed from fallSpeed to jumpSpeed in PhysicsCharacter . java to correct the assignment logic for jump speed
added a condition to check if reparsedFunction is null in the syntax extensions check to ensure proper handling of cases where reparsedFunction is not
updated logger variable names and refactored order book handling in BitstampPusherService . java to improve code clarity and maintainability by
added deprecated methods for retrieving old upload segment URIs in FileUploadDownloadClient to prepare for future removal of deprecated methods and encourage the use
updated the method call to include a filter parameter in MongoDbTailTrackingManager to enhance filtering capabilities during database queries
added assertpredicatefails ( ) method to juellanguagetestsupport to avoid false positive
added bounds checking for the alpha value in RecentsView . java to ensure the alpha value is within the valid range of 0 to 1
updated regex in ManifestReversion . java to correct string concatenation for " import - Package " to ensure correct formatting of the version string in the
renamed DataSyncConfiguration class to improve clarity to enhance code readability and maintainability
added import for JavaSnippetRepository and initialized JavaSnippetRepository to enhance snippet functionality in the Java language server
refactor conditional logic in StarTreeRecordStoreCircularBufferImpl . java to iterate through timeBuckets before updating sums to improve performance by avoid
chrome : use googleapis . com instead of download download url .
( chore ) camel - pg : use try - with - resources for prepared statement to prevent resource leak
updated imports from ` com . sun . syndication ` to ` com . rometools . rome ` and added a ` close
added handling for " Content - Length " header in TransferCompletionHandler and refactored NettyTransferAdapter initialization in NettyAsyncHttpProvider
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
removed the constructor from EnhancedRuntimeException to streamline code by eliminating unnecessary parameters
attempt to fix intermittent failure of socketappendertest
camel - 15836 : camel - event - admin should not require camel - karaf in the karaf module
removed unnecessary exception handling and improved method signature formatting in ByteArray . java to enhance code readability and maintain consistency in method signatures
added a method to disable the input proxy during touch events in RecentsAnimationWrapper . java to improve animation responsiveness by preventing
camel - 6770 : fixed the camel - restlet test error of camel - restlet
removed the parameter ` currentIdx ` from the ` resizeAndRehashIfNeeded ` method to simplify the method signature for better readability and maintain
move module - info . java to com . hazelcast . test . modulepath and move module - info . java to com . hazelcast
added ` getSourceDirs ` method to ` JavaServerConfiguration ` and modified the ` getCompiler ` method in ` JavaLanguageServer ` to provide
updated the menu item ID from ` menu _ open _ web ` to ` menu _ mute _ hashtags ` in ` Tweet
updated method names and assertions in AncestorDescendantTests and modified logic in HasParentNode and Node classes to improve clarity and correctness of
add negative check to worldeditplayer . getblockposition ( ) and getblockposition ( ) .
added PathNotExistException handling and improved measurement validation logic in InsertNode . java to enhance error handling for data type mismatches and ensure proper
removed an extra space in the closing brace in JavaCompiler . java to correct syntax and improve code readability
[ hotfix ] [ operator ] move mailboxexecutor getter to abstractstreamoperatorfactory
hbase - 25810 add precheck for settablestateinmeta and fixmeta to master rpc service
updated method reference syntax and improved error message formatting in GatewayMetricFilterTests . java to enhance code readability and provide clearer output for
updated BlockJUnit4ClassRunner to use the Java class of the test class to ensure proper initialization of JUnit4ClassRunner instances
[ drools - 6251 ] use lastdata instead of remoteitems when delete a kie file
updated calculation for allAppsCellWidthPx and allAppsCellPaddingPx in DeviceProfile . java to improve layout responsiveness by accounting
[ hotfix ] [ core ] make coreoptions . parent _ first _ logging _ patterns internal .
updated method calls from ` doc ( ) ` to ` this . doc ( ) ` in ` BooleanScorer2 . java ` to ensure
added a call to writer . forceMerge ( 1 ) in TestMultiPhraseEnum . java to optimize the merging process for improved performance
modified the ` close ` methods in the ` Session ` , ` SessionDelegatorBaseImpl ` , and ` SessionImpl ` classes to change
refactor GetLocations class for improved readability to enhance maintainability and clarity of the code
[ hotfix ] [ task ] remove system . out . println ( ) from schemavalidatetask
modified exception handling to directly ignore IOException instead of throwing an unchecked IOException to simplify error handling and improve code clarity
updated ` GeneratePubkeyActivity ` to extend ` AppCompatActivity ` instead of ` Activity ` to ensure compatibility with the latest Android features and
ruby flavor : handle repeat and quantifier properly
updated logging level from warning to debug in DerbyDatabase . java and added null checks for username and password in BaseLiquibaseTask
remove the ' usecaches ' flag from the nio2endpoint
refactor CasGeoLocationConfiguration to use Resource for database retrieval instead of MaxmindProperties to improve flexibility and maintainability of database handling
update instructorfeedbackresultspageuitest to use new instructorfeedbackresultspageopenviewforhelper1 and instructorfeedbackresults
updated the ` useEncodedQualifierListOptimization ` method to include a ` Scan ` parameter and modified its logic in ` EncodedColumnsUtil `
removed public access modifier from several methods in ApprovalStore , ApprovalsControllerService , and ActionService classes to enhance encapsulation and
added a boolean flag to track the start state of the download process to ensure the notification is canceled when a download is in progress to improve user
updated method name from ` getOpenView ` to ` getAnyView ` in ` TaskbarDragLayerController ` and added new methods in `
updated project version from 1.0 . 11 to 1.0 . 13 and modified copyright year from 2008 to 2009 in JFree
replaced calls to ` yield ( ) ` with ` Thread . yield ( ) ` in ` SyncThread . java ` to ensure proper thread
refactor GsonBuilder class to improve code readability to enhance maintainability and facilitate future updates
added null checks before adding circleCenters and fixedPoints in ProverBotanasMethod . java to avoid potential NullPointerExceptions when adding circle
remove -- espressohome option , use graalvm . espressohome instead
doc : fix javadoc error in java . lang . { ctcodeelement , ctif , ctvariablewrite , ctqueryable } ( #
changed access modifiers of ` timeToDieInSeconds ` and ` deleteSession ` from protected to private and modified session management logic to enhance encapsulation and
rename class ` InvalidDocumentStoreApiUageException ` to ` InvalidDocumentStoreApiUsageException ` to clarify the purpose of the
initialized variable ` sz ` to 0 and modified result initialization in ` SolrIndexSearcher ` , and modified field assignment logic in ` TestJoin
added a file parameter to the triggerMediaScan method in FileDownloader . java to enable the triggering of media scans for specific files
removed conditional logic for posting test results based on verbosity to simplify test result handling by always posting results
added custom G - code settings to MainWindow . java to enable custom G - code settings for multiple input fields
fix additionaljaxbmappingproducerimpl to use utf - 8 encoding
refactor JsonElement class to improve code structure to enhance maintainability and readability of the code
added imports for SolrTestCaseJ4 and JUnit ' s ignoreException and resetExceptionIgnores in TestBadConfig . java to
added a method to remove fragments and the action bar in the GpsMainActivity to ensure proper cleanup of the fragment and its associated action bar
remove spanish from itest , since it ' s not actually spanish
updated ` RemoteMediaHandler ` and ` RemoteRawHandler ` to use ` Range . Byte ` instead of ` Range . Byte ` and added
updated G - code file name and enhanced debugging output in VisualizerCanvas . java and GcodeViewParse . java to improve clarity of
added new versions " 8.4 . 0 - cfs " and " 8.4 . 0 - nocfs " to TestBackwards
fix formatting in Assertions _ sync _ with _ InstanceOfAssertFactories _ Test . java to improve code readability and maintain consistency
added a condition to close the exchange client if the output stage is null and the query is in a completed state to ensure proper resource management and
fix integrity check not work on non - existent file directory
removed unused import and field for shardToClient in ChaosMonkey . java to streamline code and improve clarity by elimin
do n ' t try to create the use database config if there be n ' t one .
updated formatting of the add method in NestedRepositoryTreePanel . java to improve code readability and consistency
add constructor to ensure extension type be within - 128 to 127
pdfbox - 4892 : do n ' t swallow ioexception ; improve javadoc
updated the ` deleteOnShutdown ` and ` pushOnShutdown ` properties in ` PrometheusProperties . java ` to set the default value to
refactor ` ReactiveStateMachineExecutor ` to include a ` MonoSinkStateMachineExecutorCallback ` for error handling to improve error management by
added a test for multiple Python executables on the first path in ` BuckConfigTest . java ` to ensure that the Python interpreter is
added a default button to the root pane in the InitialAccountRegistrationFrame to enhance user interface by providing a visual indication of the signin
added a new configuration variable TEZ _ DYNAMIC _ SEMIJOIN _ REDUCTION _ FOR _ MAPJOIN in HiveConf . java and
updated error logging to include exception to improve debugging by providing more context in error messages
move all reflection - related class to the same package to avoid circular dependency .
added a static method ` listableCollector ( ) ` to ` OidcIdTokenClaimCollector ` and created unit tests for its functionality to
remove private Vector2 center declaration from Circle , Ellipse , Polygon , Polyline , and Rectangle classes to streamline code by eliminating
updated conditional check for pcollection equality in RegisterAndProcessBundleOperation . java to simplify the logic for better readability and maintainability
refactor SslContextFactory to improve SSL configuration handling to enhance security and performance during SSL connections
updated max expectations and log entries assertions in ConfigurationProperties and ConfigurationPropertiesTest to use default values instead of hardcoded values to enhance flexibility and
updated the return value from " access _ confirmation " to " access _ confirmation _ error " to provide a more descriptive error message for access
[ 3.0 ] fix classloading issue when use consumer config ( # 9043 )
modified the ` shiftRows ` method to include a ` copyRowHeight ` and ` resetOriginalRowHeight ` parameter for controlling row height
updated method names from ` setRolloverIcon ` to ` setRolloverPressedIcon ` in ` FontImage . java ` to clar
updated task view handling to replace grid translation logic with a new method for setting grid translation to improve code clarity and maintainability by consolidating
refactor assertions methods for improved clarity to enhance code readability and maintainability
added a null check for currentDateTimeFunction before returning it in multiple database classes to ensure that the method is only returned if it is not null
added an anonymous path utility method to IOUtils and updated Log4jUtils to use it to improve path handling and facilitate anonymous path
updated the ` call ` method in ` DigitalWellBeingToast ` and ` TaskView ` classes to include ` contentDescription
[ hotfix ] [ table - planner - blink ] fix timeout in catalogtracker . getmetastracker ( )
updated LineNumberTagAggregator and TestDominance classes to improve code clarity and maintainability
return default value of item # getstate ( ) instead of ` ` null ' ' in genericitem # getstate ( )
added new imports and a test method for fetching posts and post details in BidirectionalOneToOneNPlusOneTest . java to enhance functionality
added functionality to remove extra empty screen from the workspace and adjusted the startSearchPageIndex initialization to ensure proper handling of empty workspace screens
updated initialization of hashmaps and sets in MarkBasePointersPhase . java and added null check in IndexedValueMap . java to improve memory efficiency and
updated string formatting in GoogleLineChart . java and GooglePieChart . java from single quotes to double quotes to ensure consistency in string representation
do n ' t swallow interruptedexception in sendingaccountor . waitforbatch ( ) .
hbase - 25827 walprettyprinter should seek to the end of the file , add a ` ` goto ' ' option
change the port number of the transceiver from 1 to 0 in TestNettyTransceiverWhenFailsToConnect . java to ensure
refactor event ordering in SimpleReport to use a sorted list of LogEvent instances before generating a report to improve the accuracy of event reporting by
added a test method to verify CSV line description contains double quotes to ensure correct handling of double quotes in CSV lines
fix a bug in the abstractsequenceclassifier that cause the test to fail
do n ' t send iq packet to non - remote server .
added @ JniImpl annotation to VM . java to enable JNI implementation for improved performance
updated configuration settings in Fetcher2 . java to use constants instead of string literals to improve code readability and maintainability by using defined constants
added a condition to exclude " dolbyvision " from the ID check in FFMpegVideo . java to ensure that the ID is
updated the test case to reference " other _ package2 " instead of " other _ package " to ensure the test accurately reflects the
[ net . minestom . server . instance ] worldborder . setdiameter ( ) should resize instance . getworldborder ( )
added a method to retrieve the WalGroups replication status based on the master ' s online status to ensure that the master can host user regions
ggb - 1186 remove the caller from the login operation view if it ' s already open
fix the unit test error of routingtabletest # markdataresourceonlinedata ( )
changed the FieldAttributes class from package - private to public to allow access to FieldAttributes from other packages
add unit test to verify that we can read erroneous maven project that contain a reference
simplified the conditional check in PropertyMap . java by removing unnecessary conditions to improve code readability and maintainability
refactor ` getControllerId ` methods to accept a ` configId ` parameter and streamline the assignment of ` controllerId ` to improve code
replaced sessionFactory . close ( ) with session . close ( ) to ensure proper resource management by closing the session
removed the condition for generating refresh token in the OidcConsentApprovalViewResolver to simplify the refresh token handling logic
remove debug print statement from Http2SolrClient . java to clean up the code and reduce unnecessary console output
replaced the extractor implementation in BaggagePropagation from a lambda expression to an enum implementing the NoopGetter interface to simplify the extraction process
refactor conditional resource chain logic to improve clarity and maintainability of the code
added a condition to check if the tree root has child nodes in BarrowmanCalculator . java to ensure that the treeRoot has children before
pdfbox - 4892 : use getunfilteredstream instead of getfilteredstream , a suggest by valerybokov
updated logging statements and added intent result listener functionality in FacebookImpl . java to enhance logging clarity and ensure proper handling of session state changes
updated the return value in ShadowICU from a hardcoded format " h : mm a " to a dynamic skeleton to allow dynamic retrieval of
removed KeyguardManager dependency and simplified device lock check in TouchInteractionService to simplify code and improve readability by eliminating unnecessary checks
cloudstack - 6803 : fix npe in listvirtualmachines api when default disk offering be not set
replace FileChannel with AsynchronousFileChannel for asynchronous file writing in UtowBodyHandler . java to improve performance by utilizing asynchronous file operations
removed unnecessary whitespace in the SigInt and SigIntTest classes to improve code readability and maintain consistency in formatting
remove updatebybboxresize ( ) method , use text . update ( ) instead
change return value from - 1 to 0 in Asset . java to correct the functionality of the method
replaced hardcoded size and value loader functions with static final variables in ComputeBenchmark . java to improve code readability and maintainability by redu
added setOnRefreshListener to UploadListFragment and implemented onRefresh method to notify data set changes to enhance user experience by notifying the adapter when
fix ` ` file ' ' field in bibdatabasecontext be an optional < path > instead of file .
refactor particle effect emission handling by replacing array access with direct method calls to improve code readability and maintainability by reducing redundancy
refactor tomcat . getservice ( ) and tomcat . getengine ( ) to use findservices ( ) . findchildren ( )
updated error messages to include a period at the end to improve clarity and consistency in error reporting
added a check to ensure the playback state is valid before proceeding to prevent processing when the playback is not in playing state
replaced the retrieval of ` ServiceComponentDesiredStateEntityPK ` with a direct call to ` findById ( 0L ) ` to simplify the
refactor inner class handling in Java2TypeScriptTranslator and add a new InnerClassFieldClash class for testing to improve code clarity
( chore ) camel - docker : add support for configuring logging and follow - redirect filter
replaced direct displayChanged call with awtUnlock and awtLock methods in XToolkit . java to ensure thread safety during display changes
hhh - 10183 - fix nationalizedscalarquerytest on db2 and postgresql
added a ` revert ( ) ` method in ` OPCPackage . java ` and refactored the ` verifyZipHeader ( input )
change method visibility of storeClassFile from private to public to allow access to storeClassFile from other classes
added a new test class ` TestSortedSetDocValues ` and modified the preference settings in ` ecj . javadocs . prefs ` to
updated error messages in CGIHandler . java and added JavaVM . start method in JavaVM . java to improve clarity of error messages
added additional checks for newline characters in LineReaderImpl . java to ensure proper handling of additional line endings
replace ` List < String > ` with ` Set < String > ` for ` hashCodes ` and ` contentHashes ` in multiple classes to
added a check to prevent rendering when there are no vertices in the mesh to optimize performance by avoiding unnecessary processing when no vertices are available
updated verification methods in IncorectBindingPuzzleFixedTest and added error handling in DescriptiveMessagesOnVerificationInOrderErrorsTest to improve
replaced ` FileUtil . createData ( root , menuPath ) ` with ` FileUtil . createFolder ( root , menuPath )
truffle : fix typo and remove unused import .
refactor JsonObject class to improve code readability to enhance maintainability and facilitate future updates
updated idle timeout condition in SelectChannelEndPoint . java and added max idle time check in HttpConnection . java to ensure proper handling of idle time
fix misalign patch in farmlandblock . cansustainplant ( ) ( # 4698 )
added a new table ' SALTEDTABLE123 ' and updated the database metadata query to include multi - tenant support to enhance database metadata retrieval
updated SimpleDateFormat to use Locale . US in HttpCookie . java and added a new class B6791927 . java for cookie validation to
removed multiple redundant calls to db . close ( ) in DbHelper . java to improve resource management and avoid potential null pointer exceptions
increase timeout for batch message listener test
[ gr - 16905 ] only generate linear scan phase when tracera be enable .
use keybindingrepository for listen for save _ database , save _ all and save _ database _ as
refactor ObjectMapper initialization to use a static block for line separator setting to ensure consistent line separator handling across different operating systems
fix handling of window path in nativeenvironmentrepository
added Application initialization and shutdown logic to multiple test classes to improve resource management and ensure proper cleanup of the Application instance
[ java ] do n ' t validate record if they do n ' t exist in the archive .
[ hotfix ] [ test ] use errorgroupname instead of groupname in itsystemtest
remove test fuzz optimization for travis
do n ' t use shared preference in cameramanager , because it ' s not thread safe .
refactor string comparison from ` equals ( ) ` to ` equals ( ) ` for better readability to improve code clarity and reduce potential
( chore ) camel - mdm : fix mdm match link test
updated JUnit 4 annotations to JUnit 5 annotations in AuthenticationSuccessListenerTests . java to align with the latest testing framework conventions and improve
pdfbox - 4892 : use string . indexof instead of new . arraylist ( ) in settypes
refactor TypeUtil methods for improved readability to enhance maintainability and facilitate future updates
updated trigger time formatting to use LocalDateTime for consistent timezone handling to ensure accurate date representation across different locales
added a new method ` maybeCreateAbstractMethodErrorThrower ` to ` MethodHandleResolver ` for handling abstract method errors to improve error handling
camel - 15836 : camel - simple - add support for ognl syntax such a body etc .
removed redundant check for empty ` toExplore ` in ` AbstractParser . java ` to streamline the code by eliminating unnecessary
camel - jclouds : fix copy from inputstream to outputstream for camel - jclouds
camel - jbang - disable camelconsultest until the osgi bundle be release
added a new test class ` CheckACC _ STRICTFlagOnDefaultMethodTest ` and modified the condition in ` Check . java `
[ java ] use aeron . context . drivertimeoutms in channelvalidatortest to make test more robust .
added a new file ` FileExtensions . java ` with constants for CLANG source and header files to provide a centralized set of file extensions
replace ThreadLocalDateFormat with a ThreadLocal < DateFormat > for cloning to improve performance by avoiding unnecessary object creation
updated VMDeprecatedOptions . java to replace deprecated options with updated ones to improve code clarity and remove deprecated features
added a displayName property to the Pac4jBaseClientProperties and updated related classes to utilize it to enhance client configuration flexibility by
replace RuntimeException with a new EarlyTerminationException class and update its usage across multiple classes to improve error handling by providing a standardized exception for
updated return statement formatting in TraceFunctionAroundWrapper . java to improve code readability and consistency
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 435 . add
fix npe in forgeeventfactory . getcapabilities ( ) when parent be null
wallettool : remove keycrypterexception from catch block
added @ Deprecated annotation to SubmitOrderedCompletionService . java to indicate that the service is outdated and should no longer be used
updated the length calculation in HyphenationTree to correctly adjust the original length after creating a new Hyphenation instance to ensure accurate representation of
add a delay to make sure we do n ' t get an endless loop
add multichat operation set definition and gibberish protocol implementation . related issue : issue # 241 , issue # 244 ,
updated the string constant for PARAMETER _ NEEDS _ TO _ BE _ NAMED in ParameterBinder . java to correct formatting to ensure cl
added a new boolean variable ` providersChanged ` and initialized it to false in ` ConfigurationManager . java ` to track the state of provider changes
added a method to quote identifier tokens in SemanticAnalyzer to ensure proper formatting of identifier tokens based on configuration settings
pdfbox - 4892 : skip noname postscript font , a suggest by michael mccandless
updated type casting and suppress unchecked warnings in SolrResourceLoader . java to improve type safety and eliminate unnecessary type casting
updated the hit detection logic in Window . java to handle nested actors correctly to improve the accuracy of hit detection by ensuring all nested actors are processed
added a null check for appManifest before retrieving the target SDK version to avoid potential NullPointerException when appManifest is null
refactor ConfigurationMetadataGenerator to use a dedicated method for updating metadata to improve code readability and maintainability by reducing redundancy
added userName property and its getter / setter methods to Driver , HiveSemanticAnalyzerHookContext , and its implementation to allow users to specify a
camel - 15836 : camel - xslt - add setter to allow customization of the xslt component .
added HadoopShim support to ContainerRunnerImpl , TaskRunnerCallable , and TestFirstInFirstOutComparator classes to enhance compatibility with Hadoop shim
removed unnecessary variable assignments for firstId and secondId in ShadowDownloadManagerTest . java to streamline code and improve readability by elimin
added null check for ` request . getMappingData ( ) . context ` before logging access to prevent potential ` NullPointerException ` when ` context ` is
log4j2 - 1343 fix the timing issue in the throughputlogger
updated VM version checks in CompilerConfigFileWarning and ConfigFileWarning to use Platform . isDebugBuild ( ) to improve clarity and ensure diagnostic options are
refactor MeterStatisticsManager to use a local variable for statistics model mapping to improve code readability and maintainability by reducing redundancy
updated logback configuration handling in FrameworkLauncherExtended . java to ensure proper resolution of the logback system property
updated method signatures to use @ NotNull annotations and renamed DefaultCookieValueManager to NoOpCookieValueManager to improve null safety and clarity in
replace ` Escaper . BASH _ ESCAPER ` with ` Escaper . SHELL _ ESCAPER `
refactor container initialization in tests to use try - with - resources syntax to ensure proper resource management and avoid potential memory leaks
rename the test class from TestLucene50FieldInfoFormat to TestLucene60FieldInfoFormat to reflect the new version of the field info format
updated the closing bracket position in RelativeDateFormatTests . java to improve code formatting consistency
added a method ` generateShieldAddress ` to ` RpcApiService ` to handle shield address generation to enable the service to retrieve and
change return type of readConsoleInput methods from byte [ ] to String across multiple terminal classes to improve input handling by returning a string instead of
updated regex patterns and initialized sRunFlavor in TestStabilityRule . java to improve matching accuracy and maintainability of the code
updated the handling of fragment limits in DefaultSolrHighlighter and added a test for preserving multi - valued fields in HighlighterTest to ensure correct
updated the ` tryToLogin ` method to accept username and password parameters to enhance the authentication process by allowing credentials to be set during the login
removed unused imports and updated entity handling logic in HandlerSceneEntityDrownReq and PacketSceneEntityDrownRsp to improve code clarity
no effective change - code cleanup - remove unnecessary whitespace
removed the wrapping of a collection in the update method call to simplify the method signature and improve code readability
added logging functionality to handle unknown currencies in BTCEAdapters . java to improve error handling and debugging for currency issues
do n ' t re - create the subscription if we do n ' t have the clientid
pdfbox - 4892 : adjust default value , a suggest by valerybokov
updated ` startController ` method to accept a boolean parameter for tenant isolation and added tenant creation methods in multiple test classes to enable or disable tenant
updated the return statement in HasSettings . java to directly cast the response value to a Map to simplify the code by eliminating unnecessary builder
added a check to ensure attrs size is greater than zero before validating it to prevent potential ArrayIndexOutOfBoundsException when attrs size is zero
added optional project properties to ` AbstractIjProjectConfig ` and refactored ` IjProject ` and ` IjProjectWriter `
updated the documentation from " Experimenal " to " Experimental " in HiveSessionProperties . java to clarify that the optimization
added tests for resolving effective acls with user details in the GrantedAuthorityEffectiveAclsResolver to ensure correct functionality of the resolveEffectiveAcls
use getsolvedjavalangobject ( ) instead of new classdeclaration ( object . class ) in javaparsertypedeclarationadapter
added button count management logic to XToolkit . java to ensure that the number of buttons does not exceed a defined maximum limit to improve user
updated import statement for AssertEquals in RedefineInterfaceCall . java to use the correct package for assertions to ensure compatibility with the correct test library
added a new ` MessagePackFactory ` class and modified ` MessagePack . java ` to use it for creating ` MessagePackPacker `
add is _ desert and is _ cave tag to bicontags , fix # 4698
renamed methods from ` present ` to ` draw ` across multiple screen classes to improve clarity and consistency in method naming conventions
added conditional checks for horizontal layout and updated UIID assignments based on element type and button type to ensure proper layout behavior based on horizontal state and
do n ' t use doi _ url _ pattern matcher to detect old url
replaced the check for AndroidMultiTouchHandler with hasMultitouch in AndroidInput . java and AndroidLocklessInput . java to simplify
[ java ] close commit position counter in clustered service agent .
add test case for @ idclass for @ queryusersite ( id = ' ' id ' ' )
refactor port extraction in HttpConverterRegistrar to use URL and handle malformed URLs to improve robustness and error handling for IP address parsing
server : fix listvirtualmachines api - do n ' t list all host _ id for storage _ offering and storage _ offering
replaced file input handling with file length method in NRTCachingDirectory . java to improve clarity and efficiency of file length management
refactor JavascriptCompiler to improve class structure and exception handling to enhance maintainability and readability of the code
removed synchronized keyword from UISettings class and modified store method to synchronize on the UISettings class to improve performance by reducing unnecessary synchronization
added a check to return early if native text input is supported and focus is present to optimize performance by avoiding unnecessary processing when text input is
[ hotfix ] [ spanner - io ] add emulator specific error message when retry on aborted transaction
code cleanup : use diamond operator in test
changed the type of the array from double to short in ObjectInputStream . java and added a new class CloneArray . java with a test for cl
replaced the method for retrieving the nonce claim from ` getClaim ` to ` getStringClaim ` and modified the logging behavior for nonce validation to
added a condition to check if a field is a relationship field in DCInputSet . java to ensure proper handling of relationship fields in data processing
added support for server slogan capability and updated related database queries to enhance user capabilities management and improve code clarity
refactor conditional logic in DrawerActivity to improve clarity and structure to enhance readability and maintainability of the code
updated the test to use ` System . out . println ` and ` Assume . assumeNoException ` instead of ` fail ` to improve test
added a check to return early if no missing symbol events are found to optimize performance by avoiding unnecessary processing
add test case for numberformatexception in stringhelpertest
added a final modifier to dataProviderHolder and a warning log for cases where the data provider returns an empty array or iterator to improve clarity of
camel - core - maven - plugin : replace usage of collections . empty _ map , collections . empty _ set , collections . empty _ list
add miss selection style for node with selection style in mapinterpreter
corrected the parameter name from ' mass ' to ' restitution ' in the setRestitution method to ensure the correct variable is
added a new file ` AutoFtpActivity . java ` that implements an FTP test functionality to facilitate automated testing of FTP
refactor the handling of TOK _ TABNAME and StringLiteral types in BaseSemanticAnalyzer . java to improve clarity and support for
added getter and setter methods for component state management in multiple classes to enhance functionality for managing component state in the UI components
added a new class RemoteExecutionEnabled to manage serialization and deserialization of Boolean values to provide a mechanism for enabling or disabling remote execution based
pdfbox - 4892 : fix typo , a suggest by valerybokov
replaced FileReader with InputStreamReader and added UTF - 8 encoding suppression to improve code readability and adhere to character encoding standards
added a call to assertShadowVariablesAreNotStale in AbstractScoreDirector . java to ensure that shadow variables are not stale during processing
updated the configuration key for semi - join conversion from " hive . enable . semiJoin . conversion " to " hive . optimize . semiJoin
added SLF4J logging to multiple DatagramPacketDecoder , DatagramPacketByteArrayDecoder , DatagramPacketByteArrayEncoder , DatagramPacket
replaced ` removeFile ` with ` removeDirectory ` in ` SynchronizeFolderOperation . java ` and updated file handling in ` FileDisplay
added assertions to verify the presence and existence of the transaction hash in the PollingTransactionReceiptProcessorTest to ensure that the transaction hash is correctly
mark ISchemaRegion as deprecated and update test method names in SchemaRegionBasicTest to reflect the new functionality and improve test clarity
throw an illegalargumentexception if the new format do n ' t have a samplemimetype
replaced calls to ` notify ( ) ` with ` notifyAll ( ) ` in QueryExecutorImpl and AbstractJdbc23PoolingDataSource classes
added ` @ JsonCreator ( mode = JsonCreator . Mode . PROPERTIES ) ` to the ` @ AllArgsConstructor ` annotation to enable JSON
added SQLFeatureNotSupportedException handling for creating an index on a view in MetaDataClient . java to indicate that creating an index on a view is unsupported
added a new class ` Website ` and a corresponding test method ` testJavaNetTypesPopulation ` in ` PopulatorImplTest ` to
added JUnit setup method to BSFormatterTest . java to set the default locale to US to ensure consistent test execution across different locales
add a warning message when a badly download jar file be detect .
updated assertion in MultiPartParsingTest to use Matchers for string comparison to improve readability and ensure case - insensitive comparison of expected values
added checks for single and VariableExprToken in SimpleExprGenerator . java to ensure proper handling of variable expressions in the parameter analysis
added a volatile boolean field ` createdVertx ` and modified the condition to check it to ensure ` vertx ` is only initialized when it
updated the writeAttributes method to accept a NodeModel parameter instead of null to ensure the correct node model is used for attribute writing
updated log messages from " Synchronized " to " Synchronized " in SynchronizeFolderOperation . java and added null checks in FileDisplayActivity
added a boolean field ` ignoredReadStatus ` to the ` Entries ` class and updated its usage in ` CategoryREST ` and ` FeedREST
replaced usage of MavenTestingUtils with MavenPaths for target directory resolution in multiple test classes to improve code clarity and maintainability by using
added validation for URI and MetaData register DTOs in the RegisterServerConsumerExecutor to ensure only valid data is processed and avoid processing errors
updated the condition for determining if a sound is playing in GwtMusic . java to ensure sound playback only occurs when the sound is not
added a new permission ` PERMISSION _ ADMIN _ SUDO _ AREA ` to the permissions check in ` MainCommand . java ` to allow
replaced ImmutableMap with HashMap for query options in ServerRequestPlanVisitor . java and updated query options handling in QueryRunnerTest . java to improve
updated file name comparison logic in ReloadableJava11ParserInputFileObject , ReloadableJava17ParserInputFileObject , and Java8ParserInputFileObject
updated assertions in ResourcesTest to use variables for emojis and text to improve readability and maintainability of test cases
replaced the ` NMTWaitForDataMerge ` method with ` NMTOverflowHashBucket ` and added two new native methods to
[ flink - 14905 ] [ e2e ] introduce javatypeerializersnapshot interface to encapsulate e2e serializer
updated AddressResolverOptions to use DEFAULT _ ROTS _ RESOLV _ OPTION for configuration management to improve clarity and maintainability of
added a call to ` super . __ associate ` in ` RequestRockerTemplate ` and created a test for it in ` RequestRocker
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated XML resource paths from " liquibase / parser / core / xml " to " www . liquibase . org /
move commonmimetypelocatortypelocator from source to test so it can be run from a different package .
replace ` INIT ` state with ` NOT _ REQUIRED ` in ` RepositoryVersionState ` and related classes to ensure that the ` repo _ state
updated the comparison logic in GenerateChangeLogTask to include additional comparison types to enhance the accuracy of comparison results based on specified schema types
[ hotfix ] [ test ] use testng instead of junit in testbackwardanoamlyfunctionutils
added a new file ` ProgressiveJPEGTest . java ` that implements a JPEG rendering test using ` SpriteBatch ` and ` Drawable `
updated alpha handling in MaterialLoader to use material ' s setFloat method and improved variable assignment to enhance clarity and maintainability of the
improve error message when building native - image on window
added a null and length check before setting the size in the Label class to avoid potential NullPointerExceptions when the text is empty
modify the value read from readVarInt ( ) to use a modulo operation to ensure correct handling of integer values within the specified range
changed PushUtils and ThumbnailsCacheManager classes to be final and added private constructors to ensure immutability and prevent instantiation of utility classes
replaced the calculation of the ' length ' variable with a direct call to ' getLength ( ) ' in RocketPanel . java to simplify
simplified the method call by removing unnecessary casting to MockDirectoryWrapper to improve code readability and maintainability
updated the file path pattern in the componentPresetDao . load method to ensure the file name is correctly formatted for processing presets
added accessibility checks in TaskbarStashController and improved variable naming in ActivityContext and FloatingIconView to enhance accessibility handling
updated the initialization of ` homeNode ` to use ` RefreshTask . getNodeId ( ) ` instead of ` Args . getInstance ( ) .
add a test case to make sure we can target jdk 1.5
( chore ) camel - quota : replace powermock with mockito in test
added customizable output streams to TestSchemaToolCatalogOps . java to improve error handling by allowing standard output to be set
added DFSClient parameter to FanOutOneBlockAsyncDFSOutputSaslHelper and updated related methods to enhance functionality by integrating DFS
updated MongoQueryMethod and related classes to accept RepositoryMetadata as a parameter to enhance query functionality by utilizing repository metadata for query execution
refactor the Digester class to use a wrapper class for the EntityResolver and EntityResolver2 wrappers to enhance flexibility in handling different entity
removed duplicate import statements and added new constants in MetaDataEndpointImpl . java to streamline the code and improve readability by eliminating red
increased ALLOWED _ REPEATED _ DEADLOCKS from 5 to 10 and added deadlock retry logic to improve transaction handling
refactor variable names for consistency and clarity in BarChartActivity , LineChartActivity1 , and YAxisRenderer classes to improve code read
added methods to check printable characters and valid system names in FsUtils . java to enhance character validation for better handling of system names in the
rename ` selenide . in ` method to ` selenide . using `
add plugin configuration option to project building request so that plugins can be process by default .
[ fix ] fix divide by zero error in unit test
[ integration ] fix integration - tests for google - cloud - vision
updated return values in ModeledConnectionRecord and ActiveConnectionRecord classes to return null instead of a placeholder value and added remote host retrieval in Auth
[ ds - 3952 ] add admin _ button attribute to request for community list
added thread counter for long and short compaction in CompactSplit . java to improve thread naming for better debugging and monitoring
replaced ` getApplication ( ) . getPackageName ( ) ` with ` resources . getResourcePackageName ( R . array . wallpapers ) `
updated the method to retrieve players in a plot visible list using a new helper function to improve code clarity and maintainability by encapsulating player
updated multiple Java files related to AndroidManifest , ResName , ShadowMediaPlayer , and ShadowActivity to improve code organization and maintainability
modified MlibOpsTest . java file to improve test coverage for MlibOps functionality
replaced hardcoded string " com . sun . management . internal . OperatingSystemImpl " with a constant OPERATING _ SYSTEM _ IMPL
updated attribute name from " referencedContainer " to " ReferencedContainer " in SchemeGenerator . java and added a new test method in SchemeGenerator
replaced conditional key and iv initialization with direct calls to EncryptionUtils for key and iv to simplify code and improve readability by eliminating
added stability annotation to WorkProfileTest . java to address issue b / 243688989
added a check to skip processing if the bucketing version is not set to optimize performance by avoiding unnecessary processing when bucketing version is not
replaced direct call to setCursorPosition with a call on the input object to ensure proper cursor positioning is applied to the input object
refactor LockFreeBucket to be an abstract class and introduce LockFreeBucket _ FinalFields _ CacheLinePadding to improve code structure and
add tpstats command to nodeprobe to print thread pool stats
updated max bitrate setting to include user preferences in ExternalPlayerActivity and PlaybackController to ensure correct bitrate settings are applied based on user
refactored debug flag logic in ZipkinHttpSpanExtractor and added new test cases in TraceFilterTests to improve clarity and functionality of
add getuserpaymentaccounts ( ) to createofferdatamodel and duplicateofferdatamodel to avoid create duplicate offer account
simplify the dart completion contributor ' s right - aligned ( # 4698 )
added a method to set the project in LauncherUtils to enable dynamic project configuration for improved user experience
updated the JsBundle and JsBundleBuilder classes to include ProjectFilesystem as a parameter to enhance the build process by allowing the root path to the
refactor multiple Java classes related to EnvelopeStyle , Databinding , DatabindingMode , MessageContext , and PropertySet to improve
refactor MetricsDSLContext class for improved readability to enhance maintainability and clarity of the codebase
removed the VersionConfig interface and modified the VersionBuckConfig class to remove its implementation and simplify the code structure
added a try - catch block around the bindShadowClass method call to handle potential TypeNotPresentException during shadow class binding
changed the visibility of the ` validateTypes ` method from static to public and updated the exception message format to improve accessibility of the method and
fix : update gapic - generator - java with mock service generation fix ( # 269 )
added SLF4J logging to SimulationStatus class to facilitate better debugging and monitoring of simulation status changes
updated VERSION _ POSITION _ Y and VERSION _ FONT from 138 to 150 and changed the font from Font . SANS _ SERIF to
added a runLater ( ) method to the notifications addition in UserInterfaceComponentImpl . java to ensure notifications are added asynchronously to the UI thread
updated method calls in AdditionalAnswers . java and ReturnsElementsOf . java to improve mock behavior to enhance clarity and maintainability of the code
corrected a typo in the error message for dropping partitions to improve clarity and accuracy of the error message
added a test method for LineFileDocs in BaseStoredFieldsFormatTestCase to ensure indexing functionality works correctly with line - file documents
added a method to retrieve the version code from MainApp and updated references in FeatureList and WhatsNewActivity to utilize this method to
camel - 8705 : avoid ambiguity in beaninfo . requestbody ( ) if the body parameter be not an instance of string
replace occurrences of ` getContentDispositionFilename ` with ` getSubmittedFileName ` in ` MultiPartInputStreamTest . java ` to ensure consistency in filename
added bufferOwned flags and updated buffer initialization logic in IndexBufferObject and VertexBufferObjectWithVAO classes to improve buffer management and prevent
added a transition for the " forgotPassword " action to the login form in PasswordManagementWebflowConfigurer to enhance user experience by allowing
[ hotfix ] [ javadoc ] fix typo in jerseyclientconfiguration
int - 1343 remove ' . class ' reference for the charstreamreadingmessagesource and charstreamwritingmessagehandler bean definition .
updated variable names from ' s ' to ' o ' in multiple test files and changed return types from Collections to List to improve code clarity
added methods to manage column and row counting in StringDict and Table classes to ensure proper handling of empty arrays and maintain column and row counts
deprecated the ` @ Deprecated ` annotations in ` Container . java ` and implemented ` AutoCloseable ` in ` GenericContainer . java ` ,
updated logging level from info to error in MediaInfo . java and modified test methods to throw ConfigurationException in RendererConfigurationTest . java to improve error
added a new option ` schemapattern ` to the ` BundledDriverDatabaseConnector ` and ` PropertiesDataSourceDatabaseConnector ` classes to allow
bouncy castle : return an empty byte array if tlsession be null .
refactor ratio calculation and bitmap creation in AndroidGraphics . java to improve clarity and correctness in calculating bitmap dimensions
refactor Base64 encoding methods for improved efficiency to enhance performance and reduce memory usage
sulong : add ` ` read ' ' and ` ` readi64managed ' ' specialization for sulong and sul
simonstewart : fix the test to pass on the iphone
refactor FlowBuilder and FlowJobBuilderTests classes to improve code organization and maintainability
replaced ` ResName ` with ` int ` in ` AttributeResource ` and related classes to streamline resource management by using a unique identifier
[ type : refactor ] resolve tl file from context file
( chore ) camel - simplereactive - elasticsearch : fix test setup order
added a loop to handle type variable binding in mmm Attr . java and created a new class T6450290 . java with generics
added logging level configuration to LoggingFlags and setLoggingLevel method in LoggingOptions to allow customizable logging levels for better debugging and monitoring
added logging statements to track the removal of items from the database and modified the method to accept a Collection instead of an Iterable to improve traceability
added ` allFilesOption ( ) ` methods to ` FileActivity ` , ` FileDisplayActivity ` , and ` PreviewImageActivity ` to
added deprecated methods for forEachOperation and hasMatching in MutationOperationGroup . java to improve code clarity and prepare for future removal of deprecated features
update calculation of numPredictiveAppCols based on phone type to ensure correct number of app columns based on device type
updated String initialization to use UTF - 8 encoding to ensure proper handling of character encoding in string processing
added a new class ` RequestMatchers ` for handling request matching logic to provide utility methods for combining between multiple request matchers
simplify code ( no need to check for applet )
update height and width calculations in ProgressBar . java to include bgBottomHeight and bgRightWidth to ensure proper positioning of UI elements in the
[ native ] fix file path for external function definition
changed variables in BruteArgumentMoverHandle from non - final to final and modified the permuteArgs method to accept additional parameters to
added a condition to check if the handler state is invalidated in the gesture handling logic to ensure proper handling of gesture states when the handler is invalidated
updated layout calculations for landscape and portrait modes in CellLayout and DynamicGrid classes to improve layout accuracy and consistency in layout calculations
added a condition to check if the file is " / robots . txt " in the HttpRobotRulesParser class to ensure proper handling of robots
[ netbeans - 4892 ] use static resource instead of hard - coded image path
updated subscription keys from " continue " and " close " to " createWorld " and " return " in AdvancedGameSetupScreen . java to
updated UDFOPDivide to include a check for 0.0 values in null checks to ensure correct handling of zero division by zero
refactor code formatting and improve clarity in job execution logic to enhance code readability and maintainability
updated filter configuration to use ` FilterProcessUrlRequestMatcher ` instead of ` filterProcessesUrl ` to improve clarity and flexibility in handling
added onDestroy method to unbind the uploadServiceConnection in ShareActivity and ContributionsActivity to ensure proper resource cleanup during activity destruction
corrected the variable name from ` thumbNail ` to ` thumbnail ` in ` WallpaperPickerActivity . java ` to ensure consistency
refactor multiple Java classes to improve code organization and consistency to enhance maintainability and readability of the codebase
added a request timeout configuration in RaftServerConfigKeys . Rpc to ensure proper handling of request timeouts in the Raft server configuration
updated logging level from error to debug for time index degradation and added a new tsFileResource to the sealedTsFileResources collection
added system properties setting to MavenModuleLoader to enhance configuration flexibility by allowing system - specific settings
added server metrics for readiness checks and refactored the ` getReadinessStatus ` method to use instance methods to improve metric tracking for read
add miss modelhandler registration for animatedtorch ( fixes # 399 )
added null check before closing writer in FileHistoryCache . java to prevent potential NullPointerException when writer is not initialized
added a method to retrieve Hive configuration from a directory in UtilsForTest . java and updated multiple test classes to use this method to improve configuration
added " Muting Users " link to the FeaturesActivity to provide users with relevant information
added a configuration option to disable direct method handles in the System class to improve performance by avoiding direct method references
hbase - 25819 splitonleadingvarcharcolumnspolicy should extend steppingregionsplitpolicy instead of constantsizeregionsplit
[ hotfix ] [ yarn ] remove duplicate code for add lib folder and plugins folder to ship file
updated method calls in BuildTranscriptHMM and TrainerDictionary to retrieve pronunciations directly from the word object to improve code
removed unnecessary newline characters from JSON strings in JsonUtilsTest . java to streamline JSON output for better readability
added extra data for tweet ID in TimeLineCursorAdapter and TimelineArrayAdapter , and modified Compose to retrieve notiId from intent
log a warning when the ring buffer data be lose for a reliable topic .
create noclassesfoundtoanalyzeexception to provide good error message
replaced import of java . security . Key with java . security . PublicKey in KeyFetcher . java to utilize public key functionality for impro
replaced the declaration of isIncompatible with a new boolean variable isIncompatible in DLNAResource . java to ensure proper handling of incompatible resource
updated the method signature of ` createAccount ` to use ` AccountCreateContract ` instead of ` Account ` to improve clarity and specificity
pdfbox - 4892 : avoid npe , a suggest by valerybokov
resolve http : / / issues . apache . org / activemq / browse / amq - 2690 - remove useless setp
updated the default STAR _ TREE _ FORMAT and STAR _ TREE _ FORMAT _ VERSION to " OFF _ HEAP " and modified related logic
refactor title handling in FeedUpdateService to limit the length of the title to 2048 characters to ensure that the title does not exceed the maximum
initialized the ` previewPanel ` variable in ` JColorChooser ` and updated its initialization logic in ` BasicColorChooserUI ` to ensure proper
changed logging level from info to debug in DefaultBuildExtensionScanner . java to reduce log verbosity and improve performance during extension checks
android tile bitmap : do n ' t create bitmapfactoryoptions if the tile be n ' t reusable
added a layoutParams field and a method to retrieve its value in FakeView . java to facilitate access to layout parameters for better
added a check in DefaultCursor to throw an IllegalStateException if the cursor is already closed to ensure that the iterator method is called on a closed cursor
pdfbox - 4892 : improve performance , a suggest by valerybokov
ignore jmsclienttest until we can fix it
added a private ` String ts ` field with getter and setter methods in the ` Message ` class to provide a way to access and modify the
[ opengrok - 3357 ] add log for exception while process request ( # 3358 )
changed the access modifier of the AbstractExecutor class from package - private to public to allow access to the class from other packages
[ graphhopper ] use pmap instead of ghrequest to remove legacy parameter
removed the ' public ' access modifier from multiple test classes to enforce encapsulation within the test package
refactor CSRF setting into a separate method to improve code readability and maintainability
lombok . launch . shadowclassloader do n ' t work in the bootstrap environment , so we do n ' t have to
mondrian : add ` ` numericdisabled ' ' flag to the rule sheet listener to determine if numeric be disable
changed log level from info to debug for default value logging to improve logging granularity for debugging purposes
added null checks and modified controller management logic in Lwjgl3Controller and Lwjgl3ControllerManager to improve connection handling and
updated imports in WeldFactory and WeldFactoryTest to use the new Cucumber library structure to ensure compatibility with the latest Cuc
refactor port forward saving logic to use HostDatabase for improved clarity to enhance code readability and maintainability by reducing redundancy
added a new property ` SHOULD _ SNAPSHOT _ DATA ` to ` GlobalConfiguration ` to control whether Liquibase snapshot data should
added a null check for the file path before scheduling a job in SyncedFolderObserver . java to avoid starting the job if the path is
refactor LocationMarshaller to improve code structure to enhance maintainability and readability of the code
removed trackpad motion event checks in StatusBarTouchController . java and modified swipe conditions in OtherActivityInputConsumer . java to simplify gesture handling
refactored ` VectorReader ` from an interface to a regular class and removed the ` VectorReaderImpl ` interface to simplify the code structure
replaced ` ArgumentMatchers ` with ` Matchers ` in multiple test files to simplify import statements for better readability and maintainability
updated method calls to use getRelativePath ( ) directly instead of getRelativePathName ( ) to improve clarity and consistency in path handling
updated the ` completeMapAndTransformRow ` method to accept ` RecordReaderFileConfig ` instead of ` RecordReader ` across multiple classes to
added a null check before attempting to instantiate the extractor in ` ControllerMethodInvoker . java ` and annotated ` Param ` and ` Params ` classes
cloudstack - 5293 : set default max secondary storage for volume only for project and domain
add potion shift event to allow modded potion effect to be pick up at the end of the screen .
added a deprecated constant ` COLD _ READS _ TO _ OMIT _ KEY ` and removed its usage from ` uncheckedOptions ` to
added a call to ` leech . stop ( ) ` in ` ClientTest . java ` to stop the leech process to ensure proper
[ issue # 4892 ] fix the bug of pop message metric ( # 4893 )
refactor KeyboardAddonSettingsFragment to improve code organization to enhance maintainability and readability of the code
added JUnit @ Ignore annotation to ShadowDateUtilsTest . java to temporarily disable tests that are not ready for execution
polish ` ` fix race condition in mongoreactivereactiveautoconfiguration ' '
added upgrade request handling in UpgradeConnection and corresponding unit tests in ClientConnectTest and JettyTrackingSocket to enable tracking of upgrade requests and responses
added a timeout feature to the AndroidImplementation class to enable configurable connection timeouts for improved user experience
refactor getUserAccessPermissions and getTeamAccessPermissions methods to iterate through all repository permissions instead of using RpcUtils to simplify permission retrieval and improve
added a new test method ` testQuotedCastExpression ` to ` SelectTest . java ` to validate SQL parsing and deparsing for quoted cast
updated assertions to differentiate between writable and executable checks based on the operating system to ensure correct file accessibility checks based on root privileges
added logging functionality and refactored executor selection logic in FixedThreadExecutor . java to utilize dynamic properties to improve flexibility and control over
added null check for the field variable before processing to prevent potential NullPointerException when field is null
updated method return types and imports from CasEventListener to InitializingBean across multiple configuration classes to improve type specificity and ensure proper bean initialization
refactor animation end handling into a separate method ` endAnimation ( ) ` in ` ShadowAnimation . java ` to improve code readability and
added a custom close method to the DeflaterOutputStream for proper resource management to ensure that the deflater is properly closed to prevent resource leak
added a new file ` gsp001 . java ` that implements a JVMTI test for retrieving system properties at the early phase agent
fix : do n ' t generate bean definition for bean declare by @ beandefinitioninjectprocessor .
[ jme ] cameracontrol , cameranode , lightnode now export the cameraproducer / cameraprodu
refactor PopupNotificationPanel to improve popup window handling and error logging to enhance code clarity and ensure proper disposal of the popup window
replaced custom NoInstanceException and InvalidInstanceException classes with a single InferenceException class to simplify exception handling and improve code maintainability
added a method ` getFeatureValue ( ) ` to the ` FeatureField ` class to provide access to the ` featureValue ` value
changed the parameter type of the after method from int to long to ensure compatibility with larger timeout values
added ` onBuild ` and ` executionDriver ` fields with their respective getter and setter methods to ` ContainerConfig ` and ` Info ` classes
added conditional logic to set icon based on the text direction in Toolbar . java and adjusted x - positioning in FlowLayout . java to
added a boolean flag ` enablePositionIncrements ` to the ` StopFilterFactory ` class and modified the creation of the ` StopFilter `
updated the initialization of ` internetAddress ` in ` EmailsTest . java ` and ` SystemErrorEmailReportTest . java ` to use
added a new variable ` mTryShareAgain ` and initialized it to false in ` FileActivity . java ` to manage file sharing behavior more
added support for determining the use of TTY name based on the properties file and version to improve compatibility with different JANI native pom versions
replaced the variable ` bytes ` with ` bytesSize ` for better clarity to improve code readability and maintainability by using a more
replaced direct assertions with Awaitility assertions in Issue410Tests . java to improve test reliability by allowing asynchronous operations to complete
replaced multiple URL constants with a single API _ BASE _ URL in EaseeBindingConstants . java to streamline API URL management and
[ hotfix ] [ kafka ] [ test ] increase read timeout for kafka container startup
updated the matchers in SearchResultMatcher . java to use a more generalized method to improve readability and maintainability of the code
added SSL context and certificate validation in OkHttp . java to enhance security by verifying client and server certificates effectively
refactor button long click handling in NavbarButtonsViewController and update TaskbarNavButtonController to use a new method for button type
added a new file ` HyperlinkFormula . java ` and modified ` StringPtg . java ` to use ` int ` instead of `
added optional fields for stdout and stderr in ShellStep . java and improved null check for workingDirectory in Escaper . java to enhance
increase timeout for asyncappendertest to avoid flakiness
updated method calls in ` AbstractDatabase ` to use ` objectName ` instead of ` tableName ` and added a new ` escapeDatabaseObject ` method
added a boolean variable ` inputChanged ` and updated validation logic in ` MaterialRenameDialog . java ` to handle input changes more effectively to ensure
added a new test for state change functionality in ShadowDisplayTest and implemented the setState method in ShadowDisplay to ensure that state changes apply to other
[ geos - 8470 ] make dispatchers more flexible by use direct invocation service
[ web ] fix for ctrl + x and ctrl + y in web
updated SQL queries in PgDatabaseMetaData . java to conditionally include pg _ depend dep and pkic based on server version to ensure compatibility with
[ hotfix ] fix checkstyle violation in queuechannel
removed IOException from the method signature and refactored URI creation for better clarity to improve code readability and maintainability by using a more
added logic to handle application monitoring based on the presence of " JENKINS _ NODES _ SUFFIX " to improve monitoring capabilities
refactor attribute resolution in HeadersBeanDefinitionParser and add tests for secure headers in HttpHeadersConfigTests to improve attribute handling and ensure correct response based
log4j2 - 1343 addendum : do n ' t throw eofexception if first byte be negative at offset
nacos : shutdown nacos registry on destroy ( )
camel - mybatis : fix switch / cases indentation see camel - 14540
refactor GoAwayGenerator , GoAwayBodyParser , GoAwayGenerateParseTest , and GoAwayGenerateParseTest to
refactor AuditEvent initialization and JSON output formatting in AuditEventTests . java to improve code readability and maintainability
added checks for floating - point errors and changed the return value of ` Math . cbrt ` to ` Math . cbrt (
fix default folder path in forge world edit
refactor code to store the absolute path in a variable before adding it to the builder to improve readability and maintainability of the code
added multiple instances of ` PointRangeQuery ` assertions in ` TestPointQueries . java ` to ensure consistency and correctness of point range comparisons
hbase - 25836 addendum fix testhfilecleaner for testhfilecleaner
added a condition to check if the download file name matches the original file name before setting the file label to ensure that the file name is only
do n ' t swallow exception in jedisclustercommand # execute ( )
[ hotfix ] [ table - planner - blink ] set chainingstrategy to always for rowtimeminibatchassgineroperator
replaced RegExpBasedFilterInvocationDefinitionMap with PathBasedFilterInvocationDefinitionMap in FilterInvocationDefinitionSourceEditor . java and added new test cases
updated benchmark implementations to use dynamic hash map size and added baseline and test methods for different data types to improve performance and reliability of the benchmark
added a new HashMap instance for G _ SCH _ B in HybridPlotWorld . java to initialize the G _ SCH _ B
added checks for empty fields and refactored identifier handling in GroovyEngine . java to improve code robustness and clarity when processing method identifiers
make sure angle be not draw in geogebra ' s dependent number
added configuration options for TCP keep - alive and read socket timeout in HiveConf . java and modified TServerSocket instantiation in HiveServer . java
renamed the method ` getRenameEmptyFiles ` to ` isRenameEmptyFiles ` to clarify the method ' s purpose to accur
no effective change - code cleanup - remove unused import
refactor code to use lambda expressions instead of anonymous classes for improved readability to enhance code clarity and maintainability by using modern
createvpc : do n ' t return success for success = false
updated the calculation of ` windowAlpha ` to use ` Math . max ` instead of ` Interpolator . ACCEL _ 1 _ 5 `
updated fatal error message to reference Spring Security 4.0 schema instead of 3.2 schema to ensure compatibility with Spring Security 4.0 schema
refactor multiple assertion classes for consistency and clarity to improve maintainability and readability of the codebase
( chore ) camel - disruptor : make field final
added a new file ` TestConfigureUDF . java ` and modified ` ExprNodeGenericFuncEvaluator . java ` and ` ExprNodeGeneric
updated regex pattern in LogMessageWaitStrategy and modified test cases in LogMessageWaitStrategyTest to improve matching accuracy and maintainability of log message
refactor logger initialization to directly call the logger methods for debug , info , and warn to simplify code and improve readability by reducing unnecessary
replaced ` updatePurgedShardNodes ` and ` updatePurgedShardNodes ` queries with ` delete ` and ` purge _ time `
added support for version " 17 " and " 17 - preview " in JavaLanguageModule and corresponding tests to enhance language support and ensure compatibility with
reduce flakiness of fileappenderresiliencetest by wait for compression job to finish
do n ' t assert lastlocationaccess in volatilereadnode if it be null .
added a method to retrieve an unmodifiable list of steps and improved formatting in the ` getStep ` method to enhance code clarity and maintain consistent
removed redundant ` fromBase58 ` and ` contractAddressBase58 ` variables from ` TronJsonRpc ` and ` TronJsonRpc
refactor currency pair handling in BitstampAdapters . java for clarity to improve code readability and maintainability
[ hotfix ] [ core ] fix timeunit conversion in longtasktimer and meterregistrycompatibilitykit
[ hotfix ] [ euphoria - flink ] do not use hashpartitioner in reducebykeytranslator
updated value handling in HostEditorActivity to use CharSequence instead of String and added support for ListPreference to improve type safety and support for dynamic color
updated ` IncompatibleDatabaseHandler ` to ` DatabaseVersionHandler ` and refactored related methods to use ` SystemProperties ` instead of `
added a constant for the maximum number of tweets in contributions and updated the condition in the loop to ensure that the query does not exceed
updated the refresh interval in AbstractCachedLDAPAuthorizationMapLegacyTest from 1 to 2000 milliseconds to allow more time for LDAP authorization map refresh
[ hotfix ] [ checkpoint ] remove duplicate tail page creation in queue .
fix checkstyle issue in entity / passive / glowserver . java ( # 621 )
refactor the grow logic by extracting it into a separate method ` grow ` to improve code readability and maintainability
removed import statement for DataOutputStream in GdxSetup . java to simplify dependencies and improve code clarity
added a method ` getSubmittedFileName ( ) ` to the ` AttachmentHttpBinding ` class to provide access to the submitted file name of a
added a call to markReadForLoad ( ) in LauncherFragment . java to ensure the fragment is marked as read when loading changes
modified the ` main ` and ` instrumentJar ` methods to include ` ClassNotFoundException ` and handle ` NegativeArraySizeException ` to improve error handling
added a method ` checkForSpillPossibility ` to check for spill positioning to ensure proper handling of out - of - memory scenarios
replaced repeated calls to ` getDocStoreSegment ( ) ` with a single variable ` dsName ` to improve code readability and maintainability
added a default name ID format in SamlProfileSamlNameIdBuilder to ensure a valid name ID format is provided when no supported name formats
added error handling for password change abortion in ChangePasswordPage . java to improve user experience by notifying when the password change is aborted
added a semicolon to the end of a block in Deadlock2 . java to ensure proper syntax and prevent potential runtime errors
added a method to get the maximum idle time of the NioReceiverMBean to provide a way to control the maximum idle time for the N
deleted the FontScalingTest . java file to the font size validation logic is no longer needed for the Metal Look and Feel
added validation for date filters in RRD4jPersistenceService and updated logging level from warn to debug to ensure date filters are valid and improve
added checks to return early if numVectors is less than or equal to zero to prevent potential errors when processing empty vector scenarios
test : migrate executablereftest to junit 5 ( # 4645 )
added null checks before setting view and glassPane in JLayer . java and created a new test class bug6994419 . java
camel - 7034 : added wiretap to allow to wire to any expression . thanks to benjamin for the patch
changed the access modifier of the setAction method from public to protected to restrict access to the method for better encapsulation
[ calcite - 2852 ] add option to pushlimittorexn to enable topn planner
[ java ] remove unnecessary usage of aerondirectoryname in test .
fixed - rbatch . ping ( ) and rbatch . setqueued ( ) method do n ' t work properly . # 3358
refactor HiveConf to use FileOutputStream instead of InputStream for configuration file handling to improve performance and resource management by avoiding unnecessary byte array allocation
replaced ` Device . defaultDevice ( ) ` with ` criteria . getDevice ( ) ` in the ` createModel ` method call to ensure the
added menu options and menu item selection logic in SimulationViewer . java to enhance user experience by providing appropriate menu options for motor details
updated the CertificateValidator class to improve certificate validation logic to enhance security and reliability of certificate validation processes
add ` ` hawtio . dirname ' ' system property to control the location of hawtio in the home directory ( #
added a condition to return SINGLE _ SPACE when comments are empty and whitespace is empty to improve handling of empty comments and improve code clarity
added volatile keyword to several private fields in multiple classes to ensure thread safety during concurrent access and modifications
removed printStackTrace ( ) method call from ContextHandler . java to improve error handling by avoiding unnecessary stack trace printing
move customitemdroptest to mctester and add integration test
added a boolean parameter ` ifNotExists ` to the ` AddPartitionDesc ` , ` DDLSemanticAnalyzer ` , and ` AddPartition
refactor input reading logic in NfsSecondaryStorageResource . java to improve efficiency and readability of data handling
[ hotfix ] [ runtime ] remove unused control stream id in echoservicenode
wfs capability transformer : add support for spatial operator ( ogc : spatial _ operators )
added import for LuceneTestCase and annotated the BasicDistributedZkTest class with AwaitsFix to indicate that the test is
updated the condition for checking the keptAlive state and parsing request line phase in Http11InputBuffer . java to improve the handling of preface
[ java ] set the default value of cluster . isIngressExclusive to false .
replaced individual cache key constants with an array of cache keys to improve flexibility in managing cache configurations
added methods to track and update the running record count in JSONRecordReader . java to improve clarity and maintainability of record counting logic
added filtering logic to remove specific year entries from mergedItems to improve data accuracy by removing outdated entries
updated drawColor method calls in CacheableTextView , CellLayout , and HolographicOutlineHelper to use a constant color instead of
remove check for OpenGL ES 2.0 availability in the render method to ensure compatibility with OpenGL ES 2.0 rendering methods
improve handling of invocation context in backgroundprocess
refactor table name handling in BaseSemanticAnalyzer and QBParseInfo to include database name to improve clarity and consistency in table name
set connection timeout to 1 minute in TestConnections . java and make count final in StubConnection . java to improve connection stability by preventing
added multiple assertions for the ` approx _ percentile ` queries in ` TestHiveAggregationQueries . java ` to ensure proper handling of percentile values
updated DEFAULT _ IDLE _ TIMEOUT to be 30 seconds and refactored idleTimeout and writeTimeout to be initialized in WebSocketChannel to ensure
updated the method of obtaining shared file shares to use the platform account name instead of the account object to ensure compatibility with the platform - specific
updated Inet6Address . java to include generic type parameters for InetAddress and NetworkInterface to enhance type safety and prevent potential NullPointerExceptions
updated variable names and refactored button visibility methods in PlaybackControlView . java to improve code clarity and maintainability by standardizing
updated session handling to use session ID instead of session object to improve clarity and consistency in session management
replace ` getTransitiveClasspaths ( ) ` with ` getImmediateClasspaths ( ) ` in ` DefaultJavaLibrary . java ` to
do n ' t use exception probability by default
updated the color assignment logic for newPlateColor based on whether the icon is themed to enhance visual differentiation of app icons based on
guacamole - 139 : add init ( string , string , string , set < permission > , set < password > , set < salt
added " centre " alias to the aliases in the Middle . java file to enhance functionality by allowing both " center " and " cent
added dependency injection for DirectUpload in CommonsApplicationComponent to enable dependency injection for direct upload functionality
set space for left and right axes in BarChartActivity and adjust maximum values in BarLineChartBase to improve layout responsiveness and ensure
added Java ABI and source ABI flavors to the set of flavors in AndroidLibraryDescription . java and JavaLibraryDescription . java
added a request parameter for operation event status type in OnlineHubService and initialized the services list with an empty ArrayList in CompositeLogService to
added debug logging for method parameters and implemented visibility annotation handling to improve debugging capabilities and ensure a default annotation is added if none is present
camel - jms : replace startbundle ( ) and finishbundle ( ) with setup ( ) and teardown ( ) in camel - jms
refactor ProcessBuilder instantiation to store classpath in a variable before use to improve code readability and maintainability
updated the resource loading mechanism in PackageResourceLoader to include a " res " prefix for " values " based on the package name to ensure consistent
[ hotfix ] [ table - common ] fix checkstyle violation in dataset
added an import statement for junit Ignore and annotated a test method to be ignored to temporarily disable the test due to a known issue ( b / 243855320 )
updated stack trace formatting in ` ShouldHaveMessage ` and added a test for escaping percentage in ` ShouldHaveMessage _ create _ error _ message
fixed - jcache . close ( ) method throw npe if cache manager do n ' t exist
reduce log level when commandcontext . close throw activitititaskalreadyclaimedexception
added a conditional block around the instantiation of ALPNClientConnectionFactory to ensure ALPNClientConnectionFactory is only instantiated once to improve code clarity and
fix entitypropertiespacket to write base value instead of max value
fix sonos audio sink to only play notification sound if the speaker be initialize
increase wait time in test to avoid test flakiness
changed log level from info to debug for unsupported effect light type message to improve log clarity and provide a more informative error message
bug 10552 : limit async - job execution thread pool size to be 2 / 3 of maximum db connection limit .
updated method signatures and import statements in Reporter . java , ReturnsSmartNulls . java , and TestSmartNulls . java to include an Object parameter
removed unnecessary casting of DataFrame to DataFrame in generate method to simplify code and improve readability by eliminating unnecessary type casting
replaced multiple instances of the old module - info . java file with the new module - info . java file to ensure consistency in module documentation
add a check for non - empty physical column names in OrcPageSourceFactory and implement a test for empty file handling in TestHive
added a call to ` methCla . mixPlay ( input , amp ) ` in the ` Engine ` class to enable the mixing
refactor JComponent and SynthTextPaneUI classes to improve code organization to enhance maintainability and readability of the codebase
fix a bug in the finder pattern finder that cause the finder to return the first confirm center even if the first confirm center be outside the
removed redundant checks for empty leadingIncludePaths in PreprocessorDelegate . java to simplify the validation logic for serializing leadingIncludePaths
refactor matrix vector multiplication logic into a separate method to improve code readability and maintainability
simonstewart : add more search type to the list of supported search method
fix e - ac3 output with no sample rate
add name . setformula ( ) and name . getreference ( ) , and rename xssfname to name . setformula ( )
increase the target value from 60 seconds to 90 seconds in HighDimensionsTest . java to improve the accuracy of the target value based on the
updated the condition in SimpleTypeGT . java to check for zero values and added a new test for pattern schema in GMLParserTest .
added a new test class ClassPathXmlJobRegistryContextTests to validate job retrieval functionality to ensure that the job registry correctly locates the job
changed the data type of ` mHistoricTimes ` from ` float ` to ` long ` in the ` MotionPauseDetector ` class to
camel - 12320 - camel - restlet should use @ uriparam instead of @ uriparam to make it easy to configure
camel - 14284 : camel - log should be use source code generate configurer to avoid reflection
refactor code to introduce a new method ` writeChromeTraceMetadataEvent ` for creating ` ChromeTraceEvent ` to improve code organization and
added checks for order statuses before adding them to limitOrders to ensure only valid limit orders are added to the list
added pixel offset calculations and validation in BufferedImage and LCMSImageLayout classes to improve image layout handling and ensure correct pixel offset calculations
updated Ruby timestamp handling in Event . java and JrubyEventExtLibrary . java to improve code clarity and maintainability by standardizing timestamp
added path checks in ContextHandler and a test for real path existence in WebAppContextTest to ensure correct handling of resource paths in web applications
updated ScriptFunctionImpl from TYPE _ ERROR _ THROWER _ SETTER to TYPE _ ERROR _ THROWER _ GETTER to align
refactor variable names and logic for setting scroll values in JEditTextArea to improve code clarity and maintainability by using more descriptive
do n ' t set guardsstage if the caller loop scope be null
test ( refactor ) : migrate sniperprettyprinterjavaprettyprintertest to junit 5 ( # 2649 )
refactor URLOutputStream initialization to use try - with - resources and update exception message assertions to use equalToCompressingWhiteSpace to improve resource management
added Entity annotations to the Mail class to enable proper entity management for morphia entities
updated default values for includeTablespace and added new command parameters to enable tablespace inclusion in the application
added getter methods for metaDataBuffer and valuesBuffer in CountersReader . java to provide access to these buffers for external use
added a boolean flag ` hasReadNonEmptyFile ` to manage the state of ` container ` and ` fieldVectorMap ` when no data is
updated failure comparison logic to include custom name in failure messages to improve clarity of failure messages for better debugging
added a regex pattern to check for specific library names in LibUtils . java to ensure only valid library names are processed for CUDA compatibility
use error instead of classnotfoundexception to catch classnotfoundexception
hbase - 15411 masterfilesystem should wait for dfs to be safe before write the new file system ( prasanth jay
updated error message formatting in TranslatingJavacPhaseTracer . java to include class name and error message to improve clarity of error reporting
remove the caching of plugin descriptors from the defaultplugincache , since it be no longer need .
do not dispatch the contact status change event if the contact be already online or not in the parent provider .
remove httpservletrequestdetails # withresourceandparams ( string , set < string > ... )
added a new integration test class for fetching account information to verify the functionality of retrieving account information from BTCE exchange
added mouse wheel functionality to VDUInput and vt320 classes to enhance user interaction with the terminal interface
updated library path setting in Natives . java to use a local variable to improve code readability and maintainability
no effective change - code cleanup - remove deprecate columnhstore
add ` player _ skin _ flags ` to ` metadataindex ` ( # 1188 )
fix flaky loadbalancerwithservicetests ( # 1186 )
added braces to several conditional statements and refactored member retrieval logic in MapService . java to improve code readability and maintainability
replaced System . getProperty with AccessController . doPrivileged for retrieving the operating system version to enhance security by using a privileged action for accessing the os
added a new constant for the freemarker configuration file suffix and modified the fileSuffix initialization to allow for customization of the file suffix
( chore ) camel - http : / / issues . apache . org / activemq / browse / amq - 2696
add animation callback to dock panel so it do n ' t animate twice .
fix issue with caret not be bind to caretcolumnproperty on android .
updated constructors and logic in PrebuiltAppleFrameworkDescription , CxxBinaryDescription , and CxxGenruleDescription to incorporate
replaced ` SimpleParameterAccessor ` with ` ParameterAccessor ` in multiple files to improve clarity and consistency in parameter handling
added a null check for the passwordAttribute before setting it in LdapAuthenticationProviderConfigurer to avoid potential NullPointerExceptions when setting the password attribute
added a check for array types in DataUtilities and implemented a test for default values in DataUtilitiesTest to ensure proper handling of default values for
refactor SSL engine creation logic to handle null address case to ensure correct host name retrieval based on client authentication settings
[ hotfix ] [ test ] use asserttrue instead of assertequals in testfstabledescriptors
simonstewart : move the deletion of cooky from the ie driver to the webdriver - backed webdriver
added a new boolean field ` mHasEndedLauncherTransition ` and modified the return condition in ` AbsSwipeUpHandler . java ` to
added ` < meta charset = " utf - 8 " / > ` to HTML tags in ` HTMLListWriter . java ` and ` HTML
refactor IndexReader . java to improve code structure to enhance maintainability and readability of the code
updated HIVE _ STATS _ KEY _ PREFIX _ MAX _ LENGTH from 200 to 150 and refactored path separator handling in multiple classes
added a new class ` bug6337518 ` extending ` BasicComboBoxUI ` and modified ` arrowButton ` addition in ` BasicComboBox
rename TestRandomAccessBuffer . java file to improve clarity and consistency in naming conventions
refactor UserInfoActivity to improve code readability to enhance maintainability and facilitate future updates
added imports for HomeContentProvider and updated broadcast calls in multiple services to enhance functionality by notifying changes about the content URI
added functionality to manage pressed and focused states in BubbleTextView and introduced a waiting for resume functionality in Launcher to enhance user interaction by
added a ` Throwable error ` parameter to the ` getFallbackResponse ` method across multiple classes to enhance error handling by associating fallback responses with
removed the condition checking for ` env . _ compile _ only ` in the ` DumpBytecode . java ` file to simplify the code logic
added null check for tags before accessing its length in ChannelUri . java to avoid potential NullPointerException when tags is null
updated JAVA _ REGEX _ SPECIALS in RegexpUtil and modified test method name in TestSqlPatterns to enhance regex pattern matching accuracy and improve test
added functionality to save and restore the action bar title in FileActivity and update the action bar title in FileDisplayActivity to enhance user experience by
updated the conversion method in PythonDslProjectBuildFileParser and added a new test for concatenation lists in ConfigSettingIntegrationTest to ensure correct
changed the schedule duration from " * " to " 0 " in the CleaningService class to simplify the time period for cleaner tasks
refactor TransactionalValidationListener to improve partition handling and table path retrieval to enhance code clarity and ensure proper validation of partitioned tables
added a polling feature to the SnapPuller class to enable polling functionality in the replication process
changed the data type of ` generatedKey ` from ` int ` to ` long ` in ` ShadowSQLiteDatabase . java ` and modified
updated return statement formatting in SimpleReferenceCache . java to improve code readability and maintain consistency
improve error message when inlining fails
do n ' t start the thread pool if create the http / websocket client fails .
deleted the HttpTestAccount001 . java file to remove unused test code to streamline the codebase
resolve http : / / issues . apache . org / activemq / browse / amq - 2296 - catch all exception and
camel - 14850 : camel - cxf - do not send message body to cxf endpoint if dataformat = cxf _ message
added a new case ' ~ ' in ClientUtils . java to handle specific client configurations to enhance functionality to support additional client configurations
camel - slack : make the consumer delay configurable .
make blockutil # getdropped fire the harvesting event instead of use the block id .
updated the layout size from 4 to 5 in TranscodingTab . java and modified the JCheckBox construction for encodedAudioPassthrough to improve
added a new file ` bug8057791 . java ` that implements a Nimbus Look and Feel for a JList to
updated flag assignment logic in LambdaToMethod . java and added a new interface LambdaInterfaceStaticField . java to improve clarity and functionality of
fix ( websocket ) : do not register websocket api when engine api be unavailable
updated null check for ' to ' in ComposeActivity . java to ensure ' to ' is not empty before proceeding to avoid potential NullPointerException
refactor ParquetFixedWidthDictionaryReaders to use BigIntVector for reading values based on dictionary usage to improve performance and correctness when reading
refactor layout handling in PortraitPagedViewHandler to improve landscape and vertical app stacking logic to enhance layout responsiveness
added ` Log ` annotation and ` LogInterceptor ` class with aspect - based logging functionality to facilitate logging before and after method execution
updated the string concatenation in the QueuedThreadPool . java file to include a conditional check for the trace length before adding the thread state to the
updated CacheGenerator and CacheProvider to use an Optional < Implementation > instead of ReferenceType to enhance functionality by allowing specification of implementations alongside
updated the ` createReferenceMap ` method to include ` totalFrameSize ( ) ` as a parameter to enhance the functionality by providing additional context
refactor TypesafeConfigurator to improve code structure to enhance maintainability and readability of the code
add karaf karaf integration test for camel - graphql
added two static methods , bug1 ( ) , bug2 ( ) , and bug3 ( ) to the RFE2891944
removed URL encoding of keys and values in HttpClientIntroductionAdvice . java to simplify string building for improved performance and readability
refactor unsupportedPlatformTool implementation to use a dedicated UnsupportedPlatformTool class to improve code readability and maintainability by reducing duplication
updated the handling of loopCount to use an integer type and improved logging message formatting to enhance type safety and clarity in recovery logic
added a ` size ( ) ` method to ` FlightConfiguration ` and ` FlightConfigurationImpl ` classes to provide a way to retrieve
( chore ) camel - kie - address : use random index when initialize abstractaddressmanager
updated component specifications for UI components in VLCVideo . java to improve layout consistency and enhance user interface clarity
rename ` ` bisq ' ' to ` ` bitsquare ' ' for consistency with other project
updated the AUTHORITY string from " com . klinker . android . talon . provider " to " com . klinker
add . m2 to the user . xml file so that it can be use from the command line .
added binding of bufferHandle to GL _ ARRAY _ BUFFER in VertexBufferObjectWithVAO . java to ensure proper buffer management for OpenGL
refactor ServerHttpSecurity class to improve code readability to enhance maintainability and facilitate future feature additions
added the @ Disabled annotation to the PostgresStoredProcedureIntegrationTests class to temporarily disable the test due to instability
added defaultHeaders to HttpClientProperties and configured it in CasCoreHttpConfiguration to enable customizable HTTP headers for improved HTTP client configuration
improve error message when user password be invalid or expired
deleted the NoOpConfigPathGetter . java file to the class is no longer needed for configuration handling
replaced Codec . base16Decode with Bytes . fromHexString for signingKey to improve key handling by using a more appropriate encoding method
replaced ` CascadedStyle ` with ` CSSName ` constant and adjusted inline block position based on the ` FLOAT ` property to improve
planner - 285 : move planningfactcollectionproperty and planningscore into optaplanner - core - api
refactor RestUtils to use MultiMap for default headers instead of CaseInsensitiveHeaders to improve header management and maintain consistency in header handling
replaced ` String ` encoding with ` Charset ` in ` ProxyServer ` , ` Realm ` , and ` ProxyServerBuilder ` classes
added a method ` getJobId ( ) ` to ` StepContext ` and a corresponding test in ` StepContextTests ` to ensure ` Step
replaced ` Long . valueOf ( ) . compareTo ( ) ` with ` Long . compare ( ) ` for comparison in ` ExpandableUpload
change log level from error to debug for response handling in DefaultJdkHttpClient and JdkBlockingHttpClient to improve logging granularity for better debugging and
updated import statements in LegacyAuthenticationHandlerAdapter . java to utilize NamedAuthenticationHandler and UsernamePasswordCredentials to improve code clarity and maintainability
changed the class modifier of WingDings from final to public to allow access to the WingDings class from other packages
add a check to prevent filter from be remove from the network if it be not our own .
relates to github # 1186 : move bcpginputstream . wrap ( inputstream ) to bcpginputstream .
fix potential resource leak in minimallockingwriteaheadlog
added a test method for selecting all rows from a view and updated column name handling in HiveBaseResultSet to ensure that the select - all functionality
renamed FocusTransitionTest . java to improve clarity to enhance code readability and maintainability
[ web ] use google gwt instead of guava in sharecontrollerw
added a type check for sourceTask before accessing its properties in CounterStatsAggregator . java to ensure proper handling of instances of MapRedTask and
removed unnecessary whitespace in HttpInput . java to improve code readability and maintain consistency
refactor color setting logic in AppearancePanel to use a dedicated method to improve code readability and maintainability by reducing duplication
updated TaskHelper constructor to use ' hidden ' parameter instead of ' false ' to enhance the flexibility of the constructor by allowing for hidden state
resolve intermittent test failure on slow ci server
pdfbox - 4892 : avoid resource leak , a suggest by valerybokov
updated imports in BoundSql , SqlSource , and LanguageDriver classes to utilize DefaultParameterHandler to enhance functionality and improve parameter handling in SQL
lsra spill optimization : check loop depth before set spill state
[ micronaut - groovyparser ] refactored test to use builder pattern
fix : make pgresultset . close ( ) thread - safe
initialize the serviceAdvisorType variable to ServiceAdvisorType . PYTHON to ensure proper initialization of the service advisor type
replaced the ` ResolvingDecoder ` instance with a ` ThreadLocal < ResolvingDecoder > ` instance and modified the ` getResolver `
changed the parameter type from Collection to List in multiple classes and updated buffer methods to use append instead of write to improve flexibility in handling different
replaced the use of a fixed byte array with a random byte array for memo values in SendCoinShieldTest . java to improve random
added a new method ` setPersonalisation ` to the ` SkeinParameterSpec ` class for setting personalisation based on a date
removed redundant code block in CodeGenerator . java to streamline logic for better readability and maintainability
removed the percentage parameter from the scroll method and its usages across multiple files to simplify the method signature and improve code readability by removing unnecessary
changed the access modifier of the pointer variable from private to public and added reset and resetTo methods to allow external access to the pointer variable and
rename ` ContentDigestHistory ` class to ` BdbContentDigestHistory ` and update references accordingly to clarify the class ' s purpose
fix : do n ' t use implicit cast for boolean and null .
replaced ArrayList with a boolean flag for managing the list of accepted media types to simplify the code and improve readability by eliminating unnecessary
added a new boolean variable set to false in TaskView . java to control the behavior of the task display logic
added auto - increment functionality to the CreateTableChange and LiquibaseDataType classes , and implemented the isAutoIncrement method in Liquib
initialize errorText with a default value of " Command failed due to Internal Server Error " to provide a clearer error message for better debugging
updated imports in DeadListenerTest . java and LocalManagementTest . java , and added JVM options in LocalManagementTest . java to enhance performance
replaced ` add ` method calls with ` push ` method calls for ` currentStatus ` and ` boosterStatus ` in ` BasicEvent
added support for AJP port configuration and connector setup in GitBlitServer . java to enable dynamic binding of the AJP connector to the
added type coercion for compound types in TransTypes . java and created a new Intersection03 . java file to ensure type coerc
rename EmbeddingTest to EmbeddingITest to clarify the purpose of the test class
modified WToolkit . java to conditionally start the AWT - Windows thread based on a native method to improve performance by avoiding unnecessary
add option to compress the bundle in parallel .
do n ' t set surface visibility on hide ( ) on window
[ hotfix ] [ test ] use class . getname ( ) instead of a hardcoded name
added configuration parameters for enabling fullNode and solidityNode HTTP services to enable conditional service addition based on configuration settings to enhance flexibility in
added a new field ` service ` to the ` GoogleCloudFirestoreTicketDocument ` and implemented the ` countTicketsFor ` method in
refactor Generate . java to improve code structure to enhance maintainability and readability of the code
[ flink - 20625 ] [ table - planner - blink ] json _ format ( ) should return ` ` null ' '
updated BadgeRenderer to support a DOTS _ ONLY flag and modified width calculation logic to improve readability and maintainability of badge rendering logic
removed the ' final ' modifier from the getConfiguration method in FreemarkerManager to allow for potential subclassing of Freemark
fix issue with invalid exclude package name pattern in ognlutil . setexcludedpackagenames ( )
modified device Udid assignment logic to differentiate between macOS and iPhone to ensure compatibility with both macOS and iPhone platforms
updated DefaultHttpClientFilter to use produceProcessorManager and modified exception handling in TestDefaultHttpClientFilter to improve error logging and ensure proper handling of forbidden
refactor script binding and execution logic in AllAppsView . java to ensure proper execution flow when the script is initialized
added a TEXT _ BURN flag and modified conditional logic in Utilities . java to enhance text rendering control based on its value
added teardown methods to TestColumnAccess and TestReadEntityDirect classes to ensure proper resource cleanup after tests are executed
added retrieval of parser from the parsers map to ensure the correct parser is used for processing
reformatted the conditional check in BoundedLocalCache . java and added a new test method in BoundedLocalCacheTest . java to improve
refactor RawConnection to extend WebSocketConnection and implement complete and flush methods to enhance connection management and improve asynchronous frame flushing functionality
added multiple test methods for asserting multiple assertions in SoftAssertionsPerfTest . java to improve test coverage and reliability of assertions in the
added a constant for TEST _ FAILURES _ EXIT _ CODE and modified the execution logic in PythonRunTestsStep to handle specific exit codes for
refactor glyph wrapping logic in GlyphLayout . java to improve readability and ensure correct x - value assignment based on markupEnabled flag
refactor score comparison logic in TestBooleanRewrites . java to use streams for better readability to improve code clarity and maintainability by
replace ` getEnclosingClass ( ) ` with ` getSuperclass ( ) ` in ` TypeHandlerRegistry . java ` to ensure the correct superclass is
improve performance by remove unnecessary instanceof check
added a check to prevent multiple invocations of removeOnDrawListener and adjusted removal logic to ensure that the OnDrawListener is only removed once to
refactor multiple classes including CheckIndex , BlockTreeTermsReader , FuzzyTermsEnum , and Builder to improve code organization and maintainability
updated import statements to use wildcard imports and added a condition to check if matchStatus is not NOT _ APPLICABLE to improve code readability
changed the default return value of ` getBoolean ` from ` false ` to ` true ` for ` MEDIAPARSERV2 ` to enable
fix for http : / / issues . apache . org / activemq / browse / amq - 2630 - add support for
added assertions and verification for table and partition permissions in FolderPermissionBase . java to ensure proper permission verification and verification for table operations
do n ' t publish status for provider that be not in the registration state
updated the color generation logic in PastelColor . java to incorporate a customizable base color value to enhance the visual appear
refactor ScriptEngineFactory to improve code structure to enhance maintainability and readability of the code
updated HolographicViewHelper to create original and outline bitmaps using a new method to improve code clarity and maintainability by central
refactor request method handling to use HttpMethod . fromString for better clarity and error logging to enhance code readability and maintainability by reducing
add the ability to infer the position of a tree in the multinwordpreprocessor .
removed unused import of IOException in IOChannelUtilsTest . java to clean up the code and improve readability
updated the class loading logic to handle HIVE _ PASSTHROUGH _ OF _ CLASSNAME and improve output format retrieval based
refactor ChunkListener , AfterChunk , and BeforeChunk classes to improve code organization and maintainability
added bounds checking for start and length parameters in DOMBuilder . java to ensure valid input validation to prevent potential ArrayIndexOutOfBoundsException
refactor conditional logic in ClusteringCoefficient . java and update method calls in EigenvectorCentrality . java to improve clarity
camel - 14850 - camel - aws2 - * : improve the verifier to check if a particular service work on a specified region ,
added a new file ` PublicStaticInterfaceMethodHandling . java ` implementing an interface with static and default methods to demonstrate the handling
camel - 1776 : defaultkeyselector now support property placeholder in password . thanks to benjamin for the patch .
replaced instances of ` catch ( Throwable t ) ` with ` catch ( ThreadDeath t ) ` and simplified exception handling in ` Log
refactor multiple security - related classes to improve code organization to enhance maintainability and readability of the codebase
updated JGit version from " 1.0 . 0 ( 201106090707 - r " to " 1.1 . 0
updated client key retrieval logic in HttpClientIntroductionAdvice . java to ensure correct client path is utilized based on client annotations
add ' transformer ' a a namespace handler for the ' transformer ' element in the < namespace > element .
updated BACK _ FACTOR and REWIND _ TIME constants and modified conditions for duration handling in ResumeObj . java to improve the accuracy of
added a new method ` isScrollWheeling ( ) ` to ` CodenameOneImplementation ` and modified ` Button ` to condition
updated usage string formatting and command permissions handling in UtilityCommands . java and DocumentationPrinter . java to improve clarity of usage information and ensure proper
fix typo find by codespell on fossies . org
added setter methods for seqFiles and unseqFiles in CrossSpaceCompactionResource . java and updated size checks in RewriteCrossSpaceCompaction
[ java ] fix checkstyle issue in observation / observation . java
polish ` ` update the projet ruleset according to preference ' '
fix a potential deadlock in abstractsootfieldref . checkstatic ( )
use default naming convention in elasticmeterregistry ( fixes # 269 )
added methods and imports for ControllerListener and GcodeCommandCreator , and updated BackendAPI to use IController and TinyGController to enhance
added a new test method ` hugeHorizontalRule ` to ` PathologicalTest . java ` to verify rendering of huge horizontal rules with
rename system . out . println to tty . print in type system test
updated multiple Java files for consistency and clarity to improve code readability and maintainability
log4j2 - 1343 log4j2 - 1343 bugfix : frame length should be < = 0
replaced return statements for ` zeroValue ` with ` defaultValue ` in ` IntFloatMap . java ` and ` IntIntMap . java
refactor image setting logic to run on the UI thread using ` Display . getInstance ( ) . callSerially ( ) ` to ensure UI
added a null check for the registered variable before proceeding with demand checks to prevent potential NullPointerExceptions when registered is null
simonstewart : remove unused node . hasnextSibling ( )
fixed - npe in redisdistributedmapcacheclientservice if redis cluster mode be off
updated log messages in MobFileCache . java to include cache enabled and disabled states to improve clarity of log messages for better debugging and
refactor ColConvCCMTest class implementation to improve code readability and maintainability
refactor variable initialization to use local variables for ` target ` and ` allowCovariantReturns ` and ` syntheticNameChar ` to improve code
pdfbox - 4892 : use generic one , a suggest by valerybokov
replaced ` Float . toString ( jsonData . asFloat ( ) ) ` with ` asString ( jsonData ) ` and introduced a new ` X
added return statement to avoid infinite loop in genericfileconsumer . read ( )
added an EventQueue . invokeLater call in bug6638195 . java to ensure that the delegate is invoked on the Event Dispatch Thread
updated the calculation of ` maxSize ` to use ` getMaxBinaryMessageSize ( ) ` instead of ` getMaxBinaryMessageBufferSize ( ) ` to
updated the calculation of steeringValue in TestAttachDriver , TestFancyCar , and TestPhysicsCar to correct the sign
replaced ` Arrays . equals ` with ` MessageDigest . isEqual ` in ` PasswordEncryptionService . java ` to improve security by using a more
refactor JdbcSerDe to use LocalDate and LocalDateTime for date and timestamp conversion to improve code clarity and maintainability by standardizing date handling
updated VERSION from 2 to 3 and modified metadata handling logic in ParseData . java to support both version 2 and 3 formats to ensure compatibility with
added conditional configuration for FlywayAutoConfiguration and updated related tests to enhance flexibility and test coverage for Flyway configuration with JPA
added sorting functionality to ClassesImpl . java to ensure the classes are processed in a sorted order
added a method ` getCurrentStableState ( ) ` to ` LauncherStateManager ` and updated its usage in ` AbstractLauncherUiTest `
refactor SharedInformer class to improve code structure to enhance maintainability and readability of the code
refactor memory scope handling in TestCloseScope0 . java to support different versions to ensure compatibility with different memory and resource scope implementations
increased the timeout value in the test method from 500 to 5000 to allow for a longer timeout in the server socket implementation
updated CaptchaChannelProcessorTests . java file to improve test coverage and organization
added logic to update the owning collection of an item if it is not the same as the current item to ensure that the item ' s owning
added a retry mechanism for saving cache properties in AbstractRegistry to limit the number of attempts to save the cache file to improve reliability and prevent
updated the parameter name from ' mergeDirectory ' to ' directory ' in TrackingDirectoryWrapper instantiation to improve clarity by using a more d
[ core ] fix unusedimports false positive on jdk 1.5
added validation for insert overwrite queries on bucketed Iceberg tables to ensure proper handling of insert overwrite operations on bucketed Iceberg tables
updated assertions in BootstrapTests to reflect the correct number of SAML configuration keys and added checks for legacy SAML keys to ensure tests reflect the correct configuration
renamed the method ` isAnonymousOrLocal ` to ` isAnonymousOrNonStaticLocal ` and updated its logic to account for non -
refactor variable name from ' theAddressie ' to ' addressees ' for clarity to improve code readability and maintainability by
removed specific comment constants from CommentsParser . java to simplify the code by eliminating unused constants
added IOException handling to the release methods in Lock and NativeFSLockFactory classes and introduced LockReleaseFailedException class to improve error handling and provide clear
changed the package of DataSourceInitializer from ` test . jdbc . datasource ` to ` org . springframework . batch . test ` to organize
added a condition to check if the node is not a unary operator before transforming it to ensure that the transformation only occurs for non - unary operators
added TypeValidation . DISABLED to ByteBuddy instantiation to disable type validation during bytecode generation
replaced ` DeclaredType ` with ` TypeElement ` in ` JavacRoundEnvironment . java ` and related files to simplify type handling
added error handling for PessimisticEntityLockException in LockModePessimisticReadWriteIntegrationTest . java and updated lock wait
do n ' t allow system property to be reference in loggingapplicationlistener
refactor the request method to handle HTTP redirects more efficiently to improve the handling of HTTP redirect status codes and enhance connection management
added constants for service mapping and environment configuration in ServiceCombConstants and MicroserviceFactory to enable dynamic configuration of microservice mapping based on environment variables
updated method call from ` getName ( ) ` to ` getBeanName ( ) ` in ` ToeThread . java ` to ensure the correct
updated DB _ PATH _ REGEX and added DB _ PREFIX constants and modified database deletion methods to use a boolean flag to improve clarity in database
updated the method to return unread count from HomeDataSource instead of numberNew to improve accuracy of unread count retrieval for the current account
renamed the method ` testVirtualThreadPool ` to ` testVirtualThreadPoolPreview ` and added a new test method ` testVirtualThreadPool ` to
added a limit parameter to the getAllOrder method and adjusted related logic in the Wallet and MarketOrderIdListCapsule classes to limit the number
added a null check for the user before retrieving user settings to prevent potential NullPointerExceptions when accessing user settings
added a method to retrieve the absolute file path in LocalFileSystem and implemented a test for matching relative wildcard paths in LocalFileSystemTest to ensure correct
added maximum width and height limits for the instance ' s bounds in ComponentBuilders . java to ensure that the dimensions do not exceed defined limits for
added logging capabilities and a deprecated method for setting connection manager timeout in CommonsHttpSolrServer to improve error handling and provide clearer logging for
added ExceptionHandler import and error handling in PrintController . java to improve error reporting for document creation failures
refactor filename formatting to use lambda expressions in CrateType . java and add assertions in RustBinaryIntegrationTest . java to improve code
added validation to check if a word is a number in SpellChecker . java and created a corresponding test in SpellCheckerTest . java
updated the formatting of the MESSAGE constant in HelloWorld . java to improve code readability and maintain consistency
added methods to manage file actions within the FileDisplayActivity class to enhance file management functionality and improve user experience
hbase - 25827 replicationhandler should not start a daemon thread ( # 2588 )
updated method call from ` update ( ) ` to ` update ( ) ` in ` StoreCachedTest . java ` to ensure consistency in method
renamed the parameter ` materials ` to ` theMaterials ` and added logic to remove specific ` MaterialColumnParser ` instances from ` file
added new string arrays and updated documentation for various components in DependencyBank . java to enhance clarity and maintainability of the codebase
added maximum recycled views for various item types in the RecyclerView ' s pool to improve performance by optimizing recycled view management
add a new test method ` testBuildingBinariesSeparately ` to ` AndroidBinaryCrossCellIntegrationTest ` to ensure that building binaries
update baritone control example to work with new waypoints
added imports for ParsedNode , ParsedNodeException , and ResourceAccessor in CreateProcedureChange . java to enable the use of Liquibase
added null handling support in FilterOperatorUtils and a corresponding test in NullHandlingEnabledQueriesTest to enhance the functionality of range filtering with null values
added validation for bootstrap method ' s parameter types and arguments in JDynamicInvokeExpr . java to ensure bootstrap method ' s arguments match the expected
fix the ci failure of jmshttpjmstest
removed the call to clear formatters in CucumberInstrumentation to ensure that the formatters are properly managed during runtime
updated ` AbstractRegisteredService ` and ` PrincipalAttributeRegisteredServiceUsernameProvider ` to use ` DefaultRegisteredServiceContact ` instead of ` RegisteredService
added a conditional check for workspace cell padding before hiding workspace labels to ensure that workspace labels are only shown when they are within specified padding and
updated assertion messages in ReplicationFactorTest . java for clarity and consistency to enhance readability and maintainability of test assertions
sulong : do not patch the pre - initialization context if the context be already initialize .
removed JUnit @ Ignore annotations from ChaosMonkeyNothingIsSafeTest . java and ChaosMonkeySafeLeaderTest .
replace RuntimeException with JsonIOException in Gson . java to improve error handling by using a more specific exception type
replaced Integer . valueOf with Integer . parseInt for value parsing to simplify code and improve readability
updated error messages and file tree walking parameters in Copy . java to improve clarity of error messages and ensure consistency in directory handling
refactor HLCSegmentName and LLCSegmentName to use a dedicated method for checking segment name type to improve code readability and maintain
added ` startActivity ` and ` startActivityForResult ` methods to ` ShadowFragment ` and corresponding tests in ` FragmentTest ` to enhance
updated the method to return a new DateTime instance using clockReader ' s current time instead of a static current time to ensure the current time is
update return statement to include x86 _ 64 - none - linux - android target architecture to enhance compatibility with Android by specifying the target architecture
added a method to delete all files associated with a specified account in the FileDataStorageManager class to enhance file management functionality by allowing deletion of
updated the command line option from " - ? " to " - h " in SchemaCrawlerCommandLine . java to improve clarity and consistency in
added a method to create a description with a unique ID and updated the equals method to use it to ensure that the unique ID is consistent and
replaced the decoding method with a direct call to ` decodeBarcode ` in ` SnapshotThread . java ` to simplify the code and improve
removed the ` ImmutableList < String > sources ` parameter from the ` BuckTarget ` constructor and related code to simplify the constructor and eliminate unnecessary
[ grid ] add unit test for gwczoomcontextfinder . range ( )
added support for dependency tracking in JRubyScriptEngineConfiguration and integrated it into JRubyScriptEngineFactory to enable dynamic activation of dependency tracking based
replace ` getRequestURI ( ) ` with ` getServletPath ( ) ` in ` PromptFilter . java ` to ensure the correct request path is
do n ' t attempt to create new table / keyspace if they already exist
improve performance of welcomewindow . drawimage ( )
updated tuner configuration handling and error logging in multiple classes to improve clarity and ensure proper resource management during tuner operations
added HasTests interface to AbstractShBinaryDescriptionArg and implemented a new test method in ShBinaryRuleIntegrationTest to enable testing of sh -
added conditional logic to set includeString to " db : hsqldb " when certain conditions are met to ensure compatibility with HSQLDB database
removed unnecessary whitespace in JavabinLoader . java to improve code readability and maintain consistency
truffle : do n ' t set materialize host exception if the stack trace be empty .
[ gr - 33545 ] export jvmci to service when service provider be not find .
added unit test for duplicate command handler resolution
[ flink - 20865 ] [ config ] add fine - grained - shuffle - mode . all - blocking .
make entityfish hook respect blockstate . nextfloat ( ) .
camel - 14284 : camel - ftp , camel - 14284 : create an aws - sftp component base on sdk v2 ,
rename ` getCommandRunner ` to ` getStepRunner ` across multiple files to improve clarity and consistency in naming conventions
renamed the variable ` useShortNames ` to ` compressPackageNames ` and updated related methods in ` GangliaReporter ` to
added a check for empty items in AppsContainerRecyclerView to prevent processing when no items are available
added a conditional annotation for the REPORTER _ BEAN _ NAME bean in ZipkinAutoConfiguration . java to ensure a bean is
[ log4j2 - 1342 ] xmllayout : add property support to the layout . xml file .
added support for the " omitHeader " parameter in multiple response writer classes to enhance header management by excluding unnecessary response headers
updated the method to return the property name from ` _ id ` to ` getPropertyNumber ( ) ` in ` EscherProperty . java `
replaced direct call to getBuildRuleType ( key ) with a call to Description . getBuildRuleType ( key ) to ensure consistent usage of
add a call to modify the hierarchy when a method be remove from a scene , sootclass do n ' t need to re - create
fix npe in tradestatictest if dispute to testifdisputetryreplay fails
added ` getObjectHash ( ) ` and ` toString ( ) ` methods to ` AbstractNamedObject ` , modified the ` retrieveColumns ` method
wallet : set not _ seen _ in _ chain confidence type when send a transaction .
fix handling of header with @ body and @ header with uri variable in http client
refactor conditional checks in CraftingHelper . java for better clarity and functionality to enhance readability and maintainability of JSON processing logic
hbase - 15411 catch all throwables on region . open ( ) and log a warning .
refactor credential comparison logic to use local variables for length checks to improve code readability and maintainability
[ java ] do n ' t add image to the subscription if it have already be add .
testjvmprocess . destroyforcibly now call process . waitforcibly ( ) .
added Oracle support to the conditional check in TestDefaults . java to ensure compatibility with Oracle database configurations
camel - 1769 : camel - mail - consumer should not try to connect to a store if it can not connect to the store
added token validation in the parser to check if there are more tokens in the query to ensure that the query can handle cases where there are more
camel - 18131 - aws - translate : list all the available language in the enum - start with ` ` k ' ' complete
added a method ` getDataFileName ( ) ` to the ` Model ` class and modified the ` Voice ` class to utilize this method for
added emailDomain property and its getter and setter methods to LdapIdentityProviderDefinition and IdentityProviderDefinition classes to enable configuration of email addresses for improved
added timeout configuration constants and methods for read and connect timeouts in Configuration . java and updated ViewRegistry . java to use these constants to improve config
added a condition to check if ` myDeferredConcepts ` and ` myConceptLinksToSaveLater ` are not empty before executing the execution
added RedisCategory import and category annotation to RedisServiceRegistryTests to categorize tests related to Redis functionality
updated ` FindDeprecatedMethodsTest ` to use ` @ ParameterizedTest ` and modified ` FindDeprecatedUses ` to accept a ` typePattern `
added a call to ` super . paintComponent ( g ) ` in ` WaterfallPanel . java ` to ensure proper rendering of the
removed unused import statements from multiple Java files to clean up the code and improve maintainability
updated ContractEventTriggerCapsule to use getEventSignatureFull ( ) and modified LogEventWrapper to include eventSignatureFull ( ) to enhance event
updated file filtering logic to use endsWith instead of contains for session ID to ensure file names end with a specific session ID format
replaced the method of clearing a rectangle with setting the background color and filling it with a fill rectangle to improve rendering by using the current background
jbrules - 3249 : do n ' t emit rule compilation error for invokers that do n ' t exist
removed unnecessary print statements from multiple Java files to clean up the code and improve readability
added a conditional check for NaN score values before asserting doc values in TestFieldCacheSort . java to ensure tests only validate non - NaN
replaced direct assignment of entity keys with Set . copyOf to ensure immutability of the oldKeys set
added handling for zero time strings in ColumnSnapshotGenerator and created a new test for date default values in MySQLIntegrationTest to ensure proper handling of
replaced ` offererMultiSigPubKey ` and ` takerMultiSigPubKey ` with ` offererBtcPubKey ` and ` t
change the type of ` vsContext ` from ` Map ` to a wildcard ` Map < ? , ? > ` across multiple collector classes to
[ drools - 6682 ] fix kiesessionmodel when use multiple kbases
updated the instantiation of HiveMetaStoreClient to use ' this . conf ' instead of ' conf ' to ensure proper reference to the current configuration
added a conditional check to return early if modalness matches the current modalness to optimize performance by avoiding unnecessary processing when the modalness differs
added a test for retrieving CodecCapabilities from profile level and implemented native global settings in ShadowMediaCodecList to ensure correct handling of CodecProfileLevel
request focus on confirm button when enter key ( # 5460 )
added validation for width and height in SunVolatileImage . java and improved memory error handling in X11SurfaceDataProxy . java to
updated the thousands separator from a period to a non - breaking space in the FormatData _ uk . java file to ensure consistent formatting of
replaced ` int [ ] _ loops ` with ` AtomicInteger [ ] _ loops ` in ` AsyncStressTest . java ` and `
added beta flavor visibility handling in AchievementsFragment and LeaderboardFragment to improve user experience by informing users of unavailable beta flavour
updated SearchMethodVisitor to initialize access , name , and desc from context to ensure proper context initialization for search functionality
added multiple sleep calls in IoTDBInsertWithoutTimeIT and updated exception handling to include InterruptedException to improve test reliability by ensuring proper handling of
refactor duration handling logic in DLNAResource . java to improve code readability and maintainability
[ scb - 2692 ] add name to @ xmlrootelement to avoid conflict with other xml element .
refactor transaction management in TableReader by introducing acquireTxn ( ) and acquiringTxn ( ) methods to improve resource management and ensure
updated key manager and trust manager algorithm retrieval to use a configurable algorithm instead of a hardcoded value to enhance security by dynamically retrieving the algorithm based
refactor ` getSingleSourceApplicableTest ` method to use ` Applicability . or ` instead of ` JavaIsoVisitor ` to simplify code
added exit ( ) and condition to handle tab key events in Blockmania . java to improve user experience by preventing accidental tab navigation
rename accessSpecifier . PACKAGE _ PRIVATE to accessSpecifier . NONE across multiple files to improve clarity by using a more descriptive constant name
renamed the method ` unHandled ` to ` unhandled ` and updated related error logging to improve method naming clarity and enhance error reporting for
updated logic for retrieving stripes and stripe statistics in OrcInputFormat . java to ensure accurate retrieval of stripe statistics from orcReader and
added a null check for the exception before proceeding with further operations to prevent potential NullPointerExceptions during execution
[ myhentaicomics ] change myhentaicomics ripper to use http
added command line argument handling and version option display in App . java to provide users with the ability to obtain and display the current version of the
use splittokens ( ) instead of split ( ) in exportlist ( ) , a suggest by michael klink
added keyboard rotation handling and improved input connection handling in ConsoleActivity and TerminalView to enhance user experience by allowing dynamic list rotation based on keyboard
changed the type of the ` hq ` variable from ` PriorityQueue < ? > ` to ` PriorityQueue < ? extends ScoreDoc >
added null check for ownerConnectionAddress in ClientSmartListenerService . java to prevent potential NullPointerException when ownerConnectionAddress is null
camel - 15836 : camel - jbang - allow to configure the class name of the headersmapfactory to use in jmx .
updated closing brace formatting in JavaCompiler . java and Diagnostic . java to improve code readability and consistency
int - 1212 add support for ' outbound - gateway ' in the namespace handler for the ' outbound - gateway ' element
updated the index parameter from ` i + 1 ` to ` i2 ` in the ` expect ` method call to correct the logic to correctly
http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5782 : fix n
updated the proxy instances in ` PooledConnectionImpl ` to include ` PGStatement ` as a parameter to ensure compatibility with the latest PostgreSQL features
refresh size estimate on test failure
changed log level from error to warn for no more memory error messages to improve logging granularity for better debugging and monitoring
do n ' t compact fully expire cell when it ' s too aggressive
fixed - rblockingqueue . poll ( ) and rblockingdeque . poll ( ) method do n ' t take time out . #
removed unnecessary format strings from printMap calls in JobInspectCommand . java to simplify output formatting for better readability
refactor Engine class to improve code structure to enhance maintainability and readability of the code
replaced the use of ` Stream . of ` with ` Stream . entrySet ( ) . stream ( ) . sorted ( ) ` for sorting
[ issue # 5011 ] fix the issue of acl client fail to start ( # 5012 )
changed variable name from numIndexDims to numDataDims in BKDWriter . java to clarify the purpose of the condition
[ hotfix ] [ notebook ] avoid npe in notebookserver when no interpretergroup be available
fix wrong argument name in addlistelement ( )
removed the public access modifier from the verifyIdsAreStable ( ) and getNodeId ( ) methods to enforce encapsulation within the package
cs - 15832 : attach the volume to a vm before create a snapshot policy
removed public access modifier from write , flush , and clear methods in ItemWriter . java to simplify method visibility for better encapsulation
updated the mock parameter from an empty string to " test " in the RoombaHandlerTest class to accurately reflect the purpose of the mock
added a ` toString ( ) ` method to ` ImageNameSubstitutor ` and a corresponding test in ` ImageNameSubstitutorTest
replace FSDirectory with RAMDirectory for temporary directories in TestNorms . java to optimize memory usage and improve performance
added a check for the height of mDrawTextRectBuffer before assigning the lineHeight to ensure that the line height does not exceed the defined
updated method signatures in WalletAppKit . java to improve code clarity and maintainability
bugfix # 206259 , use nashorn engine instead of hat nashorn engine
chat transport menu item should be remove from the buttongroup , not the menu .
added resolve and replaceTokens methods to AbstractDataImportHandlerTest , Context , and ContextImpl classes to enhance functionality for handling variable resolution and token
updated the handling of ` bsqBlockChainExplorer ` to use ` Optional ` and ` proto ` for better null safety to improve robustness
added attribute management methods to the StandardSession and Session classes to enhance session management capabilities by providing access to session attributes
added assertions to verify the name and along of the found bean in TestDbJson _ List . java to ensure the correctness of bean
updated the array size from pageSize to initialPageCount in MonotonicAppendingLongBuffer . java to ensure the correct initial page count is used
refactor BatchCommandLineLauncher to improve code readability to enhance maintainability and facilitate future updates
added JDBC data source and transaction manager beans to BatchMetricsApplication . java to enable integration with HSQL database for batch metrics monitoring
fix checkstyle issue in net / protocol / httpservice / glowrootloghttpservice . java ( # 1358 )
pdfbox - 4892 : do not use getstrokejavacomposite , a suggest by valerybokov
removed ` notifyAll ( ) ` from the ` close ( ) ` method in ` DocumentsWriter ` and modified synchronization in ` Documents
added methods to retrieve multiple choice options and validation constraints in UiBinding . java to enhance property management capabilities for UI components
updated method calls to use ` toString ( ) ` instead of ` getFullyQualifiedName ( ) ` for various variables across multiple Java files to improve
bugfix : only update the stored copy of the tree for full save
refactor ` Affix ` and ` Dictionary ` classes to use ` Pattern ` instead of ` String ` for condition handling to improve performance by
replaced explicit generic types with the diamond operator for lists in KrakenAdaptersTest . java to simplify code and improve readability
removed unused import of CharTermAttribute in DefaultIndexingChain . java to streamline code by eliminating unnecessary dependencies
refactor NBJavacTrees class to improve code structure to enhance maintainability and readability of the code
removed unsupported encoding check for primitive data in VectorizedPrimitiveColumnReader . java to streamline the code by eliminating unnecessary exception handling
updated logging logic in HttpSolrCall . java to use MarkerFactory for better marker management to improve logging clarity and maintainability by centralizing
destroy metadata service proxy after service instance be destroy
improve defaultentityqueryrepository . getvlfilter and add getmaxlevel method to prevent infinite recursion
updated the message construction in HubChangeExecListener . java to include a check for a valid changelog ID to improve clarity of error messages regarding
do n ' t fail the test if we ca n ' t decode the barcode
refactor ` executeCompilation ` method to return a ` ProcessExecutor . Result ` object instead of an integer exit code to improve clarity and
removed unnecessary variable and streamlined the iteration loop in ObjectStore . java to simplify the code and improve readability by eliminating unnecessary variable
polish ` ` remove duplicate code in validatedlocalvalidatorfactorybean ' '
fix a bug in entityawareworldprovider where temporary block entity be not be remove .
updated type checks in IntrinsifyArrayCopyPhase . java to ensure correct handling of destination and source types during intrinsification
no need to set the logger level in testcoyoteadapter because it be n ' t do anything
removed the ` WantedAnywhereAfterFollowingInteraction ` exception class and updated error messages in tests to simplify exception handling and improve cl
added validation checks for account existence and key address in AccountPermissionUpdateActuator and PermissionAddKeyActuator to ensure proper account existence and key
refactored scriptlauncher to use a treemap instead of a comparator to reduce code duplication .
chore : update php namespace from v2beta to v2bet ( # 1193 )
replaced ` addProperty ` method calls with ` setProperty ` method calls in ` BaseSingleTreeBuilder . java ` to improve code readability and maintain
updated AsmLoader constructor to accept a ClassLoader parameter to ensure proper class loading within the AsmLoader context
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated the export namespace statement to use " declare " or " namespace " based on the isDefinitionScope flag to improve clarity and consistency in
replaced the EmptyServerHandler with an AbstractHandler that copies the input stream to nullOutputStream to ensure proper handling of HTTP requests by copying the
simplified the argument list for input listeners in HelloInput . java to improve code readability and maintainability
added logic to retrieve the lhs if it ' s not null in AbstractSqmPath . java to ensure that the correct lhs is used when
updated package declarations and renamed several test classes to improve code organization and maintain consistency in naming conventions
refactor BufferedImage creation and filtering logic in AwtCanvas . java to improve handling of byte - indexed and color components to ensure proper graphics rendering
[ gr - 33954 ] fix initialization of graalvm when graal - core be not find .
[ hotfix ] [ test ] remove dataflowportabilityapiunsupported from pardo test
chore : update java microgenerator to 1.0 . 2 update java microgenerator to 1.0 . 1 add request initialization to sample
added serialVersionUID fields to JumboEnumSet and RegularEnumSet classes to ensure compatibility during serialization and deserialization processes
refactor CallStack class to improve code structure to enhance maintainability and readability of the code
log warn if max size configuration for map do not allow any data
updated return statements and messages to refer to " LST " instead of " AST " in multiple Java files to clarify the purpose of
threadedacousticscorer : fix indexoutofboundsexception
replaced an AssertionError with a null return statement in NetHooks . java to simplify error handling by returning null instead of throwing an exception
fix the flaky applicationcontrollerfluentleniumtest by use window . title ( )
added default ` makeString ` methods for various iterable and collection classes to enhance string construction functionality across multiple iterable implementations
replaced hardcoded order value with a constant DEFAULT _ ORDER in OidcServicesManagerRegisteredServiceLocator . java to improve code maintainability and
added a weakAssociationRule parameter to the WeakAssociationsAnalyzer constructor and updated related methods to utilize it to enhance the flexibility of weak association
refactor Deflater class to improve compression efficiency to enhance performance and reduce data loss during compression
added a try - catch block that throws an IOException if a Throwable occurs to improve error handling by throwing an IOException for exceptions
added a null and empty check for content in VersionTypeBinding . java to ensure a default Version instance is returned when content is empty
refactor NearbyListFragment to directly return the places list instead of storing it in a variable to improve code readability and maintainability
updated content type check to be case - insensitive to ensure consistent handling of content types regardless of casing
change signature algorithm to asn.1 for openssh
refactor updateItemLocationsInDatabaseBatch method to accept a boolean parameter for folder name suggestion to enhance flexibility in handling folder name suggestions based
updated import statements and modified caching annotations in InheritanceCacheTest . java to improve code clarity and ensure proper caching behavior for the Post entity
updated import statements in ConnectOAuth2RequestFactory . java and implemented getUserApprovalRequest method in TofuUserApprovalHandler . java to ensure
fix ` influxdbnamingconvention ` not apply to ` tagvalue ` ( # 645 )
do n ' t print system . out . println in quickfix test
updated cookie key from " Cookie " to " Cookie2 " in HttpURLConnection . java to ensure compatibility with the latest cookie management framework
added a static method ` classMetadataUnsupported ( ) ` in both ` Platform . java ` and ` Subject . java ` to centralize the `
added functionality to toggle the visibility of the clear all button and its click listener in OverviewActionsView to enhance user experience by allowing users to
changed the declaration of ` desiredRepoVersion ` to be final and modified the timeout duration in ` ClusterStackVersionResourceProvider . java ` ,
remove memoryleaktest for now
updated the return statement in ServletTester . java to include the local host address when localhost is true to improve the clarity of the URL
added a check for ` Settings . Enabled _ Components . USE _ MVDWAPI ` in ` ServerListener . java ` and introduced a
wait for cluster to be full before assert the cluster size
implement singleton pattern for FFIProvider to enable dynamic loading of FFIProvider instances based on the system ' s JNA configuration
tika - 2857 -- add test case for hierarchical w file list
added null checks and improved null handling in MongoTemplate . java , along with new test cases in MongoTemplateTests . java to ensure robust
update position initialization to use NODE _ LIST instead of 0 for both direct input and successor counts to ensure proper representation of the position in the
added a new field ` accTradeValue ` to the ` BithumbTicker ` class and updated related classes to utilize it to provide
updated logging statements in RealtimeSegmentDataManager to include segmentName as a parameter to improve clarity and context of log messages for better debugging
replaced ` maxParallelThreads ` with ` MAX _ PARALLEL _ TASKS ` in ` OverseerTaskProcessor . java
replace ArrayList with CopyOnWriteArrayList for thread - safe access in FixedByteMVMutableForwardIndex and FixedByteSVMutableForwardIndex
fix miss license header in java . base module
added a null check for destBuffer in FlipTransition . java to prevent potential NullPointerExceptions during execution
camel - jbang - fix the camel - msv unit test error
updated the condition to check if ` beginCycle ` is greater than ` currentCycle ` instead of equal to ` currentCycle ` to ensure proper
updated random value generator from 6 to 10 in JdbcExpiringCodeStore . java and adjusted corresponding tests in CodeStoreEndpointsTests . java to
added a check for UniqueConstraint instances in StandardObjectChangeFilter to ensure compatibility with unique constraint handling in the change filter logic
updated MediaDetailFragment . java to improve handling of language descriptions and replace string splitting with a HashSet to enhance code readability and maintainability while
catch all arrayindexoutofboundsexceptions , log them instead of swallow them
add withreferencefilter ( ) and withfilter ( ) method to list image
camel - 14284 : camel - jms should not require bridgeerrorhandler to be configure .
added checks to handle specific conditional statements in OpExclusionUtils . java and set all ops to true if no ops are found to ensure proper
added return false statements in DatabaseCommand . java to ensure proper handling of command execution flow
bug731642 removed politician name from honest politician example
[ hotfix ] [ zeppelin - 5287 ] fix the npe of beanshellinterpreter # initfile (
updated RestletComponent to conditionally set the URL based on the port value to ensure proper URL generation based on the provided port configuration
removed unused block imports and added a case for WALL _ SIGN in SchematicFormat . java to streamline the code and improve cl
added a system property for maximum query length in QTestUtil . java and modified session configuration handling in SessionState . java to improve query performance
changed access modifiers of userName and securityMgr to private and refactored the createHttpConnector method to use a baseHttpConfig method to improve
updated sink names from " writeKafka " to " hdfsSink " and " kafkaSource " across multiple files to standardize naming conventions
updated HiveConf and HiveSparkClientFactory to check for the presence of " spark . app . name " and modified SparkConf handling to
fix : fix typo in managedclassfactory . getincludedproperties ( )
danielwagnerhall : remove the maximisewindow test and use the windowhandle instead .
updated methods in LocalCellProviderFactory , AbstractEmbeddedCellBuckOutInfo , and DefaultProjectFilesystemFactory for improved path resolution to enhance
updated the assertion in TestXMLEntityExpansion to check for the presence of " entity expansions " to ensure that the error message
modify table offset and length assignments to mask values with 0x7FFFFFFF to ensure that only valid font data is included in the table
removed the customize method from DirectMethodHandle and added an assertion to ensure that the customized form field is not null to avoid potential null pointer exceptions
refactor buffer allocation and coordinate checks in LineChartRenderer . java for improved clarity and functionality to enhance code readability and maintainability
refactor flavor validation and build target handling in AndroidBinaryDescription . java to improve clarity and maintainability of flavor validation logic
updated buffer assignment from offset to i in LwjglGL11 . java to ensure proper buffer management during rendering operations
added new classes ` Property ` and ` PropertySuper ` to handle class resolution errors to provide a clearer error message when a class is not
do n ' t remove shutdown hook if shutdown hook be enable
updated FilterChainProxy and VirtualFilterChain to use FilterChjainProxy instead of FilterChainProxy and removed the URL parameter from the constructor
replaced Collections . sort with Arrays . sort and refactored return statements in PercentileAggregationFunction . java to improve performance and readability
added checks for schema loading before loading tables in MetaDataBasedSQLCompletionProvider and modified MDTable assignment logic in QueryTypeAnalyser to ensure
set baseType to null in DatabaseInfoRetriever and initialize literalPrefix , literalSuffix , and localizedTypeName in MutableColumnDataType to ensure proper initialization of
pdfbox - 4071 : fix javadoc warning in javax . swing . plaf . view
replaced static instances of ` getInstance ( ) ` with final static instances of ` ObjectEqualEvaluator ` , ` ObjectNotEqualEvaluator ` ,
updated target platforms from " osx _ x86 - 64 " to " osx _ config " and " linux _ x86 _ 64
added sound effects functionality to AllAppsView . java to enhance user experience by enabling custom sound effects
changed the exception type in the main method from Exception to IOException to provide a more specific exception type for better error handling
added granularity setting to leftAxis in BarChartActivitySinus . java to enable granularity for left axis rendering
refactor version comparison logic into a separate method ` compareVersions ` to improve code readability and maintainability by reducing duplication
refactor ContextHandlerGetResourceTest to use MavenTestingUtils for directory handling and add OS support assumptions to improve test reliability and ensure
added a ` close ` method to multiple classes and implemented the ` close ` method in ` JsonAsyncHttpPinotClientTransport ` to ensure
improve mockappender . awaitappend to be thread - safe
[ beam - 4142 ] improve error message when hadoopresourceid be not a directory
removed unused sprite imports and updated import statements in IsometricStaggeredTiledMapRenderer . java to streamline code and improve read
removed duplicate unbindHandle call in ItemServiceImpl . java to streamline the code by eliminating redundancy
refactor Config and Attribute classes to improve code organization to enhance maintainability and readability of the codebase
simplified conditional checks in OtherActivityTouchConsumer . java to improve code readability and maintainability
replaced the method of setting image tint for navigation buttons to utilize the configuration ' s UI _ MODE _ NIGHT _ YES
pdfbox - 4892 : throw instead of abort if language can not be find
replace bootstrapMethodIndex with refKind and memberIndex for better clarity to improve code readability and maintainability by using a more descriptive
added BlockFormattingContext parameter to findBox and findElementBox methods in BasicPanel . java to enhance layout handling by incorporating block
added error handling and standard output output retrieval in WorkerProcess and WorkerShellStep classes to improve error handling and provide clearer output during job execution
added null check for the operator in the Collections class and implemented error handling for null operators in CheckedListReplaceAll to ensure robust handling of null
added conditional logic to handle write operations in SslConnectionTest . java to improve test reliability by controlling write behavior on connection
added device configuration change listeners to DeviceFlag and made defaultValue final in FeatureFlags to improve listener management and ensure immutability of feature flags
added JUnit @ Ignore annotation to GatewayRSocketIntegrationTests . java to temporarily disable tests related to issue gh - 1114
removed import of MalformedURIException in StandardRequestHandler . java to eliminate unused dependency and improve code clarity
update instructorfeedbackeditpage to focus on the ' next ' button instead of the ' next ' button
refactor subscription logic for ` ownTradesObservable ` and ` userTradeObservable ` in ` KrakenStreamingTradeService . java `
replaced System . err . println with System . out . println in ChangeableUrls . java to improve output visibility for Class - Path entries
added a boolean parameter ` randomAccessRows ` to the ` SparseRowMatrix ` constructors and modified the logic for creating ` SparseRowMatrix `
bug 10611 : do n ' t create usage event for volume delete when poolid be null
refactor file input stream creation to use dynamic path based on Hive configuration to improve flexibility in specifying the path for local plans
use vendored guava to fix build
memorycallgraphbuilder : register cct provider after call graph .
fix a nullpointerexception in the conference chat manager when the protocol provider do n ' t have the multichat operation set set .
do n ' t fail save if the file can not be write
added a new FolderSyncActivity to handle folder synchronization in the DrawerActivity to facilitate users to manage folder synchronization within the application
[ hotfix ] [ network ] close network buffer pool in sequentialchannelstatereadertest
fix a bug in spanishtreenormalizer that lead to malformed tree
replaced the method of obtaining the point value from a reader to a packed value slice to improve efficiency by directly using the packed value slice
added LocaleRandomizer and its corresponding test class LocaleRandomizerTest to provide functionality for generating random locale values based on available locales
tika - 3352 -- add more test for mime type detection
added version 10.0 to the list of supported versions in Installer . java and AutoUpgrade . java to ensure compatibility with the latest version
refactor the thread name setting logic in TCPTransport . java for improved clarity to enhance security and maintainability of the code
do n ' t use the read timeout when block = false
updated default watch delay from 120 to 600 milliseconds in TimelineMetricConfiguration . java to allow for a longer watch period for better performance monitoring
updated error message to include the current name of the previous column to improve clarity of error reporting for primary key constraints
added date formatting functionality to the ThirdEyeJiraClient to enhance date handling capabilities for better user experience
refactor priority frame generation to use a priority generator to improve code clarity and maintainability by centralizing priority frame generation logic
added a constant for the maximum scalar replacement code size and updated the scalarReplace condition to ensure scalar replacement only occurs when the entire class length is
added DATE _ TAKEN to the projectionTest array and updated folderSortOrder and fileSortOrder to include DATE _ TAKEN instead of DISPLAY
adjusted rectangle dimensions in TexturePacker2 . java for drawing images to ensure correct rendering of images by adjusting dimensions
added ServletContextHandler and modified WebSocketUpgradeFilter handling in JettyWebSocketServerContainer and JettyWebSocketServletContainerInitializer to improve WebSocket filter management and
added shutdown methods for validateSignService and transactionHandlePool , and modified the initialization of the nodePersistTaskTimer in NodePersistService to ensure
added a new annotation processor for RawJsonRequestBody and registered it in the JaxrsSwaggerGeneratorContext to enable processing of raw JSON parameters in
added a new method ` newTarget ` to create a ` Target ` object with specified target type and extension to facilitate the creation
updated BeanContainer to use an ArrayList for entries and added a new BeanContainerTests class to enhance functionality and improve test coverage for the BeanContainer
hbase - 25836 addendum fix the metric name in testmetricsregionserver
camel - 16400 : added oncompletion listener to the cachedoutputstream to release fileinputstreamcache when exchange complete .
add deviceid to teltonika position ( fix # 2692 )
replaced ` Files . readFirstLine ` with ` Files . asCharSource ` for reading the first line to improve code readability and
added a check for null operator in JCAssignOp and created a new Test class to ensure proper handling of null operators and provide a default operator
added a boolean flag ` enableAccountHandling ` and modified ` onCreate ` calls in ` BaseActivity ` to conditionally execute account handling logic
improve isoschroneresource . getmaximumboundingbox ( ) to use geometryfactory . createpoint ( ... ) ( #
modified DrillViewTable to include a path parameter and changed its constructor to accept a list of paths to enhance flexibility in view management by
updated the constructor of PooledByteBufAllocatorL to include additional allocator parameters to enhance flexibility in memory allocation settings
changed the type of the array from double to short in ObjectInputStream . java and added a new class CloneArray . java with a test for cl
added LLAP _ IO _ THREADPOOL _ SIZE configuration to HiveConf . java and modified executor initialization in LlapIoImpl . java
re - initialize debug and ssllogger for jdk11 +
updated latitude and longitude range checks in LatLonGrid . java and added a new test method in TestLatLonGrid . java for growing
simonstewart : add expectedconditions . invisibilityofelementwithtext ( ) and expectedconditions . refreshed ( ) method to
added a new parameter ` isInsertOverwrite ` to the ` replaceFiles ` method and modified its access level to private to enhance functionality by allowing
added tests for the ` SomeInnerClassReflector ` to verify the behavior of the ` getEnclosingObject ` method in ` SomeInnerClass
added " auto _ generate _ android _ facet _ sources " to the configuration and modified its value in IjProjectBuckConfig to enable
updated message handling in HubChangeExecListener to include changeSet ID and author to improve clarity of log messages for better debugging and monitoring
add support for override link property in quicklinks configuration ( # 1193 )
updated annotations in InitialConfig . java and YamlConfigFileDTO . java , and added a toString ( ) method to YamlConfigFileDTO . java to
updated generic type parameters in SimpleForwardingServerCall and SimpleForwardingClientCallConfiguration to improve type safety and readability of the code
refactor ` forName ` methods in ` mmm Class . java ` and ` ppp Class . java ` to enhance class loading functionality to
updated imports and refactored code for better readability and consistency in RequestItemRepositoryIT . java to enhance code clarity and maintainability
replaced ` ThreadPoolExecutor ` with ` ThreadPoolExecutorEx ` in ` GroupExecutor . java ` to utilize ` LinkedBlockingQueue ` for
changed the access modifier of the setSecurityContextAccessor method from package - private to public to allow access to the setSecurityContextAccessor method from other classes
updated imports and refactored HumanTime converter implementation in TimeStepdefs . java to streamline code and improve clarity by utilizing
move spark _ isolated and spark _ recessive to the right place , so they will be in the right place .
updated RestInvocationHandler to accept a URL parameter instead of an ExchangeSpecification instance to enhance flexibility in proxy creation by allowing the URL to be
updated print statements in RecordGenerator . java for improved clarity to enhance readability and maintainability of output messages
camel - kafka : do not commit offset in kafka consumer if auto commit be enable .
removed the releaseLock call and updated outputStatement calls in LoggingExecutor , and added a flag in StandardLockService to ensure proper handling of database
updated @ SuppressWarnings annotations in AbstractAuthorizeTag . java and added deprecation and serial warnings in AuthorizeTagCustomGrantedAuthorityTests . java to improve code
fix findbugs warn - unnecessary ' this ' keyword
polish ` ` fix mutability of spring - boot auto configuration ' '
updated the ticker adaptation from baseSymbol to counterSymbol in VirtExMarketDataService . java to ensure the correct ticker is returned
camel - 16400 : fix the build error of camel - core
updated the way the " testId " is retrieved in HoneycombJdbcInterceptor to use the system ' s property instead of a UUID
added synchronization to date and number format parsing to ensure thread safety during concurrent access
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
updated height map height scaling from a fixed value to a dynamic value to allow dynamic adjustment of the height scale based on user - defined settings
updated equality check in SecurityConfig and changed assertion from equals to isNotSame in SecurityConfigTests to ensure correct comparison behavior for string attributes
set default value of ` dumpPartitionId ` to ` false ` to ensure that the configuration defaults to ` false ` for ` dumpPartitionId
added UTXO - related imports and implemented a test setup for TronTXOutput and TronTXOutputs to facilitate testing
[ java ] ignore unused variable name that start with ` ` ignored ' '
pdfbox - 4892 : avoid npe , a suggest by valerybokov
added a test for new job parameters overriding previous restart parameters in JsrJobOperator to ensure that job parameters are correctly validated during job execution
added a boolean field ` disallowBatchOnCascade ` and a method ` isDisallowBatchOnCascade ` to the ` DatabasePlatform
removed redundant initialization of the Principal variable and its usage to streamline the code by eliminating redundancy
refactor core closing process to use an executor service for better resource management to improve thread safety and resource management during core closure
updated visibility logic for mActionsView based on fullscreenProgress in RecentsView . java to ensure mActionsView is only visible when
refactor parameter handling in RunIdIncrementer to ensure a default JobParameters is used when parameters are null to improve code clarity and prevent
refactor BasicEntity and TestUtil classes to improve code organization to enhance maintainability and readability of the codebase
added assertions to verify the expected results of the getMatchedDevicesPlan method in SchemaRegionTestUtil to ensure that the correct number of matched devices
[ 3.0 ] log metric event error in case of exception ( # 9043 )
added a conditional check for ` max ` in ` EigenvectorCentrality . java ` and created a new ` Eigenv
replaced hardcoded registry port with a dynamic port variable in LookupIPv6 . java to enhance flexibility by allowing dynamic port assignment
refactor geometry generation code to use a unified buffer creation method with additional parameters to improve code readability and maintainability by reducing redundancy
beacon : set amplifier to 0 instead of 2 to fix incorrect amplifier value .
refactor TubeCalc class to improve code structure to enhance maintainability and readability of the code
disable http client health check by default
change the type of the ` groups ` list from ` List < Class > ` to ` List < Class < ? > > ` and add
updated bug annotations and added a timeout for the main method in bug8057791 . java to improve code clarity and ensure proper timeout
make the scheduler daemon to allow the application to exit via main method completion
fix lexicon recipe build error on some machine
added a reflection access check in JavaAdapterFactory . java to ensure proper access control for reflection types
( chore ) camel - amqp : enable lazy session creation for camel - mina test
updated initIOContext method to accept an additional RecordReader parameter across multiple record reader classes to enhance flexibility in IO context initialization for RCFile
deleted ClassLoaderHolder . java and LoaderManager . java files to remove unused classes to streamline the codebase
added a method to handle configuration changes and modified file removal logic in FileStore . java and JavaLanguageServer . java to improve file management and
added try - catch blocks around session callback registration and unregistration in PackageInstallerCompatVL . java to handle potential exceptions during session registration and
updated index paths in TestBackwardsCompatibility . java to remove unnecessary directory structure to streamline the index creation process and improve code readability
[ hotfix ] [ akkarpc ] make akkarpcserviceutils # createandstart configurable
added a retry configuration for mapreduce map retries in TestExportSnapshot . java to increase the maximum number of attempts for improved reliability during
pdfbox - 4892 : fix typo , a suggest by valerybokov
add a new test class SslConnectionTest for verifying SSL connection lifecycle to ensure proper handling of SSL connections and prevent potential SSL handshake issues
added validation for address family types in InetAddress and NetworkInterface classes to ensure only valid IPv4 and IPv6 addresses are processed
added a test method for serializing dates in a collection in DefaultTypeAdaptersTest . java to ensure that date serialization functionality works correctly for different
refactor Message class for improved readability to enhance maintainability and clarity of the code
nifi - 1341 : fix the bug that putdatabaserecord do n ' t handle the first update key correctly
corrected the loop condition in TableOutput . java to correct the calculation of the loop boundaries
pdfbox - 4892 : avoid npe , remove unneeded null check
change priority of va _ format _ string _ EXTRA _ ARGUMENTS _ PASSED from NORMAL _ PRIORITY to HIGH _ PRIORITY when format string
[ java ] localvariablecouldbefinal : add property to ignore non - final loop variable
added PDF version and full compression settings in PDFExporter and updated the sample file path in PDFExporterTest to ensure compatibility with PDF 1.5
added unit tests for the LdapUserDetailsMapper class to ensure role attribute mapping functionality works as expected for multiple and non - retrieved role attributes
make ldap connection timeout configurable
refactor multiple TestDescription classes to improve code organization to enhance maintainability and readability of the test suite
refactor Pixmap , ManifoldPoint , and TextureRegion classes to improve code organization and maintainability
replaced ` shouldCacheIterator ` with ` shouldAvoidAllocation ` in multiple hash map classes to improve memory allocation handling by preventing unnecessary
added a condition to check if the handler state is invalidated in the gesture handling logic to ensure proper handling of gesture states when the handler is invalidated
updated mMaxDistanceForFolderCreation and mOverScrollPageIndex values in Workspace . java to adjust folder creation distance and overscroll page
updated import statements and configuration handling in OciConfigConfigSource . java to improve code clarity and utilize ConfigProviderResolver for improved
refactor Testjsig class to improve code structure to enhance maintainability and readability of the test cases
mana ring and tablet now use the mana count from the stack , not the mana value .
regenerate client with updated copyright year ( # 4382 )
removed the serialVersionUID field and added a @ SuppressWarnings annotation in P11TlsPrfGenerator . java to suppress warnings related to serialization
refactor validation logic for tsFile resources in DataRegion . java to improve clarity and error handling to enhance code readability and ensure proper
added new classes ` Switch21 ` , ` Switch19 ` , and ` Switch21 . java ` with various string formatting methods to enhance the
updated error message formatting in ComparableSubjectTest . java to improve clarity and consistency of error reporting
added a new test class TestStreamHelper and modified StreamHelper to set XML standalone flag to ensure compatibility with Apache POI ' s XML processing
updated the maximum capacity check and improved error messages in Int2ObjectCache . java , and refactored the string building process to enhance
added ordering functionality for security filter chains in the WebSecurity configuration to ensure correct ordering of security filter chains during configuration
removed the ` TimeInForce . GTC ` parameter from the ` OrderType ` constructor in ` BinanceTradeService . java ` to
refactor FloatRangeRandomizer to extend AbstractRangeRandomizer and update its methods for min and max values to improve code reusability and
updated KEY _ SEP from ' \ 0 ' to ' \ t ' in RocksDBBuildInfoStore . java to ensure proper formatting
camel - 14263 : camel - activemq - make it easy to use camel - jms with spring boot tooling
added error handling in SourceUtils and created a new test class for bound retrieval to improve robustness by providing a fallback method for missing field errors
refactor LeafFilterFactory to use a dedicated method for creating filter predicates based on Parquet type to improve code readability and maintainability by
modified BatchPropertyBeanPostProcessor to check if the artifact name starts with the SCOPED _ TARGET _ BEAN _ PREFIX before processing it to
fix ( core ) : read all certificate from inputstream for httpssegmentfetcher
refactor ` getDefaultBooleanValue ` method to return a ` String ` instead of a boolean and add a new ` DnsFallback ` class for
ww - 4071 add exception detail when fail to write a tag
changed the ` success ` field to ` url ` in the ` DepositAddress ` class and updated related constructor parameters to improve clarity
refactor the Privilege return statement to use a lambda expression instead of an anonymous class to improve code readability and ensure proper resource management
removed " address " and " phone " scopes from the OAuth2 provider to simplify the scope configuration and improve clarity
refactor submission to use a dedicated ` Start ` class for managing the ` _ started ` state to improve code readability and encapsulate the
added new constants for hue and saturation in WLedBindingConstants . java and updated the WLedHandler . java to use these constants to improve
replaced the ` isValidCaller ` method with a static final set of valid caller names to improve code readability and maintainability by using a
added a new method ` caseJSRInst ` to the ` InstSwitch ` class to facilitate the handling of JSR instances
[ http : / / issues . apache . org / activemq / browse / amq - 2696 ] subscriptionactivatingsubscriber
fix # 3235 : remote metadata be update instead of delete + insert ( # 3282 )
added elevation handling for contact items in ContactItemInflater to ensure consistent elevation display across different Android SDK versions
renamed variable ` typeInformation ` to ` identifier ` for clarity to improve code readability and maintainability by using a more descriptive
replace direct file reading and writing operations with privileged actions in SandboxFileManager . java to enhance security by ensuring that file operations are executed
updated GroovyParserVisitor and GroovyPrinter to handle the " [ " and " ] " operator correctly to improve the parsing and printing of Groovy binary
updated warning message to include the exception class name instead of the message to improve clarity of error logging for better debugging
updated character reading and compression logic in RecordInputStream and UnicodeString classes , and added a test for UTF - 8 reading in TestUnicodeWorkbook to
added a test for downloading files with Norway characters in their names to ensure correct handling of Norway characters in file names
replaced RuntimeException with CancellationException and added cancellation checks in AsyncResource . java and FingerprintScannerSample . java to improve error handling and provide
[ hotfix ] [ runtime ] fix npe in timedmemberstatefactory when statistic be null
added a test method to remove an object from an explicit collection in MongoTemplateTests . java to improve test coverage for the removal of objects from
move to src / main / resources , update copyright date to 2022
[ hotfix ] [ python ] change newline to % n in coder # isdeterministicnote
added a new boolean variable ` mIsClearAllButtonFullyRevealed ` and refactored scroll handling logic in RecentsView
refactor HiveIcebergMetaHook to use a centralized COMMON _ HMS _ PROPERTIES map for table parameters to improve code maintain
refactor error handling to use a dedicated method for address checking to improve code readability and maintainability by centralizing address checking logic
added a command line argument for the test class path in TestNestmateAttr . java to facilitate the execution of the
updated logging method to use verbose _ schema instead of verbose to improve clarity and consistency in logging output
fix some compiler warning and remove unused import
# 113 - enh : add support for use nested transaction savepoint ( # 113 )
replaced an integer fetch size with a ThreadLocal < Integer > fetchSize in QueryProcessExecutor . java to improve thread safety and manage fetch
[ java ] use noopidlestrategy instead of backoff idle strategy for ping pong .
refactor handling of blocking calls in HttpClientIntroductionAdvice to use a new method handleBlockingCall to improve code clarity and
added handling for HDP _ VERSION configuration in SliderAppsViewControllerImpl . java to ensure that the system property HDP _ VERSION is
added private fields for loaderClass and jusl , and updated close methods in JavacProcessingEnvironment . java to improve resource management and
added DeepCloner class and modified methodBlock access level in ParameterizedRobolectricTestRunner to enhance object cloning to improve memory efficiency
added bind for JETTY _ SHOW _ STACKTRACE to false in ResourceBase . java to disable stack trace display for debugging purposes
added a check for the OBJECT type in NativeObject . java to ensure that the object is not null to avoid potential null pointer exceptions
replaced references to ` sun . jvm . hotspot . types . OopField ` with ` static OopField ` and updated imports
replace RSAPublicKey with PublicKey and update serialization methods in JwkKeyListView . java and JsonWebKeyEndpoint . java to enhance key
make the heap section writable only when useonlywritablebootimageheap be enable .
updated MBeanServerMXBeanUnsupportedTest . java file to improve test coverage for MBeanServerMXBean support
removed the import of OrderClassLoaders from MavenPluginCollector . java to eliminate unused dependencies and improve code clarity
replaced the ` Validator ( ) ` method with ` validator ( ) ` and added ` getOwnerAddress ( ) ` method in multiple actuator
http : / / issues . apache . org / activemq / browse / amq - 2694 - add a main ( )
updated binary command sending logic to handle min and max values correctly to ensure accurate representation of min and max values when they are equal to their maximum
added handling for empty indices in the Protobuf annotation serialization process to ensure proper representation of empty nodes in the graph
[ java ] do n ' t remove correlationid from the set when it ' s already in use .
added method calls to save conflict status in FileDataStorageManager and updated inConflict logic in FileDownloader and FileUploader to ensure compatibility with
added generic type parameters to various collections and methods in the ExecutionContext and related classes to enhance type safety and improve code clarity
replaced instances of ` StrUtils . splitFileNames ( ) ` with ` splitFileNames ( ) ` in multiple filter factory classes to
added Oracle and MySQL specific driver properties in DatabaseFactory to enable configuration for remarks reporting and information schema for different database types
updated the MockMethodInterceptor initialization and added a serialVersionUID in SignedSupportingClassProxyFactory . java ; added a suppression warning in PartialMock
replaced the use of ` Date ` with ` System . currentTimeMillis ( ) ` for time calculations in ` FileChangedExclusiveReadLockStrategy .
[ hotfix ] [ table - common ] wrap executioncontext . environmentinstanceloader in localexecutor
added buffer change handling in TerminalView and TerminalTextViewOverlay classes to improve UI responsiveness and maintain buffer state during rendering
updated formatting and added null checks for ` contents ` and ` pid ` in ` processConfigFile ` method to improve code readability and ensure proper
refactor freeze operation handling in OperationActions and remove unused disableFreezeOperation method in OperationRegistry to improve code clarity and maintainability by
add ` ` insecure ' ' config option to tl ( # 10385 )
refactor JavadocTool to simplify source and class path search logic to improve code readability and maintainability
updated the handling of edge columns in ExporterGDF to use edgeColumnsGDF instead of nodeColumns to improve clarity and consistency in
added cascade option to the OneToOne relationship in DefaultUserInfo . java to ensure that related entities are only created once for the same entity
http : / / issues . apache . org / jira / browse / amq - 4237 - fix equal ( ) and hashcode
updated character encoding from non - US - 8859 to UTF - 8 in AsyncProvidersBasicTest . java to ensure proper handling of special characters
[ hotfix ] remove unused method in rocksdbserializedcompositekeybuilder
added a method to retrieve the static permissions from a ProtectionDomain and updated subjectPd assignment logic to enhance security checks by ensuring proper access
fix some npe in recipehandlerfloatflowers and recipehandlerbrewery , and add a null check for the recipe .
refactor parsing logic in Parser . java to correctly handle nested parentheses to improve parsing accuracy and ensure proper handling of nested parentheses
added a method to show a connection error popup in UploadMediaDetailFragment and modified error handling in UploadMediaPresenter to improve user experience by providing
added a new file ` Issue596 . java ` and modified ` HttpHandlerImpl . java ` to handle unsupported media types to ensure proper
updated bitwise operation from bitwise ~ ( 1 < < bitIndex > ) to bitwise ~ ( 1L < < bitIndex > ) to ensure
refactor ImportLayoutStyle class implementation to improve code readability and maintainability
refactor ConsoleUIService to support both headless and standard input based on environment variables to enhance flexibility in console input handling based on environment
replace mock implementation of AccountManagerCallback with TestAccountManagerCallback in ShadowAccountManagerTest to improve test clarity and ensure proper verification of account
do n ' t cache enclosing type , since it be n ' t need .
rename method names from ` getProperty ` , ` getEntries ` , and ` getConcatSeparator ` to ` property0 ` , ` entries ` ,
[ flink - 22424 ] [ client ] remove the timeout of putalloperation . set ( ) in putalloperation
fix npe when consumer run info be empty or not set ( # 5691 )
[ java ] generate a unique source identity when a driver conductor be create .
added a new file ` TopTabAction . java ` that implements the ` Presenter ` interface to display a toolbar with a label to enhance
camel - 15836 : dynamic router eip should use reactivehelper to schedule dynamic route in order to avoid deadlock .
added junit annotations to the AggregateItemReaderTests class and removed the inheritance from TestCase to simplify the test class structure and improve readability
updated the Procedure constructor to include a generic type parameter to enhance type safety and improve code clarity
added functionality to retrieve and display the number of wikidata edits for a user in AchievementsActivity to enhance user experience by
added a validation check for the length parameter in OfflineSorter to ensure it does not exceed Short . MAX _ VALUE to prevent illegal argument exceptions
do n ' t emit bug for constant long . min _ value , only for long . max _ value
refactor multiple category dataset classes to improve code organization to enhance maintainability and readability of the codebase
enhanced error message in InvalidTopologyTemplateException to include acceptable values to improve debugging by providing clearer context for invalid credential types
updated the random value assignment for the start and end indices in TestVectorUtil . java to ensure that the start and end values are randomly generated
changed the return type of the compareBy method from int to long and simplified time comparison logic to improve precision and readability of the comparison logic
added SSL property handling in TestUtil and modified test assertions in PGPropertyTest to ensure proper SSL configuration and validation in tests
enable ` $ . download ( file ) ` for ` $ . download ( file ) ` and ` $ . download ( file ) ` (
updated flight configuration handling in BaseMotorMount and RecoveryDevice classes to check for null before cloning to improve robustness by avoiding potential
added a condition to check if transcoding is disabled in DLNAResource to ensure proper rendering behavior based on configuration settings
added checks for empty lists and empty lists in TableDiffer and modified return logic in DataTable to ensure correct handling of empty lists and improve error
added a customIgnoreTag constant and logic to remove it from the iterator if the section ' s native code starts with a custom ignore tag to
camel - 19050 : camel - jdbc - optimistic locking should throw optimistic locking exception instead of runtimeexception
fix bug with @ configurationproperties ( ` ` parent ' ' ) and @ configurationproperties ( ` ` nationality ' ' ) ( #
updated ` PreferencesActivity ` to extend ` LimitlessIDEActivity ` instead of ` IDEActivity ` and added padding adjustments to enhance functionality
deleted the ClusterNodeInfo . java file to the class is no longer needed for the project
removed unnecessary whitespace in ShieldedTransferActuator . java to improve code readability and maintain consistency
added debug output statements to indicate the chosen ciphersuite in ServerHandshaker . java to enhance visibility into the chosen ciphersuite for debugging purposes
updated template selection logic in ChooseRichDocumentsTemplateDialogFragment and ChooseTemplateDialogFragment to handle single and multiple templates appropriately to improve user experience by
added a HashMap to track node drafts and implemented duplicate label handling in ImportContainerImpl to improve data integrity by preventing duplicate node IDs and
added a new file R2303044ListSelection . java to implement a GUI with list selection functionality to demonstrate the use
[ java ] do n ' t reuse correlationid in the driver conductor to avoid duplicate registration .
added a null check for mWorkspace in the Launcher class to prevent potential NullPointerException when mWorkspace is not initialized
added a new test method ` testCompoundPropertyTwice ` to ` StepScopePlaceholderIntegrationTests ` to verify the behavior of compound properties with
hive - 20619 : fix rowcount in statsrulesprocfactory when compute new rowcount ( liu shaohui )
added path and query parameters handling in SpringBootDocBuildTemplate . java and simplified stream processing to enhance code readability and maintainability while ensuring
minor code cleanup , no functional change
replace ` DistBuildCachingEngineDelegate ` with ` CachingBuildEngineDelegate ` and introduce conditional instantiation based on remote configuration to enhance flex
update RuntimeException to include JSON string representation in the error message to improve error reporting by providing more context about JSON parsing issues
added a DEBUG flag check before logging filtered events in WidgetsModel . java to optimize logging to avoid unnecessary logging when debug is disabled
refactor Console and Scanner classes to improve code organization to enhance maintainability and readability of the codebase
updated the calculation of numTerms in SimilarityBase . java and added a test for discountOverlapsBoost in TestSimilarityBase . java
added a check for the send method in SimpleMailMessage and MimeMessage tests to ensure that the send method is only called if it is present
added ' exit ' and ' quit ' methods with corresponding properties in Global . java and removed them from ScriptingFunctions . java to streamline
updated the initialization of LoanBrokerGateway in LoanBrokerSharkDetectorDemo . java to use a context variable instead of a local instance
renamed methods and variables from ` getFirstUnverified ` to ` findFirstUnverified ` across multiple files to improve clarity and consistency in method
cloudstack - 7041 : fix npe in vmwarecontext when no cookie be find in the request
corrected spacing in authority assertions in ResinAcegiAuthenticatorTests . java to improve code readability and maintain consistency in formatting
change eckey . tobytes ( ) to use 32 byte to avoid overflow .
updated the property key for disabled mod list from " fml . disabledMods " to " fml . modStates " to align system
refactor account selection handling into a separate method for clarity to improve code readability and maintainability by encapsulating dialog display logic
[ hotfix ] [ stream ] improve error message when collectsink can not connect to the client
added validation to ensure that an empty result from the validator smart contract call is handled correctly to improve error handling by throwing an exception for unexpected results
updated TexturePackerFileProcessor to handle empty JSON files by checking for null before reading fields to improve robustness by preventing null pointer exceptions
removed conditional check for null data source and JNDI in PooledConnection . java to simplify the code by eliminating unnecessary checks
updated TARGET _ MB and WINDOW values from 10 , 000 to 1 , 000 , and introduced a sink object to optimize memory allocation and optimize
do n ' t try to write to stdout / stderr if we ca n ' t open the console
set the credential refresh delay to 100 milliseconds in KinesisConfigUtil to improve reliability of credential management in the application
refactor AlertDialog usage to use a new method ` showInfoAlert ` to improve code readability and maintainability by reducing duplication
modified the parameter name from ' values ' to ' pack ' in the test method and added a package argument to the test method to clar
updated Java version from 1.7 . 0 _ 01 to 1.8 . 0 _ 31 in ModulesTest . java and modified Ham
added a check to avoid adding shared dependency to the dependency list if they already exist .
added a set to manage ` ZipFileInputStream ` instances and modified the releaseInflater method to ensure proper resource management and cleanup of ` ZipFileInputStream
corrected the spelling of " DATAMATRIX " to " DATA _ MATRIX " across multiple files to improve code readability
added active and idle handling methods to SequenceGeneratorSource to improve execution logic based on key ranges
[ hotfix ] fix typo in blobserver # getcurrentactiveconnections
replaced ` findAny ( ) ` with ` findFirst ( ) ` and ` getAnnotations ( Class < T > type ) ` in ` Annotated
added support for " ppc64 " and " ppc64le " architecture checks in Bits and ByteArrayAccess classes to ensure compatibility with additional
updated the RuntimeException message in RoboMonitoringInstrumentation . java to include a link to the GitHub issue to improve error reporting and guidance on
updated waitWithDeadline parameters to use Long . MAX _ VALUE instead of MINUTES for timeout values to simplify timeout handling and improve clarity in
replaced instances of ` Date ` with ` Instant ` and ` ZoneOffset ` in ` DateUtilTest . java ` to improve date handling
refactor BytesRef class to improve code readability to enhance maintainability and facilitate future updates
added a Toast message to notify users that YouTube Player does not work on Lollipop yet and waiting on an update from Google
added checks for SQL syntax errors related to unterminated dollar quotes and named dollar quotes in the parser to ensure proper handling of SQL syntax
fix a crash with anysoftkeyboard when there be no vibrator
updated HTML table attributes and modified background color handling in DotRenderer . java to improve visual consistency and clarity of HTML output
added a method to check if a configuration variable is encoded in HiveConf . java and updated SetProcessor . java to handle encoded parameters correctly to
pdfbox - 4892 : catch stringindexoutofboundsexception , a suggest by valerybokov
modified the X509Certificate class to enhance certificate validation logic to improve security and reliability of X.509 certificates
validate wavefront ' s default uri implementation ( # 3903 )
refactor image loading logic to utilize NetworkedCacheableImageView for improved image management to enhance image loading efficiency and maintain compatibility with
removed unnecessary parameters from LauncherAnimUtils . ofFloat method calls across multiple classes to simplify the code and improve readability by eliminating
updated dependencies in DependencyBank . java and BuildScriptHelper . java to include controller versioning to ensure compatibility with the new controller version in the
refactor LaunchedURLClassLoader for improved clarity to enhance maintainability and readability of the code
added imports for JDBC utilities and modified the query method to utilize DataAccessUtils for result set handling to ensure correct column count is used for
add no - cache header to layout tag to disable caching
updated warnMsg to use Locale . ENGLISH in ZkController . java to ensure consistent warning formatting across different locales
added an import for Analyzer and modified the constructor of SolrQueryParser to accept an Analyzer parameter to enhance flexibility in query analysis by
updated copyright year in multiple Java files and added licensing information in PendantAction . java to ensure compliance with licens
removed an unused semicolon from MainTest . java to clean up the code and improve readability
refactor TypeContributions class for improved clarity to enhance maintainability and readability of the code
added handling for VoidColumnVector in VectorizedBatchUtil to ensure proper memory allocation for VectorizedRowBatch
updated parameter from templateName to req . getName ( ) in StatementGenerator . java to ensure the correct identifier is used for measurement generation
removed a type match check for boolean values in AbstractConfig . java to simplify the code by eliminating unnecessary type matching logic
[ java ] add ` ` offer ' ' method to the sessiondecorator interface .
renamed methods ` trustAllXForwardedRemoteAddressResolver ` and ` maxTrustedIndexXForwardedRemoteAddressResolver ` to ` trustAll `
feat ( bootstrapinserter ) : add support for @ nobootstrap annotation
hbase - 25819 use tabledescriptorbuilder . getvalue ( ) method to get max file size and mem store flush size
replaced maxCommits with requestedCommits for better clarity to improve code readability and maintainability by using more descriptive variable names
updated main and run methods to include InvocationTargetException and modified invokeLater to invokeAndWait to enhance error handling and ensure thread safety during execution
added a static final String BUILD _ ID and refactored build metadata handling in CachingBuildEngine to improve clarity and maintainability of
removed unused imports from TransactionCapsule . java to clean up the code and improve readability
removed duplicate call to markAsDone in HttpProtocol . java to streamline the code by eliminating redundancy
added TezConfiguration import and modified copyInto method in TezConfigurationFactory to enhance configuration management by using a default TezConfiguration instance
added null check for keyPurposes in TimestampedSigner . java to prevent potential NullPointerException when keyPurposes is not initialized
modified the conditional statement from ` mIsVisible ` to ` else ` to simplify the logic for better readability and maintainability
added a ` forget ` method to the ` OpenALAudio ` class and modified the ` stop ` method in ` OpenALAudio . java
clear one - off position discontinuity only once in simplebaseplayer
added multiple decimal formats for number ticks in NumberAxis . java to enhance the visual representation of number values in the number axis
replaced the builder method with a factory method for creating TargetGraphAndBuildTargets instances to simplify object creation and improve code readability
removed the use of ` IndexFileNameFilter ` and simplified the file name checks in ` IndexFileDeleter . java ` to simplify the code
add an option for dummy container to disable texture stitcher .
added a default compression level parameter to multiple methods in ApkBuilder and SignedJarBuilder classes to enhance flexibility by allowing different compression levels for
added a test method to include static fields in the JAR file to ensure that static fields are included correctly in generated stub files
replaced UNDEFINED _ FIELD _ SIZE with UNDEFINED _ METRIC _ SIZE and added support for BYTES data type in MetricFieldSpec and related classes
updated string construction and message formatting in multiple test classes to improve readability and consistency of error message formatting
replaced ` id . hashCode ( ) ` with ` Objects . hashCode ( id ) ` in ` Trade . java ` and removed the
added cache management functionality to the ForumService and SpringDataJPAJoinFetchPaginationTest classes to enhance cache management and improve test coverage for
bugfix : pronunciation . featuredefinition , pronunciation . treepath and pronunciation . targetfeaturelister
modified the FormBody handling in SimpleHttp and added a test for null post body in TestHttpPlugin to ensure proper handling of empty response bodies
added a dispatcher to the ClientSideSlb class and invoked it in the ClientSideSlbTest to improve resource management and ensure proper shutdown
modify texture coordinate calculations in TextureRegion . java to account for y - flipping to ensure correct rendering of textures when y - flipping
throw invalidconfigurationexception instead of hazelcastexception when there be unknown property on discovery strategy
updated contextPath initialization to handle null values to ensure a default value is used when no context is provided
[ drools - 6682 ] reinit resource path during kie container reinitialization ( # 2283 )
added B _ TREE _ MAP _ ROOT _ HEADER constant and validation in BTreeMap . java and SerializationHeader . java to ensure the
added support for precompiled headers in ` AbstractCxxSourceRuleFactory ` and updated related methods to ensure proper handling of precompiled headers and
replaced WeakReference with a custom AccWeakReference class to utilize security context for image updates to enhance security by restricting access to
modified visibility of findNextIndex method and adjusted import statements in ObjectMap , ObjectSet , and OrderedSet classes to enhance encapsulation and improve code
update isDirect assignment from true to false in VertexBufferObject . java to correct the logic for determining whether a vertex is direct
fix for ticket : 182 -- remove duplicate code for getaudioeffect help text
changed return type of localToAscendantCoordinates and localToDescendantCoordinates methods from void to Vector2 in Actor and Group classes to allow
pdfbox - 5764 : use input . limit ( ) instead of input . capacity ( ) , a suggest by valerybokov
added null check before removing the close hook in VertxImpl . java to avoid potential NullPointerException when context is not initialized
updated border spacing logic in CellLayout and DeviceProfile classes to accommodate folder layout adjustments to improve layout responsiveness based on container
refactor value parsing in ColumnConfig from NumberFormat to a new ValueNumeric class to improve type safety and enhance clarity of numeric value representation
updated the condition in FormAuthenticator to check if the response is deferred to ensure proper handling of deferred authentication scenarios
updated argument checks in StartArgs . java to use " -- add - to - start " instead of " -- module - start - ini "
added default partition value handling in DynamicPartitionFileRecordWriterContainer to ensure consistent partition value retrieval based on configuration settings
[ hotfix ] [ stream ] add nullability check for streamoperatorfactory
include classifier in conflict id and artifact id in tostring ( )
camel - 8705 : fix kafka consumer to call staterepository . getstate twice for the same topic
added error handling for NoClassDefFoundError in AnnotationSubstitutionProcessor . java to provide clearer feedback when dependencies are missing in the classpath
fix : rename gmail _ notifications _ enabled to enable _ gmail _ notifications in jabberaccountregistrationwizard
doc : [ cryptokey ] fix docstring formatting
fix flaky lumberjackmultithreadtest ( # 2322 )
fix potential npe in player . getplayerdisplayname ( ) and playerupdatehandler . moved ( )
refactor Exchange class for improved readability to enhance maintainability and clarity of the code
api : updateuser api : add secretkey / apikey to updateuser api call
replace switch - case statements with if - statements for various MfaProvider and IdleTimer classes to improve code readability and maintainability by using
updated AbstractMetaDataExportMojo . java file to improve metadata export functionality
added handling for SQLIntegrityConstraintViolationException when dropping tables to ensure that materialized views cannot be dropped due to specific SQL integrity constraints
corrected the property name from " githubAccessToken " to " gitHubAccessToken " in GitHubMilestonePlugin . java to ensure consistency with the
added a new class RoboExecutorService that extends RoboExecutorService to indicate that the class is outdated and should not be used in future development
added menu items for subgroups and root groups in GroupTreeView . java to enhance group management functionality in the UI
camel - jbang - fix a bug in camel - brave . thanks to krisztian kasa for the
refactor argument handling for GCThreads in TestDynamicNumberOfGCThreads . java to improve clarity and maintainability of the
updated CxxPlatforms and KnownBuildRuleTypes to use an ImmutableSet for host flavors instead of ImmutableFlavor to improve flexibility and
updated SQL CREATE statement construction and added parameter handling in CreateTable and CreateTableDeParser classes to improve clarity and functionality of table creation options
changed the way the background color is set in ChatViewerFragment to improve visual consistency by setting the alpha value of the background color to 64
test ( refactor ) : migrate ctiteratortest to junit 5 ( # 4348 )
added clear ( ) method calls in CharTokenizer , KeywordTokenizer , TokenStream , Tokenizer , StandardTokenizer , and DocumentsWriter classes to ensure
pmd : add test to demonstrate that a blockstatement be not crash on a method declaration .
updated StateMachineConfiguration , StateMachineFactoryConfiguration , and StateMachineFactoryConfiguration classes to remove generic type parameters and added null checks for configur
simonstewart : fix the selenium selenium test to work with the new selenium - backed webdriver
log4j2 - 1343 fixed string format for float and double
remove check for managedaggregates in aggregatelifecycle . getcurrentscope ( )
update touchable insets setting from TOUCHABLE _ INSETS _ CONTENT to TOUCHABLE _ INSETS _ REGION to ensure
removed a conditional check for the presence of ' ~ ' in the FencedCodeBlockParser to simplify the parsing logic by eliminating
added support for a configurable socket timeout in multiple classes to enhance socket management by allowing configurable timeout settings
added a delay of 500 milliseconds in ElementAttributeTest . java to handle potential interruptions during execution
updated InputStreamReader to use UTF - 8 encoding to ensure proper handling of character encoding in the input stream
refactor List . java to improve code structure to enhance maintainability and readability of the code
modified the AsyncFileImpl constructor to accept a URI as a parameter and updated the context handling in the context to improve the handling of file operations
added API annotations to CucumberEngineExecutionContext and CucumberTestEngine classes to indicate that the engine execution context is still stable and
fix npe in nuagevspmanagerimpl when there be no physical network
updated the method name from ` retryUploads ` to ` retryFailedUploads ` and modified its logic for retrying failed uploads to improve clarity
updated Java version checks to use ` classFileVersionJava9 ` instead of ` classFileVersionJava8 ` to ensure compatibility with the latest Java version
fix problem with ` ` error ' ' and ` ` warning ' ' in debug output
add a method to remove all header from the asynchttpclient
replaced Vector with ArrayList and simplified argument handling in Main . java to improve performance and simplify code by using getter methods directly
updated the DEFAULT _ GRID _ COLUMN value from 4.0 f to 3f to adjust the default grid column size for improved layout
updated condition in CalcitePlanner to include a check for view creation to ensure proper handling of table presence in query planning logic
updated date pattern in TestHS2HttpServer . java and refactored assertions in TestHS2HttpServer . java to improve date matching
added exception handling when converting a snippet to an object in GraphPrinter . java to improve robustness by preventing crashes due to runtime exceptions
simonstewart : make the ie driver use firefox
replaced ` byteOffset + = BYTE _ BLOCK _ SIZE ` with ` Math . addExact ` in ` ByteBlockPool . java `
fix issue with interactionvalueencoder in non - english locale
http : / / issues . apache . org / jira / browse / amq - 4657 - catch all throwables in the
add @ suppresswarnings ( ` ` serial ' ' ) to all method in papplet . java
updated OcamlDebugLauncher and OcamlBuildRulesGenerator to extend AbstractBuildRule instead of AbstractBuildRuleWithResolver to simplify class
change ` ` save and discard change ' ' to ` ` return to jabref ' '
updated OAuth20DeviceCodeResponseTypeRequestValidator to validate response types and client ID , and improved error logging in NexmoSmsSender
added a call to ` chk ( index , 1 ) ` in ` DrillBuf . java ` to optimize buffer operations for improved performance
updated the ` initTableMapperJob ` method to accept an additional ` inputFormatClass ` parameter and adjusted related method calls to enhance flexibility
updated the method call from ` append ( jrubyClasspath , testClasspathElements ) ` to ` append ( jrubyClasspath , testClasspathElements
sulong : throw descriptive error when eval do n ' t have a language
added deprecation warning for replication commit duration in ReplicationHandler to ensure compatibility with Solr 7.1 and enforce mutability of ' master . RESER
hhh - 15419 - fix cache lookup and cache variable name issue
updated ECKeyPairGenerator to return an Object array instead of a long array for key pair generation to improve type safety and ensure proper handling of key
[ hotfix ] [ runtime ] add suspend ( throwable , jobstatus ) to the statewithexecutiongraph
replaced the singleton instance of ` RotationTouchHelper ` with a direct instantiation to simplify the object creation process and improve encapsulation
refactor port table filtering and mapping logic in UniFiControllerCache . java to improve code readability and maintainability by reducing
updated method parameters from ` lwp _ id ` to ` unique _ thread _ id ` across multiple classes to improve clarity and consistency in
remove old offer that have the same offer id when add / remove offer from the list
refactor to use common constant for tl 1.3 and tls 1.2
added type check for mock in MockitoMethodInvocationControl and refactored mock handling in SystemClassUserCases to improve mock handling logic and
updated constructors in multiple classes to accept a ` PartialDatabaseObject ` parameter and replaced instances of ` DatabaseObject ` with ` PartialDatabaseObject `
removed the import of DisplayUtils and added an extra for the OCFile in the intent to streamline the code by eliminating unnecessary
added error handling and file deletion logic in StoreDirect , StoreWAL , and StoreDirectTest classes to improve resource management and error handling for
added a task snapshot retrieval using UI _ HELPER _ EXECUTOR and modified the stopSwipePipToHome method call to improve task
added hidden functionality to CommandArgumentDefinition and updated LiquibaseCommandLine to handle it to enhance command argument management by allowing hidden states to be
[ hotfix ] [ kafka ] [ test ] change port of loggingkafkaplugintest from 8090 to 9092
use style group ' s sld instead of catalog from styleinfo . getcatalog ( )
added permission checks for launching activities in InstallShortcutReceiver and Launcher classes to enhance security by preventing malicious intents from being processed
added ` getId ( ) ` and ` setId ( ) ` methods to multiple tiled map classes to provide a consistent identifier for tiles based on
refactor Manager class to improve code organization to enhance maintainability and readability of the code
updated JDBC connection URL to include version specification and refactored Session . Builder to include version specification to ensure compatibility with version v0.13
added schemas and includeSchema properties to LiquibaseGenerateChangeLogMojo . java and modified the diffOutputControl initialization to enhance schema
replaced ` putIfAbsent ` method with ` put ` method in ` registryCache ` to improve performance by avoiding unnecessary ` putIfAbsent ` operations
log singlebenchmarkrunnerexception in warn rather than error
removed the ' final ' modifier from the doPutRecord method in AbstractCacheRecordStore . java to allow subclassing of AbstractCacheRecordStore
fix file selector to work on window too .
added tests for handling large and slow HTTP responses in FastCGIProxyServletTest . java to improve test coverage and ensure proper handling of large
added a call to start the ReadInteractionsService in MarkReadService . java to ensure the MarkReadService launches the correct service for
added a conditional check for ` lintClassfile ` before logging warnings in ` ClassReader . java ` to ensure warnings are logged only when `
added configuration for the email server port and updated the properties accordingly to enable dynamic port assignment for SMTP connections in the application
added retry logic for SSLFactory reloading in TlsUtils . java to improve reliability by allowing retries when SSLFactory changes occur
updated the date format in ObjectMapperProvider to include milliseconds to ensure accurate date formatting for better readability
updated the assertion message in SpyingOnRealObjectsTest to clarify that the exception is due to mocking a private class to improve
added functionality to determine if the line ends on a new line based on the end of a line tag to enhance line rendering flexibility based on
updated filePathString initialization to handle potential null values to improve robustness by avoiding potential NullPointerExceptions
removed unused import of DocCollection in TopicStream . java to clean up the code and reduce unnecessary dependencies
add a unit test that verify the charset of the multipart request
updated properties in AbstractCasEndpointTests . java to include specific exclusions to enhance configuration flexibility for managing web endpoints
added a validation check to ensure the current graph is a dynamic graph to prevent runtime errors
log a debug message when a bean of type ` @ scopeone ` be disable
camel - 15836 : camel - jsonpath - add option to suppress exception .
removed duplicate call to ControllerLeaderLocator . create in HelixServerStarter . java to streamline the code by eliminating redundancy
updated usage messages in CLHSDB and HSDB for clarity to improve user understanding of command - line usage instructions
refactored the configureChunkProvider method in FaultTolerantStepFactoryBean . java to improve readability and maintainability of the code
remove deprecate write class and move to sdk 1.0
refactor ShadowAccessibilityManagerTest to use an instance variable for AccessibilityManager and update related test methods accordingly to improve code clarity and
add analytics . group _ display _ id to track usage statistic
replaced instances of ` AbstractBuildRuleWithResolver ` with ` AbstractBuildRule ` and removed ` SourcePathResolver ` from several classes to
replaced the implementation of ` EnumDataTypeHelper ` with a new class ` PostgreSQLEnumDataTypeHelper ` to improve code organization and encapsulate enum
update log path assertion in LogFileTests to use File . separatorChar to ensure correct file path formatting for better compatibility across different operating systems
replaced instances of ` getMapLocalWork ( ) ` with ` getMapRedLocalWork ( ) ` across multiple Java files to align with the
added support for dropping index tables in HiveMetaStoreClient to ensure proper exception handling for unsupported operations
updated visibility check in RecentsView . java to ensure actions view is disabled when visibility changes to improve user experience by preventing unnecessary scrolling
added a conditional to set a specific highlighter based on the operating system type to ensure compatibility with non - Windows systems and improve syntax highlighting
do n ' t report xss _ request _ parameter _ to _ cookie and xss _ request _ parameter _ to _ http _ header
replaced ` toUri ( ) . getRawPath ( ) ` with ` toString ( ) ` in ` HadoopPinotFS . java `
removed an extra semicolon in the removeCaptureListener method call to improve code readability and maintain consistency
change the value of _ metaDataComplete from true to false to indicate that the metadata is not complete
modified the ` removeTaskTarget ` method to execute on the main thread and updated bitmap creation logic to ensure tasks are executed on the main thread
added environment variable handling for release flavor in JsBundleGenrule . java and corresponding tests in JsBundleGenruleDescriptionTest . java to ensure
updated type casting logic in ` mmm Lower . java ` and added a new class ` ppp T6500701 . java `
added tests to verify handling of new line characters in comments and Javadoc in the AddImport class to ensure proper formatting of new lines in comments and
added support for hubMode in AbstractLiquibaseChangeLogMojo and declared hubMode in AbstractLiquibaseMojo to
removed unnecessary null checks for ` item ` in ` JsrChunkProcessor . java ` to simplify code logic and improve readability
added a check for the existence of the linkDb before adding an input path in IndexerMapReduce . java to ensure that the input path
replaced reflection - based method lookup with reflection to access the method for setting the indexing thread pool to simplify the code and improve readability by
removed hardcoded port from the SMS address in GameCanvasImplementation . java to simplify the email address configuration for better flexibility
refactor MapJobExecutionDao to use a copy method for job executions and add a corresponding test case to ensure that job executions are properly serialized and
added a new test class ` DownloadTest ` for downloading PNG images to facilitate testing of image download functionality in the application
updated language handling in multiple classes to normalize language values to ensure consistent language representation across the application
replaced ` UDFArgumentException ` with ` UDFArgumentTypeException ` for input types and argument types in ` GenericUDFRound . java ` to
updated ManageDependencies . java to include null check for selectedVersion before processing managed dependency tags to enhance code robustness by preventing potential NullPointerExceptions
added multiple Ant path matchers to the SecurityConfig class to enhance security by restricting access to specific media types
added JUnit @ Ignore annotation to TestConcurrentDppInserts . java to temporarily disable tests that are not ready for execution
fix : do n ' t generate bean definition for java . lang . object
added an @ Ignore annotation to HttpClientRedirectTest . java to temporarily disable the test due to instability
[ openwebnet ] fix notification delay for energy and thermoregulation
simplify code by remove unnecessary check for socketstatus . open / stop / timeout .
deleted the SunToolkitSubclass . java file to the class is no longer needed for the current implementation
replaced MathUtils with Matrix4 for translation handling and added a method to check for rotation or scaling in the DefaultRenderableSorter class to
[ mybatis ] add test for type handler registry ( # 165 )
pdfbox - 4892 : add support for alternate colorspace with tint transformation , a suggest by valerybokov
updated CommonsApplication to use BuildConfig for API URLs and replaced hardcoded URLs with constants from BuildConfig to improve maintainability and reduce hard
camel - main - http - add health test base on user forum issue
add a null check to the thorn chakram to prevent npe .
added a test for altering tables with indexes extending primary keys in AlterTableWithViewsIT . java to ensure that the system correctly handles
updated offset initialization in FileFloatSource . java and modified assertions in TestFunctionQuery . java to improve code clarity and ensure consistent commit behavior
remove DrillMongoConstants . ID from the fields list in MongoRecordReader to ensure proper cleanup of unused fields during data retrieval
added disconnection methods to YeelightHandlerBase and DeviceBase classes , and modified WifiConnection to handle connection termination to improve resource
added support for AUTO _ INCREMENT syntax in the parser and created a test for it to ensure proper handling of integer types in database interactions
fix # 4796 : add test case for sharedinformerfactory . sharedindexinformerfor ( )
server : fix template detail be n ' t update when create template from snapshot
updated ShadowBitmapFactory to handle RobolectricBufferedImage and improved image size retrieval to enhance image handling and ensure proper initialization of color
removed deprecated constants from LauncherSettings and added new fields in LauncherProvider to clean up the code and encourage the use of updated
( chore ) camel - example - broker : move some resource from the example folder to the example directory
added legendTop and legendTop variables and updated offset calculations in PieChart . java to improve legend positioning for better visual representation
added a check to return early if the world transform det is zero in BaseShader . java to optimize performance by avoiding unnecessary processing when the
added a new file ` MaryScriptCreator . java ` that creates a script for displaying text from user input to facilitate the
nifi - 1341 fixed the issue that listenhttpservlet do n ' t set the flowfile attribute .
removed redundant code for closing the compaction logger and closing the log file in LevelCompactionTsFileManagement . java to improve code clarity and
updated URL attribute retrieval from " xlink : href " to " href " in ComponentDescription . java to simplify access to XML links for better
camel - 14850 - camel - aws2 - s3 : rename timeoutchecker to s3 _ streaming _ upload _ timeoutchecker
hbase - 25827 add more logging to assignmentmanager when cluster be shut down
added null check for span before logging the stopped span in Slf4jSpanLogger . java and updated warning messages in DefaultTracer . java
trim whitespace from the active options before adding them to the configuration to ensure consistent option handling by removing leading and trailing whitespace
added depth preference handling to the wallpaper zoom - out method to allow dynamic depth settings based on user preferences
updated the assertion in OverseerTest to check the success count of overseer actions to ensure that the success count reflects the correct
changed the return value of ` getKernelVersion ( ) ` to ` true ` in ` LinuxFileStore . java ` to always return true
refactor ExecConstants for improved readability to enhance maintainability and clarity of the code
added ScreenRecordRule import and annotation to ThemeIconsTest . java to enable screen recording functionality related to bug b / 260722220
added a method to set the scan attribute for pagination in ScanUtil and updated TableSnapshotResultIterator to utilize it to enhance pagination capabilities for
added a check to ensure lowRange is within the range of 1 , 000 , 000 , 000 to ensure that lowRange does not exceed the
changed access modifiers of keySizeEstimator and valueSizeEstimator to protected in AbstractCachedSource and updated cache size estimation in AsyncWriteCache to enhance
fix a bug in listhosts that return wrong zoneid for host . ( cherry pick from commit 17c419ceb4979ebef0cb756ad6ed15e5c95dfbd4 )
[ zeppelin - 4352 ] fix content type for livy interpreter
updated the removal logic in ZipFileSystemProvider to include zfs as a parameter to ensure proper handling of filesystems when removing a specific zfs
changed the data type of the ` obj ` variable from ` Object ` to ` String ` and updated related methods accordingly to improve clarity and
updated polling wait time from ` hardCommitWaitMillis * 2 ` to ` hardCommitWaitMillis * 3 ` in ` SoftAutoCommitTest
fix ` ` listener . beforeevent ( ) and ` ` listener . afterevent ( log ) ' ' do n ' t throw exception
renamed multiple classes related to the dial package to improve clarity and consistency in naming conventions
reformatted error logging statements in SyncQueue . java for consistency to improve code readability and maintainability
updated the version of the Ryuk container from 0.4 . 0 to 0.5 . 1 to ensure compatibility with the latest testing
updated the method to return additional bootstrap paths instead of bootstrap paths in BootClassLoaderHook . java and added a new TestHook class for testing to
do n ' t try to load legacyxmllayout . jar if it ' s not available
[ hotfix ] [ yarn ] refactor yarnitcase to use createyarnclusterdescriptor method
add miss stats per map for localmap if no data be available
deleted the AllTests . java file to remove unused test suite to streamline the codebase
added support for non - breaking hyphen and zero - width space character in AbstractWordConverter to enhance text formatting for improved readability
added a new test class ` ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest ` to verify that large stack trace invocations do not star
refactor createRowKeyForMappedProperties to use getResultMappingsForRowKey method to improve clarity and maintainability of the code
added a flag to indicate that the event is handled in UIText . java to ensure proper handling of user input events
deleted the ` Controller . java ` file and renamed ` Weldby ` class to ` WeldModule ` to streamline the codebase by
[ zeppelin - 5287 ] fix capture group check in empty check
changed the access modifier of ` liquibaseProLicenseKey ` from private to protected and removed the logging statement to allow subclasses to access
mondrian : rename setmemberreader ( ) to setMeasureshierarchymemberreader ( ) , a suggest by valerybok
[ gr - 16901 ] add debug info to help .
mondrian : fix typo in mondrian . properties javadoc
added support for absolute friend paths in Kotlin compiler arguments to enhance flexibility in specifying source paths for Kotlin compilation
added aliases for character scripts in Character . java and modified main method in CheckScript . java to enhance script functionality by allowing multiple file inputs and
updated equality checks in ExecutionCommand to use ` equals ` method and added a utility method for converting JSON strings to ` ExecutionCommand ` to improve
refactor Mockito class implementation to improve code readability and maintainability
refactor OCFile . java to improve code structure to enhance maintainability and readability of the code
added a toString ( ) method to the SystemScope class to provide a readable string representation of the SystemScope instance
refactor CSS parsing logic to handle both number and percentage types to improve error handling and validation for parameter values in the cmyk ( )
added a new test method ` testLocalIndexReverseScanShouldReturnAllRows ` to validate the reverse scan behavior of the local index to ensure
updated import statements and method names in BaseAndroidTestCase , BackupHelperTest , and LanguageHelperTest to improve clarity and consistency in context
updated string handling in multiple activities to use a unified ` getString ( ) ` method to improve code readability and maintainability by standardizing string
simplified conditional checks in RendererUtilities and updated test cases in RendererUtilitiesTests to improve code readability and maintainability by removing unnecessary logical
replaced Iterator < JsonNode > with ArrayNode for ask and bid in KrakenStreamingAdapters . java to improve type safety and clarity
added a try - catch block to handle potential SQLiteException when adding a same column in the database to improve robustness by logging a known problem
removed debug print statement from AsyncServletIOTest . java to clean up the code and reduce unnecessary console output
added hash table load factor and refactored size calculation methods in ConvertJoinMapJoin . java to improve performance and accuracy of data size calculations
updated the ` TrackSelectionHelper ` to use a ` Context ` parameter instead of a ` LayoutInflater ` for view building to improve flex
added authentication handling methods to SecurityMockMvcResultMatchers and corresponding tests to enhance security testing capabilities by allowing authentication assertions
vpc : set gateway net ' s vpcid to null when it ' s not set .
[ flink - 10955 ] [ test ] disable flink savepoint test on jdk11
change field annotation from ' private ' to ' private ' for multiple classes to ensure consistency in access modifiers for better encapsulation
modified loop and condition in Actor . java to ensure index bounds are respected to prevent potential ArrayIndexOutOfBoundsException during action execution
updated BitmexStreamingExchange to extend BitmexExchange instead of BaseExchange to align with the new Bitmex API for better integration
added test to verify virtual metadata for the relationship endpoint
added null check for spatial before processing to prevent potential NullPointerExceptions when spatial is null
updated the handling of the ` lastTokenFiltered ` variable in ` ConditionalTokenFilter . java ` and added position increment logic in ` FixedShingle
set the graph state after the node in unsafestore / storefieldnode .
updated the method call from ` super . putAddress ` to ` io . putAddress ` in ` BoundedMemoryIO . java ` to
added an assertion to check if the CAS event repository is empty to ensure that the event repository is not empty before proceeding with further operations
removed unused parameters ` attributeTemplateName ` , ` attributeLine ` , and ` attributeCol ` from ` AuthenticationAttrProcessor . java ` to simplify
added null key check in MacOSXPreferences and created a new class RemoveNullKeyCheck to ensure that a specified key cannot be null to
added a runtime exception throw in the setTypeface method of CodenameOneTextPaint to ensure that a runtime exception is thrown when attempting to
implemented the ` open ` method in multiple filesystem classes to handle input streams for Azure , LocalPinotFS , and HadoopPinotFS to
simonstewart : remove the deprecated fail ( ) method from the webdriver runner
simplified the conditional statement in SolrRequestParsers . java to improve code readability and maintainability
refactor DefaultResultSetHandler to use instance variables for constructor mappings instead of a separate ResultObject class to improve code clarity and maintainability by
updated SQL syntax for foreign key constraint reference in CreateTableGeneratorTest . java to ensure compatibility with different database schema naming conventions
added filtering logic in VectorizationContext to handle boolean values correctly to improve the accuracy of vector expressions when in filter mode
[ hotfix ] [ config ] fix generic warning in exhaustivesearchphaseconfig
updated the instantiation of ReorganizeTableStatement to use modifyDataTypeStatement to improve clarity and maintainability of the code
updated cluster name handling to use a constant from the Apache IoTDB configuration to improve code readability and maintainability by centralizing cluster name management
improve error handling and logging in peergroup . connect ( )
added logic to handle various style strings based on their values in Nano . java to ensure correct styling of specific styles based on their input
fix datafixer : use adventurenbtconverter to fix blockentity and entity
updated the return statement in NoToStringOnStringType . java to provide a clearer string representation to enhance clarity and understanding of the
updated JVM memory settings from " - Xmx64m " to " - Xmx32m " to optimize memory usage for improved performance
[ test ] add retry analyzer for test method with dataprovider .
updated return statement to use the variable ' bandwidth ' instead of the first element of the tokens array to ensure correct retrieval of the token based on
simonstewart : fix the selenium - backed selenium test to pass
refactor ` doPrintEntry ` method to remove the ` printWarning ` parameter and simplify its usage in the ` doPrintEntry ` method
[ hotfix ] fix checkstyle violation in taskasynccalltest
added checks to ensure that dialog and frame components are opaque and not decorated before setting properties to prevent illegal state exceptions when modifying dialog and frame components
changed the state variable from non - final to final in DefaultProjectFilesystem . java to ensure that the state variable cannot be reassigned after initialization
added support for standalone Redis configuration in RedisObjectFactory to enhance configuration flexibility for Redis connections
fix jabber not be able to create and update chat room . lastseendelayedmessage for jabber chat room .
replaced instances of ` new Callback . Adapter ( ) ` with ` Callback . NOOP ` in ` ResponseNotifier . java ` to simplify
refactor share creation and unsharing functionality by replacing direct operations with a service - based approach to improve code maintainability and facilitate
remove unnecessary check in ` BeanDefinitionInjectProcessor . java ` and add @ Inject annotation to ` FieldPropertyInject . java ` to simplify logic
replaced calls to ` classicPlotWorld . getMinBuildHeight ( ) ` with a variable ` yStart ` in the loop conditions to improve
fix npe in smackintegrationtestframework when run with - dtests . multiplier > 1
tmi - jpeg : do n ' t read interop subdirs when read exif jpeg with interop subdirs
added ENABLED _ LS case handling to VersionTargetGraphMode and modified VersionedTargetGraphCache to utilize DefaultDepsAwareExecutorWithLocalStack to
added a condition to check if the child format is a video to ensure proper handling of video formats in the media processing logic
chore ( deps ) : upgrade java microgenerator to v2.2 . 1 ( # 130 )
added a static load method to LwjglNativesLoader and modified LwjglApplet to use it to control loading behavior based
added escape functionality to CSV strategy and adjusted encapsulator handling to enhance flexibility in handling special characters in CSV requests
updated authorization grant type validation in ClientRegistrations and modified corresponding test cases to ensure that only the " AUTHORIZATION _ CODE " grant type
enhanced error handling by including the cause and self - suppression details in IllegalStateException and IllegalArgumentException to improve debugging information and provide clearer error context
added a SQL query for counting and counting strings in DerivedTableIT . java and modified the iterator initialization in ClientAggregatePlan . java to
added a mapping for the RSquare value in RegressionEvaluator and tested its value in StreamExpressionTest to ensure correct handling of the RS
added handling for request header names in ThreadContextMDCServletFilter to ensure proper context attributes are added based on request headers
refactor SparkPlanGenerator to use a local variable for MapWork instead of casting to MapWork to improve code readability and maintainability by
refactor image retrieval logic in PdfJndiReport , PdfSessionInformationsReport , and PdfDocumentFactory classes to improve performance by caching images
updated caching mechanism in JwtIssuerReactiveAuthenticationManagerResolver and added new tests for trusted issuer handling to improve caching efficiency and ensure correct authentication manager
updated the resource check from ` exists ( ) ` to ` isReadable ( ) ` in ` AbstractScriptDatabaseInitializer ` and added a test for
sulong : do n ' t cache interop function type if it be the only method
removed a redundant sleep statement in AbstractBasicMockingIntegrationTest . java to streamline test execution by eliminating redundancy
added a new file ` KernCrash . java ` that implements a graphical frame with kerning options to demonstrate
added a call to the fail ( ) method in LinkedHashTreeMapTest . java to ensure that the test correctly fails under certain conditions
added a method to retrieve interface IP addresses and updated imports in NetUtil . java to enhance interface address management and improve code organization
make sure housekeeper task be cancel before shut down the pool
updated the client address check from ` getClientAddress ( ) ` to ` getSlaveAddress ( ) ` in ` GroupTransferService . java `
refactor Assert class to improve code readability to enhance maintainability and facilitate easier debugging
added a new test class ` Issue247Test ` to validate the functionality of ` TreeMap ` to ensure correctness of the ` Tree
changed the type of the ` results ` set from ` Set < CategoryItem > ` to ` Set < String > ` and modified the `
added validation logic for today and birth years in ValidatorTest . java to ensure correct error handling for max age validation based on date validity
added error handling for alarm codes and error codes in GrblController . java to improve error reporting by identifying and processing error codes from the
added a condition to return a default home button label when no screens are available to improve user experience by providing a clearer home button
removed the ' count ' parameter from the getTrades method in BittrexTradesServiceRaw and BittrexMarketDataService
updated ConsoleReader and MemoryHistory to improve string handling and flush logic to enhance readability and maintainability of the code
updated the path construction in JavaBuild . java to remove unnecessary " . jdk " suffix to streamline the path for better readability and
replaced calls to ` getDescription ( ) . getBuildRuleType ( ) ` with ` getType ( ) ` in multiple classes to streamline code
print warning for miss control in configure and dcmd
added a validation check for the tolerance value in MaximumInscribedCircle . java to ensure that the tolerance is non - negative to prevent runtime errors
added methods to create and drop views in TestUtil . java and test view privileges in DatabaseMetaDataTest . java to enhance database operations and ensure
added support for checking for stable float and double types using WhiteBox in NaNTest . java to ensure tests are only executed on X86
added a new ` DesktopTaskbarUIController ` class and integrated it into ` TaskbarManager ` to manage hotseat icons based
add progress tracking for mod item in the gui ( # 1193 )
refactor methods in Files . java for improved clarity to enhance maintainability and readability of the code
refactor interceptor handling in AnnotationGrpcServiceDiscoverer and GrpcServerAutoConfiguration to use Collection instead of Set to improve type safety and
updated the ` DomainAwareServicesManager ` and ` ChainingServicesManager ` classes to remove the ` @ FunctionalInterface ` annotation and simplify
use modid instead of modfile name in resourcepackloader . generatepackinfo
chore : update gapic - generator - java version to 2.1 . 0 ( # 637 )
added grow methods to the Cell class to enable dynamic resizing of cells in the UI
refactor DefaultInputHandler to simplify binding logic and improve type safety to enhance code readability and maintainability by reducing repetitive code
fix for http : / / issues . apache . org / activemq / browse / amq - 2696 - do not ignore
replaced long array with byte array for memory allocation in MetricsMemoryTester . java and added a memory fail count check in TestDockerMemory
deleted the JobParametersPrototype . java file to remove unused code to streamline the codebase
added a securityEnabled parameter to the MappingsTable and updated related classes to enable or disable security checks during data connection processing
rename constants from APPLE _ SWIFT _ OBJC _ CXX _ HEADERS to APPLE _ SWIFT _ EXPORTED _
changed the ` DUMP _ TO _ FILE ` variable from ` true ` to ` false ` in ` TestMSPowerPointParser .
do n ' t eos propagation for Amazon codecs that require eos
[ java ] do n ' t increment publisherlimit if it ' s out of order .
added a condition to check if ` dbInfo ` is null or ` options . getOutputOptions ( ) . isNoInfo ( ) ` is
enable ssl by default for uri with ssl = false
added DOMOutputOptions to the build method in DOMConverter . java to enable XHTML error handling for improved rendering
refactor Assert class to improve code readability to enhance maintainability and facilitate easier debugging
[ java ] add ` ` retain ' ' option to event . publish ( ) and session . publish ( )
added test case names to event serialization tests in TestResultSummary . java and EventSerializationTest . java to enhance test coverage by including test case
[ hotfix ] [ table - planner - blink ] [ table - planner - blink ] fix typo in sqlstdoperatortable
[ netbeans - 4682 ] fix compile error due to change in fastparse
use read - write lock when create a new ssl context .
replaced ` cp . size ( ) = = 0 ` with ` cp . isEmpty ( ) ` and refactored the ` Watcher `
replaced CalciteSqlDialect with AnsiSqlDialect in SqlNodeConvertContext . java to enhance compatibility with additional SQL dialects
changed log level from debug to trace in FirmwareUpdateService . java to provide more detailed logging for the absence of the firmware update handler
added unit tests for handling NULL date and timestamp types in GetObjectTest . java to ensure correct behavior of date and timestamp retrieval with null values
refactor string concatenation logic in StringSubject and Subject classes and update test cases in CustomFailureMessageTest and RelabeledSubjectsTest to
added a new test method ` getRepositoryPermissionsMultipleTeams ` to ` UserModelTest ` to validate repository permissions across multiple teams to ensure correct
added a new class Test7088020 with method handles for testing incorrect argument types to ensure proper error handling for incorrect argument types in method
refactor audience restriction matching logic to use a set for audience URIs to improve clarity and efficiency in audience URI validation
refactor cache refreshing methods in AbstractDataChangedListener and HttpLongPollingDataChangedListener to use the ` this . refreshLocalCache (
modified the initialization of the _ stderr variable to handle null cases to prevent potential NullPointerExceptions when _ stderr is null
added a new constant ` SEPARATION _ ORDER ` to the ` Warning ` class and implemented checks for active stages in ` BasicEventSimulation
updated the parameter in the optimize method from offlineTableConfig to realtimeTableConfig to ensure the query optimization uses the correct realtime table configuration
added functionality to enable or disable the hbase normalizer in the PhoenixHBaseAccessor and UpgradeCatalog240 classes to enable or disable
[ hotfix ] [ doc ] fix typo in savepoint javadocs
added Bluetooth functionality to ShadowBluetoothDevice and its test to enable dynamic Bluetooth class management in the shadow implementation
fix checkstyle issue in generator / objects / glowplayer / glowofflineplayer . java and uuidlistfile . java ( fixes #
[ feel ] fix error message for sum ( [ ] )
updated method call from ` graphModel . getGraph ( ) . readUnlockAll ( ) ` to ` graph . readUnlockAll ( ) `
updated coreNodeName construction to use getCoreName ( ) instead of coreName to ensure the correct core name is included in the node properties
chatactivity : do n ' t refresh backpressure when update contact list
[ hotfix ] [ test ] fix typo in taggerparserpostagcompatibilityitest
added @ LuceneTestCase . SuppressCodecs ( " SimpleText " ) annotation to BaseVectorSimilarityQueryTestCase . java to
updated condition in ` mmm Types . java ` and added a new class ` ppp T7005671 . java ` with multiple test
updated superTriangle calculations in DelaunayTriangulator and replaced EarClippingTriangulatorTest with DelaunayTri
added @ Override annotation to multiple Java classes to indicate that these classes should not be annotated with @ Override
refactor JWTClaimsSet creation to use the builder pattern to improve readability and maintainability of the code
refactor the handling of yellow zone state in StackOverflowCheckImpl . java to improve clarity and maintainability of state management logic
added shadow methods for SQLiteDatabase and ContentValues in Robolectric classes to enhance testing capabilities for SQLiteDatabase and ContentValues
replaced ` graphics . initiateGLInstances ( ) ` with ` graphics . initiateGL ( ) ` in ` LwjglAWT
replaced the ` bytesPerDim ` variable with ` ArrayUtil . ByteArrayComparator ` and updated the comparison logic to use a more efficient byte array comparison
updated the Locale class to include a script parameter and improved default locale initialization logic to enhance locale management by allowing retrieval of the script and its
change return value from mIconCurrentTextAlpha to mIconLastSetTextAlpha to ensure the correct alpha value is returned for the last set
corrected the spelling of " Confimap " to " ConfigMap " in the warning log message to ensure the log accurately reflects the
replaced specific test class imports with a call to a runner method for better test management to streamline test suite initialization and enhance test reliability
trim whitespace from ` tok . nextToken ( ) ` before adding items to ` _ mimeTypes ` , ` _ excludedAgents ` , ` _ excluded
updated the assignment of the _ outputType variable to ensure consistent formatting to improve code readability and maintainability
updated the regex implementation property from JDK to JONI to ensure compatibility with the latest version of the regex implementation
replaced ` Handler ` and ` Message ` with ` FutureTask ` and ` Consumer < ViewRef > ` in ` ViewCapture . java
fix for ticket : 269 -- make the style option work for all voice
added a check to create a parent folder if it does not exist before attempting to create it to ensure that the parent directory exists before proceeding
update node discovery IP from " 0.0 . 0.0 " to " 127.0 . 0.1 " in logger warning to
camel - jbpm - fix the issue of inonlycamelworkitemhandler and inoutcamelworkitemhandler
pdfbox - 4892 : make class final , remove unused import
replaced ` WorkModeToggleContainer ` with ` WorkFooterContainer ` and updated related code to improve clarity and consistency in naming conventions
refactor multiple Dalvik - related classes to improve code organization and consistency to enhance maintainability and readability of the codebase
fix : do n ' t scan implicit type parameter in defaultjavaprettyprinter
added a call to freeMemory ( bytes ) in the OperatorContext class to ensure proper memory management and prevent memory leaks
updated string formatting in QueryByExamplePredicateBuilder . java and modified replacement assignment in StringQuery . java to improve clarity of error messages and
updated the ` ConcurrentLRUCache ` and ` FastLRUCache ` classes to use ` AtomicLong ` for eviction counters and added a
replaced ` runInJavaFXThread ` with ` runAndWaitInJavaFXThread ` in ` DefaultTaskExecutor . java ` to
fix findbugs warn in networkaddressmanagerserviceimpl . java .
set data root and source root for the current database in mainframe
added constructors for MarkedClientEnabled and MarkedServerEnabled classes to log successful initialization in specified modes to enhance logging for Solon Admin
[ hotfix ] [ table - common ] fix checkstyle violation in tableenvironment
updated timeout handling in MapperBuilderAssistant and modified fetch size in ExecutorTestHelper to ensure consistent timeout settings across the mapping process
removed the ` hangingTscTimeout ` parameter and updated related method calls to use ` options . getHangingTscTimeout ( ) `
added serialization classes for GeoLocationRequest and GeoLocationResponse in CasCoreAuthenticationComponentSerializationConfiguration to enable serialization for GeoLocation objects in the authentication
updated precondition checks in ` ArtifactFilesystem ` to use ` BuildArtifact ` instead of ` ImmutableSourceArtifactImpl ` to improve clarity and consistency
tika - 2596 -- do n ' t swallow exception when parse excel document that be not a hpsf document
make sure updatescript do not trigger concurrent modification
fix ( nio ) : wait for data to be write to pipe before close the nio connection
improve error message when ` guava . hasvalue ( ) ` and ` guava . named ( ) ` return the same value
added VERTICAL _ SWIPE _ INDICATOR flag and modified visibility checks in BackgroundAppState and ShelfScrimView to
added a null check for the nav variable in MatDefEditorlElement . java to prevent potential NullPointerException when navigation is not initialized
fix for mow - landscape when app have mow _ land _ image
refactor ErrorOccuredInOnExceptionRoute for improved clarity to enhance maintainability and readability of error handling logic
replaced scheduleAtFixedRate with scheduleWithFixedDelay and changed log level from info to debug in AstroDiscoveryService . java to improve scheduling
[ fix ] singlepassandimagebasedlightinglogic do n ' t increment lasttexunit if it ' s already set to - 1
added JUnit @ Ignore annotation to JmsJdbcXALoadTest and JmsJdbcXATest classes to temporarily disable tests that hang due to
updated import statements in GuiceFactoryTest . java to include specific dependencies to improve code clarity and reduce unnecessary dependencies
added a ` systemFeatureList ` map and methods to manage system features in ` RobolectricPackageManager ` to enhance functionality for managing
refactor RCAFrameworkLoader to use a loop for processing properties and add a new constant for the path postfix to improve code readability and
removed logging statement for the cancellation watch dog to streamline logging for better clarity during task cancellation
added a null check and initialization for enumerationValues in RADProperty . java to ensure that enumerationValues is set to null if it is empty
replaced the ` needInline ` boolean with ` needStartText ` and ` needEndText ` variables in ` BoxBuilder . java `
add the akamai service to send telemetry data in a separate thread
removed conditional database type handling for altering the column type in UpgradeCatalog260 . java to simplify the code by directly changing the column type
update error messages in BaseTableDataManager to provide clearer guidance on available space and write - permissions to enhance user experience by providing clear
updated method implementations in DatasetUtilities . java to improve performance and maintainability of dataset operations
added selector ID to the key in mmm Matcher . java and ppp Matcher . java to improve clarity of key representation for better debugging
updated debug logging format and formatting in GouraudShadingContext . java to improve code readability and maintain consistency in logging format
updated taskbar visibility logic and introduced new alpha channel constants to enhance user experience by improving taskbar visibility management
removed redundant lines from KeyExchange . java to improve code readability and maintainability
added a null check for the JdbcConnection before executing the query to prevent potential NullPointerExceptions during database connection handling
refactor file index handling in ServerMainTest to use a variable for the crash file prefix to improve readability and maintainability of the code
added methods to retrieve the media recording MIME type in CodenameOneImplementation , MediaManager , and Display classes , along with a static method
fix a crash when use shaders in pylon and enchanter
updated BindableFilter condition to include an OR operator and changed return value from " C = 6588 " to " C = 13500
removed unnecessary whitespace in the instantiation of ZkStateReader to improve code readability and maintain consistency
pdfbox - 4892 : make xml parser / transformers more secure , a suggest by valerybokov
added a new interface ` ClientRegistrationIdentifierStrategy ` in the ` org . springframework . security . oauth2 . client . registration ` package
replaced the condition checking for " < script > " with a while loop for better control flow to improve code readability and maintainability by
renamed the variable ` checkVarargsAccessDuringResolution ` to ` checkVarargsAccessAfterResolution ` and updated its logic for varargs access resolution to
cellutil . border _ top , border _ bottom , border _ left , and border _ right should check for non - null instead of null
changed log level from info to debug for reconnect backoff messages in WatchConnectionManager and WatchHTTPManager to reduce log verbosity and improve performance by redu
updated ` InternalDropAllCommandStep ` and ` HubUpdater ` classes to include ` HubRegisterResponse ` as a parameter and modified method signatures
replaced bitwise operations with ` Byte . toUnsignedInt ( ) ` for byte handling in multiple Java classes to improve code readability and maintain
[ hotfix ] fix checkstyle violation in opentracingtransactionproducer
update default dependency from ENABLED to CACHE in AbstractCachingBuildEngineBuckConfig . java to ensure correct caching behavior in the build process
change the value of rangePannable from true to false to disable range panning functionality in the plot
modify active page logic for mHeader in AllAppsContainerView . java to ensure proper view management for work modes based on the current active page
changed access modifiers of ` glCaps ` , ` renderer ` , and ` animator ` from package - private to private to enhance encapsulation
added import for CancellationException and handled it in FunctionTest . java to improve error handling for CancellationException during execution
changed constructors of JarFileResource and JarResource to be protected to enhance encapsulation by restricting access to these constructors
fix a typo in the javadoc of defaulttrackselector
added a loop to wait for isUnseqMerging in LevelCompactionTsFileManagement . java to ensure proper synchronization during unseq merging
updated the fee currency assertion from AUD to BTC in BTCMarketsAdaptersTest . java to ensure the correct currency is used for
updated references from " Post p " to " post p " and refactored test method names for clarity to improve code readability and
refactor Unicode class to improve code readability to enhance maintainability and facilitate future updates
modified the ` installAutoInstance ` method to accept a ` Service ` parameter and added functionality to update Hive LLAP settings if required to enhance
removed unnecessary whitespace in SendHeadersFirstPublisher . java to improve code readability and maintain consistency
camel - aws2 - aws : migrate camel - aws2 - * to camel - aws2 - * for camel - aws2 - *
added support for BIG _ DECIMAL value in RangePredicateEvaluatorFactory to improve error handling and provide clearer context for unsupported value types
replaced references to ` inner ` with ` javacProcessingEnvironment ` in ` TreeBackedProcessorWrapper . java ` to improve clarity
added annotation logging for generic parameter types in ParameterInfo . java to enhance visibility of annotations for better debugging and monitoring
added support for AC3 playback and updated playback logic in PlaybackController . java and VideoManager . java to enhance video playback capabilities and improve
updated the return statement in LocalNode . java to include a content map containing a null value to ensure that the HTTP response includes a content type
added @ SuppressWarnings ( " deprecation " ) annotations to DelegatingStatement and DiskFileItem classes to address deprecation warnings related to Commons DBCP
added a new test method ` testSelectInto ` in ` IoTDBExtendTemplateIT . java ` and implemented the ` selectInto ` method
refactor RTimerTree class to improve code readability to enhance maintainability and facilitate future updates
updated package paths from ` com . facebook . buck . rules . graphbuilder ` to ` com . facebook . buck . core .
apps - 358 fix for issue # 358
updated the initialization of ` QueuedThreadPool ` and ` ScheduledExecutorScheduler ` to include unique names for client threads and schedulers to improve
updated the visibility of ` treePane ` and ` resultPane ` in ` ViewResultsFullVisualizer . java ` to private and improved
added descriptions and type fields for phone numbers in ScimUserEndpointDocs . java to enhance clarity and usability for managing user phone numbers
changed class visibility from package - private to public and added private constructors to various classes to enhance encapsulation and prevent instantiation of singletons
added null checks for responseMap and improved error logging in JsonHttpPropertyRequest and URLStreamProvider to ensure proper handling of null properties and
refactor SolrRequestHandler to improve code structure to enhance maintainability and readability of the code
added a condition to check if the ' parallel ' variable is not equal to ' DEFAULT _ PARALLEL ' before proceeding with the
add miss license header , and fix checkstyle failure
updated error handling to include SCARD _ E _ NO _ SMARTCARD in addition to SCARD _ W _ REMOVED _ CARD
added SuppressSysoutChecks annotation to Test2BTerms . java to suppress unnecessary system output during tests
added a list parameter to the bind methods in BindyKeyValuePairFactory and BindyKeyValuePairDataFormat classes and updated related methods to allow
change default for owner and timestamp preference to false ( not true )
updated method signatures from ` runAndCheckException ` to ` runAndCheckException ` with a ` ThrowingRunnable ` parameter to enhance error handling by
refactor hash computation in CrawlURI to handle null values to improve robustness by preventing potential NullPointerExceptions
camel - 14284 : configuring endpoint should set property on endpoint and not configuration object - aws - sdb
updated version number from " 4.1 . 1 " to " 4.2 " and refactored object retrieval methods in Liquib
change default value of proxy . cert . validity from 7 to 90 second
added smoothDelta variable and updated related calculations in ThreadHandler . java to improve responsiveness and accuracy of animation timing
added a check for ` paginator ` in the ` HttpBatchReader ` and modified the URL parsing logic in ` HttpScanBatchCreator ` to
added null check for CompactionInfo client in Worker . java and created unit tests for FindNextCompact method in TestWorker . java to ensure
updated fragment state handling in ShadowFragmentActivity and added a test for onSaveInstanceState in FragmentActivityTest to ensure that onSaveInstanceState is called
reformatted code for consistency and clarity in BatchResourceFactoryBean . java to improve readability and maintainability of the code
added a test for parsing simple Android color references in ColorResourceLoaderTest . java to ensure that the color resource loader correctly handles Android color references
added error handling for NoResultException in AbstractJPAQuery to ensure robustness by logging and returning null when no results are found
mondrian : fix for http : / / code . google . com / p / mybatis / issues / detail ? id
updated the way wallpaper depth effects are retrieved using the LawnchairApp instance to ensure compatibility with the latest LawnchairApp
removed duplicate import of ProcessTools in LocalManagementTest . java to streamline code by eliminating redundancy
removed the parameter ` now ` from the ` updateTotalEnergyAverageUsage ` method in ` EnergyProcessor ` and its corresponding calls
updated ExtensionStack to handle null extensions and improved string formatting to enhance robustness by preventing null pointer exceptions during string representation
flowableflatmap . flatmap ( ) should dispose inner subscriber when inner error be cancel
added connection timeout parameters to MultiThreadedHttpConnectionManager and improved handling of connection timeouts in ServerTableSizeReader to enhance connection management and
removed unnecessary line breaks in AndroidPrebuiltAarDescription . java to improve code readability and maintainability
replaced ` NewModelTest ` with ` ModelTest ` in ` LwjglDebugStarter . java ` to update the test
removed duplicate fetchers for SystemResourcesEdgeEventFetcher and TenantResourcesEdgeEventFetcher in EdgeSyncCursor . java ; modified image fetching method to
added a new test for output hash calculation when cache is not writable in CachingBuildEngineTest to ensure that output hash is not calculated when
camel - 14284 : camel - netty - add option to not use bytebuf in camel - netty4
updated the method call to use ` Warehouse . getQualifiedName ( tbl . getTTable ( ) ) ` instead of ` alterTbl . getOld
updated the IllegalArgumentException message to provide clearer guidance to ensure the Vertx instance is created with the preferNativeTransport option set to true to
enumtypehandlerserializertest : add test for serialization and deserialization of color
refactor StreamEx class to improve code readability to enhance maintainability and facilitate future feature additions
added hint settings for query timeout and lock timeout in SessionImpl . java to enhance query performance by adjusting query timeout settings
log4j2 - 1343 add a simple loggerfactorybinder that do n ' t require a singleton instance
replaced multiple instances of ` familyMap . put ( family , list ) ` with ` familyMap . put ( family , list ) `
added checks for window orientation changes in TaskbarManager to ensure proper handling of orientation changes during layout updates
unescapes occupant ' s nickname in the jabber chat room to ensure that the nickname be properly escaped in the jabber
added a new test class ` Issue265Test ` and modified the ` longStackPut ` method signature in ` StoreDirect . java ` ,
added @ SuppressWarnings annotations in multiple Java files to improve code clarity and suppress unnecessary warnings
[ hotfix ] [ test ] move holder into drools - integration - tests
refactor conditional statements in DLNAMediaInfo . java , DLNAResource . java , and FFMpegVideo . java
modified the NBWriteServlet and TestWriteListener classes to include an unlimited parameter to enhance control over the handling of write limits in the test
fix wrong totaldifficulty update in importlight ( # 1 )
refactor action handling in DefaultPlaybackController to simplify seekability checks to improve code readability and maintainability
replace synchronized list with CopyOnWriteArrayList for knownLibraries and synchronize access to verificationCacheCleaner to improve thread safety and ensure thread - safe
updated bend distance calculation and adjusted position calculation in AllAppsView . java to improve rendering accuracy and ensure proper bend distance calculation
added a check for the presence of a colon in the key before validating the index to ensure that the key does not contain a colon in addition
added a PrincipalResolver qualifier to the CasSimpleMultifactorAuthenticationEventExecutionPlanConfiguration class to enable bean name resolution for principal resolution in the
replaced ObjectMapper with JSONParser and ObjectBuilder in DelegationTokenResponse . java to enhance JSON parsing capabilities and improve error handling
added a method to remove trailing slashes from a StringBuilder to improve string manipulation by eliminating unnecessary slashes
added methods to check if a string matches any pattern in the PatternsMatcher class and corresponding tests in PatternsMatcherTest to enhance functionality for
hbase - 25819 fix typo in loadincrementalhfiles error message
added potion handling for WATER entities in BlockFire . java to ensure proper block fading when interacting with potion types
adjusted formatting of method call in CellLayout . java to improve code readability and maintain consistency
refactor calculation of decreasePercent and adjust formatting in ContractStateCapsule . java and ReceiptCapsule . java to improve code readability and
added logic to check if the servlet input is ready and log debug information in AsyncContentProducer , BlockingContentProducer , and AsyncIOServletTest
added a null check for the weightField parameter in DocumentDictionaryFactory . java to ensure that the weightField is mandatory to prevent runtime errors
refactor AppleBundle . java to use a variable for binary names and improve plist variable substitution to enhance code clarity and maintainability by
fix turret not be able to place damage in turret
change return type of adaptOrder methods to Object and cast them to OrderCreateApiRequest . OrderCreateApiRequestBuilder to ensure proper type casting and prevent
added a new file ` PreParseGrammarTest . java ` for testing XML grammar parsing functionality to facilitate testing of XML schema parsing
add ` ` doclint : missing ' ' to suppress doclint warning in java . desktop module
added FontManager import and overridden font functionality in ExtendedEditText . java to enhance font customization capabilities in the application
added a null check for currentUser in AuthorizeTag . java and created a corresponding test in AuthorizeTagTests . java to handle cases where no user
camel - 14850 : camel - cxf - do n ' t fail if the uri contain unsafe character
mondrian : fix jdbcgeometrytestsetup so it do n ' t override the setup method
removed unused import of DumpHandler in MultipartFilterTest . java to clean up the code and improve readability
[ hotfix ] [ runtime ] do n ' t try to restore task that have already be cancel in backendrestorerprocedure
add server . rmi . create system property to create rmi registry
replace string . join with stringutils . join for anticompact range logging
updated display metrics handling in multiple test classes and added new test cases for default qualifiers to ensure accurate display metrics are set and improve test coverage for
[ java ] : add the cluster member id to the service heartbeat counter .
updated numAttributes calculation to accommodate versions 21 and above to ensure compatibility with newer Android versions and improve attribute handling
modified the return logic to handle special cases for negative and positive infinity in the CustomExpression class to ensure that NaN is returned as a valid value
updated logging statements in AjaxListener . java to use parameterized messages and added a check for the initial state of the continuation to improve logging clarity
added routes for " authenticate " and " authorized " in the AuthenticityController and implemented corresponding methods in the AuthenticityController to enhance
added assertion to ensure nextNode is alive in LoweringPhase . java to ensure nextNode is alive before proceeding with further operations
updated the logger initialization to reference HttpClientRequestImpl instead of ConnectionManager to ensure proper logging context for the HttpClientRequest implementation
fix order of comparison in defaulttrackselector
refactor RuntimeSerialization class to improve serialization logic to enhance performance and maintainability of runtime data handling
ggb - 1883 cropped image do n ' t draw the correct coordinate on the top - left corner of the image .
refactor UnitOfWorkFactory to improve code structure to enhance maintainability and readability of the code
added a new variable ` allAppsCellWidthPx ` to the ` DeviceProfile ` class and updated its usage in ` WidgetPreviewLoader `
fix for tika - 1342 - add content - disposition - filename and content - type - name to mail content handler
updated the URI construction in ThumbnailsCacheManager . java to use fileId instead of getRemotePath to improve clarity and accuracy of the preview URL
added methods to mark the input stream as supported and reset its state to ensure compatibility with the input stream ' s state management
added @ Deprecated annotations to AsyncProcessor , BehaviorProcessor , AsyncSubject , and SerializedSubject classes to indicate that these classes should no longer be used
added a configuration property for showing or hiding error stacks in the error handler to allow users to control the visibility of error stacks on
bug 10784 : delete account / domain should fail if cleanup fails
refactor foreign call emission to directly call emitForeignCall in SPARCArithmeticLIRGenerator . java to simplify code by elim
[ drools - 5852 ] fix deprecation warning for drl api ( # 3995 )
added a ` waitingForResult ` variable and modified the ` onRequestPurchaseResponse ` method to use ` Display . getInstance ( ) . call
increased the default timeout value from 100 milliseconds to 1000 milliseconds in UnboundedSourceSystemTest . java to improve test reliability by allowing
updated import statements and modified resource name qualification logic in ShadowAssetManager . java to improve code clarity and ensure proper handling of resource names
deleted two new classes MrefStat . java and MrefStat1 . java to remove obsolete code to streamline the codebase
added StringUtils . isBlank check for requested scope in DependencyInsight . java to ensure that a default value of " compile " is used when the
added constants for error messages and improved error handling in BTCETradeServiceRaw . java to enhance code readability and maintainability by
[ hotfix ] [ test ] use hamcrest assertion instead of junit in integrations / cdi / http - api -
added a method to retrieve payment request URLs from a BitcoinURI class and corresponding tests to enhance functionality for handling multiple payment protocol requests in the Bitcoin
[ optaplanner - 383 ] do n ' t throw illegalargumentexception when a parameter be not a parameterized collection type .
removed duplicate line setting folder info in FolderPagedView . java to streamline code by eliminating redundancy
fix ( jfr ) : do not write a jfrchunkwriter if the node be acquire by the current isolate
replace null value check with a loop for handling null values in BasicAbstractTuple . java to improve code clarity and ensure non - null values
refactor LintUtility to use InputResource for loading linter configurations to improve resource management and error handling for file reading
replace direct calls to updateBackgrounds ( ) and updatePaddings ( ) with a post ( Runnable ) call to ensure backgrounds and
fix inventory . tick not be call correctly . close # 806
added a new case ` OCELOT _ BABY ` in the ` PlayerEvents ` class to handle specific gameplay events related
[ hotfix ] [ state ] add @ publicevolving annotation to statettlconfig
added null check for variable ' x ' before setting it in PreparedStatement to ensure proper handling of null values in prepared statements
[ java ] add miss description for ` ` describe - all ' ' option in archive tool
replaced double quotes with single quotes in StringBuilder ' s append0 method to improve readability and consistency of string formatting
added a new test method ` jsonSnapshot ` to ` SiteSnapshotVariationsTest . java ` to validate snapshot functionality with JSON serialization format to
added cache invalidation logic for transactions and blocks in BroadTest . java to ensure proper cache management during transaction and block processing
[ amcrest , dahua ] update channel state to enable / disable only when necessary
removed the ` throws NoSuchBuildTargetException ` declaration from ` getBuildTargetForFullyQualifiedTarget ` and ` resolveBuildTarget ` methods to simplify method
updated constructors in ChangeLogIterator to accept a list of ChangeSetFilters instead of a list of ChangeSets to improve flexibility in handling different
do n ' t swallow guest exception in launcher . run ( )
use ` envorsystemproperty ` instead of ` env ` for opt _ out _ tracing
added serialVersionUID fields to AuthCacheValue and AuthenticationInfo classes to ensure compatibility during serialization and deserialization processes
refactor spacing handling in SpacesVisitor to use dropParentUntil for better clarity to improve code readability and maintainability by reducing
add servercacheoptions . copy ( boolean nearcache ) to make it easy to copy servercacheoptions
added a new test method ` testHiddenBorder ` to the ` VisualRegressionTest ` class to ensure that the border is not visible on
changed the type of ` projectGraph ` from ` ActionGraph ` to ` TargetGraph ` in ` WorkspaceAndProjectGenerator . java ` and
updated the variable name from LIVE _ URI to PROD _ URI and improved exception handling in KucoinExchange . java to enhance
updated string concatenation syntax and improved resource path handling in SpringResourceAccessor . java to enhance code readability and maintainability by standardizing string
updated unit representations from " μ " to " µ " in SmartHomeUnitsTest . java and SmartHomeUnits . java
replaced ` getMask ( ) ` with ` getMaskWithSizePacked ( ) ` in ` DefaultShader . java ` to retrieve
deleted the Tls12SocketFactory . java file to the functionality is no longer needed in the project
refactor tex parser to use stream instead of lambda
added a check for the Robolectric legacy mode in ResourcesTest . java to ensure compatibility with Robolectric environments that do not
added a condition to return " DOUBLE PRECISION " for FirebirdDatabase in DoubleType . java to ensure proper data type handling for Firebird
added null checks for dataSource and transactionManager initialization to ensure data source and transaction manager are only instantiated if they are null to avoid potential NullPointerExceptions
[ unittest ] add @ api annotation to package - info . java
updated command from " ping - c5 www . google . com " to " ping - c5 127.0 . 0.1 "
no effective change - code cleanup - try - with - resources
updated TermScorer to conditionally use FREQS based on scoreMode to ensure correct scoring behavior based on score requirements
dataflowmetrics : fix npe when there be no metric
server : do n ' t search all data _ center _ virtual _ disk _ count when listvirtualmachines command - we do n '
refactor object inspectors in DynamicPartitionPruner to use a dedicated method for finding the target object inspector to improve code clarity and maintain
added a method to remove build artifacts from ArtifactFilesystem and updated ActionExecutionStep to use this method to ensure that existing build artifacts are removed before
added logic to set the row selection interval for the selected row in the table to ensure that the table updates only when a valid row is selected
replace assertthrows ( ) with assertthrowsarraystoreexception ( ) .
refactor PropertySource class to improve code structure to enhance maintainability and readability of the code
added environmentName parameter and user agent handling in HttpClientBuilder and HttpClientConfiguration to enhance flexibility in user agent configuration for HTTP requests
refactor session management by introducing a deduplication method for creating and restoring sessions to improve code readability and maintainability by redu
updated assertions in IssueTest . java to include a descriptive message and changed results type in Reporter . java from HashSet to Object to improve cl
update ByteArrayDataSource initialization to conditionally set content type to " text / plain " to ensure correct content type is used when the file type is
fix typo and add activationrequestdenied event
corrected the sine graph calculation and added a suppression warning in GraphApplet . java to correct the sine graph calculation and enhance code
added a new method ` updateTaskViewsSnapshotRadius ( ) ` in ` RecentsView . java ` and modified the visibility of `
added logging functionality and modified schema generation logic in StaticMicroserviceVersions . java to improve traceability of schema generation and ensure correct revision assignment
changed the return type of the ` put ` methods from ` void ` to ` int ` in ` ArrayMap . java ` to provide the index of the inserted element for better usability
updated KafkaContainerCluster to set startup timeout to 1 minute and improved KafkaContainerCluster to enhance startup reliability and simplify error handling
( chore ) camel - http : / / issues . apache . org / activemq / browse / amq - 2576 -
updated header checking logic in StaticServerHttpHeadersWriter and added a case sensitivity test in StaticServerHttpHeadersWriterTests to ensure headers are
added package access check before using Class . forName in EventListenerList to enhance security by ensuring proper package access for the listener type
added a new CustomAdapter class and modified the onCreateView method in ApplicationsFragment to use custom list views to enhance the user interface by
updated the applyIcon method to accept both an ImageView and a nullable Task parameter to enhance functionality by ensuring both icons are applied correctly
use try - with - resources to avoid memory leak
fix ( sqm - to - sql ) : fix a bug in base sqm to sql conversion
added JUnit test annotations to HibernateCursorItemReaderIntegrationTests and modified the onSetUp method in HibernateCursorProjectionItemReaderIntegration
added polling functionality and improved error handling in DataInputStreamWithTimeout . java to enhance reliability and maintainability of the code
added support for the ENABLED _ TS case in VersionedTargetGraphMode and imported ToposortBasedDepsAwareExecutor in VersionedTargetGraphCache to
updated UpgradeCatalog150 . java file to improve code structure and maintainability
rename testnet3 ( ) to testoldtestnet ( ) to avoid confusion with the old testnet
ggb - 2323 remove unnecessary code in propertiesviewd . updateifinselection
updated onboarding preferences handling in AppsDividerView . java and added nullability annotation in ActivityContext . java to improve code reliability
replaced IOUtils with BufferedIndexOutput and modified HdfsIndexOutput class to enhance resource management and improve error handling
pdfbox - 4892 : use an empty rectangle instead of null when clippingpath be null
simplified the local address assignment logic in SocketChannelImpl . java to improve code readability and maintainability by reducing synchronization
refactor TemplateTransformer to use a new method ` addToRow ` for adding values to the row to improve code readability and maintainability by
wallet : do n ' t try to rename a file on window
pdfbox - 4892 : replace char array with string , a suggest by valerybokov
fix type system code generation for expect return type .
removed unnecessary conditional check for field type stored in IndexingChain . java to streamline the code for better readability and maintainability
fix ( sql ) : fix timestamp with nanosecond in where clause
removed unnecessary conditional check for ` postedRunnableStacktraces ` before adding to ` runnables ` to simplify code and improve readability by
fix a minor typo in the description of the abstractgsprocessor class
replaced ` assertInitialized ` with ` waitUntilInitialized ` in ` ConnectionPoolTest . java ` to improve synchronization by waiting until the connection
updated the default directory parameter from null to " single " in CachingDirectoryFactoryTest and RAMDirectoryFactoryTest to ensure consistency in directory retrieval
modified FaultTolerantChunkProcessor to use a filterCount instead of the size of inputs and outputs , and updated related methods accordingly to improve
updated tab handling in FileWithTabs and improved main method signature and error handling in T4994049 to enhance code readability and
replaced multiple conditional checks with a single assumeTrue call for WindowsTerminal checks to improve code readability and maintainability by reducing redundancy
remove unnecessary admin check from getfeedbacksessionsaction
updated calculations for newSelection and adjusted velocity and position thresholds in AllAppsView . java to improve the responsiveness and correctness of the
do not initialize threadinfo if there be no profile
added loadModelList ( ) and refresh ( ) methods in DataModelManagerDialog . java , and modified connection handling in DbConnectionDialog .
replaced the ` writeBufferSize ` variable with a static final variable ` WRITE _ BUFFER _ SIZE ` and updated related method calls to improve memory
refactor segment size calculation to use SegmentInfo class to improve efficiency and maintainability of segment size calculations
add check for ` ` dvert ' ' field in mesh modifier to avoid crash
refactor FileDisplayActivity to improve code organization to enhance maintainability and readability of the code
replaced direct instantiation of UnsupportedOperationException with a final variable to avoid unnecessary stack trace filling in the exception
replaced the calculation of label height by using a stream - based approach to compute the average of line height to improve accuracy in calculating label height
replaced the singleton instance of ` RotationTouchHelper ` with a constructor that accepts a ` DisplayHolder ` to improve flexibility by allowing
refactor string processing in AVA . java to handle quoted strings correctly to improve clarity and correctness in handling string quotes
replace Long . valueOf ( s , 16 ) with IdConversion . convertToLong ( s ) and update state current trace handling in ServletHandlerInterceptor
added unit tests for ` ServerDatagramConnector ` and modified method names in ` ServerDatagramConnectorTest . java ` to improve test coverage
updated the assertion syntax in TestSqlEntityProcessorDelta . java to correctly handle the second character of the document path to ensure correct parsing of the
refactor caching logic in Cache . java to improve performance and reduce memory usage
renamed variables from ' e ' to ' ev ' and updated scopes from ' rs ' to ' batman ' to improve clarity and
lucene - 6698 : fix testunifiedhighlightertermvec to not count duplicate term
added a main method to GcodeTable for creating a Persistent JTable with a JScrollPane to facilitate testing of the Gcode
updated WEBAPP _ CONNECT _ TIMEOUT to use a configuration property for connection timeout to improve flexibility by allowing dynamic configuration of connection timeout
updated various Java classes to improve code clarity and consistency to enhance readability and maintainability of the codebase
refactor TestMediaService class to improve code readability to enhance maintainability and facilitate future development
removed the static string ` HELP _ ABOUT _ DIALOG _ USER _ GUIDE _ LINK ` from ` Messages . java ` to
add main method to print btc / btc currency in desktop .
validate hostname character in account id before use it in http request
added methods for registering security keys in AccountProxy and HttpAccount classes to enhance security key management functionality in the application
refactor ServerSpanThreadBinder class for improved clarity to enhance maintainability and readability of the code
[ 1.19 . x ] fix the item system not be able to place item on the top of the stack .
replaced the string " Location " with " the _ geom " and added a new integer type " number " to the Csv2Shape builder
updated gas cost calculation in VM . java and removed unused imports in Program . java to improve code clarity and eliminate unnecessary dependencies
refactor parameters handling in the Parameters class to improve code clarity and maintainability
added piePlot . setIgnoreNullValues ( true ) to MultiplePiePlot . java to ensure that null values are ignored during plot
refactor bundle loading logic in ResourceBundle . java for improved clarity and efficiency to streamline the loading process for better performance and maintainability
pdfbox - 4892 : use dash instead of underscore , a suggest by valerybokov
make allowduringediting configurable for accelerateable and freeplane action
added a userModified flag to the LoginSamlAuthenticationProvider class to ensure that user modifications occur only when necessary
added a new file ` TestSealedObjectNull . java ` to test the behavior of ` SealedObject ` with a null cipher to
replaced ` onOpen ` method with ` setResponse ` and ` succeeded ` methods in ` ConnectPromise ` and ` WebSocketClientConnection ` to
added a static final Set < Material > SNOW for compatibility with server version 1.16 . 5 and updated tag checks accordingly to ensure compatibility
added an ` id ` field to the ` CryptsyPublicTrade ` class and updated the trades handling in ` CryptsyAdapters
added error handling for closing the synchronized MSC connection to ensure proper resource management and avoid potential memory leaks
change glowserver seed to use random . nextlong ( ) instead of system . currenttimemillis ( )
updated device profile parameters and added a new device profile for Nexus 5 to enhance functionality and support for additional device configurations
2 . x : fix refcount eager disconnect not reset the connection ( # 6297 )
replaced ` type . newInstance ( ) ` with ` ReflectUtil . newInstance ( type ) ` in ` SynthContext . java ` to
added support for the WHITESPACE _ AROUND _ TEXTUAL _ OP token in FormatToken and associated classes to enhance formatting capabilities for text operations
added checks for file existence and file length in SaveTask . java and implemented new test cases in SaveAndLoadTaskTest . java to ensure
added synchronized keyword to multiple synchronized method declarations in MLogWriter . java to ensure thread safety during concurrent operations
[ log4j2 - 1343 ] fix handling of mutablelogevents in smtpmanager
updated PADDING property builder to use NonNegativeLengthLike instead of LengthLike to ensure proper handling of negative padding values
replaced calls to ` createContext ( getUser ( headers ) ) ` with ` createContext ( ) ` in multiple resource classes to simplify context
improve handling of caughtedexceptions for jimple catches
refactor JUnitRunner and AndroidPlatformTarget to improve file path handling and error messaging to enhance clarity and provide guidance on installing
update cacheSize calculation from maxMemory / 16 to maxMemory / 8 to optimize memory usage for improved performance
added a condition to check if ' start ' is zero in InvocationStageTrace . java and modified the JSON structure in TestInvocationPublishModelFactory
pdfbox - 4892 : catch nullpointerexception when load keystore with fips key store .
replaced hardcoded port with a dynamic port assignment in UpstreamCheckUtilsTest to allow dynamic port assignment and improve test reliability
[ web ] fix for a bug in the dock panel .
add miss shader buffer limit for opengl 3.0
refactor PopulatorContext class to improve code organization to enhance maintainability and readability of the code
do n ' t fire the save all notification if the project do n ' t match the project data
added character encoding handling and improved JSON writing in ZQLJobManager to ensure proper handling of file encoding based on system properties
added a check for non - empty arguments in the IkStepDefinition class to ensure that the argument length is valid before processing to prevent Array
replaced hardcoded header strings with a constant from the ` FakeOSSOHeaderDecoder ` class to improve maintainability and reduce hardcoded
added @ Deprecated annotations to multiple Java files to indicate that these options are outdated and should not be used in future development
removed debug log statements related to Apache Derby driver class to streamline logging for better readability and maintainability
[ hotfix ] [ test ] fix flaky test
replaced ` parallelStream ( ) ` with ` stream ( ) ` in ` PersonNameSuggestionProvider . java ` to improve performance by avoid
updated logic for handling " ROLLBACK " operation type and added a check for " liquibaseHubMode " before updating properties to
added new constants for COREINFO _ VERSION _ SUCCESS _ KEYS and COREINFO _ VERSION _ FAILURE _ KEYS , and implemented a test
modified font addition message handling in FontFamily . java and added a new DebugFonts . java file to improve logging clarity and facil
added HTTP version handling in NegotiatingServerConnectionFactory . java to ensure compatibility with the latest HTTP / 1.1 protocol specifications
added RateControl import and set RateControl to NO _ RATE _ CONTROL in MaxConcurrentStreamsTest . java to disable rate control for
added a new Java file ` Test6741426 ` that implements a Runnable for JComboBox and JTextField to implement a custom UI that
update csrfawareentrypointanddispatchthanddeniedhandlertest to check exception message
added null checks for dbMgdPath and dbExtPath in conditional statements to ensure that only valid paths are processed to avoid potential NullPointerExceptions
added package declaration for s3copyobjectrequest to align with project structure
refactor setup category methods to remove accent color parameter and use viewThemeUtils for preference titles to simplify code and improve maintainability by reducing
updated error message in TemporaryFolderUsageTest to include ' fileAtRoot ' instead of ' / temp1 ' to improve clarity of error
updated TypeInformation usage in MappingMongoConverter for map and collection types to improve type safety and clarity by using explicit class types directly
throw illegalargumentexception when address be empty or null in clientnetworkconfig . addaddress ( )
added " keynectisrootca [ jdk ] " to the VerifyCACerts . java file to enhance certificate validation by including the
refactored pipeline compute method to return the number of compute result instead of void .
added conditional logic to set menu mode based on popup state and model armed state to enhance user experience by preventing menu mode from being set
pdfbox - 4892 : fix arrayindexoutofboundsexception in memoryttfdatastream . read ( )
added a new test class ` FinalizerInfoTest ` to verify finalizer information retrieval to verify the behavior of the ` MyObject ` class
replaced ` map ` with ` doOnNext ` in ` CachingRouteDefinitionLocator ` and ` CachingRouteLocator ` to improve
simplify call to daostateservice . getaddressfromcompensationrequest in burningmanservice .
refactor StringSubject class to improve code readability to enhance maintainability and facilitate future updates
increased the size of the longData array from 1 , 000 , 000 to 1000 , 000 in BatchValidateSignContractTest . java
corrected the method name from ` setmaxInboundMetadataSize ` to ` setMaxInboundMetadataSize ` to ensure consistency with Java naming conventions
updated query handling to replace " @ " with " from : " in RetweetActivity and Search classes to ensure consistent query formatting by removing "
removed the conditional check for rebalance in SimulatorDiscoverer . java to simplify the code by eliminating unnecessary complexity
added a new POST endpoint for importing YubiKey accounts in YubiKeyAccountRegistryEndpoint to enable users to import accounts from the Yubi
removed multiple shader program additions in ShaderManagerLwjgl . java and updated texture parameter setting in FontMaterialProducer . java to stream
updated paintOnTopLoop condition to include null check and added safe area padding in SideMenuBar to enhance stability by preventing potential null
refactor AbiWriterProtocol for improved clarity to enhance maintainability and readability of the code
added a null check for the subName before setting the caption in HierarchyBase . java to ensure that a valid caption is set only when
change the data flag from IMMOBILE to GRAVITY in EntityItem . java to ensure the data flag reflects the intended functionality
added null checks and improved variable naming in CustomExpression . java to enhance code robustness and prevent potential NullPointerExceptions
do n ' t request blind vote list in case of miss data
add a new test case for verifying that the database connection can be reproduced in a multi - threaded environment
replaced double quotes with single quotes for string literals in SubtitleUtils . java and RemoteUtil . java to improve code readability and maintain
updated line separator handling in DefaultJavaPrettyPrinter and added StringTokenizer functionality in CommentTest to ensure consistent line splitting across different operating systems
truffle : use atomicreferencefieldupdater instead of atomicreference for singleimplementorsnapshot .
added null checks and improved query filtering logic in SimpleFacets . java and enhanced test cases in SimpleFacetsTest . java to ensure
fix ( thinghelper ) : add child of bridge to thing list ( # 4566 )
replace calls to ` printHelp ( ) ` with specific error messages in ` Ktab . java ` to improve user feedback by providing clearer
added a check to return the output file if it exists to avoid unnecessary processing when the output file already exists
camel - 17676 : camel - xml - bind - dateconverter now support date format like t : 00 : 00 and t : 00
added assertions in SpringDataJPALockTest and implemented a query in PostRepository to validate the retrieval of a post by its slug to ensure
changed the ` canAccessDbaRecycleBin ` variable type from ` boolean ` to ` Boolean ` and added checks for the database connection
added a static request factory using SimpleClientHttpRequestFactory in ClientRegistrations . java to establish a connection and read timeout for HTTP requests in the
updated the ` SourceTest ` class to include additional assertions for file existence and path handling to ensure that the ` Source ` class accurately verifies
remove graalvm . version system property since it be not use
added logic to set access token and refresh token validity settings in ClientAdminBootstrap to ensure proper handling of client configurations based on their validity settings
updated the return statement to include a check for the Android API version using options to ensure that the application uses the correct Android API version when available
refactor references from ' this ' to direct class references in PropertyPlaceholderHelper . java to improve code readability and reduce redundancy
updated the format of the Subject Public Key Algorithm string in the Resources . java file to remove unnecessary details from the error message for clarity
added concurrent tracking for collection processing in ZkSolrClientTest to improve test reliability by ensuring all collections are processed in parallel
added import for BigInteger in MongoMappingContext . java to support BigInteger functionality in the mapping context
added a condition to check if buttonText equals the string resource in HomeFragment . java to ensure that the toast message is displayed only when the
added a conditional check for MEncoder without out - of - sync and disabled MC0 and Noskip in the MEncoderVideo class
increase the default nio event loop size from 10 to 15
changed access modifiers of several fields and methods in CountMin4 and related classes from abstract to protected to allow subclasses to access these fields and enhance
modified the ` ExternalFileField ` class to implement sorting functionality using ` FileFloatSource ` to enhance the functionality of ` ExternalFileField `
updated error message from " Invalid URL " to " Connection Error " in DoiFetcher . java to provide clearer context for connection errors
added source attribute handling and updated output formatting in OpenRocketSaver . java , DocumentConfig . java , and FlightDataBranchHandler
changed the access modifier of the check method from private to protected to allow subclasses to access and override the check method
added handling for SynchronizeFileOperation in FileActivity to manage file synchronization and conflict resolution to improve user experience by providing feedback when syncing files
updated the URI construction in ThumbnailsCacheManager . java to use URLEncoder for URL encoding and modified the request header to improve URL handling and
added a check for the initialization state and client property " cn1 $ infinite " in InfiniteContainer . java to ensure that the application does
updated the total variable initialization and modified the total increment logic in IntHashSet . java to ensure accurate calculation of total based on the value
added a conditional check for the lock state before updating the feed entry to ensure that the feed update only occurs when the entry is locked
refactor conditional statements for determining user principals in SolarisAclFileAttributeView . java to improve readability and maintainability of the
replaced the use of a shuffle list with an array for creating edges in LatLonTree . java to simplify the code and improve performance by
added IOUtils import and resource closing logic in ZkCLI . java to ensure proper resource management and avoid potential memory leaks
replace \ n with \ x0d and \ x0a for comment in bibtexparser . java ( # 3352 )
added strict mode property handling in Main . java and corresponding tests in MainTest . java to ensure that unknown parameters are ignored when strict mode is
fix : always validate custom constraint with @ validation ( validationby = { ... } )
camel - 14263 : camel - http4 should be the default name for the verifier so it would well reflect what it do .
added a wait method ` waitForThingsToLevelOut ( 30000 ) ` to ` TestCloudPivotFacet . java ` to improve test
simplified conditional checks for byte length in UBJsonWriter . java to improve code readability and maintainability
refactor ApplicationTest class to improve test coverage to enhance reliability and maintainability of the application
replace String with StringBuffer for building the details string to improve performance and memory efficiency of string concatenation
refactor Type enum to RoboType and update related method signatures and references to improve clarity and consistency in type handling
[ java ] do not abort recording descriptor poller if dispatch be complete .
added cache key and lookup key attributes to EntityProcessorBase and updated related logic in DataImportHandler to ensure proper handling of cache key and lookup
added a new file PutfieldError . java that demonstrates the handling of IncompatibleClassChangeError to demonstrate the
fix the issue that aws account do n ' t have access to the same public address .
add more logging to ensure we can enqueue a flush if we reach the threshold .
replace usage of ` Space . build ( " " , emptyList ( ) ) ` with ` Space . SINGLE _ SPACE ` across multiple files to
removed the ` encodedLength ` method from the ` Flyweight ` class to streamline the code by eliminating an unused method
rename TestMethodResultMapBuilder . java file to improve clarity and consistency in naming conventions
do n ' t try to catch integer . valueof in findnulldereference .
[ hotfix ] [ runtime ] remove unused lock field in tasklocalstatestoreimpl
updated time representation methods in mmm Utils . java and ppp Utils . java to improve clarity and consistency in time representation representation
updated conditions in Utilities . java and FloatingIconView . java to handle DeepShortcutView instances to ensure proper drawable retrieval based on the type
changed the type of the ` validator ` variable from ` JwtClaimValidator < String > ` to ` JwtClaimValidator < Object > ` and
renamed methods ` buyQuickRate ` and ` sellQuickRate ` to ` getBuyQuickRate ` and ` getSellQuickRate
refactor coverage controller to use a config bean instead of hard - coded string
added a check to ensure EventBus is not registered multiple times before registering a sticky sticky component to avoid unnecessary registrations and improve performance by avoiding
added a check for ASCII characters in the normalize method to ensure consistent normalization behavior based on the length of the input string
[ hotfix ] [ runtime ] fix migration check in jobcoordinationservice
added error handling for SQL update statements in SpillableGroupByIT and NoOpStatsCollectorIT , and asserted error messages in NoOp
camel - 16400 : upgrade camel - cometd to junit4 in camel - cometd
update ` attrs ( AttrKind . USE _ CSS , ... ) ` to ` attrs ( AttrKind . OK , ... ) ` in multiple
added a line break in the HtmlCoreReport . java file to enhance readability of the report
updated the calculation of ramBytesUsed to handle null scores gracefully to ensure that ramBytesUsed is only calculated when scores are not null
added a custom Gson string handling and a custom type adapter for serialization and deserialization of collection elements to enhance testing capabilities for custom JSON serialization and deserialization
fix ( core ) : use extra data from miningparameters .
added a static final map ` numArgs ` to manage the number of arguments passed to ` StringUtils . argsToProperties ` to improve flexibility
refactor PathParamServerEndpointConfig for improved readability to enhance maintainability and clarity of the codebase
updated variable names from ` configedThreshold ` to ` configuredThreshold ` for consistency and clarity to improve code readability and maintainability by
renamed the parameter ` part ` to ` partOrList ` in the ` attach ` method of ` RestClientRequest ` and ` Rest
jbrules - 2892 : move twitterbootstrap into a separate directory so it can be reuse by other benchmarks
added a regex pattern for basic category extraction in SpanishTreebankLanguagePack . java to improve handling of basic category names in the treebank
hhh - 14573 - add entityloader . load ( ) and deprecate loadbyuniquekey ( )
hbase - 26958 regionserversnapshotmanager and regionserverflushtableproceduremanager do n ' t remove task from taskpool when
fix for setsize ( ) in java2d that do n ' t set width / height to 0
do n ' t call hikaripool # fillpool ( ) if they do n ' t do anything
removed the assureMatchVersion ( ) method and set luceneMatchVersion to Version . LATEST in various filter factory classes to ensure
fix execution of aop concrete method in an introduced class . fix # 3039
mondrian : do n ' t try to parse a drl with an empty drl if the parser do n ' t have
refactor multiple subject classes to improve code organization to enhance maintainability and readability of the codebase
avoid infinite loop on invalid payload length .
move publish - subscribe - channel from ' channel ' to ' dispatcher ' , move publish - subscribe - channel from ' channel / config ' to
updated executionId type from String to Long across multiple classes to ensure consistent handling of execution IDs across different components
added multiple calls to digest . update for width and height parameters in ImageProcessor . java to optimize image processing by allowing more flexible dimensions
removed logging of overlay version in SolrConfig . java and added necessary imports in SolrConfigHandler . java to improve visibility of overlay version and enhance
updated the delayUntil value in FileSyncAdapter from a 24 - hour delay to a 3 - hour delay to avoid too many automatic synchronizations
( chore ) camel - segment - v1 - v2 : fix checkstyle violation
refactor ` addPathToMTree ` method to accept a ` Path ` object instead of a ` String ` for device ID and measurement ID
updated DefaultPackageScanClassResolver to handle URIs and added tests for package scanning in JAR URLs with plus characters to improve URL parsing robustness and
[ flink - 14905 ] [ table - planner - blink ] [ table - blink ] introduce timestampextractorutils to
added a new file ` SpringSecurityAuthenticationSource . java ` to implement the ` AuthenticationSource ` interface for LDAP authentication to facilitate
refactor AbstractConcurrentArrayQueue and ManyToOneRingBuffer classes to improve code organization and maintainability
updated the minimum SDK version in ShadowAlarmManager from LOLLIPOP to KITKAT to ensure compatibility with newer Android versions
refactor dialog implementation to use SimpleFormDialog instead of Dialogs to improve user experience by providing a cached file suggestion
added a new test method ` testNewput ` to ` TxInputUtilTest ` and modified assertions in ` StoreAPITest ` to ensure
updated the method signature of ` stream ` to use ` collectionName ` instead of ` collection . getName ( ) ` to enhance clarity by explicitly
simonstewart : fix zoom issue with map overview
updated KNearestNeighborClassifier to accept a Similarity parameter and modified related test methods to return classification results to enhance functionality by allowing customizable similarity
replaced ` SolrQueryParser ` with ` ConstantScoreRangeQuery ` in ` LukeRequestHandler . java ` to utilize a more
updated the method used to retrieve resource reasons from ` lowResourceCheck . toString ( ) ` to ` lowResourceCheck . getReason ( ) `
updated package - info . java files for mmm and ppp packages to improve documentation clarity and maintainability
added mtu request functionality in ShadowBluetoothGatt and corresponding test cases in ShadowBluetoothGattTest to enhance BluetoothGatt
refactor the input stream creation into a separate method ` createServletOutputStream ( ) ` to improve code readability and maintainability by reducing
added logging for UnsatisfiedLinkError in VoskSTTService to improve error handling and logging for better debugging
replaced HashMap with ConcurrentHashMap for mProcessingChains to improve thread - safety for concurrent access to mProcessingChains
updated the message to include " all " , " grouped " , and " summary " instead of " u3079 " to clarify
updated conditional check from size > 0 to size > 1 in JDBCTypeMapping . java and adjusted test assertions in JDBCTypeMappingTest . java
added synchronized keyword to addPlayer and removePlayer methods and updated entity addition and removal logic to ensure thread safety during player addition and removal operations
refactor TerminalView to utilize regex patterns and enhance accessibility state testing to improve performance and reliability of control code handling
added support for the hide navigation button in the MenuBar and modified the SideMenuBar ' s icon handling logic to enhance user experience by allowing
removed unnecessary Disposable declaration in PoloniexManualExample . java and added connection state handling in WampStreamingService . java to improve
updated energy limit validation logic and error messages in UpdateSettingForEnergyLimitContractActuator . java and its test to ensure energy limits are
updated variable names and added protocol handling in PostmanJsonBuilder and UrlBean classes to improve code clarity and enhance URL management capabilities
camel - 16462 : camel - soap - add miss getter / setter for namespaceprefixref in camel - soap
fix testcase which fail due to timezone difference
added server restart logic in BasicAuthIntegrationTest . java and updated security properties in ZkStateReader . java to enhance security checks and ensure
change currency code in tradeschartsviewmodel when use sticky market
refactor configuration handling in PhoenixHBaseLoaderIT and PhoenixHBaseStorerIT to improve readability and
replaced the ` from ` variable with ` end ` and adjusted related logic in ` NativeString . java ` to improve clarity and ensure
added file download functionality using FileDataStorageManager in FileDownloader . java to enable users to download files directly from the server
[ java ] set the length of the randomaccessfile for mappedrawlog .
added methods to check if a registry is running and a file deletion with retry logic to improve reliability and error handling during file operations
removed unused imports and added calls to startLoading ( ) in Quick3dMain . java and TextureTest . java to streamline code and
removed unused private variables and added multiple suppress warnings annotations in multiple classes to clean up the code and reduce unnecessary warnings
added a null check for instances in TraceFeignContext to prevent potential NullPointerExceptions when instances are not initialized
phoenix - 1084 allow set isolation level to transaction _ read _ committed or transaction _ serializabletable if transaction be
added transaction handling and error rollback logic in multiple classes to ensure proper transaction management and error handling during processing
replaced CasClient with DirectCasClient and refactored the CasManagementSecurityInterceptor class to enhance client functionality and improve security handling
updated menu item visibility and added category editing functionality in ListFragment and NavigationDrawerFragment to enhance user experience by allowing category editing in the navigation drawer
renamed method ` cancel ` to ` cancelMatchingOperation ` in ` DownloadFileOperation ` and updated method names in ` FileDisplayActivity `
pdfbox - 4892 : avoid classcastexception , a suggest by valerybokov
updated font size handling in TerminalView and changed method names in TerminalBridge to improve clarity and consistency in font size management
added validation check for the fact object before processing to ensure that the fact is valid before proceeding with further operations
refactor multiple Java classes to improve code organization to enhance maintainability and readability of the codebase
replace return statement to create a new ArrayList instance from the spans array to ensure that the spans list is mutable and avoids unintended modifications
removed unnecessary locking mechanism in Liquibase . java to streamline the code for better performance and readability
added a ` setRevision ` method to ` MicroserviceVersions ` and updated ` InstanceCacheChecker ` and ` TestInstanceCacheChecker ` to
updated the construction of foreign key and index names to include hash code and column names to improve clarity of foreign key and index names for better
camel - 14850 - camel - aws2 - * : add uri - endpoint - override option to all the component - s3 component
removed the currency pair parameter from the getBitstampUserTransactions method in BitstampAccountService . java and added it to BitstampAccountServiceRaw
added a try - catch block to handle NoSuchComponentException to improve error handling by returning null if the component is not found
modified push method to return a boolean indicating success or failure to enhance the push functionality by allowing the push operation to return a boolean indicating success or
updated LegacyAddressTest to read data from a dataset instead of using a hardcoded base58 values to improve test flexibility by allowing multiple addresses
changed the access modifier of the findDropTargetAt method from package - private to public to allow access to findDropTargetAt from other classes
refactor push notification handling into a separate setupPushWarning method to improve code readability and maintainability by encapsulating push warning logic
do n ' t swallow ioexception when close a channel
updated conditional checks for ` noWarnAttribute ` , ` warnDaysResult ` , and ` validDaysResult ` to use ` StringUtils . isEmpty
renamed DefaultAnnotationEngine and Stubber classes to improve clarity and consistency in naming conventions
added an @ Ignore annotation to MemoryManagerTest . java to temporarily disable the test due to the PHOENIX - 2840 issue
nifi - 1348 : add timezone property to aboutdto and make it read - only
updated assertions and logic in Splitter . java and StorageService . java to improve clarity and functionality to ensure correct handling of local ranges and
no effective change - code cleanup - remove unused catch block
removed redundant synchronization block around adding circuits in CircuitManagerImpl . java to streamline code for better readability and performance
replaced GdxRuntimeException with IllegalStateException in ShaderProgram . java to improve error handling by using a more specific exception type
[ hotfix ] [ runtime ] move pollable source and sink from pollablesinkrunner to pollablesinkrunner
updated logging level from error to info in FastBindLdapAuthenticationHandler . java to improve clarity of error messages during user authentication
refactor ContainerOrderFocusTraversalPolicy for improved focus traversal logic to enhance performance and maintainability of focus traversal logic
change getpointlength to return an int instead of double
reformatted the constructor of CasRiskBasedAuthenticationEvaluationStartedEvent to improve code readability and consistency
refactor connection handling and logging in SchemaCrawlerMain and Executable classes to ensure proper resource management and logging of database connections
bump default tl version to v1.2 with a fallback for old jdks
updated exception messages in CountersManager . java to use " values " and " metadata " instead of " labels " to improve clarity and
updated audio handling logic in MediaManager . java to improve clarity and correctness of audio queue position handling
added an additional parameter to the debug log statement in HttpConnection . java to improve logging detail for connection upgrade events
added support for @ Transient annotation in JpaPersistentPropertyImpl and its unit tests to ensure that transient fields are treated as transient in the persistence
updated the repository version ID from " hDP - 2.1 . 1 " to " hDP - 2.1 . 1 " and
trufflevm : make eval return object , not symbol
do n ' t try to guess encode of url if it ' s binary
updated the configuration key for TEZ dynamic partition pruning max data size in HiveConf . java to ensure consistency in data size configuration for dynamic
added priority management for JavaProblem instances in JavaEditor . java and modified findProblem method in JavaEditor . java to improve error handling by priorit
removed the usage of the DEFAULT _ OFFHEAP constant in the DictionaryIndexType and BloomFilterHandler classes to streamline the code by
replaced hardcoded newline characters with a configurable line separator in TableWriterTest to enhance flexibility in line handling across different operating systems
refactor DebugHelper class for improved readability to enhance maintainability and facilitate easier debugging
added a boolean field ` ownsTexture ` to manage texture ownership in ` ParticleEffect . java ` to prevent further operations when the texture is
added LDAP authentication configuration fields to HiveConf . java to enhance security and configuration options for LDAP authentication
chore ( deps ) : update dependency com . google . cloud . datacatalog : v1beta1 to v1beta2 ( #
refactor InputMethodManager usage and visibility logic in DetailActivity . java to improve code readability and maintainability
added a test for converting a data type to a map of primitive types in DataTableTypeRegistryTableConverterTest to ensure correct conversion of primitive types
updated the size calculation in TestFileSystem . java from 100 , 500 to 10 , 50 and removed a temporary file to optimize memory usage and improve
updated error message for Rule M2.4 to provide clearer guidance to users about closing open resources before filing a bug report
made the ` dropSequences ` method abstract in multiple database classes and overridden it in ` MergeColumnChange ` to allow subclasses to override the
added a null check for the status variable in MainWindow . java to prevent potential NullPointerExceptions during execution
updated the variable assignment to store the result of binaryField . createField to improve code clarity by storing the result of binaryField . create
gather leaves / parents style only if the map and style model be not null
added a test method to verify the behavior of upserting a non - existing object in MongoTemplate to ensure that the findOne method correctly returns the
refactor midpoint calculation in multiple classes to use a unified low function to improve code readability and maintainability by reducing redundancy
added stats tracking for app launches in Launcher and refactored broadcast intent handling in Launcher to improve user experience by tracking app launch
updated graphics handling in JavaSEPort by creating a graphics2d instance and disposing it to improve resource management and prevent memory leaks
update instructorfeedbackresultspagepagedata to include the current team member in the list of team member
fix inventory . getwindowid ( ) return 0 when player ' s inventory id be 0
added a conditional check for the ' found ' variable before breaking the loop in ConfigDescriptionRegistry . java to ensure that a break statement is only
added a condition to include the value of returnTypeAnnotations in multiple parser visitor classes to ensure that the correct annotation is passed when the return type is
modified the initialization of the TileMapRenderer to handle null blended tiles to ensure a default array is used when no blended tiles
removed multiple instances of " java . util . concurrent . FutureTask " and " javax . crypto . SunJCE " from the class list
updated the ` getArea ` method in ` IfcTools2D . java ` to improve the calculation of the sum of the sum of
refactor lockOnSync initialization and throttleRate assignment to improve clarity and correctness in managing lockOnSync and throttle rates
fix pipeeventbus . addactions ( ) so it do n ' t have to be static
reduced the timeout duration from 1000 milliseconds to TIMEOUT in ZkControllerTest . java to improve test reliability by reducing the wait time
added a test method to verify client parameters in the TokenMvcMockTests class to ensure correct handling of client credentials in the authentication process
added support for LengthFilter and KeepWordFilter constructors in TestRandomChains . java to enhance testing capabilities for different input types
removed the import of ` org . junit . Ignore ` from ` RandomPlaneTest . java ` to enable the test to run and ensure
fix integer to unsigned conversion in llvmx86 _ 64bitvend .
refactored collision object handling in btCollisionObjectArray and removed native upcast method from btRigidBody and gdxBullet
added build copyright information and updated copyright URL in AboutDialog . java and BuildProperties . java to ensure users have the correct copyright information and
add getdistributedobjects ( ) method to jetclientinstanceimpl ( # 11878 )
updated ` expMOIlong ` , ` expInertia ` , and ` expMOI _ tr ` values in ` MassCalculator
replaced TOTAL _ MEMORY with MAX _ MEMORY and updated memory semaphore initialization to use maximum memory instead of total memory to improve memory
[ iotdb - 4892 ] fix the wrong exception handle in standaloneschemafetcher ( # 4892 )
update burningman ' s burn output prefix and remove validation check for delayed payout tx
updated JsonLoaderTest to use a JSON string format and added exception handling for " big _ integer _ t " to improve JSON parsing accuracy and
updated the threshold for tableSize from 1 to 0x40000000 in ObjectSet . java to allow for larger table sizes to accommodate
updated import statements and modified data scale handling in ColumnSnapshotGenerator . java to improve code clarity and ensure data scale is only set if it
removed @ AddToRuleKey annotations from several fields in AppleTest . java to simplify the field visibility for better readability and maintainability
added security exception handling and improved content limit logic in FileHelper and TextHelper classes to enhance security and ensure robustness in file name retrieval
added a new constant ` StyleWithMultipleAttributes ` and implemented tests for ` resolveAttributes ` in ` ShadowThemeTest ` to support multiple attributes
updated sheet name checks in HSSFWorkbook and added multiple sheet names in TestHSSFWorkbook to improve accuracy in checking sheet existence and
updated the method used to retrieve the primary color from ` primaryColor ` to ` elementColor ` to ensure the correct color is used for the
updated handler initialization in DefaultEventBus . java to handle null replyHandler and simplified path resolver in DefaultPlatformManager . java to improve robustness
added support for binary collation in MariaDbDbmsType and MySqlDbmsType classes to enhance SQL query generation by incorporating
added a method ` whenType ` to the ` Tree ` class that returns an ` Optional < T > ` to improve handling of tree types
refactor navigation logic by encapsulating user view destination retrieval in a separate method to improve code readability and maintainability by reducing duplication
updated FeedREST to return a temporary redirect instead of a OK response to improve user experience by redirecting to the public URL instead of returning a
[ flink - 17836 ] [ kinesis ] add non - serializable check for kinesisdeserializer
( chore ) camel - core : update license to lgpl
replaced the ` Thread . sleep ( 2000 ) ` with a try - finally block to ensure the ` zkClient ` is properly closed after
renamed the method ` setIconAndDimTransitionProgress ` to ` setIconsAndBannersTransitionProgress ` across multiple classes to clarify
replaced direct calls to ` _ endPoint . fill ( ) ` with a new method ` read ( EndPoint endPoint , Buffer buffer ) `
replaced ` BufferUtil . allocate ` calls with ` ByteBuffer . allocate ` for various buffer sizes to simplify the code and improve readability by
modified the ` prepareStreamsToUpload ` method to return a boolean indicating success or failure to enhance the method ' s functionality to differentiate between
replace direct order comparison with Integer . compare for improved readability to enhance code clarity and maintainability by using a standard comparison method
added a new file PicOfDayAppWidget . java to implement image loading functionality for the PICDIA API to enhance the app widget
internal load balancer : use service offering uuid instead of string for service offering
replaced ` RelOptUtil ` with ` HiveRelOptUtil ` and updated related join condition handling in ` HiveParserCalcitePlanner
[ hotfix ] [ stream api ] deprecate unused method in stream api
added user and password options for JMX connection in NodeToolCmd . java to enable secure access to remote JMX connections with specified credentials
removed duplicate initialization of scratch in Stemmer . java to streamline code and improve readability
updated widget and resolve info parameters in AppsCustomizePagedView . java to correctly account for the number of widgets per page to ensure
ggbapplet . getviewforthumbnail ( ) : use 3d view if available
updated rotation calculations in GcodeRenderer . java to ensure non - negative coordinates to prevent rendering issues due to invalid rotation values
added a new option for setting the workspace directory in the TerminalClient to enable users to set a custom workspace directory for the application
updated the file path in CLIManagerTest from " target / test - classes / options . apt " to " target / test - classes
updated ScimUtilsTest to use JUnit 5 annotations and added PollutionPreventionExtension to improve test clarity and ensure proper exception handling
refactor ` confimAccess ` method to accept a ` Map < String , Object > ` instead of a ` ModelAndView ` to
fix flaky test : clear the session after each test
refactor EventBusHook . java for improved readability to enhance maintainability and clarity of event handling logic
rename MultiPaintEventTest . java file to improve clarity and consistency in naming conventions
updated variable declaration for mNewScale in WorkspaceStateTransitionAnimation . java to improve code clarity by eliminating unnecessary final modifier
refactor SyncFactory class for improved synchronization logic to enhance performance and maintainability of synchronization logic
added support for unique key field in LukeRequestHandler to ensure proper handling of unique key fields in the schema
added a round border color attribute and updated document filter settings in BorderEditor . java and EditableResources . java to allow customization of the
make binaryparserexception . parseerror ( ) call compilerasserts . neverpartofcompilation ( ) .
[ hotfix ] [ test ] replace slotpoolimpl with declarativeslotpoolbridgebuilder in defaultschedulerbatchschedulingtest
added logging for pending requests in GatewayRSocket , GatewaySocketAcceptor , and modified ping pong handling in PingPongApp to improve debugging
updated RecentChatFragment to implement Toolbar . OnMenuItemClickListener and added menu item click listener to enhance user experience by providing context - sensitive
modified ` InfoDropTarget ` and ` UninstallDropTarget ` classes to extend ` UninstallDropTarget ` instead of ` ButtonDropTarget
replaced ` add ( ) ` and ` removeTail ( ) ` methods with ` push ( ) ` and ` peek ( ) ` methods
updated API and image URLs from " test . wikipedia " to " common . wikimedia . org " and changed the event log wiki
refactor index handling by introducing ` setIndex ` and ` updateIndex ` methods to improve code readability and maintainability by encapsulating index
replace usage of ` Collections . sort ` with direct method calls for sorting collections to improve code readability and reduce unnecessary collection creation
added various date and time patterns to the FormatData _ hr _ HR . java file to enhance date formatting capabilities for improved readability
clear focus from clickedView in DetailFragment . java to improve user interaction by removing focus from the clicked view
refactor language selection logic in DescriptionsAdapter and SpinnerLanguagesAdapter to improve clarity and functionality to enhance user experience by ensuring proper language
updated time zone names from " West Samoa Summer Time " to " West Samoa Daylight Time " across multiple
added methods for managing global and weak registrations and access fields in FastGetField . java to enhance the functionality of the FastGetField class by
added default value handling for UNION and NULL types in ReflectData . java and updated test assertions in TestReflect . java to ensure correct handling of
increase timeout to avoid flakiness
added a null check before remapping the resource class in ResourceMerger . java to avoid potential NullPointerExceptions when remapping resources
added an overloaded constructor to various dialect classes that accept a DatabaseVersion parameter to ensure compatibility with specific database versions during initialization
camel - 8244 fixed the issue of httpproducer do not set the connection - close header when use http / 1.1
increased the socket timeout from 60 seconds to 120 seconds to allow more time for distributed operations to complete
added assertion to verify that ticket with status = ' FREE ' and final _ price _ cts be not zero in order to ensure that
refactor Parser class to improve code structure to enhance maintainability and readability of the code
refactor CasProcessingFilter to improve code readability to enhance maintainability and facilitate future feature additions
update parser to use getfirstelementchild ( ) instead of getnavigablenodenode ( )
planner - 2698 add enum to the list of object to look up ( # 2698 )
[ java ] wait to shut down cluster node before start a new one .
improve log message when cache bean be not clean up
added a new variable ` mContentType ` with the value " application / octet - stream " to set the content type to " application / octet
added a method to retrieve the queue size from the delegate in LazyTraceThreadPoolTaskExecutor and created unit tests for it to ensure the queue size
fix distanceop to ignore line that do n ' t match the min distance
rename the ` required ` variable to ` requiredLabel ` in ` AbstractUITag . java ` to improve clarity and consistency in label
removed the next ( ) method from PurgingPartitionIterator and added updateProgress ( ) to simplify the next ( ) implementation and ensure progress updates
added a method ` getAsUnescapedPath ( ) ` in ` SchemaPath . java ` and updated references in ` VectorUtil . java `
added abstract methods getHeight ( ) and getWidth ( ) to the BaseMonochromeBitmapSource class to provide a way to retrieve the height and
added validation to ensure polygons contain at least three points and updated localVertices assignment accordingly to prevent array out - of - bounds errors and ensure proper
replaced ObjectMapper instantiation with ObjectMappers . newDefaultInstance ( ) in multiple files to improve object mapping efficiency and reduce dependency on Jackson
ggb - 1888 fix npe in solve ( { a , b , c } , 0.0 , 0.0 ,
refactor ExternalNameRecord to use readUByte and readUnicodeLEString methods for handling Unicode names to improve compatibility with multibyte data
updated the description of the JMS Destination type in AbstractJMSProcessor . java to specify ' QUEUE ' instead of ' TOPIC ' to cl
added functionality to conditionally exclude username , password , and passcode from login prompts in LoginInfoEndpoint to enhance security by allowing users to
replaced ` remove ` method with ` removeIf ` for listener removal to improve listener management by ensuring only relevant listeners are removed
added a toggle spinner action to the PieChartActivity to enhance user experience by providing a smoother visual representation of the chart
delete vhd if copy _ vhd _ to _ secondarystorage return null
hbase - 25811 normalizing table in a namespace do n ' t normalize table if it have quota
removed unused imports and added a resize method for pressure array to streamline code and enhance input resizing functionality
added a new method ` propertyValuesOf ` to the ` PropertySupport ` class and refactored the ` @ VisibleForTesting ` annotation to
ignore clientmapnearcachetest until we can fix it
fix the hopperhock be able to place item in the wrong place . close # 241
added authentication dialog functionality to SsoWebViewClient to enhance user experience by providing authentication feedback during authentication
refactor TestStressIndexing2 to improve document deletion and query handling to enhance code readability and maintainability while enhancing functionality for
[ hotfix ] [ table ] ignore upsertkafkatabletableitcase until flink - 22559 be fix
replaced ` get ` with ` computeIfAbsent ` for retrieving ` typeList ` and adjusted calculations for ` csize ` and ` endPos `
hhh - 14619 - defaultentitymapper should configure accept _ single _ value _ as _ array to be true
updated localization update message in VersionChangeLogs . java to include additional localization options
updated SHORTCUT _ CATEGORIES initialization to use resourceUtils instead of hardcoded string to improve flexibility by allowing dynamic retrieval of application
updated the method name from ` visitExpressionInstanceOf ` to ` visitRelExpressionInstanceOf ` in ` ASTBuilderVisitor . java ` and
nifi - 3892 : added mime . type attribute to gethttp response to allow the content - type header to be specify in the
add a toprovenance ( ) method to resourcehistorytable to avoid create a new instance
renamed ` exitButton ` to ` doneButton ` and updated its click listener to ` doneListener ` in ` HelpActivity . java `
updated NatsConfiguration . java to improve configuration handling to enhance performance and maintainability of the Nats application
refactor ` invalidateStalePartition ` method to accept ` List < PartitionNameWithVersion > ` and ` MetastoreContext ` parameters to
simplify code and implement the option to keep all result in the view ( even if it will consume a lot of memory ) .
replaced instances of ` ic _ group ` with ` ic _ chat _ bubble ` in multiple files to improve clarity and specificity of
replaced ` getLong ` with ` getLongVolatile ` in ` BroadcastReceiver ` and ` BroadcastReceiverTest ` to ensure thread - safe access
updated method names in MocksCreationTest to include underscores for consistency to improve readability and maintainability of test method naming conventions
added a constant for the data source name in CSVThirdEyeDataSource and made the generateDetectionConfig method public in YamlDetectionConfigTranslator to
increased the timeout duration from 10 seconds to 30 seconds in multiple awaiter method calls to allow more time for the phaser to complete
removed the ` BuildSlaveFinishedStatusEvent ` class and modified ` DistBuildRunCommand ` to simplify the event publishing process by eliminating
fix findbugs encode issue in vmwarestoragemanagerimpl . java
added test for depositing workspaceitem without workflow
added distinct filtering to classpath files in ClassLoaderSupportImpl . java to ensure unique classpath files are processed
removed the ` isBoxedPrimitive ` method from the ` Unbox ` class to streamline the code by eliminating unused functionality
refactor argument handling in SpecificCompilerTool to improve argument ordering to enhance flexibility in specifying encoding , string , and templateDir options
added a check to ensure the partition path is only deleted if the table is not external to prevent unnecessary directory deletion for external tables
updated asynchronous execution settings in HiveConf . java and modified exception handling in SQLOperation . java and SessionManager . java to improve performance
added try - catch block around dismissing the dialog to handle potential exceptions when dismissing the dialog
refactor UpgradeResourceProvider to use a constant for the execution task role and update the filter construction to improve code readability and maintainability by
added a new variable ` diff ` to store the current configuration information in ` OperationSetTelephonyConferencingSipImpl . java `
add a clearentries ( ) method to the flutterlogtree ( # 1188 )
updated return statements in ChannelEndPoint . java to include conditions for channel and socket shutdowns to ensure proper handling of input and output states in the
refactor SetNullableGenerator for improved clarity to enhance code maintainability and readability
camel - 16400 : camel - example - reportincident - add option to use cxf - example - reportincident
simplified import statements in NettyRoutingFilter . java and updated test cases in FormIntegrationTests . java to improve code readability and
added @ ApiOperation annotation to several service classes and their implementations to provide a consistent way to call hello methods with specific values in the service interface
refactor lifecycle listener handling in Lwjgl3Application and Lwjgl3Window classes to improve clarity and efficiency in managing
updated the FG _ FK color from 90 to 200 in UIUtil . java to improve the visual appearance of the FG _ FK
added requirement for mp3 audio format in the SoundManager class to ensure that mp3 audio formats are not required for playback
fix secondaryindexmanagertest . testfindbuiltindexes by index name
pmd - plugin : display version and eclipse version in the about
[ hotfix ] [ test ] use optional instead of throwable in customserializationitcase
refactor MediaFormatUtil to improve code organization to enhance maintainability and readability of the code
added ` isCellEditable ` method to ` GeneralTab ` class that always returns false to indicate that the cell is not editable
added a method to determine if unused dependencies should be printed based on a configuration option to enhance flexibility in displaying unused dependencies based on user preferences
added a temporary count variable in VocalTractModifier and updated the vscales array in VocalTractScalingProcessor to improve tracking of
updated import statements for BaseScalarUdfTest in TestUDFRound . java and TestGenericUDFConcat . java to ensure consistency in
implemented hashCode and equals methods for UaaAuthenticationDetails class to ensure proper object comparison and hashing functionality
[ update ] testskeletoncontrolrefresh now use skeletoncontrol instead of skeletoncontrol
renamed ` NodeFilter ` to ` NodeCountFilter ` and updated related methods in ` NodeUtil . java ` to improve clarity and consistency
updated the condition to include an equal check for SYNC _ FETCH _ BATCH _ NUM in the sync block fetch check to ensure that the
fix typo in debugexpressionparser . fix # 375
update dependency checking logic in ExcludeDependency . java to include scope checking to improve dependency exclusion accuracy based on the transitive scope
replaced the ` tmp ( ) ` method with a ` dst2 ( T v ) ` method and modified the ` lerp ` method signature to enhance functionality and improve code clarity
initialize the ` args ` array to an empty array to prevent potential ` NullPointerException ` when ` args ` is null
updated linker flags handling in RustBinaryDescription and RustLinkerIntegrationTest to use ImmutableList instead of List to improve flexibility in linker
[ # 8558 ] fix test case for travis and appveyor
added support for external query name in Hive configuration and improved logging details in GenericUDTFGetSplits to enhance debugging capabilities by providing more
removed unused import of java . io . File from TileAtlas . java to clean up the code and improve readability
do n ' t abort build if the executor can not finish
updated the ` validateQuery ` method to include an additional ` Object . ... . arguments ` parameter and modified the error message formatting to enhance error
updated INDEX _ VERSION from 1 to 2 and refactored getTree method in LuceneExecutor . java to improve index versioning and streamline
[ hotfix ] [ runtime ] add test for kryo serializer registration
added null checks before removing a property in ` BlueprintConfigurationProcessor . java ` and updated tests in ` BlueprintConfigurationProcessorTest . java ` to
refactor boolean handling in MetaStoreDirectSql to utilize BooleanUtils for better clarity and efficiency to improve code readability and maintainability
added a call to hideCustomizationDrawer ( ) in the Launcher class to improve user experience by hiding the customization drawer
added a new constant for the warning key and refactored handling of term vector warnings to improve clarity and maintainability of the handling of
added conditional logging for compilation job start and finish messages based on optimistic types to improve logging granularity and clarity based on configuration settings
refactor Expect class to improve code readability to enhance maintainability and facilitate future updates
added UnixSocketConfigurationStrategy to DockerClientFactory and modified DockerMachineConfigurationStrategy to support Unix socket access to enhance the Docker client functionality by allowing
added JUnit test annotations and overridden method for flaky tests in CloseableDoSFilterTest . java to address test failures related to flak
camel - 14263 : camel - reactive - streams should not throw illegalstateexception when the stream have no active subscription
refactor task validation and conversion methods in Vectorizer . java to use MapWork instead of MapRedTask to improve code clarity and maintain
log4j2 - 1343 fixed stringappender and logdivertappender to use the default layout parameter
fix a nullpointerexception in some case
sulong : add support for ` ` weak ' ' linkage .
updated multiple Java files including XShareAuto , LoadClassNegative , XCheckJSig , and ReadFromNoaccessArea to improve code organization and
no effective change - add test for defaulttransactionthreadlocal
added a check for invalid operation handles in the HiveStatement class to improve error handling and logging for better debugging
fix typo and rename null to not null
camel - 14850 - support ability to load property from vault / secrets cloud service - aws secret manager
refactor SimpleTree class to improve code structure to enhance maintainability and readability of the code
removed the exception message from the email response in UserREST . java to simplify the error message for better clarity
added a boolean parameter ` subTree ` to the ` fromContent ` and ` fromContent ` methods in the ` Result ` class to enable
updated the column width calculation in Sheet . java and added a new test method in TestHSSFSheet . java to ensure consistent column width
added a configPath parameter to the Commands . less method call to provide additional context for command execution
changed method signatures from Set to Collection for tables and weakAssociations in DotWriter . java and GraphExecutable . java to improve flexibility in handling
use 1.0 . 0 a default for sshd . container . image in camel - testcontainers
fix npe in case hostid be null .
refactor key generation logic in DefaultGroupKeyGenerator . java to simplify multi - valued column handling to improve code clarity and maintainability by
updated the test method to handle seeking exceptions and improved error message formatting to enhance test reliability and clarity in seeking behavior
use ingredientnbtbc instead of ingredient . of ( ) in bcsiliconrecipes . java ( #
rename put ( .. ) to putobject ( .. ) for clarity
refactor visibility handling in CellLayout and introduce doDragExit method in Workspace to improve code readability and encapsulate drag - and -
updated the ModifyRequestBodyGatewayFilterFactory to handle empty rewrite functions and added a test for upstream request bodies to ensure proper handling of empty input bodies
added a check for package accessibility in ConstructorFinder , FieldFinder , and MethodFinder classes to ensure proper accessibility checks for types
changed log level from warn to trace for various log messages in LoggingHandler . java to improve logging granularity and provide more detailed information during execution
refactor substring handling in WhiteBlackList . java and add a new test class Issue348 . java to improve prefix processing logic and ensure
added options menu functionality to GalleryActivity to enhance user experience by allowing users to view images directly from the gallery
refactor MongoDBServiceFactory to use a singleton instance of SimpleTestServiceBuilder to improve performance by reusing the instance of MongoDBService
added tests to replace boolean values with their corresponding boolean values in InlineConstantMutatorTest . java to ensure correct behavior when boolean values are true or
added a ` Blackhole ` parameter to the ` decode ` method in ` RecordTest . java ` and modified the ` decode ` method to
fix : update gapic - generator - java with mock service generation fix ( # 388 )
updated ` getAllUnitStrings ` method to return a map of entry types instead of a stream of strings to improve type safety and ensure proper handling
removed the clear ( ) method call from dbManager ' s witnesses list to streamline the process of clearing witnesses in ManagerTest
do n ' t swallow exception in jdbcpagesink . abort ( )
removed the " stack " property and replaced it with getter and setter functions in NativeError . java to streamline stack management and ensure proper property
added a check to return false if the path name starts with a dot in DrillPathFilter . java to ensure that the path name does
corrected the spelling of " onboard " to " autoload " in multiple files to improve code readability and maintainability by using a
added a call to clearIndex ( ) in BasicFunctionalityTest . java to ensure the index is cleared before further operations
update boldweight _ normal value from 190 to 0x190 to fix typo in documentation
changed fThreadGroup to be volatile and updated fLookForStuckThread to be final in the Timeout class to ensure thread safety and improve
made the ` getValue ` and ` setValue ` methods final in ` ValueResultData ` to enforce immutability and prevent overriding of the
updated hash code and equality checks in FuzzyQuery . java to ensure proper implementation of hashCode and equals methods
removed debug print statement for the SIMON target in PushedResourcesTest . java to clean up the test output and reduce unnecessary console output
changed return type of ` removeFile ` and ` removeDirectory ` methods from ` SharedRandomAccessFile ` to ` void ` to simplify method signatures
updated JDBC driver version from 2.5 . 1 to 2.6 . 0 in JdbcDriverInfoRetrieverTest and SchemaCrawlerCoverageTest to
updated the retrieval of person attributes to initialize a HashMap with an empty map and refactored the principal creation process to improve clarity and efficiency
changed log level from info to warn for connection error messages in OpenWebNetBridgeHandler . java to improve logging granularity for better debugging and monitoring
updated method names and logic in Hashing classes for consistency and clarity to improve code readability and maintainability by using a consistent naming convention
added a constructor to ThumbnailGenerationTask to initialize storageManager and account to ensure proper initialization and prevent null pointer exceptions during thumbnail generation
updated the loop condition in GroupSelectionQuery to allow for retries when nrFound is less than count and tries are less than 5 to improve control
add test case for [ 1933922 ] recursive compilation error
removed unnecessary parentheses in comparison logic in multiple classes to improve code readability and maintainability
updated character range check from 33 to 32 in FileResolver . java to ensure that control characters are within the valid range of 0 - 31 and
added a requestFocus ( ) call to the cmp object to ensure the component receives focus to improve user experience by ensuring the correct input field is
continue issue 527 [ add test case for instructor home page ui test ]
rename ` JsonParserAsync ` to ` JsonStreamParser ` across multiple files to clarify the purpose of the class related to JSON parsing
updated Crouton handling in DetailFragment and added onPause method in MainActivity to improve user experience by ensuring croutons are properly canceled
added a new test method ` testSchemaQueryAndFetchWithUnrelatedTemplate ` to ` IoTDBSchemaTemplateIT . java ` to ensure
refactor Dialog class to improve code organization to enhance maintainability and readability of the code
refactor process execution to use ProcessBuilder instead of Runtime . getRuntime ( ) to improve clarity and maintainability of the process execution process
changed the method call from ` getLocalHost ( ) ` to ` getByName ( " 127.0 . 0.1 " ) ` in `
refactor subsystem assignment in Metrics . java to use a loop and a helper method for better readability to enhance code clarity and maintainability
added assumptions to verify support for macOS build and installation in DaemonLifecycleManagerTest and InstallCommandIntegrationTest to ensure tests are only executed
refactor jvmciversioncheck to use getrequiredproperty instead of validateproperties
refactor Mockito class implementation to improve code readability and maintainability
updated TestLargePageUseForAuxMemory . java file to improve test coverage for large page usage
updated method calls in BinaryParser , PlainTextParser , ParsingExecutionContextView , and TextParser to include charset handling to improve code clarity
added support for setting and getting the MultiPartFormDataCompliance enum in HttpConfiguration . java and introduced a new class MultiPartFormDataCompliance . java
added JDK - 17 support to the Gradle version in GradleDistributionManager to enhance compatibility with JDK - 17 features and improv
added a method to add types to the SnapshotControl class and refactored type addition logic to improve code readability and maintainability by encaps
refactor Term class to improve code readability to enhance maintainability and facilitate future updates
updated the return statement to handle null or empty values for ' runWith ' to improve robustness by ensuring ' runWith ' is not null
resolve http : / / issues . apache . org / activemq / browse / amq - 2694 - add test case to
refactor multiple classes related to audio device and media codec handling to improve code organization and maintainability across the project
pdfbox - 417 : fix a bug in blackbox test , a suggest by valerybokov
updated tinting logic in TaskView . java to use a new variable for the tint amount to improve code clarity and maintainability
added a new file ` SumZeroFunctions . java ` to implement a function for summing zero values in the Drill aggregation framework to enable
[ ci ] remove useless ' not null ' constraint from test
hbase - 26969 bucketallocatorexception . getallocationfailwarningmessage ( ) should print the allocation failure cause
added null check for propName before putting it into roleObject . getProperties ( ) to avoid potential NullPointerExceptions when propName is null
added @ VisibleForTesting annotation to several fields and modified method visibility in StatusBarTouchController . java , and modified task removal logic in Recent
add logcontainerstream ( ) method to keep stream open indefinitely
move mvstore cache performance test to a separate thread
updated LONG type from " L " to " J " in PrimitiveType . java to improve clarity of the data type representation
changed the method ` delegatingApplicationListener ` from instance to static to allow the method to be called without an instance of ` DelegatingApplication
camel - rest - fix restbindingadvice to set the message body to null .
added FileDeletingTasklet and TaskletJobFunctionalTests classes to handle file deletion and job functionalities in batch processing
g3d - 335 : update size keep drawables only on first view creation ( in euclidianviewcompanion
fix lgtm warning [ java / index - out - of - bounds ]
updated methods in AccessibilityManagerCompat and related classes to use state ordinal instead of a string for event tags to improve clarity and consistency in
added checks for video thumbnail requests in RequestHandler and RequestHandlerV2 classes to ensure proper handling of video requests based on user agent and format
fix for http : / / code . google . com / p / mybatis / issues / detail ? id = 353 : fix
updated the title layout logic in SideMenuBar to differentiate between top and bottom buttons based on the parent UI manager ' s theme constants to
updated Skia . java to include " libskia " and modified value and link in Skia . java to ensure compatibility with the new
add networkparameters . id _ unittest to support unit test .
added validation to ensure format arguments are not specified in the query command to enhance error handling by providing clearer feedback when format arguments are missing
[ java ] remove unused field and field in intiterator .
updated the ` walkRuleAndAdd ` method to include ` srcRule ` as a parameter and modified the dependency traversal logic accordingly to enhance dependency
do n ' t override module name on class - output patch ( fixes # 1193 )
[ java ] do n ' t check protocol version when send election message .
modify OwnCloudClientManagerFactory to set a default policy based on authentication type to ensure proper policy management based on authentication settings
added null checks for mappedTableResource in ReadBatch and WriteBatch classes and corresponding test cases to ensure that required mappedTableResource is provided when
refactor close method to use utils . close ( )
refactor AnonymousAuthenticationFilter to utilize a deferred security context supplier for authentication to improve flexibility in handling authentication context during request processing
updated the removeActor method to include an unfocus parameter for better control over the unfocusing behavior to enhance actor removal functionality by allowing for
refactor cloud configuration prompt handling in SolrCLI . java to improve clarity and maintainability of configuration validation logic
added logging support and improved channel handling in NettyHttpServer and RoutingInBoundHandler to enhance debugging capabilities and ensure proper logging during response
refactor multiple classes including DatumAliases , AbstractParser , Formatter , and Parser to improve code organization and maintainability
replaced direct call to ` update ( ) ` with ` SwingUtilities . invokeLater ( this : : update ) ` to improve thread safety
camel - 14263 : camel - groovy - optimize groovy language to reduce object allocation .
[ mng - 4892 ] plugin manager : no need to access manage version map , just return all artifact
changed access modifiers of several constants and methods in CliFrontendParser , ProgramOptions , and ProgramOptionsUtils classes from package - private to public to
replaced ` ShadowSharedPreferencesEditor ` with ` TestSharedPreferencesEditor ` and added unit tests for its functionality to enhance test coverage and ensure
removed storage alias retrieval and certificate chain logging from HttpsMessenger . java to streamline the process of retrieving and displaying the certificate chain for better
simonstewart : do n ' t crash the server if we ca n ' t convert the response to json
changed method visibility of ` updateImage ` from private to protected in ` ImageButton . java ` and ` ImageTextButton . java ` to
add block . dropresources ( ) to call server . close ( ) . close # 795
added native methods for spatial location calculator configurations in DataOutputQueue and depthai classes to facilitate the retrieval and retrieval of spatial location
rename multiple Java classes related to CommunityDetection and ConnectedComponents to improve clarity and consistency in naming conventions
replaced the keySet ( ) . isEmpty ( ) method with a custom isEmpty ( ) method and added a new isEmpty ( ) method to enhance
updated foreground and background method calls to include parameters for r , g , and b to improve accuracy of color representation in the AttributedStringBuilder
modified the ` doFingerprint ` condition to include a system property for disabling fingerprints to allow flexibility in fingerprinting behavior based on system
changed the visibility of the moveFunds method from private to public to allow access to the moveFunds method from other classes
added event emissions and new test cases for PersonWithIdPropertyOfTypeUUID in MongoTemplate and MongoTemplateTests to enhance event handling and
fix settransactiontest by use testhazelcastinstancefactory , not static hazelcast instance
make sure to close the inputstream in tikacli . get ( ) so that we do n ' t leak resource
updated exception handling in TestCollectionAPIs . java to use ApiException instead of ApiBag . ExceptionWithErrObject to improve error handling specificity
removed unnecessary whitespace in OptionsParser . java to improve code readability and maintain consistency
update instructorfeedbackcopyactiontest . java and instructorfeedbackaddactiontest . java to fix typo
[ beam - 8470 ] fix checkstyle violation in externalrunnerservice
( chore ) camel - hm : remove unused ` ` step ' ' field
added logging statements for acquiring and releasing shared locks in PostgreSQLReadWriteAdvisoryLocksTest . java to improve traceability and
remove schedulejob ( ) method from basereschedulerserviceimpl . schedulejobs ( ) to avoid deadlock
simonstewart : fix testgettextcontent so that it pass in ie
refactor logger implementation to use ThreadLocal for thread - local logger management to improve performance and reduce memory usage by reusing the logger instance
added @ VisibleForTesting annotation to the convertToCompilationUnit method and updated test cases to use MockitoJUnitRunner instead of JMockit to
added handling for primitive types and improved type checking in type inference logic to enhance type safety and prevent errors when dealing with primitive types
updated the handling of the focused task view and its orientation state in RecentsView . java and removed redundant initialization in TaskView . java
hbase - 25827 use getregions ( ) in testflushfromclient ( # 2588 )
added logic to clone and delete a contract from a track and save contract details to ensure proper management of contract data during transaction execution
updated TOKEN _ ISSUE _ FEE handling to use dynamic properties instead of hardcoded values to improve flexibility and maintainability by allowing
refactor caching mechanisms in RealisticRenderStrategy to use URI and Texture objects instead of generic maps to improve efficiency and flexibility in managing
refactor raster creation and composition in Blit . java and add a new Bug7049339 . java file to improve code read
added support for unselected strings in the text rendering logic to improve the accuracy of string width calculations based on the selected style
updated ArrayList initializations to specify initial capacity to optimize memory usage by specifying initial capacity for improved performance
removed the ' flags ' parameter from multiple method signatures in ShadowApplicationPackageManager . java to simplify method signatures by eliminating unnecessary flags parameter
refactor PingRequestHandler to improve code readability to enhance maintainability and facilitate future updates
skip audio transformation test on api < 25 .
[ TradfriGatewayHandler ] improved firmware version check and logging to enhance clarity and maintainability of the code
updated the implementation of AjaxElementLocator to improve performance and maintainability of the code
updated isBlockNode checks in BoxLayout . java and modified display conditions in DefaultLayout . java to improve layout logic to accommodate additional display types and ensure block behavior is correctly applied
refactor JsonDecoder to improve handling of JSON array elements to ensure correct ordering of fields during JSON decoding
updated the listener to accept a removal cause as a parameter instead of a single notification to simplify the listener implementation and improve code readability
ignore savepointtestbase until we can fix it
added two @ Test annotations to DroolsMvelParserTest . java to enable unit tests for improved functionality
changed instance variables in ContextRegisterListener to be final to ensure immutability and prevent unintended modifications
refactor ObjectHashSet to initialize the iterator in a constructor instead of creating a new instance to improve flexibility by allowing the iterator to be re
added batch size validation and default value for batch processing in SparkReduceRecordHandler and ReduceRecordSource classes to ensure proper handling of batch size limits
changed context modes from MODE _ WORLD _ READABLE and MODE _ WORLD _ WRITEABLE to MODE _ PRIVATE in AppSettings and Update
updated logging message to indicate when the close ( ) method is called after an already close ( ) or abort ( ) is called to improve cl
updated the method call in ` Workspace . java ` to use ` mState ` directly and added accessibility importance logic to enhance animation behavior
changed log level from warn to debug for malformed edits in ProtobufLogReader . java to improve log granularity for debugging purposes
updated scope assignment in UaaTokenServices and added a new test for persisting a revocable token with a longer scope to ensure that
updated imports and modified logger initialization in SchemaRetrievalOptionsBuilderTest , AvailableJDBCDrivers , and TestAvailablePlugins classes to improve code clarity and
( chore ) camel - kie - ci : add executablecommand interface
( chore ) camel - jms : remove unused jdbctableservice from itest
added padding getter methods in CellLayout and modified bitmap creation in Launcher to improve code readability and maintainability by centralizing padding calculations
refactor candidate filtering logic to initialize cands to a conditional assignment based on the presence of a StringBuilder to optimize performance by avoiding unnecessary stream
updated import statements and changed variable types from ` SamlMetadataUIParserAction ` and ` SamlMetadataUIParserDynamicActionTests ` to
added a method to check open ports in LdapMockMvcTests . java to ensure that LDAP ports are valid before proceeding with operations
log4j2 - 1343 fixed checkstyle issue in log4j2 - core
refactor URL handling in Fetcher and HTMLMetaProcessor for improved clarity and functionality to enhance URL processing logic and ensure proper handling of
updated SolrQuery in TestSpellCheckResponse to use " name : samsang " instead of " * : * " and modified the
refactor Console instantiation to use reflection for compatibility with old and new Karaf Console API to ensure compatibility with both old and new Kar
bugfix : use mloopcol instead of mcol when mcol be not available
added file filtering to exclude timed reports directories during the copy process to improve data consistency by excluding outdated reports from the copied directory
( chore ) camel - datavalidatortest : use parameterizedtest instead of separate test method
pdfbox - 4892 : remove unused method , a suggest by valerybokov
added a null check for bindStatus in FieldUtils . java to throw a TemplateProcessingException if the bindStatus is null to ensure proper error handling
removed debug print statements from JoglInput . java to clean up the code and reduce unnecessary console output
added a flag to allow extracting private fields and modified the readField method to accept it to enhance flexibility in field extraction behavior based on configuration
added a replacement for device name in WebDataHandler . java to ensure the correct device name is used for processing
refactor lookup creation logic to use MethodHandles for Java 8 types to improve compatibility and flexibility in obtaining Lookup instances
replaced the old ` weights ` method with a new ` weightsByDouble ` method and marked the old method as deprecated to improve functionality by
added a ` Database ` parameter to multiple ` writeCustomHTML ` methods across multiple writer classes to enhance functionality by allowing the writing of custom HTML
removed unnecessary type casting for keys and simplified key deserialization in BTreeMap . java to improve code readability and maintainability by reducing unnecessary
updated exception handling in CancelDeferredTransactionContractActuator and UpdateDeferredTransactionContractActuator to specifically catch BalanceInsufficientException and InvalidProtocolBuffer
do n ' t write empty heap file when profiler heap zerofile be enable .
replaced stream . println calls with Scope . getCurrentScope ( ) . sendMessage for better message handling to improve code clarity and maintainability by
increased the size of the buffer from 14 bytes to 13 bytes in HortonworksEncodedSchemaReferenceStrategy . java and removed generic
added import statements for ItemProcessListener , ItemReadListener , and ItemWriteListener in multiple batch - related Java classes to enhance batch processing functionality
refactor code formatting and improve property retrieval logic in AbstractProviderModule . java to enhance readability and maintainability of the code
updated print statement formatting and simplified method calls in multiple files to improve code readability and simplify method calls
rename Test7005594 . java file to improve clarity and consistency in naming conventions
updated error message formatting in ResourcesValidationProcess . java to improve clarity of error messages for better debugging
refactor TopKRollupPhaseOneJob class for improved clarity to enhance maintainability and readability of the code
server : fix npe in listvirtualmachines command - when vm be not in vm _ start state , do n ' t try to
add accelerometer support for accelerometer modifier on gamepad ( # 1188 )
refactor ` iteratesOver ` methods to accept ` Iterable < T > ` instead of ` Object ` and update test cases accordingly to improve method
camel - 14263 : camel - http - optimize defaulthttpbinding to avoid arrayindexoutofboundsexception
added assertions to verify the number of results returned from various database queries in ActivityHistorySQLServerStoredProcedureTest . java to ensure accurate retrieval of
added LargeValueFormatter class and modified BarChartActivityMultiDataset and BarLineChartBase to utilize it for improved formatting of large
added a constant for INNOCUOS _ CHAR and modified the character handling logic in CommentsParser . java to improve code readability and maintain
removed the @ SuppressWarnings ( " argument . type . incompatible " ) annotation from Platform . java to eliminate warnings related to incompatible argument types
[ hotfix ] fix typo in tracelinearscanlifetimeanalysisphase
added a TODO comment for the Auto - generated method stub to prepare for future implementation of method stub generation
added handling for RuleKeyAppendable in DefaultRuleKeyBuilderFactory to append " . buck " to the rule key for build rules
added checks for the existence of the system profile directory and modified test setup and teardown methods in multiple test classes to ensure the system profile directory is
refactor the creation of the NioEventLoopGroup to use a dedicated createThreadFactory method to improve code readability and maintainability by
refactor message counting in HttpChannelOverHTTP and HttpReceiverOverHTTP classes to use a dedicated method for getting messages to improve code organization and
added an attribute " accept " to the element of the ImageFileInputDialog to allow users to select images directly from the dialog
updated ElasticIndexWriter and TestElasticIndexWriter to use PreBuiltTransportClient and added OpType to BulkItemResponse to improve client initialization and
added detailed information about witnesses and their class names in ForkController . java to enhance debugging by providing more detailed information about the witnesses and
added a new test class called NullPointerAndEmptyArrayTest to verify handling of null and empty URL arrays to ensure that the CustomURLClassLoader
removed the method ` findConfiguredGeneratedSourcePathsUsingDeps ` and updated references in ` IjProjectBuckConfig ` and ` Ij
added a method to escape wildcard characters and modified wildcard pattern construction in UaaStringUtils to enhance flexibility in handling wildcard characters and improve regex
added validation for alias to work with TableScanOperator in Vectorizer . java to ensure proper handling of multiple table scan aliases in the map work
updated MockitoJUnitRunner import from org . mockito . runners to org . mockito . junit . MockitoJUnit
added error handling for setting firmware settings in TinyGFirmwareSettings . java to improve robustness by logging errors when setting firmware settings fails
replaced multiple specific imports with a wildcard import and modified the ` getLangs ` method to return a ` Set < String > ` instead of
updated assertions in LazyTraceScheduledThreadPoolExecutorTests . java to improve clarity and consistency to enhance readability and maintainability of test assertions
hbase - 25827 takesnapshot and disabledtablestatsnapshothandler should check if . tableinfo be present before load snapshot
[ wasm ] add support for ` ` null ' ' in finally block .
updated DockerQuickstartTest . java to include a test for the HTTP RPC endpoint modified to ensure that the explorer correctly modifies the HTTP RPC endpoint
added a volatile boolean field ` isSuspended ` and modified thread state checks in ` Thread . java ` and ` Test _ Thread . java `
updated Javadoc visitors in Java11JavadocVisitor , ReloadableJava8JavadocVisitor , Java11JavadocVisitor , and Java8JavadocVisitor to enhance
camel - 8705 : fix npe when use @ contextinject with two camelcontextid .
removed multiple redundant @ Override annotations from multiple security - related classes to streamline code and improve readability
added module import handling in Java2TypeScriptAdapter and updated eval method to use ModuleKind . commonjs in EnumTests and MyComplexEnum
fix xssfexporttosxml to use http : / / www . w3 . org / 2001 / xmlschema
added content description handling for badged apps in BubbleTextView . java to improve user experience by displaying relevant badge information
added mouse wheel functionality to the scroll pane in TestMouseWheelScroll . java to enable user interaction with the scroll pane based on mouse wheel
added closing statements for PDDocument objects in VisualTester . java and implemented a new test for positioning absolute in VisualRegressionTest .
updated currency pairs from BTC _ ETH to XRB _ BTC in KucoinAdapters and KucoinIntegrationTests to ensure
updated VacuumController , VacuumFrame , and VacuumView classes to use String instead of Object for location
simplified currency conversion by directly returning the symbol as a string to improve code readability and maintainability
updated JsonFormat . java to replace Set with ImmutableSet and improve default value handling to enhance code clarity and maintainability by utilizing ImmutableSet for
updated JacksonXmlFormatMapper to handle array and enum types correctly to ensure proper serialization of enum values in XML output
updated thread state constants and variable names in VirtualThread . java for clarity and consistency to improve code readability and maintainability by standardizing
refactor DirectoryTaxonomyWriter and related tests to use a unified NoOpCache implementation to improve code clarity and maintainability by reducing red
refactor VetoableChangeSupport class to improve code structure to enhance maintainability and readability of the code
adjusted the calculation for the Y - coordinate in BrowserContentPane . java to correct the height calculation for the owner component
pdfbox - 4892 : remove unused throw , a suggest by valerybokov
added unit tests for ` setShortSupportMessage ` and ` setLongSupportMessage ` methods in ` ShadowDevicePolicyManagerTest ` to ensure
simplify code , remove unneeded cast
refactor LambdaBeanPropertyMemberAccessor and MemberAccessorFactory classes to improve code organization and maintainability
replaced ` Thread . sleep ` with ` ThreadHelper . waitUntil ` for controller state checks in ` BackendInitializerHelper ` and ` Terminal
updated version check logic in SwingStartup . java to use ReleaseStatus and exception handling to improve accuracy of version updates based on release status
mondrian : add option to include generated file comment in migration xml .
updated command usage syntax from " < player > " to " < player | * > " across multiple files to enhance the command ' s flex
deleted the BadHdfsThreadsFilter . java and BadZookeeperThreadsFilter . java files to remove unused thread filtering functionality from the codebase
updated method calls in OptionProcessor to use " optionName " instead of " nameVariableName " to improve clarity and consistency in naming conventions
added a conditional check for parallel classes in TestNGContentHandler . java to enable parallel execution for specific classes
updated enableActingMaster logic in RouteInfoManager . java to use StringUtils for null checks to improve code readability and ensure proper handling of
refactor : remove static import of enums in ctmethodimpl . java ( # 2328 )
added serialVersionUID fields to multiple exception and service classes to ensure proper serialization compatibility across different versions
refactor DeadLetterEntry and JpaSequencedDeadLetterQueue classes to improve code organization and maintainability
updated the ` shaBase64 ` method to accept a custom separator parameter and added a test for its functionality to enhance the flexibility of the
modified the return logic to handle null values for SYSTEM _ ACTIONS _ ENABLED in Parameters . java and modified the conditional check in TestAction .
camel - it0074 : add a maven - it0074 - maven - plugin and maven - it0074 - maven - plugin to
avoid use the local address when start gossiper .
convert timeStr to uppercase before checking its index to ensure case - insensitive matching for column labels in the client
added assertions to verify the properties of timeColumn , timeUnit , and totalDocs in SegmentMetadataImplTest . java to ensure that the metadata is
replaced the import of ` java . awt . Color ` with ` net . sf . openrocket . util . Color ` and updated
added a call to ` disconnectEmitters . onNext ( new Object ( ) ) ` in ` NettyStreamingService . java ` to ensure
fix for http : / / issues . apache . org / activemq / browse / amq - 2630 - use annotationtypes
danielwagnerhall : add a new test to check that an element be hide by double overflow .
added try - catch block around dismissing the dialog to handle potential exceptions when dismissing the dialog
add support for jtatransactionmanager . findtransactionSynchronizationRegistry ( ) via system property jbpm . tsr . jndi .
changed the access modifier of the pickUri method from public to private to restrict access to the method for better encapsulation
removed the hasFunction method from the Library class to simplify the code by eliminating unnecessary functionality
renamed variable ` enabledCiphers ` to ` result ` for clarity and consistency to improve code readability and maintainability by using a
[ bigquery ] support bigquery timestamp type in bigquery storage storage api ( # 11938 )
replaced manual null checks with requireNonNull method for buffer and userCredentials in Identifiers . java and DatabaseConnector . java to improve code readability
refactor : use inputmap instead of input . get ( ) and input . getdefault ( ) .
added bounds checking for row and column indices in FlightConfigurablePanel . java to ensure that the row and column indices are within valid ranges to
added a call to scrollSelectionVisible ( ) in ThrustCurveMotorSelectionPanel . java to improve user interface responsiveness by
[ java ] unnecessarylocalbeandlereturn : fix false positive with nested method
replaced the initialization of ` scriptEngineManager ` with a direct assignment of ` scriptEngine ` to simplify the code and improve clarity by
simplified the calculation of the correlation distance in EuclideanDistanceSimilarity . java and updated corresponding test assertions in EuclideanDistanceSimilarity
make sure we do n ' t create backup file for non - existent sstables
updated the ` relativize ` method to accept two ` Path ` parameters and added a new ` relativize ` method to ensure that
added null checks for columnSize and decimalDigits in ColumnSnapshotGenerator . java and modified value construction in DataType . java to ensure proper handling of
replaced the deletion of the " 1 . log . tmp " file with filtering to exclude files that do not end with " . tmp "
replaced hex string conversion method from ` toHexString ` to ` toJsonHex ` in ` TronJsonRpcImpl . java ` to ensure consistency
renamed ` ErrorHandlerController ` to ` Error404Controller ` and created new classes ` Error404Controller ` and ` Error403ControllerTest
replaced ` TerminalFactory . resetTerminal ( this ) ` with ` TerminalFactory . resetIf ( this ) ` in UnixTerminal and Windows
updated imports and annotations in ` Tiny . java ` , ` TreePathHandle . java ` , and ` TreePathHandle . java `
refactor connection acquisition logic in ConnectionPool . java to use a for - each loop to improve efficiency by removing unnecessary entries from the list
updated method names and references from ` getDateConverter ( ) ` to ` getLdapDateConverter ( ) ` and ` setDateConverter ( ) `
pdfbox - 4892 : avoid npe , a suggest by valerybokov
updated error message formatting in JavassistUtils . java to improve clarity of error reporting for class loading failures
added exception handling for reader and writer threads and increased join timeout in LargeStreamletTest . java to improve error handling and ensure proper thread
updated the logic for setting the current item in HomeFragment to dynamically count extra pages based on user settings to improve user experience by dynamically adjusting
added error handling for image creation in AndroidImplementation . java and introduced a brokenGaussian flag in NativeImage . java to improve robustness and
replaced the suppressNode ( ) method with the @ SuppressSubnodes annotation in BaseParser . java to simplify the code by eliminating
pdfbox - 4892 : use try - with - resources to prevent resource leak
deleted the file TestDocInverterPerFieldErrorInfo . java to the file is no longer needed for the current functionality
added a command to execute keyboard input in AbstractLauncherUiTest . java and modified the assertion in LauncherInstrumentation . java to enable keyboard
added import for ObjectMapper and implemented filenameToUrl mapping in FileDumper . java to facilitate the conversion of filenames to URLs for better
bugfix # 226269 , reset profilerserver . resultsnotified flag after shutdown
bugfix : blender loader do n ' t add loaded feature to the loaded image , so we do n ' t have to re -
fix test after upgrade to spring boot 2.2 . 0
updated the expected value in the aNewIsbnRandomizer method calls from " 9781797745008 " to " 978
updated notification sound setting to use a dynamic ringtone URI to enhance user experience by allowing customizable notification sound settings
add reportloopcount to rootnode so that it can be use in a loop .
added logic to set the current stack version when finalizing a cluster in FinalizeUpgradeAction . java and updated the cluster merge method in ClusterImpl
fix a bug in listpublicipaddresses - get regionid instead of rangeid
updated the order of streamManager opening in ItemOrientedStep . java to ensure the correct execution context is used for opening operations
added a new file ` CountedLoopProblem . java ` that generates a series of random numbers to test the behavior of the ` Counted
refactor executecompiledmethod and executecompiledmethodvarargs to take a nativemethod argument .
make ` ` jlong ' ' - > ` ` int ' ' - > ` ` long ' ' - > ` ` jlong '
replaced ` TransformerSupplier ` with ` ValueTransformerWithKeySupplier ` in the ` KafkaStreamsTracing ` class to enhance tracing capabilities for key
update html resource file to include received point
removed the call to DynamicColors . applyToActivitiesIfAvailable ( this ) in BaseApplication . java to streamline the process of enabling dynamic
added thread dump functionality and improved thread termination handling in CloseRace . java to enhance error handling and debugging capabilities for child threads
updated return statement in IntPointField . java to convert values to integers and added assertions in TestPointFields . java to ensure proper conversion of
updated arcSize from an integer to a double and adjusted its calculation based on the width to improve flexibility in button sizing based on the
updated image dimensions from 768 to 640 in AddAndScaleMultiImage . java and ImageBorderCuttingWizard . java to adjust image
rename ` ` minify sql ' ' configuration option to ` ` shrink whitespace in sql ' '
refactor ` waitForStateTransitionToEnd ` method and enhance state transition checks in ` WorkProfileTest . java ` to improve clarity and
added import statements for various configuration classes and modified import statements across multiple test classes to enhance configuration management and improve code organization
replaced direct reading of single byte array with DataIO for reading long values to improve performance and maintainability by using a more efficient data reading
camel - http : fix the test error of camel - http
refactor classpath creation in DeclarativeHintsParser . java to use ClassPathInfo . Builder to improve clarity and maintainability of classpath
introduce mediescriptscopeprovider interface to allow customization of audio / voice scope ( # 4566 )
added methods to get and set the layer manager in AnimComposer and updated AnimEvent to utilize this new method to improve layer management
added a check to return early if the queue is empty in DeferredHandler . java and removed the updateWallpaperOffset method from Workspace . java
added null checks for mapOp and mapWork in MapRecordProcessor . java and changed handling of exceptions in TezProcessor . java to improve
replaced ` center2D ` with ` center ` and updated related methods in ` CylinderRegion . java ` to streamline center
replaced JUnit ' s Assert with JUnit ' s ExpectedException for exception handling in TestBadUseCases . java to improve test reli
modified the ` sendOneQuery ` method to handle null parameters correctly and added a new test for multi - execution in ` StatementTest . java
do not log ` ` visualvm - security customization ' ' if the environment be not customized
added a rctag parameter to the GET request in ReviewInterface . java to support Android ' s edit functionality in the API
refactor Test . java for improved readability to enhance code maintainability and clarity
updated PBEKeySpec to use keyLength instead of blkSize to improve clarity and consistency in key length handling
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
pdfbox - 4892 : add writesectiondefinition ( ) , a suggest by valerybokov
added a check for nearly large jump detection in GpsLoggingService . java and updated the accuracy check in GpsLoggingService . java
removed debug print statements from TableCellLayout , TableLayout , and TableLayout2 classes to clean up the code and improve readability
doc : generate sample code in the java microgenerator ( # 24 )
updated InsightFilter to use WeakReference for rootNameFn and sourceFilterFn to improve memory management and prevent memory leaks
replaced binary search for app names with direct addition to the list to simplify the code and improve performance by eliminating unnecessary binary search
replaced ThemedPreferenceActivity with PreferenceActivity in SettingsActivity and removed ThemedPreferenceActivity to simplify the SettingsActivity and eliminate unnecessary
updated the class name from " HostD " to " UsingUnresolvedD " in ValueTypeTests . java to clarify the purpose of
reformatted assert statements in FST . java for consistency to improve code readability and maintainability
added an assertion to check if the security policy exists and is a file to ensure that the security policy is valid before proceeding with further operations
camel - 14284 : camel - olingo2 - add miss getconfiguration ( ) method to avoid npe
increased sleep duration from 1000ms to 5000ms in RecoveryZkTest . java to allow more time for operations to complete before proceed
removed exception logging from the info statement in MongoPersistentEntityIndexResolver . java to simplify logging by eliminating unnecessary exception information
added file upload functionality to the xmpp client .
camel - 10650 : camel - netty - do not use channellocal to store producer state , so we do n ' t have
fix spliturl ( ) to handle invalid host name
remove the system property to disable JSR199 compiler in FragmentActivator . java
add support for null string in CSVRecordReader and its configuration to ensure proper handling of null values in CSV output
added LiquibaseService import and annotation to multiple connection classes to enable the use of Liquibase service functionality in the connection management
updated cursor handling in VariableNameUtils to use JavaSourceFile instead of J . CompilationUnit to ensure compatibility with Java source files when aggregating static
added event . topics for command and state trigger ( # 2321 )
replaced ` BeanCurrentlyInCreationException ` with ` BeanCreationException ` in ` TraceWebAutoConfiguration . java ` to improve cl
solr - 7624 : correct wrong spelling of zkcredentialsprovider in solrcloud section of solr . xml .
fixed mana tablet not be able to damage if they have a creative mana . close # 2207
added identifier collection to mCurrentCallEvent in P25P2DecoderState . java to ensure the identifier collection is correctly initialized for the current call
removed unused imports for HyphenationCompoundWordTokenFilter and DictionaryCompoundWordTokenFilter to clean up the code and improve maintainability
removed the prefix " - % d " from the thread pool name in the ScryptUtil class to simplify the string format for better readability
updated the GeneratedCode class to improve code structure to enhance maintainability and readability of the code
updated assertNotNull message to include the variable ' definition ' to improve clarity by providing a meaningful context for null checks
removed the shareWithMeIcon view from the LocalFileListAdapter to hide the shareWithMeIcon button to improve user interface by hiding the
updated the link to Bootstrap CSS from HTTP to HTTPS in multiple filter classes to enhance security by using secure resources
updated RouterFilter and related tests to enforce non - null headers and changed method calls to ` getOrLoadSortedService ` to enhance code robustness
enhanced assertion message in TestIndexWriterMergePolicy . java to include detailed information about document and segment counts to improve debugging by providing detailed context
[ hotfix ] [ neural ] deprecate the class in favor of the new one .
added a null check for the context in the ` CrawlerSessionManagerValve ` and implemented a new test for multiple contexts in ` TestCrawler
modified the ` getJspApplicationContext ` method to use a privileged action based on security settings to enhance security by allowing access to ` JspApplicationContextImpl
refactor RocketComponentConfig to manage minimum and maximum lengths based on axial offset and length to improve accuracy of component length calculations and ensure
replaced the ` @ Singleton ` annotation with ` import ( Scopes . SINGLETON ) ` in ` OpenIDAuthenticationProviderModule . java `
fix a bug where update a user ' s link in a user ' s network would fail .
refactor method signatures and formatting in SpringCloudPlugin . java for improved readability to enhance code clarity and maintainability by standardizing
increased the delay from 100ms to 500ms in publishWithDelay method calls to reduce test execution time for improved reliability
do n ' t set shiftcodesalways if it be always override .
updated heartbeat monitoring logic to use active cluster coordinator instead of local node identifier to improve clarity and accuracy in determining if a node is leader
removed unnecessary whitespace in NearbyActivity . java to improve code readability and maintain consistency
updated the filter condition in AbstractKerberosDescriptorContainer to use isReference ( ) instead of getName ( ) for identity validation to improve clarity
modified the ` newInstance ` method signatures to accept a ` boolean noop ` parameter instead of ` AbstractCommandOptions ` to enhance flexibility by allowing
added a sleep delay of 3 seconds in the catch block for IOException to allow for more time for the test to complete before proceeding
updated method call argument handling in PatchExtensionMethod . java to ensure original arguments are preserved during method invocation
replaced ` Map < String , RawNativeLibraryImpl > ` with ` Set < RawNativeLibraryImpl > ` for managing raw native libraries
int - 1718 : added ' apply - sequence ' and ' ignore - send - failures ' namespace attribute to the router element .
removed x509 - related fields and methods from ClientKeyPublisherMapping , JwkViewResolver , and ClientKeyPublisherMapping classes to streamline
modified the way SolrIndexReader is assigned based on the length of readers to ensure the correct reader is used when only one reader is present
replaced ValueSourceParser with Double2Parser for maximum and minimum functionality to improve accuracy in parsing numeric values from document values
removed focusable and pointer event checks from the return statement to simplify the logic for returning the current instance
removed unused variables and modified the next ( ) method signature in TokenSources . java to improve code clarity and eliminate unnecessary exception handling
cloudstack - 4892 : use uuid instead of id in user table to avoid ambiguity
fix multifactor webflow configuration when web application be not on classpath
updated connection settings and refactored SQL commands in WriteJdbcPTest . java to enhance database connection management and improve code clarity
simplified the initialization of the FlatLaf look and feel by removing the conditional check for the editor ' s laf preference to
replace calls to ` getStateEntity ( ) ` with ` stateEntity ` and ` desiredStateEntity ` in ` ServiceComponentHostImpl . java
simplified margin calculations in FloatingTaskView . java to improve readability and maintainability of the code
added a conditional break statement in RootFolder . java and updated the status line in NavigationShareTab . java to improve control flow and provide user
bugfix # 20625 , use ti . threadid in cpucallgraphbuilder . getactivethreads ( )
ggb - 1883 : do n ' t need to get all tool when create a new perspective
added NetworkAddressChangeListener implementation and improved logging messages in HomekitImpl . java to enhance network address management and enhance logging clarity
updated lease retrieval logic in TestHDFSEventSinkOnMiniCluster . java to use leaseRenewalTime instead of lease to ensure
replaced ` Optional . absent ( ) ` with ` Optional . absent ( ) ` for ` prefixHeader ` and added ` linkStyle `
added null check for exception message in ExceptionHandlerRegistryFactory . java and created a test for handling null messages in ExceptionHandlerRegistryTest . java
changed the ` nextID ` variable to be volatile and modified the ` getSize ` method to use ` nextID ` instead of ` indexWriter
resolve intermittent ci failure on ci server
updated ` AbstractThinArchiveArg ` , ` FileListableLinkerInputArg ` , and ` SourcePathArg ` classes to implement
simplified the exception message by removing unnecessary StringBuffer manipulation to improve code readability and performance
added custom index field name handling for facet fields in OrdinalMappingAtomicReader and updated related test cases in TestOrdinalMappingAtomicReader to
modified the ` toEpochMilli ` method to handle negative seconds and negative nanoseconds correctly to ensure accurate calculation of milliseconds when seconds are negative and
fix ( gl ) : do n ' t cache shader attribute
added functionality to block block update scripts in CopyPaste . java to improve user experience by managing block updates effectively
8014869 : c2 : c2 : assert ( c - > c - > c - > c - > c -
removed redundant calls to resetTemporalAttributes in ChannelState . java and refactored audio packet handling in AudioPacketWaveRecorder . java to improve
camel - 14850 : fix arrayindexoutofboundsexception in sspt parser
updated the vendor string from " Sun Microsystems " to " Oracle Corporation " in RealTimeSequencer . java to reflect the
refactor console creation into a separate method and add version printing functionality to improve code organization and enhance the readability of version output
refactored token validation logic by moving it from NextcloudRequest to InputStreamBinder and removing it from NextcloudRequest to streamline token validation
improve error handle for eof in http / 1.1 input buffer .
added unit test for defaultgroupprovider . deletemember ( ) and deletememberfromnonexistentmember ( ) .
no effective change - code cleanup - remove unnecessary object array creation
deleted the V2ReplicationProtocol . java file to the replication protocol is no longer needed for the current protocol version
replaced instances of ` ImmutableSortedSet < BuildRule > ` with ` ImmutableSortedSet < SourcePath > ` for classpath dependencies across multiple
added new files ` ConstructorArgsDemo . java ` and ` StrictDemo . java ` while renaming ` StupidFinal . java ` to
make directtemplatetemplatefeaturecollectionfactory thread - safe to close iterator
updated assertion in WriteResponseHandler to allow for a maximum response count of 2 * replication factor to ensure that the response count does not exceed the
added a null check for item . getIndexNumber ( ) in ItemRowAdapter . java to prevent potential NullPointerException when accessing item properties
renamed the parameter ` areAnchestors ` to ` areAncestors ` and introduced a new method ` returnSelfIfOtherParent `
added a check to return early if the app ' s width is less than 12 to optimize performance by avoiding unnecessary processing when the app '
updated the equality check in ChangeLogParameters to use ` . equals ( ) ` instead of ` = = ` for string comparison to ensure correct
changed the loggers map from static to non - static to allow multiple instances of LogFactory to be instantiated without needing an instance of LogFactory
updated return statement to use ` getBasePlot ( false ) ` instead of directly returning ` p ` to ensure the method returns the correct base plot
improve log when initial upload dir do n ' t exist
added a boolean parameter ` sendStatus200 ` to multiple classes and updated related constructors and methods accordingly to enable handling of HTTP status 200 responses in
added a check to ensure the comment length is greater than zero before processing multi - line comments to prevent potential errors when processing comments with empty lines
added imports and implemented file type association logic in BuckModule . java to ensure proper handling of file types during application execution
replaced multiple specific imports with a wildcard import and changed return types of multiply methods from ToLong to ToInt to simplify import statements and align
improve error message when use - xx : + userTMLocking on unsupported cpu
reformatted code for consistency in ` AccountsActivityTest . java ` to improve code readability and maintainability
refactor Player class to improve code structure to enhance maintainability and readability of the Player class
added a mockito package import for ChannelTypeUID in AbstractModbusOSGiTest . java to facilitate the import of
fix checkstyle issue in util / polyglotexceptionimpl . java .
set ` systemContext ` to null in ` AndroidTestEnvironment ` and implement context reset in ` ShadowFontsContract ` to ensure proper context
added time handling methods and adjusted DateTime calculations in TimeGranularity , PinotDataSourceDimensionFilters , and PinotDataSourceMaxTime classes to improve
refactor control flow handling for try - finally statements in ControlFlow . java to improve clarity and correctness of finally block analysis during try
added checks to ensure arrays do not have the same size and improved error messaging for different array types to enhance error handling and provide clearer
added default cases to return ClickType . UNKNOWN in WindowClickLogic . java to ensure proper handling of default cases in the switch statement
corrected the bitwise operation for index calculation in MeshBuilder . java to ensure proper handling of negative offsets in index calculations
nifi - 2592 : remove controllerserviceprovider field from standardprocessscheduler .
added support for processing Java annotation processors in KotlincToJarStepFactory and a corresponding test in KotlinLibraryIntegrationTest to
updated RESCROLL _ DELAY from 750 to PAGE _ SNAP _ ANIMATION _ DURATION 150 and refactored page snap
added shortcut permission checks and reloading logic in LauncherModel and DeepShortcutManager to ensure shortcuts are refreshed based on permission to enhance security by
added case handling for HISTORY _ SEARCH _ BACKWARD in ConsoleReader . java to support history search functionality in the console
added null check for core name in CoreAdminHandler and improved error handling in CoreAdminHandlerTest to ensure proper handling of null core names
added marker selection functionality in NearbyMapFragment to improve user experience by managing map display and bottom sheet visibility
added error handling to print stack traces in FileSyncAdapter . java to improve debugging by capturing all errors during execution
refactored memory check logic in TestMemoryAwareness . java to use OutputAnalyzer for better error handling to enhance test reliability by handling
modified feed retrieval logic to filter out heavy load feeds based on application settings to ensure that feeds are only processed when heavy load is disabled
log warn if defaultdrmsessionmanager be use on wrong thread
updated string conversion to use Locale . US for packageType and resourceCompressionMode to ensure consistent case handling for packageType and resourceCompressionMode
replace text / xml mime type with application / xml mime type in all test
updated the instantiation of ` confFile ` and ` config ` to use ` INSTANCE . confFile ` instead of ` INSTANCE . confFile `
removed " sleep 5 " from the waitUntilReadyAndTimeout method call in HostPortWaitStrategyTest . java to simplify the test execution by
updated imports and modified methods to use LongMath instead of IntMath and changed the return type of getGroupingIdValue method from int to long
added multiple checks for headless environment in mmm and ppp Toolkit . java to ensure proper exception handling for headless graphics environments
update condition in ExoflameFurnaceHandler to match the furnace ' s world before firing the smelt event to ensure
add solverconfig . move _ thread _ count _ none ( default ) .
fix ( fhirresourcedao ) : search with revinclude do n ' t select wrong resource with the same spname
added a new test class ` Issue582Test ` to validate the functionality of sorting features in a MapDB database to ensure that the sorting
[ native ] add e2e test for decimal overflow
refactor LoadingCache class implementation to improve performance and maintainability of loading operations
added a rule for avoiding non - constructor methods with class names in NamingRulesTest . java to enhance the rule ' s reliability by
simonstewart : add expectedconditions . elementtoselected ( ) and expectedconditions . elementtoselectedtoto ( )
refactor view existence check in ViewExistsPrecondition and introduce hasView method in DatabaseSnapshotGenerator and JdbcDatabaseSnapshotGenerator to improve error
refactor DOMUtil methods for improved readability to enhance maintainability and facilitate future updates
added translation calculations and logging functionality in TaskViewUtils and Utilities to enhance user interaction with task view animations
changed the default value of FLAG _ ENABLE _ FIXED _ ROTATION _ TRANSFORM from true to false in FeatureFlags . java and
added a static method ` walk ` in ` TempFSTTermsReader ` and modified ` writeVInt ` and ` writeVLong `
updated the create methods across multiple factory classes to include SolrQueryRequest as a parameter to enhance the functionality by allowing the creation of SolrQueryRequest
added new trigger statements and modified existing ones in SingleTableMySQLTriggerTest . java to ensure proper handling of null values for content and validUntil
refactor FieldComparator handling in FieldValueHitQueue and TopFieldCollector to use a unified setComparator method to improve code clarity and maintain
updated string concatenation syntax in PhoenixQueryBuilderTest . java to use double quotes for column names and dates to ensure proper formatting of SQL
added Spark initialization to the init method in RequesterTest . java to ensure proper initialization before running tests
added methods to save and retrieve total storage pool settings in DynamicPropertiesStore . java to enhance flexibility in managing storage configurations
added NinjaProperties to improve file handling in the AssetsController to enable development mode for streaming assets from the specified source directory
updated the method of checking map mark existence to use a dedicated key to improve code readability and maintainability by using a dedicated method
added a TokenRewriteStream parameter to the getDefaultValue method in BaseSemanticAnalyzer and DDLSemanticAnalyzer to enhance the handling of default values
removed ` throws IOException ` from method signatures in ` JavaCompiler ` , ` JavacProcessingEnvironment ` , and ` Main ` classes to
refactor JxBrowserManager to use a full path for loading JxBrowser files and improve error handling in FileUtils to enhance code clarity
added a check for the " AppVersion " property in IOSImplementation . java and updated string comparison to use ` equals ` method to improve
[ somfytahoma ] fix nullpointerexception in somfytahomabridgehandler
( chore ) camel - aggregator : disable flaky test on github
replaced the default SSL context with a static keystore configuration for secure connections to improve flexibility and maintainability of SSL configuration
[ dynatrace ] log a warning when a meter return a value of nan
added removal of sessionId from sessionIdToSessionInfo to ensure proper management of session - related information
added a check to set the hostname of all alerts to null in HeartBeatHandler . java and updated alert logging in AlertReceivedListener
simplified the buffer flushing logic in ChannelEndPoint . java to improve readability and maintainability of the code
resolve split - packages : move everything from kie - api under org . kie . api : move org . kie . kmodule
added unit test for seekToMode method in ShadowMediaPlayerTest . java and modified seekTo method in ShadowMediaPlayer . java to ensure
renamed methods from ` createTask ` to ` createThrowingTask ` across multiple classes to clarify that the method does not throw
added border settings for the tabCloseButton based on the AQUA _ LAF environment to improve UI appearance when using AQUA
added POST request configuration and read timeout settings in TSPTimeStampService . java , and modified import statements in TestSignatureInfo . java to enhance
( chore ) camel - jbpm : add wildcard type permission for xstream
added error handling for diamond application in ` ppp Attr . java ` and introduced a new class ` DiamondRaw . java
updated method signature formatting in RelOptUtil . java to improve code readability and maintain consistency
updated argument validation for id and value in Http2Settings . java to improve clarity and correctness of value validation
deleted the file ` Issue664Test . java ` to the test class is no longer needed in the project
added exception handling for disposed sessions in SessionsPoolTest . java to ensure that disposed sessions are not allowed to operate on disposed
[ geos - 7748 ] geos - 7748 : add root object and end object for feature collection
updated the method for setting the selected index in PopupMenuButton to ensure consistent handling of integer values for the index
added a check for manual unstashing in TaskbarStashController . java to ensure proper handling of unstashing behavior based on application
camel - 16400 : camel - report - route - coverage : do not include custom id in xml output
modified the ` getEventMismatchMessage ` method to accept a ` waitForExpectedCount ` parameter to control the wait time for event mismatch messages to ensure
added a new file ` HeaderFixer . java ` that processes and writes headers from Java files to ensure that generated header files are correctly formatted
added functionality to send a broadcast for first load completion in the launcher to enhance user experience by notifying when the first load is complete
deleted the file SuperJumperAndroid . java to the class is no longer needed for the project
updated the return statement in SystemTableScan . java to check if the table is distributed and modified the test case in TestStarQueries . java
added interfaces for KeyValuesProviderAware and ObservationConventionAware to provide a standardized way to manage key values and observation conventions in the
add miss block and item to the miss block list in the persistentregistrymanager . processidrematch
updated return statements in AtomicIntegerArray , AtomicLongArray , and AtomicReferenceArray to explicitly cast ` i ` to a long to ensure proper handling
added caching mechanism for data format string retrieval in HSSFCellStyle . java to improve performance by reducing redundant calls to getDataFormatString
updated the URL in RemoteAuthenticationEndpointTests to include username in the filter to enhance security by filtering users based on their username
update condition from ` def . needsInput ( ) ` to ` def . finished ( ) ` in ` DeflateCompressor . java
updated logging to use LauncherAtom . ContainerInfo with workspace and page index to improve logging clarity and ensure accurate tracking of launcher exit status
chore ( deps ) : upgrade gapic - generator - java to 2.8 . 0 and update gax - java to 2.18
delete deadlocktest . java , it be no longer need
do n ' t try to add marker if they do n ' t exist
added a new " Reopen in Browser " menu item and implemented server connection handling to improve user experience by allowing easy opening of the JavaScript server
added a new error message for multiple outputs in the SemanticAnalyzer class to improve error handling and provide clearer context for semantic errors related to multiple
added null checks for the ` addEntryListener ` method in ` BasicTest . java ` to ensure that the ` addEntryListener ` method
fix coordinatearrays . reverse ( coordinate [ ] ) throw arrayindexoutofboundsexception
removed unnecessary whitespace in ToolbarPanel . java to improve code readability and maintain consistency
added a new boolean variable ` first ` and initialized it to ` false ` in ` TestPayloads . java ` to ensure the state is
replaced the method ` enterOverviewMode ( ) ` with ` showOverviewMode ( true ) ` in ` Launcher . java ` to
fix networkroutetest failure due to destination change .
http : / / issues . apache . org / jira / browse / amq - 4892 - fix messagehandlerinterceptordefinition
pdfbox - 4892 : fix checkstyle violation and suppress unused warning
modified the way pending chunks and buffers are added in HttpClientRequestImpl and HttpTest classes to improve buffer handling and enhance test coverage for HTTP requests
updated artifact replacement logic in GetMavenDependenciesTask . java to include " ( ? < ! solr - ) analysis - " to ensure correct
pdfbox - 4892 : simplify code , a suggest by valerybokov
removed unnecessary debug print statements from ReferenceUtil . java to clean up the code and improve readability
refactor field visibility visitor to use the query type name in order to be consistent with the rest of the schema
added parameters for solidityJsonRpcHttpPort and solidityNodeHttpJsonRpcSolidityEnable in CommonParameter . java , and updated
added a type check before removing the drop target from the drag controller to ensure that only valid DropTarget instances are removed from the drag controller
refactor stub jar creation logic into a separate method ` createStubJar ` to improve code readability and maintainability by reducing duplication
added a new feature description for the Setup wizard and Workflow helper in StartPageTopComponent . java to enhance user guidance on setup and workflow
do n ' t schedule meteredflusher until we ' re sure we ' re sure we ' re ready
simplified the null check for the available variable in OnlineTestCase . java to improve code readability and maintainability by removing unnecessary
changed return attribute from NONE to ALL _ USER in LdapUserGraphicalAuthenticationRepository . java to ensure that all users are returned instead of only
refactor the handling of idle timeout and failure callbacks in HttpChannelState . java and add failure listener in HttpChannelTest . java to improve
modified the CreateEndPoint class to extend Invocable . NonBlocking instead of implementing Runnable to simplify the class hierarchy and improve thread safety
updated TABLE _ HEADER _ SEPARATOR regex and modified matcher method in TableBlockParser . java , along with new test cases in TablesTest . java
updated the return value from 32.0 f to 31.5 f to improve camera scaling accuracy
added a preference to enable or disable the starting on boot up in GpsSettingsActivity and updated return statements in Utilities and GeneralLocationListener to
updated the client secret length from 128 to 512 in DefaultOAuth2ClientDetailsEntityService . java to increase the client secret size for improved
update error messages in MySQLStoredProcedureTest and PostgreSQLStoredProcedureTest to include the ' true ' parameter to clarify the requirement for en
added JUnit Ignore annotation to ScheduledMethodMetricsTest to mark the test as ignored due to a race condition
refactor ` getInputPinotFS ` and ` getOutputPinotFS ` methods to use ` PluginManager ` instead of ` PinotFS
added locale check to date formatting in TimeLineCursorAdapter and TimelineArrayAdapter to ensure date formatting is consistent for non - English locales
added MetalLookAndFeel import and set it in UIManager to enhance the visual appearance of the UI components
added synchronization and refactored ping task handling in WebSocket session management to improve thread safety and resource management during message sending
removed the ` getMessage ( ) ` method from the ` error ` variable in ` GlobalErrorHandler . java ` to simplify error handling by directly passing
refactor variable names from ' module ' to ' from ' for consistency across multiple classes to improve code readability and maintainability by using more
added handling for CmdLineException in PinotAdministrator . java to improve error logging for unexpected exceptions
replaced the implementation of ` super . equals ( o ) ` with ` isEqualTo ( o ) ` and added a deprecated ` hashCode (
refactor boolean variables to boolean for clarity and consistency in CustomPlaybackOverlayFragment . java and ImageButton . java to improve code readability
improve performance of zoom control in basicmapviewer .
refactor user management by introducing processUser and processUserGroups variables to improve user handling for process users and groups
replaced AccessController . checkPermission with sm . checkPermission in UnixFileSystemProvider and WindowsFileSystemProvider , and refactored assertCheckPermission method in Check
added support for multiple argument extractors in the DelegatedClientAuthenticationAction class to enhance flexibility in service resolution by allowing multiple argument extractors
changed the defaultGroup variable from non - final to final in NacosServerRegisterRepository . java to ensure that the defaultGroup cannot be
use createtilecaches ( ) and destroytilecaches ( ) instead of destroy ( ) in tilesizechanger .
removed redundant calls to ` InfoLayoutHelper . addInfoRow ( mActivity , mSelectedProgram , mGuideInfoRow , false , false
refactor ` cleanEntriesForFeedsWithoutSubscriptions ` method to use a dedicated ` cleanEntriesForFeedsWithoutSubscriptions ` method to improve
replaced calls to ` CoreAuthenticationTestUtils . getAuthentication ( ) ` with ` auth ` in ` ImmutableAssertionTests . java ` to improve
nifi - 3492 : use temporaryfolder in filebasedclusternodefirewalltest to avoid test failure
fix for conic through 5 point ( conic through 5 point )
refactor EOF handling in RandomAccessReader to use braces for clarity to improve code readability and maintainability
added @ SuppressWarnings ( { " unchecked " , " vararg " } ) annotations in Fields . java and MockitoBeforeTestNGMethod .
refactor CImage class to use helper methods for image array creation and list creation to improve code readability and maintainability by centralizing image
replaced ` WritableByteArrayComparable ` with ` ByteArrayComparable ` in ` MapRDBFilterBuilder . java ` to improve compatibility with
rename ` runtimeVisibleMethodOfFieldAnnotations ` to ` runtimeVisibleFieldOrMethodAnnotations ` across multiple classes to improve clarity and consistency in
replaced manual null checks with ` Objects . equals ` for version comparisons using ` Objects . equals ` to improve code readability and reduce potential
rename the method ` resolveClassFromCanonicalName ` to ` resolveClassFromBinaryName ` and implement it in ` ClasspathSymbolResolver `
added tests for retrieving default Ninja properties in NinjaDefaultTest . java to ensure the correct properties are returned based on the default location
renamed the method ` updateAllAppsWidth ` to ` updateAllAppsContainerWidth ` and updated related calculations to improve clarity and functionality
adjusted padding bottom margin in DetailFragment and adjusted list view position offset in ListFragment to improve layout consistency and ensure correct positioning of list
updated exception handling in ZkStateReader . java to catch InterruptedException instead of Exception to improve error handling clarity and ensure proper interruption
added null checks for field values in HttpFields . java and implemented a test for empty headers in RequestTest . java to ensure proper handling of
server : do n ' t allow to add static nat rule to vr if it be not support in the specified network
added multiple calls to resetHeaderScrollingState ( ) and setFabVisible ( false ) in OCFileListFragment . java to ensure proper
added functionality to remove extra empty screen from the workspace to improve user experience by reducing unnecessary screen space
added a fixedWidth flag and modified glyph adjustment logic in BitmapFont . java to improve text alignment based on the fixed width setting
modified the ` createFragment ` method to remove the ` showTitle ` parameter and refactored the ` createArgs ` method to simplify the
added preEvent , preTransition , and postTransition methods to AbstractStateMachineFactory to enhance state machine functionality by integrating interceptor - based methods
refactor ConfigDescriptionProvider to improve code structure to enhance maintainability and readability of the configuration handling
updated role creation in TestAuthorizationApiAuthorizer and modified HiveConf handling in StorageBasedMetastoreTestBase and TestStorageBasedMetastore
refactor sorting logic in FacetComponent to use a boolean variable for clarity to improve readability and maintainability of the code
refactor CheckstyleReport to use a local variable for overriding properties and update the cache file path to improve code readability and maintainability by
added functionality to stop Jetty instances based on active slices in DeleteInactiveReplicaTest to improve resource management and error handling during test execution
added a filename parameter to the FileActionsDialogFragment ' s newInstance method to allow customization of the dialog ' s title based on the file
updated reorder direction handling by introducing a constant for invalid direction to improve code clarity and maintainability by using a defined constant for invalid direction
api : update path to v2 / accounts / { accountId } / inner - transfer to v1 / accounts / { accountId } / led
fix intermittent failure of sinkstresstestutil . assertjobrunningeventually ( )
added a new annotation ` EnableAdminClient ` to the ` org . noear . solon . admin . client . config ` package to
refactor import statements and implement visitIdentifier methods in FindTypes . java to streamline imports and enhance identifier handling to improve code readability and
added a method to set the action text color to primary dark to enhance the user interface by providing a more visually meaningful action text
added support for ComparableField in Manager and StreamSupplierComponent classes to enhance type safety and error handling for foreign key constraints
renamed methods and variables from ` addTestStepsFor * ` to ` createTestSteps * ` for clarity to improve code readability
updated test method names for clarity and corrected a typo in ` StaticHandlerMethodResolverTests . java ` to improve code readability and
added the ` cancelClient ` method to ` RpcServer ` and modified ` startDriver ` to call it in ` SparkClientImpl ` to
added ` getImplicitPreCoercionValue ` method implementations and tests to various classes to enhance the handling of implicit pre - coercion
initialize lastDisplayedUser with Optional . empty ( ) to ensure lastDisplayedUser has a default value to avoid potential null pointer exceptions
added an implementation of the ` findAll ` method in ` QueryDslMongoRepository ` and a new test method in ` AbstractPersonRepositoryIntegration
added null checks before stopping SchemaRegionConsensusImpl and DataRegionConsensusImpl to prevent potential NullPointerException when stopping the consensus instance
[ hotfix ] [ benchmark ] exit the warm - up loop in case of a failure .
add xread ( count , block , ... ) and xreadgroup ( count , block , ... ) method to redis pipeline interface ( #
removed unnecessary ` this ` keyword and adjusted method calls in ` LinkedBufferInput ` and ` StreamInput ` classes to streamline code and improve
added WebSecurity customizer configuration to CasWebAppSecurityConfiguration and refactored HttpSecurity configuration in CasWebSecurityConfigurerAdapter to improve
added a new test class ` TestJdbcWithDBTokenStoreNoDoAs ` and modified ` TestJdbcWithDBTokenStore ` to include
added a method to register content providers and modified the create method in ContentProviderController to enhance content provider management and ensure proper registration of content providers
updated the ` AttributeReader ` constructor to use ` ClassFile . Version ` instead of ` Version ` to improve type clarity by explicitly indicating the
added a line to set the keep - alive configuration in SingleConnectionManager to enable connection management based on connection keep - alive settings
[ java ] rename supplier for flow control to be more generic .
fix npe in case of 3d locus with no point in 2d
added imports for ConcurrentHashMap and ConcurrentMap , and modified StringBuilder initialization in HttpServerTestBase , and modified WebSocket connection handling in WebSocketConnectionD13
danielwagnerhall : add an option to take screenshot from the selenium - backed selenium instance .
updated assertions in tests from JUnit ' s assertEquals to AssertJ ' s assertThat for improved readability to enhance code clarity
remove trufflelanguage . getcontextreference ( ) since it be deprecate .
modified exception handling in StubberImpl to initialize the Throwable variable to null and added new test classes for handling bad throwable scenarios to improve error handling
updated error handling in Actor and Group classes to use " Actor is not an ascendant " instead of " Child is not a descendant "
added location permission dialogs and modified the ` getCenter ` method in ` LocationPickerActivity ` to enhance user experience by allowing location access to upload
added example and fix for http : / / issues . apache . org / activemq / browse / amq - 2694 -
added cookie specification to the request configuration in GetHTTP . java to enhance security by enforcing standard cookie settings
simplified the collision detection logic in the Intersector class to improve code readability and maintainability by using a dedicated method for collision
replaced DeemphasisFilter with NonClippingGain in P25AudioModule . java to improve audio filtering efficiency by using a
added a monitoringUrl parameter to the ScrollingPanel and SystemInformationsButtonsPanel constructors to enable monitoring functionality in the application
[ hotfix ] [ config ] remove unused config option ' kubernetes . service . create - timeout '
updated icon setting logic in NearbyListFragment to handle different place descriptions to improve user experience by providing appropriate icons based on their descriptions
added null check for type . getPackage ( ) in DefaultPackageScanClassResolver . java to avoid potential NullPointerExceptions during package scanning
added a new file ` PrintInlining . java ` containing a main method that prints " Passed " to facilitate testing
fix ( javadoc ) : fix parsing of nested brace in javadoc tag ( # 4348 )
[ java ] remove unused field in archive test .
updated EdgeDataTable to use getEdgesAndMetaEdges instead of getEdges to enhance data model functionality by including meta edges
removed unused imports from SpringResourceProperties and PasswordManagementConfiguration to clean up the code and improve maintainability
updated logging statements in VideoManager to use float instead of integer for playback speed to improve clarity and consistency in logging output
do n ' t send room remove event if cluster be start
updated the JSON format from ' replicas ' to ' cores ' in AutoScalingHandlerTest . java to ensure accurate representation of the number of cores in
added key properties to enable flipping and mip generation of texture keys to enhance texture rendering capabilities for better user experience
replaced ` PythonDslProjectBuildFileParser ` with ` EventReportingProjectBuildFileParser ` and updated related classes to improve event handling
add librarynormalizationpass to execute normalization
replaced the ` nextResponseBodyConverter ` method with ` responseBodyConverter ` in ` GuavaOptionalConverterFactory ` and ` Java8OptionalConverter
[ hotfix ] [ runtime ] remove redundant check in memorymanager # isfreed
added @ Temporal annotation for TIMESTAMP type in ConsoleSessionVO . java to ensure proper handling of timestamps in database operations
added Hbs and HbsTest classes for managing Handlebars templates in the Jooby framework to facilitate dynamic rendering of
updated chat message visibility handling to check for null or empty hints and refactored the setUpIncomingMessage method to improve code clarity and ensure
fix ( csv ) : use map . values ( ) instead of keyset ( ) in importcsv
add test for confirm ( ) method that wait until alert dialog appear
added a check for the size of distinct column indices in ReduceSinkDeDuplication . java to prevent processing when there are more than two
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5782 :
chore ( deps ) : upgrade gapic - generator - java to 2.7 . 0 and update gax - java to 2.16
updated websocket dependency from " websocket - server " and " websocket - client " to " jetty - websocket - server " and " jetty
changed the return type of identity attributes from a mutable map to an unmodifiable map to enhance immutability and prevent modification of the attributes map
make sure that the header be repaint after a change to the sketch .
use getbytes ( ) instead of new double / float / int / long . valueof ( int ) . valueof ( int )
replaced ` getDate ( colName ) ` with ` getTimestamp ( colName ) ` in the ` JdbcDataSource ` class to ensure the correct timestamp is
added a check for " javax . naming . Context " in addition to the existing context check to ensure compatibility with both " javax . naming .
updated the ` createDefaultDbOptions ` method to return a ` Options ` object based on the database name to enhance flexibility in handling different database
changed the condition from checking for " double " to checking for " mutual " in ImporterGEXF . java to accurately reflect
added FLAG _ SLIPPERY constant to StatusBarTouchController . java to enhance touch responsiveness by allowing slippery
truffleconstantfieldprovider : do not allocate stable dimension for array field .
added methods to get and set the Google Drive folder path in the PreferenceHelper class to enable dynamic configuration of the Google Drive folder path
[ web ] shuffling suggestion popup when the user click on it
added @ Nullable annotation to multiple assertThat methods in Truth . java to improve code clarity by indicating that target parameters can be null
updated bitwise operations for new array elements in ArrayUtil . java to improve clarity and correctness of array manipulation logic
added a new test class ` ApiExceptionTest ` and modified ` ClassInstrumentor ` to check for instrumented constructors to ensure that ` ApiException `
added a synchronized multimap for managing waiting for anticompaction in StreamInManager and StreamInitiateVerbHandler classes to improve thread - safety
added a boolean field ` isKeyguardSecure ` and its getter and setter methods in ` ShadowKeyguardManager ` to support secure keyguard
added serialVersionUID fields to StringDialog class to ensure compatibility during serialization and deserialization processes
modified the parsing of the status string and added a conditional check for the number of override parts in the GrblUtils . java file to
corrected the method name from ` assertEmptyThrowsMutipleFailureExceptionForManyThrowables ` to ` assertEmptyThrowsMultipleFailureExceptionForManyThrow
refactor ` checkDrained ( ) ` logic in ` AsyncFileImpl . java ` and add a new test in ` FileSystemTest
updated LIGHTS _ NUM and LIGHT _ INTESITY values , modified shader creation , and synchronization settings in HybridLightTest .
replaced instances of ` FakeProjectFilesystem ` with ` workspace . getProjectFileSystem ( ) ` in various integration test files to simplify filesystem initialization and
refactor ` loadRerunFile ` method to return ` PathWithLines ` instead of ` String ` to improve type safety and clarity
refactor Gson , JsonArray , and JsonObject classes to improve code organization and readability
removed the @ NotNull annotation from TEST _ DIRS array in PubRoot . java to streamline code by eliminating unnecessary annotations
added a call to Shadow . directlyOn ( realObject , ParcelFileDescriptor . class ) to close the ParcelFileDescriptor instance to
added thread - local implementation for managing prefix indices in BasisLibrary to improve thread safety and maintainability of the prefix index management
added debug logging configuration to TestDistributedStatsComponentCardinality to improve debugging capabilities during test execution
added ` throwIfImmutable ( ) ` method to ` IntList . java ` to enforce immutability of the list operations
added nullability annotations to ` onApplicationEvent ` method and modified URI creation in ` GrpcClientBuilder ` to enhance code robustness and
rename package from org . jline . demo to org . jline . demo . graal and use java . util . function . supplier
invalidate the function array in the insight context if it ' s invalid .
added platform - specific file writing functionality for Windows in GenerateManifestStep . java to ensure proper line endings are used for manifest files on Windows
fix for rfe3531161 : findnulldereference ( ) should never invoke code here
[ core ] fix npe in getconfigdescription ( ) method ( # 11936 )
do n ' t wrap cancellation exception in masterjobcontext # createcancellationexception
pdfbox - 4892 : init stream when need , a suggest by valerybokov
refactor ManagerBase class to improve code organization to enhance maintainability and readability of the code
added a new debug flag ENABLE _ ALL _ APPS _ IN _ TASKBAR to FeatureFlags . java to facilitate access
refactor FragmentActivity initialization to use Robolectric for activity lifecycle management to improve test reliability by utilizing Robolectric for
renamed the method ` getFileCoordinates ` to ` processFileCoordinates ` and introduced a new method ` getDecimalCoords ` to improve clarity
rename ` ABCase1 _ 1 ` , ` ABCase2 ` , ` ABCase3 ` , and ` ABCase7 _ 3
renamed parameter ` num ` to ` value ` in ` saveEnergyPriceHistoryDone ` method and added a null check for the black
refactor the handler setup in OpenRocketViewer . java to use a variable for the handler to improve code readability and maintainability by
add a new file ` ChangeDependencyGroupIdAndArtifactId . java ` to implement a recipe for changing Maven dependency groupId and artifactId to enhance the
refactor path handling in IndexingJob and add a validation check in SegmentChecker to improve code clarity and ensure only valid segment paths are
updated comparison from ` lt ` to ` lte ` in ` GCObjectHeapIteratorAddressOrderedList _ V1 . java ` to ensure
refactor PreprocessorDelegate to use Supplier for managing replacement paths and source path mappings to improve performance and readability by utilizing memoization for
rename ` JsonExamples ` class to ` Examples ` and update package - info file to improve clarity and consistency in naming conventions
added debug logging statements in ViewExtractor . java for extraction and output stream operations to improve traceability and debugging during the extraction process
refactor FindsByLinkText class for improved clarity to enhance maintainability and readability of the code
added a new file ` Main . java ` that contains a Java entry point implementation to facilitate the execution of the Java oop
add some synchronization around the creation of the cseq header .
removed duplicate continue statements in NativeScanner . java to improve code readability and maintainability
changed the package of RendererConfigurationTest from ` net . pms . test ` to ` net . pms . configuration ` and updated imports
refactor dependency resolution and exported dependency handling in AndroidLibraryDescription . java to use memoization for improved performance and readability to enhance performance
replaced ` stream ( ) . count ( ) ` with ` size ( ) ` in ` DistBuildArtifactCacheImpl . java ` to
added content encoding handling using ContentStreamBase in ExtractingDocumentLoader to ensure proper metadata is included for content type
fix findbugs sql _ prepared _ statement _ generated _ from _ nonconstant _ string warning in databaseconfig . java
added a null check for the slot variable in the WindowListener class to prevent potential null pointer exceptions when the slot is invalid
add a cli option to force maven to ignore all transitive dependency .
removed duplicate injection of BackgroundJobManager in ContactsPreferenceActivity to streamline code by eliminating redundancy
updated ColorsActivity to extend AppCompatActivity instead of Activity to align with modern Android features and improve compatibility
added null check before closing selection in NIOTransport . java to avoid potential NullPointerException when selection is null
added a condition to break the loop if the matcher ' s start and end are the same and the current index equals the string length to ensure
added server . port = 0 to the @ integrationtest annotation so it do n ' t interfere with other test
added a new User Defined Function ( UDF ) named " reverse " to the Hive framework and implemented its functionality to enable the reversal of
replaced ` getContextPathEncoded ( ) ` with ` getRequestContextPath ( ) ` in multiple files to streamline context path retrieval and improve code cl
refactor Tracer class implementation to improve code readability and maintainability
[ hotfix ] ignore flaky test in rocksdbstatebackendreaderkeyedstateitcase
consolidated multiple import statements into a wildcard import and simplified import statements in XMLChangeLogParserTest . java to improve code readability and
added synchronization and cleared the buffer in StarTreeRecordStoreCircularBufferImpl . java , and implemented a test for the clear method in Test
updated forecast time values from 0 to 60 , 24 , and 8 in OpenWeatherMapOneCallHandler . java to adjust the time range
add timeout to getlastfetchtime ( ) and getlastfetchrequesttime ( ) in abstractpagerequesttemplatetest
added animation and suggestion mode functionality to FloatingHeaderView . java and RemoteTargetGluer . java to enhance user experience with smoother
updated method names and return types in CucumberPropertiesParser and modified tests in CucumberPropertiesParserTest to improve clarity and functionality
add a few more item to the creative tab to make it easy to edit .
updated assertions in TestRadioButtons to use the correct expected sizes to improve readability and maintainability of the test assertions
added support for handling file sizes in RCFileCat . java and introduced a method to retrieve the number of rows in RCFile . java to
refactor multiple Java classes to improve code organization and consistency to enhance maintainability and readability of the codebase
[ fix ] add miss ndarray check to jnautils
[ hotfix ] fix checkstyle violation in blobserver
fixed bug 1371756 - unusedprivatemethod no long report false positive on anonymous inner class .
renamed variable ` lexicalScope ` to ` lexScope ` for consistency to improve code clarity by using a more descriptive variable name
added integration test for sftp auto - startup in inbound adapter
added methods to retrieve level , root , and boundables in Node , Quadtree , AbstractNode , STRtree , and SpatialIndexTester
updated version parsing logic to handle both major and minor version numbers correctly to ensure compatibility with version strings that include a minor version number
added a check for non - empty tags before adding them to the active item to avoid adding empty tags and improve logging clarity
added a new method ` parseDateTimeStringToEpochMillis ` to ` DateTimePatternHandler ` and ` fromDateTime ` in ` DateTimeFunctions ` to
refactor disassemble methods in CustomType and add null checks in StringWrapperUserType to improve code clarity and ensure proper handling of null
refactor Log4j2ConfiguratorServlet for improved logging configuration to enhance readability and maintainability of the code
simplified exception creation by returning new instances of HiveException and AuthorizationException to improve code readability and maintainability by eliminating unnecessary
updated the way the ` CC ` key is stored in ` CGoCompileStep . java ` and added a new test for C++ pre
fix ( kubernetes - client - api ) : add miss @ buildable annotation
added an @ Override annotation in the Only class to ensure proper method overriding and improve code clarity
added a timeout constant for 3 hours in HttpClientFactory to improve connection stability by allowing for longer timeout duration
added new pipeline names and updated event scope in PerBuildStateFactoryWithConfigurableAttributes and RawTargetNodeToTargetNodeParsePipeline to enhance cl
simonstewart : add support for enabling all but trace
removed the @ Singleton annotation from ApplicationController . java to allow the ApplicationController to be instantiated without requiring a singleton instance
updated username retrieval logic in ShareActivity to use OwnCloudAccount to enhance user identification based on the display name if available
added BatchStatus import and implemented a test for resuming a paused job to ensure proper job execution behavior when a paused instance is resumed
added null check for cacheConfig before constructing the value in HttpSyncDataService . java to avoid potential NullPointerException when cacheConfig is null
simonstewart : make the class public so that it can be use by other class .
use getqualifiednameasstring ( ) and getqualifiednameasstring ( ) instead of getqualifiedname ( ) . getname ( )
pdfbox - 4892 : use nonsequentialpdfparser instead of pdfparser , a suggest by valerybokov
mahout - 1342 fix the error in testdistributedlanczossolversolvercli . java
refactor HttpServerTestBase class to improve test structure to enhance maintainability and readability of the test code
updated assertions in PortletApplicationMapTest to use keySet ( ) instead of entrySet ( ) for better clarity and efficiency to improve test reliability
added tests to verify behavior of ` NestedBeanIgnoreNulls ` in ` BeanTableSchema ` to ensure that ` NestedBeanIgnoreNulls ` is
add spring starter spring configuration customization for spring module
fix bug in indicator . todouble ( ) and add unit test
added new methods ` execInContainerWithUser ` and ` execInContainerWithCharset ` to ` ContainerState ` and ` ExecInContainer
update interestedInByteMessages and interestedInTextMessages assignment logic in NettyWebSocket . java to improve clarity and correctness in handling WebSocket
add a few more test case to show the problem
added a broadcast intent to clear the pull - back button in the HomeFragment to enhance user experience by allowing users to easily clear the pull -
removed conditional logic for setting the scroller and overScroller in TouchImageView . java to simplify the code for better readability and maintain
flush profile validation chain after test
camel - 15836 : camel - core - optimize start / stop method to reduce object allocation .
added FloatingActionButton functionality to manage a FAB menu in ShareActivity to enhance user experience by allowing users to open and close the F
added support for inline date formatting in ToDateTokenizer and updated related tests to enhance date parsing functionality and improve error handling
updated TestAnonymousClassUnloading . java file to improve test coverage for anonymous class unloading
8305193 : [ macosx ] fix wrong u60 l10n resource file translation
updated server check logic in AuthenticatorActivity . java to ensure server state is checked before binding the OperationsService to improve user experience by preventing unnecessary
updated Position constructor calls to use getBeginLine ( ) and getEndLine ( ) instead of getBeginColumn ( ) and getEndColumn ( ) to ensure
added waitFor ( ) method to ManagedThread and modified processor calls in CxxPreprocessAndCompileStep . java to ensure proper thread termination and
added a new boolean field ` requireAllRepositorySources ` to ` PrincipalAttributesProperties ` and implemented merging logic in ` CoreAuthenticationUtils ` to
do n ' t check if map have be load before check if it have be load .
add an option to enable or disable ssl protocol for the netty web server .
replaced AtomicBoolean with AtomicReference and introduced a Wrapper class for better management of the set to improve performance and maintainability by using a more
updated the method to return a key based on the presence of a property to ensure that the method returns an empty string when the property is null
updated assertions in RoundRectBorderTest to check for specific round rect borders to ensure that the round rect borders are only equal with the current style
added a check for non - empty genesis configuration before creating a cluster and refactored test parameters to use bftType as a parameter to
simonstewart : remove test that do n ' t pass
updated CountDownLatch and List initialization to use ' min ' instead of ' cnt ' and added a length check for ' sign ' to ensure
changed the condition from " windows " to " not windows " in ProcessInformationsPanel . java to correct the logic for handling non - Windows
refactored methods in MoreCollectors to use empty ( ) and greatest ( ) instead of maxN ( ) and minN (
added null checks and improved WebSocket client handling in BitmexStreamingMarketDataService and BitmexStreamingExchange to enhance robustness
added validation for latitude and longitude in GeoPointField class to ensure that invalid latitude and longitude values are handled correctly to prevent runtime errors
updated method names and logic in OozieProxyImpersonator and WorkflowFilesService for clarity and consistency to improve code readability and
refactor ResponderId class for improved clarity to enhance maintainability and readability of the code
updated ` getTableDocument ` method to include a ` withDependents ` parameter for conditional addition of dependent tables to enhance flexibility in handling table
added logic to count consecutive uploads without coordinates and display an alert dialog if they exceed a defined limit to improve user experience by preventing accidental
added caching mechanism for query profile data to improve performance by reducing redundant serialization of query profiles
refactor JpaMetamodelEntityInformation to enhance property value handling and improve ID property extraction to enhance code clarity and ensure correct property value
added methods to retrieve last table and index timestamps for views and indexes in UpgradeUtil and related classes to ensure accurate timestamp retrieval for index and table
add ` ` registerdefaultexceptionmappers ' ' property to abstractserverfactory ( default value be true ) .
do n ' t store meta data in entry editor if it ' s not in use
modified the nativeCreateNSWindow method to include an owner pointer parameter to enhance window pointer management by associating it with the owner
updated SQL statement in FileContentProvider to use FILE _ TABLE _ NAME instead of FILE _ REMOTE _ ID to ensure compatibility with the database schema
add ` ` stuck ' ' to the list of skeletons that wo n ' t be use anymore .
fixed - rasyncservice . readasync ( ) and rasyncservice . writeasync ( ) method do n ' t use the correct codec
add findunrelatedtypesingenericcontainer to detect unrelated type in generic container .
refactor ` LauncherBackAnimationController ` to utilize ` BackProgressAnimator ` for back animation handling to improve animation responsiveness and
modified the visibility of ` _ initialPageNo ` from ` final ` to non - final and added logic to initialize ` _ contentLimits `
fix crc calculation in jedisclusterCRC16 and increase total operation in crc16benchmark
added support for parsing SQL comments in the FormattedSqlChangeLogParser to enhance change log parsing functionality to support comments in change sets
refactor JarArchiver initialization in MavenArchiver and AbstractJarMojo to improve flexibility by allowing the JarArchiver instance to be
replace HumanReadableException with BuckUncheckedExecutionException in DefaultClassUsageFileReader . java to improve error handling for class usage file loading
refactor aggregation condition checks in TSServiceImpl . java and add multiAggregationTest method in DaemonTest . java to improve code readability and
added validation checks for format and type in GwtGL20 . java and implemented reading pixel data using ByteBuffer to ensure compatibility with GWT backend and
updated method names and added a new test method for debug information in OutputMemoryTest and VarDump classes to improve clarity and functionality of memory
added error handling for Java compilation issues in InlineBytecodeGenerator to provide clearer feedback on potential issues with javac - compiled classes during mock
[ gr - 10705 ] add class initialization trace to the instrumentation agent .
fix the issue that querytimeout do n ' t take effect
use caffeine instead of google common cache for the topic route service
mbtilesfile : set sqliteconfig . synchronous = off for read - only datasource
updated the regex pattern for invalid source and target release in FindBuildToolFailures . java and added a fatal error compilation in FailureLogAnalyzerTest
updated URI construction and added location intent check in DetailFragment . java to ensure location is available and provide a default URI if not available
added a null check for inherited parameter contexts in StandardParameterContextDAO . java to avoid potential NullPointerException when accessing referencedIds
refactor ClassLoader methods for improved readability to enhance maintainability and clarity of the code
added a method to set the origin response headers in ProxyRequestHelper and a corresponding test in ProxyRequestHelperTests to ensure that the origin response
added a new ProfileSettingDrawerItem instance in GpsMainActivity . java to enhance user experience by integrating profile setting functionality
add a new servletcontext attribute ` ` org . apache . jasper . xml _ validation ' ' to control xml validation .
simonstewart : fix a bug in the firefox driver that do n ' t work correctly on the firefox driver .
added maxRows support and adjusted fetch size logic in IoTDBStatement . java to ensure that the fetch size does not exceed the maximum number of
refactor the method name from ` isCountOptimizable ` to ` allActionsAreOptimizableFilters ` and update its logic to improve cl
added node and mouse event handlers for node and mouse selection in StandardVizEventManager . java to enhance visualization event handling for better user interaction
replaced direct memory setting with a dedicated zeroBuffer method to improve code readability and maintainability by reducing duplication
[ fix ] terminalnode memory now store xorgroup in a field .
removed the getHeight ( ) and getWidth ( ) methods from LCDUIImageMonochromeBitmapSource . java to streamline code by elim
refactor SourcePathResolver to use a private method for path resolution and add a method to retrieve all absolute paths to improve code clarity and
fix # 263 - fix xmlparser wrongly parse identifier ( # 2634 )
modified the ` changeSchemeIfIsWebSocketUpgrade ` method to be static and updated the URI building logic to handle encoded URLs correctly to improve the
rename test suite to reflect the new naming convention
refactor CxxPlatform retrieval logic in HaskellBinaryDescription . java to improve clarity and maintainability of platform handling logic
added imports for ` IndexReader ` , ` Field ` , ` IndexWriter ` , and ` Similarity ` in multiple Java files to enable
updated ` ConcurrentLinkedStack ` to return an element from ` current . get ( ) ` and added new test methods in ` ConcurrentLinkedStack
added ismatched ( ) and setmatched ( ) methods to BinaryHeapQueueTest and BaseQueueable classes to provide a consistent way to check
added a null check for mDirectories before initializing mDirs to avoid potential NullPointerException when mDirectories is null
added a condition to check if overview state is not enabled and first layout is not completed in RecentsView . java to ensure proper handling
added multiple package - info . java files for new Lucene packages to provide package - level documentation for various Lucene components
added a line to set the text of the visibleAutoLeveler field to a localized string to enhance user experience by providing context - sensitive information
added postOptimizeCallbacks functionality to UpdateHandler and DirectUpdateHandler2 classes to enable the optimization of event listeners based on configuration
updated Inflater initialization to use a boolean parameter and modified compression logic to explicitly set a dummy byte to zero to ensure proper handling of compressed
added a check for user data in Shaderc . java to ensure proper handling of user data validation
hbase - 25819 retryingmetastoreclient should not retry for local metastore ( siddharth seth ,
do n ' t log stacktraces when hoststatus be null
refactor methods in Subject . java for improved clarity to enhance code maintainability and readability
added referencetype . weak and referencetype . strONG to abstractserializationservice . typeMap
updated color distance calculation to use absolute values and added unit tests for the findSimilarColor method to improve color distance accuracy and ensure correct functionality through
chore ( regen ) : update license year for generated file ( # 52 )
alexeibarantsev : fixing findelementsbyid to return an empty list instead of throw an exception
added a flags parameter to the registerReceiver methods across multiple classes to allow for more control over receiver registration behavior
update the ffmpeg test to use mockito 2.7 . 0
added handling for previous input streams in OggInputStream and modified buffer initialization in OpenALMusic to improve resource management and prevent memory leaks
replaced a hardcoded failure message with a constant response _ WAS _ NULL to improve code readability and maintainability by centralizing the
[ te ] delete anomaly when there be no warning and no failure
refactor Toast usage in BaseActivity and DetailActivity to use a new showToast method to improve code readability and maintainability by
updated the method used in Request creation in TracingFeignClient to use httpMethod ( ) and requestTemplate ( ) to improve clarity and functionality
added validation for LDAP names and updated referral handling in LDAPCertStore . java to improve error handling and ensure valid LDAP names are processed correctly
refactored retain logic into a separate method called ` retain ` in ` GatewayRSocket . java ` to improve code readability and maintain
renamed ` AdapterViewTest ` to ` ListViewTest ` and added a new test method ` performItemClick _ ShouldFireOnItem
[ hotfix ] [ test ] replace @ before and @ afterclass with @ classrule in checkpointfailuremanageritcase
refactor : remove duplicate itemuiprovider ( # 4566 )
add the ability to set and get the select object from the selection box
added JUnit ' s @ Isolated annotation to MetaInfConfigurationTest . java to ensure the FileSystemPool is accessible to other tests
added a line to set the server connector host to the HTTP server ' s bind address to ensure the server connector connects to the correct HTTP server
updated token validity settings for client registration based on heart mode and grant types to ensure proper handling of access , ID , and refresh tokens based
added a CloverInstrumentationFilter to exclude classes starting with " __ CLR " and modified conditional logic for setting AtomicLong in SplitLog
added support for the Smartmi Evaporative Humidifier in MiIoDevices . java and modified ReadmeHelper . java
use calculationcontext instead of blockstate to avoid break
changed the visibility of the setScrollRangeDelta method from package - private to public to allow access to the method from other classes
added error logging for empty repository list in ClusterStackVersionResourceProvider and HostStackVersionResourceProvider to ensure that Ambari may not be
updated the return statement in IntHashSet to use logical OR instead of logical AND to simplify the logic for determining missing values
added Serializable annotation to RuleAdministrator class to ensure proper serialization of the RuleAdministrator object
refactor CrossOriginFilter to use Set instead of ArrayList for allowedOrigins and allowedTimingOrigins to improve performance and flexibility by allowing
updated G3D test files to include " g3d / knight . g3dj " and removed " g3d / cube
added error logging for invalid solidified position in Manager . java to improve debugging and error handling for invalid solidified position values
hbase - 25879 fix npe in execresult when the result be null ( chunhui )
added a method to check access permissions and improved error handling for unauthorized users to enhance security by ensuring responses are only sent if they are
replaced the writeTo method with a getStubClassBytes method in ClassMirror . java and refactored StubJar . java to utilize
added functionality to display an internal link text in the FileDetailSharingFragment to improve user experience by providing clearer context for shared files
updated string formatting in PredictionTest to use Locale . ENGLISH to ensure consistent formatting across different locales
fix ( modelzootest ) : fix date comparison in modelzootest
added IME hiding functionality to AllAppsContainerView and logged keyboard close events in LauncherAllAppsContainerView to improve user experience by
added configuration of in - memory event storage engine in test
modified BsdFileStore . java to use BsdNativeDispatcher . getmntonname for retrieving the mount name instead of accessing the parent
add test case for issue 1599 resolving anonymous class and method within them do n ' t work
added a new command ` spawn ` to accept coordinates and coordinates in the ` spawn ` command to enhance the functionality of the ` spawn ` command
added MIN _ CONTENT _ DIMEN constant and refactored methods to use getContentAreaWidth ( ) instead of getDesiredWidth (
make hotspotcryptosubstitutiontest and graalcompilertest more final .
replaced ` newDirectory ( ) ` with ` newMockDirectory ( ) ` in ` TestIndexWriter . java ` to ensure compatibility with
added plugin check class names to the failed checks list in UpgradeCheckRegistry and modified the order of parameters in the addColumnsToUpgradeTable method
refactor Environment class to improve code structure to enhance maintainability and readability of the code
added import for LuceneTestCase and annotated RecoveryAfterSoftCommitTest with BadApple to address a known bug related to SOLR -
updated the file path handling logic in CodenameOneImplementation . java and removed a warning in HashtableContent . java to improve clarity and
rename FLAG _ IGNORE _ HDMV _ DTS _ STREAM to FLAG _ ENABLE _ HDMV _ DTS _ AUDI
updated import statements and modified resource accessor initialization in LiquibaseEntityResolver . java and XMLChangeLogSAXParser . java to stream
added import of Security and set TLS disabled algorithms to an empty string in ComHostnameVerifier and JavaxHostnameVerifier classes to disable TLS algorithms
updated CxxDeps . EMPTY to use Immutable with builder , copy , and singleton options to ensure immutability of CxxDeps and improve
renamed ` expectedDirectory ` and ` actualDirectory ` to ` expectedStubDirectory ` and ` actualFullDirectory ` , respectively , and updated
removed the ` @ DoNotSub ` annotation from the ` resizeThreshold ` variable in ` Int2ObjectHashMap . java ` to correct the
updated folder name hint logic to check for non - empty title before setting it to improve user experience by providing clearer feedback when the title is
updated client loading method to include " uaa " as a parameter in UaaResetPasswordServiceTests to ensure the correct client context is used
changed method visibility from public to private for ` isEmptyOrWhitespace ` and ` isSpecialCaseOrUnknown ` in ` ShadowSQLiteDatabase . java
updated string representation in AtomicCounter , AtomicLongPosition , and UnsafeBufferPosition to account for closed state to ensure accurate logging of values when the
refactor MimetypeIconUtil class to improve code organization to enhance maintainability and readability of the code
rename method ` supportsViewFor ` to ` supportsViewsFor ` across multiple view provider classes to improve clarity and consistency in naming conventions
added a new test method ` negateInstanceOf ` to ` UnnecessaryParenthesesTest . java ` and updated the ` UnwrapParenthes
added a ` built ` flag and a ` teleport ` method to the ` Location ` class , and modified the way the ` Location ` object
replaced Base64 encoding with Base64Utils . encodeToUrlSafeString for modulus and exponent in TokenKeyEndpoint . java and updated tests
updated imports and modified statistics reporting method in TranslatorManagerHelper . java to improve code organization and enhance statistics reporting functionality
renamed the annotation from ` ContainerAnnotation ` to ` ContainedBy ` to clarify the purpose of the annotation
added a null check for the result in the getId ( ) method to ensure that the getId ( ) method returns a non - null value to
modified the ` setUpRevampedTweet ` method to include a ` muffled ` parameter and updated related logic to enhance visibility handling
added conditional logic to display verified text based on theme settings to enhance user experience by allowing dynamic theme management based on user settings
changed the visibility of the ` timeDiffFromServer ` variable and refactored the constructor and return logic in ` AbucoinsDigest `
camel - 14284 : camel - mongodb - add autowired option to camel - mongo to allow to turn off autowired connection
added a sourceIndex parameter to the AttributeMapping constructor and updated related classes to support retrieval of the source index to enhance attribute mapping functionality by allowing
improve error log for partition alteration due to corrupt column statistic
added a call to UserGroupInformation . isSecurityEnabled ( ) in AuthParams . java to enable security checks based on user context
refactor ConnectivityReceiver , TerminalKeyListener , AbsTransport , and EastAsianWidth classes to improve code organization and maintainability
escape email in the contact list in geoserverhomepage so that it do n ' t escape html
move reflections . cache into modulemanagerimpl to avoid load it twice .
[ mahout - 535 ] fix join modeller to use the number of feature in the output
avoid stringindexoutofboundsexception if the input string be empty
[ hotfix ] [ kafka ] avoid string allocation in singlenodekafkas resume strategy
replaced instances of ` ACTION _ SET _ PLAYBACK _ SPEED ` with ` PlaybackStateCompat . ACTION _ SET _
updated IgnitionConfigurationHandler , MotorMountHandler , FlightConfigurationID , IgnitionEvent , and IgnitionMount
tika - 2696 -- make ascii and unicode char length in msownerfileparser a valid length .
added an @ Ignore annotation to JdbcFrontJdbcBackLinqMiddleTest . java to mark the test as ignored due to non - deterministic
refactor lockFile creation into a separate method ` createLockFile ( ) ` in ` MavenDependencyResolver ` and override it in ` Maven
updated preference keys from " version _ 5 _ 3 " to " version _ 5 _ 3 _ 1 " and added new sync interval settings to
added a check for the FEDERATION _ USER in AuthenticationManager to return null if the username equals the FEDERATION _ USER
[ gr - 16905 ] fix executemethodnode . isassignablefrom to not cast to truffleobject .
replaced the use of ` collect ( Collectors . toList ( ) ) ` with ` filter ( ) . toList ( ) ` in ` J
do n ' t run logbackvalve if the filter chain be expire
refactor Collection and Map classes to improve code organization to enhance maintainability and readability of the codebase
added import statement for org . apache . lucene . util . Version in CreateIndexTask . java to utilize Lucene ' s version
added validation for backing index and schema in MissingPrimaryKeyChangeGenerator . java to ensure proper handling of database - specific index configurations in the comparison process
added handling for ` MetastoreException ` in ` execute ` and ` repair ` methods , and updated exception handling in ` MsckOperation
[ hotfix ] [ kafka ] retry all committable when recover
[ issue # 5011 ] fix the issue of remove receipt handle when forward message to dlq ( # 5012 )
added a ` withServices ` method to ` DockerComposeContainer ` and modified the ` runWithCompose ` method to accept a list of services
fix : use copy set in export , structcontextdecorator and export
removed HTML cleaning functionality and simplified return statement in FeedParser . java to simplify the code and improve readability by eliminating unnecessary complexity
removed the conditional check for ` DISABLE _ ALL _ APPS ` in ` Launcher . java ` and modified the way the ` Cell
changed return type of several energy sum variables and methods from int to double in MeterRealtimeBodyDataDTO . java to allow for more precise
added a new file ` bug4150029 . java ` implementing a ` JApplet ` with a file chooser to create temporary directories
added methods to manage and close the Spark client and configuration in HiveConf , SparkClient , SparkTask , and SparkSessionImpl classes to improve
added a long press indicator method to AppIcon and AppIconMenuItem classes and modified Launchable and Workspace classes to utilize this method to provide
added handling for empty polygon in WKBWriter and updated test methods accordingly to improve robustness of the writing of empty polygons and enhance test coverage
refactor UnflavoredBuildTarget creation to use builder pattern and interner to improve code clarity and ensure immutability of the
added a new class MultiplyByMaxInt with a method to multiply an integer by the maximum value of an integer multiple times to facil
updated OCFileListFragment . java to enable drawer indicator based on the current file state to improve user experience by enabling the navigation drawer indicator
updated package structure and imports in TestRAMDirectory . java to improve organization and clarity of the codebase
replaced ` FixedBitSet ` with ` BitSet ` in ` Automaton . java ` and ` Operations . java ` to simplify code
( chore ) camel - dmn : improve error message when an expression be not define on a node
replaced ` @ ContainedBy ` annotations with ` @ Repeatable ` annotations in ` CombinationsTargetTest1 . java ` and
updated console message to include the duration of the file sent to enhance clarity by providing more context about the file sending duration
updated the method of obtaining the base class name in OpenMBeanAttributeInfoSupport . java to ensure proper package access validation for class loading
fix readresponseresolver to take replication factor into account .
updated the calculation of freeSize by incorporating a roundTo16 function to ensure accurate adjustment of freeSize based on the current size
update touch event handling in ` AnyKeyboardView ` , ` AnyKeyboardViewBase ` , and ` AnyKeyboardViewTest ` to improve touch
replaced ` SslContextFactory ` with ` SslContextFactory . Server ` in multiple files to enhance type specificity for SSL context creation
removed the ` PrivilegedSocket ` class and simplified the instantiation of a ` Socket ` in ` PG _ Stream . java ` to simplify the code
refactor InputTest class for improved readability to enhance maintainability and clarity of test cases
added a method to pause blurs on the QuickstepLauncher and modified finishRecentsAnimationOnTasksAppeared to accept a Runnable parameter
removed unused imports and added null check for current location marker and polygon in NearbyMapFragment . java to improve code clarity and prevent
updated the method to retrieve a client using ` clientDetailsService ` instead of a single ` client ` to ensure the correct client ID is used
updated SQL query format from ` @ BeforeAll ` to ` @ BeforeEach ` and modified the test setup method to improve test reliability by
resolve http : / / issues . apache . org / activemq / browse / amq - 2692 - wait for consumer to
added unit tests for handling UnknownKeyException in SlidingGanttCategoryDataset to ensure proper exception handling for unknown keys in task series data
refactor filterConditions initialization to handle empty list case and add return statements in ZookeeperSyncDataService to improve code robustness by avoiding
lightcontrol now properly clone lightcontrol . controldir and lightcontrol . spatialtolight .
updated the logic for hiding stack traces and improved exception handling in StdErrLog . java to enhance code clarity and maintainability while
updated HttpSessionEventPublisher to utilize a method for context management and added null checks to ensure that the application context is not null before publishing events
added a semantic check for CREATE CQ statement version in ASTVisitor . java to ensure compatibility with the latest version of the CQ syntax
[ hotfix ] [ doc ] fix typo in flinkiotdbsink
add customsimplificationconsiderednodes counter to simplify custom simplification
updated fileIcon setting to include a context parameter to ensure proper context is used for file type icon retrieval
updated the method to retrieve the index or constraint name using the schema ' s name to ensure accurate parsing of identifiers with the specified schema
make bigqueryio . read ( ) return utc for timestamp field ( # 25827 )
added ` findViewWithTag ` method implementations in ` ShadowView ` and ` ShadowViewGroup ` classes to provide functionality for finding views with specific
updated enumeration type parameters to use generics in multiple Java files to improve type safety and eliminate unchecked cast warnings
removed unused import of PColumnFamily from IndexTool and MetaDataClient to clean up the code and improve maintainability
added JSON _ VALUE and JSON _ CREATOR constants to DocAnnotationConstants and modified enum value retrieval logic in SpringBootDocBuildTemplate to enhance
svm : do n ' t try to load jar file if it be not a jar file
updated CUDA _ C _ 16F , CUDA _ C _ 32F , CUDA _ C _ 8I , and CUDA
refactor ResourceLoader to use FileFilter for resource directory filtering to improve resource loading flexibility by allowing multiple resource directories
fix redstone torch getattachedface ( ) to work with simpleattachablematerialdata .
[ calcite - 5852 ] support VARBINARY data type in reltostageconverter
removed unused import of DateHelper from NoteAdapter . java to clean up the code and improve maintainability
updated backup success messages and error handling in Backup . java and Captions . java to improve clarity and error handling during backup operations
mow - 1343 fix for mow - 1343 : use relative position instead of absolute
simplified the creation of a temporary pipe file in ShadowParcelFileDescriptor . java to improve file handling by removing unnecessary file deletion checks
int - 1188 remove unnecessary call to offer in stackbasedsecuritycontextholderstrategy .
updated the rule from " optimizations " to " controversial " in BooleanInversionTest . java to align the test with the
canonicalization of ( x ^ y ) = = ( x ^ y ) to y = = 0
added a static final Type STRING _ ARRAY to the TypeFactory class to facilitate type handling for String arrays in the application
refactor IME hiding logic into a separate method and log the AllApps keyboard event to improve code readability and maintainability by central
add blockstatecontainer . setbits ( ) patch to fix network issue , resize below if need .
updated assertions in ` TimelineMetricCacheSizingTest . java ` to include expected values in error messages to improve clarity of error messages
add optimization to getglmaximumtexturesize ( ) to improve performance .
[ java ] stop log recording when prepare for election .
added a condition to reset startPosn based on whether the transformation is in progress to ensure accurate position tracking during semantic analysis
replace the method ` StarTreeUtils . isStarTreeDisabled ` with ` _ queryContext . isSkipStarTree ( ) ` to
refactor NearbyActivity to introduce a lockNearbyView flag and adjust progress bar visibility based on its value to improve performance by
add maptransformer factory method to make it easy to use
refactor EmeddedObjects and EmbeddedObjects classes to improve code organization to enhance maintainability and readability of the code
added support for loading launcher widget span information in LauncherPreviewRenderer and PreviewSurfaceRenderer to enhance widget information retrieval for better user experience
updated the ` StageSelector ` and ` StageAction ` classes to use ` EventObject ` instead of ` ChangeListener ` to utilize the
added methods to get and set calling process ID and UID in ShadowBinder and ShadowBinderTest classes to enhance functionality for managing calling process IDs and
replaced the ` @ AutoValue ` annotation with a custom ` @ Nullable ` annotation and refactored the ` ExpectationFailure ` class
removed a warning log statement for message deserialization in BitcoinSerializer . java to streamline logging by eliminating unnecessary warnings
simplified variable initialization for target dimensions and added conditional calculations for new dimensions to improve clarity and ensure correct scaling behavior when target dimensions are
added new HTML character handling for carriage return and newline characters in CoreMarkdownNodeRenderer . java and updated MarkdownWriter . java to ensure proper
refactor SharePasswordDialogFragment to use a dedicated method for setting password to improve code readability and maintainability by reducing duplication
refactor mapping methods to use reflection for file channel methods to improve flexibility and maintainability when accessing file channel methods
replaced public access modifier with package - private for several methods and variables in AbstractAssert _ describedAs _ printed _ to _ console _ Test
added new slider option constants and updated options in LlapOptionsProcessor . java to support slider keytab configuration to enhance the configuration options for slider
updated tearOutGraphViewContainer method to accept a JFrame parameter and added animation control to enable the tear - out of the graph
added functionality to manage and execute runnable bindings after loading the workspace to ensure shortcuts are only added once and improve error handling during workspace loading
refactor ` NodeManageMemoryMergeOperator ` , ` NodePathsConvertOperator ` , ` NodePathsCountOperator ` , and ` NodePaths
updated method signatures and class names in ` IssueInterface ` , ` ValidationReport ` , and ` ObjectNode ` classes to improve clarity and
added a method ` safeProviderName ` to safely retrieve the cipher provider name to improve error handling and logging for cipher provider retrieval issues
updated references from ` dynamicConfiguration ` to ` flinkConfiguration ` across multiple files to ensure consistency and clarity in configuration management related to the
change log level from WARNING to OFF in CCJSqlParserUtil . java to reduce log verbosity and improve performance
removed unnecessary indentation condition in AggregateLifeCycle . java to streamline output formatting for better readability
changed BITMAP _ HEIGHT and BITMAP _ WIDTH from private to public in DefaultMapScaleBar . java to allow access to BITMAP
removed the @ Ignore annotation from CovariantOverrideTest . java to temporarily disable the test due to known issues with the covariant implementation
refactored the ` curly ` method and related logic in ` mmm Pattern . java ` and ` ppp Pattern . java ` to
camel - 16400 : camel - core - make it easy to reload route from the model via jmx .
added space minimum and maximum settings for the X - axis in ScatterChart to enhance the visual representation of the X - axis
standardized spacing in the " as INTERVAL " statement to improve code readability and maintain consistency
added ` shouldPreserveDataStateOnReapply ` method to ` SplitScreenSelectState ` , ` BaseState ` , and ` State
added a check for the presence of the UTF8 key in the properties file to ensure that a valid UTF8 key is present in the system
added seed decoration and modified system output in LuceneTestCase to improve test reliability and clarity in error reporting
added a new event type for long - pressing an AllApps item in StatsLogManager and integrated it in ItemLongClickListener to track user
added null check for the log variable in StoreWAL . java and created a new test class Issue112Test . java with a double commit
added a condition to check if the ` showSectorLandInfo ` variable is true and defined a new boolean in ` SectorPreset `
[ hotfix ] fix raw and unchecked lint warning in type inference
refactor Enum class to improve code readability to enhance maintainability and facilitate future feature additions
improve error message if nearbyselectorconfig have no nearbyrandom ( randomselection = false )
improve temporary cache performance by remove the remover service
hide the create sql view container when create a new layer
initialize the Availability _ availability variable to Availability . UNAVAILABLE to ensure the variable is initialized with a default value of Availability . UNAVAILABLE
updated method signatures and logic in ` FetchInvDataMsgHandler ` , ` PbftDataSyncHandler ` , and ` SyncService `
chore : update gapic - generator - java version to 2.1 . 0 ( # 437 )
replaced the ` _ freeSpaceReclaimDisabled ` boolean with an ` _ freeSpaceReclaimQ ` integer and updated related methods accordingly
changed KDCOptions constants from public to private static and added a new class KdcDefaultOptions with a main method to improve encapsulation and
refactor writer initialization and assignment in Json . java to improve code clarity and ensure proper initialization of JsonWriter
updated formatting and structure in ProfilePager . java for consistency and clarity to improve code readability and maintainability
changed the method name from ` paintBackground ` to ` paintComponentBackground ` in the Slider class to improve clarity regarding the purpose of
added a new method ` valueFromClassConstant ` to retrieve configuration values from class constants to enhance flexibility in configuring object values by allowing
[ hotfix ] [ kafka ] add log for kafka service initialization failure
updated the ` RESOURCES _ TO _ ALWAYS _ ACQUIRE ` set type from ` Set ` to ` ImmutableSet ` to include additional resources
messagebus now support the ' default - output ' option for the output channel .
added keywords retrieval and indexing functionality in HTMLDocument . java and implemented a test case in TestDemo . java to ensure proper handling of keywords in
updated SDK version check from S to R in FileUploader . java to ensure compatibility with the latest Android resources
modified the initialization of the _ addresses list in MemcachedSessionDataMapFactory to ensure _ addresses is only initialized if it is not null to avoid unnecessary
replaced the instantiation of ` CorrespondenceSubclassToFactoryCall ` with the class reference ` CorrespondenceSubclassToFactoryCall
refactor Builder class for improved readability to enhance maintainability and facilitate future updates
update isbntobibtexfetcher to use http : / / www . ebook . de / tools / isbn2bibtex
[ gr - 20663 ] fix engine leak in polyglot exception handling .
added null check for text before firing data change event to prevent potential NullPointerException when text is null
move some stuff into the sentimentmodel so that it can be use by the sentimentparser .
added trimming of whitespace from the line variable in SuffixURLFilter . java to ensure consistent URL processing by removing leading and trailing whitespace
added a check to return early if the player is in Godmode to optimize performance by avoiding unnecessary processing when in Godmode
textinputdialogw : use app . unregisterpopup ( wrappedpopup ) instead of app . registerpopup ( this )
modified constructors in LinkedHashMapCache and TCache classes to remove the accessOrder parameter to simplify the constructor signature and improve cache performance
replaced ` _ channel . close ( ) ` with ` close ( ) ` and adjusted the buffer length assignment in ` ChannelEndPoint . java
added null check for keyIndex and improved validation logic in FixAcidKeyIndex . java ; refactored KeyIndexBuilder instantiation in
updated exception handling in DirectUpdateHandler2 . java to use Locale . ROOT for formatting error messages to improve clarity of error reporting by explicitly
make defaultjavalloweringprovider use the store check guard for canonicalization .
[ gr - 16905 ] move the check for exception dispatch out of the loop .
improve detection of buginstance variance in viewfilter
replaced ` BuildTarget . copyOf ( unstrippedTarget ) ` with ` buildTarget ` and added ` @ JsonIgnore ` annotation to
refactor SqlRunner class to improve code structure to enhance maintainability and readability of the code
changed the data type of ` date _ taken ` from ` String ` to ` long ` in ` InstantUploadBroadcastReceiver ` and ` File
renamed ` knownApis ` to ` knownSdks ` and updated related methods for better clarity to improve code readability and maintain
replace progressindicator with confidenceprogressindicator in createofferview
updated user agent header check from " Cling / " to " UMS / " across multiple files to accurately reflect the application ' s
add ` ` forceiterate ' ' parameter to ` ` iteratebpt ' ' method to allow for optional iteration of blockindex
change the message view type in crowdfundingchatadapter from noflex to message
replaced ` memEncodeUTF16 ` with ` memEncodeASCII ` for name encoding in ` LinuxLibrary . java ` and ` MacOS
simplify expression , a suggest by valerybokov
updated the ` insert ` method to remove the ` BufferedImage ` parameter and added padding handling in the ` TexturePacker ` class to simplify image
refactor RefactorModule to use a default apply method and streamline source visitor collection to improve code readability and maintainability by reducing
added methods to retrieve child elements by name and recursive retrieval to enhance XML manipulation capabilities by allowing retrieval of child elements by name
set the " Content - Charset " header in HttpSolrServer to " UTF - 8 " to ensure proper handling of character encoding in HTTP requests
updated SystemUiController to use a new flag annotation and modified UI state management in TaskThumbnailView and AllAppsTransitionController to enhance code maintain
removed the private ClientConfigurationService variable from IntrospectingTokenService . java to simplify access to the clientService variable
hive - 15419 : hiverecordset . open ( ) should provide more information when fail to open hive split
removed the ownerId field and its initialization from NodeEntry . java to streamline the code by eliminating unnecessary fields
rename backup . rightafter - > backup . rightafter - fix typo
added score calculation in the merge method of TextFragment to ensure the correct score is maintained during the merging process
removed the private Digester field from Md4PasswordEncoder . java to clean up unused code and improve maintainability
added validation to ensure maximumUnimprovedStepCount is greater than or equal to 0 to ensure that maximumUnimprovedStepCount
added a check to return early if no currently opened editors are active to improve performance by avoiding unnecessary processing when no editors are open
replaced calls to ` Mockito . verify ( mock ) ` with direct calls to ` Mockito . verify ( mock ) ` and added
updated ClassLoader initialization to use PathScanner . class . getClassLoader ( ) instead of Thread . currentThread ( ) to ensure the correct class loader is used
( chore ) camel - code - first : migrate ` ` sayhi2 ' ' method to ` ` completablefuture ' ' api
add log to abstractsplitbraintest for debug purpose
updated logout handling in DefaultLoginPageConfigurer and ServerHttpSecurity to check for null logoutConfigurer before adding the logout page generation filter to
[ giac ] do n ' t display the degree in the giac output for degree = 0
added logging functionality to DockerComposeContainer and created a corresponding test class to enhance logging capabilities and improve test coverage for DockerComposeContainer functionality
updated the generic type in the testMapping method signature to ensure proper type handling for ResultSetMapping
removed unused import statements from AmbariMetaInfoTest . java to clean up the code and improve readability
added a static method ` fromSupplier ` to the ` ThrowingSupplier ` class to provide a way to create a ` ThrowingSupplier `
replaced a ` break ` statement with a ` return ( true ) ` in ` ConsoleActivity . java ` to ensure the method returns a
camel - 14850 : camel - platform - http - add support for text body in camel - platform - http
added methods to handle platform - specific path separators in MorePaths . java and updated argument resolution in CopyStep . java and AarWithLib
added a null check for authorizationContext ' s getParams before processing to avoid potential NullPointerExceptions when the params are not available
replaced the ` loadLibraryOnlyIfPresent ` method with ` throwExceptionIfFail ( ) ` and added a new method ` throwExceptionIfFail
updated SDK version from 4611349 to 4514284 and added unit tests for TextToSpeech ' s speak functionality to ensure compatibility
queuetransactionlog : add hashcode and equal method to queuetransactionlog
added ` enableSqlWithoutProfile ` property and its getter / setter in ` JdbcEnvironmentProperties ` and ` JdbcEnvironmentRepository ` to control SQL
added a try - finally block around the data assignment in the write method to ensure proper resource management and prevent potential memory leaks
use eventgenerator . fromfunction instead of cast to supplier in modloadingstage . createregistries
updated date parameter from ' date ' to ' calendar ' in DateUtils . java and modified the test assertion in FontParsersTest . java to
updated ` loadValue ` and ` getThreadInfo ` methods in ` CachedThreadStatesGaugeSet ` and ` ThreadStatesGaugeSetTest ` to
added a new protected variable ` prevTlogOnPrecommit ` and modified a sleep duration in ` LeaderTragicEventTest ` to
updated the job file reference from FastAsyncWorldEdit - P2 - V6 to FastAsyncWorldEdit - 1.17 to ensure compatibility
refactor file handling in SegmentGeneratorConfig to ensure output directories are created if they do not exist to improve robustness and prevent potential NullPointerExceptions
added a new method ` calculateNormalNewell ` to calculate the normal vector of an object using a given object and a face to improve code
updated the ` find ` method to include ` IdentityZoneId ` as a parameter and modified the query to use it to ensure the correct identity
refactor SpanCollector class to improve code readability to enhance maintainability and facilitate future feature additions
added a null check for the current session before accessing its session info to prevent potential NullPointerExceptions when accessing session information
refactor TransactionIsolationLevel class for improved clarity to enhance maintainability and readability of the code
updated method names from ` printLVgroups ` to ` printLogicalVolumegroups ` in ` OshiController . java
added thread name setting for the current thread in TestSession . java to improve debugging by providing clearer context for the current thread
refactor CookieManager class to improve cookie handling logic to enhance security and maintainability of cookie management functionality
replaced the manual creation of an ArrayList of ComponentKey with a direct return of an empty ArrayList to simplify the code by eliminating unnecessary
added OverviewToAllAppsTouchController to the list in RecentsUiFactory . java to enhance user interaction by allowing users to view
refactor hotseat scaling and translation handling in LauncherState and WorkspaceStateTransitionAnimation classes to improve code clarity and maintainability by
added a check for JUnitRule class names in the DefaultStackTraceCleaner and created a new test in StackTraceFilterTest to ensure that only
updated imports and buffer handling in MappedResizeableBuffer . java for improved clarity and functionality to enhance code readability and maintainability while
added a private BalanceListener variable and modified balance listener management in DepositListItem . java to improve code clarity and manage balance listeners more
update color conversion logic in RealisticRenderer to handle different edge modes to ensure correct color assignment based on edge mode
added null check for httpClientResponse in HttpClientBeanPostProcessor and updated log initialization syntax in multiple test classes to improve robustness by preventing null
fix ( gl200 ) : remove patternutil . checkpattern ( )
refactor playback time checks in FullDetailsActivity to use a temporary variable to improve code readability and maintainability by reducing redundancy
added elliptic handling and improved token matching logic in SpanishXMLTreeReader to enhance the accuracy of elliptic node detection and
add a check to clear the DC when the first value is an empty string in InstallItem . java to ensure that empty DC values do not
modify ReactiveLoadBalancerClientFilter to set the scheme based on the security status of the retrieved instance to ensure correct protocol handling for secure instances in the
http : / / issues . apache . org / jira / browse / amq - 4237 - fix duplicate bytebuffer creation
removed the final modifier from the fullFilePathFromClassName method in NativeImageDebugInfoProvider . java to allow for method overriding in subclasses
replaced anonymous inner class with a lambda expression for the Correspondence creation in ShadowBackupManagerTest . java to improve code readability and
updated references from " US " to " EN " for language support in LocaleProviderAdapter and LocaleDataMetaInfo to standardize terminology and
removed redundant null check for redeemData in LocalTransactionSigner . java to simplify the condition for better readability and maintainability
add a new file minecraftforgeclient . java that do n ' t need to be in the src folder anymore .
added a return statement to the TxCacheDB class to ensure proper termination of the method execution
update import statements to use the jdk . internal . org . objectweb . asm package instead of com . sun . xml . internal .
refactor FastDictionary class implementation to improve performance and maintainability of the code
fix for http : / / issues . apache . org / bugzilla / show _ bug . cgi ? id = 5782 :
updated the parameters of the GROUND _ HIT and SIMULATION _ END instances in FlightEventsTest . java to adjust the accuracy of
chore : upgrade protobuf to vendored vendored grpc ( # 15418 )
replaced target . addNamespaceDeclaration with newElement . addNamespaceDeclaration in SaajStaxWriter . java to ensure the namespace declaration is
update instructorfeedbackresultspagedata to include session name and course id in profile picture link
added support for alphabetic and numeric sequence in long passwords in DefaultPasswordValidator to enhance password validation flexibility by allowing short passwords
danielwagnerhall : increase the default timeout to 20 second
removed the JUnit Test annotation from ProxyClassSerializationTest . java to simplify the test suite by eliminating unnecessary dependencies
updated string concatenation syntax in DLNAMediaInfo . java to improve readability and maintainability of the code
truffle : remove speculative guard movement phase from id tier .
added checks to prevent overriding of AuthenticationManager bean definitions in the AuthenticationManagerBeanDefinitionParser to ensure proper handling of authentication managers in the application context
updated conditions and logic for handling forwarded request fields in ForwardedRequestCustomizer . java and added corresponding test cases in ForwardedRequestCustomizer
set the StringBuilder length to zero in ConsoleReader . java to ensure the StringBuilder is reset before further operations
changed access modifiers of allowedRoles and disallowedRoles from private to protected to allow subclasses to access these lists
update OpenIDE - Module - Specification - Version and OpenIDE - Module - Specification - Specification to reflect new versioning and improvements to
hbase - 25819 make tl wrap size configurable in hbase - server . netty . tls . wrapsize
updated multiple Java files related to CookieStore , HttpURLPermission , Inet4Address , Inet6Address , ProtocolFamily , SocketOption , and
updated FixedLengthTokenizerTests to use JUnit 4 and added new test cases to ensure proper exception handling for incorrect string lengths and ranges with whitespace
added protocol binding validation in OpenSamlAuthenticationRequestFactory and created corresponding tests to enhance protocol binding flexibility and ensure only valid bindings are accepted
updated DepthController . java to use AttachedSurfaceControl for applying SurfaceControl transactions to improve surface control behavior by ensuring transactions are applied on the
update asciidoctor version to 2.5 . x for release
hbase - 25819 prepreparebulkload and precleanupbulkload should be create ( sergey shelukhin )
adjusted the subList method parameters in TsFileManagement . java and updated measurement schemas in MergeTaskTest . java to ensure correct index is used
camel - 16400 : fixed the issue that genericfileconverter can not convert to inputstream .
added a login method to the ShardManager interface and modified the build method to conditionally login to enhance security by allowing the login process to be
removed unnecessary whitespace in DeleteGlobalRef method call to improve code readability and maintain consistency
updated the table name in the AbstractRegisteredService class from " RegisteredServiceImpl _ Properties " to " RegisteredServiceImpl _ Props " to
added a check for completion status before terminating the response in HttpSender . java to ensure that the response is only terminated when it is marked as
added check for userstudent before check if giver be equal to student
added checks for linked profile permissions and updated profile path handling in BMPImageReader to enhance security by restricting access to linked profiles
updated the parameters of ` setSimpleCuboid ` method calls in ` MainUtil . java ` to correct the calculation of ` PlotBlock
pmd : run pmdpentool in a separate thread to wait for the file to be check
refactor grid presenter initialization to use a dedicated method and set grid sizes based on poster size setting to improve code readability and maintainability
changed return values from false to true in ContributionsListFragment . java to ensure the correct functionality of the ContributionsListFragment component
added a test case for skipping the range query in DistinctPrefixFilterIT . java and modified scan handling in BaseResultIterators . java
pdfbox - 4892 : add test for checkbox group property , a suggest by valerybokov
added a method ` getFileLastModified ` to retrieve the last modified timestamp of a file to provide functionality for retrieving the last modified timestamp of a file
added a check for the " metaTable " property in the file format validation logic to ensure the correct file format is used for both AVRO
use combobox for currency selection in cashdeposit form
changed catch block from IOException to Throwable in WriteFlusher . java to improve error handling by catching all possible exceptions
added a new boolean variable ` mStartedEnterAnimation ` and modified content handling logic in ` IconRecentsView . java ` to improve animation
added a new public String field ` activeKeyId ` to the ` UaaConfiguration ` class to provide a way to store the active key ID
updated RuleAction annotations and method names in SendMailActions . java for better clarity and consistency to enhance code readability and maintainability by
changed the ` isActive ` variable from ` boolean ` to ` volatile boolean ` to ensure thread - safe access to the ` isActive ` variable
changed the method ` isDesc ( ) ` to ` isAsc ( ) ` in ` OrderByExpressionContext ` and ` SelectionPartiallyOrdered
fix classcastexception for stringbuilder . append ( charsequence )
added a condition to check if the application name is equal to the OWNCLOUD _ APP _ NAME before proceeding to ensure that the
hbase - 2698 masterfilesystem should not overwrite hbase . rootdir . perms if kerberos be enable
replaced instances of ` httpServletRequest ` with ` httpServletResponse ` in ` JakartaServletWebExchange ` and ` Javax
refactor Instant class to improve readability to enhance maintainability and ease of understanding for future developers
modified the state format from an integer to a String in multiple classes to ensure consistent handling of state formats and improve type safety
removed the type parameter from the log message in CentralAuthenticationServiceImpl . java and modified the ticket type check in AbstractTicket . java to
added IllegalArgumentException to the condition in PDICCBased . java to handle additional error cases
reordered the conditional check for file existence in AbstractFileResourceSet . java to improve code readability and maintainability
mng - 4893 : plugin parameter expression should use the path translator to align the path to the base directory .
move ByteStringCoder to org . apache . beam . sdk . extensions . protobuf and move it to org . apache . beam . sdk .
updated JpaQueryParsingToken to include a boolean parameter in HqlQueryRenderer and added a test for signed numeric literals in HqlQuery
refactor LaunchLug and RailGuideHandler to use a new parameter for parent length and update instance count and angle offset calculations to improve
removed the getNonceFactory method implementation that returns null in BitmexStreamingExchange . java to simplify the code by eliminating unnecessary method
replace string concatenation with parameterized logging in MailBinding . java to improve performance and readability of log messages
[ java ] make driverconductortest . java use default timer interval .
changed the initialization of loaded classes from true to false to disable class loading by default
added a call to grabFocus ( ) on the searchField to ensure the searchField is focused for better user experience
fix ( tl ) : fix sslengine capture bug in tlconnectionlogging
removed an assert statement and added a comment to clarify the test ' s purpose to improve code readability and maintainability by reducing
updated assertion message in TestSolrConfigHandler to include testServerBaseUrl to provide more context in error reporting for better debugging
updated imports and mock instances in CsrfWebFilterTests . java to replace HttpMethod with ServerHttpRequest and ServerWebExchange to improve test cl
updated the regex pattern in FilterResourcesStep . java to include a constant for density to improve readability and maintainability of the code
added buttonUIID handling and refactored UIID updates in ComponentGroup . java to improve clarity and maintainability of UIID generation
removed the check for DisplayMetrics . DENSITY _ 600 in the RecentsAnimationDeviceState . java file to simplify the condition for
added new files TestCloneArrayWithDifferentLengthConstness . java and TestArrayCopyWithLargeObjectAlignment . java to implement array cloning
added import for LuceneTestCase . AwaitsFix and annotated the ReplicationFactorTest class with @ AwaitsFix to indicate that
fixed - redissondexecutorservice # executefixed method do n ' t throw npe if nextstartdate be null . # 4
simplified the condition for determining if credentials need to be updated in FileDownloader and FileUploader to improve code readability and maintainability
added null check and closing logic for StoreFileScanner in Compactor . java to ensure proper resource management and prevent potential NullPointerExceptions
added default values for received byte , transmitted bytes , received packets , and transmitted packets in NetMetrics . java to ensure default values are
added nonce parameter and claims retrieval in TokenMvcMockTests to ensure the correct nonce is used for token claims verification
refactor multiple chart editor classes for consistency and clarity to improve maintainability and readability of the codebase
added width and height adjustments for formLayeredPane in Form . java to ensure proper layout management of the form layered pane
added a maxY method to the BrowserContentPane class to calculate the maximum Y - height of the owner if it exists to ensure proper layout adjustment
added a connection status check before closing the dialog in SharedDatabaseLoginDialogView to ensure that the dialog only closes when the database is connected to
replaced direct references to ` DOCKER _ COMMAND ` with ` Platform . DOCKER _ COMMAND ` in ` DockerTestUtils .
added a null check for the input stream before reading from the expected errors . txt in TestIsartorValidationFromClasspath . java to avoid
added a color parameter to the drawLeaveBehind method and updated its usage in TaskbarView , CellLayout , and PreviewBackground classes to
show an error dialog if the android studio plugin do not work with canary
cloudstack - 3892 : fix npe in listpublicipaddresses ( listpublicipaddresses , listpublicipaddresses , listpublic
removed modulePersistEnable and modulePersistDisable lists and their associated getter and setter methods from StartArgs . java to streamline module persistence handling and
updated argument validation logic in GeminiMarketDataService . java to allow for a length of greater than or equal to 1 to ensure
replaced HashSet with LinkedHashSet for the " questions " map in VerifyPasswordResetRequestAction . java to maintain insertion order in the flow scope
add a test case that demonstrate the use of the testrealmbase base class .
remove all the jasper setup jsp from the authcheckfilter , since they be no longer need
refactor scheduled runnables handling by introducing an ` isExecutingRunnable ` flag and reusing the ` run ` method to improve code
updated method signatures in AbstractCommandRunner , AuditCommandRunner , and CommandRunner to use varargs instead of String [ ] to improve method flexibility
refactor XML parsing logic to handle end - of - stream condition to improve robustness by handling potential end - of - stream errors
added a new test method ` testHorizPageOverflowHidden ` to ` TextVisualRegressionTest . java ` to handle horizontal page overflow
added pivot point adjustments for the arrow in DeepShortcutsContainer to ensure proper positioning of the arrow based on icon positioning
remove printstacktrace ( ) in case of interruptedexecutionexception ( # 8891 )
refactor updateThumbnail method to include a refreshView parameter to enhance control over thumbnail updates based on gesture state
pdfbox - 4892 : fix typo , a suggest by valerybokov
updated InternetAddress constructor to include a boolean parameter and modified hostname validation logic in HostnameFormatSpecifier to enhance flexibility in address handling and improve error
replaced instances of ` AuthenticatorActivity . this ` and ` OperationsService . this ` with ` this ` in multiple activity and service classes to
updated the maximum document ID handling in the SizeBasedDocIdSet and its iterator classes to ensure accurate tracking of document IDs and improve code cl
updated FileDialoger . java to include a new promptToOpenFile method with an existing filename parameter to enhance file opening functionality by allowing
updated widget and tab layout parameters in AppsCustomizePagedView . java and added a new method to update page counts to improve widget
refactor the way component coordinates are calculated and transformed in FlightConfiguration . java and update the corresponding tests in FlightConfigurationTest . java
( chore ) camel - spring - micrometer - history : use direct endpoint instead of seda
updated DateTimeFormatter initialization to use Locale . ROOT for date formatting to ensure consistent date formatting across different locales
added permission check to the dspaceobjectconverter to ensure that only non - admin user can access metadata
added a test method to check for missing required dimensions and metrics in StarTreeConfig to ensure proper handling of null values for dimension and metric
camel - 16400 : camel - spring - add support for dynamic and static recipient in camel - spring
refactor InlineLayoutBox and HoverListener to improve layout handling and repaint logic to enhance the flexibility and correctness of layout rendering based
refactor AuthenticatorActivity to use OperationsService for detecting authentication method to enhance the authentication process by integrating operations service features
